この 文書 について ... 
Python チュートリアル 
索引 
の 著作 権 は 、 Copyright 1993 , 1994 , 1995 , 1996 , 1997 , NikosDrakos , Computer Based Learning Unit , University ofLeeds , and Copyright 1997 , 1998 , RossMoore , Mathematics Department , Macquarie University , Sydney . と なっ て い ます 。 
Python ドキュメント の 
へ の 対応 は 、 Fred L . Drake , Jr . の 多大 な 努力 で 実現 し まし た 。 
オリジナル の ナビゲーションアイコン は 、 Christopher Petrilli による もの です 。 
マーク アップ の こと を 気 に する 必要 は あり ませ ん ; ドキュメンテーション チーム が 喜ん で 手配 し ます 。 
Python で の プログラミング に関する 疑問 など 、 この ドキュメント に 書か れ て いる 情報 の 使い方 について の 質問 は 、 日本 Python ユーザ 会 メーリングリスト で 行う と よい でしょ う 。 
Python ドキュメントインデクス 
序 
リリース 2 . 4 
平成 18 年 6 月 27 日 日本語 訳 : Python ドキュメント 翻訳 プロジェクト 
目次 
1 . Python へ の 意欲 を 高める 
1 . 1 ここ から どこ へ 
2 . Python インタプリタ を 使う 
2 . 1 インタプリタ を 起動 する 
2 . 1 . 1 引数 の 受け渡し 
2 . 1 . 2 対話 モード 
2 . 2 インタプリタ と その 環境 
2 . 2 . 1 エラー 処理 
2 . 2 . 2 実行 可能 な Python スクリプト 
2 . 2 . 3 ソース コード の 文字 コード 方式 ( encoding ) 
2 . 2 . 4 対話 モード 用 の 起動 時 実行 ファイル 
3 . 形式 ばら ない Python の 紹介 
3 . 1 Python を 電卓 として 使う 
3 . 1 . 1 数 
3 . 1 . 2 文字 列 
3 . 1 . 3 Unicode 文字 列 
3 . 1 . 4 リスト 
3 . 2 プログラミング へ の 第一歩 
4 . その他 の 制御 フロー ツール 
4 . 1 if 文 
4 . 2 for 文 
4 . 3 range () 関数 
4 . 4 break 文 と continue 文 と ループ の else 節 
4 . 5 pass 文 
4 . 6 関数 を 定義 する 
4 . 7 関数 定義 について もう少し 
4 . 7 . 1 デフォルト の 引数 値 
4 . 7 . 2 キーワード 引数 
4 . 7 . 3 任意 引数 リスト 
4 . 7 . 4 引数 リスト の アンパック 
4 . 7 . 5 ラムダ 形式 
4 . 7 . 6 ドキュメンテーション 文字 列 
5 . データ 構造 
5 . 1 リスト 型 について もう少し 
5 . 1 . 1 リスト を スタック として 使う 
5 . 1 . 2 リスト を キュー として 使う 
5 . 1 . 3 実用 的 な プログラミング ツール 
5 . 1 . 4 リスト の 内包 表記 
5 . 2 del 文 
5 . 3 タプル と シーケンス 
5 . 4 集合 型 
5 . 5 辞書 
5 . 6 ループ の テクニック 
5 . 7 条件 について もう少し 
5 . 8 シーケンス と その他 の 型 の 比較 
6 . モジュール 
6 . 1 モジュール について もう すこし 
6 . 1 . 1 モジュール 検索 パス 
6 . 1 . 2 `` コンパイル '' さ れ た Python ファイル 
6 . 2 標準 モジュール 
6 . 3 dir () 関数 
6 . 4 パッケージ 
6 . 4 . 1 パッケージ から * を import する 
6 . 4 . 2 パッケージ 内 で の 参照 
6 . 4 . 3 複数 ディレクトリ 中 の パッケージ 
7 . 入力 と 出力 
7 . 1 ファンシー な 出力 の 書式 化 
7 . 2 ファイル を 読み書き する 
7 . 2 . 1 ファイル オブジェクト の メソッド 
7 . 2 . 2 pickle モジュール 
8 . エラー と 例外 
8 . 1 構文 エラー 
8 . 2 例外 
8 . 3 例外 を 処理 する 
8 . 4 例外 を 送出 する 
8 . 5 ユーザ 定義 の 例外 
8 . 6 後片付け 動作 を 定義 する 
9 . クラス 
9 . 1 用語 について 一言 
9 . 2 Python の スコープ と 名前 空間 
9 . 3 クラス 初 見 
9 . 3 . 1 クラス 定義 の 構文 
9 . 3 . 2 クラス オブジェクト 
9 . 3 . 3 インスタンス オブジェクト 
9 . 3 . 4 メソッド オブジェクト 
9 . 4 いろいろ な 注意 点 
9 . 5 継承 
9 . 5 . 1 多重 継承 
9 . 6 プライベート 変数 
9 . 7 残り の は しばし 
9 . 7 . 1 例外 は クラス で あっ て も よい 
9 . 8 イテレータ ( iterator ) 
9 . 9 ジェネレータ ( generator ) 
9 . 10 ジェネレータ 式 
10 . 標準 ライブラリミニツアー 
10 . 1 オペレーティングシステム へ の インタフェース 
10 . 2 ファイル の ワイルドカード 表記 
10 . 3 コマンド ライン 引数 
10 . 4 エラー 出力 の リダイレクト と プログラム の 終了 
10 . 5 文字 列 の パターンマッチング 
10 . 6 数学 
10 . 7 インターネット へ の アクセス 
10 . 8 日 付 と 時刻 
10 . 9 データ 圧縮 
10 . 10 パフォーマンス の 計測 
10 . 11 品質 管理 
10 . 12 バッテリー 同 梱 
11 . 標準 ライブラリミニツアー - その 2 
11 . 1 出力 の フォーマット 
11 . 2 文字 列 テンプレート 
11 . 3 バイナリデータレコード の 操作 
11 . 4 マルチスレッド 処理 
11 . 5 ログ 記録 
11 . 6 弱 参照 
11 . 7 リスト 操作 の ため の ツール 
11 . 8 10 進 浮動 小数 演算 
12 . さあ 何 を ? 
A . 対話 入力 編集 と ヒストリ 置換 
A . 1 行 編集 
A . 2 ヒストリ 置換 
A . 3 キー 割り当て 
A . 4 解説 
B . 浮動 小数点 演算 、 その 問題 と 制限 
B . 1 表現 エラー 
C . 歴史 と ライセンス 
C . 1 Python の 歴史 
E . 用語 集 
リリース 2 . 4 , 平成 18 年 6 月 27 日 更新 
ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
この ドキュメント について ... 
を ご覧 ください 。 
Python / C API リファレンス マニュアル 
5 . 9 比較 ( comparison ) 
Python リファレンス マニュアル 
5 . 8 ビット 単位 演算 の 二 項 演算 ( binary bit - wise 
5 . 式 ( expression ) 
5 . 10 ブール 演算 ( boolean operation ) 
C 言語 と 違っ て 、 Python における 比較 演算 子 は 同じ 優先 順位 を もっ て おり 、 全て の 算術 演算 子 、 シフト 演算 子 、 ビット 単位 演算 子 より も 低く なっ て い ます 。 
また 、 a b c が 数学 で 伝統 的 に 用い られ て いる の と 同じ 解釈 に なる 点 も C 言語 と 違い ます : 
の よう な 書き方 は 、 現在 で は 古い 書き方 と みなさ れ て い ます 。 演算 子 , , ==, =, =, および != は 、 二つ の オブジェクト 間 の 値 を 比較 し ます 。 
オブジェクト は 同じ 型 で ある 必要 は あり ませ ん 。 双方 の オブジェクト が 数値 で あれ ば 、 共通 型 へ の 変換 が 行わ れ ます 。 
それ 以外 の 場合 、 異なる 型 の オブジェクト は 常に 不等 で ある と みなさ れ 、 一貫 し て は いる が 規定 さ れ て い ない 方法 で 並べ られ ます 。 ( この よう な 比較 演算 の 変則 的 な 定義 は 、 ソート の よう な 操作 や 、 in および not in といった 演算 子 の 定義 を 単純 化 する ため の もの です 。 
将来 、 異なる 型 の オブジェクト 間 における 比較 規則 は 変更 さ れる かも しれ ませ ん 。 ) 同じ 型 の オブジェクト 間 における 比較 は 、 型 によって 異なり ます : 
数値 間 の 比較 で は 、 算術 的 な 比較 が 行わ れ ます 。 
文字 列 間 の 比較 で は 、 各 文字 に対する 等価 な 数値 型 ( 組み込み 関数 ord () の 結果 ) を 使っ て 辞書 的 な ( lexicographically ) 比較 が 行わ れ ます 。 
Unicode および 8 ビット 文字 列 は 、 この 動作 に関して は 完全 に 互換 です 。 
タプル や リスト 間 の 比較 で は 、 対応 する 各 要素 の 比較 結果 を 使っ て 辞書 的 な 比較 が 行わ れ ます 。 
この ため 、 二つ の シーケンス を 等価 に する ため に は 、 各 要素 が 完全 に 等価 で なく て は なら ず 、 シーケンス は 同じ 型 で 同じ 長 さ を もっ て い なけれ ば なり ませ ん 。 二つ の シーケンス が 等価 で ない 場合 、 異なる 値 を 持つ 最初 の 要素 間 で の 比較 に 従っ た 順序 関係 に なり ます 。 
例えば 、 cmp ([ 1 , 2 , x ], [ 1 , 2 , y ]) は cmp ( x , y ) と 等しい 結果 を 返し ます 。 
片方 の 要素 に 対応 する 要素 が 他方 に ない 場合 、 より 短い シーケンス が 前 に 並び ます ( 例えば 、 [ 1 , 2 ] [ 1 , 2 , 3 ] と なり ます )。 
マップ ( 辞書 ) 間 の 比較 で は 、 ( key , value ) から なる リスト を ソート し た もの が 等しい 場合 に 等価 に なり ます 。 
等価 性 評価 以外 の 結果 は 一貫 し た やり かた で 解決 さ れる か 、 定義 さ れ ない か の いずれ か です 。 
その他 の ほとんど の 型 の 比較 で は 、 同じ オブジェクト で ない かぎり 等価 に は なり ませ ん 。 ある オブジェクト の 他 の オブジェクト に対する 大小 関係 は 任意 に 決定 さ れ 、 一つ の プログラム の 実行 中 は 一貫 し た もの と なり ます 。 
演算 子 in および not in は 、 集合 内 の 要素 で ある か どう か ( メンバシップ 、 membership ) を 調べ ます 。 
は 、 x が 集合 s の メンバ で ある 場合 に は 真 と なり 、 それ 以外 の 場合 に は 偽 と なり ます 。 
の 否定 ( negation ) を 返し ます 。 
集合 メンバシップテスト は 、 伝統 的 に は シーケンス 型 に 限定 さ れ て き まし た ; すなわち 、 ある オブジェクト が ある 集合 の メンバ と なる の は 、 集合 が シーケンス 型 で あり 、 シーケンス が オブジェクト と 等価 な 要素 を 含む 場合 でし た 。 
しかしながら 、 現在 で は オブジェクト が シーケンス で なく て も メンバシップテスト を サポート し て い ます 。 
特に 、 辞書 型 で は 、 
と 書く こと で 、 うまい 具合 に メンバシップテスト を サポート し て い ます ; 他 の マップ 型 も これ に 倣っ て いる かも しれ ませ ん 。 リスト や タプル 型 について は 、 
x in y は 
x == y [ i ] と なる よう な インデクス i が 存在 する とき 、 かつ その とき に 限り 真に なり ます 。 
Unicode 文字 列 または 文字 列 型 について は 、 
は x が y の 部分 文字 列 で ある とき 、 かつ その とき に 限り 真に なり ます 。 
この 演算 と 等価 な テスト は y . find ( x ) != - 1 です 。 
__ contains __() メソッド の 定義 さ れ た ユーザ 定義 クラス で は 、 
が 真 と なる の は 
y .__ contains __( x ) が 真 と なる とき 、 かつ その とき に 限り ます 。 __ contains __() は 定義 し て い ない が __ getitem __() は 定義 し て いる よう な ユーザ 定義 クラス で は 、 
x == y [ i ] と なる よう な 非負 の 整数 インデクス i が 存在 する とき 、 かつ その とき に かぎり 真 と なり ます 。 
インデクス i が 負 で ある 場合 に IndexError 例外 が 送出 さ れる こと は あり ませ ん 。 
( 別 の 何らかの 例外 が 送出 さ れ た 場合 、 例外 は in から 送出 さ れ た か の よう に なり ます )。 演算 子 not in は 、 in の 真 値 に対する 逆転 として 定義 さ れ て い ます 。 
演算 子 is および is not は 、 オブジェクト の アイデンティティ に対する テスト を 行い ます : 
は 、 x と y が 同じ オブジェクト を 指す とき 、 かつ その とき に 限り 真に なり ます 。 
は 、 is の 真 値 を 逆転 し た もの に なり ます 。 
... し た もの が 等しい 場合 に 等価 に なり ます 。 
実装 で は 、 この 演算 を リスト を 構築 し たり ソート し たり する こと なく 効率 的 に 行い ます 。 
... の いずれ か です 。 
Python の 初期 の バージョン で は 、 ソート さ れ た ( key , value ) の リスト に対して 辞書 的 な 比較 を 行っ て い まし た が 、 これ は 等価 性 の 計算 の よう な よく ある 操作 を 実現 する に は 非常 に コスト の 高い 操作 でし た 。 
もっと 以前 の バージョン の Python で は 、 辞書 は アイデンティティ だけ で 比較 さ れ て い まし た 。 しかし この 仕様 は 、 {} と の 比較 によって 辞書 が 空 で ある か 確かめ られる と 期待 し て い た 人々 を 混乱 さ せ て い まし た 。 
Python ドキュメント の 作成 
1 初め に 
2 ディレクトリ 構造 
3 スタイル ガイド 
4 LaTeX 入門 
4 . 1 構文 法 
4 . 2 階層 構造 
4 . 3 よく 使わ れる 環境 
5 ドキュメント クラス 
6 特殊 マーク アップ 構文 
6 . 1 プリアンブル 用 の マーク アップ 
6 . 2 メタ 情報 マーク アップ 
6 . 3 情報 単位 
6 . 4 コード の 例示 
6 . 5 インラインマークアップ 
6 . 6 雑多 な テキストマークアップ 
6 . 7 モジュール 特有 の マーク アップ 
6 . 8 ライブラリ レベル の マーク アップ 
6 . 9 表 の マーク アップ 
6 . 10 参考 文献 リスト の マーク アップ 
6 . 11 索引 生成 の ため の マーク アップ 
6 . 12 文法 における 導出 の 表示 
6 . 13 グラフィカルインタフェース の 構成 要素 
7 処理 ツール 
7 . 1 外部 ツール 
7 . 2 内部 用 ツール 
7 . 3 Cygwin で の 作業 
8 画像 の 取り込み 
9 将来 の 方向 性 
9 . 1 構造 化 ドキュメント 
9 . 2 議論 の 場 
ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 この ドキュメント について ... 
11 . 22 . 3 DateTime オブジェクト 
Python ライブラリ リファレンス 
11 . 22 . 2 Boolean オブジェクト 
11 . 22 . 4 Binary オブジェクト 
この クラス は 、 エポック から の 秒 数 、 タプル で 表現 さ れ た 時刻 、 ISO 8061 形式 の 時間 / 日付 文字 列 の 何れ か で 初期 化 する こと が でき ます 。 
文字 列 を インスタンス の 新しい 時間 を 示す 値 として 指定 し ます 。 
出力 ストリーム オブジェクト out に 、 XML - RPC エン コーディング の DateTime 値 を 出力 し ます 。 
また 、 __ cmp __ と __ repr __ で 定義 さ れる 演算 子 を 使用 する こと が でき ます 。 
5 . 他 の アプリケーション へ の Python の 埋め込み 
Python インタプリタ の 拡張 と 埋め込み 
4 . 3 DLL 使用 の 実際 
Python インタプリタ の 拡張 と 埋め込み 
5 . 1 高水準 の 埋め込み 
5 . 他 の アプリケーション へ の Python の 埋め込み 
前章 で は 、 Python を 拡張 する 方法 、 すなわち C 関数 の ライブラリ を Python に 結びつけ て 機能 を 拡張 する 方法 について 述べ まし た 。 
同じ よう な こと を 別 の 方法 で も 実行 でき ます : それ は 、 自分 の C / C ++ アプリケーション に Python を 埋め込ん で 機能 を 強化 する 、 という もの です 。 
Python の 埋め込み は Python の 拡張 と 似 て い ます が 、 全く 同じ という わけ で は あり ませ ん 。 
その 違い は 、 Python を 拡張 し た 場合 に は アプリケーション の メイン プログラム は 依然として Python インタプリタ で ある 一方 、 Python を 組み込み ん だ 場合 に は 、 メイン プログラム に は Python が 関係 し ない -- その 代わり に 、 アプリケーション の ある 一部分 が 時折 Python インタプリタ を 呼び出し て 何らかの Python コード を 実行 さ せる -- かも しれ ない 、 という こと です 。 従って 、 Python の 埋め込み を 行う 場合 、 自作 の メイン プログラム を 提供 し なけれ ば なり ませ ん 。 
メイン プログラム が やら なけれ ば なら ない こと の 一つ に 、 Python インタプリタ の 初期 化 が あり ます 。 
とにかく 少なくとも 関数 Py _ Initialize () ( Mac OS なら PyMac _ Initialize ()) を 呼び出さ ね ば なり ませ ん 。 
オプション として 、 Python 側 に コマンド ライン 引数 を 渡す ため に 関数 呼び出し を 行い ます 。 
その後 、 アプリケーション の どこ でも インタプリタ を 呼び出せる よう に なり ます 。 インタプリタ を 呼び出す に は 、 異なる いくつ か の 方法 が あり ます : Python 文 が 入っ た 文字 列 を PyRun _ SimpleString () に 渡す 、 stdio ファイル ポインタ と ファイル 名 ( これ は エラーメッセージ 内 で コード を 識別 する ため だけ の もの です ) を PyRun _ SimpleFile () に 渡す 、 といった 具合 です 。 
これ まで の 各 章 で 説明 し た 低 水準 の 操作 を 呼び出し て 、 Python オブジェクト を 構築 し たり 使用 し たり も でき ます 。 Python の 埋め込み を 行っ て いる 簡単 な デモ は 、 ソース 配布 物 の Demo / embed / ディレクトリ に あり ます 。 
参考 : 
5 . 1 高水準 の 埋め込み 
5 . 2 超 高水準 の 埋め込み から 踏み出す : 概要 
5 . 3 純粋 な 埋め込み 
5 . 4 埋め込ま れ た Python の 拡張 
5 . 5 C ++ による Python の 埋め込み 
5 . 6 リンク に関する 要件 
5 . 1 高水準 の 埋め込み 
4 . 2 例外 
4 . 1 . 1 動的 な 機能 と の やりとり 
4 . 実行 モデル 
例外 と は 、 コード ブロック の 通常 の 制御 フロー を 中断 し て 、 エラー や その他 の 例外 的 な 状況 を 処理 できる よう に する ため の 手段 です 。 
例外 は エラー が 検出 さ れ た 時点 で 送出 ( raise ) 
さ れ ます ; 例外 は 、 エラー が 発生 部 の 周辺 の コード ブロック か 、 エラー が 発生 し た コード ブロック 直接 または 間接 的 に 呼び出し て いる コード ブロック で 処理 ( handle ) する こと が でき ます 。 
Python インタプリタ は 、 ランタイムエラー ( ゼロ による 除算 など ) が 検出 さ れる と 例外 を 送出 し ます 。 
Python プログラム から 、 raise 文 を 使っ て 明示 的 に 例外 を 送出 する こと も でき ます 。 例外 ハンドラ ( exception handler ) は 、 try ... except 文 で 指定 する こと が でき ます 。 
ある 例外 に どの except 節 が 一致 する か の 選択 は 、 オブジェクト の アイデンティティ に 基づい て 行わ れ ます 。 
except 節 は 、 同じ クラス の 例外 か 、 基底 クラス の 例外 しか 参照 し ませ ん 。 例外 が 発行 さ れる と 、 オブジェクト ( None に なる こと も あり ます ) が 例外 の 値 ( value ) として 渡さ れ ます ; この オブジェクト が 例外 ハンドラ の 選択 自体 に 影響 する こと は あり ませ ん が 、 選択 さ れ た 例外 ハンドラ に 付帯 情報 として 渡さ れ ます 。 
例外 が クラス の 場合 、 オブジェクト は 送出 さ れ た 例外 クラス の インスタンス で なけれ ば なり ませ ん 。 
警告 : 例外 に対する メッセージ は 、 Python API 仕様 に は 含ま れ て い ませ ん 。 
メッセージ の 内容 は 、 ある Python の バージョン から 次 の バージョン に なる とき に 、 警告 なし に 変更 さ れる 可能 性 が あり ます 。 したがって 、 複数 バージョン の インタプリタ で 動作 する よう な コード において は 、 例外 メッセージ の 内容 に 依存 し た 記述 を す べき で は あり ませ ん 。 
try 文 について は 、 7 . 4 節 、 raise 文 について は 6 . 9 節 も 参照 し て ください 。 
Copyright 2001 - 2004 Python Software Foundation . All rights reserved . Copyright 2000 BeOpen . com . All rights reserved . Copyright 1995 - 2000 Corporation for National Research Initiatives . All rights reserved . Copyright 1991 - 1995 Stichting Mathematisch Centrum . All rights reserved . Translation Copyright 2003 , 2004 Python Document Japanese Translation Project . All rights reserved . ライセンス および 許諾 に関する 完全 な 情報 は 、 この ドキュメント の 末尾 を 参照 し て ください 。 
概要 : 
Python は インタプリタ 形式 の 、 オブジェクト 指向 の プログラミング 言語 です 。 
この ドキュメント で は 、 Python インタプリタ を 拡張 する ため に C や C ++ で モジュール を 書く 方法 について 述べ ます 。 
拡張 モジュール で は 、 新た な 関数 を 定義 できる だけ で なく 、 新た な オブジェクト 型 と その メソッド も 定義 でき ます 。 
この ドキュメント で は また 、 Python インタプリタ を 別 の アプリケーション に 埋め込み ( embedding )、 拡張 言語 として 使う 方法 について も 述べ ます 。 
この ドキュメント の 最後 に は 、 オペレーティングシステム 上 で ( 実行 時 に ) 動的 に 拡張 モジュール を ロード する 機能 が サポート さ れ て いる 場合 に 、 動的 ロード 可能 な 拡張 モジュール を コンパイル し て リンク する 方法 を 示し ます 。 この ドキュメント で は 、 読者 は Python について 基礎 的 な 知識 を 持ち合わせ て いる もの と 仮定 し て い ます 。 
形式 ばら ない Python 言語 の 入門 に は 、 
を 読ん で ください 。 
を 読め ば 、 Python 言語 について より 形式 的 な 定義 を 得 られ ます 。 
また 、 
では 、 Python に 広い 適用 範囲 を もたらし て いる 既存 の オブジェクト 型 、 関数 、 および ( 組み込み 、 および Python で 書か れ た ものの 両方 の ) モジュール について 解説 し て い ます 。 Python / C API 全体 の 詳しい 説明 は 、 別 の ドキュメント で ある 、 
を 参照 し て ください 。 
Python モジュール の 配布 
11 日本語 訳 について 
エ 
CCompiler ( distutils . ccompiler 、 ホ・ッ・ 鬣 ケ ) 
Command ( distutils . cmd 、 ホ・ッ・ 鬣 ケ ) 
FancyGetopt ( distutils . fancy _ getopt 、 ホ・ッ・ 鬣 ケ ) 
TextFile ( distutils . text _ file 、 ホ・ッ・ 鬣 ケ ) 
add _ include _ dir () ( CCompiler 、 ホ ・ 皈 ス・テ・ノ ) 
add _ library () ( CCompiler 、 ホ ・ 皈 ス・テ・ノ ) 
add _ library _ dir () ( CCompiler 、 ホ ・ 皈 ス・テ・ノ ) 
add _ link _ object () ( CCompiler 、 ホ ・ 皈 ス・テ・ノ ) 
add _ runtime _ library _ dir () ( CCompiler 、 ホ ・ 皈 ス・テ・ノ ) 
announce () ( CCompiler 、 ホ ・ 皈 ス・テ・ノ ) 
byte _ compile () ( distutils . util ・ 筵 ク ・ 蝪 シ ・ 
change _ root () ( distutils . util モジュール ) 
check _ environ () ( distutils . util モジュール ) 
close () ( TextFile の メソッド ) 
Command ( distutils . core の クラス ) 
compile () ( CCompiler の メソッド ) 
convert _ path () ( distutils . util モジュール ) 
copy _ file () ( distutils . file _ util モジュール ) 
copy _ tree () ( distutils . dir _ util モジュール ) 
create _ static _ lib () ( CCompiler の メソッド ) 
create _ tree () ( distutils . dir _ util モジュール ) 
customize _ compiler () ( distutils . sysconfig モジュール ) 
debug _ print () ( CCompiler の メソッド ) 
define _ macro () ( CCompiler の メソッド ) 
detect _ language () ( CCompiler の メソッド ) 
Distribution ( distutils . core の クラス ) 
distutils . archive _ util ( standard モジュール ) 
distutils . bcppcompiler ( standard モジュール ) 
distutils . ccompiler ( standard モジュール ) 
distutils . cmd ( standard モジュール ) 
distutils . command ( standard モジュール ) 
distutils . command . bdist ( standard モジュール ) 
distutils . command . bdist _ dumb ( standard モジュール ) 
distutils . command . bdist _ packager ( standard モジュール ) 
distutils . command . bdist _ rpm ( standard モジュール ) 
distutils . command . bdist _ wininst ( standard モジュール ) 
distutils . command . build ( standard モジュール ) 
distutils . command . build _ clib ( standard モジュール ) 
distutils . command . build _ ext ( standard モジュール ) 
distutils . command . build _ py ( standard モジュール ) 
distutils . command . build _ scripts ( standard モジュール ) 
distutils . command . clean ( standard モジュール ) 
distutils . command . config ( standard モジュール ) 
distutils . command . install ( standard モジュール ) 
distutils . command . install _ data ( standard モジュール ) 
distutils . command . install _ headers ( standard モジュール ) 
distutils . command . install _ lib ( standard モジュール ) 
distutils . command . install _ scripts ( standard モジュール ) 
distutils . command . register ( standard モジュール ) 
distutils . command . sdist ( standard モジュール ) 
distutils . core ( standard モジュール ) 
distutils . cygwinccompiler ( standard モジュール ) 
distutils . debug ( standard モジュール ) 
distutils . dep _ util ( standard モジュール ) 
distutils . dir _ util ( standard モジュール ) 
distutils . dist ( standard モジュール ) 
distutils . emxccompiler ( standard モジュール ) 
distutils . errors ( standard モジュール ) 
distutils . extension ( standard モジュール ) 
distutils . fancy _ getopt ( standard モジュール ) 
distutils . file _ util ( standard モジュール ) 
distutils . filelist ( standard モジュール ) 
distutils . log ( standard モジュール ) 
distutils . msvccompiler ( standard モジュール ) 
distutils . mwerkscompiler ( standard モジュール ) 
distutils . spawn ( standard モジュール ) 
distutils . sysconfig ( standard モジュール ) 
distutils . text _ file ( standard モジュール ) 
distutils . unixccompiler ( standard モジュール ) 
distutils . util ( standard モジュール ) 
distutils . version ( standard モジュール ) 
EXEC _ PREFIX ( distutils . sysconfig モジュール ) 
executable _ filename () ( CCompiler の メソッド ) 
execute () ( CCompiler の メソッド ) 
execute () ( distutils . util モジュール ) 
Extension ( distutils . core の クラス ) 
fancy _ getopt () ( distutils . fancy _ getopt モジュール ) 
finalize _ options () ( Command の メソッド ) 
find _ library _ file () ( CCompiler の メソッド ) 
gen _ lib _ options () ( distutils . ccompiler モジュール ) 
gen _ preprocess _ options () ( distutils . ccompiler モジュール ) 
generate _ help () ( FancyGetopt の メソッド ) 
get _ config _ h _ filename () ( distutils . sysconfig モジュール ) 
get _ config _ var () ( distutils . sysconfig モジュール ) 
get _ config _ vars () ( distutils . sysconfig モジュール ) 
get _ default _ compiler () ( distutils . ccompiler モジュール ) 
get _ makefile _ filename () ( distutils . sysconfig モジュール ) 
get _ option _ order () ( FancyGetopt の メソッド ) 
get _ platform () ( distutils . util モジュール ) 
get _ python _ inc () ( distutils . sysconfig モジュール ) 
get _ python _ lib () ( distutils . sysconfig モジュール ) 
getopt () ( FancyGetopt の メソッド ) 
grok _ environment _ error () ( distutils . util モジュール ) 
has _ function () ( CCompiler の メソッド ) 
HOME ( 環境 変数 ) 
initialize _ options ()() ( Command の メソッド ) 
library _ dir _ option () ( CCompiler の メソッド ) 
library _ filename () ( CCompiler の メソッド ) 
library _ option () ( CCompiler の メソッド ) 
link () ( CCompiler の メソッド ) 
link _ executable () ( CCompiler の メソッド ) 
link _ shared _ lib () ( CCompiler の メソッド ) 
link _ shared _ object () ( CCompiler の メソッド ) 
make _ archive () ( distutils . archive _ util モジュール ) 
make _ tarball () ( distutils . archive _ util モジュール ) 
make _ zipfile () ( distutils . archive _ util モジュール ) 
mkpath () ( CCompiler の メソッド ) 
mkpath () ( distutils . dir _ util モジュール ) 
move _ file () ( CCompiler の メソッド ) 
move _ file () ( distutils . file _ util モジュール ) 
new _ compiler () ( distutils . ccompiler モジュール ) 
newer () ( distutils . dep _ util モジュール ) 
newer _ group () ( distutils . dep _ util モジュール ) 
newer _ pairwise () ( distutils . dep _ util モジュール ) 
object _ filenames () ( CCompiler の メソッド ) 
open () ( TextFile の メソッド ) 
PLAT ( 環境 変数 ) 
PREFIX ( distutils . sysconfig モジュール ) 
preprocess () ( CCompiler の メソッド ) 
readline () ( TextFile の メソッド ) 
readlines () ( TextFile の メソッド ) 
remove _ tree () ( distutils . dir _ util モジュール ) 
rfc 822 _ escape () ( distutils . util モジュール ) 
run () ( Command の メソッド ) 
run _ setup () ( distutils . core モジュール ) 
runtime _ library _ dir _ option () ( CCompiler の メソッド ) 
set _ executables () ( CCompiler の メソッド ) 
set _ include _ dirs () ( CCompiler の メソッド ) 
set _ libraries () ( CCompiler の メソッド ) 
set _ library _ dirs () ( CCompiler の メソッド ) 
set _ link _ objects () ( CCompiler の メソッド ) 
set _ python _ build () ( distutils . sysconfig モジュール ) 
set _ runtime _ library _ dirs () ( CCompiler の メソッド ) 
setup () ( distutils . core モジュール ) 
shared _ object _ filename () ( CCompiler の メソッド ) 
show _ compilers () ( distutils . ccompiler モジュール ) 
spawn () ( CCompiler の メソッド ) 
split _ quoted () ( distutils . util モジュール ) 
strtobool () ( distutils . util モジュール ) 
subst _ vars () ( distutils . util モジュール ) 
undefine _ macro () ( CCompiler の メソッド ) 
unreadline () ( TextFile の メソッド ) 
warn () ( CCompiler の メソッド ) 
warn () ( TextFile の メソッド ) 
wrap _ text () ( distutils . fancy _ getopt モジュール ) 
PLAT Python モジュール の 配布 
1 Distutils の 紹介 
この ドキュメント で は 、 Python モジュール 配布 ユーティリティ ( Python Distribution Utilities , `` Distutils '') について 、 モジュール 開発 者 の 視点 に 立ち 、 多く の 人々 が ビルド / リリース / インストール の 負荷 を ほとんど かけ ず に Python モジュール や 拡張 モジュール を 入手 できる よう に する 方法 について 述べ ます 。 
1 Distutils の 紹介 
1 概念 と 用語 
2 簡単 な 例 
3 Python 一般 の 用語 
4 Distutils 固有 の 用語 
2 setup スクリプト を 書く 
1 パッケージ を 全て 列挙 する 
2 個 々 の モジュール を 列挙 する 
3 拡張 モジュール について 記述 する 
3 . 1 拡張 モジュール の 名前 と パッケージ 
3 . 2 拡張 モジュール の ソース ファイル 
3 . 3 プリプロセッサ オプション 
3 . 4 ライブラリ オプション 
3 . 5 その他 の 操作 
4 スクリプト を インストール する 
5 パッケージ データ を インストール する 
6 追加 の ファイル を インストール する 
7 追加 の メタデータ 
8 setup スクリプト を デバッグ する 
3 setup 設定 ファイル ( setup configuration file ) を 書く 
4 ソース コード 配布 物 を 作成 する 
1 配布 する ファイル を 指定 する 
2 マニフェスト ( manifest ) 関連 の オプション 
5 ビルド 済み 配布 物 を 作成 する 
1 ダム 形式 の ビルド 済み 配布 物 を 作成 する 
2 RPM パッケージ を 作成 する 
3 Windows インストーラ を 作成 する 
3 . 1 インストール 後 実行 スクリプト ( postinstallation script ) 
6 パッケージインデクス に 登録 する 
7 例 
1 pure Python 配布 物 ( モジュール 形式 ) 
2 pure Python 配布 物 ( パッケージ 形式 ) 
3 単体 の 拡張 モジュール 
8 Distutils の 拡張 
1 新しい コマンド の 統合 
9 リファレンス マニュアル 
1 モジュール を インストール する : install コマンド 群 
2 ソース コード 配布 物 を 作成 する : sdist command 
10 API リファレンス 
1 distutils . core -- Distutils の コア 機能 
2 distutils . ccompiler -- CCompiler ベース クラス 
3 distutils . unixccompiler -- Unix C コンパイラ 
4 distutils . msvccompiler -- Microsoft コンパイラ 
5 distutils . bcppcompiler -- Borland コンパイラ 
6 distutils . cygwincompiler -- Cygwin コンパイラ 
7 distutils . emxccompiler -- OS / 2 EMX コンパイラ 
8 distutils . mwerkscompiler -- Metrowerks CodeWarrior サポート 
9 distutils . archive _ util -- アーカイブ ユーティリティ 
10 distutils . dep _ util -- 依存 関係 の チェック 
11 distutils . dir _ util -- ディレクトリ ツリー の 操作 
12 distutils . file _ util -- 1 ファイル の 操作 
13 distutils . util -- その他 の ユーティリティ 関数 
14 distutils . dist -- Distribution クラス 
15 distutils . extension -- Extension クラス 
16 distutils . debug -- Distutils デバッグモード 
17 distutils . errors -- Distutils 例外 
18 distutils . fancy _ getopt -- 標準 getopt モジュール の ラッパ 
19 distutils . filelist -- FileList クラス 
20 distutils . log -- シンプル な PEP 282 スタイル の ロギング 
21 distutils . spawn -- サブ プロセス の 生成 
22 distutils . sysconfig -- システム 設定 情報 
23 distutils . text _ file -- TextFile クラス 
24 distutils . version -- バージョン 番号 クラス 
25 distutils . cmd -- Distutils コマンド の 抽象 クラス 
26 distutils . command -- Distutils 各 コマンド 
27 distutils . command . bdist -- バイナリインストーラ の 構築 
28 distutils . command . bdist _ packager -- パッケージ の 抽象 ベース クラス 
29 distutils . command . bdist _ dumb -- `` ダム '' インストーラ を 構築 
30 distutils . command . bdist _ rpm -- Redhat RPM と SRPM 形式 の バイナリディストリビューション を 構築 
31 distutils . command . bdist _ wininst -- Windows インストーラ の 構築 
32 distutils . command . sdist -- ソース 配布 物 の 構築 
33 distutils . command . build -- パッケージ 中 の 全 ファイル を 構築 
34 distutils . command . build _ clib -- パッケージ 中 の C ライブラリ を 構築 
35 distutils . command . build _ ext -- パッケージ 中 の 拡張 を 構築 
36 distutils . command . build _ py -- パッケージ 中 の . py /. pyc ファイル を 構築 
37 distutils . command . build _ scripts -- パッケージ 中 の スクリプト を 構築 
38 distutils . command . clean -- パッケージ の ビルドエリア を 消去 
39 distutils . command . config -- パッケージ の 設定 
40 distutils . command . install -- パッケージ の インストール 
41 distutils . command . install _ data -- パッケージ 中 の データファイル を インストール 
42 distutils . command . install _ headers -- パッケージ から C / C ++ ヘッダ ファイル を インストール 
43 distutils . command . install _ lib -- パッケージ から ライブラリ ファイル を インストール 
44 distutils . command . install _ scripts -- パッケージ から スクリプト ファイル を インストール 
45 distutils . command . register -- モジュール を Python Package Index に 登録 する 
46 新しい Distutils コマンド の 作成 
この ドキュメント で 扱っ て いる 内容 は 、 Distutils を 使っ た Python モジュール の 配布 で 、 とりわけ 開発 者 / 配布 者 の 役割 に 重点 を 置い て い ます : Python モジュール の インストール に関する 情報 を 探し て いる の なら 、 
マニュアル を 参照 し て ください 。 
1 概念 と 用語 
D . 3 2 . 4 差分 翻訳 者 一覧 ( 敬称 略 ) 
3 . 1 オブジェクト 、 値 、 および 型 
3 . データモデル 
3 . 2 標準 型 の 階層 
Python における オブジェクト ( object ) と は 、 データ を 抽象 的 に 表し た もの です 。 
オブジェクト が 一度 生成 さ れる と 、 その オブジェクト の アイデンティティ 値 は 決して 変化 する こと が あり ませ ん ; アイデンティティ 値 を オブジェクト の メモリ 上 の アドレス と 考え て も かまい ませ ん 。 
演算 子 ` is ' は 、 二つ の オブジェクト 間 の アイデンティティ 値 を 比較 し ます ; 関数 id () 
は 、 オブジェクト の アイデンティティ 値 を 表す 整数 ( 現在 の 実装 で は オブジェクト の メモリ 上 の アドレス ) を 返し ます 。 オブジェクト の 型 も また 変わる こと が あり ませ ん 。 
オブジェクト の 型 は 、 その オブジェクト の サポート する 操作 (`` 長 さ を 持っ て いる か ?'' など ) を 決定 し 、 その 型 の オブジェクト が 取り うる 値 について 定義 し て い ます 。 
関数 は 、 オブジェクト の 型 ( 型 自体 も 一つ の オブジェクト です ) を 返し ます 。 
オブジェクト によって は 、 値 ( value ) を 変える こと が でき ます 。 
値 を 変える こと が できる オブジェクト は 変更 可能 ( mutable ) で ある と いい ます ; 値 を 一度 設定 する と 、 その後 は 変える こと が でき ない オブジェクト は 変更 不能 ( immutable ) で ある と 呼び ます 。 ( 変更 不能 な コンテナ オブジェクト が 変更 可能 な オブジェクト へ の 参照 を 含ん で いる 場合 、 その 値 は 後者 の オブジェクト の 変更 によって 変わる 場合 が あり ます ; その 場合 でも 、 コンテナ の 含ん で いる オブジェクト の 集まり は 変わら ない ため 、 コンテナ は 変更 不能 と 考え ます 。 
実装 で は 、 ごみ 収集 を 遅らせ たり 、 全く 行わ ない よう に する こと が でき ます -- 到達 可能 な オブジェクト を ごみ 収集 処理 し て しまわ ない かぎり 、 どう 実装 する か は 実装 品質 の 問題 です 。 
( 実装 上 の 注意 : 現在 の 実装 で は 参照 カウント ( reference - counting ) 手順 を 使っ て おり 、 ( オプション として ) 循環 参照 を 行っ て いる ごみ オブジェクト を 遅延 検出 し ます 。 この 実装 で は ほとんど の オブジェクト を 到達 不能 に なる と 同時に 処理 する こと が でき ます が 、 循環 参照 を 含む ごみ オブジェクト の 収集 が 確実 に 行わ れる よう 保証 し て いる わけ で は あり ませ ん 。 
循環 参照 を 持つ ごみ オブジェクト 収集 の 制御 について は 、 
これら の リソース は 、 オブジェクト が ごみ 収集 さ れ た 際 に 解放 さ れる もの と 理解 さ れ て い ます が 、 ごみ 収集 が 行わ れる 保証 は ない ので 、 こうした オブジェクト で は 外部 リソース を 明示 的 に 解放 する 方法 、 大抵 は close () メソッド を 提供 し て い ます 。 こうした オブジェクト は 明示 的 に close する よう 強く 奨め ます 。 
操作 を する 際 に は 、 ` try ... finally ' 文 を 使う と 便利 です 。 他 の オブジェクト に対する 参照 を もつ オブジェクト も あり ます ; これら は コンテナ ( container ) と 呼ば れ ます 。 
コンテナ オブジェクト の 例 として 、 タプル 、 リスト 、 および 辞書 が 挙げ られ ます 。 
オブジェクト へ の 参照 自体 が コンテナ の 値 の 一部 です 。 
ほとんど の 場合 、 コンテナ の 値 と いう と 、 コンテナ に 入っ て いる オブジェクト の 値 の こと を 指し 、 それら オブジェクト の アイデンティティ で は あり ませ ん ; しか し ながら 、 コンテナ の 変更 可能 性 について 述べる 場合 、 今 まさに コンテナ に 入っ て いる オブジェクト の アイデンティティ の こと を 指し ます 。 
したがって 、 ( タプル の よう に ) 変更 不能 な オブジェクト が 変更 可能 な オブジェクト へ の 参照 を 含む 場合 、 その 値 が 変化 する の は 変更 可能 な オブジェクト が 変更 さ れ た 時 、 という こと に なり ます 。 型 は オブジェクト の 動作 の ほとんど 全て に 影響 し ます 。 
オブジェクト の アイデンティティ が 重要 か どう か で さえ 、 ある 意味 で は 型 に 左右 さ れ ます : 変更 不能 な 型 で は 、 新た な 値 を 計算 する よう な 操作 を 行う と 、 実際 に は 同じ 型 と 値 を 持っ た 既存 の オブジェクト へ の 参照 を 返す こと が あり ます が 、 変更 可能 な オブジェクト で は その よう な 動作 は 起こり え ませ ん 。 
(" c = d = []" と する と 、 c と d の 両方 に 同じ オブジェクト を 代入 し ます ) 
... も また 変わる こと が あり ませ ん 。 
Python 2 . 2 以降 、 型 と クラス の 段階 的 な 統合 が 始まっ て いる ため 、 この ドキュメント で 主張 さ れ て いる 内容 が 100 % 正確 で 完全 という わけ で は なくなり まし た : 例えば 、 場合 によって は 、 ある 管理 さ れ た 条件下 で なら 、 オブジェクト の 型 を 変更 する こと が でき ます 。 
この マニュアル に 大幅 な 改訂 が 施さ れる まで は 、 この ドキュメント で の 記述 は 、 `` 旧 クラス 型 ( classic class )'' に関して のみ 信頼 できる 内容 と 考え ね ば なり ませ ん 。 Python 2 . 2 および 2 . 3 で は 、 互換 性 の ため に クラシック な クラス が まだ デフォルト と なっ て い ます 。 
1 . 10 参照 カウント 法 
1 . 9 任意 の 値 を 構築 する 
1 . C や C ++ 
1 . 10 . 1 Python における 参照 カウント 法 
C や C ++ の よう な 言語 で は 、 プログラマ は ヒープ 上 の メモリ を 動的 に 確保 し たり 解放 し たり する 責任 が あり ます 。 
こうした 作業 は C で は 関数 malloc () や free () で 行い ます 。 
そこで 、 適切 な 時 に free () を 呼び出す こと が 重要 に なり ます 。 
ある メモリ ブロック に対して 、 free () を 呼ば なかっ た に も かかわら ず その アドレス を 忘却 し て しまう と 、 ブロック が 占有 し て いる メモリ は プログラム が 終了 する まで 再 利用 でき なく なり ます 。 
これ は メモリ リーク ( memory leak ) と 呼ば れ て い ます 。 
逆 に 、 プログラム が ある メモリ ブロック に対して free () を 呼ん で おき ながら 、 その ブロック を 使い 続けよ う と する と 、 別 の malloc () 呼び出し によって 行わ れる ブロック の 再 利用 と 衝突 を 起こし ます 。 
例えば 、 ある 関数 が ある メモリ ブロック を 確保 し 、 何らかの 計算 を 行っ て 、 再度 ブロック を 解放 する と し ます 。 
さて 、 関数 の 要求 仕様 を 変更 し て 、 計算 に対する テスト を 追加 する と 、 エラー 条件 を 検出 し 、 関数 の 途中 で 処理 を 戻す よう に なる かも しれ ませ ん 。 
この 途中 で の 終了 が 起きる とき 、 確保 さ れ た メモリ ブロック は 解放 し 忘れ やすい の です 。 コード が 後で 追加 さ れ た 場合 に は 特に そう です 。 
この よう な メモリ リーク が 一旦 紛れ込ん で しまう と 、 長い 間 検出 さ れ ない まま に なる こと が よく あり ます : エラー による 関数 の 終了 は 、 全て の 関数 呼び出し の に対して ほんの わずか な 割合 しか 起き ず 、 その 一方 で ほとんど の 近代 的 な 計算 機 は 相当 量 の 仮想 記憶 を 持っ て いる ため 、 メモリ リーク が 明らか に なる の は 、 長い 間 動作 し て い た プロセス が リーク を 起こす 関数 を 何 度 も 使っ た 場合 に 限ら れる から です 。 
従って 、 この 種 の エラー を 最小限 に とどめる よう な コーディング 規約 や 戦略 を 設け て 、 不慮 の メモリ リーク を 避ける こと が 重要 な の です 。 Python は malloc () や free () を 非常 に よく 利用 する ため 、 メモリ リーク の 防止 に 加え 、 解放 さ れ た メモリ の 使用 を 防止 する 戦略 が 必要 です 。 
この ため に 選ば れ た の が 参照 カウント 法 ( reference counting ) と 呼ば れる 手法 です 。 
参照 カウント 法 の 原理 は 簡単 です : 全て の オブジェクト に は カウンタ が あり 、 オブジェクト に対する 参照 が どこ か に 保存 さ れ たら カウンタ を インクリメント し 、 オブジェクト に対する 参照 が 削除 さ れ たら デクリメント し ます 。 
) 自動 ガベージコレクション の 大きな 利点 は 、 ユーザ が free () を 明示 的 に よば なく て よい こと に あり ます 。 
( 速度 や メモリ の 有効 利用 性 も 利点 として 主張 さ れ て い ます -- が 、 これ は 確たる 事実 で は あり ませ ん 。 
循環 参照 検出 機構 の おかげ で 、 直接 、 間接 に かかわら ず 循環 参照 の 生成 を 気 に せ ず に アプリケーション を 構築 でき ます ; という の も 、 参照 カウント 法 だけ を 使っ た ガベージコレクション 実装 にとって 循環 参照 は 弱点 だ から です 。 
循環 参照 は 、 ( 間接 参照 の 場合 も 含め て ) 相互 へ の 参照 が 入っ た オブジェクト から 形成 さ れる ため 、 循環 内 の オブジェクト は 各々 非 ゼロ の 参照 カウント を 持ち ます 。 
典型 的 な 参照 カウント 法 の 実装 で は 、 たとえ 循環 参照 を 形成 する オブジェクト に対して 他 に 全く 参照 が ない として も 、 循環 参照 内 の どの オブジェクト に 属する メモリ も 再 利用 でき ませ ん 。 循環 参照 検出 機構 は 、 ごみ と なっ た 循環 参照 を 検出 し 、 Python で 実装 さ れ た 後始末 関数 ( finalizer 、 __ del __() メソッド ) が 定義 さ れ て い ない かぎり 、 それら の メモリ を 再 利用 でき ます 。 
後始末 関数 が ある 場合 、 検出 機構 は 検出 し た 循環 参照 を 
gc モジュール に ( 具体 的 に は この モジュール の garbage 変数 内 ) に 公開 し ます 。 
gc モジュール で は また 、 検出 機構 ( collect () 関数 ) を 実行 する 方法 や 設定 用 の インタフェース 、 実行 時 に 検出 機構 を 無効 化 する 機能 も 公開 し て い ます 。 
循環 参照 検出 機構 は オプション の 機構 と みなさ れ て い ます ; デフォルト で 入っ て はい ます が 、 Unix プラットフォーム ( Mac OS X も 含み ます ) で は ビルド 時 に configure スクリプト の -- without - cycle - gc オプション を 使っ て 、 他 の プラットフォーム で は pyconfig . h ヘッダ の WITH _ CYCLE _ GC 定義 を はずし て 無効 に でき ます 。 
こうして 循環 参照 検出 機構 を 無効 化 する と 、 gc モジュール は 利用 でき なく なり ます 。 
1 . 10 . 1 Python における 参照 カウント 法 
1 . 10 . 2 所有 権 にまつわる 規則 
1 . 10 . 3 薄氷 
1 . 10 . 4 NULL ポインタ 
A . バグ 報告 
B . 歴史 と ライセンス 
1 . 2 . 5 . 2 モジュール 検索 パス に モジュール を 追加 する 
Macintosh モジュール リファレンス 
1 . 2 . 5 設定 を 行なう 
1 . 2 . 5 . 3 デフォルト の 起動 オプション 
import 文 を 実行 する と 、 Python は その モジュール を sys . path で 定義 さ れ た 場所 に 探し に 行き ます 。 
Mac 上 で sys . path を 編集 する に は 、 EditPythonPrefs を 起動 し て 、 一番 上 に ある 大きめ の フィールド に パス を 入力 し ます ( 1 行 に 1 つづ つ 書き ます )。 MacPython で は メイン の Python ディレクトリ を 定義 し て いる ので 、 フォルダ を メイン Python ディレクトリ に 追加 する の が 最も 簡単 な 方法 です 。 
「 My Folder 」 という 名前 の フォルダ を 作っ て 自作 の スクリプト を 入れ 、 メイン の Python ディレクトリ に 追加 し たけれ ば 、 "$( PYTHON ): My Folder " を 新た な 行 に 入力 し ます 。 OS 9 か それ 以前 の OS で デスク トップ を 追加 し たけれ ば 、 " StartupDriveName : Desktop Folder " を 新た な 行 として 入力 し ます 。 
2 . 4 . 1 文字 列 リテラル 
2 . 4 リテラル ( literal ) 
2 . 4 . 2 文字 列 リテラル の 結合 ( concatenation ) 
文字 列 リテラル は 以下 の 字句 定義 で 記述 さ れ ます : 
上記 の 生成 規則 で 示さ れ て い ない 文法 的 な 制限 が 一つ あり ます 。 それ は 文字 列 リテラル の stringprefix と 残り の 部分 の 間 に 空白 を 入れ て は なら ない という こと です 。 
ソース コード 文字 セット ( source character set ) は エン コード 宣言 で 決まり ます . エン コード 宣言 が ない 場合 に は ASCII に なり ます . 2 . 1 . 4 節 を 参照 し て ください . より 平易 な 説明 : 文字 列 リテラル は 、 対応 する 一重 引用 符 (') または 二 重 引用 符 (") で 囲わ れ ます 。 
また 、 対応 する 三 連 の 一 重 引用 符 や 二 重 引用 符 で 囲う こと も でき ます ( 通常 、 三重 クオート 文字 列 : triple - quoted string として 参照 さ れ ます )。 
バックス ラッシュ () 文字 を 使っ て 、 ある 文字 を 例えば 改行 文字 や バックス ラッシュ 自体 、 クオート 文字 といった 別 の 意味 を 持つ よう に エスケープ する こと が でき ます 。 
文字 列 リテラル の 前 に は 、 オプション として " r " または " R " 一 文字 を 接頭 し て も かまい ませ ん ; この よう な 文字 列 は raw 文字 列 ( raw string ) と 呼ば れ 、 バックス ラッシュ による エスケープ シーケンス の 解釈 規則 が 異なり ます 。 
" u " や " U " を 接頭 する と 、 文字 列 は Unicode 文字 列 ( Unicode string ) に なり ます 。 
Unicode 文字 列 は Unicode コンソーシアム および ISO 10646 で 定義 さ れ て いる Unicode 文字 セット を 使い ます 。 
" r " または " R " 接頭 文字 が つか ない かぎり 、 文字 列 中 の エスケープ シーケンス は 標準 C で 使わ れ て いる の と 同様 の 法則 に したがっ て 解釈 さ れ ます 。 以下 に Python で 認識 さ れる エスケープ シーケンス を 示し ます : 
エスケープ シーケンス 
意味 
備考 
無視 
バックス ラッシュ () 
一 重 引用 符 (') 
二 重 引用 符 (") 
ASCII 端末 ベル ( BEL ) 
ASCII バックス ペース ( BS ) 
ASCII フォーム フィード ( FF ) 
ASCII 行 送り ( LF ) 
Unicode データベース 中 で 名前 name を 持つ 文字 ( Unicode のみ ) 
ASCII 復帰 ( CR ) 
ASCII 水平 タブ ( TAB ) 
16 - bit の 16 進 数値 xxxx を 持つ 文字 ( Unicode のみ ) 
32 - bit の 16 進 数値 xxxxxxxx を 持つ 文字 ( Unicode のみ ) 
ASCII 水平 タブ ( VT ) 
8 進 数値 ooo を 持つ 文字 
16 進 数値 hh を 持つ 文字 
備考 : 
サロゲートペア の 断片 を 形成 する 個々 の コード 単位 は 、 この エスケープ シーケンス で エン コード する こと が でき ます 。 
Unicode 文字 は すべて この 方法 で エン コード でき ます が 、 Python が 16 - bit コード 単位 を 扱う よう に コンパイル さ れ て いる ( デフォルト の 設定 です ) 場合 、 基本 多言 語 面 ( Basic Multilingual Plane , BMP ) 外 の 文字 は サロゲートペア ( surrogate pair ) を 使っ て エン コード する こと に なり ます 。 
サロゲートペア の 断片 を 形成 する 個々 の コード 単位 は この エスケープ シーケンス を 使っ て エン コード する こと が でき ます 。 
標準 C と 同じく 、 最大 で 3 桁 の 8 進数 まで 受理 し ます 。 
標準 C と は 違い 、 最大 で 2 桁 の 16 進数 しか 受理 さ れ ませ ん 。 
文字 列 リテラル 中 で は , 16 進 および 8 進 エスケープ は エスケープ の 示す バイト 文字 に なり ます . その バイト 文字 が ソース 文字 セット で エン コード さ れ て いる 保証 は あり ませ ん . Unicode リテラル 中 で は , エスケープ 文字 は エスケープ 文字 の 表現 する 値 を 持つ Unicode 文字 に なり ます . 
バックス ラッシュ も 文字 列 中 に 残り ます 。 
( この 挙動 は デバッグ の 際 に 便利 です : エスケープ シーケンス を 誤 入力 し た 場合 、 その 結果 として 出力 に 失敗 し て いる の が 用意 に わかり ます ) テーブル 中 で ``( Unicode のみ )'' と 書か れ た エスケープ シーケンス は 、 非 Unicode 文字 列 リテラル 中 で は 認識 さ れ ない エスケープシーケンス の カテゴリ に 分類 さ れる ので 注意 し て ください 。 
接頭 文字 " r " または " R " が ある 場合 、 バックス ラッシュ の 後 に くる 文字 は そのまま 文字 列 中 に 入り 、 バックス ラッシュ は 全て 文字 列 中 に 残さ れ ます 。 
例えば 、 文字 列 リテラル r " n " は 二つ の 文字 : バックス ラッシュ と 小文字 の " n " から なる 文字 列 を 表す こと に なり ます 。 
引用 符 は バックス ラッシュ で エスケープ する こと が でき ます が 、 バックス ラッシュ 自体 も 残っ て しまい ます ; 例えば 、 r """ は 不正 で ない 文字 列 リテラル で 、 バックス ラッシュ と 二 重 引用 符 から なる 文字 列 を 表し ます ; r "" は 正しく ない 文字 列 リテラル です ( raw 文字 列 を 奇 数 個 連なっ た バックス ラッシュ で 終わら せる こと は でき ませ ん )。 
厳密 に いえ ば 、 ( バックス ラッシュ が 直後 の クオート 文字 を エスケープ し て しまう ため ) raw 文字 列 を 単一 の バックス ラッシュ で 終わら せる こと は でき ない という こと に なり ます 。 
また 、 バックス ラッシュ の 直後 に 改行 が き て も 、 行 継続 を 意味 する の で は なく 、 それら 二つ の 文字 として 解釈 さ れる ので 注意 し て ください 。 " r " および " R " 接頭 文字 を " u " や " U " と 合わせ て 使っ た 場合 、 uXXXX エスケープ シーケンス は 処理 さ れ ます が 、 その他 の バックス ラッシュ は すべて 文字 列 中 に 残さ れ ます 。 
例えば 、 文字 列 リテラル ur " u 0062 n " は 、 3 つ の Unicode 文字 : ` LATIN SMALL LETTER B ' ( ラテン 小文字 B )、` REVERSE SOLIDUS ' ( 逆 向き 斜線 )、 および ` LATIN SMALL LETTER N ' ( ラテン 小文字 N ) を 表し ます 。 バックス ラッシュ の 前 に バックス ラッシュ を つけ て エスケープ する こと は でき ます ; しか し 、 バックス ラッシュ は 両方 とも 文字 列 中 に 残さ れ ます 。 
その 結果 、 uXXXX エスケープ シーケンス は 、 バックス ラッシュ が 奇 数 個 連なっ て いる 場合 に のみ 認識 さ れ ます 。 
2 . 3 組み込み 型 
2 . 2 非 必須 組み込み 関数 ( Non - essential Built - in 
2 . 組み込み オブジェクト 
2 . 3 . 1 真 値 テスト 
以下 の セクション で は 、 インタプリタ に 組み込ま れ て いる 標準 の 型 について 記述 し ます 。 
これ まで の Python の 歴史 で は 、 組み込み 型 は オブジェクト 指向 における 継承 を 行う 際 に 雛 型 に でき ない という 点 で 、 ユーザ 定義 型 と は 異なっ て い まし た 。 
リリース 2 . 2 から は 状況 が 変わり 始め まし た が 、 目標 と する ユーザ 定義 型 と 組み込み 方 の 一元化 は まだまだ 完成 の 域 に は 達し て い ませ ん 。 主要 な 組み込み 型 は 数値 型 、 シーケンス 型 、 マッピング 型 、 ファイル クラス 、 インスタンス 型 、 および 例外 です 。 
演算 によって は 、 複数 の 型 で サポート さ れ て いる もの が あり ます ; 特に 、 ほぼ 全て の オブジェクト について 、 比較 、 真 値 テスト 、 ( repr () 関数 と 同等 、 また str () 関数 と は わずか に 異なる ` ...` 形式 で の ) 文字 列 へ の 変換 を 行う こと が でき ます 。 
オブジェクト が print 
によって 書か れ て いる と 、 後 の 方 の 文字 列 へ の 変換 が 暗黙 に 行わ れ ます ( Information on 
print 文 や その他 の 文 に関する 情報 は 
および 
で 見つける こと が でき ます 。 
2 . 3 . 2 ブール 演算 
2 . 3 . 3 比較 
2 . 3 . 4 数値 型 
2 . 3 . 4 . 1 整数 型 における ビット 文字 列 演算 
2 . 3 . 5 イテレータ 型 
2 . 3 . 6 シーケンス 型 
2 . 3 . 6 . 1 文字 列 メソッド 
2 . 3 . 6 . 2 文字 列 フォーマット 操作 
2 . 3 . 6 . 3 XRange 型 
2 . 3 . 6 . 4 変更 可能 な シーケンス 型 
2 . 3 . 7 set ( 集合 ) 型 
2 . 3 . 8 マップ 型 
2 . 3 . 9 ファイル オブジェクト 
2 . 3 . 10 他 の 組み込み 型 
2 . 3 . 10 . 1 モジュール 
2 . 3 . 10 . 2 クラス および クラス インスタンス 
2 . 3 . 10 . 3 関数 
2 . 3 . 10 . 4 メソッド 
2 . 3 . 10 . 5 コード オブジェクト 
2 . 3 . 10 . 6 型 オブジェクト 
2 . 3 . 10 . 7 ヌルオブジェクト 
2 . 3 . 10 . 8 省略 表記 オブジェクト 
2 . 3 . 10 . 9 ブール 値 
2 . 3 . 10 . 10 内部 オブジェクト 
2 . 3 . 11 特殊 な 属性 
3 . 3 . 1 弱 参照 オブジェクト 
3 . 3 . 2 例 
弱 参照 オブジェクト は 属性 あるいは メソッド を 持ち ませ ん 。 
しかし 、 リファレント が まだ 存在 する なら ば 、 呼び出す こと で その リファレント を 取得 できる よう に し ます : import weakref class Object :... pass ... o = Object () r = weakref . ref ( o ) o 2 = r () o is o 2 True 
リファレント が もはや 存在 し ない なら ば 、 参照 オブジェクト の 呼び出し は None を 返し ます : 
弱 参照 オブジェクト が まだ 生き て いる か どう か の テスト は 、 式 
ref () is not None を 用い て 行わ れ ます 。 
通常 、 参照 オブジェクト を 使う 必要 が ある アプリケーション コード は この パターン に 従い ます : 
# r は 弱 参照 オブジェクト o = r () if o is None :# リファレント が ガーベジコレクト さ れ た print " Object has been allocated ; can ' t frobnicate ." else : print " Object is still live !" o . do _ something _ useful () 
これ は WeakValueDictionary の 実装 で 使わ れ て おり 、 マップ 内 の 各 エントリ による メモリ の オーバヘッド を 減らし て い ます 。 
こうした 実装 は 、 ある 参照 に 追加 情報 を 関連付け たい 場合 に 便利 です し 、 リファレント を 取り出す ため の 呼び出し 時 に 何らかの 追加 処理 を 行い たい 場合 に も 使え ます 。 以下 の 例 で は 、 ref の サブ クラス を 使っ て 、 ある オブジェクト に 追加 情報 を 保存 し 、 リファレント が アクセス さ れ た とき に その 値 に 作用 を できる よう に する ため の 方法 を 示し て い ます : 
11 日本語 訳 について 
1 . 1 簡単 な 例 
1 . 2 幕間 小話 : エラー と 例外 
1 . 3 例 に 戻る 
1 . 4 モジュール の メソッド テーブル と 初期 化 関数 
1 . 5 コンパイル と リンク 
1 . 6 C から Python 関数 を 呼び出す 
1 . 7 拡張 モジュール 関数 で の パラメタ 展開 
1 . 8 拡張 モジュール 関数 の キーワード パラメタ 
1 . 11 C ++ で の 拡張 モジュール 作成 
1 . 12 拡張 モジュール に C API を 提供 する 
2 . 新しい 型 を 定義 する 
2 . 1 基本 的 な こと 
2 . 1 . 1 基本 の サンプル に データ と メソッド を 追加 する 
2 . 1 . 2 データ 属性 を こまかく 制御 する 
2 . 1 . 3 循環 ガベージコレクション を サポート する 
2 . 2 タイプ メソッド 
2 . 2 . 1 最終 化 ( finalization ) と 解放 
2 . 2 . 3 属性 を 管理 する 
2 . 2 . 4 オブジェクト の 比較 
2 . 2 . 5 抽象 的 な プロトコル の サポート 
2 . 2 . 6 その他 いろいろ 
3 . distutils による C および C ++ 拡張 モジュール の ビルド 
3 . 1 拡張 モジュール の 配布 
4 . Windows 上 で の C および C ++ 拡張 モジュール の ビルド 
4 . 1 型 どおり の アプローチ 
4 . 2 Unix と Windows の 相違 点 
4 . 3 DLL 使用 の 実際 
5 . 6 リンク に関する 要件 
A . バグ 報告 
B . 歴史 と ライセンス 
B . 1 Python の 歴史 
1 . C や C ++ 
リリース 2 . 4 , 平成 18 年 6 月 27 日 更新 ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
この ドキュメント について ... 
Python は 拡張 性 の ある インタプリタ 形式 の オブジェクト 指向 言語 です 。 
簡単 な テキスト 処理 スクリプト から 対話 型 の WWW ブラウザ まで 、 幅広い 用途 に 対応 し て い ます 。 
Python リファレンス マニュアル 
では 、 プログラミング 言語 Python の 厳密 な 構文 と セマンティクス について 説明 し て い ます が 、 Python とともに 配付 さ れ , Python を すぐ に 活用 する 上 で 大いに 役立つ 標準 ライブラリ について は 説明 し て い ませ ん 。 
この ライブラリ に は 、 例えば ファイル I / O の よう に , Python プログラマ が 直接アクセス でき ない システム 機能 へ の アクセス 機能 を 提供 する ( C で 書か れ た ) 組み込み モジュール や 、 日々 の プログラミング で 生じる 多く の 問題 に 標準 的 な 解決 策 を 提供 する pure Python で 書か れ た モジュール が 入っ て い ます 。 
これら 数 多く の モジュール に は 、 Python プログラム に 移植 性 を 持た せ 、 それ を 高める という 明確 な 意図 が あり ます 。 この ライブラリリファレンスマニュアル で は 、 Python の 標準 ライブラリ だけ で なく 、 多く の オプション の ライブラリ モジュール について 説明 し て い ます ( ライブラリ モジュール の 中 に は , プラットフォーム で の サポート や コンパイル 時 の 設定 によって 、 使え たり 使え なかっ たり する もの が あり ます ). また 、 言語 の 標準 の 型 、 組み込み の 関数 と 例外 、 Python リファレンス マニュアル で 説明 し て い なかっ たり , 説明 不足 で ある よう な 多く の 点 について も 説明 し て い ます 。 
この マニュアル で は 、 読者 が Python 言語 について 基礎 的 な 知識 を 持っ て いる と 仮定 し て い ます 。 
形式 ばら ず に Python を 学ん で み たけれ ば 、 
Python チュートリアル 
を 参照 し て ください 。 
は 、 高度 な 文法 と セマンティクス について 疑問 が ある とき に 参照 し て ください 。 
最後 に 、 
Python インタプリタ の 拡張 と 組み込み 
と 題さ れ た マニュアル に は 、 Python に 新しい 機能 を 追加 する 方法 と 、 他 の アプリケーション に Python を 組み込む 方法 が 書か れ て い ます 。 
UnexpectedException ( doctest 、 ホホ 羌 ー ) == operator 
__ bases __ ( class の 属性 ) 
__ builtin __ ( 組み込み モジュール ) 
__ call __() ( Generator の メソッド ) 
__ class __ ( instance の 属性 ) 
__ concat __() ( operator モジュール ) 
__ delslice __() ( operator モジュール ) 
__ dict __ ( object の 属性 ) 
__ displayhook __ ( sys モジュール ) 
__ div __() ( operator モジュール ) 
__ eq __() ( Charset の メソッド ) 
__ eq __() ( Header の メソッド ) 
__ eq __() ( operator モジュール ) 
__ excepthook __ ( sys モジュール ) 
__ floordiv __() ( operator モジュール ) 
__ future __ ( standard モジュール ) 
__ ge __() ( operator モジュール ) 
__ getslice __() ( operator モジュール ) 
__ gt __() ( operator モジュール ) 
__ iadd __() ( AddressList の メソッド ) 
__ init __() ( difflib モジュール ) 
__ init __() ( NullTranslations の メソッド ) 
__ init __() ( Textbox の メソッド ) 
__ inv __() ( operator モジュール ) 
__ invert __() ( operator モジュール ) 
__ isub __() ( AddressList の メソッド ) 
__ iter __() ( container の メソッド ) 
__ iter __() ( iterator の メソッド ) 
__ le __() ( operator モジュール ) 
__ len __() ( AddressList の メソッド ) 
__ len __() ( Message の メソッド ) 
__ lshift __() ( operator モジュール ) 
__ lt __() ( operator モジュール ) 
__ main __ ( 組み込み モジュール ) 
__ members __ ( object の 属性 ) 
__ methods __ ( object の 属性 ) 
__ mod __() ( operator モジュール ) 
__ mul __() ( operator モジュール ) 
__ ne __() ( Header の メソッド ),[ Link ] 
__ ne __() ( operator モジュール ) 
__ neg __() ( operator モジュール ) 
__ not __() ( operator モジュール ) 
__ or __() ( operator モジュール ) 
__ pos __() ( operator モジュール ) 
__ pow __() ( operator モジュール ) 
__ repeat __() ( operator モジュール ) 
__ repr __() ( netrc の メソッド ) 
__ rshift __() ( operator モジュール ) 
__ setslice __() ( operator モジュール ) 
__ stderr __ ( sys モジュール ) 
__ stdin __ ( sys モジュール ) 
__ stdout __ ( sys モジュール ) 
__ str __() ( AddressList の メソッド ) 
__ str __() ( Charset の メソッド ) 
__ str __() ( date の メソッド ) 
__ str __() ( datetime の メソッド ) 
__ str __() ( Header の メソッド ) 
__ str __() ( Message の メソッド ) 
__ str __() ( time の メソッド ) 
__ sub __() ( AddressList の メソッド ) 
__ sub __() ( operator モジュール ) 
__ truediv __() ( operator モジュール ) 
__ unicode __() ( Header の メソッド ) 
__ xor __() ( operator モジュール ) 
_ exit () ( os モジュール ) 
_ getframe () ( sys モジュール ) 
_ locale ( 組み込み モジュール ) 
_ parse () ( NullTranslations の メソッド ) 
_ structure () ( email . Iterators モジュール ) 
_ urlopener ( urllib モジュール ) 
_ winreg ( extension モジュール ) 
a 2 b _ base 64 () ( binascii モジュール ) 
a 2 b _ hex () ( binascii モジュール ) 
a 2 b _ hqx () ( binascii モジュール ) 
a 2 b _ qp () ( binascii モジュール ) 
a 2 b _ uu () ( binascii モジュール ) 
ABMON _ 1 ... ABMON _ 12 ( locale モジュール ) 
abort () ( FTP の メソッド ) 
abort () ( os モジュール ) 
above () ( Textbox の メソッド ) 
abs () ( Context の メソッド ) 
abs () ( operator モジュール ) 
abspath () ( os . path モジュール ) 
ac _ out _ buffer _ size ( asyncore モジュール ) 
accept () ( dispatcher の メソッド ) 
accept () ( socket の メソッド ) 
accept 2 dyear ( time モジュール ) 
access () ( os モジュール ) 
acos () ( cmath モジュール ) 
acos () ( math モジュール ) 
acosh () ( cmath モジュール ) 
acquire () ( Condition の メソッド ) 
acquire () ( lock の メソッド ) 
acquire () ( Semaphore の メソッド ) 
acquire () ( Textbox の メソッド ) 
acquire () ( Timer の メソッド ),[ Link ] 
acquire _ lock () ( imp モジュール ) 
activate _ form () ( form の メソッド ) 
activeCount () ( threading モジュール ) 
add () ( operator モジュール ) 
add () ( Stats の メソッド ) 
add () ( TarFile の メソッド ) 
add _ alias () ( email . Charset モジュール ) 
add _ box () ( form の メソッド ) 
add _ browser () ( form の メソッド ) 
add _ button () ( form の メソッド ) 
add _ charset () ( email . Charset モジュール ) 
add _ choice () ( form の メソッド ) 
add _ clock () ( form の メソッド ) 
add _ codec () ( email . Charset モジュール ) 
add _ cookie _ header () ( CookieJar の メソッド ) 
add _ counter () ( form の メソッド ) 
add _ data () ( Request の メソッド ) 
add _ dial () ( form の メソッド ) 
add _ fallback () ( NullTranslations の メソッド ) 
add _ flowing _ data () ( formatter の メソッド ) 
add _ handler () ( OpenerDirector の メソッド ) 
add _ header () ( Message の メソッド ) 
add _ header () ( Request の メソッド ) 
add _ history () ( readline モジュール ) 
add _ hor _ rule () ( formatter の メソッド ) 
add _ input () ( form の メソッド ) 
add _ label _ data () ( formatter の メソッド ) 
add _ lightbutton () ( form の メソッド ) 
add _ line _ break () ( formatter の メソッド ) 
add _ literal _ data () ( formatter の メソッド ) 
add _ menu () ( form の メソッド ) 
add _ parent () ( BaseHandler の メソッド ) 
add _ password () ( HTTPPasswordMgr の メソッド ) 
add _ positioner () ( form の メソッド ) 
add _ roundbutton () ( form の メソッド ) 
add _ section () ( SafeConfigParser の メソッド ) 
add _ slider () ( form の メソッド ) 
add _ text () ( form の メソッド ) 
add _ timer () ( form の メソッド ) 
add _ type () ( mimetypes モジュール ) 
add _ unredirected _ header () ( Request の メソッド ) 
add _ valslider () ( form の メソッド ) 
addcallback () ( CD parser の メソッド ) 
addch () ( window の メソッド ) 
addError () ( TestResult の メソッド ) 
addFailure () ( TestResult の メソッド ) 
addfile () ( TarFile の メソッド ) 
addFilter () ( Textbox の メソッド ),[ Link ] 
addHandler () ( Textbox の メソッド ) 
addheader () ( MimeWriter の メソッド ) 
addinfo () ( Profile の メソッド ) 
addLevelName () ( logging モジュール ) 
addnstr () ( window の メソッド ) 
address _ string () ( BaseHTTPRequestHandler の メソッド ) 
addresslist ( AddressList の 属性 ) 
addstr () ( window の メソッド ) 
addSuccess () ( TestResult の メソッド ) 
addTest () ( TestSuite の メソッド ) 
addTests () ( TestSuite の メソッド ) 
adjusted () ( Decimal の メソッド ) 
adler 32 () ( zlib モジュール ) 
adpcm 2 lin () ( audioop モジュール ) 
adpcm 32 lin () ( audioop モジュール ) 
AF _ INET ( socket モジュール ) 
AF _ INET 6 ( socket モジュール ) 
AF _ UNIX ( socket モジュール ) 
AI _* ( socket モジュール ) 
aifc () ( aifc の メソッド ) 
aifc ( standard モジュール ) 
aiff () ( aifc の メソッド ) 
AIFF - C ,[ Link ] AL ( standard モジュール ) 
al ( 組み込み モジュール ) 
AL ( 標準 モジュール ) 
alarm () ( signal モジュール ) 
all _ errors ( ftplib モジュール ) 
all _ features ( xml . sax . handler モジュール ) 
all _ properties ( xml . sax . handler モジュール ) 
allocate _ lock () ( thread モジュール ) 
allowed _ domains () ( DefaultCookiePolicy の メソッド ) 
allowremoval () ( CD player の メソッド ) 
alt () ( curses . ascii モジュール ) 
ALT _ DIGITS ( locale モジュール ) 
altsep ( os モジュール ) 
altzone ( time モジュール ) 
anchor _ bgn () ( HTMLParser の メソッド ) 
anchor _ end () ( HTMLParser の メソッド ) 
and _() ( operator モジュール ) 
annotate () ( dircache モジュール ) 
anydbm ( standard モジュール ) 
api _ version ( sys モジュール ) 
apop () ( POP 3 _ SSL の メソッド ) 
append () ( array の メソッド ) 
append () ( Header の メソッド ) 
append () ( IMAP 4 _ stream の メソッド ) 
append () ( SystemRandom の メソッド ) 
append () ( Template の メソッド ) 
appendChild () ( Node の メソッド ) 
appendleft () ( SystemRandom の メソッド ) 
architecture () ( platform モジュール ) 
aRepr ( repr モジュール ) 
argv ( sys モジュール ) 
array () ( array モジュール ) 
array ( 組み込み モジュール ) 
ArrayType ( array モジュール ) 
article () ( NNTPDataError の メソッド ) 
AS _ IS ( formatter モジュール ) 
as _ string () ( Message の メソッド ) 
as _ tuple () ( Decimal の メソッド ) 
ascii () ( curses . ascii モジュール ) 
ascii _ letters ( string モジュール ) 
ascii _ lowercase ( string モジュール ) 
ascii _ uppercase ( string モジュール ) 
asctime () ( time モジュール ) 
asin () ( cmath モジュール ) 
asin () ( math モジュール ) 
asinh () ( cmath モジュール ) 
assert _() ( TestCase の メソッド ) 
assert _ line _ data () ( formatter の メソッド ) 
assertAlmostEqual () ( TestCase の メソッド ) 
assertEqual () ( TestCase の メソッド ) 
assertNotAlmostEqual () ( TestCase の メソッド ) 
assertNotEqual () ( TestCase の メソッド ) 
assertRaises () ( TestCase の メソッド ) 
ast 2 list () ( parser モジュール ) 
ast 2 tuple () ( parser モジュール ) 
astimezone () ( datetime の メソッド ) 
ASTType ( parser モジュール ) 
asyncore ( 組み込み モジュール ) 
atan () ( cmath モジュール ) 
atan () ( math モジュール ) 
atan 2 () ( math モジュール ) 
atanh () ( cmath モジュール ) 
atexit ( standard モジュール ) 
atime ( cd モジュール ) 
atof () ( locale モジュール ) 
atof () ( string モジュール ) 
atoi () ( locale モジュール ) 
atoi () ( string モジュール ) 
atol () ( string モジュール ) 
attach () ( Message の メソッド ) 
AttlistDeclHandler () ( xmlparser の メソッド ) 
attrgetter () ( operator モジュール ) 
attributes ( Node の 属性 ) 
attributes ( XMLParser の 属性 ) 
attron () ( window の メソッド ) 
attrset () ( window の メソッド ) 
audio ( cd モジュール ) 
AUDIO _ FILE _ ENCODING _ ADPCM _ G 721 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ ADPCM _ G 722 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ ADPCM _ G 723 _ 3 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ ADPCM _ G 723 _ 5 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ ALAW _ 8 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ DOUBLE ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ FLOAT ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ LINEAR _ 16 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ LINEAR _ 24 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ LINEAR _ 32 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ LINEAR _ 8 ( sunau モジュール ) 
AUDIO _ FILE _ ENCODING _ MULAW _ 8 ( sunau モジュール ) 
AUDIO _ FILE _ MAGIC ( sunau モジュール ) 
AUDIODEV ( 環境 変数 ),[ Link ] 
audioop ( 組み込み モジュール ) 
authenticate () ( IMAP 4 _ stream の メソッド ) 
authenticators () ( netrc の メソッド ) 
avg () ( audioop モジュール ) 
avgpp () ( audioop モジュール ) 
b 16 decode () ( base 64 モジュール ) 
b 16 encode () ( base 64 モジュール ) 
b 2 a _ base 64 () ( binascii モジュール ) 
b 2 a _ hex () ( binascii モジュール ) 
b 2 a _ hqx () ( binascii モジュール ) 
b 2 a _ qp () ( binascii モジュール ) 
b 2 a _ uu () ( binascii モジュール ) 
b 32 decode () ( base 64 モジュール ) 
b 32 encode () ( base 64 モジュール ) 
b 64 decode () ( base 64 モジュール ) 
b 64 encode () ( base 64 モジュール ) 
backslashreplace _ errors _ errors () ( codecs モジュール ) 
backward () ( turtle モジュール ) 
backward _ compatible ( imageop モジュール ) 
BaseHTTPServer ( standard モジュール ) 
basename () ( os . path モジュール ) 
basicConfig () ( logging モジュール ) 
BasicContext ( decimal の クラス ) 
Bastion () ( Bastion モジュール ) 
Bastion ( standard モジュール ) 
baudrate () ( curses モジュール ) 
bdb ( 標準 モジュール ) 
beep () ( curses モジュール ) 
Beep () ( winsound モジュール ) 
below () ( Textbox の メソッド ) 
bestreadsize () ( CD player の メソッド ) 
betavariate () ( random モジュール ) 
bgn _ group () ( form の メソッド ) 
bias () ( audioop モジュール ) 
bidirectional () ( unicodedata モジュール ) 
binary () ( xmlrpclib モジュール ) 
binascii ( 組み込み モジュール ) 
bind () ( dispatcher の メソッド ) 
bind () ( socket の メソッド ) 
bind _ textdomain _ codeset () ( gettext モジュール ) 
bindtextdomain () ( gettext モジュール ) 
binhex () ( binhex モジュール ) 
binhex ( standard モジュール ) 
binhex ( 標準 モジュール ) bisect () ( bisect モジュール ) 
bisect ( standard モジュール ) 
bisect _ left () ( bisect モジュール ) 
bisect _ right () ( bisect モジュール ) 
bkgd () ( window の メソッド ) 
bkgdset () ( window の メソッド ) 
blocked _ domains () ( DefaultCookiePolicy の メソッド ) 
BLOCKSIZE ( cd モジュール ) 
blocksize ( sha モジュール ) 
body () ( NNTPDataError の メソッド ) 
body _ encode () ( Charset の メソッド ) 
body _ encoding ( email . Charset モジュール ) 
body _ line _ iterator () ( email . Iterators モジュール ) 
BOM ( codecs モジュール ) 
BOM _ BE ( codecs モジュール ) 
BOM _ LE ( codecs モジュール ) 
BOM _ UTF 16 ( codecs モジュール ) 
BOM _ UTF 16 _ BE ( codecs モジュール ) 
BOM _ UTF 16 _ LE ( codecs モジュール ) 
BOM _ UTF 32 ( codecs モジュール ) 
BOM _ UTF 32 _ BE ( codecs モジュール ) 
BOM _ UTF 32 _ LE ( codecs モジュール ) 
BOM _ UTF 8 ( codecs モジュール ) 
boolean () ( xmlrpclib モジュール ) 
BooleanType ( types モジュール ) 
border () ( window の メソッド ) 
bottom () ( Textbox の メソッド ) 
BoundedSemaphore () ( threading モジュール ) 
box () ( window の メソッド ) 
break _ long _ words ( TextWrapper の 属性 ) 
BROWSER ( 環境 変数 ),[ Link ] 
bsddb ( extension モジュール ) 
bsddb ( 組み込み モジュール ),[ Link ],[ Link ] 
btopen () ( bsddb モジュール ) 
buffer () ( 組み込み 関数 ),[ Link ] 
buffer _ info () ( array の メソッド ) 
buffer _ size ( xmlparser の 属性 ) 
buffer _ text ( xmlparser の 属性 ) 
buffer _ used ( xmlparser の 属性 ) 
BufferType ( types モジュール ) 
bufsize () ( audio device の メソッド ) 
build _ opener () ( urllib 2 モジュール ) 
builtin _ module _ names ( sys モジュール ) 
BuiltinFunctionType ( types モジュール ) 
BuiltinMethodType ( types モジュール ) 
byteorder ( sys モジュール ) 
byteswap () ( array の メソッド ) 
bz 2 ( 組み込み モジュール ) 
C _ BUILTIN ( imp モジュール ) 
C _ EXTENSION ( imp モジュール ) 
calcsize () ( struct モジュール ) 
calendar () ( calendar モジュール ) 
calendar ( standard モジュール ) 
call () ( subprocess モジュール ) 
call () ( TarInfo の メソッド ) 
CallableProxyType ( weakref モジュール ) 
can _ change _ color () ( curses モジュール ) 
can _ fetch () ( RobotFileParser の メソッド ) 
cancel () ( scheduler の メソッド ) 
cancel () ( Timer の メソッド ) 
capitalize () ( string の メソッド ) 
capitalize () ( string モジュール ) 
capwords () ( string モジュール ) 
cat () ( nis モジュール ) 
catalog ( cd モジュール ) 
category () ( unicodedata モジュール ) 
cbreak () ( curses モジュール ) 
cd ( 組み込み モジュール ) 
CDROM ( cd モジュール ) 
ceil () ( math モジュール ) center () ( string の メソッド ) 
center () ( string モジュール ) 
cgi ( standard モジュール ) 
cgi _ directories ( CGIHTTPRequestHandler の 属性 ) 
CGIHTTPServer ( standard モジュール ) 
CGIHTTPServer ( 標準 モジュール ) 
cgitb ( standard モジュール ) 
chain () ( itertools モジュール ) 
channels () ( audio device の メソッド ) 
CHAR _ MAX ( locale モジュール ) 
CharacterDataHandler () ( xmlparser の メソッド ) 
characters () ( ContentHandler の メソッド ) 
CHARSET ( mimify モジュール ) 
charset () ( NullTranslations の メソッド ) 
chdir () ( os モジュール ) 
check () ( IMAP 4 _ stream の メソッド ) 
check () ( tabnanny モジュール ) 
check _ forms () ( fl モジュール ) 
check _ output () ( OutputChecker の メソッド ) 
checkcache () ( linecache モジュール ) 
childerr ( Popen 4 の 属性 ) 
childNodes ( Node の 属性 ) 
chmod () ( os モジュール ) 
choice () ( random モジュール ) 
choice () ( whrandom モジュール ) 
choose _ boundary () ( mimetools モジュール ) 
chown () ( os モジュール ) 
chroot () ( os モジュール ) 
chunk ( standard モジュール ) 
circle () ( turtle モジュール ) 
Clamped ( decimal の クラス ) 
classobj () ( new モジュール ) 
ClassType ( types モジュール ) 
clear () ( CookieJar の メソッド ) 
clear () ( Event の メソッド ) 
clear () ( window の メソッド ) 
clear _ flags () ( Context の メソッド ) 
clear _ history () ( readline モジュール ) 
clear _ memo () ( Pickler の メソッド ) 
clear _ session _ cookies () ( CookieJar の メソッド ) 
clearcache () ( linecache モジュール ) 
clearok () ( window の メソッド ) 
client _ address ( BaseHTTPRequestHandler の 属性 ) 
clock () ( time モジュール ) 
clone () ( Generator の メソッド ) 
clone () ( Template の メソッド ) 
cloneNode () ( Node の メソッド ),[ Link ] 
close () ( aifc の メソッド ),[ Link ] 
Close () ( ASTVisitor の メソッド ) 
close () ( AU _ read の メソッド ) 
close () ( AU _ write の メソッド ) 
close () ( audio device の メソッド ),[ Link ] 
close () ( BaseHandler の メソッド ) 
close () ( BZ 2 File の メソッド ) 
close () ( CD player の メソッド ) 
close () ( Chunk の メソッド ) 
close () ( dispatcher の メソッド ) 
close () ( FeedParser の メソッド ) 
close () ( file の メソッド ) 
close () ( FileHandler の メソッド ) close () ( fileinput モジュール ) 
close () ( FTP の メソッド ) 
close () ( HTMLParser の メソッド ) 
close () ( HTTPSConnection の メソッド ) 
close () ( IncrementalParser の メソッド ) 
close () ( MemoryHandler の メソッド ) 
close () ( mixer device の メソッド ) 
close () ( NTEventLogHandler の メソッド ) close () ( os モジュール ) 
close () ( Profile の メソッド ) 
close () ( Queue の メソッド ),[ Link ] 
close () ( SGMLParser の メソッド ) 
close () ( socket の メソッド ) 
close () ( SocketHandler の メソッド ) 
close () ( StringIO の メソッド ) 
close () ( SysLogHandler の メソッド ) 
close () ( TarFile の メソッド ) 
close () ( TarInfo の メソッド ) 
close () ( Telnet の メソッド ) 
close () ( Textbox の メソッド ) 
close () ( Wave _ read の メソッド ) 
close () ( Wave _ write の メソッド ) 
close () ( XMLParser の メソッド ) 
close () ( ZipFile の メソッド ) 
close _ when _ done () ( async _ chat の メソッド ) 
closed ( file の 属性 ) 
CloseKey () (_ winreg モジュール ) 
closelog () ( syslog モジュール ) 
closeport () ( audio port の メソッド ) 
clrtobot () ( window の メソッド ) 
clrtoeol () ( window の メソッド ) 
cmath ( 組み込み モジュール ) 
cmd ( standard モジュール ) 
cmd ( 標準 モジュール ) 
cmdloop () ( Cmd の メソッド ) 
cmp () ( filecmp モジュール ) 
cmp () ( 組み込み 関数 ) cmp _ op ( dis モジュール ) 
cmpfiles () ( filecmp モジュール ) 
code ( ExpatError の 属性 ) 
code () ( new モジュール ) 
code ( standard モジュール ) 
codecs ( standard モジュール ) 
coded _ value ( Morsel の 属性 ) 
codeop ( standard モジュール ) 
codepoint 2 name ( htmlentitydefs モジュール ) 
CODESET ( locale モジュール ) 
CodeType ( types モジュール ) 
collapse _ rfc 2231 _ value () ( email . Utils モジュール ) 
collect () ( gc モジュール ) 
collect _ incoming _ data () ( async _ chat の メソッド ) 
collections ( standard モジュール ) 
color () ( fl モジュール ) 
color () ( turtle モジュール ) 
color _ content () ( curses モジュール ) 
color _ pair () ( curses モジュール ) 
colorsys ( standard モジュール ) 
COLUMNS ( 環境 変数 ),[ Link ] 
combine () ( datetime の メソッド ) 
combining () ( unicodedata モジュール ) 
command ( BaseHTTPRequestHandler の 属性 ) 
commands ( standard モジュール ) 
comment ( Cookie の 属性 ) 
COMMENT ( tokenize モジュール ) 
comment ( ZipInfo の 属性 ) 
comment _ url ( Cookie の 属性 ) 
commenters ( shlex の 属性 ) 
CommentHandler () ( xmlparser の メソッド ) 
common ( dircmp の 属性 ) 
common _ dirs ( dircmp の 属性 ) 
common _ files ( dircmp の 属性 ) 
common _ funny ( dircmp の 属性 ) 
common _ types ( mimetypes モジュール ),[ Link ] 
commonprefix () ( os . path モジュール ) 
communicate () ( Popen の メソッド ) 
compare () ( Context の メソッド ) 
compare () ( Decimal の メソッド ) 
compare () ( Differ の メソッド ) 
COMPARISON _ FLAGS ( doctest モジュール ) 
compile () ( AST の メソッド ) 
compile () ( compiler モジュール ) 
compile () ( py _ compile モジュール ) 
compile () ( re モジュール ) 
compile () ( 組み込み 関数 ),[ Link ],[ Link ],[ Link ] compile _ command () ( code モジュール ) 
compile _ command () ( codeop モジュール ) 
compile _ dir () ( compileall モジュール ) 
compile _ path () ( compileall モジュール ) 
compileall ( standard モジュール ) 
compileast () ( parser モジュール ) 
compileFile () ( compiler モジュール ) 
compiler ( モジュール ) 
compiler . ast ( モジュール ) 
compiler . visitor ( モジュール ) 
complete () ( Completer の メソッド ) 
completedefault () ( Cmd の メソッド ) 
complex () ( built - in function ) complex () ( 組み込み 関数 ) 
ComplexType ( types モジュール ) 
compress () ( bz 2 モジュール ) 
compress () ( BZ 2 Compressor の メソッド ) 
compress () ( Compress の メソッド ) 
compress () ( jpeg モジュール ) 
compress () ( zlib モジュール ) 
compress _ size ( ZipInfo の 属性 ) 
compress _ type ( ZipInfo の 属性 ) 
compressobj () ( zlib モジュール ) 
COMSPEC ( 環境 変数 ) 
concat () ( operator モジュール ) 
ConfigParser ( standard モジュール ) 
confstr () ( os モジュール ) 
confstr _ names ( os モジュール ) 
connect () ( dispatcher の メソッド ) 
connect () ( FTP の メソッド ) 
connect () ( HTTPSConnection の メソッド ) 
connect () ( SMTP の メソッド ) 
connect () ( socket の メソッド ) 
connect _ ex () ( socket の メソッド ) 
ConnectRegistry () (_ winreg モジュール ) 
constructor () ( copy _ reg モジュール ) 
contains () ( operator モジュール ) 
ContentHandler ( xml . sax . handler の クラス ) 
control ( cd モジュール ) 
controlnames ( curses . ascii モジュール ) 
controls () ( mixer device の メソッド ) 
convert () ( Charset の メソッド ) 
Cookie ( standard モジュール ) 
cookiejar ( UnknownHandler の 属性 ) 
cookielib ( standard モジュール ) 
copy () ( Context の メソッド ) 
copy () ( hmac の メソッド ) 
copy () ( IMAP 4 _ stream の メソッド ) 
copy () ( md 5 の メソッド ) 
copy () ( sha の メソッド ) 
copy () ( shutil モジュール ) 
copy ( standard モジュール ) 
copy () ( Template の メソッド ) 
copy ( 標準 モジュール ) copy 2 () ( shutil モジュール ) 
copy _ reg ( standard モジュール ) 
copybinary () ( mimetools モジュール ) 
copyfile () ( shutil モジュール ) 
copyfileobj () ( shutil モジュール ) 
copyliteral () ( mimetools モジュール ) 
copymessage () ( Folder の メソッド ) 
copymode () ( shutil モジュール ) 
copyright ( sys モジュール ) 
copystat () ( shutil モジュール ) 
copytree () ( shutil モジュール ) 
cos () ( cmath モジュール ) 
cos () ( math モジュール ) 
cosh () ( cmath モジュール ) 
cosh () ( math モジュール ) 
count () ( array の メソッド ) 
count () ( itertools モジュール ) 
count () ( string の メソッド ) 
count () ( string モジュール ) 
countOf () ( operator モジュール ) 
countTestCases () ( TestCase の メソッド ) 
cPickle ( 組み込み モジュール ),[ Link ] 
CRC ( ZipInfo の 属性 ) 
crc 32 () ( binascii モジュール ) 
crc 32 () ( zlib モジュール ) 
crc _ hqx () ( binascii モジュール ) 
create () ( IMAP 4 _ stream の メソッド ) 
create _ decimal () ( Context の メソッド ) 
create _ socket () ( dispatcher の メソッド ) 
create _ system ( ZipInfo の 属性 ) 
create _ version ( ZipInfo の 属性 ) 
createAttribute () ( Document の メソッド ) 
createAttributeNS () ( Document の メソッド ) 
createComment () ( Document の メソッド ) 
createElement () ( Document の メソッド ) 
createElementNS () ( Document の メソッド ) 
CreateKey () (_ winreg モジュール ) 
createLock () ( Textbox の メソッド ) 
createparser () ( cd モジュール ) 
c r eateProcessingInstruction () ( Document の メソッド ) 
createTextNode () ( Document の メソッド ) 
critical () ( logging モジュール ) 
critical () ( Textbox の メソッド ) 
CRNCYSTR ( locale モジュール ) 
crop () ( imageop モジュール ) 
cross () ( audioop モジュール ) 
crypt () ( crypt モジュール ) 
crypt ( 組み込み モジュール ),[ Link ] 
cStringIO ( 組み込み モジュール ) 
csv ( standard モジュール ) 
ctermid () ( os モジュール ) 
ctime () ( date の メソッド ) 
ctime () ( datetime の メソッド ) 
ctime () ( time モジュール ) 
ctrl () ( curses . ascii モジュール ) 
curdir ( os モジュール ) 
CurrentByteIndex ( xmlparser の 属性 ) 
CurrentColumnNumber ( xmlparser の 属性 ) 
currentframe () ( inspect モジュール ) 
CurrentLineNumber ( xmlparser の 属性 ) 
currentThread () ( threading モジュール ) 
curs _ set () ( curses モジュール ) 
curses ( standard モジュール ) 
curses . ascii ( standard モジュール ) 
curses . panel ( standard モジュール ) 
curses . textpad ( standard モジュール ) 
curses . wrapper ( standard モジュール ) 
cursyncup () ( window の メソッド ) 
cwd () ( FTP の メソッド ) 
cycle () ( itertools モジュール ) 
D _ FMT ( locale モジュール ) 
D _ T _ FMT ( locale モジュール ) 
data ( Binary の 属性 ) 
data ( Comment の 属性 ) 
data ( MutableString の 属性 ) 
data ( ProcessingInstruction の 属性 ) 
data ( Text の 属性 ) 
data ( UserDict の 属性 ) 
data ( UserList の 属性 ) 
DATASIZE ( cd モジュール ) 
date ( datetime の クラス ) 
date () ( datetime の メソッド ) 
date () ( NNTPDataError の メソッド ) 
date _ time ( ZipInfo の 属性 ) 
date _ time _ string () ( BaseHTTPRequestHandler の メソッド ) 
datetime ( datetime の クラス ) 
datetime ( 組み込み モジュール ) 
day ( date の 属性 ) 
day ( datetime の 属性 ) 
DAY _ 1 ... DAY _ 7 ( locale モジュール ) 
daylight ( time モジュール ) 
dbhash ( standard モジュール ) 
dbhash ( 標準 モジュール ) dbm ( 組み込み モジュール ),[ Link ],[ Link ],[ Link ] 
deactivate _ form () ( form の メソッド ) 
debug () ( doctest モジュール ),[ Link ] 
debug ( IMAP 4 _ stream の 属性 ) 
debug () ( logging モジュール ) 
debug ( shlex の 属性 ) 
debug () ( Template の メソッド ) 
debug () ( TestCase の メソッド ) 
debug () ( Textbox の メソッド ) 
debug ( ZipFile の 属性 ) 
debug = 0 ( TarFile の 属性 ) 
DEBUG _ COLLECTABLE ( gc モジュール ) 
DEBUG _ INSTANCES ( gc モジュール ) 
DEBUG _ LEAK ( gc モジュール ) 
DEBUG _ OBJECTS ( gc モジュール ) 
DEBUG _ SAVEALL ( gc モジュール ) 
debug _ src () ( doctest モジュール ) 
DEBUG _ STATS ( gc モジュール ) 
DEBUG _ UNCOLLECTABLE ( gc モジュール ) 
decimal () ( unicodedata モジュール ) 
DecimalException ( decimal の クラス ) 
decode () ( base 64 モジュール ) 
decode () ( Binary の メソッド ) 
decode () ( mimetools モジュール ) 
decode () ( quopri モジュール ) 
decode () ( ServerProxy の メソッド ) 
decode () ( string の メソッド ) 
decode () ( TextWrapper の メソッド ) 
decode () ( uu モジュール ) 
decode _ header () ( email . Header モジュール ) 
decode _ params () ( email . Utils モジュール ) 
decode _ rfc 2231 () ( email . Utils モジュール ) 
decodestring () ( base 64 モジュール ) 
decodestring () ( quopri モジュール ) 
decomposition () ( unicodedata モジュール ) 
decompress () ( bz 2 モジュール ) 
decompress () ( BZ 2 Decompressor の メソッド ) 
decompress () ( Decompress の メソッド ) 
decompress () ( jpeg モジュール ) 
decompress () ( zlib モジュール ) 
decompressobj () ( zlib モジュール ) 
dedent () ( textwrap モジュール ) 
def _ prog _ mode () ( curses モジュール ) 
def _ shell _ mode () ( curses モジュール ) 
default () ( ASTVisitor の メソッド ) 
default () ( Cmd の メソッド ) 
default _ bufsize ( xml . dom . pulldom モジュール ) 
default _ open () ( BaseHandler の メソッド ) 
DefaultContext ( decimal の クラス ) 
DefaultHandler () ( xmlparser の メソッド ) 
DefaultHandlerExpand () ( xmlparser の メソッド ) 
defaults () ( SafeConfigParser の メソッド ) 
defaultTestLoader ( unittest モジュール ) 
defaultTestResult () ( TestCase の メソッド ) 
defects ( email . Message モジュール ) 
defpath ( os モジュール ) 
degrees () ( math モジュール ) 
del _ param () ( Message の メソッド ) 
delay _ output () ( curses モジュール ) 
delayload ( Cookie の 属性 ) 
delch () ( window の メソッド ) 
dele () ( POP 3 _ SSL の メソッド ) 
delete () ( FTP の メソッド ) 
delete () ( IMAP 4 _ stream の メソッド ) 
delete _ object () ( FORMS object の メソッド ) 
deleteacl () ( IMAP 4 _ stream の メソッド ) 
deletefolder () ( MH の メソッド ) 
DeleteKey () (_ winreg モジュール ) 
deleteln () ( window の メソッド ) 
deleteparser () ( CD parser の メソッド ) 
DeleteValue () (_ winreg モジュール ) 
delimiter ( Dialect の 属性 ) 
delitem () ( operator モジュール ) 
delslice () ( operator モジュール ) 
demo () ( turtle モジュール ) 
deque () ( collections モジュール ) 
dereference ( TarFile の 属性 ) 
derwin () ( window の メソッド ) 
description () ( NNTPDataError の メソッド ) 
descriptions () ( NNTPDataError の メソッド ) 
Detach () ( ASTVisitor の メソッド ) 
DEVICE ( standard モジュール ) 
devnull ( os モジュール ) 
dgettext () ( gettext モジュール ) 
Dialect ( csv の クラス ) 
DictionaryType ( types モジュール ) 
diff _ files ( dircmp の 属性 ) 
Differ ( difflib の クラス ) 
difflib ( standard モジュール ) 
digest () ( hmac の メソッド ) 
digest () ( md 5 の メソッド ) 
digest () ( sha の メソッド ) 
digest _ size ( md 5 モジュール ) 
digest _ size ( sha モジュール ) 
digit () ( unicodedata モジュール ) 
digits ( string モジュール ) 
dir () ( FTP の メソッド ) 
dircache ( standard モジュール ) 
dis ( standard モジュール ) 
disable () ( gc モジュール ) 
disable () ( logging モジュール ) 
disassemble () ( dis モジュール ) 
discard ( Cookie の 属性 ) 
discard _ buffers () ( async _ chat の メソッド ) 
disco () ( dis モジュール ) 
dispatch () ( ASTVisitor の メソッド ) 
displayhook () ( sys モジュール ) 
dist () ( platform モジュール ) 
distb () ( dis モジュール ) 
distutils ( standard モジュール ) 
dither 2 grey 2 () ( imageop モジュール ) 
dither 2 mono () ( imageop モジュール ) 
div () ( operator モジュール ) 
divide () ( Context の メソッド ) 
DivisionByZero ( decimal の クラス ) 
divmod () ( Context の メソッド ) 
dl ( extension モジュール ) 
dllhandle ( sys モジュール ) 
dngettext () ( gettext モジュール ) 
do _ command () ( Textbox の メソッド ) 
do _ forms () ( fl モジュール ) 
do _ GET () ( SimpleHTTPRequestHandler の メソッド ) 
do _ HEAD () ( SimpleHTTPRequestHandler の メソッド ) 
do _ POST () ( CGIHTTPRequestHandler の メソッド ) 
doc _ header ( Cmd の 属性 ) 
DocFileSuite () ( doctest モジュール ) 
docmd () ( SMTP の メソッド ) 
docstring ( DocTest の 属性 ) 
doctest ( standard モジュール ) 
documentElement ( Document の 属性 ) 
domain _ initial _ dot ( Cookie の 属性 ) 
domain _ return _ ok () ( CookiePolicy の メソッド ) 
domain _ specified ( Cookie の 属性 ) 
DomainLiberal ( LWPCookieJar の 属性 ) 
DomainRFC 2965 Match ( LWPCookieJar の 属性 ) 
DomainStrict ( LWPCookieJar の 属性 ) 
DomainStrictNoDots ( LWPCookieJar の 属性 ) 
DomainStrictNonDomain ( LWPCookieJar の 属性 ) 
done () ( Unpacker の メソッド ) 
DONT _ ACCEPT _ BLANKLINE ( doctest モジュール ) 
DONT _ ACCEPT _ TRUE _ FOR _ 1 ( doctest モジュール ) 
doRollover () ( RotatingFileHandler の メソッド ) 
doRollover () ( TimedRotatingFileHandler の メソッド ) 
DOTALL ( re モジュール ) 
doublequote ( Dialect の 属性 ) 
doupdate () ( curses モジュール ) 
down () ( turtle モジュール ) 
drain () ( audio device の メソッド ) 
dropwhile () ( itertools モジュール ) 
dst () ( datetime の メソッド ) 
dst () ( time の メソッド ),[ Link ] 
DTDHandler ( xml . sax . handler の クラス ) 
dumbdbm ( standard モジュール ) 
dumbdbm ( 標準 モジュール ) 
dummy _ thread ( standard モジュール ) 
dummy _ threading ( standard モジュール ) 
dump () ( marshal モジュール ) 
dump () ( pickle モジュール ) 
dump () ( Pickler の メソッド ) 
dump _ address _ pair () ( rfc 822 モジュール ) 
dump _ stats () ( Stats の メソッド ) 
dumps () ( marshal モジュール ) 
dumps () ( pickle モジュール ) 
dumps () ( xmlrpclib モジュール ) 
dup () ( os モジュール ) 
dup 2 () ( os モジュール ) 
e ( cmath モジュール ) 
e ( math モジュール ) 
E 2 BIG ( errno モジュール ) 
EACCES ( errno モジュール ) 
EADDRINUSE ( errno モジュール ) 
EADDRNOTAVAIL ( errno モジュール ) 
EADV ( errno モジュール ) 
EAFNOSUPPORT ( errno モジュール ) 
EAGAIN ( errno モジュール ) 
EAI _* ( socket モジュール ) 
EALREADY ( errno モジュール ) 
east _ asian _ width () ( unicodedata モジュール ) 
EBADE ( errno モジュール ) 
EBADF ( errno モジュール ) 
EBADFD ( errno モジュール ) 
EBADMSG ( errno モジュール ) 
EBADR ( errno モジュール ) 
EBADRQC ( errno モジュール ) 
EBADSLT ( errno モジュール ) 
EBFONT ( errno モジュール ) 
EBUSY ( errno モジュール ) 
ECHILD ( errno モジュール ) 
echo () ( curses モジュール ) 
echochar () ( window の メソッド ) 
ECHRNG ( errno モジュール ) 
ECOMM ( errno モジュール ) 
ECONNABORTED ( errno モジュール ) 
ECONNREFUSED ( errno モジュール ) 
ECONNRESET ( errno モジュール ) 
EDEADLK ( errno モジュール ) 
EDEADLOCK ( errno モジュール ) 
EDESTADDRREQ ( errno モジュール ) 
edit () ( Textbox の メソッド ) 
EDOM ( errno モジュール ) 
EDOTDOT ( errno モジュール ) 
EDQUOT ( errno モジュール ) 
EEXIST ( errno モジュール ) 
EFAULT ( errno モジュール ) 
EFBIG ( errno モジュール ) 
ehlo () ( SMTP の メソッド ) 
EHOSTDOWN ( errno モジュール ) 
EHOSTUNREACH ( errno モジュール ) 
EIDRM ( errno モジュール ) 
EILSEQ ( errno モジュール ) 
EINPROGRESS ( errno モジュール ) 
EINTR ( errno モジュール ) 
EINVAL ( errno モジュール ) 
EIO ( errno モジュール ) 
EISCONN ( errno モジュール ) 
EISDIR ( errno モジュール ) 
EISNAM ( errno モジュール ) 
eject () ( CD player の メソッド ) 
EL 2 HLT ( errno モジュール ) 
EL 2 NSYNC ( errno モジュール ) 
EL 3 HLT ( errno モジュール ) 
EL 3 RST ( errno モジュール ) 
ElementDeclHandler () ( xmlparser の メソッド ) 
elements ( XMLParser の 属性 ) 
ELIBACC ( errno モジュール ) 
ELIBBAD ( errno モジュール ) 
ELIBEXEC ( errno モジュール ) 
ELIBMAX ( errno モジュール ) 
ELIBSCN ( errno モジュール ) 
ELLIPSIS ( doctest モジュール ) 
EllipsisType ( types モジュール ) 
ELNRNG ( errno モジュール ) 
ELOOP ( errno モジュール ) 
email ( standard モジュール ) 
email . Charset ( standard モジュール ) 
email . Encoders ( standard モジュール ) 
email . Errors ( standard モジュール ) 
email . Generator ( standard モジュール ) 
email . Header ( standard モジュール ) 
email . Iterators ( standard モジュール ) 
email . Message ( standard モジュール ) 
email . Parser ( standard モジュール ) 
email . Utils ( standard モジュール ) 
EMFILE ( errno モジュール ) 
emit () ( BufferingHandler の メソッド ) 
emit () ( DatagramHandler の メソッド ) 
emit () ( FileHandler の メソッド ) 
emit () ( HTTPHandler の メソッド ) 
emit () ( NTEventLogHandler の メソッド ) 
emit () ( RotatingFileHandler の メソッド ) 
emit () ( SMTPHandler の メソッド ) 
emit () ( SocketHandler の メソッド ) 
emit () ( StreamHandler の メソッド ) 
emit () ( SysLogHandler の メソッド ) 
emit () ( Textbox の メソッド ) 
emit () ( TimedRotatingFileHandler の メソッド ) 
EMLINK ( errno モジュール ) 
empty () ( Queue の メソッド ) 
empty () ( scheduler の メソッド ) 
EMPTY _ NAMESPACE ( xml . dom モジュール ) 
emptyline () ( Cmd の メソッド ) 
EMSGSIZE ( errno モジュール ) 
EMULTIHOP ( errno モジュール ) 
enable () ( cgitb モジュール ) 
enable () ( gc モジュール ) 
ENAMETOOLONG ( errno モジュール ) 
ENAVAIL ( errno モジュール ) 
enclose () ( window の メソッド ) 
encode () ( base 64 モジュール ) encode () ( Binary の メソッド ) 
encode () ( Header の メソッド ) 
encode () ( mimetools モジュール ) 
encode () ( quopri モジュール ) 
encode () ( ServerProxy の メソッド ),[ Link ] 
encode () ( string の メソッド ) 
encode () ( TextWrapper の メソッド ) 
encode () ( uu モジュール ) 
encode _ 7 or 8 bit () ( email . Encoders モジュール ) encode _ base 64 () ( email . Encoders モジュール ) 
encode _ noop () ( email . Encoders モジュール ) 
encode _ quopri () ( email . Encoders モジュール ) 
encode _ rfc 2231 () ( email . Utils モジュール ) 
encoded _ header _ len () ( Charset の メソッド ) 
EncodedFile () ( codecs モジュール ) 
encodePriority () ( SysLogHandler の メソッド ) 
encodestring () ( base 64 モジュール ) 
encodestring () ( quopri モジュール ) 
encoding ( file の 属性 ) 
encodings . idna ( standard モジュール ) 
encodings _ map ( mimetypes モジュール ),[ Link ] 
end () ( Template の メソッド ) 
end _ group () ( form の メソッド ) 
end _ headers () ( BaseHTTPRequestHandler の メソッド ) 
end _ marker () ( MultiFile の メソッド ) 
end _ paragraph () ( formatter の メソッド ) 
EndCdataSectionHandler () ( xmlparser の メソッド ) 
EndDoctypeDeclHandler () ( xmlparser の メソッド ) 
endDocument () ( ContentHandler の メソッド ) 
endElement () ( ContentHandler の メソッド ) 
EndElementHandler () ( xmlparser の メソッド ) 
endElementNS () ( ContentHandler の メソッド ) 
endheaders () ( HTTPSConnection の メソッド ) 
EndNamespaceDeclHandler () ( xmlparser の メソッド ) 
endpick () ( gl モジュール ) 
endpos ( MatchObject の 属性 ) 
endPrefixMapping () ( ContentHandler の メソッド ) 
endselect () ( gl モジュール ) 
endswith () ( string の メソッド ) 
endwin () ( curses モジュール ) 
ENETDOWN ( errno モジュール ) 
ENETRESET ( errno モジュール ) 
ENETUNREACH ( errno モジュール ) 
ENFILE ( errno モジュール ) 
ENOANO ( errno モジュール ) 
ENOBUFS ( errno モジュール ) 
ENOCSI ( errno モジュール ) 
ENODATA ( errno モジュール ) 
ENODEV ( errno モジュール ) 
ENOENT ( errno モジュール ) 
ENOEXEC ( errno モジュール ) 
ENOLCK ( errno モジュール ) 
ENOLINK ( errno モジュール ) 
ENOMEM ( errno モジュール ) 
ENOMSG ( errno モジュール ) 
ENONET ( errno モジュール ) 
ENOPKG ( errno モジュール ) 
ENOPROTOOPT ( errno モジュール ) 
ENOSPC ( errno モジュール ) 
ENOSR ( errno モジュール ) 
ENOSTR ( errno モジュール ) 
ENOSYS ( errno モジュール ) 
ENOTBLK ( errno モジュール ) 
ENOTCONN ( errno モジュール ) 
ENOTDIR ( errno モジュール ) 
ENOTEMPTY ( errno モジュール ) 
ENOTNAM ( errno モジュール ) 
ENOTSOCK ( errno モジュール ) 
ENOTTY ( errno モジュール ) 
ENOTUNIQ ( errno モジュール ) 
enter () ( scheduler の メソッド ) 
enterabs () ( scheduler の メソッド ) 
entities ( DocumentType の 属性 ) 
EntityDeclHandler () ( xmlparser の メソッド ) 
entitydefs ( htmlentitydefs モジュール ) 
entitydefs ( XMLParser の 属性 ) 
EntityResolver ( xml . sax . handler の クラス ) 
eof ( shlex の 属性 ) 
EOPNOTSUPP ( errno モジュール ) 
EOVERFLOW ( errno モジュール ) 
EPERM ( errno モジュール ) 
EPFNOSUPPORT ( errno モジュール ) 
epilogue ( email . Message モジュール ) 
EPIPE ( errno モジュール ) 
EPROTO ( errno モジュール ) 
EPROTONOSUPPORT ( errno モジュール ) 
EPROTOTYPE ( errno モジュール ) 
eq () ( operator モジュール ) 
ERA ( locale モジュール ) 
ERA _ D _ FMT ( locale モジュール ) 
ERA _ D _ T _ FMT ( locale モジュール ) 
ERA _ YEAR ( locale モジュール ) 
ERANGE ( errno モジュール ) 
erase () ( window の メソッド ) 
erasechar () ( curses モジュール ) 
EREMCHG ( errno モジュール ) 
EREMOTE ( errno モジュール ) 
EREMOTEIO ( errno モジュール ) 
ERESTART ( errno モジュール ) 
EROFS ( errno モジュール ) 
ERR ( curses モジュール ) 
errcode ( ServerProxy の 属性 ) 
errmsg ( ServerProxy の 属性 ) 
errno ( standard モジュール ) 
errno ( 組み込み モジュール ),[ Link ] 
error ,[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ] ERROR ( cd モジュール ) 
error () ( ErrorHandler の メソッド ) 
error () ( logging モジュール ) 
error () ( MH の メソッド ) 
error () ( OpenerDirector の メソッド ) 
error () ( Textbox の メソッド ) 
error _ leader () ( shlex の メソッド ) 
error _ message _ format ( BaseHTTPRequestHandler の 属性 ) 
ErrorByteIndex ( xmlparser の 属性 ) 
errorcode ( errno モジュール ) 
ErrorCode ( xmlparser の 属性 ) 
ErrorColumnNumber ( xmlparser の 属性 ) 
ErrorHandler ( xml . sax . handler の クラス ) 
errorlevel = 0 ( TarFile の 属性 ) 
ErrorLineNumber ( xmlparser の 属性 ) 
errors ( TestResult の 属性 ) 
ErrorString () ( xml . parsers . expat モジュール ) 
escape () ( cgi モジュール ) 
escape () ( re モジュール ) 
escape ( shlex の 属性 ) 
escape () ( xml . sax . saxutils モジュール ) 
escapechar ( Dialect の 属性 ) 
escapedquotes ( shlex の 属性 ) 
ESHUTDOWN ( errno モジュール ) 
ESOCKTNOSUPPORT ( errno モジュール ) 
ESPIPE ( errno モジュール ) 
ESRCH ( errno モジュール ) 
ESRMNT ( errno モジュール ) 
ESTALE ( errno モジュール ) 
ESTRPIPE ( errno モジュール ) 
ETIME ( errno モジュール ) 
ETIMEDOUT ( errno モジュール ) 
Etiny () ( Context の メソッド ) 
ETOOMANYREFS ( errno モジュール ) 
Etop () ( Context の メソッド ) 
ETXTBSY ( errno モジュール ) 
EUCLEAN ( errno モジュール ) 
EUNATCH ( errno モジュール ) 
EUSERS ( errno モジュール ) 
eval () ( 組み込み 関数 ),[ Link ],[ Link ],[ Link ],[ Link ] 
Event () ( threading モジュール ) 
EWOULDBLOCK ( errno モジュール ) 
EX _ CANTCREAT ( os モジュール ) 
EX _ CONFIG ( os モジュール ) 
EX _ DATAERR ( os モジュール ) 
EX _ IOERR ( os モジュール ) 
EX _ NOHOST ( os モジュール ) 
EX _ NOINPUT ( os モジュール ) 
EX _ NOPERM ( os モジュール ) 
EX _ NOTFOUND ( os モジュール ) 
EX _ NOUSER ( os モジュール ) 
EX _ OK ( os モジュール ) 
EX _ OSERR ( os モジュール ) 
EX _ OSFILE ( os モジュール ) 
EX _ PROTOCOL ( os モジュール ) 
EX _ SOFTWARE ( os モジュール ) 
EX _ TEMPFAIL ( os モジュール ) 
EX _ UNAVAILABLE ( os モジュール ) 
EX _ USAGE ( os モジュール ) 
example ( DocTestFailure の 属性 ) 
example ( UnexpectedException の 属性 ) 
examples ( DocTest の 属性 ) 
exc _ clear () ( sys モジュール ) 
exc _ info () ( sys モジュール ) 
exc _ info ( UnexpectedException の 属性 ) 
exc _ msg ( Example の 属性 ) 
exc _ traceback ( sys モジュール ) 
exc _ type ( sys モジュール ) 
exc _ value ( sys モジュール ) 
excepthook () ( in module sys ) excepthook () ( sys モジュール ) 
exception () ( logging モジュール ) 
exception () ( Textbox の メソッド ) 
exceptions ( standard モジュール ) 
EXDEV ( errno モジュール ) 
exec _ prefix ( sys モジュール ) 
execfile () ( built - in function ) execfile () ( 組み込み 関数 ) 
execl () ( os モジュール ) 
execle () ( os モジュール ) 
execlp () ( os モジュール ) 
execlpe () ( os モジュール ) 
executable ( sys モジュール ) 
execv () ( os モジュール ) 
execve () ( os モジュール ) 
execvp () ( os モジュール ) 
execvpe () ( os モジュール ) 
EXFULL ( errno モジュール ) 
exists () ( os . path モジュール ) 
exit () ( sys モジュール ) 
exit () ( thread モジュール ) 
exitfunc ( sys モジュール ) 
exp () ( cmath モジュール ) 
exp () ( math モジュール ) 
expand () ( MatchObject の メソッド ) 
expand _ tabs ( TextWrapper の 属性 ) 
expandNode () ( DOMEventStream の メソッド ) 
expandtabs () ( string の メソッド ) 
expandtabs () ( string モジュール ) 
expanduser () ( os . path モジュール ) 
expandvars () ( os . path モジュール ) 
expect () ( Telnet の メソッド ) 
expires ( Cookie の 属性 ) 
expovariate () ( random モジュール ) 
expr () ( parser モジュール ) 
expunge () ( IMAP 4 _ stream の メソッド ) 
extend () ( array の メソッド ) 
extend () ( SystemRandom の メソッド ) 
extend _ path () ( pkgutil モジュール ) 
ExtendedContext ( decimal の クラス ) 
extendleft () ( SystemRandom の メソッド ) 
extensions _ map ( SimpleHTTPRequestHandler の 属性 ) 
external _ attr ( ZipInfo の 属性 ) 
E xternalEntityParserCreate () ( xmlparser の メソッド ) 
ExternalEntityRefHandler () ( xmlparser の メソッド ) 
extra ( ZipInfo の 属性 ) 
extract () ( TarFile の メソッド ) 
extract _ cookies () ( CookieJar の メソッド ) 
extract _ stack () ( traceback モジュール ) 
extract _ tb () ( traceback モジュール ) 
extract _ version ( ZipInfo の 属性 ) 
extractfile () ( TarFile の メソッド ) 
extsep ( os モジュール ) 
F _ BAVAIL ( statvfs モジュール ) 
F _ BFREE ( statvfs モジュール ) 
F _ BLOCKS ( statvfs モジュール ) 
F _ BSIZE ( statvfs モジュール ) 
F _ FAVAIL ( statvfs モジュール ) 
F _ FFREE ( statvfs モジュール ) 
F _ FILES ( statvfs モジュール ) 
F _ FLAG ( statvfs モジュール ) 
F _ FRSIZE ( statvfs モジュール ) 
F _ NAMEMAX ( statvfs モジュール ) 
F _ OK ( os モジュール ) 
fabs () ( math モジュール ) 
fail () ( TestCase の メソッド ) 
failIf () ( TestCase の メソッド ) 
failIfAlmostEqual () ( TextTestRunner の メソッド ) 
failIfEqual () ( TextTestRunner の メソッド ) 
failUnless () ( TextTestRunner の メソッド ) 
failUnlessAlmostEqual () ( TextTestRunner の メソッド ) 
failUnlessEqual () ( TextTestRunner の メソッド ) 
failUnlessRaises () ( TextTestRunner の メソッド ) 
failureException ( TestCase の 属性 ) 
failures ( TestResult の 属性 ) 
fatalError () ( ErrorHandler の メソッド ) 
faultCode ( ServerProxy の 属性 ) 
faultString ( ServerProxy の 属性 ) 
fcntl () ( fcntl モジュール ) 
fcntl ( 組み込み モジュール ),[ Link ] 
fdatasync () ( os モジュール ) 
fdopen () ( os モジュール ) 
feature _ external _ ges ( xml . sax . handler モジュール ) 
feature _ external _ pes ( xml . sax . handler モジュール ) 
feature _ namespace _ prefixes ( xml . sax . handler モジュール ) 
feature _ namespaces ( xml . sax . handler モジュール ) 
feature _ string _ interning ( xml . sax . handler モジュール ) 
feature _ validation ( xml . sax . handler モジュール ) 
feed () ( FeedParser の メソッド ) 
feed () ( HTMLParser の メソッド ) 
feed () ( IncrementalParser の メソッド ) 
feed () ( SGMLParser の メソッド ) 
feed () ( XMLParser の メソッド ) 
file ( class descriptor の 属性 ) 
file ( function descriptor の 属性 ) 
file () ( posixfile method ) file () ( 組み込み 関数 ) 
file _ offset ( ZipInfo の 属性 ) 
file _ open () ( FileHandler の メソッド ) 
file _ size ( ZipInfo の 属性 ) 
filecmp ( standard モジュール ) 
fileinput ( standard モジュール ) 
filelineno () ( fileinput モジュール ) 
filename ( Cookie の 属性 ) 
filename ( DocTest の 属性 ) 
filename () ( fileinput モジュール ) 
filename ( ZipInfo の 属性 ) 
filename _ only ( tabnanny モジュール ) 
fileno () ( audio device の メソッド ),[ Link ] 
fileno () ( file の メソッド ) 
fileno () ( mixer device の メソッド ) 
fileno () ( Profile の メソッド ) 
fileno () ( socket の メソッド ) 
fileno () ( Telnet の メソッド ) 
fileopen () ( posixfile モジュール ) 
FileType ( types モジュール ) 
fill () ( textwrap モジュール ) 
filter () ( curses モジュール ) 
filter () ( Filter の メソッド ) 
filter () ( fnmatch モジュール ) 
filter () ( Textbox の メソッド ),[ Link ] 
filterwarnings () ( warnings モジュール ) 
find () ( DocTestFinder の メソッド ) 
find () ( gettext モジュール ) 
find () ( Queue の メソッド ) 
find () ( string の メソッド ) 
find () ( string モジュール ) 
find _ first () ( form の メソッド ) 
find _ last () ( form の メソッド ) 
find _ longest _ match () ( SequenceMatcher の メソッド ) 
find _ module () ( imp モジュール ) 
find _ prefix _ at _ end () ( asynchat モジュール ) 
find _ user _ password () ( HTTPPasswordMgr の メソッド ) 
findall () ( re モジュール ) 
findall () ( RegexObject の メソッド ) 
findCaller () ( Textbox の メソッド ) 
findfactor () ( audioop モジュール ) 
findfile () ( test . test _ support モジュール ) 
findfit () ( audioop モジュール ) 
findfont () ( fm モジュール ) 
finditer () ( re モジュール ) 
finditer () ( RegexObject の メソッド ) 
findmatch () ( mailcap モジュール ) 
findmax () ( audioop モジュール ) 
first () ( dbhash の メソッド ) 
first () ( fifo の メソッド ) 
first () ( Queue の メソッド ) 
firstChild ( Node の 属性 ) 
firstkey () ( gdbm モジュール ) 
firstweekday () ( calendar モジュール ) 
fix () ( fpformat モジュール ) 
fix _ sentence _ endings ( TextWrapper の 属性 ) 
FL ( standard モジュール ) 
fl ( 組み込み モジュール ) 
flag _ bits ( ZipInfo の 属性 ) 
flags ( RegexObject の 属性 ) 
flash () ( curses モジュール ) 
flatten () ( Generator の メソッド ) 
float () ( built - in function ) float () ( 組み込み 関数 ),[ Link ] 
FloatType ( types モジュール ) 
flock () ( fcntl モジュール ) 
floor () ( in module math ) floor () ( math モジュール ) 
floordiv () ( operator モジュール ) 
flp ( standard モジュール ) 
flush () ( audio device の メソッド ) 
flush () ( BufferingHandler の メソッド ) 
flush () ( BZ 2 Compressor の メソッド ) 
flush () ( Compress の メソッド ) 
flush () ( Decompress の メソッド ) 
flush () ( file の メソッド ) 
flush () ( MemoryHandler の メソッド ) 
flush () ( Queue の メソッド ) 
flush () ( StreamHandler の メソッド ) 
flush () ( Textbox の メソッド ) 
flush () ( writer の メソッド ) 
flush _ softspace () ( formatter の メソッド ) 
flushheaders () ( MimeWriter の メソッド ) 
flushinp () ( curses モジュール ) 
FlushKey () (_ winreg モジュール ) 
fm ( 組み込み モジュール ) 
fmod () ( math モジュール ) 
fnmatch () ( fnmatch モジュール ) 
fnmatch ( standard モジュール ) 
fnmatchcase () ( fnmatch モジュール ) 
fontpath () ( fm モジュール ) 
forget () ( statcache モジュール ) 
forget () ( test . test _ support モジュール ) 
forget _ dir () ( statcache モジュール ) 
forget _ except _ prefix () ( statcache モジュール ) 
forget _ prefix () ( statcache モジュール ) 
fork () ( os モジュール ) 
fork () ( pty モジュール ) 
forkpty () ( os モジュール ) 
format () ( Formatter の メソッド ) 
format () ( locale モジュール ) 
format () ( PrettyPrinter の メソッド ) 
format () ( Textbox の メソッド ) 
format _ exc () ( traceback モジュール ) 
format _ exception () ( traceback モジュール ) 
format _ exception _ only () ( traceback モジュール ) 
format _ list () ( traceback モジュール ) 
format _ stack () ( traceback モジュール ) 
format _ tb () ( traceback モジュール ) 
formataddr () ( email . Utils モジュール ) 
formatargspec () ( inspect モジュール ) 
formatargvalues () ( inspect モジュール ) 
formatdate () ( email . Utils モジュール ) 
formatException () ( Formatter の メソッド ) 
formatter ( HTMLParser の 属性 ) 
formatter ( standard モジュール ) formatter ( 標準 モジュール ) 
formatTime () ( Formatter の メソッド ) 
formatwarning () ( warnings モジュール ) FORMS Library 
forward () ( turtle モジュール ) 
found _ terminator () ( async _ chat の メソッド ) 
fp ( AddressList の 属性 ) 
fpathconf () ( os モジュール ) 
fpectl ( extension モジュール ) 
fpformat ( standard モジュール ) 
frame ( ScrolledText の 属性 ) frame object 
FrameType ( types モジュール ) 
freeze _ form () ( form の メソッド ) 
freeze _ object () ( FORMS object の メソッド ) 
frexp () ( math モジュール ) 
from _ splittable () ( Charset の メソッド ) 
frombuf () ( TarInfo の メソッド ) 
fromchild ( Popen 4 の 属性 ) 
fromfd () ( socket モジュール ) 
fromfile () ( array の メソッド ) 
fromlist () ( array の メソッド ) 
fromordinal () ( date の メソッド ) 
fromordinal () ( datetime の メソッド ) 
fromstring () ( array の メソッド ) 
fromtimestamp () ( date の メソッド ) 
fromtimestamp () ( datetime の メソッド ) 
fromunicode () ( array の メソッド ) 
fromutc () ( time の メソッド ) 
fstat () ( os モジュール ) 
fstatvfs () ( os モジュール ) 
fsync () ( os モジュール ) 
ftp _ open () ( FTPHandler の メソッド ) 
ftp _ proxy ( 環境 変数 ) 
ftplib ( standard モジュール ) 
ftruncate () ( os モジュール ) 
full () ( Queue の メソッド ) 
function () ( new モジュール ) 
FunctionType ( types モジュール ) 
funny _ files ( dircmp の 属性 ) 
gammavariate () ( random モジュール ) 
garbage ( gc モジュール ) 
gather () ( Textbox の メソッド ) 
gauss () ( random モジュール ) 
gc ( extension モジュール ) 
gdbm ( 組み込み モジュール ),[ Link ],[ Link ] 
ge () ( operator モジュール ) 
generate _ tokens () ( tokenize モジュール ) 
GeneratorType ( types モジュール ) 
get () ( AddressList の メソッド ) 
get () ( Message の メソッド ) 
get () ( mixer device の メソッド ) 
get () ( Queue の メソッド ) 
get () ( SafeConfigParser の メソッド ),[ Link ] 
get () ( webbrowser モジュール ) get _ all () ( Message の メソッド ) 
get _ begidx () ( readline モジュール ) 
get _ body _ encoding () ( Charset の メソッド ) 
get _ boundary () ( Message の メソッド ) 
get _ buffer () ( Packer の メソッド ) 
get _ buffer () ( Unpacker の メソッド ) 
get _ charset () ( Message の メソッド ) 
get _ charsets () ( Message の メソッド ) 
get _ close _ matches () ( difflib モジュール ) 
get _ completer () ( readline モジュール ) 
get _ completer _ delims () ( readline モジュール ) 
get _ content _ charset () ( Message の メソッド ) 
get _ content _ maintype () ( Message の メソッド ) 
get _ content _ subtype () ( Message の メソッド ) 
get _ content _ type () ( Message の メソッド ) 
get _ current _ history _ length () ( readline モジュール ) 
get _ data () ( Request の メソッド ) 
get _ debug () ( gc モジュール ) 
get _ default _ type () ( Message の メソッド ) 
get _ dialect () ( csv モジュール ) 
get _ directory () ( fl モジュール ) 
get _ doctest () ( DocTestParser の メソッド ) 
get _ endidx () ( readline モジュール ) 
get _ examples () ( DocTestParser の メソッド ) 
get _ filename () ( fl モジュール ) 
get _ filename () ( Message の メソッド ) 
get _ full _ url () ( Request の メソッド ) 
get _ grouped _ opcodes () ( SequenceMatcher の メソッド ) 
get _ history _ item () ( readline モジュール ) 
get _ history _ length () ( readline モジュール ) 
get _ host () ( Request の メソッド ) 
get _ ident () ( thread モジュール ) 
get _ line _ buffer () ( readline モジュール ) 
get _ magic () ( imp モジュール ) 
get _ main _ type () ( Message の メソッド ) 
get _ matching _ blocks () ( SequenceMatcher の メソッド ) 
get _ method () ( Request の メソッド ) 
get _ mouse () ( fl モジュール ) 
get _ nonstandard _ attr () ( Cookie の メソッド ) 
get _ nowait () ( Queue の メソッド ) 
get _ objects () ( gc モジュール ) 
get _ opcodes () ( SequenceMatcher の メソッド ) 
get _ origin _ req _ host () ( Request の メソッド ) 
get _ osfhandle () ( msvcrt モジュール ) 
get _ output _ charset () ( Charset の メソッド ) 
get _ param () ( Message の メソッド ) 
get _ params () ( Message の メソッド ) 
get _ pattern () ( fl モジュール ) 
get _ payload () ( Message の メソッド ) 
get _ position () ( Unpacker の メソッド ) 
get _ recsrc () ( mixer device の メソッド ) 
get _ referents () ( gc モジュール ) 
get _ referrers () ( gc モジュール ) 
get _ rgbmode () ( fl モジュール ) 
get _ selector () ( Request の メソッド ) 
get _ socket () ( Telnet の メソッド ) 
get _ starttag _ text () ( HTMLParser の メソッド ) 
get _ starttag _ text () ( SGMLParser の メソッド ) 
get _ subtype () ( Message の メソッド ) 
get _ suffixes () ( imp モジュール ) 
get _ terminator () ( async _ chat の メソッド ) 
get _ threshold () ( gc モジュール ) 
get _ token () ( shlex の メソッド ) 
get _ type () ( Message の メソッド ) 
get _ type () ( Request の メソッド ) 
get _ unixfrom () ( Message の メソッド ) 
getacl () ( IMAP 4 _ stream の メソッド ) 
getaddr () ( AddressList の メソッド ) 
getaddresses () ( email . Utils モジュール ) 
getaddrinfo () ( socket モジュール ) 
getaddrlist () ( AddressList の メソッド ) 
getallmatchingheaders () ( AddressList の メソッド ) 
getargspec () ( inspect モジュール ) 
getargvalues () ( inspect モジュール ) 
getatime () ( os . path モジュール ) 
getAttribute () ( Element の メソッド ) 
getAttributeNode () ( Element の メソッド ) 
getAttributeNodeNS () ( Element の メソッド ) 
getAttributeNS () ( Element の メソッド ) 
GetBase () ( xmlparser の メソッド ) 
getbegyx () ( window の メソッド ) 
getboolean () ( SafeConfigParser の メソッド ) 
getByteStream () ( InputSource の メソッド ) 
getcaps () ( mailcap モジュール ) 
getch () ( msvcrt モジュール ) 
getch () ( window の メソッド ) 
getchannels () ( audio configuration の メソッド ) 
getCharacterStream () ( InputSource の メソッド ) 
getche () ( msvcrt モジュール ) 
getcheckinterval () ( sys モジュール ) 
getChildNodes () ( Node の メソッド ) 
getChildren () ( Node の メソッド ) 
getclasstree () ( inspect モジュール ) 
getColumnNumber () ( Locator の メソッド ) 
getcomments () ( inspect モジュール ) 
getcompname () ( aifc の メソッド ) 
getcompname () ( AU _ read の メソッド ) 
getcompname () ( Wave _ read の メソッド ) 
getcomptype () ( aifc の メソッド ) 
getcomptype () ( AU _ read の メソッド ) 
getcomptype () ( Wave _ read の メソッド ) 
getconfig () ( audio port の メソッド ) 
getContentHandler () ( XMLReader の メソッド ) 
getcontext () ( decimal モジュール ) 
getcontext () ( MH の メソッド ) 
getctime () ( os . path モジュール ) 
getcurrent () ( Folder の メソッド ) 
getcwd () ( os モジュール ) 
getdate () ( AddressList の メソッド ) 
getdate _ tz () ( AddressList の メソッド ) 
getdecoder () ( codecs モジュール ) 
getdefaultencoding () ( sys モジュール ) 
getdefaultlocale () ( locale モジュール ) 
getdefaulttimeout () ( socket モジュール ) 
getdlopenflags () ( sys モジュール ) 
getdoc () ( inspect モジュール ) 
getDOMImplementation () ( xml . dom モジュール ) 
getDTDHandler () ( XMLReader の メソッド ) 
getEffectiveLevel () ( Textbox の メソッド ) 
getegid () ( os モジュール ) 
getElementsByTagName () ( Document の メソッド ) 
getElementsByTagName () ( Element の メソッド ) 
getElementsByTagNameNS () ( Document の メソッド ) 
getElementsByTagNameNS () ( Element の メソッド ) 
getencoder () ( codecs モジュール ) 
getEncoding () ( InputSource の メソッド ) 
getencoding () ( Message の メソッド ) 
getEntityResolver () ( XMLReader の メソッド ) 
getenv () ( os モジュール ) 
getErrorHandler () ( XMLReader の メソッド ) 
geteuid () ( os モジュール ) 
getEvent () ( DOMEventStream の メソッド ) 
getEventCategory () ( NTEventLogHandler の メソッド ) 
getEventType () ( NTEventLogHandler の メソッド ) 
getException () ( SAXException の メソッド ) 
getfd () ( audio port の メソッド ) 
getFeature () ( XMLReader の メソッド ) 
getfile () ( inspect モジュール ) 
getfilesystemencoding () ( sys モジュール ) 
getfillable () ( audio port の メソッド ) 
getfilled () ( audio port の メソッド ) 
getfillpoint () ( audio port の メソッド ) 
getfirst () ( FieldStorage の メソッド ) 
getfirstmatchingheader () ( AddressList の メソッド ) 
getfloat () ( SafeConfigParser の メソッド ) 
getfloatmax () ( audio configuration の メソッド ) 
getfqdn () ( socket モジュール ) 
getframeinfo () ( inspect モジュール ) 
getframerate () ( aifc の メソッド ) 
getframerate () ( AU _ read の メソッド ) 
getframerate () ( Wave _ read の メソッド ) 
getfullname () ( Folder の メソッド ) 
getgid () ( os モジュール ) 
getgrall () ( grp モジュール ) 
getgrgid () ( grp モジュール ) 
getgrnam () ( grp モジュール ) 
getgroups () ( os モジュール ) 
getheader () ( AddressList の メソッド ) 
getheader () ( HTTPSConnection の メソッド ) 
getheaders () ( HTTPSConnection の メソッド ) gethostbyaddr () ( in module socket ) 
gethostbyaddr () ( socket モジュール ) 
gethostbyname () ( socket モジュール ) 
gethostbyname _ ex () ( socket モジュール ) gethostname () ( in module socket ) 
gethostname () ( socket モジュール ) 
getinfo () ( audio device の メソッド ) 
getinfo () ( ZipFile の メソッド ) 
getinnerframes () ( inspect モジュール ) 
GetInputContext () ( xmlparser の メソッド ) 
getint () ( SafeConfigParser の メソッド ) 
getitem () ( operator モジュール ) 
getkey () ( window の メソッド ) 
getlast () ( Folder の メソッド ) 
getLength () ( Attributes の メソッド ) 
getLevelName () ( logging モジュール ) 
getline () ( linecache モジュール ) 
getLineNumber () ( Locator の メソッド ) 
getlist () ( FieldStorage の メソッド ) 
getloadavg () ( os モジュール ) 
getlocale () ( locale モジュール ) 
getLogger () ( logging モジュール ) 
getLoggerClass () ( logging モジュール ) 
getlogin () ( os モジュール ) 
getmaintype () ( Message の メソッド ) 
getmark () ( aifc の メソッド ) 
getmark () ( AU _ read の メソッド ) 
getmark () ( Wave _ read の メソッド ) 
getmarkers () ( aifc の メソッド ) 
getmarkers () ( AU _ read の メソッド ) 
getmarkers () ( Wave _ read の メソッド ) 
getmaxyx () ( window の メソッド ) 
getmcolor () ( fl モジュール ) 
getmember () ( TarFile の メソッド ) 
getmembers () ( inspect モジュール ) 
getmembers () ( TarFile の メソッド ) 
getMessage () ( SAXException の メソッド ) 
getmessagefilename () ( Folder の メソッド ) 
getMessageID () ( NTEventLogHandler の メソッド ) 
getmodule () ( inspect モジュール ) 
getmoduleinfo () ( inspect モジュール ) 
getmodulename () ( inspect モジュール ) 
getmouse () ( curses モジュール ) 
getmro () ( inspect モジュール ) 
getmtime () ( os . path モジュール ) 
getname () ( Chunk の メソッド ) 
getName () ( Thread の メソッド ) 
getNameByQName () ( AttributesNS の メソッド ) 
getnameinfo () ( socket モジュール ) 
getNames () ( Attributes の メソッド ) 
getnames () ( TarFile の メソッド ) 
getnamespace () ( XMLParser の メソッド ) 
getnchannels () ( aifc の メソッド ) 
getnchannels () ( AU _ read の メソッド ) 
getnchannels () ( Wave _ read の メソッド ) 
getnframes () ( aifc の メソッド ) 
getnframes () ( AU _ read の メソッド ) 
getnframes () ( Wave _ read の メソッド ) 
getopt () ( getopt モジュール ) 
getopt ( standard モジュール ) 
getouterframes () ( inspect モジュール ) 
getoutput () ( commands モジュール ) 
getpagesize () ( resource モジュール ) 
getparam () ( Message の メソッド ) 
getparams () ( aifc の メソッド ) 
getparams () ( al モジュール ) 
getparams () ( AU _ read の メソッド ) 
getparams () ( Wave _ read の メソッド ) 
getparyx () ( window の メソッド ) 
getpass () ( getpass モジュール ) 
getpass ( standard モジュール ) 
getpath () ( MH の メソッド ) 
getpeername () ( socket の メソッド ) 
getpgrp () ( os モジュール ) 
getpid () ( os モジュール ) 
getplist () ( Message の メソッド ) 
getpos () ( HTMLParser の メソッド ) 
getppid () ( os モジュール ) 
getpreferredencoding () ( locale モジュール ) 
getprofile () ( MH の メソッド ) 
getProperty () ( XMLReader の メソッド ) 
getprotobyname () ( socket モジュール ) 
getPublicId () ( InputSource の メソッド ) 
getPublicId () ( Locator の メソッド ) 
getpwall () ( pwd モジュール ) 
getpwnam () ( pwd モジュール ) 
getpwuid () ( pwd モジュール ) 
getQNameByName () ( AttributesNS の メソッド ) 
getQNames () ( AttributesNS の メソッド ) 
getqueuesize () ( audio configuration の メソッド ) 
getquota () ( IMAP 4 _ stream の メソッド ) 
getquotaroot () ( IMAP 4 _ stream の メソッド ) 
getrandbits () ( random モジュール ) 
getrawheader () ( AddressList の メソッド ) 
getreader () ( codecs モジュール ) 
getrecursionlimit () ( sys モジュール ) 
getrefcount () ( sys モジュール ) 
getresponse () ( HTTPSConnection の メソッド ) 
getrlimit () ( resource モジュール ) 
getrusage () ( resource モジュール ) 
getsampfmt () ( audio configuration の メソッド ) 
getsample () ( audioop モジュール ) 
getsampwidth () ( aifc の メソッド ) 
getsampwidth () ( AU _ read の メソッド ) 
getsampwidth () ( Wave _ read の メソッド ) 
getsequences () ( Folder の メソッド ) 
getsequencesfilename () ( Folder の メソッド ) 
getservbyname () ( socket モジュール ) 
getservbyport () ( socket モジュール ) 
getsid () ( os モジュール ) 
getsignal () ( signal モジュール ) 
getsize () ( Chunk の メソッド ) 
getsize () ( os . path モジュール ) 
getsizes () ( imgfile モジュール ) 
getslice () ( operator モジュール ) 
getsockname () ( socket の メソッド ) 
getsockopt () ( socket の メソッド ) 
getsource () ( inspect モジュール ) 
getsourcefile () ( inspect モジュール ) 
getsourcelines () ( inspect モジュール ) 
getstate () ( random モジュール ) 
getstatus () ( audio port の メソッド ) 
getstatus () ( CD player の メソッド ) 
getstatus () ( commands モジュール ) 
getstatusoutput () ( commands モジュール ) 
getstr () ( window の メソッド ) 
getSubject () ( SMTPHandler の メソッド ) 
getsubtype () ( Message の メソッド ) 
getSystemId () ( InputSource の メソッド ) 
getSystemId () ( Locator の メソッド ) 
getsyx () ( curses モジュール ) 
gettarinfo () ( TarFile の メソッド ) 
gettempdir () ( tempfile モジュール ) 
gettempprefix () ( tempfile モジュール ) 
getTestCaseNames () ( TestLoader の メソッド ) 
gettext () ( gettext モジュール ) 
gettext () ( GNUTranslations の メソッド ) 
gettext () ( NullTranslations の メソッド ) 
gettext ( standard モジュール ) 
gettimeout () ( socket の メソッド ) 
gettrackinfo () ( CD player の メソッド ) 
getType () ( Attributes の メソッド ) 
gettype () ( Message の メソッド ) 
getuid () ( os モジュール ) 
getuser () ( getpass モジュール ) 
getValue () ( Attributes の メソッド ) 
getvalue () ( StringIO の メソッド ) 
getValueByQName () ( AttributesNS の メソッド ) 
getweakrefcount () ( weakref モジュール ) 
getweakrefs () ( weakref モジュール ) 
getwelcome () ( FTP の メソッド ) 
getwelcome () ( NNTPDataError の メソッド ) 
getwelcome () ( POP 3 _ SSL の メソッド ) 
getwidth () ( audio configuration の メソッド ) 
getwin () ( curses モジュール ) 
getwindowsversion () ( sys モジュール ) 
getwriter () ( codecs モジュール ) 
getyx () ( window の メソッド ) 
gid ( TarInfo の 属性 ) 
GL ( standard モジュール ) 
gl ( 組み込み モジュール ) 
glob () ( glob モジュール ) 
glob ( standard モジュール ) 
glob ( 標準 モジュール ) globals () ( built - in function ) 
globs ( DocTest の 属性 ) 
gmtime () ( time モジュール ) 
gname ( TarInfo の 属性 ) 
gnu _ getopt () ( getopt モジュール ) 
gopher _ open () ( GopherHandler の メソッド ) 
gopher _ proxy ( 環境 変数 ) 
gopherlib ( standard モジュール ) 
got ( DocTestFailure の 属性 ) 
goto () ( turtle モジュール ) 
grey 22 grey () ( imageop モジュール ) 
grey 2 grey 2 () ( imageop モジュール ) 
grey 2 grey 4 () ( imageop モジュール ) 
grey 2 mono () ( imageop モジュール ) 
grey 42 grey () ( imageop モジュール ) 
group () ( MatchObject の メソッド ) 
group () ( NNTPDataError の メソッド ) 
groupby () ( itertools モジュール ) 
groupdict () ( MatchObject の メソッド ) 
groupindex ( RegexObject の 属性 ) 
groups () ( MatchObject の メソッド ) 
grp ( 組み込み モジュール ) 
gt () ( operator モジュール ) 
guess _ all _ extensions () ( mimetypes モジュール ) guess _ extension () ( MimeTypes の メソッド ) 
guess _ extension () ( mimetypes モジュール ) 
guess _ type () ( MimeTypes の メソッド ) 
guess _ type () ( mimetypes モジュール ) 
gzip ( standard モジュール ) 
halfdelay () ( curses モジュール ) 
handle () ( BaseHTTPRequestHandler の メソッド ) 
handle () ( Textbox の メソッド ),[ Link ] 
handle _ accept () ( dispatcher の メソッド ) 
handle _ authentication _ request () ( AbstractBasicAuthHandler の メソッド ) 
handle _ authentication _ request () ( AbstractDigestAuthHandler の メソッド ) 
handle _ cdata () ( XMLParser の メソッド ) 
handle _ charref () ( HTMLParser の メソッド ) 
handle _ charref () ( SGMLParser の メソッド ) 
handle _ charref () ( XMLParser の メソッド ) 
handle _ close () ( async _ chat の メソッド ) 
handle _ close () ( dispatcher の メソッド ) 
handle _ comment () ( HTMLParser の メソッド ) 
handle _ comment () ( SGMLParser の メソッド ) 
handle _ comment () ( XMLParser の メソッド ) 
handle _ connect () ( dispatcher の メソッド ) 
handle _ data () ( HTMLParser の メソッド ) 
handle _ data () ( SGMLParser の メソッド ) 
handle _ data () ( XMLParser の メソッド ) 
handle _ decl () ( HTMLParser の メソッド ) 
handle _ decl () ( SGMLParser の メソッド ) 
handle _ doctype () ( XMLParser の メソッド ) 
handle _ endtag () ( HTMLParser の メソッド ) 
handle _ endtag () ( SGMLParser の メソッド ) 
handle _ endtag () ( XMLParser の メソッド ) 
handle _ entityref () ( HTMLParser の メソッド ) 
handle _ entityref () ( SGMLParser の メソッド ) 
handle _ error () ( dispatcher の メソッド ) 
handle _ expt () ( dispatcher の メソッド ) 
handle _ image () ( HTMLParser の メソッド ) 
handle _ one _ request () ( BaseHTTPRequestHandler の メソッド ) 
handle _ pi () ( HTMLParser の メソッド ) 
handle _ proc () ( XMLParser の メソッド ) 
handle _ read () ( async _ chat の メソッド ) 
handle _ read () ( dispatcher の メソッド ) 
handle _ request () ( S impleXMLRPCRequestHandler の メソッド ) 
handle _ special () ( XMLParser の メソッド ) 
handle _ startendtag () ( HTMLParser の メソッド ) 
handle _ starttag () ( HTMLParser の メソッド ) 
handle _ starttag () ( SGMLParser の メソッド ) 
handle _ starttag () ( XMLParser の メソッド ) 
handle _ write () ( async _ chat の メソッド ) 
handle _ write () ( dispatcher の メソッド ) 
handle _ xml () ( XMLParser の メソッド ) 
handleError () ( SocketHandler の メソッド ),[ Link ] 
handleError () ( Textbox の メソッド ) 
handler () ( cgitb モジュール ) 
has _ colors () ( curses モジュール ) 
has _ data () ( Request の メソッド ) 
has _ extn () ( SMTP の メソッド ) 
has _ header () ( Request の メソッド ) 
has _ header () ( Sniffer の メソッド ) 
has _ ic () ( curses モジュール ) 
has _ il () ( curses モジュール ) 
has _ ipv 6 ( socket モジュール ) 
has _ key () ( Message の メソッド ) 
has _ key () ( Queue の メソッド ) 
has _ nonstandard _ attr () ( Cookie の メソッド ) 
has _ option () ( SafeConfigParser の メソッド ) 
has _ section () ( SafeConfigParser の メソッド ) 
hasAttributes () ( Node の メソッド ) 
hasChildNodes () ( Node の メソッド ) 
hascompare ( dis モジュール ) 
hasconst ( dis モジュール ) 
hasFeature () ( DOMImplementation の メソッド ) 
hasfree ( dis モジュール ) 
hashopen () ( bsddb モジュール ) 
hasjabs ( dis モジュール ) 
hasjrel ( dis モジュール ) 
haslocal ( dis モジュール ) 
hasname ( dis モジュール ) 
have _ unicode ( test . test _ support モジュール ) 
head () ( NNTPDataError の メソッド ) 
header _ encode () ( Charset の メソッド ) 
header _ encoding ( email . Charset モジュール ) 
header _ offset ( ZipInfo の 属性 ) 
headers ( AddressList の 属性 ) 
headers ( BaseHTTPRequestHandler の 属性 ) 
headers ( ServerProxy の 属性 ) 
heapify () ( heapq モジュール ) 
heapmin () ( msvcrt モジュール ) 
heappop () ( heapq モジュール ) 
heappush () ( heapq モジュール ) 
heapq ( standard モジュール ) 
heapreplace () ( heapq モジュール ) 
helo () ( SMTP の メソッド ) 
help () ( NNTPDataError の メソッド ) 
hexbin () ( binhex モジュール ) 
hexdigest () ( hmac の メソッド ) 
hexdigest () ( md 5 の メソッド ) 
hexdigest () ( sha の メソッド ) 
hexdigits ( string モジュール ) 
hexlify () ( binascii モジュール ) 
hexversion ( sys モジュール ) 
hidden () ( Textbox の メソッド ) 
hide () ( Textbox の メソッド ) 
hide _ cookie 2 ( LWPCookieJar の 属性 ) 
hide _ form () ( form の メソッド ) 
hide _ object () ( FORMS object の メソッド ) 
HIGHEST _ PROTOCOL ( pickle モジュール ) 
hline () ( window の メソッド ) 
hls _ to _ rgb () ( colorsys モジュール ) 
hmac ( standard モジュール ) 
HOME ( 環境 変数 ),[ Link ] 
hosts ( netrc の 属性 ) 
hotshot ( standard モジュール ) 
hotshot . stats ( standard モジュール ) 
hour ( datetime の 属性 ) 
hour ( time の 属性 ) 
hsv _ to _ rgb () ( colorsys モジュール ) 
HtmlDiff ( difflib の クラス ) 
htmlentitydefs ( standard モジュール ) 
htmllib ( standard モジュール ) 
HTMLParser ( standard モジュール ) 
htonl () ( socket モジュール ) 
htons () ( socket モジュール ) 
http _ error _ 301 () ( HTTPRedirectHandler の メソッド ) 
http _ error _ 302 () ( HTTPRedirectHandler の メソッド ) 
http _ error _ 303 () ( HTTPRedirectHandler の メソッド ) 
http _ error _ 307 () ( HTTPRedirectHandler の メソッド ) 
http _ error _ 401 () ( HTTPBasicAuthHandler の メソッド ) 
http _ error _ 401 () ( HTTPDigestAuthHandler の メソッド ) 
http _ error _ 407 () ( ProxyBasicAuthHandler の メソッド ) 
http _ error _ 407 () ( ProxyDigestAuthHandler の メソッド ) 
http _ error _\ varnnn () ( BaseHandler の メソッド ) 
http _ error _ default () ( BaseHandler の メソッド ) 
http _ open () ( HTTPHandler の メソッド ) 
HTTP _ PORT ( httplib モジュール ) 
hypot () ( math モジュール ) 
I ( re モジュール ) 
ibufcount () ( audio device の メソッド ) 
id () ( TestCase の メソッド ) 
idcok () ( window の メソッド ) 
ident ( cd モジュール ) 
identchars ( Cmd の 属性 ) 
idlok () ( window の メソッド ) 
ifilter () ( itertools モジュール ) 
ifilterfalse () ( itertools モジュール ) 
ignorableWhitespace () ( ContentHandler の メソッド ) 
ignore () ( Stats の メソッド ) 
ignore _ errors () ( codecs モジュール ) 
IGNORE _ EXCEPTION _ DETAIL ( doctest モジュール ) 
ignore _ zeros ( TarFile の 属性 ) 
IGNORECASE ( re モジュール ) 
ihave () ( NNTPDataError の メソッド ) 
ihooks ( 標準 モジュール ) IllegalKeywordArgument 
imageop ( 組み込み モジュール ) 
imap () ( itertools モジュール ) 
imaplib ( standard モジュール ) 
imgfile ( 組み込み モジュール ) 
imghdr ( standard モジュール ) 
immedok () ( window の メソッド ) 
imp ( 組み込み モジュール ),[ Link ] 
in _ table _ a 1 () ( stringprep モジュール ) 
in _ table _ b 1 () ( stringprep モジュール ) 
in _ table _ c 11 () ( stringprep モジュール ) 
in _ table _ c 11 _ c 12 () ( stringprep モジュール ) 
in _ table _ c 12 () ( stringprep モジュール ) 
in _ table _ c 21 () ( stringprep モジュール ) 
in _ table _ c 21 _ c 22 () ( stringprep モジュール ) 
in _ table _ c 22 () ( stringprep モジュール ) 
in _ table _ c 3 () ( stringprep モジュール ) 
in _ table _ c 4 () ( stringprep モジュール ) 
in _ table _ c 5 () ( stringprep モジュール ) 
in _ table _ c 6 () ( stringprep モジュール ) 
in _ table _ c 7 () ( stringprep モジュール ) 
in _ table _ c 8 () ( stringprep モジュール ) 
in _ table _ c 9 () ( stringprep モジュール ) 
in _ table _ d 1 () ( stringprep モジュール ) 
in _ table _ d 2 () ( stringprep モジュール ) 
INADDR _* ( socket モジュール ) 
inch () ( window の メソッド ) 
indent ( Example の 属性 ) 
index () ( array の メソッド ) 
index ( cd モジュール ) 
index () ( string の メソッド ) 
index () ( string モジュール ) 
indexOf () ( operator モジュール ) 
inet _ aton () ( socket モジュール ) 
inet _ ntoa () ( socket モジュール ) 
inet _ ntop () ( socket モジュール ) 
inet _ pton () ( socket モジュール ) 
Inexact ( decimal の クラス ) 
infile ( shlex の 属性 ) 
info () ( logging モジュール ) 
info () ( NullTranslations の メソッド ) 
info () ( Textbox の メソッド ) 
infolist () ( ZipFile の メソッド ) 
init () ( fm モジュール ) 
init () ( mimetypes モジュール ) 
init _ builtin () ( imp モジュール ) 
init _ color () ( curses モジュール ) 
init _ frozen () ( imp モジュール ) 
init _ pair () ( curses モジュール ) 
inited ( mimetypes モジュール ) 
initial _ indent ( TextWrapper の 属性 ) 
initscr () ( curses モジュール ) 
input () ( fileinput モジュール ) 
input () ( 組み込み 関数 ) input _ charset ( email . Charset モジュール ) 
InputType ( cStringIO モジュール ) 
insch () ( window の メソッド ) 
insdelln () ( window の メソッド ) 
insert () ( array の メソッド ) 
insert _ text () ( readline モジュール ) 
insertBefore () ( Node の メソッド ) 
insertln () ( window の メソッド ) 
insnstr () ( window の メソッド ) 
insort () ( bisect モジュール ) 
insort _ left () ( bisect モジュール ) 
insort _ right () ( bisect モジュール ) 
inspect ( standard モジュール ) 
insstr () ( window の メソッド ) 
install () ( gettext モジュール ) 
install () ( NullTranslations の メソッド ) 
install _ opener () ( urllib 2 モジュール ) 
instance () ( new モジュール ) 
instancemethod () ( new モジュール ) 
InstanceType ( types モジュール ) 
instr () ( window の メソッド ) 
instream ( shlex の 属性 ) 
int () ( built - in function ) int () ( 組み込み 関数 ) 
Int 2 AP () ( imaplib モジュール ) 
interact () ( code モジュール ) 
interact () ( InteractiveConsole の メソッド ) 
interact () ( Telnet の メソッド ) 
internal _ attr ( ZipInfo の 属性 ) 
Internaldate 2 tuple () ( imaplib モジュール ) 
internalSubset ( DocumentType の 属性 ) 
interrupt _ main () ( thread モジュール ) 
intro ( Cmd の 属性 ) 
IntType ( types モジュール ) 
inv () ( operator モジュール ) 
InvalidOperation ( decimal の クラス ) 
invert () ( operator モジュール ) 
ioctl () ( fcntl モジュール ) 
IP _* ( socket モジュール ) 
IPPORT _* ( socket モジュール ) 
IPPROTO _* ( socket モジュール ) 
IPV 6 _* ( socket モジュール ) 
is _() ( operator モジュール ) 
is _ blocked () ( DefaultCookiePolicy の メソッド ) 
is _ builtin () ( imp モジュール ) 
IS _ CHARACTER _ JUNK () ( difflib モジュール ) 
is _ data () ( MultiFile の メソッド ) 
is _ empty () ( fifo の メソッド ) 
is _ expired () ( Cookie の メソッド ) 
is _ frozen () ( imp モジュール ) 
is _ jython ( test . test _ support モジュール ) 
IS _ LINE _ JUNK () ( difflib モジュール ) 
is _ linetouched () ( window の メソッド ) 
is _ multipart () ( Message の メソッド ) 
is _ not () ( operator モジュール ) 
is _ not _ allowed () ( DefaultCookiePolicy の メソッド ) 
is _ resource _ enabled () ( test . test _ support モジュール ) 
is _ tarfile () ( tarfile モジュール ) 
is _ unverifiable () ( Request の メソッド ) 
is _ wintouched () ( window の メソッド ) 
is _ zipfile () ( zipfile モジュール ) 
isabs () ( os . path モジュール ) 
isAlive () ( Thread の メソッド ) 
isalnum () ( curses . ascii モジュール ) 
isalnum () ( string の メソッド ) 
isalpha () ( curses . ascii モジュール ) 
isalpha () ( string の メソッド ) 
isascii () ( curses . ascii モジュール ) 
isatty () ( Chunk の メソッド ) 
isatty () ( file の メソッド ) 
isatty () ( os モジュール ) 
isblank () ( curses . ascii モジュール ) 
isblk () ( TarInfo の メソッド ) 
isbuiltin () ( inspect モジュール ) 
isCallable () ( operator モジュール ) 
ischr () ( TarInfo の メソッド ) 
isclass () ( inspect モジュール ) 
iscntrl () ( curses . ascii モジュール ) 
iscode () ( inspect モジュール ) 
iscomment () ( AddressList の メソッド ) 
isctrl () ( curses . ascii モジュール ) 
isDaemon () ( Thread の メソッド ) 
isdatadescriptor () ( inspect モジュール ) 
isdev () ( TarInfo の メソッド ) 
isdigit () ( curses . ascii モジュール ) 
isdigit () ( string の メソッド ) 
isdir () ( os . path モジュール ) 
isdir () ( TarInfo の メソッド ) 
isenabled () ( gc モジュール ) 
isEnabledFor () ( Textbox の メソッド ) 
isendwin () ( curses モジュール ) 
ISEOF () ( token モジュール ) 
isexpr () ( AST の メソッド ) 
isexpr () ( parser モジュール ) 
isfifo () ( TarInfo の メソッド ) 
isfile () ( os . path モジュール ) 
isfile () ( TarInfo の メソッド ) 
isfirstline () ( fileinput モジュール ) 
isframe () ( inspect モジュール ) 
isfunction () ( inspect モジュール ) 
isgraph () ( curses . ascii モジュール ) 
isheader () ( AddressList の メソッド ) 
iskeyword () ( keyword モジュール ) 
islast () ( AddressList の メソッド ) 
isleap () ( calendar モジュール ) 
islice () ( itertools モジュール ) 
islink () ( os . path モジュール ) 
islnk () ( TarInfo の メソッド ) 
islower () ( curses . ascii モジュール ) 
islower () ( string の メソッド ) 
isMappingType () ( operator モジュール ) 
ismeta () ( curses . ascii モジュール ) 
ismethod () ( inspect モジュール ) 
ismethoddescriptor () ( inspect モジュール ) 
ismodule () ( inspect モジュール ) 
ismount () ( os . path モジュール ) 
ISNONTERMINAL () ( token モジュール ) 
isNumberType () ( operator モジュール ) 
isocalendar () ( date の メソッド ) 
isocalendar () ( datetime の メソッド ) 
isoformat () ( date の メソッド ) 
isoformat () ( datetime の メソッド ) 
isoformat () ( time の メソッド ) 
isoweekday () ( date の メソッド ) 
isoweekday () ( datetime の メソッド ) 
isprint () ( curses . ascii モジュール ) 
ispunct () ( curses . ascii モジュール ) 
isqueued () ( fl モジュール ) 
isreadable () ( pprint モジュール ) 
isreadable () ( PrettyPrinter の メソッド ) 
isrecursive () ( pprint モジュール ) 
isrecursive () ( PrettyPrinter の メソッド ) 
isreg () ( TarInfo の メソッド ) 
isReservedKey () ( Morsel の メソッド ) 
isroutine () ( inspect モジュール ) 
isSameNode () ( Node の メソッド ) 
isSequenceType () ( operator モジュール ) 
isSet () ( Event の メソッド ) 
isspace () ( curses . ascii モジュール ) 
isspace () ( string の メソッド ) 
isstdin () ( fileinput モジュール ) 
issuite () ( AST の メソッド ) 
issuite () ( parser モジュール ) 
issym () ( TarInfo の メソッド ) 
ISTERMINAL () ( token モジュール ) 
istitle () ( string の メソッド ) 
istraceback () ( inspect モジュール ) 
isupper () ( curses . ascii モジュール ) 
isupper () ( string の メソッド ) 
isxdigit () ( curses . ascii モジュール ) 
item () ( NamedNodeMap の メソッド ) 
item () ( NodeList の メソッド ) 
itemgetter () ( operator モジュール ) 
items () ( Message の メソッド ) 
items () ( SafeConfigParser の メソッド ),[ Link ] 
itemsize ( array の 属性 ) 
itertools ( standard モジュール ) 
izip () ( itertools モジュール ) 
java _ ver () ( platform モジュール ) 
join () ( os . path モジュール ) 
join () ( string の メソッド ) 
join () ( string モジュール ) 
join () ( Thread の メソッド ) 
joinfields () ( string モジュール ) 
jpeg ( 組み込み モジュール ) 
js _ output () ( BaseCookie の メソッド ) 
js _ output () ( Morsel の メソッド ) 
jumpahead () ( random モジュール ) 
kbhit () ( msvcrt モジュール ) 
KDEDIR ( 環境 変数 ) 
key ( Morsel の 属性 ) 
keyname () ( curses モジュール ) 
keypad () ( window の メソッド ) 
keys () ( Message の メソッド ) 
keys () ( Queue の メソッド ) 
keyword ( standard モジュール ) 
kill () ( os モジュール ) 
killchar () ( curses モジュール ) 
killpg () ( os モジュール ) 
knee ( モジュール ) 
knownfiles ( mimetypes モジュール ) 
kwlist ( keyword モジュール ) 
LambdaType ( types モジュール ) 
LANG ( 環境 変数 ),[ Link ],[ Link ],[ Link ],[ Link ] 
LANGUAGE ( 環境 変数 ),[ Link ] 
last () ( dbhash の メソッド ) 
last ( MultiFile の 属性 ) 
last () ( NNTPDataError の メソッド ) 
last () ( Queue の メソッド ) 
last _ traceback ( sys モジュール ) 
last _ type ( sys モジュール ) 
last _ value ( sys モジュール ) 
lastChild ( Node の 属性 ) 
lastcmd ( Cmd の 属性 ) 
lastgroup ( MatchObject の 属性 ) 
lastindex ( MatchObject の 属性 ) 
lastpart () ( MimeWriter の メソッド ) 
LC _ ALL ( locale モジュール ) LC _ ALL ( 環境 変数 ),[ Link ] 
LC _ COLLATE ( locale モジュール ) 
LC _ CTYPE ( locale モジュール ) 
LC _ MESSAGES ( locale モジュール ) 
LC _ MESSAGES ( 環境 変数 ),[ Link ] 
LC _ MONETARY ( locale モジュール ) 
LC _ NUMERIC ( locale モジュール ) 
ldexp () ( math モジュール ) 
ldgettext () ( gettext モジュール ) 
ldngettext () ( gettext モジュール ) 
le () ( operator モジュール ) 
leapdays () ( calendar モジュール ) 
leaveok () ( window の メソッド ) 
left () ( turtle モジュール ) 
left _ list ( dircmp の 属性 ) 
left _ only ( dircmp の 属性 ) 
len () ( built - in function ) len () ( 組み込み 関数 ),[ Link ] 
length ( NamedNodeMap の 属性 ) 
length ( NodeList の 属性 ) 
letters ( string モジュール ) 
level ( MultiFile の 属性 ) 
lgettext () ( gettext モジュール ) 
lgettext () ( NullTranslations の メソッド ) 
libc _ ver () ( platform モジュール ) 
library ( dbm モジュール ) 
lin 2 adpcm () ( audioop モジュール ) 
lin 2 adpcm 3 () ( audioop モジュール ) 
lin 2 lin () ( audioop モジュール ) 
lin 2 ulaw () ( audioop モジュール ) 
linecache ( standard モジュール ) 
lineno ( class descriptor の 属性 ) 
lineno ( DocTest の 属性 ) 
lineno ( Example の 属性 ) 
lineno ( ExpatError の 属性 ) 
lineno ( shlex の 属性 ) 
LINES ( 環境 変数 ),[ Link ] 
linesep ( os モジュール ) 
lineterminator ( Dialect の 属性 ) 
link () ( os モジュール ) 
linkname ( TarInfo の 属性 ) 
list () ( IMAP 4 _ stream の メソッド ) 
list () ( NNTPDataError の メソッド ) 
list () ( POP 3 _ SSL の メソッド ) 
list () ( TarFile の メソッド ) 
list _ dialects () ( csv モジュール ) 
listallfolders () ( MH の メソッド ) 
listallsubfolders () ( MH の メソッド ) 
listdir () ( dircache モジュール ) 
listdir () ( os モジュール ) 
listen () ( dispatcher の メソッド ) 
listen () ( logging モジュール ) 
listen () ( socket の メソッド ) 
listfolders () ( MH の メソッド ) 
listmessages () ( Folder の メソッド ) 
listsubfolders () ( MH の メソッド ) 
ListType ( types モジュール ) 
ljust () ( string の メソッド ) 
ljust () ( string モジュール ) 
LK _ LOCK ( msvcrt モジュール ) 
LK _ NBLCK ( msvcrt モジュール ) 
LK _ NBRLCK ( msvcrt モジュール ) 
LK _ RLCK ( msvcrt モジュール ) 
LK _ UNLCK ( msvcrt モジュール ) 
LNAME ( 環境 変数 ) 
lngettext () ( gettext モジュール ) 
lngettext () ( NullTranslations の メソッド ) 
load () ( BaseCookie の メソッド ) 
load () ( FileCookieJar の メソッド ) 
load () ( hotshot . stats モジュール ) 
load () ( marshal モジュール ) 
load () ( pickle モジュール ) 
load () ( Unpickler の メソッド ) 
load _ compiled () ( imp モジュール ) 
load _ dynamic () ( imp モジュール ) 
load _ module () ( imp モジュール ) 
load _ source () ( imp モジュール ) 
loads () ( marshal モジュール ) 
loads () ( pickle モジュール ) 
loads () ( xmlrpclib モジュール ) 
loadTestsFromModule () ( TestLoader の メソッド ) 
loadTestsFromName () ( TestLoader の メソッド ) 
loadTestsFromNames () ( TestLoader の メソッド ) 
loadTestsFromTestCase () ( TestLoader の メソッド ) 
local ( threading の クラス ) 
LOCALE ( re モジュール ) 
locale ( standard モジュール ) 
localeconv () ( locale モジュール ) 
localName ( Attr の 属性 ) 
localName ( Node の 属性 ) 
lock () ( mutex の メソッド ) 
Lock () ( threading モジュール ) lock _ held () ( imp モジュール ) 
locked () ( lock の メソッド ) 
lockf () ( fcntl モジュール ) lockf () ( in module fcntl ) 
locking () ( msvcrt モジュール ) 
LockType ( thread モジュール ) 
log () ( logging モジュール ) 
log () ( math モジュール ) 
log () ( Textbox の メソッド ) 
log 10 () ( cmath モジュール ) 
log 10 () ( math モジュール ) 
log \ optional , base () ( cmath モジュール ) log _ data _ time _ string () ( BaseHTTPRequestHandler の メソッド ) 
log _ error () ( BaseHTTPRequestHandler の メソッド ) 
log _ message () ( BaseHTTPRequestHandler の メソッド ) 
log _ request () ( BaseHTTPRequestHandler の メソッド ) 
logging ( standard モジュール ) 
login () ( FTP の メソッド ) 
login () ( IMAP 4 _ stream の メソッド ) 
login () ( SMTP の メソッド ) 
login _ cram _ md 5 () ( IMAP 4 _ stream の メソッド ) 
LOGNAME ( 環境 変数 ),[ Link ] 
lognormvariate () ( random モジュール ) 
logout () ( IMAP 4 _ stream の メソッド ) 
long () ( built - in function ) long () ( 組み込み 関数 ),[ Link ] 
longimagedata () ( rgbimg モジュール ) 
longname () ( curses モジュール ) 
longstoimage () ( rgbimg モジュール ) 
LongType ( types モジュール ) 
lookup () ( codecs モジュール ) 
lookup () ( unicodedata モジュール ) 
lookup _ error () ( codecs モジュール ) 
loop () ( asyncore モジュール ) 
lower () ( string の メソッド ) 
lower () ( string モジュール ) 
lowercase ( string モジュール ) 
lseek () ( os モジュール ) 
lshift () ( operator モジュール ) 
lstat () ( os モジュール ) 
lstrip () ( string の メソッド ) 
lstrip () ( string モジュール ) 
lsub () ( IMAP 4 _ stream の メソッド ) 
lt () ( operator モジュール ) 
M ( re モジュール ) 
mac _ ver () ( platform モジュール ) 
machine () ( platform モジュール ) 
macros ( netrc の 属性 ) 
mailbox ( standard モジュール ) 
main () ( py _ compile モジュール ) 
main () ( unittest モジュール ) 
major () ( os モジュール ) 
make _ cookies () ( CookieJar の メソッド ) 
make _ file () ( difflib モジュール ) 
make _ form () ( fl モジュール ) 
make _ header () ( email . Header モジュール ) 
make _ msgid () ( email . Utils モジュール ) 
make _ parser () ( xml . sax モジュール ) 
make _ table () ( difflib モジュール ) 
makedev () ( os モジュール ) 
makedirs () ( os モジュール ) 
makefile () ( socket の メソッド ) 
makefolder () ( MH の メソッド ) 
makeLogRecord () ( logging モジュール ),[ Link ] 
makePickle () ( SocketHandler の メソッド ) 
makeRecord () ( Textbox の メソッド ) 
makeSocket () ( DatagramHandler の メソッド ) 
makeSocket () ( SocketHandler の メソッド ) 
maketrans () ( string モジュール ) 
map _ table _ b 2 () ( stringprep モジュール ) 
map _ table _ b 3 () ( stringprep モジュール ) 
mapcolor () ( fl モジュール ) 
maps () ( nis モジュール ) 
marshal ( 組み込み モジュール ) 
match () ( nis モジュール ) 
match () ( re モジュール ) 
match () ( RegexObject の メソッド ) 
math ( 組み込み モジュール ),[ Link ],[ Link ] max () ( audioop モジュール ) 
max () ( Context の メソッド ) 
max ( date の 属性 ) 
max ( datetime の 属性 ) 
max () ( Decimal の メソッド ) 
max ( time の 属性 ) 
max ( timedelta の 属性 ) 
max () ( 組み込み 関数 ) MAX _ INTERPOLATION _ DEPTH ( ConfigParser モジュール ) 
maxarray ( Repr の 属性 ) 
maxdeque ( Repr の 属性 ) 
maxdict ( Repr の 属性 ) 
maxfrozenset ( Repr の 属性 ) 
maxint ( sys モジュール ) 
MAXLEN ( mimify モジュール ) 
maxlevel ( Repr の 属性 ) 
maxlist ( Repr の 属性 ) 
maxlong ( Repr の 属性 ) 
maxother ( Repr の 属性 ) 
maxpp () ( audioop モジュール ) 
maxset ( Repr の 属性 ) 
maxstring ( Repr の 属性 ) 
maxtuple ( Repr の 属性 ) 
maxunicode ( sys モジュール ) 
MAXYEAR ( datetime モジュール ) 
MB _ ICONASTERISK ( winsound モジュール ) 
MB _ ICONEXCLAMATION ( winsound モジュール ) 
MB _ ICONHAND ( winsound モジュール ) 
MB _ ICONQUESTION ( winsound モジュール ) 
MB _ OK ( winsound モジュール ) 
md 5 () ( md 5 モジュール ) 
md 5 ( 組み込み モジュール ) 
message _ from _ file () ( email . Parser モジュール ) 
MessageBeep () ( winsound モジュール ) 
MessageClass ( BaseHTTPRequestHandler の 属性 ) 
methods ( class descriptor の 属性 ) 
MethodType ( types モジュール ) 
microsecond ( datetime の 属性 ) 
microsecond ( time の 属性 ) 
mime _ decode _ header () ( mimify モジュール ) 
mime _ encode _ header () ( mimify モジュール ) 
mimetypes ( standard モジュール ) 
MimeWriter ( standard モジュール ) 
mimify () ( mimify モジュール ) 
mimify ( standard モジュール ) 
min () ( Context の メソッド ) 
min ( date の 属性 ) 
min ( datetime の 属性 ) 
min () ( Decimal の メソッド ) 
min ( time の 属性 ) 
min ( timedelta の 属性 ) 
min () ( 組み込み 関数 ) minmax () ( audioop モジュール ) 
minor () ( os モジュール ) 
minus () ( Context の メソッド ) 
minute ( datetime の 属性 ) 
minute ( time の 属性 ) 
MINYEAR ( datetime モジュール ) 
mirrored () ( unicodedata モジュール ) 
misc _ header ( Cmd の 属性 ) 
mkd () ( FTP の メソッド ) 
mkdir () ( os モジュール ) 
mkdtemp () ( tempfile モジュール ),[ Link ] 
mkfifo () ( os モジュール ) 
mknod () ( os モジュール ) 
mkstemp () ( tempfile モジュール ) 
mktime () ( time モジュール ) 
mktime _ tz () ( email . Utils モジュール ) 
mktime _ tz () ( rfc 822 モジュール ) 
mmap () ( mmap モジュール ) 
mmap ( 組み込み モジュール ) 
mod () ( operator モジュール ) 
mode ( file の 属性 ) 
mode ( TarInfo の 属性 ) 
modf () ( math モジュール ) 
modified () ( RobotFileParser の メソッド ) 
module ( class descriptor の 属性 ) 
module ( function descriptor の 属性 ) 
module () ( new モジュール ) 
modules ( sys モジュール ) 
ModuleType ( types モジュール ) 
MON _ 1 ... MON _ 12 ( locale モジュール ) 
mono 2 grey () ( imageop モジュール ) month () ( calendar モジュール ) 
month ( date の 属性 ) 
month ( datetime の 属性 ) 
monthcalendar () ( calendar モジュール ) 
monthrange () ( calendar モジュール ) 
more () ( simple _ producer の メソッド ) 
mouseinterval () ( curses モジュール ) 
mousemask () ( curses モジュール ) 
move () ( Textbox の メソッド ) 
move () ( window の メソッド ) 
movemessage () ( Folder の メソッド ) 
msftoblock () ( CD player の メソッド ) 
msftoframe () ( cd モジュール ) 
msg ( httplib モジュール ) 
msg () ( Telnet の メソッド ) 
MSG _* ( socket モジュール ) 
msvcrt ( 組み込み モジュール ) 
mt _ interact () ( Telnet の メソッド ) 
mtime () ( RobotFileParser の メソッド ) 
mtime ( TarInfo の 属性 ) 
mul () ( audioop モジュール ) 
multifile ( standard モジュール ) 
MULTILINE ( re モジュール ) 
multiply () ( Context の メソッド ) 
mvderwin () ( window の メソッド ) 
mvwin () ( window の メソッド ) 
myrights () ( IMAP 4 _ stream の メソッド ) 
name ( Attr の 属性 ) 
name ( class descriptor の 属性 ) 
name ( Cookie の 属性 ) 
name ( DocTest の 属性 ) 
name ( DocumentType の 属性 ) 
name ( file の 属性 ) 
name ( function descriptor の 属性 ) 
name ( os モジュール ) 
name 2 codepoint ( htmlentitydefs モジュール ) 
NamedTemporaryFile () ( tempfile モジュール ) 
namelist () ( ZipFile の メソッド ) 
nameprep () ( encodings . idna モジュール ) 
namespace () ( IMAP 4 _ stream の メソッド ) 
namespaceURI ( Node の 属性 ) 
napms () ( curses モジュール ) 
ndiff () ( difflib モジュール ) 
ne () ( operator モジュール ) 
neg () ( operator モジュール ) 
netrc ( standard モジュール ) 
netscape ( LWPCookieJar の 属性 ) 
new () ( hmac モジュール ) 
new () ( md 5 モジュール ) 
new () ( sha モジュール ) 
new ( 組み込み モジュール ) 
new _ alignment () ( writer の メソッド ) 
new _ font () ( writer の メソッド ) 
new _ margin () ( writer の メソッド ) 
new _ module () ( imp モジュール ) 
new _ panel () ( curses . panel モジュール ) 
new _ spacing () ( writer の メソッド ) 
new _ styles () ( writer の メソッド ) 
newconfig () ( al モジュール ) 
newgroups () ( NNTPDataError の メソッド ) 
newlines ( file の 属性 ) 
newnews () ( NNTPDataError の メソッド ) 
newpad () ( curses モジュール ) 
newwin () ( curses モジュール ) 
next () ( csv reader の メソッド ) 
next () ( dbhash の メソッド ) 
next () ( file の メソッド ) 
next () ( iterator の メソッド ) 
next () ( mailbox の メソッド ) 
next () ( MultiFile の メソッド ) 
next () ( NNTPDataError の メソッド ) 
next () ( Queue の メソッド ) 
next () ( TarFile の メソッド ) 
nextfile () ( fileinput モジュール ) 
nextkey () ( gdbm モジュール ) 
nextpart () ( MimeWriter の メソッド ) 
nextSibling ( Node の 属性 ) 
ngettext () ( NullTranslations の メソッド ) 
NI _* ( socket モジュール ) 
nice () ( os モジュール ) 
nis ( extension モジュール ) 
nl () ( curses モジュール ) 
NL ( tokenize モジュール ) 
nl _ langinfo () ( locale モジュール ) 
nlargest () ( heapq モジュール ) 
nlst () ( FTP の メソッド ) 
node () ( platform モジュール ) 
nodelay () ( window の メソッド ) 
nodeName ( Node の 属性 ) 
nodeType ( Node の 属性 ) 
nodeValue ( Node の 属性 ) 
NODISC ( cd モジュール ) 
noecho () ( curses モジュール ) 
NOEXPR ( locale モジュール ) 
nofill ( HTMLParser の 属性 ) 
nok _ builtin _ names ( RExec の 属性 ) 
noload () ( Unpickler の メソッド ) 
nonblock () ( audio device の メソッド ) 
NoneType ( types モジュール ) 
nonl () ( curses モジュール ) 
noop () ( IMAP 4 _ stream の メソッド ) 
noop () ( POP 3 _ SSL の メソッド ) 
noqiflush () ( curses モジュール ) 
noraw () ( curses モジュール ) 
normalize () ( Context の メソッド ) 
normalize () ( Decimal の メソッド ) 
normalize () ( locale モジュール ) 
NORMALIZE _ WHITESPACE ( doctest モジュール ) 
normalvariate () ( random モジュール ) 
normcase () ( os . path モジュール ) 
normpath () ( os . path モジュール ) 
not _() ( operator モジュール ) 
notationDecl () ( DTDHandler の メソッド ) 
NotationDeclHandler () ( xmlparser の メソッド ) 
notations ( DocumentType の 属性 ) 
notify () ( Condition の メソッド ) 
notifyAll () ( Condition の メソッド ) 
notimeout () ( window の メソッド ) 
NotStandaloneHandler () ( xmlparser の メソッド ) 
noutrefresh () ( window の メソッド ) 
now () ( datetime の メソッド ) 
NSIG ( signal モジュール ) 
nsmallest () ( heapq モジュール ) 
ntohl () ( socket モジュール ) 
ntohs () ( socket モジュール ) 
numeric () ( unicodedata モジュール ) 
nurbscurve () ( gl モジュール ) 
nurbssurface () ( gl モジュール ) 
nvarray () ( gl モジュール ) 
O _ APPEND ( os モジュール ) 
O _ BINARY ( os モジュール ) 
O _ CREAT ( os モジュール ) 
O _ DSYNC ( os モジュール ) 
O _ EXCL ( os モジュール ) 
O _ NDELAY ( os モジュール ) 
O _ NOCTTY ( os モジュール ) 
O _ NONBLOCK ( os モジュール ) 
O _ RDONLY ( os モジュール ) 
O _ RDWR ( os モジュール ) 
O _ RSYNC ( os モジュール ) 
O _ SYNC ( os モジュール ) 
O _ TRUNC ( os モジュール ) 
O _ WRONLY ( os モジュール ) 
obufcount () ( audio device の メソッド ),[ Link ] 
obuffree () ( audio device の メソッド ) 
octdigits ( string モジュール ) 
offset ( ExpatError の 属性 ) 
OK ( curses モジュール ) 
ok _ builtin _ modules ( RExec の 属性 ) 
ok _ file _ types ( RExec の 属性 ) 
ok _ path ( RExec の 属性 ) 
ok _ posix _ names ( RExec の 属性 ) 
ok _ sys _ names ( RExec の 属性 ) 
onecmd () ( Cmd の メソッド ) 
open () ( aifc モジュール ) 
open () ( anydbm モジュール ) 
open () ( cd モジュール ) 
open () ( codecs モジュール ) 
open () ( dbhash モジュール ) 
open () ( dbm モジュール ) 
open () ( dl モジュール ) 
open () ( dumbdbm モジュール ) 
open () ( gdbm モジュール ) 
open () ( os モジュール ) 
open () ( ossaudiodev モジュール ) 
open () ( posixfile モジュール ) 
open () ( shelve モジュール ) 
open () ( sunau モジュール ) 
open () ( sunaudiodev モジュール ) 
open () ( tarfile モジュール ) 
open () ( Telnet の メソッド ) 
open () ( Template の メソッド ) 
open () ( URLopener の メソッド ) 
open _ osfhandle () ( msvcrt モジュール ) 
open _ unknown () ( URLopener の メソッド ) 
opendir () ( dircache モジュール ) 
openfolder () ( MH の メソッド ) 
openfp () ( sunau モジュール ) 
openfp () ( wave モジュール ) 
OpenKey () (_ winreg モジュール ) 
OpenKeyEx () (_ winreg モジュール ) 
openlog () ( syslog モジュール ) 
openmessage () ( Message の メソッド ) 
openmixer () ( ossaudiodev モジュール ) 
openport () ( al モジュール ) 
openpty () ( os モジュール ) 
openpty () ( pty モジュール ) 
operator ( 組み込み モジュール ) 
opname ( dis モジュール ) 
options ( Example の 属性 ) 
options () ( SafeConfigParser の メソッド ) 
optionxform () ( SafeConfigParser の メソッド ) 
optparse ( standard モジュール ) 
or _() ( operator モジュール ) 
ordered _ attributes ( xmlparser の 属性 ) 
os ( standard モジュール ) os ( 標準 モジュール ),[ Link ] 
os . path ( standard モジュール ) 
ossaudiodev ( 組み込み モジュール ) 
output () ( BaseCookie の メソッド ) 
output () ( Morsel の メソッド ) 
output _ charset ( email . Charset モジュール ) 
output _ charset () ( NullTranslations の メソッド ) 
output _ codec ( email . Charset モジュール ) 
output _ difference () ( OutputChecker の メソッド ) 
OutputString () ( Morsel の メソッド ) 
OutputType ( cStringIO モジュール ) 
Overflow ( decimal の クラス ) 
overlay () ( window の メソッド ) 
overwrite () ( window の メソッド ) 
P _ DETACH ( os モジュール ) 
P _ NOWAIT ( os モジュール ) 
P _ NOWAITO ( os モジュール ) 
P _ OVERLAY ( os モジュール ) 
P _ WAIT ( os モジュール ) 
pack () ( struct モジュール ) 
pack _ array () ( Packer の メソッド ) 
pack _ bytes () ( Packer の メソッド ) 
pack _ double () ( Packer の メソッド ) 
pack _ farray () ( Packer の メソッド ) 
pack _ float () ( Packer の メソッド ) 
pack _ fopaque () ( Packer の メソッド ) 
pack _ fstring () ( Packer の メソッド ) 
pack _ list () ( Packer の メソッド ) 
pack _ opaque () ( Packer の メソッド ) 
pack _ string () ( Packer の メソッド ) 
PAGER ( 環境 変数 ) 
pair _ content () ( curses モジュール ) 
pair _ number () ( curses モジュール ) 
pardir ( os モジュール ) 
parent ( BaseHandler の 属性 ) 
parentNode ( Node の 属性 ) 
paretovariate () ( random モジュール ) 
parse () ( cgi モジュール ) 
parse () ( compiler モジュール ) 
parse () ( DocTestParser の メソッド ) parse () ( Parser の メソッド ) 
parse () ( RobotFileParser の メソッド ) 
parse () ( xml . dom . minidom モジュール ) 
parse () ( xml . dom . pulldom モジュール ) 
parse () ( xml . sax モジュール ) 
Parse () ( xmlparser の メソッド ) 
parse () ( XMLReader の メソッド ) 
parse _ and _ bind () ( readline モジュール ) 
parse _ header () ( cgi モジュール ) 
parse _ multipart () ( cgi モジュール ) 
parse _ qs () ( cgi モジュール ) 
parse _ qsl () ( cgi モジュール ) 
parseaddr () ( email . Utils モジュール ) 
parseaddr () ( rfc 822 モジュール ) 
parsedate () ( email . Utils モジュール ) 
parsedate () ( rfc 822 モジュール ) 
parsedate _ tz () ( email . Utils モジュール ) 
parsedate _ tz () ( rfc 822 モジュール ) 
parseFile () ( compiler モジュール ) 
ParseFile () ( xmlparser の メソッド ) 
ParseFlags () ( imaplib モジュール ) 
parseframe () ( CD parser の メソッド ) 
parser ( 組み込み モジュール ) 
ParserCreate () ( xml . parsers . expat モジュール ) 
parsesequence () ( Folder の メソッド ) 
parsestr () ( Parser の メソッド ) 
parseString () ( xml . dom . minidom モジュール ) 
parseString () ( xml . dom . pulldom モジュール ) 
parseString () ( xml . sax モジュール ) 
partial () ( IMAP 4 _ stream の メソッド ) 
pass _() ( POP 3 _ SSL の メソッド ) 
path ( BaseHTTPRequestHandler の 属性 ) 
path ( Cookie の 属性 ) 
path ( os モジュール ) 
path ( sys モジュール ) 
PATH ( 環境 変数 ),[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ],[ Link ] 
path _ return _ ok () ( CookiePolicy の メソッド ) 
pathconf () ( os モジュール ) 
pathconf _ names ( os モジュール ) 
pathname 2 url () ( urllib モジュール ) 
pathsep ( os モジュール ) 
pattern ( RegexObject の 属性 ) 
pause () ( signal モジュール ) 
PAUSED ( cd モジュール ) 
pdb ( standard モジュール ) 
pformat () ( pprint モジュール ) 
pformat () ( PrettyPrinter の メソッド ) 
pi ( cmath モジュール ) 
pi ( math モジュール ) 
pick () ( gl モジュール ) 
pickle () ( copy _ reg モジュール ) 
pickle ( standard モジュール ) pickle ( 標準 モジュール ),[ Link ],[ Link ],[ Link ],[ Link ] 
pid ( Popen の 属性 ) 
pid ( Popen 4 の 属性 ) 
pipe () ( os モジュール ) 
pipes ( standard モジュール ) 
PKG _ DIRECTORY ( imp モジュール ) 
pkgutil ( standard モジュール ) 
platform () ( platform モジュール ) 
platform ( standard モジュール ) 
platform ( sys モジュール ) 
play () ( CD player の メソッド ) 
playabs () ( CD player の メソッド ) 
PLAYING ( cd モジュール ) 
PlaySound () ( winsound モジュール ) 
playtrack () ( CD player の メソッド ) 
playtrackabs () ( CD player の メソッド ) 
plock () ( os モジュール ) 
plus () ( Context の メソッド ) 
pm () ( pdb モジュール ) 
pnum ( cd モジュール ) 
poll () ( LogRecord の メソッド ) 
poll () ( Popen の メソッド ) 
poll () ( Popen 4 の メソッド ) 
poll () ( select モジュール ) 
pop () ( array の メソッド ) 
pop () ( fifo の メソッド ) 
pop () ( MultiFile の メソッド ) 
pop () ( SystemRandom の メソッド ) 
pop _ font () ( formatter の メソッド ) 
pop _ margin () ( formatter の メソッド ) 
pop _ source () ( shlex の メソッド ) 
pop _ style () ( formatter の メソッド ) 
popen () ( os モジュール ) 
popen () ( platform モジュール ) 
popen 2 () ( os モジュール ) 
popen 2 () ( popen 2 モジュール ) 
popen 2 ( standard モジュール ) 
popen 3 () ( os モジュール ) 
popen 3 () ( popen 2 モジュール ) 
popen 4 () ( os モジュール ) 
popen 4 () ( popen 2 モジュール ) 
popleft () ( SystemRandom の メソッド ) 
poplib ( standard モジュール ) 
port ( Cookie の 属性 ) 
port _ specified ( Cookie の 属性 ) 
posix ( TarFile の 属性 ) 
posix ( 組み込み モジュール ) 
posixfile ( 組み込み モジュール ) 
post () ( audio device の メソッド ) 
post () ( NNTPDataError の メソッド ) 
post _ mortem () ( pdb モジュール ) 
postcmd () ( Cmd の メソッド ) 
postloop () ( Cmd の メソッド ) 
pow () ( math モジュール ) 
pow () ( operator モジュール ) 
power () ( Context の メソッド ) 
pprint () ( pprint モジュール ) 
pprint () ( PrettyPrinter の メソッド ) 
pprint ( standard モジュール ) 
prcal () ( calendar モジュール ) 
preamble ( email . Message モジュール ) 
precmd () ( Cmd の メソッド ) 
prefix ( Attr の 属性 ) 
preloop () ( Cmd の メソッド ) 
preorder () ( ASTVisitor の メソッド ) 
prepare _ input _ source () ( xml . sax . saxutils モジュール ) 
prepend () ( Template の メソッド ) 
preventremoval () ( CD player の メソッド ) 
previous () ( dbhash の メソッド ) 
previous () ( Queue の メソッド ) 
previousSibling ( Node の 属性 ) 
print _ callees () ( Stats の メソッド ) 
print _ callers () ( Stats の メソッド ) 
print _ directory () ( cgi モジュール ) 
print _ environ () ( cgi モジュール ) 
print _ environ _ usage () ( cgi モジュール ) 
print _ exception () ( traceback モジュール ) 
print _ form () ( cgi モジュール ) 
print _ last () ( traceback モジュール ) 
print _ stack () ( traceback モジュール ) 
print _ stats () ( Stats の メソッド ) 
print _ tb () ( traceback モジュール ) 
printable ( string モジュール ) 
printdir () ( ZipFile の メソッド ) 
prmonth () ( calendar モジュール ) 
process _ message () ( SMTPServer の メソッド ) 
processingInstruction () ( ContentHandler の メソッド ) 
P r o cessingInstructionHandler () ( xmlparser の メソッド ) 
processor () ( platform モジュール ) 
profile ( standard モジュール ) 
prompt ( Cmd の 属性 ) 
prompt _ user _ passwd () ( FancyURLopener の メソッド ) 
propagate ( logging モジュール ) 
property _ declaration _ handler ( xml . sax . handler モジュール ) 
property _ dom _ node ( xml . sax . handler モジュール ) 
property _ lexical _ handler ( xml . sax . handler モジュール ) 
property _ xml _ string ( xml . sax . handler モジュール ) 
protocol _ version ( BaseHTTPRequestHandler の 属性 ) 
PROTOCOL _ VERSION ( IMAP 4 _ stream の 属性 ) 
proxy () ( weakref モジュール ) 
ProxyType ( weakref モジュール ) 
ProxyTypes ( weakref モジュール ) 
prstr () ( fm モジュール ) 
ps 1 ( sys モジュール ) 
ps 2 ( sys モジュール ) 
pstats ( 標準 モジュール ) 
ptime ( cd モジュール ) 
pty ( standard モジュール ) 
punctuation ( string モジュール ) 
push () ( async _ chat の メソッド ) 
push () ( fifo の メソッド ) 
push () ( InteractiveConsole の メソッド ) 
push () ( MultiFile の メソッド ) 
push _ alignment () ( formatter の メソッド ) 
push _ font () ( formatter の メソッド ) 
push _ margin () ( formatter の メソッド ) 
push _ source () ( shlex の メソッド ) 
push _ style () ( formatter の メソッド ) 
push _ token () ( shlex の メソッド ) 
push _ with _ producer () ( async _ chat の メソッド ) 
put () ( Queue の メソッド ) 
put _ nowait () ( Queue の メソッド ) 
putch () ( msvcrt モジュール ) 
putenv () ( os モジュール ) 
putheader () ( HTTPSConnection の メソッド ) 
putp () ( curses モジュール ) 
putrequest () ( HTTPSConnection の メソッド ) 
putsequences () ( Folder の メソッド ) 
putwin () ( window の メソッド ) 
pwlcurve () ( gl モジュール ) 
py _ compile ( standard モジュール ) 
PY _ COMPILED ( imp モジュール ) 
PY _ FROZEN ( imp モジュール ) 
PY _ RESOURCE ( imp モジュール ) 
PY _ SOURCE ( imp モジュール ) 
pyclbr ( standard モジュール ) 
pydoc ( standard モジュール ) 
pyexpat ( 組み込み モジュール ) 
python _ build () ( platform モジュール ) 
python _ compiler () ( platform モジュール ) 
PYTHON _ DOM ( 環境 変数 ) 
python _ version () ( platform モジュール ) 
python _ version _ tuple () ( platform モジュール ) 
PYTHONDOCS ( 環境 変数 ) 
PYTHONPATH ( 環境 変数 ),[ Link ],[ Link ],[ Link ] 
PYTHONSTARTUP ( 環境 変数 ),[ Link ],[ Link ] 
PYTHONY 2 K ( 環境 変数 ),[ Link ],[ Link ] 
PyZipFile ( zipfile の クラス ) 
qdevice () ( fl モジュール ) 
qenter () ( fl モジュール ) 
qiflush () ( curses モジュール ) 
qread () ( fl モジュール ) 
qreset () ( fl モジュール ) 
qsize () ( Queue の メソッド ) 
qtest () ( fl モジュール ) 
quantize () ( Context の メソッド ) 
quantize () ( Decimal の メソッド ) 
QueryInfoKey () (_ winreg モジュール ) 
queryparams () ( al モジュール ) 
QueryValue () (_ winreg モジュール ) 
QueryValueEx () (_ winreg モジュール ) 
Queue ( standard モジュール ) 
quick _ ratio () ( SequenceMatcher の メソッド ) 
quit () ( FTP の メソッド ) 
quit () ( NNTPDataError の メソッド ) 
quit () ( POP 3 _ SSL の メソッド ) 
quit () ( SMTP の メソッド ) 
quopri ( standard モジュール ) 
quote () ( email . Utils モジュール ) 
quote () ( rfc 822 モジュール ) 
quote () ( urllib モジュール ) 
QUOTE _ ALL ( csv モジュール ) 
QUOTE _ MINIMAL ( csv モジュール ) 
QUOTE _ NONE ( csv モジュール ) 
QUOTE _ NONNUMERIC ( csv モジュール ) 
quote _ plus () ( urllib モジュール ) 
quoteattr () ( xml . sax . saxutils モジュール ) 
quotechar ( Dialect の 属性 ) 
quotes ( shlex の 属性 ) 
quoting ( Dialect の 属性 ) 
r _ eval () ( RExec の メソッド ) 
r _ exec () ( RExec の メソッド ) 
r _ execfile () ( RExec の メソッド ) 
r _ import () ( RExec の メソッド ) 
R _ OK ( os モジュール ) 
r _ open () ( RExec の メソッド ) 
r _ reload () ( RExec の メソッド ) 
r _ unload () ( RExec の メソッド ) 
radians () ( math モジュール ) 
radians () ( turtle モジュール ) 
RADIXCHAR ( locale モジュール ) 
randint () ( random モジュール ) 
randint () ( whrandom モジュール ) 
random () ( random モジュール ) 
random ( standard モジュール ) 
random () ( whrandom モジュール ) 
randrange () ( random モジュール ) 
ratecv () ( audioop モジュール ) 
ratio () ( SequenceMatcher の メソッド ) 
raw () ( curses モジュール ) 
raw _ input () ( InteractiveConsole の メソッド ) 
raw _ input () ( 組み込み 関数 ) 
re ( MatchObject の 属性 ) 
re ( standard モジュール ) re ( 標準 モジュール ),[ Link ],[ Link ] 
read () ( array の メソッド ) 
read () ( audio device の メソッド ),[ Link ] 
read () ( BZ 2 File の メソッド ) 
read () ( Chunk の メソッド ) 
read () ( file の メソッド ) 
read () ( HTTPSConnection の メソッド ) 
read () ( IMAP 4 _ stream の メソッド ) 
read () ( imgfile モジュール ) 
read () ( LogRecord の メソッド ) 
read () ( MimeTypes の メソッド ) 
read () ( MultiFile の メソッド ) read () ( os モジュール ) 
read () ( Queue の メソッド ) 
read () ( RobotFileParser の メソッド ) 
read () ( SafeConfigParser の メソッド ) 
read () ( StreamReader の メソッド ) 
read () ( ZipFile の メソッド ) 
read _ all () ( Telnet の メソッド ) 
read _ byte () ( Queue の メソッド ) 
read _ eager () ( Telnet の メソッド ) 
read _ history _ file () ( readline モジュール ) 
read _ init _ file () ( readline モジュール ) 
read _ lazy () ( Telnet の メソッド ) 
read _ mime _ types () ( mimetypes モジュール ) 
read _ sb _ data () ( Telnet の メソッド ) 
read _ some () ( Telnet の メソッド ) 
read _ token () ( shlex の メソッド ) 
read _ until () ( Telnet の メソッド ) 
read _ very _ eager () ( Telnet の メソッド ) 
read _ very _ lazy () ( Telnet の メソッド ) 
readable () ( async _ chat の メソッド ) 
readable () ( dispatcher の メソッド ) 
readda () ( CD player の メソッド ) 
reader () ( csv モジュール ) 
readfp () ( MimeTypes の メソッド ) 
readfp () ( SafeConfigParser の メソッド ) 
readframes () ( aifc の メソッド ) 
readframes () ( AU _ read の メソッド ) 
readframes () ( Wave _ read の メソッド ) 
readline () ( BZ 2 File の メソッド ) 
readline () ( file の メソッド ) 
readline () ( IMAP 4 _ stream の メソッド ) 
readline () ( MultiFile の メソッド ) 
readline () ( Queue の メソッド ) 
readline () ( StreamReader の メソッド ) 
readline ( 組み込み モジュール ) readlines () ( BZ 2 File の メソッド ) 
readlines () ( file の メソッド ) 
readlines () ( MultiFile の メソッド ) 
readlines () ( StreamReader の メソッド ) 
readlink () ( os モジュール ) 
readmodule () ( pyclbr モジュール ) 
readmodule _ ex () ( pyclbr モジュール ) 
readsamps () ( audio port の メソッド ) 
readscaled () ( imgfile モジュール ) 
READY ( cd モジュール ) 
real _ quick _ ratio () ( SequenceMatcher の メソッド ) 
realpath () ( os . path モジュール ) 
reason ( httplib モジュール ) 
reccontrols () ( mixer device の メソッド ) 
recent () ( IMAP 4 _ stream の メソッド ) 
rectangle () ( curses . textpad モジュール ) 
recv () ( dispatcher の メソッド ) 
recv () ( socket の メソッド ) 
recvfrom () ( socket の メソッド ) 
redirect redirect _ request () ( HTTPRedirectHandler の メソッド ) 
redisplay () ( readline モジュール ) 
redraw _ form () ( form の メソッド ) 
redraw _ object () ( FORMS object の メソッド ) 
redrawln () ( window の メソッド ) 
redrawwin () ( window の メソッド ) 
ReferenceType ( weakref モジュール ) 
refilemessages () ( Folder の メソッド ) 
refill _ buffer () ( async _ chat の メソッド ) 
refresh () ( window の メソッド ) 
register () ( atexit モジュール ) 
register () ( codecs モジュール ) 
register _ dialect () ( csv モジュール ) 
register _ error () ( codecs モジュール ) 
register _ function () ( S impleXMLRPCRequestHandler の メソッド ) 
register _ function () ( SimpleXMLRPCServer の メソッド ) 
register _ instance () ( S impleXMLRPCRequestHandler の メソッド ) 
register _ instance () ( SimpleXMLRPCServer の メソッド ) 
register _ introspection _ functions () ( S impleXMLRPCRequestHandler の メソッド ),[ Link ] 
register _ multicall _ functions () ( S impleXMLRPCRequestHandler の メソッド ),[ Link ] 
register _ optionflag () ( doctest モジュール ) 
registerDOMImplementation () ( xml . dom モジュール ) 
RegLoadKey () (_ winreg モジュール ) 
release () ( Condition の メソッド ) 
release () ( Semaphore の メソッド ) 
release () ( Textbox の メソッド ) 
release () ( Timer の メソッド ),[ Link ] 
release _ lock () ( imp モジュール ) 
reload () ( built - in function ) reload () ( 組み込み 関数 ),[ Link ],[ Link ] 
remainder () ( Context の メソッド ) 
remainder _ near () ( Context の メソッド ) 
remainder _ near () ( Decimal の メソッド ) 
remove () ( array の メソッド ) 
remove _ history _ item () ( readline モジュール ) 
remove _ option () ( SafeConfigParser の メソッド ) 
remove _ section () ( SafeConfigParser の メソッド ) 
removeAttribute () ( Element の メソッド ) 
removeAttributeNode () ( Element の メソッド ) 
removeAttributeNS () ( Element の メソッド ) 
removecallback () ( CD parser の メソッド ) 
removeChild () ( Node の メソッド ) 
removedirs () ( os モジュール ) 
removeFilter () ( Textbox の メソッド ),[ Link ] 
removeHandler () ( Textbox の メソッド ) 
removemessages () ( Folder の メソッド ) 
rename () ( FTP の メソッド ) 
rename () ( IMAP 4 _ stream の メソッド ) 
rename () ( os モジュール ) 
renames () ( os モジュール ) 
reorganize () ( gdbm モジュール ) 
repeat () ( itertools モジュール ) 
repeat () ( operator モジュール ) 
repeat () ( Timer の メソッド ) 
replace () ( date の メソッド ) 
replace () ( datetime の メソッド ) 
replace () ( string の メソッド ) 
replace () ( string モジュール ) 
replace () ( Textbox の メソッド ) 
replace () ( time の メソッド ) 
replace _ errors () ( codecs モジュール ) 
replace _ header () ( Message の メソッド ) 
replace _ history _ item () ( readline モジュール ) 
replace _ whitespace ( TextWrapper の 属性 ) 
replaceChild () ( Node の メソッド ) 
report () ( dircmp の メソッド ) 
REPORT _ CDIFF ( doctest モジュール ) 
report _ failure () ( DocTestRunner の メソッド ) 
report _ full _ closure () ( dircmp の メソッド ) 
REPORT _ NDIFF ( doctest モジュール ) 
REPORT _ ONLY _ FIRST _ FAILURE ( doctest モジュール ) 
report _ partial _ closure () ( dircmp の メソッド ) 
report _ start () ( DocTestRunner の メソッド ) 
report _ success () ( DocTestRunner の メソッド ) 
REPORT _ UDIFF ( doctest モジュール ) 
report _ unbalanced () ( SGMLParser の メソッド ) 
report _ unexpected _ exception () ( DocTestRunner の メソッド ) 
REPORTING _ FLAGS ( doctest モジュール ) 
repr () ( Repr の メソッド ) 
repr () ( repr モジュール ) 
repr ( standard モジュール ) 
repr 1 () ( Repr の メソッド ) 
request () ( HTTPSConnection の メソッド ) 
request _ version ( BaseHTTPRequestHandler の 属性 ) 
requires () ( test . test _ support モジュール ) 
reserved ( ZipInfo の 属性 ) 
reset () ( audio device の メソッド ) 
reset () ( DOMEventStream の メソッド ) 
reset () ( IncrementalParser の メソッド ) 
reset () ( Packer の メソッド ) 
reset () ( SGMLParser の メソッド ) reset () ( statcache モジュール ) 
reset () ( StreamReader の メソッド ) 
reset () ( StreamWriter の メソッド ) 
reset () ( Template の メソッド ) reset () ( turtle モジュール ) 
reset () ( Unpacker の メソッド ) 
reset () ( XMLParser の メソッド ) 
reset _ prog _ mode () ( curses モジュール ) 
reset _ shell _ mode () ( curses モジュール ) 
resetbuffer () ( InteractiveConsole の メソッド ) 
resetlocale () ( locale モジュール ) 
resetparser () ( CD parser の メソッド ) 
resetwarnings () ( warnings モジュール ) 
resize () ( Queue の メソッド ) 
resolution ( date の 属性 ) 
resolution ( datetime の 属性 ) 
resolution ( time の 属性 ) 
resolution ( timedelta の 属性 ) 
resolveEntity () ( EntityResolver の メソッド ) 
resource ( 組み込み モジュール ) 
response () ( IMAP 4 _ stream の メソッド ) 
responses ( BaseHTTPRequestHandler の 属性 ) 
restore () ( difflib モジュール ) 
retr () ( POP 3 _ SSL の メソッド ) 
retrbinary () ( FTP の メソッド ) 
retrieve () ( URLopener の メソッド ) 
retrlines () ( FTP の メソッド ) 
return _ ok () ( CookiePolicy の メソッド ) 
returncode ( Popen の 属性 ) 
returns _ unicode ( xmlparser の 属性 ) 
reverse () ( array の メソッド ) 
reverse () ( audioop モジュール ) 
reverse _ order () ( Stats の メソッド ) 
revert () ( FileCookieJar の メソッド ) 
rewind () ( aifc の メソッド ) 
rewind () ( AU _ read の メソッド ) 
rewind () ( Wave _ read の メソッド ) 
rewindbody () ( AddressList の メソッド ) 
rexec ( standard モジュール ) 
rexec ( 標準 モジュール ) 
rfc 2965 ( LWPCookieJar の 属性 ) 
rfc 822 ( standard モジュール ) rfc 822 ( 標準 モジュール ) 
rfile ( BaseHTTPRequestHandler の 属性 ) 
rfind () ( string の メソッド ) 
rfind () ( string モジュール ) 
rgb _ to _ hls () ( colorsys モジュール ) 
rgb _ to _ hsv () ( colorsys モジュール ) 
rgb _ to _ yiq () ( colorsys モジュール ) 
rgbimg ( 組み込み モジュール ) 
right () ( turtle モジュール ) 
right _ list ( dircmp の 属性 ) 
right _ only ( dircmp の 属性 ) 
rindex () ( string の メソッド ) 
rindex () ( string モジュール ) 
rjust () ( string の メソッド ) 
rjust () ( string モジュール ) 
rlcompleter ( standard モジュール ) 
rlecode _ hqx () ( binascii モジュール ) 
rledecode _ hqx () ( binascii モジュール ) 
RLIMIT _ AS ( resource モジュール ) 
RLIMIT _ CORE ( resource モジュール ) 
RLIMIT _ CPU ( resource モジュール ) 
RLIMIT _ DATA ( resource モジュール ) 
RLIMIT _ FSIZE ( resource モジュール ) 
RLIMIT _ MEMLOCK ( resource モジュール ) 
RLIMIT _ NOFILE ( resource モジュール ) 
RLIMIT _ NPROC ( resource モジュール ) 
RLIMIT _ OFILE ( resource モジュール ) 
RLIMIT _ RSS ( resource モジュール ) 
RLIMIT _ STACK ( resource モジュール ) 
RLIMIT _ VMEM ( resource モジュール ) 
RLock () ( threading モジュール ) 
rmd () ( FTP の メソッド ) 
rmdir () ( os モジュール ) 
rms () ( audioop モジュール ) 
rmtree () ( shutil モジュール ) 
rnopen () ( bsddb モジュール ) 
robotparser ( standard モジュール ) 
rotate () ( SystemRandom の メソッド ) 
Rounded ( decimal の クラス ) 
rpop () ( POP 3 _ SSL の メソッド ) 
rset () ( POP 3 _ SSL の メソッド ) 
rshift () ( operator モジュール ) 
rsplit () ( string の メソッド ) 
rsplit () ( string モジュール ) 
rstrip () ( string の メソッド ) 
rstrip () ( string モジュール ) 
RTLD _ LAZY ( dl モジュール ) 
RTLD _ NOW ( dl モジュール ) 
ruler ( Cmd の 属性 ) 
run () ( DocTestRunner の メソッド ) 
run () ( pdb モジュール ) 
run () ( Profile の メソッド ) 
run () ( profile モジュール ) 
run () ( scheduler の メソッド ) 
run () ( TestCase の メソッド ) 
run () ( TestSuite の メソッド ) 
run () ( Thread の メソッド ) 
run _ docstring _ examples () ( doctest モジュール ) 
run _ suite () ( test . test _ support モジュール ) 
run _ unittest () ( test . test _ support モジュール ) 
runcall () ( pdb モジュール ) 
runcall () ( Profile の メソッド ) 
runcode () ( InteractiveConsole の メソッド ) 
runctx () ( Profile の メソッド ) 
runctx () ( profile モジュール ) 
runeval () ( pdb モジュール ) 
runsource () ( InteractiveConsole の メソッド ) 
RUSAGE _ BOTH ( resource モジュール ) 
RUSAGE _ CHILDREN ( resource モジュール ) 
RUSAGE _ SELF ( resource モジュール ) 
S ( re モジュール ) 
s _ eval () ( RExec の メソッド ) 
s _ exec () ( RExec の メソッド ) 
s _ execfile () ( RExec の メソッド ) 
S _ IFMT () ( stat モジュール ) 
S _ IMODE () ( stat モジュール ) 
s _ import () ( RExec の メソッド ) 
S _ ISBLK () ( stat モジュール ) 
S _ ISCHR () ( stat モジュール ) 
S _ ISDIR () ( stat モジュール ) 
S _ ISFIFO () ( stat モジュール ) 
S _ ISLNK () ( stat モジュール ) 
S _ ISREG () ( stat モジュール ) 
S _ ISSOCK () ( stat モジュール ) 
s _ reload () ( RExec の メソッド ) 
s _ unload () ( RExec の メソッド ) 
safe _ substitute () ( Template の メソッド ) 
saferepr () ( pprint モジュール ) 
same _ files ( dircmp の 属性 ) 
same _ quantum () ( Context の メソッド ) 
same _ quantum () ( Decimal の メソッド ) 
samefile () ( os . path モジュール ) 
sameopenfile () ( os . path モジュール ) 
samestat () ( os . path モジュール ) 
sample () ( random モジュール ) 
save () ( FileCookieJar の メソッド ) 
save _ bgn () ( HTMLParser の メソッド ) 
save _ end () ( HTMLParser の メソッド ) 
scanf () ( re モジュール ) 
sched ( standard モジュール ) 
sci () ( fpformat モジュール ) 
script _ from _ examples () ( doctest モジュール ) 
scroll () ( window の メソッド ) 
ScrolledText ( standard モジュール ) 
scrollok () ( window の メソッド ) 
search () ( IMAP 4 _ stream の メソッド ) 
search () ( re モジュール ) 
search () ( RegexObject の メソッド ) 
SEARCH _ ERROR ( imp モジュール ) 
second ( datetime の 属性 ) 
second ( time の 属性 ) 
section _ divider () ( MultiFile の メソッド ) 
sections () ( SafeConfigParser の メソッド ) 
secure ( Cookie の 属性 ) 
seed () ( random モジュール ) 
seed () ( whrandom の メソッド ) 
seed () ( whrandom モジュール ) 
seek () ( BZ 2 File の メソッド ) 
seek () ( CD player の メソッド ) 
seek () ( Chunk の メソッド ) 
seek () ( file の メソッド ) 
seek () ( MultiFile の メソッド ) 
seek () ( Queue の メソッド ) 
SEEK _ CUR ( posixfile モジュール ) 
SEEK _ END ( posixfile モジュール ) 
SEEK _ SET ( posixfile モジュール ) 
seekblock () ( CD player の メソッド ) 
seektrack () ( CD player の メソッド ) 
select () ( gl モジュール ) 
select () ( IMAP 4 _ stream の メソッド ) 
select () ( select モジュール ) 
select ( 組み込み モジュール ) 
Semaphore () ( threading モジュール ) 
send () ( DatagramHandler の メソッド ) 
send () ( dispatcher の メソッド ) 
send () ( HTTPSConnection の メソッド ) 
send () ( IMAP 4 _ stream の メソッド ) 
send () ( socket の メソッド ) 
send () ( SocketHandler の メソッド ) 
send _ error () ( BaseHTTPRequestHandler の メソッド ) 
send _ flowing _ data () ( writer の メソッド ) 
send _ header () ( BaseHTTPRequestHandler の メソッド ) 
send _ hor _ rule () ( writer の メソッド ) 
send _ label _ data () ( writer の メソッド ) 
send _ line _ break () ( writer の メソッド ) 
send _ literal _ data () ( writer の メソッド ) 
send _ paragraph () ( writer の メソッド ) 
send _ query () ( gopherlib モジュール ) 
send _ response () ( BaseHTTPRequestHandler の メソッド ) 
send _ selector () ( gopherlib モジュール ) 
sendall () ( socket の メソッド ) 
sendcmd () ( FTP の メソッド ) 
sendmail () ( SMTP の メソッド ) 
sendto () ( socket の メソッド ) 
sep ( os モジュール ) 
sequence 2 ast () ( parser モジュール ) 
sequenceIncludes () ( operator モジュール ) 
SequenceMatcher ( difflib の クラス ) 
server _ version ( BaseHTTPRequestHandler の 属性 ) 
server _ version ( SimpleHTTPRequestHandler の 属性 ) 
set () ( Event の メソッド ) 
set () ( mixer device の メソッド ) 
set () ( Morsel の メソッド ) 
set () ( SafeConfigParser の メソッド ),[ Link ] 
set _ allowed _ domains () ( DefaultCookiePolicy の メソッド ) 
set _ blocked _ domains () ( DefaultCookiePolicy の メソッド ) 
set _ boundary () ( Message の メソッド ) 
set _ call _ back () ( FORMS object の メソッド ) 
set _ charset () ( Message の メソッド ) 
set _ completer () ( readline モジュール ) 
set _ completer _ delims () ( readline モジュール ) 
set _ cookie () ( CookieJar の メソッド ) 
set _ cookie _ if _ ok () ( CookieJar の メソッド ) 
set _ debug () ( gc モジュール ) 
set _ debuglevel () ( FTP の メソッド ) 
set _ debuglevel () ( HTTPSConnection の メソッド ) 
set _ debuglevel () ( NNTPDataError の メソッド ) 
set _ debuglevel () ( POP 3 _ SSL の メソッド ) 
set _ debuglevel () ( SMTP の メソッド ) 
set _ debuglevel () ( Telnet の メソッド ) 
set _ default _ type () ( Message の メソッド ) 
set _ event _ call _ back () ( fl モジュール ) 
set _ form _ position () ( form の メソッド ) 
set _ graphics _ mode () ( fl モジュール ) 
set _ history _ length () ( readline モジュール ) 
set _ location () ( Queue の メソッド ) 
set _ nonstandard _ attr () ( Cookie の メソッド ) 
set _ ok () ( CookiePolicy の メソッド ) 
set _ option _ negotiation _ callback () ( Telnet の メソッド ) 
set _ output _ charset () ( NullTranslations の メソッド ) 
set _ param () ( Message の メソッド ) 
set _ pasv () ( FTP の メソッド ) 
set _ payload () ( Message の メソッド ) 
set _ policy () ( CookieJar の メソッド ) 
set _ position () ( Unpacker の メソッド ) 
set _ pre _ input _ hook () ( readline モジュール ) 
set _ proxy () ( Request の メソッド ) 
set _ recsrc () ( mixer device の メソッド ) 
set _ seq 1 () ( SequenceMatcher の メソッド ) 
set _ seq 2 () ( SequenceMatcher の メソッド ) 
set _ seqs () ( SequenceMatcher の メソッド ) 
set _ server _ documentation () ( DocXMLRPCRequestHandler の メソッド ),[ Link ] 
set _ server _ name () ( DocXMLRPCRequestHandler の メソッド ),[ Link ] 
set _ server _ title () ( DocXMLRPCRequestHandler の メソッド ),[ Link ] 
set _ spacing () ( formatter の メソッド ) 
set _ startup _ hook () ( readline モジュール ) 
set _ terminator () ( async _ chat の メソッド ) 
set _ threshold () ( gc モジュール ) 
set _ trace () ( pdb モジュール ) 
set _ type () ( Message の メソッド ) 
set _ unittest _ reportflags () ( doctest モジュール ) 
set _ unixfrom () ( Message の メソッド ) 
set _ url () ( RobotFileParser の メソッド ) 
set _ userptr () ( Textbox の メソッド ) 
setacl () ( IMAP 4 _ stream の メソッド ) 
setAttribute () ( Element の メソッド ) 
setAttributeNode () ( Element の メソッド ) 
setAttributeNodeNS () ( Element の メソッド ) 
setAttributeNS () ( Element の メソッド ) 
SetBase () ( xmlparser の メソッド ) 
setblocking () ( socket の メソッド ) 
setByteStream () ( InputSource の メソッド ) 
setcbreak () ( tty モジュール ) 
setchannels () ( audio configuration の メソッド ) 
setCharacterStream () ( InputSource の メソッド ) 
setcheckinterval () ( sys モジュール ) 
setcomptype () ( aifc の メソッド ) 
setcomptype () ( AU _ write の メソッド ) 
setcomptype () ( Wave _ write の メソッド ) 
setconfig () ( audio port の メソッド ) 
setContentHandler () ( XMLReader の メソッド ) 
setcontext () ( decimal モジュール ) 
setcontext () ( MH の メソッド ) 
setcurrent () ( Folder の メソッド ) 
setDaemon () ( Thread の メソッド ) 
setdefaultencoding () ( sys モジュール ) 
setdefaulttimeout () ( socket モジュール ) 
setdlopenflags () ( sys モジュール ) 
setDocumentLocator () ( ContentHandler の メソッド ) 
setDTDHandler () ( XMLReader の メソッド ) 
setegid () ( os モジュール ) 
setEncoding () ( InputSource の メソッド ) 
setEntityResolver () ( XMLReader の メソッド ) 
setErrorHandler () ( XMLReader の メソッド ) 
seteuid () ( os モジュール ) 
setFeature () ( XMLReader の メソッド ) 
setfillpoint () ( audio port の メソッド ) 
setfirstweekday () ( calendar モジュール ) 
setfloatmax () ( audio configuration の メソッド ) 
setfmt () ( audio device の メソッド ) 
setFormatter () ( Textbox の メソッド ) 
setframerate () ( aifc の メソッド ) 
setframerate () ( AU _ write の メソッド ) 
setframerate () ( Wave _ write の メソッド ) 
setgid () ( os モジュール ) 
setgroups () ( os モジュール ) 
setinfo () ( audio device の メソッド ) 
setitem () ( operator モジュール ) 
setlast () ( Folder の メソッド ) 
setLevel () ( Textbox の メソッド ),[ Link ] 
setliteral () ( SGMLParser の メソッド ) 
setliteral () ( XMLParser の メソッド ) 
setlocale () ( locale モジュール ) 
setLocale () ( XMLReader の メソッド ) 
setLoggerClass () ( logging モジュール ) 
setlogmask () ( syslog モジュール ) 
setmark () ( aifc の メソッド ) 
setMaxConns () ( CacheFTPHandler の メソッド ) 
setmode () ( msvcrt モジュール ) 
setName () ( Thread の メソッド ) 
setnchannels () ( aifc の メソッド ) 
setnchannels () ( AU _ write の メソッド ) 
setnchannels () ( Wave _ write の メソッド ) 
setnframes () ( aifc の メソッド ) 
setnframes () ( AU _ write の メソッド ) 
setnframes () ( Wave _ write の メソッド ) 
setnomoretags () ( SGMLParser の メソッド ) 
setnomoretags () ( XMLParser の メソッド ) 
setoption () ( jpeg モジュール ) 
setparameters () ( audio device の メソッド ) 
setparams () ( aifc の メソッド ) 
setparams () ( al モジュール ) 
setparams () ( AU _ write の メソッド ) 
setparams () ( Wave _ write の メソッド ) 
setpath () ( fm モジュール ) 
setpgid () ( os モジュール ) 
setpgrp () ( os モジュール ) 
setpos () ( aifc の メソッド ) 
setpos () ( AU _ read の メソッド ) 
setpos () ( Wave _ read の メソッド ) 
setprofile () ( sys モジュール ) 
setprofile () ( threading モジュール ) 
setProperty () ( XMLReader の メソッド ) 
setPublicId () ( InputSource の メソッド ) 
setqueuesize () ( audio configuration の メソッド ) 
setquota () ( IMAP 4 _ stream の メソッド ) 
setraw () ( tty モジュール ) 
setrecursionlimit () ( sys モジュール ) 
setregid () ( os モジュール ) 
setreuid () ( os モジュール ) 
setrlimit () ( resource モジュール ) 
sets ( standard モジュール ) 
setsampfmt () ( audio configuration の メソッド ) 
setsampwidth () ( aifc の メソッド ) 
setsampwidth () ( AU _ write の メソッド ) 
setsampwidth () ( Wave _ write の メソッド ) 
setscrreg () ( window の メソッド ) 
setsid () ( os モジュール ) 
setslice () ( operator モジュール ) 
setsockopt () ( socket の メソッド ) 
setstate () ( random モジュール ) 
setSystemId () ( InputSource の メソッド ) 
setsyx () ( curses モジュール ) 
setTarget () ( MemoryHandler の メソッド ) 
setTimeout () ( CacheFTPHandler の メソッド ) 
settimeout () ( socket の メソッド ) 
settrace () ( sys モジュール ) 
settrace () ( threading モジュール ) 
settscdump () ( sys モジュール ) 
setuid () ( os モジュール ) 
setUp () ( TestCase の メソッド ) 
setupterm () ( curses モジュール ) 
SetValue () (_ winreg モジュール ) 
SetValueEx () (_ winreg モジュール ) 
setwidth () ( audio configuration の メソッド ) 
sgmllib ( standard モジュール ) sgmllib ( 標準 モジュール ) 
sha ( 組み込み モジュール ) 
shelve ( standard モジュール ) 
shelve ( 標準 モジュール ) 
shlex ( standard モジュール ) 
shortDescription () ( TestCase の メソッド ) 
shouldFlush () ( BufferingHandler の メソッド ) 
shouldFlush () ( MemoryHandler の メソッド ) 
show () ( Textbox の メソッド ) 
show _ choice () ( fl モジュール ) 
show _ file _ selector () ( fl モジュール ) 
show _ form () ( form の メソッド ) 
show _ input () ( fl モジュール ) 
show _ message () ( fl モジュール ) 
show _ object () ( FORMS object の メソッド ) 
show _ question () ( fl モジュール ) 
showsyntaxerror () ( InteractiveConsole の メソッド ) 
showtraceback () ( InteractiveConsole の メソッド ) 
showwarning () ( warnings モジュール ) 
shuffle () ( random モジュール ) 
shutdown () ( IMAP 4 _ stream の メソッド ) 
shutdown () ( logging モジュール ) 
shutdown () ( socket の メソッド ) 
shutil ( standard モジュール ) 
SIG * ( signal モジュール ) 
SIG _ DFL ( signal モジュール ) 
SIG _ IGN ( signal モジュール ) 
signal () ( signal モジュール ) 
signal ( 組み込み モジュール ),[ Link ] 
SimpleXMLRPCServer ( standard モジュール ) 
sin () ( cmath モジュール ) 
sin () ( math モジュール ) 
sinh () ( cmath モジュール ) 
sinh () ( math モジュール ) 
site ( standard モジュール ) 
sitecustomize ( モジュール ),[ Link ] 
size () ( FTP の メソッド ) 
size () ( Queue の メソッド ) 
size ( TarInfo の 属性 ) 
sizeofimage () ( rgbimg モジュール ) 
skip () ( Chunk の メソッド ) 
skipinitialspace ( Dialect の 属性 ) 
skippedEntity () ( ContentHandler の メソッド ) 
slave () ( NNTPDataError の メソッド ) 
sleep () ( time モジュール ) 
slice () ( built - in function ) slice () ( 組み込み 関数 ),[ Link ] 
SliceType ( types モジュール ) 
smtpd ( standard モジュール ) 
smtplib ( standard モジュール ) 
SND _ ALIAS ( winsound モジュール ) 
SND _ ASYNC ( winsound モジュール ) 
SND _ FILENAME ( winsound モジュール ) 
SND _ LOOP ( winsound モジュール ) 
SND _ MEMORY ( winsound モジュール ) 
SND _ NODEFAULT ( winsound モジュール ) 
SND _ NOSTOP ( winsound モジュール ) 
SND _ NOWAIT ( winsound モジュール ) 
SND _ PURGE ( winsound モジュール ) 
sndhdr ( standard モジュール ) 
sniff () ( Sniffer の メソッド ) 
SO _* ( socket モジュール ) 
SOCK _ DGRAM ( socket モジュール ) 
SOCK _ RAW ( socket モジュール ) 
SOCK _ RDM ( socket モジュール ) 
SOCK _ SEQPACKET ( socket モジュール ) 
SOCK _ STREAM ( socket モジュール ) 
socket () ( IMAP 4 _ stream の メソッド ) 
socket () ( socket モジュール ) 
socket ( SocketServer protocol ) socket ( 組み込み モジュール ),[ Link ],[ Link ] 
socketpair () ( socket モジュール ) 
SocketServer ( standard モジュール ) 
SocketType ( socket モジュール ) 
softspace ( file の 属性 ) 
SOL _* ( socket モジュール ) 
SOMAXCONN ( socket モジュール ) 
sort () ( IMAP 4 _ stream の メソッド ) 
sort _ stats () ( Stats の メソッド ) 
sortTestMethodsUsing ( TestLoader の 属性 ) 
source ( Example の 属性 ) 
source ( shlex の 属性 ) 
sourcehook () ( shlex の メソッド ) 
span () ( MatchObject の メソッド ) 
spawn () ( pty モジュール ) 
spawnl () ( os モジュール ) 
spawnle () ( os モジュール ) 
spawnlp () ( os モジュール ) 
spawnlpe () ( os モジュール ) 
spawnv () ( os モジュール ) 
spawnve () ( os モジュール ) 
spawnvp () ( os モジュール ) 
spawnvpe () ( os モジュール ) 
specified _ attributes ( xmlparser の 属性 ) 
speed () ( audio device の メソッド ) 
split () ( os . path モジュール ) 
split () ( re モジュール ) 
split () ( RegexObject の メソッド ) 
split () ( shlex モジュール ) 
split () ( string の メソッド ) 
split () ( string モジュール ) 
splitdrive () ( os . path モジュール ) 
splitext () ( os . path モジュール ) 
splitfields () ( string モジュール ) 
splitlines () ( string の メソッド ) 
sprintf - style formatting sqrt () ( cmath モジュール ) 
sqrt () ( Context の メソッド ) 
sqrt () ( Decimal の メソッド ) 
sqrt () ( math モジュール ) 
ssl () ( IMAP 4 _ stream の メソッド ) 
ssl () ( socket モジュール ) 
ST _ ATIME ( stat モジュール ) 
ST _ CTIME ( stat モジュール ) 
ST _ DEV ( stat モジュール ) 
ST _ GID ( stat モジュール ) 
ST _ INO ( stat モジュール ) 
ST _ MODE ( stat モジュール ) 
ST _ MTIME ( stat モジュール ) 
ST _ NLINK ( stat モジュール ) 
ST _ SIZE ( stat モジュール ) 
ST _ UID ( stat モジュール ) 
stack () ( inspect モジュール ) 
standard _ b 64 decode () ( base 64 モジュール ) 
standard _ b 64 encode () ( base 64 モジュール ) 
standend () ( window の メソッド ) 
standout () ( window の メソッド ) 
starmap () ( itertools モジュール ) 
start () ( MatchObject の メソッド ) 
start () ( Profile の メソッド ) 
start () ( Thread の メソッド ) 
start _ color () ( curses モジュール ) 
start _ new _ thread () ( thread モジュール ) 
startbody () ( MimeWriter の メソッド ) 
StartCdataSectionHandler () ( xmlparser の メソッド ) 
StartDoctypeDeclHandler () ( xmlparser の メソッド ) 
startDocument () ( ContentHandler の メソッド ) 
startElement () ( ContentHandler の メソッド ) 
StartElementHandler () ( xmlparser の メソッド ) 
startElementNS () ( ContentHandler の メソッド ) 
startfile () ( os モジュール ) 
startmultipartbody () ( MimeWriter の メソッド ) 
StartNamespaceDeclHandler () ( xmlparser の メソッド ) 
startPrefixMapping () ( ContentHandler の メソッド ) 
startswith () ( string の メソッド ) 
startTest () ( TestResult の メソッド ) 
starttls () ( SMTP の メソッド ) 
stat () ( NNTPDataError の メソッド ) 
stat () ( os モジュール ) 
stat () ( POP 3 _ SSL の メソッド ) 
stat ( standard モジュール ) stat () ( statcache モジュール ) 
stat ( 標準 モジュール ) 
stat _ float _ times () ( os モジュール ) 
statcache ( standard モジュール ) 
status ( httplib モジュール ) 
status () ( IMAP 4 _ stream の メソッド ) 
statvfs () ( os モジュール ) 
statvfs ( standard モジュール ) 
statvfs ( 標準 モジュール ) 
stderr ( Popen の 属性 ) 
stderr ( sys モジュール ) 
stdin ( Popen の 属性 ) 
stdin ( sys モジュール ) 
stdout ( Popen の 属性 ) stdout ( sys モジュール ) 
stereocontrols () ( mixer device の メソッド ) 
STILL ( cd モジュール ) 
stop () ( CD player の メソッド ) 
stop () ( Profile の メソッド ) 
stop () ( TestResult の メソッド ) 
stopListening () ( logging モジュール ) 
stopTest () ( TestResult の メソッド ) 
storbinary () ( FTP の メソッド ) 
store () ( IMAP 4 _ stream の メソッド ) 
storlines () ( FTP の メソッド ) 
str () ( locale モジュール ) 
strcoll () ( locale モジュール ) 
strerror () ( os モジュール ) 
strftime () ( date の メソッド ) 
strftime () ( datetime の メソッド ) 
strftime () ( time の メソッド ) 
strftime () ( time モジュール ) 
strict _ domain ( LWPCookieJar の 属性 ) 
strict _ errors () ( codecs モジュール ) 
strict _ ns _ domain ( LWPCookieJar の 属性 ) 
strict _ ns _ set _ initial _ dollar ( LWPCookieJar の 属性 ) 
strict _ ns _ set _ path ( LWPCookieJar の 属性 ) 
strict _ ns _ unverifiable ( LWPCookieJar の 属性 ) 
strict _ rfc 2965 _ unverifiable ( LWPCookieJar の 属性 ) 
string ( MatchObject の 属性 ) 
string ( standard モジュール ) string ( 標準 モジュール ),[ Link ],[ Link ] 
StringIO ( standard モジュール ) 
stringprep ( standard モジュール ) 
StringType ( types モジュール ) 
StringTypes ( types モジュール ) 
strip () ( string の メソッド ) 
strip () ( string モジュール ) 
strip _ dirs () ( Stats の メソッド ) 
stripspaces ( Textbox の 属性 ) 
strptime () ( time モジュール ) 
struct ( 組み込み モジュール ),[ Link ],[ Link ] 
struct _ time ( time モジュール ) 
strxfrm () ( locale モジュール ) 
sub () ( operator モジュール ) 
sub () ( re モジュール ) 
sub () ( RegexObject の メソッド ) 
subdirs ( dircmp の 属性 ) 
subn () ( re モジュール ) 
subn () ( RegexObject の メソッド ) 
Subnormal ( decimal の クラス ) 
subpad () ( window の メソッド ) 
subprocess ( standard モジュール ) 
subscribe () ( IMAP 4 _ stream の メソッド ) 
subsequent _ indent ( TextWrapper の 属性 ) 
substitute () ( Template の メソッド ) 
substract () ( Context の メソッド ) 
subwin () ( window の メソッド ) 
suffix _ map ( mimetypes モジュール ),[ Link ] 
suite () ( parser モジュール ) 
suiteClass ( TestLoader の 属性 ) 
summarize () ( DocTestRunner の メソッド ) 
sunau ( standard モジュール ) 
SUNAUDIODEV ( standard モジュール ) 
sunaudiodev ( 組み込み モジュール ),[ Link ] SUNAUDIODEV ( 標準 モジュール ) 
super ( class descriptor の 属性 ) 
supports _ unicode _ filenames ( os . path モジュール ) 
swapcase () ( string の メソッド ) 
swapcase () ( string モジュール ) 
sym () ( TarInfo の メソッド ) 
sym _ name ( symbol モジュール ) 
symbol ( standard モジュール ) 
symlink () ( os モジュール ) 
sync () ( audio device の メソッド ) 
sync () ( dbhash の メソッド ) 
sync () ( gdbm モジュール ) 
sync () ( Queue の メソッド ),[ Link ] 
syncdown () ( window の メソッド ) 
syncok () ( window の メソッド ) 
syncup () ( window の メソッド ) 
syntax _ error () ( XMLParser の メソッド ) 
sys ( 組み込み モジュール ) 
sys _ version ( BaseHTTPRequestHandler の 属性 ) 
sysconf () ( os モジュール ) 
sysconf _ names ( os モジュール ) 
syslog () ( syslog モジュール ) 
syslog ( 組み込み モジュール ) 
system () ( os モジュール ) 
system () ( platform モジュール ) 
system . listMethods () ( ServerProxy の メソッド ) 
system . methodHelp () ( ServerProxy の メソッド ) 
system . methodSignature () ( ServerProxy の メソッド ) 
system _ alias () ( platform モジュール ) 
systemId ( DocumentType の 属性 ) 
T _ FMT ( locale モジュール ) 
T _ FMT _ AMPM ( locale モジュール ) 
tabnanny ( standard モジュール ) 
tagName ( Element の 属性 ) 
takewhile () ( itertools モジュール ) 
tan () ( cmath モジュール ) 
tan () ( math モジュール ) 
tanh () ( cmath モジュール ) 
tanh () ( math モジュール ) 
TAR _ GZIPPED ( tarfile モジュール ) 
TAR _ PLAIN ( tarfile モジュール ) 
tarfile ( standard モジュール ) 
TarFile ( tarfile の クラス ) 
target ( ProcessingInstruction の 属性 ) 
tb _ lineno () ( traceback モジュール ) 
tcdrain () ( termios モジュール ) 
tcflow () ( termios モジュール ) 
tcflush () ( termios モジュール ) 
tcgetattr () ( termios モジュール ) 
tcgetpgrp () ( os モジュール ) 
Tcl () ( Tkinter モジュール ) 
TCP _* ( socket モジュール ) 
tcsendbreak () ( termios モジュール ) 
tcsetattr () ( termios モジュール ) 
tcsetpgrp () ( os モジュール ) 
tearDown () ( TestCase の メソッド ) 
tee () ( itertools モジュール ) 
tell () ( aifc の メソッド ),[ Link ] 
tell () ( AU _ read の メソッド ) 
tell () ( AU _ write の メソッド ) 
tell () ( BZ 2 File の メソッド ) 
tell () ( Chunk の メソッド ) 
tell () ( file の メソッド ) 
tell () ( MultiFile の メソッド ) 
tell () ( Queue の メソッド ) 
tell () ( Wave _ read の メソッド ) 
tell () ( Wave _ write の メソッド ) 
telnetlib ( standard モジュール ) 
TEMP ( 環境 変数 ) 
tempdir ( tempfile モジュール ) 
tempfile ( standard モジュール ) 
template ( string の 属性 ) 
template ( tempfile モジュール ) 
tempnam () ( os モジュール ) 
TemporaryFile () ( tempfile モジュール ) 
termattrs () ( curses モジュール ) 
termios ( 組み込み モジュール ) 
termname () ( curses モジュール ) 
test () ( mutex の メソッド ) 
test ( standard モジュール ) 
test ( UnexpectedException の 属性 ) 
test . test _ support ( standard モジュール ) 
testandset () ( mutex の メソッド ) 
testfile () ( doctest モジュール ) 
TESTFN ( test . test _ support モジュール ) 
testMethodPrefix ( TestLoader の 属性 ) 
testmod () ( doctest モジュール ),[ Link ] 
tests ( imghdr モジュール ) 
testsource () ( doctest モジュール ),[ Link ] 
testsRun ( TestResult の 属性 ) 
textdomain () ( gettext モジュール ) 
THOUSEP ( locale モジュール ) 
thread () ( IMAP 4 _ stream の メソッド ) 
Thread ( threading の クラス ) 
thread ( 組み込み モジュール ) 
threading ( standard モジュール ) 
tie () ( fl モジュール ) 
tigetflag () ( curses モジュール ) 
tigetnum () ( curses モジュール ) 
tigetstr () ( curses モジュール ) 
time ( datetime の クラス ) 
time () ( datetime の メソッド ) 
time () ( time モジュール ) 
time ( 組み込み モジュール ) Time 2 Internaldate () ( imaplib モジュール ) 
timedelta ( datetime の クラス ) 
timegm () ( calendar モジュール ) 
timeit ( standard モジュール ) 
timeit () ( Timer の メソッド ) 
timeout () ( window の メソッド ) 
Timer ( threading の クラス ) 
times () ( os モジュール ) 
timetuple () ( date の メソッド ) 
timetuple () ( datetime の メソッド ) 
timetz () ( datetime の メソッド ) 
timezone ( time モジュール ) 
title () ( string の メソッド ) 
Tix ( standard モジュール ) 
tix _ addbitmapdir () ( tixCommand の メソッド ) 
tix _ cget () ( tixCommand の メソッド ) 
tix _ configure () ( tixCommand の メソッド ) 
tix _ filedialog () ( tixCommand の メソッド ) 
tix _ getbitmap () ( tixCommand の メソッド ) 
tix _ getimage () ( tixCommand の メソッド ) 
TIX _ LIBRARY ( 環境 変数 ) 
tix _ option _ get () ( tixCommand の メソッド ) 
tix _ resetoptions () ( tixCommand の メソッド ) 
Tkinter ( standard モジュール ) 
TMP ( 環境 変数 ) 
TMP _ MAX ( os モジュール ) 
TMPDIR ( 環境 変数 ) 
tmpfile () ( os モジュール ) 
tmpnam () ( os モジュール ) 
to _ eng _ string () ( Context の メソッド ) 
to _ eng _ string () ( Decimal の メソッド ) 
to _ integral () ( Context の メソッド ) 
to _ integral () ( Decimal の メソッド ) 
to _ sci _ string () ( Context の メソッド ) 
to _ splittable () ( Charset の メソッド ) 
ToASCII () ( encodings . idna モジュール ) 
tobuf () ( TarInfo の メソッド ) 
tochild ( Popen 4 の 属性 ) 
today () ( date の メソッド ) 
today () ( datetime の メソッド ) 
tofile () ( array の メソッド ) 
togglepause () ( CD player の メソッド ) 
tok _ name ( token モジュール ) 
token ( shlex の 属性 ) 
token ( standard モジュール ) 
tokeneater () ( tabnanny モジュール ) 
tokenize ( standard モジュール ) 
tokenize () ( tokenize モジュール ) 
tolist () ( array の メソッド ) 
tolist () ( AST の メソッド ) 
tomono () ( audioop モジュール ) 
toordinal () ( date の メソッド ) 
toordinal () ( datetime の メソッド ) 
top () ( POP 3 _ SSL の メソッド ) 
top () ( Textbox の メソッド ) 
top _ panel () ( curses . panel モジュール ) 
toprettyxml () ( Node の メソッド ) 
tostereo () ( audioop モジュール ) 
tostring () ( array の メソッド ) 
totuple () ( AST の メソッド ) 
touchline () ( window の メソッド ) 
touchwin () ( window の メソッド ) 
tounicode () ( array の メソッド ) 
ToUnicode () ( encodings . idna モジュール ) 
tovideo () ( imageop モジュール ) 
toxml () ( Node の メソッド ) 
tparm () ( curses モジュール ) 
trace () ( inspect モジュール ) 
traceback ( standard モジュール ) 
tracebacklimit ( sys モジュール ) 
TracebackType ( types モジュール ) 
tracer () ( turtle モジュール ) 
transfercmd () ( FTP の メソッド ) 
translate () ( string の メソッド ) 
translate () ( string モジュール ) 
translate _ references () ( XMLParser の メソッド ) 
translation () ( gettext モジュール ) 
truediv () ( operator モジュール ) 
truncate () ( file の メソッド ) 
truth () ( operator モジュール ) 
ttob () ( imgfile モジュール ) 
ttob () ( rgbimg モジュール ) 
tty ( standard モジュール ) 
ttyname () ( os モジュール ) 
tuple 2 ast () ( parser モジュール ) 
TupleType ( types モジュール ) 
turnoff _ sigfpe () ( fpectl モジュール ) 
turnon _ sigfpe () ( fpectl モジュール ) 
turtle ( standard モジュール ) 
type ( TarInfo の 属性 ) type () ( 組み込み 関数 ),[ Link ] 
typeahead () ( curses モジュール ) 
typecode ( array の 属性 ) 
typed _ subpart _ iterator () ( email . Iterators モジュール ) 
types ( standard モジュール ) types ( 標準 モジュール ),[ Link ] 
types _ map ( mimetypes モジュール ),[ Link ] 
TypeType ( types モジュール ) 
TZ ( 環境 変数 ),[ Link ],[ Link ],[ Link ],[ Link ],[ Link ] 
tzinfo ( datetime の クラス ) 
tzinfo ( datetime の 属性 ) 
tzinfo ( time の 属性 ) 
tzname () ( datetime の メソッド ) 
tzname () ( time の メソッド ),[ Link ] 
tzname ( time モジュール ) 
tzset () ( time モジュール ) 
U ( re モジュール ) 
ugettext () ( GNUTranslations の メソッド ) 
ugettext () ( NullTranslations の メソッド ) 
uid () ( IMAP 4 _ stream の メソッド ) 
uid ( TarInfo の 属性 ) 
uidl () ( POP 3 _ SSL の メソッド ) 
ulaw 2 lin () ( audioop モジュール ) 
umask () ( os モジュール ) 
uname () ( os モジュール ) 
uname () ( platform モジュール ) 
uname ( TarInfo の 属性 ) 
UnboundMethodType ( types モジュール ) 
unconsumed _ tail ( Queue の 属性 ) 
unctrl () ( curses モジュール ) 
unctrl () ( curses . ascii モジュール ) 
Underflow ( decimal の クラス ) 
undoc _ header ( Cmd の 属性 ) 
unescape () ( xml . sax . saxutils モジュール ) 
unfreeze _ form () ( form の メソッド ) 
unfreeze _ object () ( FORMS object の メソッド ) 
ungetch () ( curses モジュール ) 
ungetch () ( msvcrt モジュール ) 
ungetmouse () ( curses モジュール ) 
ungettext () ( GNUTranslations の メソッド ) 
ungettext () ( NullTranslations の メソッド ) 
unhexlify () ( binascii モジュール ) 
UNICODE ( re モジュール ) 
unicodedata ( standard モジュール ) 
UnicodeType ( types モジュール ) 
unidata _ version ( unicodedata モジュール ) 
unified _ diff () ( difflib モジュール ) 
uniform () ( random モジュール ) 
uniform () ( whrandom モジュール ) 
unittest ( standard モジュール ) 
unixfrom ( AddressList の 属性 ) 
unknown _ charref () ( SGMLParser の メソッド ) 
unknown _ charref () ( XMLParser の メソッド ) 
unknown _ endtag () ( SGMLParser の メソッド ) 
unknown _ endtag () ( XMLParser の メソッド ) 
unknown _ entityref () ( SGMLParser の メソッド ) 
unknown _ entityref () ( XMLParser の メソッド ) 
unknown _ open () ( BaseHandler の メソッド ) 
unknown _ open () ( HTTPErrorProcessor の メソッド ) 
unknown _ open () ( UnknownHandler の メソッド ) 
unknown _ starttag () ( SGMLParser の メソッド ) 
unknown _ starttag () ( XMLParser の メソッド ) 
unlock () ( mutex の メソッド ) 
unmimify () ( mimify モジュール ) 
unpack () ( struct モジュール ) 
unpack _ array () ( Unpacker の メソッド ) 
unpack _ bytes () ( Unpacker の メソッド ) 
unpack _ double () ( Unpacker の メソッド ) 
unpack _ farray () ( Unpacker の メソッド ) 
unpack _ float () ( Unpacker の メソッド ) 
unpack _ fopaque () ( Unpacker の メソッド ) 
unpack _ fstring () ( Unpacker の メソッド ) 
unpack _ list () ( Unpacker の メソッド ) 
unpack _ opaque () ( Unpacker の メソッド ) 
unpack _ string () ( Unpacker の メソッド ) 
unparsedEntityDecl () ( DTDHandler の メソッド ) 
UnparsedEntityDeclHandler () ( xmlparser の メソッド ) 
unqdevice () ( fl モジュール ) 
unquote () ( email . Utils モジュール ) 
unquote () ( rfc 822 モジュール ) 
unquote () ( urllib モジュール ) 
unquote _ plus () ( urllib モジュール ) 
unregister () ( LogRecord の メソッド ) 
unregister _ dialect () ( csv モジュール ) 
unsubscribe () ( IMAP 4 _ stream の メソッド ) 
untouchwin () ( window の メソッド ) 
unused _ data ( Queue の 属性 ) 
up () ( turtle モジュール ) 
update () ( hmac の メソッド ) 
update () ( md 5 の メソッド ) 
update () ( sha の メソッド ) 
update _ panels () ( curses . panel モジュール ) 
upper () ( string の メソッド ) 
upper () ( string モジュール ) 
uppercase ( string モジュール ) 
urandom () ( os モジュール ) 
url ( ServerProxy の 属性 ) 
url 2 pathname () ( urllib モジュール ) 
urlcleanup () ( urllib モジュール ) 
urldefrag () ( urlparse モジュール ) 
urlencode () ( urllib モジュール ) 
urljoin () ( urlparse モジュール ) 
urllib ( standard モジュール ) 
urllib ( 標準 モジュール ) urllib 2 ( standard モジュール ) 
urlopen () ( urllib モジュール ) 
urlopen () ( urllib 2 モジュール ) 
urlparse ( standard モジュール ) 
urlparse () ( urlparse モジュール ) urlparse ( 標準 モジュール ) 
urlretrieve () ( urllib モジュール ) 
urlsafe _ b 64 decode () ( base 64 モジュール ) 
urlsafe _ b 64 encode () ( base 64 モジュール ) 
urlsplit () ( urlparse モジュール ) 
urlunparse () ( urlparse モジュール ) 
urlunsplit () ( urlparse モジュール ) 
use _ default _ colors () ( curses モジュール ) 
use _ env () ( curses モジュール ) 
use _ rawinput ( Cmd の 属性 ) 
UseForeignDTD () ( xmlparser の メソッド ) 
user () ( POP 3 _ SSL の メソッド ) 
user ( standard モジュール ) 
USER ( 環境 変数 ) 
UserDict ( standard モジュール ) 
UserList ( standard モジュール ) 
USERNAME ( 環境 変数 ) 
userptr () ( Textbox の メソッド ) 
UserString ( standard モジュール ) 
utcfromtimestamp () ( datetime の メソッド ) 
utcnow () ( datetime の メソッド ) 
utcoffset () ( datetime の メソッド ) 
utcoffset () ( time の メソッド ),[ Link ] 
utctimetuple () ( datetime の メソッド ) 
utime () ( os モジュール ) 
uu ( standard モジュール ) 
uu ( 標準 モジュール ) V 
value ( Cookie の 属性 ) 
value ( Morsel の 属性 ) 
value _ decode () ( BaseCookie の メソッド ) 
value _ encode () ( BaseCookie の メソッド ) 
values () ( Message の メソッド ) 
varray () ( gl モジュール ) 
vbar ( ScrolledText の 属性 ) 
VERBOSE ( re モジュール ) 
verbose ( tabnanny モジュール ) 
verbose ( test . test _ support モジュール ) 
verify () ( SMTP の メソッド ) 
version ( Cookie の 属性 ) 
version ( curses モジュール ) 
version ( httplib モジュール ) 
version ( marshal モジュール ) 
version () ( platform モジュール ) 
version ( sys モジュール ) 
version ( URLopener の 属性 ) 
version _ info ( sys モジュール ) 
version _ string () ( BaseHTTPRequestHandler の メソッド ) 
vline () ( window の メソッド ) 
vnarray () ( gl モジュール ) 
voidcmd () ( FTP の メソッド ) 
volume ( ZipInfo の 属性 ) 
vonmisesvariate () ( random モジュール ) 
W _ OK ( os モジュール ) 
wait () ( Condition の メソッド ) 
wait () ( Event の メソッド ) 
wait () ( os モジュール ) 
wait () ( Popen の メソッド ) 
wait () ( Popen 4 の メソッド ) 
waitpid () ( os モジュール ) 
walk () ( compiler モジュール ) 
walk () ( compiler . visitor モジュール ) 
walk () ( Message の メソッド ) 
walk () ( os モジュール ) 
walk () ( os . path モジュール ) 
want ( Example の 属性 ) 
warn () ( warnings モジュール ) 
warn _ explicit () ( warnings モジュール ) 
warning () ( ErrorHandler の メソッド ) 
warning () ( logging モジュール ) 
warning () ( Textbox の メソッド ) 
warnings ( standard モジュール ) 
warnoptions ( sys モジュール ) 
wasSuccessful () ( TestResult の メソッド ) 
wave ( standard モジュール ) 
weakref ( extension モジュール ) 
webbrowser ( standard モジュール ) 
weekday () ( calendar モジュール ) 
weekday () ( date の メソッド ) 
weekday () ( datetime の メソッド ) 
weibullvariate () ( random モジュール ) 
WEXITSTATUS () ( os モジュール ) 
wfile ( BaseHTTPRequestHandler の 属性 ) 
what () ( imghdr モジュール ) 
what () ( sndhdr モジュール ) 
whathdr () ( sndhdr モジュール ) 
whichdb ( standard モジュール ) 
whichdb () ( whichdb モジュール ) 
whitespace _ split ( shlex の 属性 ) 
whrandom ( standard モジュール ) 
width ( TextWrapper の 属性 ) 
width () ( turtle モジュール ) 
WIFEXITED () ( os モジュール ) 
WIFSIGNALED () ( os モジュール ) 
WIFSTOPPED () ( os モジュール ) 
Wimp $ ScrapDir ( 環境 変数 ) 
win 32 _ ver () ( platform モジュール ) 
window () ( Textbox の メソッド ) 
winsound ( 組み込み モジュール ) 
winver ( sys モジュール ) 
WNOHANG ( os モジュール ) 
wordchars ( shlex の 属性 ) 
wrap () ( textwrap モジュール ) 
wrap () ( TextWrapper の メソッド ) 
wrapper () ( curses . wrapper モジュール ) 
writable () ( async _ chat の メソッド ) 
writable () ( dispatcher の メソッド ) 
write () ( array の メソッド ) 
write () ( audio device の メソッド ),[ Link ] 
write () ( BZ 2 File の メソッド ) 
write () ( file の メソッド ) 
write () ( Generator の メソッド ) 
write () ( imgfile モジュール ) 
write () ( InteractiveConsole の メソッド ) 
write () ( LogRecord の メソッド ) 
write () ( os モジュール ) 
write () ( Queue の メソッド ) 
write () ( SafeConfigParser の メソッド ) 
write () ( StreamWriter の メソッド ) 
write () ( Telnet の メソッド ) write () ( turtle モジュール ) 
write () ( ZipFile の メソッド ) 
write _ byte () ( Queue の メソッド ) 
write _ history _ file () ( readline モジュール ) 
writeall () ( audio device の メソッド ) 
writeframes () ( aifc の メソッド ) 
writeframes () ( AU _ write の メソッド ) 
writeframes () ( Wave _ write の メソッド ) 
writeframesraw () ( aifc の メソッド ) 
writeframesraw () ( AU _ write の メソッド ) 
writeframesraw () ( Wave _ write の メソッド ) 
writelines () ( BZ 2 File の メソッド ) 
writelines () ( file の メソッド ) 
writelines () ( StreamWriter の メソッド ) 
writepy () ( PyZipFile の メソッド ) 
writerow () ( csv writer の メソッド ) 
writerows () ( csv writer の メソッド ) 
writesamps () ( audio port の メソッド ) 
writestr () ( ZipFile の メソッド ) 
writexml () ( Node の メソッド ) 
WSTOPSIG () ( os モジュール ) 
WTERMSIG () ( os モジュール ) 
X ( re モジュール ) 
X _ OK ( os モジュール ) 
xatom () ( IMAP 4 _ stream の メソッド ) 
xdrlib ( standard モジュール ) 
xgtitle () ( NNTPDataError の メソッド ) 
xhdr () ( NNTPDataError の メソッド ) 
XHTML _ NAMESPACE ( xml . dom モジュール ) 
xml . dom ( standard モジュール ) 
xml . dom . minidom ( standard モジュール ) 
xml . dom . pulldom ( standard モジュール ) 
xml . parsers . expat ( standard モジュール ) 
xml . sax ( standard モジュール ) 
xml . sax . handler ( standard モジュール ) 
xml . sax . saxutils ( standard モジュール ) 
xml . sax . xmlreader ( standard モジュール ) 
XML _ NAMESPACE ( xml . dom モジュール ) 
xmlcharrefreplace _ errors _ errors () ( codecs モジュール ) 
xmllib ( standard モジュール ) 
XMLNS _ NAMESPACE ( xml . dom モジュール ) 
XMLParserType ( xml . parsers . expat モジュール ) 
xmlrpclib ( standard モジュール ) 
xor () ( operator モジュール ) 
xover () ( NNTPDataError の メソッド ) 
xpath () ( NNTPDataError の メソッド ) 
xrange () ( built - in function ) xrange () ( 組み込み 関数 ),[ Link ] 
XRangeType ( types モジュール ) 
xreadlines () ( BZ 2 File の メソッド ) 
xreadlines () ( file の メソッド ) 
year ( date の 属性 ) 
year ( datetime の 属性 ) 
YESEXPR ( locale モジュール ) 
yiq _ to _ rgb () ( colorsys モジュール ) 
zfill () ( string の メソッド ) zfill () ( string モジュール ) 
日本語 訳 : Python ドキュメント 翻訳 プロジェクト 
Python に は 様々 な 著者 により 寄稿 さ れ た 非常 に 多く の ドキュメント 類 が あり ます 。 
ドキュメント の 作者 は 、 この ガイド と Python 配布 物 で 提供 さ れ て いる 雛形 ファイル を 組み合わせ て 使い 、 ドキュメント 全体 や ドキュメント の 各 セクション を 作成 し たり 維持 し たり でき ます 。 Python の ドキュメント を 寄贈 し たい と 思っ て いる なら 、 その ため に LaTeX を わざわざ 学ぶ 必要 は あり ませ ん ; 平文 で の 寄贈 も 大 歓迎 です 。 
1 初め に Python の ドキュメント は 、 この フリー な プログラミング 言語 の 長所 で ある と 考え られ て き まし た 。 
その 理由 は 多々 あり ます が 、 最も 重要 な の は 、 Python の 作者 で ある Guido van Rossum が 、 言語 や その ライブラリ の ドキュメント の 提供 と 、 ドキュメント の 作成 と 維持 の 手助け する 上 で の ユーザ コミュニティ の 継続 的 な 参加 に 早期 から 関わっ て い た こと です 。 コミュニティ の 参加 に は 、 バグ 報告 の 作成 から 、 単に ドキュメント を より 完全 で 利用 し やすい もの に できる 場合 に 素朴 な 提案 を する といった こと まで 、 いくつ も の やり かた が あり ます 。 
筆者 自身 、 ドキュメント の 維持 に 参加 し て いる 中 で 、 こうした コミュニティ から 寄せ られる 入力 全て が 有用 だ と 確信 さ せ られ まし た 。 この ドキュメント は 、 Python の ドキュメント の 作者 、 あるいは 潜在 的 な 作者 向け の もの です 。 
もっと 具体 的 に いう と 、 標準 ドキュメント に 貢献 し たり 、 標準 ドキュメント と 同じ ツール を 使っ て 別 の ドキュメント を 開発 する 人々 向け です 。 
この ガイド は Python 以外 の トピック に Python ドキュメント 作成 ツール を 使う 作者 にとって は あまり 有用 で は なく 、 ツール を 全く 使用 し ない 作者 に も あまり 有用 で は ない でしょ う 。 この ガイド に 書か れ て いる こと は 、 Python ドキュメント 作成 ツール を 使う 著者 の 支援 を 目的 と し て い ます 。 
ガイド に は 、 標準 ドキュメント の ソース 配布 に関する 情報 、 ドキュメント タイプ に関する 議論 、 ドキュメント クラス 中 で 定義 さ れ て いる マーク アップ について の リファレンス 、 ドキュメント を 処理 する 上 で 必要 な 外部 ツール の リスト 、 ドキュメント リソース と共に 提供 さ れ て いる ツール に関する リファレンス が 入っ て い ます 。 
ガイド の 末尾 に は 、 Python ドキュメント の 将来 の 方向 性 と 、 詳細 な 情報 を どこ で 取得 できる か について 議論 し た 章 も あり ます 。 仮に 、 あなた が Python の ドキュメント を 寄贈 し たい と 思っ て いる 一方 で 、 LaTeX を 学ん だり 、 この ドキュメント に 書か れ て いる マーク アップ 構造 を 学ん だり する 時間 や 気力 を 持て ない として も 、 あなた を Python プロジェクト へ の 協力 者 として 迎え入れる 余地 は あり ます 。 
既存 の ドキュメント を 改善 し たり 、 欠け て いる ドキュメント を 提供 し て もらえる なら 、 現在 の ドキュメント 製作 チーム が いつ でも 喜ん で マーク アップ を 行い 、 テキスト を 組み込み ます 。 
手助け し たい という 気持ち を お 持ち なら 、 この ドキュメント に 書か れ て いる こと を 障害 の よう に 思わ ない で ください ね ! 
B . 2 翻訳 者 一覧 ( 敬称 略 ) 
B . バグ 報告 
A . 6 SGI 特有 の 拡張 モジュール 
C . 歴史 と ライセンス 
3 . 2 標準 型 の 階層 
3 . 1 オブジェクト 、 値 、 および 型 
3 . 3 特殊 メソッド 名 
以下 は Python に 組み込ま れ て いる 型 の リスト です 。 
( C 、 Java 、 または 実装 に 使わ れ て いる その他 の 言語 で 書か れ た ) 拡張 モジュール で は 、 その他 に 新た な 型 を 定義 する こと が でき ます 。 
将来 の バージョン の Python で は 、 型 の 階層 に 新た な 型 ( 整数 を 使っ て 効率 的 に 記憶 さ れる 有理数 型 、 など ) を 追加 する こと が できる かも しれ ませ ん 。 
以下 に 説明 する 型 の いくつ か に は 、 ` 特殊 属性 ( special attribute )' と 題さ れ た 段落 が 連ね られ て い ます 。 
これら の 属性 は 実装 へ の アクセス 手段 を 提供 する もの で 、 一般 的 な 用途 に 利用 する ため の もの で は あり ませ ん 。 
特殊 属性 の 定義 は 将来 変更 さ れる 可能 性 が あり ます 。 
この 型 に は 単一 の 値 しか あり ませ ん 。 
( 演算 子 によって は 、 インタプリタ が 関連 の ある 演算 を 試し たり 、 他 の 代替 操作 を 行い ます 。 
) 真 値 は 真 ( true ) です 。 
真 値 は 真 ( true ) です 。 
数値 リテラル によって 作成 さ れ たり 、 算術 演算 や 組み込み の 算術 関数 によって 返さ れる オブジェクト です 。 
数値 オブジェクト は 変更 不能 です ; 一 度 値 が 生成 さ れる と 、 二度と 変更 さ れる こと は あり ませ ん 。 
Python の 数値 オブジェクト は いう まで も なく 数学 で 言う ところ の 数値 と 強く 関係 し て い ます が 、 コンピュータ 内 で 数値 を 表現 する 際 に 伴う 制限 を 受け て い ます 。 
Python は 整数 、 浮動 小数点 数 、 複素数 の 間 で 区別 を 行っ て い ます : 
整数 型 ( integer ) 
整数 型 は 、 全て の 数 ( whole numbers ) を 表す 数学 的 集合 内 における 要素 を 表現 する 型 です 。 
以下 に 三つ の 整数 型 を 示し ます : 
( 通常 の ) 整数 型 ( plain integer ) 
長 整数 型 ( long integer ) 
長 整数 は 無限 の 定義 域 を 持ち 、 利用 可能 な ( 仮想 ) メモリ サイズ の 制限 のみ を うけ ます 。 
長 整数 は シフト 演算 や マスク 演算 の ため に バイナリ 表現 を もつ もの と 仮定 さ れ ます 。 負 の 数 は 符号 ビット が 左 に 無限 に 延び て いる よう な 錯覚 を 与える 2 の 補数 表現 の 変型 で 表さ れ ます 。 
ブール 型 ( boolean ) 
ブール 型 は 、 真 値 False または True を 表現 し ます 。 
整数 表現 に関する 規則 は 、 シフト 演算 や マスク 演算 において 、 負 の 整数 も 含め て 最も 有意義 な 解釈 が できる よう に 、 かつ 通常 の 整数 と 長 整数 と の 間 で 定義 域 を 切り替える 際 に できる だけ 混乱 し ない よう に 決め られ て い ます 。 
左 シフト 以外 の 演算 で は 、 演算 結果 が オーバフロー を 起こさ ず に 整数 の 定義 域 の 値 に なる 場合 は 、 長 整数 を 使っ た 場合 でも 、 被 演算 子 に 整数 と 長 整数 を 混合 し た 場合 でも 同じ 結果 に なり ます 。 
浮動 小数点 数 型 ( floating point number ) 
この 型 は 計算 機 レベル で 倍精度 と さ れ て いる 浮動 小数点 数 を 表現 し ます 。 
複素数 型 ( complex number ) 
この 型 は 、 計算 機 レベル で 倍精度 と さ れ て いる 浮動 小数点 を 2 つ 一 組 に し て 複素数 を 表現 し ます 。 
浮動 小数点 について 述べ た の と 同じ 性質 が 当てはまり ます 。 
複素数 z の 実数 部 および 虚数 部 は 、 それぞれ 読み出し 専用 属性 z . real および z . imag で 取り出す こと が でき ます 。 
シーケンス 型 ( sequence ) 
を 使う と 、 シーケンス の 要素 数 を 返し ます 。 シーケンス の 長 さ が n の 場合 、 インデクス は 0 , 1 , ..., n - 1 から なる 集合 です 。 
シーケンス は スライス 操作 ( slice ) も サポート し て い ます : 
a [ i : j ] と する と 、 i = k j で ある インデクス k を もつ 全て の 要素 を 選択 し ます 。 
式 表現 として スライス を 用い た 場合 、 スライス は 同じ 型 を もつ 新た な シーケンス を 表し ます 。 
シーケンス は 、 変更 可能 な もの か 、 そう で ない か で 区別 さ れ て い ます : 
変更 不能 な シーケンス ( immutable sequence ) 
変更 不能 な シーケンス 型 の オブジェクト は 、 一度 生成 さ れる と その 値 を 変更 する こと が でき ませ ん 。 
( オブジェクト に 他 の オブジェクト へ の 参照 が 入っ て いる 場合 、 参照 さ れ て いる オブジェクト は 変更 可能 な オブジェクト で も よく 、 その 値 は 変更 さ れる 可能 性 が あり ます ; しか し 、 変更 不能 な オブジェクト が 直接 参照 し て いる オブジェクト の 集合 自体 は 、 変更 する こと が でき ませ ん 。 ) 
以下 の 型 は 変更 不能 な シーケンス 型 です : 
文字 列 型 ( string ) 
文字 列 の 各 要素 は 文字 ( character ) です 。 
文字 型 ( character type ) は 存在 し ませ ん ; 単一 の 文字 は 、 要素 が 一つ だけ の 文字 列 として 表現 さ れ ます 。 各 文字 は ( 少なくとも ) 8 - bit の バイト 列 を 表現 し ます 。 
組み込み 関数 chr () 
および ord () 
を 使う と 、 文字 と 非負 の 整数 で 表さ れ た バイト 値 の 間 で 変換 を 行え ます 。 
0 - 127 の 値 を 持つ バイト 値 は 、 通常 同じ ASCII 値 を もつ 文字 を 表現 し て い ます が 、 値 を どう 解釈 する か は プログラム に ゆだね られ て い ます 。 
文字 列 データ 型 は また 、 例えば ファイル から 読み出さ れ た データ を 記憶 する といった 用途 で 、 バイト 値 の アレイ を 表現 する ため に 用い られ ます 。 
( ネイティブ の 文字 セット が ASCII で ない システム で は 、 chr () や ord () が ASCII と EBCDIC と の 間 で 対応 付け を 行っ て おり 、 文字 列 間 の 比較 で ASCII 順 が 守ら れる 限り 、 文字 列 の 内部 表現 として EBCDIC を 使っ て も かまい ませ ん 。 誰 か 他 に もっと まし な ルール を お 持ち です か ?) 
Unicode 文字 列 型 
Unicode オブジェクト の 各 要素 は Unicode コード 単位 です 。 
Unicode コード 単位 と は 、 単一 の Unicode オブジェクト で 、 Unicode 序 数 を 表現 する 16 - bit または 32 - bit の 値 を 保持 できる もの です ( この 序 数 の 最大 値 は sys . maxunicode で 与え られ て おり 、 コンパイル 時 に Python が どう 設定 さ れ て いる か に 依存 し ます )。 
Unicode オブジェクト 内 に サロゲートペア ( surrogate pair ) が あっ て も よく 、 Python は サロゲートペア を 二つ の 別々 の Unicode 要素 として 報告 し ます 。 
組み込み 関数 unichr () 
は 、 コード 単位 と 非負 の 整数 で 表さ れ た Unicode 標準 3 . 0 で 定義 さ れ た Unicode 序 数 と の 間 で 変換 を 行い ます 。 
他 の 文字 エン コード 形式 と の 相互 変換 は 、 Unicode メソッド encode および 組み込み 関数 unicode () 
で 行う こと が でき ます 。 タプル 型 ( tuple ) 
タプル の 要素 は 任意 の Python オブジェクト に でき ます 。 二つ または それ 以上 の 要素 から なる タプル は 、 個々 の 要素 を 表現 する 式 を カンマ で 区切っ て 構成 し ます 。 
単一 の 要素 から なる タプル ( 単 集合 ` singleton ') を 作る に は 、 要素 を 表現 する 式 の 直後 に カンマ を つけ ます ( 単一 の 式 だけ で は タプル を 形成 し ませ ん 。 これ は 、 式 を グループ 化 する のに 丸 括弧 を 使える よう に し なけれ ば なら ない から です ) 。 
要素 の 全く ない 丸 括弧 の 対 を 作る と 空 の タプル に なり ます 。 
変更 可能 な シーケンス 型 ( mutable sequence ) 
変更 可能 な シーケンス は 、 作成 し た 後 で 変更 する こと が でき ます 。 
変更 可能 な シーケンス で は 、 添字 表記 や スライス 表記 を 使っ て 指定 さ れ た 要素 に 代入 を 行う こと が でき 、 del ( delete ) 文 を 使っ て 要素 を 削除 する こと が でき ます 。 
Python に 最初 から 組み込ま れ て いる 変更 可能 な シーケンス 型 は 、 今 の ところ 一つ だけ です : 
リスト 型 ( list ) 
リスト の 要素 は 任意 の Python オブジェクト に でき ます 。 
拡張 モジュール array 
では 、 別 の 変更 可能 な シーケンス 型 を 提供 し て い ます 。 
マップ 型 ( mapping ) 
Python に 最初 から 組み込ま れ て いる マップ 型 は 、 今 の ところ 一つ だけ です : 
辞書 型 ( dictionary ) 
ほとんど どんな 値 で も インデクス として 使える よう な 、 有限 個 の オブジェクト から なる 集合 を 表し ます 。 
、 gdbm 
、 および bsddb 
では 、 別 の マップ 型 を 提供 し て い ます 。 
呼び出し 可能 型 ( callable type ) 
関数 呼び出し 操作 ( 5 . 3 . 4 節 、 `` 呼び出し ( call )'' 参照 ) を 行う こと が できる 型 です : 
ユーザ 定義 関数 ( user - defined function ) 
ユーザ 定義 関数 オブジェクト は 、 関数 定義 を 行う こと で 生成 さ れ ます ( 7 . 5 節 、 `` 関数 定義 '' 参照 )。 
関数 は 、 仮 引数 ( formal parameter ) リスト と 同じ 数 の 要素 が 入っ た 引数 リスト とともに 呼び出さ れ ます 。 
特殊 属性 : 
関数 の ドキュメンテーション 文字 列 です 。 ドキュメンテーション が ない 場合 は None に なり ます 。 
書き込み 可能 
func _ doc の 別名 です 。 
関数 の 名前 です 。 
func _ name の 別名 です 。 
__ module __ 関数 が 定義 さ れ て いる モジュール の 名前 です 。 
モジュール 名 が ない 場合 は None に なり ます 。 
デフォルト 値 を 持つ 引数 に対する デフォルト 値 が 収め られ た タプル で 、 デフォルト 値 を 持つ 引数 が ない 場合 に は None に なり ます 。 
コンパイル さ れ た 関数 本体 を 表現 する コード オブジェクト です 。 
関数 の グローバル 変数 の 入っ た 辞書 ( へ の 参照 ) です -- この 辞書 は 、 関数 が 定義 さ れ て いる モジュール の グローバル な 名前 空間 を 決定 し ます 。 
読み出し 専用 
任意 の 関数 属性 を サポート する ため の 名前 空間 が 収め られ て い ます 。 
None または 関数 の 個々 の 自由 変数 ( 引数 以外 の 変数 ) に対して 値 を 結び付け て いる セル ( cell ) 群 から なる タプル に なり ます 。 
「 書き込み 可能 」 と ラベル さ れ て いる 属性 の ほとんど は 、 代入 さ れ た 値 の 型 を チェック し ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : func _ name は 書き込み 可能 に なり まし た 
関数 オブジェクト は また 、 任意 の 属性 を 設定 し たり 取得 し たり でき ます 。 この 機能 は 、 例えば 関数 に メタデータ を 付与 し たい 場合 など に 使え ます 。 
関数 の get や set に は 、 通常 の ドット 表記 を 使い ます 。 
現在 の 実装 で は 、 ユーザ 定義 の 関数 で のみ 属性 を サポート し て いる ので 注意 し て 下さい 。 
組み込み 関数 の 属性 は 将来 サポート する 予定 です 。 
関数 定義 に関する その他 の 情報 は 、 関数 の コード オブジェクト から 得 られ ます ; 後述 の 内部 型 ( internal type ) に関する 説明 を 参照 し て ください 。 
ユーザ 定義 メソッド ( user - defined method ) 
ユーザ 定義 の メソッド オブジェクト は 、 クラス や クラス インスタンス ( あるいは None ) を 任意 の 呼び出し 可能 オブジェクト ( 通常 は ユーザ 定義 関数 ) と 結合 し ( combine ) ます 。 
クラス や インスタンス から 他 の ユーザ 定義 メソッド オブジェクト を 取得 する 方法 で ユーザ 定義 メソッド オブジェクト を 生成 し た 場合 、 その 動作 は 関数 オブジェクト の 場合 と 同様 です が 、 新た な インスタンス の im _ func 属性 は もと の メソッド オブジェクト の 属性 で は なく 、 新た な インスタンス の 属性 に なり ます 。 
クラス や インスタンス から クラスメソッドオブジェクト を 取得 する 方法 で ユーザ 定義 メソッド オブジェクト を 生成 し た 場合 、 im _ self 属性 は クラス 自体 ( im _ class 属性 と 同じ ) と なり 、 im _ func 属性 は クラス メソッド の 根底 に ある 関数 オブジェクト に なり ます 。 
場合 によって は 、 属性 を ローカル な 変数 に 代入 し て おき 、 その 変数 を 使っ て 関数 呼び出し を 行う と 効果 的 な 最適 化 に なり ます 。 また 、 上記 の 変換 は ユーザ 定義 関数 に対して のみ 起こる ので 注意 し て ください ; その他 の 呼び出し 可能 オブジェクト ( および 呼び出し 可能 で ない 全て の オブジェクト ) は 、 変換 を 受け ず に 取り出さ れ ます 。 
それから 、 クラス インスタンス の 属性 に なっ て いる ユーザ 定義 関数 は 、 結合 メソッド に 変換 でき ない と 知っ て おく こと も 重要 です ; 結合 メソッド へ の 変換 が 行わ れる の は 、 関数 が クラス の 一 属性 で ある 場合 だけ です 。 
ジェネレータ 関数 ( generator function ) 
yield 文 ( 6 . 8 節 、 `` yield 文 '' 参照 ) を 使う 関数 または メソッド は 、 ジェネレータ 関数 ( generator function ) と 呼ば れ ます 。 
この よう な 関数 は 、 呼び出さ れ た 際 に 、 常に イテレータオブジェクト を 返し ます 。 この イテレータオブジェクト は 関数 の 本体 を 実行 する ため に 用い られ ます : イテレータ の next () メソッド を 呼び出す と 、 yield 文 で 値 を 出力 する 処理 まで 関数 の 実行 が 行わ れ ます 。 
関数 が return 文 を 実行 する か 、 関数 を 最後 まで 実行 し 終える と 、 StopIteration 例外 が 送出 さ れ 、 イテレータ が 返す 値 の 集合 は そこ で 終わり ます 。 
組み込み 関数 ( built - in function ) 
組み込み 関数 オブジェクト は C 関数 へ の ラッパ です 。 
組み込み メソッド ( built - in method ) 
実際 に は 組み込み 関数 を 別 の 形 で 隠蔽 し た もの で 、 こちら の 場合 に は C 関数 に 渡さ れる 何らかの オブジェクト を 非 明示 的 な 外部 引数 として 持っ て い ます 。 
組み込み メソッド の 例 は 、 alist を リスト オブジェクト と し た とき の 
alist . append () です 。 この 場合 に は 、 読み出し 専用 の 属性 __ self __ は alist で 表さ れる オブジェクト に なり ます 。 
クラス 型 ( class type ) 
クラス 型 、 あるいは `` 新しい クラス 型 ( new - style class )'' や 呼び出し 可能 オブジェクト です 。 
クラス 型 オブジェクト は 通常 、 その クラス の 新た な インスタンス を 生成 する 際 の ファクトリ クラス として 振舞い ます が 、 __ new __() を オーバライド し て 、 バリエーション を 持た せる こと も でき ます 。 
呼び出し の 際 に 使わ れ た 引数 は __ new __() に 渡さ れ 、 さらに 典型 的 な 場合 で は 新た な インスタンス を 初期 化 する ため に __ init __() に 渡さ れ ます 。 
旧 クラス 型 ( classic class ) 
( 旧 ) クラス オブジェクト は 後で 詳しく 説明 し ます 。 
クラス オブジェクト が 呼び出さ れる と 、 新た に クラス インスタンス ( 後述 ) が 生成 さ れ 、 返さ れ ます 。 
この 操作 に は 、 クラス の __ init __() メソッド の 呼び出し ( 定義 さ れ て いる 場合 ) が 含ま れ て い ます 。 
呼び出し の 際 に 使わ れ た 引数 は 、 すべて __ init __() メソッド に 渡さ れ ます 。 
__ init __() メソッド が ない 場合 、 クラス は 引数 なし で 呼び出さ なけれ ば なり ませ ん 。 
クラス インスタンス ( class instance ) 
クラス インスタンス は 後で 詳しく 説明 し ます 。 
クラス インスタンス は クラス が __ call __() メソッド を 持っ て いる 場合 に のみ 呼び出す こと が でき ます ; x ( arguments ) と する と 、 x .__ call __( arguments ) 呼び出し を 短く 書け ます 。 
モジュール ( module ) 
モジュール は import 文 で import し ます ( 6 . 12 節 、 `` import 文 '' 参照 )。 
モジュール オブジェクト は 、 辞書 オブジェクト ( モジュール 内 で 定義 さ れ て いる 関数 が func _ globals 属性 で 参照 し て いる 辞書 です ) で 実装 さ れ た 名前 空間 を 持っ て い ます 。 
クラス 
要求 し て いる 属性 が 静的 メソッド オブジェクト の 場合 、 静的 メソッド オブジェクト で ラップ さ れ た オブジェクト に 変換 さ れ ます 。 
クラス から 取り出し た 属性 と 実際 に __ dict __ に 入っ て いる もの が 異なる よう な 他 の 場合 について は 、 3 . 3 . 2 節 を 参照 し て ください 。 
クラス 属性 を 代入 する と 、 その クラス の 辞書 だけ が 更新 さ れ 、 基底 クラス の 辞書 は 更新 し ませ ん 。 
クラス オブジェクト を 呼び出す ( 上記 を 参照 ) と 、 クラス インスタンス を 生成 し ます ( 下記 を 参照 )。 
特殊 属性 : __ name __ は クラス 名 です ;__ module __ は クラス が 定義 さ れ て いる モジュール の 名前 です ;__ dict __ は クラス の 名前 空間 が 入っ た 辞書 です ;__ bases __ は 基底 クラス の 入っ た ( 空 、 あるいは 単 要素 を 取り える ) タプル で 、 基底 クラス リスト の 順番 に なっ て い ます ; __ doc __ は クラス の ドキュメンテーション 文字 列 です 。 ドキュメンテーション 文字 列 が ない 場合 に は None に なり ます 。 
クラス インスタンス 
クラス インスタンス は クラス オブジェクト ( 上記 参照 ) を 呼び出し て 生成 し ます 。 
クラス インスタンス は 辞書 で 実装 さ れ た 名前 空間 を 持っ て おり 、 属性 参照 の 時 に は この 辞書 が 最初 に 検索 さ れ ます 。 
辞書 内 に 属性 が 見つから ず 、 かつ インスタンス の クラス に 該当 する 属性 名 が ある 場合 、 検索 は クラス 属性 に まで 広げ られ ます 。 見つかっ た クラス 属性 が ユーザ 定義 関数 オブジェクト や 、 インスタンス の クラス ( C と し ます ) や その 基底 クラス に 関連付け られ て いる 非 結合 の ユーザ 定義 メソッド オブジェクト の 場合 、 im _ class 属性 が C で im _ self 属性 が インスタンス に なっ て いる 結合 ユーザ 定義 メソッド オブジェクト に 変換 さ れ ます 。 
静的 メソッド や クラスメソッドオブジェクト も また 、 C から 取り出し た 場合 と 同様 に 変換 さ れ ます ; 上記 の `` クラス '' を 参照 し て ください 。 
クラス から 取り出し た 属性 と 実際 に __ dict __ に 入っ て いる もの が 異なる よう な 他 の 場合 について は 、 3 . 3 . 2 節 を 参照 し て ください 。 クラス 属性 が 見つから ず 、 かつ オブジェクト の クラス が __ getattr __() メソッド を 持っ て いる 場合 、 この メソッド を 呼び出し て 属性 名 の 検索 を 充足 さ せ ます 。 
属性 の 代入 や 削除 を 行う と 、 インスタンス の 辞書 を 更新 し ます が 、 クラス の 辞書 を 更新 する こと は あり ませ ん 。 
クラス で __ setattr __() や __ delattr __() メソッド が 定義 さ れ て いる 場合 、 直接 インスタンス の 辞書 を 更新 する 代わり に これら の メソッド が 呼び出さ れ ます 。 
クラス インスタンス は 、 ある 特定 の 名前 の メソッド を 持っ て いる 場合 、 数値 型 や シーケンス 型 、 あるいは マップ 型 の よう に 振舞う こと が でき ます 。 
3 . 3 節 、 `` 特殊 メソッド 名 '' を 参照 し て ください 。 
特殊 属性 : __ dict __ は 属性 の 辞書 です ;__ class __ は インスタンス の クラス です 。 ファイル ( file ) 
ファイル 
オブジェクト は 開か れ た ファイル を 表し ます 。 
ファイル オブジェクト は 組み込み 関数 open () 
や 、 os . popen (), os . fdopen (), および socke オブジェクト の makefile () 
メソッド ( その他 の 拡張 モジュール で 提供 さ れ て いる 関数 や メソッド ) で 生成 さ れ ます 。 
sys . stdin , sys . stdout および sys . stderr といった オブジェクト は 、 インタプリタ の 標準 入力 
ファイル オブジェクト に関する 完全 な 記述 について は 、 
インタプリタ が 内部 的 に 使っ て いる いくつ か の 型 は 、 ユーザ に 公開 さ れ て い ます 。 これら の 定義 は 将来 の インタプリタ の バージョン で は 変更 さ れる 可能 性 が あり ます が 、 ここ で は 記述 の 完全 性 の ため に 触れ て おき ます 。 
コード オブジェクト 
コード オブジェクト は バイト コンパイル さ れ た ( byte - compiled ) 実行 可能 な Python コード 、 別名 バイト コード ( bytecode ) を 表現 し ます 。 コード オブジェクト と 関数 オブジェクト の 違い は 、 関数 オブジェクト が 関数 の グローバル 変数 ( 関数 を 定義 し て いる モジュール の グローバル ) に対して 明示 的 な 参照 を 持っ て いる の に対し 、 コード オブジェクト に は コンテキスト が ない という こと です ; また 、 関数 オブジェクト で は デフォルト 引数 値 を 記憶 でき ます が 、 コード オブジェクト で は でき ませ ん ( 実行 時 に 計算 さ れる 値 を 表現 する ため )。 
関数 オブジェクト と 違い 、 コード オブジェクト は 変更 不可能 で 、 変更 可能 な オブジェクト へ の 参照 を ( 直接 、 間接 に 関わら ず ) 含み ませ ん 。 
読み出し 専用 の 特殊 属性 : co _ name は 関数 名 を 表し ます ; co _ argcount は 固定 引数 ( positional argument ) の 数 です ; co _ nlocals は 関数 が 使う ( 引数 を 含め た ) ローカル 変数 の 数 です ; co _ varnames は ローカル 変数 名 の 入っ た タプル です ( 引数 名 から 始まっ て い ます ); co _ cellvars は ネスト さ れ た 関数 で 参照 さ れ て いる ローカル 変数 の 名前 が 入っ た タプル です ; co _ freevars は 自由 変数 の 名前 が 入っ た タプル です 。 co _ code は バイト コード 列 を 表現 し て いる 文字 列 です ; co _ consts は バイト コード で 使わ れ て いる リテラル の 入っ た タプル です ; co _ names は バイト コード で 使わ れ て いる 名前 の 入っ た タプル です ; co _ filename は バイト コード の コンパイル が 行わ れ た ファイル 名 です ; co _ firstlineno は 関数 の 最初 の 行 番号 です ; co _ lnotab は バイトコードオフセット から 行 番号 へ の 対応 付け を コード 化 し た 文字 列 です ( 詳細 について は インタプリタ の ソース コード を 参照 し て ください ); co _ stacksize は 関数 で ( ローカル 変数 の 分 も 含め て ) 必要 な スタック サイズ です ; co _ flags は インタプリタ 用 の 様々 な フラグ を コード 化 し た 整数 です 。 
以下 の フラグ ビット が co _ flags で 定義 さ れ て い ます : 0 x 04 ビット は 、 関数 が "* arguments " 構文 を 使っ て 任意 の 数 の 固定 引数 を 受理 できる 場合 に 立て られ ます ; 0 x 08 ビット は 、 関数 が "** keywords " 構文 を 使っ て キーワード 引数 を 受理 できる 場合 に 立て られ ます ; 0 x 20 ビット は 、 関数 が ジェネレータ で ある 場合 に 立て られ ます 。 
将来 機能 ( future feature ) 宣言 (" from __ future __ import division ") も また 、 co _ flags の ビット を 立てる こと で 、 コード オブジェクト が 特定 の 機能 を 有効 に し て コンパイル さ れ て いる こと を 示し ます : 0 x 2000 ビット は 、 関数 が 将来 機能 を 有効 に し て コンパイル さ れ て いる 場合 に 立て られ ます ; 以前 の バージョン の Python で は 、 0 x 10 および 0 x 1000 ビット が 使わ れ て い まし た 。 co _ flags の その他 の ビット は 将来 に 内部 的 に 利用 する ため に 予約 さ れ て い ます 。 
フレーム ( frame ) オブジェクト 
フレーム オブジェクト は 実行 フレーム ( execution frame ) を 表し ます 。 
実行 フレーム は トレースバックオブジェクト 内 に 出現 し ます ( 下記 参照 )。 
読み出し 専用 の 特殊 属性 : f _ back は ( 呼び出し 側 にとって の ) 以前 の スタック フレーム です 。 呼び出し 側 が スタック フレーム の 最 下段 で ある 場合 に は None です ; f _ code は 現在 の フレーム で 実行 しよ う と し て いる コード オブジェクト です ; f _ locals は ローカル 変数 を 検索 する ため に 使わ れる 辞書 です ; f _ globals は グローバル 変数 用 です ; f _ builtins は 組み込み の ( Python 固有 の ) 名前 です ; f _ restricted は 、 関数 が 制限 つき 実行 ( restricted execution ) モード で 実行 さ れ て いる か どう か を 示す フラグ です ; f _ lasti は 厳密 な 命令 コード ( コード オブジェクト 中 の バイト コード 文字 列 へ の インデクス ) です 。 
書き込み 可能 な 特殊 属性 : f _ trace が None で ない 場合 、 各 ソース コード 行 の 先頭 で 呼び出さ れる 関数 に なり ます ; f _ exc _ type , f _ exc _ value , f _ exc _ traceback は 、 現在 の フレーム で もっとも 最近 捕捉 さ れ た 例外 を 表し ます ; f _ lineno は フレーム 中 における 現在 の 行 番号 です -- トレース 関数 ( trace function ) 側 で この 値 に 書き込み を 行う と 、 指定 し た 行 に ジャンプ し ます ( 最 下段 の 実行 フレーム に いる とき のみ ) 。 
デバッガ で は 、 f _ fileno を 書き込む こと で 、 ジャンプ 命令 ( Set Next Statement 命令 と も 呼ば れ ます ) を 実装 でき ます 。 
トレース バック ( traceback ) オブジェクト 
トレースバックオブジェクト は 例外 の スタック トレース を 表現 し ます 。 
トレースバックオブジェクト は 例外 が 発生 し た 際 に 生成 さ れ ます 。 
例外 ハンドラ を 検索 し て 実行 スタック を 戻っ て いく 際 、 戻っ た レベル 毎 に 、 トレースバックオブジェクト が 現在 の トレース バック の 前 に 挿入 さ れ ます 。 
例外 ハンドラ に 入る と 、 スタック トレース を プログラム 側 で 利用 できる よう に なり ます ( 7 . 4 節 `` try 文 '' を 参照 )。 
トレース バック は sys . exc _ traceback と し て 得る こと が でき 、 sys . exc _ info () が 返す タプル の 三 番目 の 要素 として も 得 られ ます . インタフェース として は 後者 の 方 が 推奨 さ れ て い ます が 、 これ は プログラム が マルチスレッド を 使っ て いる 場合 に 正しく 動作 する から です 。 プログラム に 適切 な ハンドラ が ない 場合 、 スタック トレース は ( うまく 書式 化 さ れ て ) 標準 エラー ストリーム に 書き出さ れ ます ; インタプリタ が 対話 的 に 実行 さ れ て いる 場合 、 sys . last _ traceback と し て 得る こと も でき ます 。 
読み出し 専用 の 特殊 属性 : tb _ next は スタック トレース 内 の ( 例外 の 発生 し て いる フレーム に 向かっ て ) 次 の レベル です 。 次 の レベル が 存在 し ない 場合 に は None に なり ます ; tb _ frame は 現在 の レベル における 実行 フレーム を 指し ます ; tb _ lineno は 例外 の 発生 し た 行 番号 です ; tb _ lasti は 厳密 な 命令 コード です 。 
トレース バック 内 の 行 番号 や 最後 に 実行 さ れ た 命令 は 、 try 文 内 で 例外 が 発生 し 、 かつ 対応 する except 節 や finally 節 が ない 場合 に は 、 フレーム オブジェクト 内 の 行 番号 と は 異なる かも しれ ませ ん 。 
スライス ( slice ) オブジェクト 
スライス オブジェクト は 拡張 スライス 構文 ( extended slice syntax ) が 使わ れ た 際 に スライス を 表現 する ため に 使わ れ ます 。 
拡張 スライス 構文 と は 、 二つ の コロン や 、 コンマ で 区切ら れ た 複数 の スライス や 省略 符号 ( ellipse ) を 使っ た スライス で 、 例えば a [ i : j : step ] 、 a [ i : j , k : l ] 、 あるいは a [..., i : j ] です 。 スライス オブジェクト は 組み込み 関数 slice () 
で 生成 さ れ ます 。 
読み出し 専用 の 特殊 属性 : start は 下 境界 ( lower bound ) です ; stop は 上 境界 ( upper bound ) です ; step は ステップ 値 ( step value ) です ; それぞれ 省略 さ れ て いる 場合 に は None に なり ます 。 
これら の 属性 は 任意 の 型 の 値 を とる こと が でき ます 。 
スライス オブジェクト は メソッド を 一つ サポート し ます : 
この メソッド は 単一 の 整数 引数 length を 取り 、 length 個 の 要素 から なる シーケンス に 適用 し た 際 に スライス オブジェクト から 提供 する こと に なる 、 拡張 スライス に関する 情報 を 計算 し ます 。 
静的 メソッド ( static method ) オブジェクト 
静的 メソッド は 、 上 で 説明 し た よう な 関数 オブジェクト から メソッド オブジェクト へ の 変換 を 阻止 する ため の 方法 を 提供 し ます 。 
静的 メソッド オブジェクト は 他 の 何らかの オブジェクト 、 通常 は ユーザ 定義 メソッド オブジェクト を 包む ラッパ です 。 
静的 メソッド を クラス や クラス インスタンス から 取得 する と 、 実際 に 返さ れる オブジェクト は ラップ さ れ た オブジェクト に なり 、 それ 以上 は 変換 の 対象 に は なり ませ ん 。 
静的 メソッド オブジェクト は 通常 呼び出し 可能 な オブジェクト を ラップ し ます が 、 静的 オブジェクト 自体 は 呼び出す こと が でき ませ ん 。 
静的 オブジェクト は 組み込み コンス トラクタ staticmethod () で 生成 さ れ ます 。 
クラスメソッドオブジェクト 
クラスメソッドオブジェクト は 、 静的 メソッド オブジェクト に 似 て 、 別 の オブジェクト を 包む ラッパ で あり 、 その オブジェクト を クラス や クラス インスタンス から 取り出す 方法 を 代替 し ます 。 
この よう に し て 取得 し た クラスメソッドオブジェクト の 動作 について は 、 上 の `` ユーザ 定義 メソッド ( user - defined method )'' で 説明 さ れ て い ます 。 
クラスメソッドオブジェクト は 組み込み の コンス トラクタ classmethod () で 生成 さ れ ます 。 
この 文書 について ... 
この ドキュメント は 、 
LaTeX 2 HTML 変換 ツール を 使っ て 生成 さ れ て い ます 。 
A .. 2 翻訳 者 一覧 
1 . はじめ に 
1 . はじめ に 
2 . 1 組み込み 関数 
2 . 2 非 必須 組み込み 関数 ( Non - essential Built - in Functions ) 
2 . 4 組み込み 例外 
2 . 5 組み込み 定数 
3 . Python ラン タイム サービス 
3 . 1 sys -- システム パラメータ と 関数 
3 . 2 gc -- ガベージコレクタ インターフェース 
3 . 3 weakref -- 弱 参照 
3 . 3 . 3 拡張 型 における 弱 参照 
3 . 4 fpectl -- 浮動 小数点 例外 の 制御 
3 . 4 . 1 例 
3 . 4 . 2 制限 と 他 に 考慮 す べき こと 
3 . 5 atexit -- 終了 ハンドラ 
3 . 5 . 1 atexit 例 
3 . 6 types -- 組み込み 型 の 名前 
3 . 7 UserDict -- 辞書 オブジェクト の ため の クラスラッパー 
3 . 8 UserList -- リスト オブジェクト の ため の クラスラッパー 
3 . 9 UserString -- 文字 列 オブジェクト の ため の クラスラッパー 
3 . 10 operator -- 関数 形式 の 標準 演算 子 
3 . 10 . 1 演算 子 から 関数 へ の 対応 表 
3 . 11 inspect -- 使用 中 オブジェクト の 情報 を 取得 する 
3 . 11 . 1 型 と メンバ 
3 . 11 . 2 ソース 参照 
3 . 11 . 3 クラス と 関数 
3 . 11 . 4 インタープリタ スタック 
3 . 12 traceback -- スタック トレース の 表示 や 取り出し 
3 . 12 . 1 トレース バック の 例 
3 . 13 linecache -- テキスト ライン に ランダムアクセス する 
3 . 14 pickle -- Python オブジェクト の 整列 化 
3 . 14 . 1 他 の Python モジュール と の 関係 
3 . 14 . 2 データ ストリーム の 形式 
3 . 14 . 3 使用 法 
3 . 14 . 4 何 を pickle 化 し たり unpickle 化 できる の か ? 
3 . 14 . 5 pickle 化 プロトコル 
3 . 14 . 6 Unpickler を サブ クラス 化 する 
3 . 14 . 7 例 
3 . 15 cPickle -- より 高速 な pickle 
3 . 16 copy _ reg -- pickle サポート 関数 を 登録 する 
3 . 17 shelve -- Python オブジェクト の 永続 化 
3 . 17 . 1 制限 事項 
3 . 17 . 2 使用 例 
3 . 18 copy -- 浅い コピー および 深い コピー 操作 
3 . 19 marshal -- 内部 使用 向け の Python オブジェクト 整列 化 
3 . 20 warnings -- 警告 の 制御 
3 . 20 . 1 警告 カテゴリ 
3 . 20 . 2 警告 フィルタ 
3 . 20 . 3 利用 可能 な 関数 
3 . 21 imp -- import 内部 へ アクセス する 
3 . 21 . 1 例 
3 . 22 pkgutil -- パッケージ 拡張 ユーティリティ 
3 . 23 code -- インタプリタ 基底 クラス 
3 . 23 . 1 対話 的 な インタプリタ オブジェクト 
3 . 23 . 2 対話 的 な コンソール オブジェクト 
3 . 24 codeop -- Python コード を コンパイル する 
3 . 25 pprint -- データ 出力 の 整然 化 
3 . 25 . 1 PrettyPrinter オブジェクト 
3 . 26 repr -- もう 一つ の repr () の 実装 
3 . 26 . 1 Repr オブジェクト 
3 . 26 . 2 Repr オブジェクト を サブ クラス 化 する 
3 . 27 new -- ラン タイム 内部 オブジェクト の 作成 
3 . 28 site -- サイト 固有 の 設定 フック 
3 . 29 user -- ユーザー 設定 の フック 
3 . 30 __ builtin __ -- 組み込み 関数 
3 . 31 __ main __ -- トップ レベル の スクリプト 環境 
3 . 32 __ future __ -- Future ステートメント の 定義 
4 . 文字 列 処理 
4 . 1 string -- 一般 的 な 文字 列 操作 
4 . 1 . 2 テンプレート 文字 列 
4 . 1 . 3 文字 列 操作 関数 
4 . 1 . 4 撤廃 さ れ た 文字 列 関数 
4 . 2 re -- 正規 表現 操作 
4 . 2 . 1 正規 表現 の シンタクス 
4 . 2 . 2 マッチング vs 検索 
4 . 2 . 3 モジュール コンテンツ 
4 . 2 . 4 正規 表現 オブジェクト 
4 . 2 . 5 MatchObject オブジェクト 
4 . 2 . 6 例 
4 . 3 struct -- 文字 列 データ を パック さ れ た バイナリ データ として 解釈 する 
4 . 4 difflib -- 差異 の 計算 を 助ける 
4 . 4 . 1 SequenceMatcher オブジェクト 
4 . 4 . 2 SequenceMatcher の 例 
4 . 4 . 3 Differ オブジェクト 
4 . 4 . 4 Differ の 例 
4 . 5 fpformat -- 浮動 小数点 の 変換 
4 . 6 StringIO -- ファイル の よう に 文字 列 を 読み書き する 
4 . 7 cStringIO -- 高速 化 さ れ た StringIO 
4 . 8 textwrap -- テキスト の 折り返し と 詰め込み 
4 . 9 codecs -- codec レジストリ と 基底 クラス 
4 . 9 . 1 Codec 基底 クラス 
4 . 9 . 2 標準 エン コーディング 
4 . 9 . 3 encodings . idna -- アプリケーション における 国際 化 ドメイン 名 ( IDNA ) 
4 . 10 unicodedata -- Unicode データベース 
4 . 11 stringprep -- インターネット の ため の 文字 列 調製 
5 . 各種 サービス 
5 . 1 pydoc -- ドキュメント 生成 と オンラインヘルプシステム 
5 . 2 doctest -- 対話 モード を 使っ た 使用 例 の 内容 を テスト する 
5 . 2 . 1 簡単 な 利用 法 : docstring 中 の 例題 を チェック する 
5 . 2 . 2 簡単 な 利用 法 : テキストファイル 中 の 例題 を チェック する 
5 . 2 . 7 基本 API 
5 . 2 . 8 単位 テスト API 
5 . 2 . 9 拡張 API 
5 . 2 . 10 デバッグ 
5 . 2 . 11 提言 5 . 2 . 12 進ん だ 使い方 
5 . 3 unittest -- 単体テスト フレーム ワーク 
5 . 3 . 1 基礎 的 な 例 
5 . 3 . 2 テスト の 構成 
5 . 3 . 3 既存 テスト コード の 再 利用 
5 . 3 . 4 クラス と 関数 
5 . 3 . 5 TestCase オブジェクト 
5 . 3 . 6 TestSuite オブジェクト 
5 . 3 . 7 TestResult オブジェクト 
5 . 3 . 8 TestLoader オブジェクト 
5 . 4 test -- Python 用 回帰 テスト パッケージ 
5 . 4 . 1 test パッケージ の ため の ユニット テスト を 書く 
5 . 4 . 2 test . regrtest を 使っ て テスト を 実行 する 
5 . 4 . 3 test . test _ support -- テスト の ため の ユーティリティ 関数 
5 . 5 decimal -- 10 進 浮動 小数点 数 の 算術 演算 
5 . 5 . 2 Decimal オブジェクト 
5 . 5 . 3 Context オブジェクト 
5 . 5 . 4 シグナル 
5 . 5 . 5 浮動 小数点 数 に関する 注意 
5 . 5 . 6 スレッド を 使っ た 処理 
5 . 5 . 7 レシピ 
5 . 6 math -- 数学 関数 
5 . 7 cmath -- 複素数 の ため の 数学 関数 
5 . 8 random -- 擬似 乱数 を 生成 する 
5 . 9 whrandom -- 擬似 乱数 生成 器 
5 . 10 bisect -- 配列 二 分 法 アルゴリズム 
5 . 10 . 1 使用 例 
5 . 11 collections -- 高性能 な コンテナ ・ データ 型 
5 . 11 . 1 レシピ 
5 . 12 heapq -- ヒープキューアルゴリズム 
5 . 12 . 1 理論 
5 . 13 array -- 効率 の よい 数値 アレイ 
5 . 14 sets -- ユニーク な 要素 の 順序 なし コレクション 
5 . 14 . 1 Set オブジェクト 
5 . 14 . 2 使用 例 
5 . 14 . 3 不変 に 自動 変換 する ため の プロトコル 
5 . 15 itertools -- 効率 的 な ループ 実行 の ため の イテレータ 生成 関数 
5 . 15 . 1 Itertool 関数 
5 . 15 . 2 例 
5 . 15 . 3 レシピ 
5 . 16 ConfigParser -- 設定 ファイル の 構文 解析 器 
5 . 16 . 1 RawConfigParser オブジェクト 
5 . 16 . 2 ConfigParser オブジェクト 
5 . 16 . 3 SafeConfigParser オブジェクト 
5 . 17 fileinput -- 複数 の 入力 ストリーム を またい だ 行 の 繰り返し 処理 を サポート する 。 
5 . 18 calendar -- 一般 的 な カレンダー に関する 関数 群 
5 . 19 cmd -- 行 指向 の コマンド インタープリタ の サポート 
5 . 19 . 1 Cmd オブジェクト 
5 . 20 shlex -- 単純 な 字句 解析 
5 . 20 . 1 モジュール の 内容 5 . 20 . 2 shlex オブジェクト 
5 . 20 . 3 解析 規則 
6 . 汎用 オペレーティングシステム サービス 
6 . 1 os -- 雑多 な オペレーティングシステム インタフェース 
6 . 1 . 1 プロセス の パラメタ 
6 . 1 . 2 ファイル オブジェクト の 生成 
6 . 1 . 3 ファイル 記述 子 の 操作 
6 . 1 . 4 ファイル と ディレクトリ 
6 . 1 . 5 プロセス 管理 
6 . 1 . 6 雑多 な システム 情報 
6 . 1 . 7 雑多 な 関数 
6 . 2 os . path -- 共通 の パス 名 操作 
6 . 3 dircache -- キャッシュ さ れ た ディレクトリ 一覧 の 生成 
6 . 4 stat -- stat () の 返す 内容 を 解釈 する 
6 . 5 statcache -- os . stat () の 最適 化 
6 . 6 statvfs -- os . statvfs () で 使わ れる 定数 群 
6 . 7 filecmp -- ファイル および ディレクトリ の 比較 
6 . 7 . 1 dircmp クラス 
6 . 8 subprocess -- サブ プロセス 管理 
6 . 8 . 1 subprocess モジュール を 使う 
6 . 8 . 2 Popen オブジェクト 
6 . 8 . 3 古い 関数 を subprocess モジュール で 置き換える 
6 . 9 popen 2 -- アクセス 可能 な I / O ストリーム を 持つ 子 プロセス 生成 
6 . 9 . 1 Popen 3 および Popen 4 オブジェクト 
6 . 9 . 2 フロー 制御 の 問題 
6 . 10 datetime -- 基本 的 な 日付 型 および 時間 型 
6 . 10 . 1 利用 可能 な データ 型 
6 . 10 . 2 timedelta オブジェクト 
6 . 10 . 3 date オブジェクト 
6 . 10 . 4 datetime オブジェクト 
6 . 10 . 5 time オブジェクト 
6 . 10 . 6 tzinfo オブジェクト 
6 . 10 . 7 strftime () の 振る舞い 
6 . 11 time -- 時刻 データ へ の アクセス と 変換 
6 . 12 sched -- イベントスケジューラ 
6 . 12 . 1 スケジューラオブジェクト 
6 . 13 mutex -- 排他 制御 
6 . 13 . 1 mutex オブジェクト 
6 . 14 getpass -- 可 搬性 の ある パスワード 入力 機構 
6 . 15 curses -- 文字 セル 表示 の ため の 端末 操作 
6 . 15 . 1 関数 
6 . 15 . 2 Window オブジェクト 
6 . 15 . 3 定数 
6 . 16 curses . textpad -- curses プログラム の ため の テキスト 入力 ウィジェット 
6 . 16 . 1 Textbox オブジェクト 
6 . 17 curses . wrapper -- curses プログラム の ため の 端末 ハンドラ 
6 . 19 curses . panel -- curses の ため の パネル スタック 拡張 
6 . 19 . 1 関数 
6 . 19 . 2 Panel オブジェクト 
6 . 20 getopt -- コマンドラインオプション の パーザ 
6 . 21 optparse -- より 強力 な コマンドラインオプション 解析 器 
6 . 21 . 3 リファレンス ガイド 
6 . 21 . 4 オプション 処理 コール バック 
6 . 22 tempfile -- 一 時 的 な ファイル や ディレクトリ の 生成 
6 . 23 errno -- 標準 の errno システム シンボル 
6 . 24 glob -- Unix 形式 の パス 名 の パターン 展開 
6 . 25 fnmatch -- Unix ファイル 名 の パターン マッチ 
6 . 26 shutil -- 高 レベル な ファイル 操作 
6 . 26 . 1 使用 例 
6 . 27 locale -- 国際 化 サービス 
6 . 27 . 1 ロ ケール の 背景 、 詳細 、 ヒント 、 助言 および 補足 説明 
6 . 27 . 2 Python 拡張 の 作者 と 、 Python を 埋め込む よう な プログラム に関して 
6 . 27 . 3 メッセージ カタログ へ の アクセス 
6 . 28 gettext -- 多言 語 対応 に関する 国際 化 サービス 
6 . 28 . 2 クラス に 基づい た API 
6 . 28 . 3 プログラム や モジュール を 国際 化 する 
6 . 28 . 4 謝辞 
6 . 29 logging -- Python 用 ロギング 機能 
6 . 29 . 1 Logger オブジェクト 
6 . 29 . 2 基本 的 な 使い方 
6 . 29 . 3 複数 の 出力 先 に ログ を 出力 する 
6 . 29 . 4 ログ イベント を ネットワーク 越し に 送受信 する 
6 . 29 . 5 Handler オブジェクト 
6 . 29 . 6 Formatter オブジェクト 
6 . 29 . 7 Filter オブジェクト 
6 . 29 . 8 LogRecord オブジェクト 
6 . 29 . 9 スレッド 安全 性 
6 . 29 . 10 環境 設定 
6 . 30 platform -- 実行 中 プラットフォーム の 固有 情報 を 参照 する 
6 . 30 . 1 クロス プラットフォーム 
6 . 30 . 2 Java プラットフォーム 
6 . 30 . 3 Windows プラットフォーム 
6 . 30 . 4 Mac OS プラットフォーム 
6 . 30 . 5 Unix プラットフォーム 
7 . オプション の オペレーティングシステム サービス 
7 . 1 signal -- 非同期 イベント に ハンドラ を 設定 する 
7 . 1 . 1 例 
7 . 2 socket -- 低 レベルネットワークインターフェース 
7 . 2 . 1 socket オブジェクト 
7 . 2 . 2 SSL オブジェクト 
7 . 2 . 3 例 
7 . 3 select -- I / O 処理 の 完了 を 待機 する 
7 . 3 . 1 ポーリング オブジェクト 
7 . 4 thread -- マルチスレッド の コントロール 
7 . 5 threading -- 高水準 の スレッドインタフェース 
7 . 5 . 1 Lock オブジェクト 
7 . 5 . 2 RLock オブジェクト 
7 . 5 . 3 Condition オブジェクト 
7 . 5 . 4 Semaphore オブジェクト 
7 . 5 . 5 Event オブジェクト 
7 . 5 . 6 Thread オブジェクト 
7 . 5 . 7 Timer オブジェクト 
7 . 6 dummy _ thread -- thread の 代替 モジュール 
7 . 7 dummy _ threading -- threading の 代替 モジュール 
7 . 8 Queue -- 同期 キュー クラス 
7 . 8 . 1 キュー オブジェクト 
7 . 9 mmap -- メモリマップファイル 
7 . 10 anydbm -- DBM 形式 の データベース へ の 汎用 アクセス インタフェース 
7 . 11 dbhash -- BSD データベース ライブラリ へ の DBM 形式 の インタフェース 
7 . 11 . 1 データベース オブジェクト 
7 . 12 whichdb -- どの DBM モジュール が データベース を 作っ た か を 推測 する 
7 . 13 bsddb -- Berkeley DB ライブラリ へ の インタフェース 
7 . 13 . 1 ハッシュ 、 BTree 、 および レコード オブジェクト 
7 . 14 dumbdbm -- 可 搬性 の ある DBM 実装 
7 . 14 . 1 Dumbdbm オブジェクト 
7 . 15 zlib -- gzip 互換 の 圧縮 
7 . 16 gzip -- gzip ファイル の サポート 
7 . 17 bz 2 -- bzip 2 互換 の 圧縮 ライブラリ 
7 . 17 . 1 ファイル の 圧縮 ( 解凍 ) 
7 . 17 . 2 逐次 的 な 圧縮 ( 解凍 ) 
7 . 17 . 3 一括 圧縮 ( 解凍 ) 
7 . 18 zipfile -- ZIP アーカイブ の 処理 
7 . 18 . 1 ZipFile オブジェクト 
7 . 18 . 2 PyZipFile オブジェクト 
7 . 18 . 3 ZipInfo オブジェクト 
7 . 19 tarfile -- tar アーカイブ ファイル を 読み書き する 
7 . 19 . 1 TarFile オブジェクト 
7 . 19 . 2 TarInfo オブジェクト 
7 . 19 . 3 例 
7 . 20 readline -- GNU readline の インタフェース 
7 . 20 . 1 例 
7 . 21 rlcompleter -- GNU readline 向け 補完 関数 
7 . 21 . 1 Completer オブジェクト 
8 . Unix 独特 の サービス 
8 . 1 posix -- 最も 一般 的 な POSIX システム コール 群 
8 . 1 . 1 ラージファイル の サポート 
8 . 1 . 2 モジュール の 内容 
8 . 2 pwd -- パスワード データベース へ の アクセス を 提供 する 
8 . 3 grp -- グループ データベース へ の アクセス 
8 . 4 crypt -- Unix パスワード を チェック する ため の 関数 
8 . 5 dl -- 共有 オブジェクト の C 関数 の 呼び出し 
8 . 5 . 1 Dl オブジェクト 
8 . 6 dbm -- UNIX dbm の シンプル な インタフェース 
8 . 7 gdbm -- GNU による dbm の 再 実装 
8 . 8 termios -- POSIX スタイル の 端末 制御 
8 . 8 . 1 使用 例 
8 . 9 tty -- 端末 制御 の ため の 関数 群 
8 . 10 pty -- 擬似 端末 ユーティリティ 
8 . 11 fcntl -- fcntl () および ioctl () システム コール 
8 . 12 pipes -- シェル パイプライン へ の インタフェース 
8 . 12 . 1 テンプレート オブジェクト 
8 . 13 posixfile -- ロック 機構 を サポート する ファイル 類似 オブジェクト 
8 . 14 resource -- リソース 使用 状態 の 情報 
8 . 14 . 1 リソース の 制限 
8 . 14 . 2 リソース の 使用 状態 
8 . 15 nis -- Sun の NIS ( Yellow Pages ) へ の インタフェース 
8 . 16 syslog -- Unix syslog ライブラリ ルーチン 群 
8 . 17 commands -- コマンド 実行 ユーティリティ 
9 . Python デバッガ 
9 . 1 デバッガ コマンド 
9 . 2 どの よう に 動作 し て いる か 
10 . Python プロファイラ 
10 . 1 プロファイラ と は 
10 . 2 旧 バージョン の プロファイラ と の 違い 
10 . 3 インスタント ・ ユーザ ・ マニュアル 
10 . 4 決定 論 的 プロ ファイリング と は 何 か ? 
10 . 5 リファレンス ・ マニュアル 
10 . 5 . 1 Stats クラス 
10 . 6 制限 事項 
10 . 7 キャリブレーション ( 補正 ) 
10 . 8 拡張 -- プロファイラ の 改善 
10 . 9 hotshot -- ハイパフォーマンス・ロギング・プロファイラ 
10 . 9 . 1 プロファイル ・ オブジェクト 
10 . 9 . 2 hotshot データ の 利用 
10 . 9 . 3 使用 例 
10 . 10 timeit -- 小さな コード 断片 の 実行 時間 計測 
10 . 10 . 1 コマンド ライン ・ インターフェース 
10 . 10 . 2 使用 例 
11 . インターネット プロトコル と その 支援 
11 . 1 webbrowser -- 便利 な ウェブブラウザコントローラー 
11 . 1 . 1 ブラウザコントローラーオブジェクト 
11 . 2 cgi -- CGI ( ゲートウェイインタフェース 規格 ) の サポート 
11 . 2 . 1 はじめ に 
11 . 2 . 2 cgi モジュール を 使う 
11 . 2 . 3 高水準 インタフェース 
11 . 2 . 4 古い クラス 群 
11 . 2 . 5 関数 
11 . 2 . 6 セキュリティ へ の 配慮 
11 . 2 . 7 CGI スクリプト を Unix システム に インストール する 
11 . 2 . 8 CGI スクリプト を テスト する 
11 . 2 . 9 CGI スクリプト を デバッグ する 
11 . 2 . 10 よく ある 問題 と 解決 法 
11 . 3 cgitb -- CGI スクリプト の トレース バック 管理 機構 
11 . 4 urllib -- URL による 任意 の リソース へ の アクセス 
11 . 4 . 1 URLopener オブジェクト 
11 . 4 . 2 使用 例 
11 . 5 urllib 2 -- URL を 開く ため の 拡張 可能 な ライブラリ 
11 . 5 . 1 Request オブジェクト 
11 . 5 . 2 OpenerDirector オブジェクト 
11 . 5 . 3 BaseHandler オブジェクト 
11 . 5 . 4 HTTPRedirectHandler オブジェクト 
11 . 5 . 5 HTTPCookieProcessor オブジェクト 
11 . 5 . 6 ProxyHandler オブジェクト 
11 . 5 . 7 HTTPPasswordMgr オブジェクト 
11 . 5 . 8 AbstractBasicAuthHandler オブジェクト 
11 . 5 . 9 HTTPBasicAuthHandler オブジェクト 
11 . 5 . 10 ProxyBasicAuthHandler オブジェクト 
11 . 5 . 11 AbstractDigestAuthHandler オブジェクト 
11 . 5 . 12 HTTPDigestAuthHandler オブジェクト 
11 . 5 . 13 ProxyDigestAuthHandler オブジェクト 
11 . 5 . 14 HTTPHandler オブジェクト 
11 . 5 . 15 HTTPSHandler オブジェクト 
11 . 5 . 16 FileHandler オブジェクト 
11 . 5 . 17 FTPHandler オブジェクト 
11 . 5 . 18 CacheFTPHandler オブジェクト 
11 . 5 . 19 GopherHandler オブジェクト 
11 . 5 . 20 UnknownHandler オブジェクト 
11 . 5 . 21 HTTPErrorProcessor オブジェクト 
11 . 5 . 22 例 
11 . 6 httplib -- HTTP プロトコルクライアント 
11 . 6 . 1 HTTPConnection オブジェクト 
11 . 6 . 2 HTTPResponse オブジェクト 
11 . 6 . 3 例 
11 . 7 ftplib -- FTP プロトコルクライアント 
11 . 7 . 1 FTP オブジェクト 
11 . 8 gopherlib -- gopher プロトコル の クライアント 
11 . 9 poplib -- POP 3 プロトコルクライアント 
11 . 9 . 1 POP 3 オブジェクト 
11 . 9 . 2 POP 3 の 例 
11 . 10 imaplib -- IMAP 4 プロトコルクライアント 
11 . 10 . 1 IMAP 4 オブジェクト 
11 . 10 . 2 IMAP 4 の 使用 例 
11 . 11 nntplib -- NNTP プロトコルクライアント 
11 . 11 . 1 NNTP オブジェクト 
11 . 12 smtplib -- SMTP プロトコル クライアント 
11 . 12 . 1 SMTP オブジェクト 
11 . 12 . 2 SMTP 使用 例 
11 . 13 smtpd -- SMTP サーバ 
11 . 13 . 1 SMTPServer オブジェクト 
11 . 13 . 2 DebuggingServer オブジェクト 
11 . 13 . 3 PureProxy オブジェクト 
11 . 14 telnetlib -- Telnet クライアント 
11 . 14 . 1 Telnet オブジェクト 
11 . 15 urlparse -- URL を 解析 し て 構成 要素 に する 
11 . 16 SocketServer -- ネットワーク サーバ 構築 の ため の フレーム ワーク 
11 . 17 BaseHTTPServer -- 基本 的 な 機能 を 持つ HTTP サーバ 
11 . 18 SimpleHTTPServer -- 簡潔 な HTTP リクエスト ハンドラ 
11 . 19 CGIHTTPServer -- CGI 実行 機能 付き HTTP リクエスト 処理 機構 
11 . 20 cookielib -- HTTP クライアント 用 の Cookie 処理 
11 . 20 . 1 CookieJar および FileCookieJar オブジェクト 
11 . 20 . 2 FileCookieJar の サブ クラス と web ブラウザ と の 連携 
11 . 20 . 3 CookiePolicy オブジェクト 
11 . 20 . 4 DefaultCookiePolicy オブジェクト 
11 . 20 . 5 Cookie オブジェクト 
11 . 20 . 6 使用 例 
11 . 21 Cookie -- HTTP の 状態 管理 
11 . 21 . 1 Cookie オブジェクト 
11 . 21 . 2 Morsel オブジェクト 
11 . 21 . 3 例 
11 . 22 xmlrpclib -- XML - RPC クライアントアクセス 
11 . 22 . 1 ServerProxy オブジェクト 
11 . 22 . 5 Fault オブジェクト 
11 . 22 . 6 ProtocolError オブジェクト 
11 . 22 . 7 MultiCall オブジェクト 
11 . 22 . 8 補助 関数 
11 . 22 . 9 クライアント の サンプル 
11 . 23 SimpleXMLRPCServer -- 基本 的 な XML - RPC サーバー 
11 . 23 . 1 SimpleXMLRPCServer オブジェクト 
11 . 24 DocXMLRPCServer -- セルフ - ドキュメンティング XML - RPC サーバ 
11 . 24 . 1 DocXMLRPCServer オブジェクト 
11 . 25 asyncore -- 非同期 ソケット ハンドラ 
11 . 25 . 1 asyncore の 例 : 簡単 な HTTP クライアント 
11 . 26 asynchat -- 非同期 ソケット コマンド / レスポンス ハンドラ 
11 . 26 . 1 asynchat - 補助 クラス と 関数 
11 . 26 . 2 asynchat 使用 例 
12 . インターネット 上 の データ の 操作 
12 . 1 formatter -- 汎用 の 出力 書式 化 機構 
12 . 1 . 1 formatter インタフェース 
12 . 1 . 2 formatter 実装 
12 . 1 . 3 writer インタフェース 
12 . 1 . 4 writer 実装 
12 . 2 email -- 電子 メール と MIME 処理 の ため の パッケージ 
12 . 2 . 1 電子 メール メッセージ の 表現 
12 . 2 . 2 電子 メール メッセージ を 解析 ( パース ) する 
12 . 2 . 3 MIME 文書 を 生成 する 
12 . 2 . 4 電子 メール および MIME オブジェクト を ゼロ から 作成 する 
12 . 2 . 5 国際 化 さ れ た ヘッダ 
12 . 2 . 6 文字 セット の 表現 
12 . 2 . 7 エンコーダ 
12 . 2 . 8 例外 および 障害 クラス 
12 . 2 . 9 雑用 ユーティリティ 
12 . 2 . 10 イテレータ 
12 . 2 . 11 パッケージ の 履歴 
12 . 2 . 12 mimelib と の 違い 
12 . 2 . 13 使用 例 
12 . 3 mailcap -- mailcap ファイル の 操作 
12 . 4 mailbox -- 様々 な メールボックス 形式 の 読み出し 
12 . 4 . 1 Mailbox オブジェクト 
12 . 5 mhlib -- MH の メイル ボックス へ の アクセス 機構 
12 . 5 . 1 MH オブジェクト 
12 . 5 . 2 Folder オブジェクト 
12 . 5 . 3 Message オブジェクト 
12 . 6 mimetools -- MIME メッセージ を 解析 する ため の ツール 
12 . 6 . 1 Message オブジェクト の 追加 メソッド 
12 . 7 mimetypes -- ファイル 名 を MIME 型 へ マップ する 
12 . 7 . 1 Mime 型 オブジェクト 
12 . 8 MimeWriter -- 汎用 MIME ファイル ライター 
12 . 8 . 1 MimeWriter オブジェクト 
12 . 9 mimify -- 電子 メイル メッセージ の MIME 処理 
12 . 10 multifile -- 個別 の 部分 を 含ん だ ファイル 群 の サポート 
12 . 10 . 1 MultiFile オブジェクト 
12 . 10 . 2 MultiFile の 例 
12 . 11 rfc 822 -- RFC 2822 準拠 の メイル ヘッダ 読み出し 
12 . 11 . 1 Message オブジェクト 
12 . 11 . 2 AddressList オブジェクト 
12 . 12 base 64 -- RFC 3548 : Base 16 , Base 32 , Base 64 テータ の 符号 化 
12 . 13 binascii -- バイナリ データ と ASCII データ と の 間 で の 変換 
12 . 14 binhex -- binhex 4 形式 ファイル の エン コード および デコード 
12 . 14 . 1 注記 
12 . 15 quopri -- MIME quoted - printable 形式 データ の エン コード および デコード 
12 . 16 uu -- uuencode 形式 の エン コード と デコード 
12 . 17 xdrlib -- XDR データ の エン コード および デコード 
12 . 17 . 1 Packer オブジェクト 
12 . 17 . 2 Unpacker オブジェクト 
12 . 17 . 3 例外 
12 . 18 netrc -- netrc ファイル の 処理 
12 . 18 . 1 netrc オブジェクト 
12 . 19 robotparser -- robots . txt の ため の パーザ 
12 . 20 csv -- CSV ファイル の 読み書き 
12 . 20 . 1 モジュール の 内容 
12 . 20 . 2 Dialect クラス と 書式 化 パラメタ 
12 . 20 . 3 reader オブジェクト 
12 . 20 . 4 writer オブジェクト 
12 . 20 . 5 使用 例 
13 . 構造 化 マークアップツール 
13 . 1 HTMLParser -- HTML および XHTML の シンプル な パーザ 
13 . 1 . 1 HTML パーザ アプリケーション の 例 
13 . 2 sgmllib -- 単純 な SGML パーザ 
13 . 3 htmllib -- HTML 文書 の 解析 器 
13 . 3 . 1 HTMLParser オブジェクト 
13 . 4 htmlentitydefs -- HTML 一般 エンティティ の 定義 
13 . 5 xml . parsers . expat -- Expat を 使っ た 高速 な XML 解析 
13 . 5 . 2 ExpatError 例外 
13 . 5 . 3 例 
13 . 5 . 4 内容 モデル の 記述 
13 . 5 . 5 Expat エラー 定数 
13 . 6 xml . dom -- 文書 オブジェクト モデル ( DOM ) API 
13 . 6 . 1 モジュール の 内容 
13 . 6 . 2 DOM 内 の オブジェクト 
13 . 6 . 3 適合 性 
13 . 7 xml . dom . minidom -- 軽量 な DOM 実装 
13 . 7 . 1 DOM オブジェクト 
13 . 7 . 2 DOM の 例 
13 . 7 . 3 minidom と DOM 標準 
13 . 8 xml . dom . pulldom -- 部分 的 な DOM ツリー 構築 の サポート 
13 . 8 . 1 DOMEventStream オブジェクト 
13 . 9 xml . sax -- SAX 2 パーサ の サポート 
13 . 9 . 1 SAXException オブジェクト 
13 . 10 xml . sax . handler -- SAX ハンドラ の 基底 クラス 
13 . 10 . 1 ContentHandler オブジェクト 
13 . 10 . 2 DTDHandler オブジェクト 
13 . 10 . 3 EntityResolver オブジェクト 
13 . 10 . 4 ErrorHandler オブジェクト 
13 . 11 xml . sax . saxutils -- SAX ユーティリティ 
13 . 12 xml . sax . xmlreader -- XML パーサ の インターフェース 
13 . 12 . 1 XMLReader オブジェクト 
13 . 12 . 2 IncrementalParser オブジェクト 
13 . 12 . 3 Locator オブジェクト 
13 . 12 . 4 InputSource オブジェクト 
13 . 12 . 5 The Attributes インターフェース 
13 . 12 . 6 AttributesNS インターフェース 
13 . 13 xmllib -- XML ドキュメント の パーサ 
13 . 13 . 1 XML 名前 空間 
14 . マルチメディア サービス 
14 . 1 audioop -- 生 の 音声 データ を 操作 する 
14 . 2 imageop -- 生 の 画像 データ を 操作 する 
14 . 3 aifc -- AIFF および AIFC ファイル の 読み書き 
14 . 4 sunau -- Sun AU ファイル の 読み書き 
14 . 4 . 1 AU _ read オブジェクト 
14 . 4 . 2 AU _ write オブジェクト 
14 . 5 wave -- WAV ファイル の 読み書き 
14 . 5 . 1 Wave _ read オブジェクト 
14 . 5 . 2 Wave _ write オブジェクト 
14 . 6 chunk -- IFF チャンクデータ の 読み込み 
14 . 7 colorsys -- 色 体系 間 の 変換 
14 . 8 rgbimg -- `` SGI RGB '' ファイル を 読み書き する 
14 . 9 imghdr -- 画像 の 形式 を 決定 する 
14 . 10 sndhdr -- サウンド ファイル の 識別 
14 . 11 ossaudiodev -- OSS 互換 オーディオ デバイス へ の アクセス 
14 . 11 . 1 オーディオデバイスオブジェクト 
14 . 11 . 2 ミキサデバイスオブジェクト 
15 . 暗号 関連 の サービス 
15 . 1 hmac -- メッセージ 認証 の ため の 鍵 付き ハッシュ 化 
15 . 2 md 5 -- MD 5 メッセージダイジェストアルゴリズム 
15 . 3 sha -- SHA - 1 メッセージダイジェストアルゴリズム 
16 . Tk を 用い た グラフィカルユーザインターフェイス 
16 . 1 Tkinter -- Tcl / Tk へ の Python インタフェース 
16 . 1 . 1 Tkinter モジュール 
16 . 1 . 2 Tkinter お 助け 手帳 ( life preserver ) 
16 . 1 . 3 Tcl / Tk を ( 本当に 少し だけ ) 見渡し て みる 
16 . 1 . 4 基本 的 な Tk プログラム と Tkinter と の 対応 関係 
16 . 1 . 5 Tk と Tkinter は どの よう に 関わっ て いる の か 
16 . 1 . 6 簡単 な リファレンス 
16 . 2 Tix -- Tk の 拡張 ウィジェット 
16 . 2 . 1 Tix を 使う 
16 . 2 . 2 Tix ウィジェット 
16 . 2 . 3 Tix コマンド 
16 . 3 ScrolledText -- スクロール する テキストウィジェット 
16 . 4 turtle -- Tk の ため の タートル グラフィックス 
16 . 4 . 1 Pen と RawPen オブジェクト 
16 . 5 . 1 メニュー 
16 . 5 . 2 基本 的 な 編集 と ナビゲーション 
16 . 5 . 3 構文 の 色づけ 
16 . 6 他 の グラフィカルユーザインタフェースパッケージ 
17 . 制限 実行 ( restricted execution ) 
17 . 1 rexec -- 制限 実行 の フレーム ワーク 
17 . 1 . 1 RExec オブジェクト 
17 . 1 . 2 制限 さ れ た 環境 を 定義 する 
17 . 1 . 3 例 
17 . 2 Bastion -- オブジェクト に対する アクセス の 制限 
18 . Python 言語 サービス 
18 . 1 parser -- Python 解析 木 に アクセス する 
18 . 1 . 1 AST オブジェクト を 作成 する 
18 . 1 . 2 AST オブジェクト を 変換 する 
18 . 1 . 3 AST オブジェクト に対する 問い合わせ 
18 . 1 . 4 例外 と エラー 処理 
18 . 1 . 5 AST オブジェクト 
18 . 1 . 6 例 
18 . 2 symbol -- Python 解析 木 と共に 使わ れる 定数 
18 . 3 token -- Python 解析 木 と共に 使わ れる 定数 
18 . 4 keyword -- Python キーワード チェック 
18 . 5 tokenize -- Python ソース の ため の トークナイザ 
18 . 6 tabnanny -- あいまい な インデント の 検出 
18 . 7 pyclbr -- Python クラス ブラウザー サポート 
18 . 7 . 1 クラス 記述 オブジェクト 
18 . 7 . 2 関数 記述 オブジェクト ( Function Descriptor Object ) 
18 . 8 py _ compile -- Python ソース ファイル の コンパイル 
18 . 9 compileall -- Python ライブラリ を バイト コンパイル 
18 . 10 dis -- Python バイト コード の 逆 アセンブラ 
18 . 10 . 1 Python バイト コード 命令 
18 . 11 distutils -- Python モジュール の 構築 と インストール 
19 . Python コンパイラ パッケージ 
19 . 1 基本 的 な インター フェイス 
19 . 2 制限 
19 . 3 Python 抽象 構文 
19 . 3 . 1 AST ノード 
19 . 3 . 2 代入 ノード 
19 . 3 . 3 サンプル 
19 . 4 Visitor を 使っ て AST を わたり 歩く 
19 . 5 バイト コード 生成 
20 . SGI IRIX 特有 の サービス 
20 . 1 al -- SGI の オーディオ 機能 
20 . 1 . 1 コンフィギュレーションオブジェクト 
20 . 1 . 2 ポート オブジェクト 
20 . 2 AL -- al モジュール で 使わ れる 定数 
20 . 3 cd -- SGI システム の CD - ROM へ の アクセス 
20 . 3 . 1 プレーヤー オブジェクト 
20 . 3 . 2 パーザ オブジェクト 
20 . 4 fl -- グラフィカルユーザーインターフェース の ため の FORMS ライブラリ 
20 . 4 . 1 fl モジュール に 定義 さ れ て いる 関数 
20 . 4 . 2 フォーム オブジェクト 
20 . 4 . 3 FORMS オブジェクト 
20 . 5 FL -- fl モジュール で 使用 さ れる 定数 
20 . 6 flp -- 保存 さ れ た FORMS デザイン を ロード する 関数 
20 . 7 fm -- Font Manager インターフェース 
20 . 8 gl -- Graphics Library インターフェース 
20 . 9 DEVICE -- gl モジュール で 使わ れる 定数 
20 . 10 GL -- gl モジュール で 使わ れる 定数 
20 . 11 imgfile -- SGI imglib ファイル の サポート 
20 . 12 jpeg -- JPEG ファイル の 読み書き を 行う 
21 . SunOS 特有 の サービス 
21 . 1 sunaudiodev -- Sun オーディオ ハードウェア へ の アクセス 
21 . 1 . 1 オーディオデバイスオブジェクト 
21 . 2 SUNAUDIODEV -- sunaudiodev で 使わ れる 定数 
22 . MS Windows 特有 の サービス 
22 . 1 msvcrt - MS VC ++ 実行 時 システム の 有用 な ルーチン 群 
22 . 1 . 1 ファイル 操作 関連 
22 . 1 . 2 コンソール I / O 関連 
22 . 1 . 3 その 多 の 関数 
22 . 2 _ winreg - Windows レジストリ へ の アクセス 
22 . 2 . 1 レジストリハンドルオブジェクト 
22 . 3 winsound -- Windows 用 の 音声 再生 インタフェース 
A . ドキュメント 化 さ れ て い ない モジュール 
A . 1 フレーム ワーク 
A . 2 雑多 な 有用 ユーティリティ 
A . 3 プラットフォーム 特有 の モジュール 
A . 4 マルチメディア 関連 
A . 5 撤廃 さ れ た もの 
A . 6 SGI 特有 の 拡張 モジュール 
B . バグ 報告 
Python ライブラリ リファレンス 
1 . はじめ に 
リリース 2 . 4 , 平成 18 年 6 月 27 日 更新 ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
この ライブラリリファレンスマニュアル で は 、 Macintosh 用 の Python 拡張 に関して 詳しく 記述 し ます 。 
Python の 肩 のこら ない 入門 編 が 必要 なら 、 
を 読ん で ください 。 
は 、 構文 や 意味 論 に関する 疑問 を 解決 する ため 、 それなり に 分かっ た 人 が 読む べき もの です 。 
最後 に ひとつ 。 
インタプリタ の 拡張 と 組み込み Extending and Embedding the Python Interpreter 
という 名 の マニュアル で は 、 Python へ 新た に 拡張 機能 を 追加 する 方法 と 、 他 の アプリケーション に 組み込む 方法 について 述べ て い ます 。 
AEServer ( MiniAEFrame 、 ホ・ッ・ 鬣 ケ ) 
AEText ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Boolean ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Comparison ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
ComponentItem ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Enum ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
IC ( ic 、 ホ・ッ・ 鬣 ケ ) 
InsertionLoc ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
IntlText ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
IntlWritingCode ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Keyword ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Logical ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
MiniApplication ( MiniAEFrame 、 ホ・ッ・ 鬣 ケ ) 
NProperty ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
ObjectSpecifier ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Ordinal ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
QDPoint ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
QDRectangle ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Range ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
RGBColor ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
StyledText ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
TalkTo ( aetools 、 ホ・ッ・ 鬣 ケ ) 
Type ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
Unknown ( aetypes 、 ホ・ッ・ 鬣 ケ ) 
_ quit () ( Application 、 ホ ・ 皈 ス・テ・ノ ) 
_ start () ( TalkTo 、 ホ ・ 皈 ス・テ・ノ ) 
aetools ( standard モジュール ) 
aetypes ( standard モジュール ) 
applesingle ( standard モジュール ) 
Application () ( FrameWork モジュール ) 
as _ pathname () ( FSSpec の メソッド ) 
as _ tuple () ( FSSpec の メソッド ) 
AskFileForOpen () ( EasyDialogs モジュール ) 
AskFileForSave () ( EasyDialogs モジュール ) 
AskFolder () ( EasyDialogs モジュール ) 
AskPassword () ( EasyDialogs モジュール ) 
AskString () ( EasyDialogs モジュール ) 
AskYesNoCancel () ( EasyDialogs モジュール ) 
asyncevents () ( Application の メソッド ) 
autoGIL ( extension モジュール ) 
BUFSIZ ( macostools モジュール ) 
buildtools ( standard モジュール ) 
callback () ( AEServer の メソッド ) 
Carbon . AE ( standard モジュール ) 
Carbon . AH ( standard モジュール ) 
Carbon . App ( standard モジュール ) 
Carbon . CaronEvt ( standard モジュール ) 
Carbon . CF ( standard モジュール ) 
Carbon . CG ( standard モジュール ) 
Carbon . Cm ( standard モジュール ) 
Carbon . Ctl ( standard モジュール ) 
Carbon . Dlg ( standard モジュール ) 
Carbon . Evt ( standard モジュール ) 
Carbon . Fm ( standard モジュール ) 
Carbon . Folder ( standard モジュール ) 
Carbon . Help ( standard モジュール ) 
Carbon . List ( standard モジュール ) 
Carbon . Menu ( standard モジュール ) 
Carbon . Mlte ( standard モジュール ) 
Carbon . Qd ( 組み込み モジュール ) 
Carbon . Qdoffs ( 組み込み モジュール ) 
Carbon . Qt ( standard モジュール ) 
Carbon . Res ( standard モジュール ) 
Carbon . Scrap ( standard モジュール ) 
Carbon . Snd ( standard モジュール ) 
Carbon . TE ( standard モジュール ) 
Carbon . Win ( standard モジュール ) 
cfmfile ( standard モジュール ) 
close () ( Window の メソッド ) 
ColorPicker ( extension モジュール ) 
copy () ( macostools モジュール ) 
copytree () ( macostools モジュール ) 
Creator ( FInfo の 属性 ) 
curval ( ProgressBar の 属性 ) 
data ( Alias の 属性 ) 
data ( FSSpec の 属性 ) 
DebugStr () ( MacOS モジュール ) 
DialogWindow () ( FrameWork モジュール ) 
distutils ( モジュール ) 
do _ activate () ( IC の メソッド ) 
do _ activate () ( ScrolledWindow の メソッド ) 
do _ char () ( Application の メソッド ) 
do _ contentclick () ( Window の メソッド ) 
do _ controlhit () ( ControlsWindow の メソッド ) 
do _ controlhit () ( ScrolledWindow の メソッド ) 
do _ dialogevent () ( Application の メソッド ) 
do _ itemhit () ( DialogWindow の メソッド ) 
do _ postresize () ( ScrolledWindow の メソッド ) 
do _ postresize () ( Window の メソッド ) 
do _ update () ( Window の メソッド ) 
EasyDialogs ( standard モジュール ) 
FindApplication () ( macfs モジュール ) 
findertools ( standard モジュール ) 
FindFolder () ( macfs モジュール ) 
FInfo () ( macfs モジュール ) 
Flags ( FInfo の 属性 ) 
Fldr ( FInfo の 属性 ) 
FrameWork ( standard モジュール ) FrameWork ( 標準 モジュール ) 
FSSpec () ( macfs モジュール ) 
gensuitemodule ( standard モジュール ) 
getabouttext () ( Application の メソッド ) 
GetArgv () ( EasyDialogs モジュール ) 
GetColor () ( ColorPicker モジュール ) 
GetCreatorAndType () ( MacOS モジュール ) 
GetCreatorType () ( FSSpec の メソッド ) 
GetDates () ( FSSpec の メソッド ) 
GetDirectory () ( macfs モジュール ) 
GetErrorString () ( MacOS モジュール ) 
GetFInfo () ( FSSpec の メソッド ) 
GetInfo () ( Alias の メソッド ) 
getscrollbarvalues () ( ScrolledWindow の メソッド ) 
GetTicks () ( MacOS モジュール ) 
HandleEvent () ( MacOS モジュール ) 
ic ( 組み込み モジュール ) 
icglue ( 組み込み モジュール ) 
icopen ( standard モジュール ) 
idle () ( Application の メソッド ) 
inc () ( ProgressBar の メソッド ) 
installaehandler () ( AEServer の メソッド ) 
installAutoGIL () ( autoGIL モジュール ) 
keysubst () ( aetools モジュール ) 
label () ( ProgressBar の メソッド ) 
launch () ( findertools モジュール ) 
launchurl () ( IC の メソッド ) 
launchurl () ( ic モジュール ) 
linkmodel ( MacOS モジュール ) 
Location ( FInfo の 属性 ) 
mac ( 組み込み モジュール ) 
macerrors ( standard モジュール ) macerrors ( 標準 モジュール ) 
macfs ( standard モジュール ) 
MacOS ( 組み込み モジュール ) 
macostools ( standard モジュール ) 
macpath ( standard モジュール ) 
macresource ( standard モジュール ) 
mainloop () ( Application の メソッド ) 
makeusermenus () ( Application の メソッド ) 
mapfile () ( IC の メソッド ) 
mapfile () ( ic モジュール ) 
maptypecreator () ( IC の メソッド ) 
maptypecreator () ( ic モジュール ) 
maxval ( ProgressBar の 属性 ) 
Menu () ( FrameWork モジュール ) 
MenuBar () ( FrameWork モジュール ) 
MenuItem () ( FrameWork モジュール ) 
Message () ( EasyDialogs モジュール ) 
MiniAEFrame ( standard モジュール ) 
mkalias () ( macostools モジュール ) 
mkcwproject ( standard モジュール ) 
move () ( findertools モジュール ) 
Nav ( standard モジュール ) 
NewAlias () ( FSSpec の メソッド ) 
NewAliasMinimal () ( FSSpec の メソッド ) 
N e wAliasMinimalFromFullPath () ( macfs モジュール ) 
nsremote ( standard モジュール ) 
open () ( DialogWindow の メソッド ) 
open () ( Window の メソッド ) 
openrf () ( MacOS モジュール ) 
os ( 標準 モジュール ) 
os . path ( 標準 モジュール ) 
pack () ( aepack モジュール ) 
packevent () ( aetools モジュール ) 
parseurl () ( IC の メソッド ) 
parseurl () ( ic モジュール ) 
PixMapWrapper ( standard モジュール ) 
preferences ( standard モジュール ) 
Print () ( findertools モジュール ) 
processfile () ( gensuitemodule モジュール ) 
processfile _ fromresource () ( gensuitemodule モジュール ) 
ProgressBar () ( EasyDialogs モジュール ) 
PromptGetFile () ( macfs モジュール ) 
py _ resource ( standard モジュール ) 
PYTHONPATH ( 環境 変数 ) 
pythonprefs ( standard モジュール ) 
quietconsole ( standard モジュール ) 
RawAlias () ( macfs モジュール ) 
RawFSSpec () ( macfs モジュール ) 
Resolve () ( Alias の メソッド ) 
ResolveAliasFile () ( macfs モジュール ) 
restart () ( findertools モジュール ) 
runtimemodel ( MacOS モジュール ) 
scalebarvalues () ( ScrolledWindow の メソッド ) 
SchedParams () ( MacOS モジュール ) 
scrollbar _ callback () ( ScrolledWindow の メソッド ) 
scrollbars () ( ScrolledWindow の メソッド ) 
send () ( TalkTo の メソッド ) 
Separator () ( FrameWork モジュール ) 
set () ( ProgressBar の メソッド ) 
setarrowcursor () ( FrameWork モジュール ) 
SetCreatorAndType () ( MacOS モジュール ) 
SetCreatorType () ( FSSpec の メソッド ) 
SetDates () ( FSSpec の メソッド ) 
SetEventHandler () ( MacOS モジュール ) 
SetFInfo () ( FSSpec の メソッド ) 
SetFolder () ( macfs モジュール ) 
settypecreator () ( IC の メソッド ) 
settypecreator () ( ic モジュール ) 
setwatchcursor () ( FrameWork モジュール ) 
shutdown () ( findertools モジュール ) 
sleep () ( findertools モジュール ) 
splash () ( MacOS モジュール ) 
StandardGetFile () ( macfs モジュール ) 
StandardPutFile () ( macfs モジュール ) 
SubMenu () ( FrameWork モジュール ) 
SysBeep () ( MacOS モジュール ) 
title () ( ProgressBar の メソッド ) 
touched () ( macostools モジュール ) 
Type ( FInfo の 属性 ) 
unpack () ( aepack モジュール ) 
unpackevent () ( aetools モジュール ) 
Update () ( Alias の メソッド ) 
updatescrollbars () ( ScrolledWindow の メソッド ) 
videoreader ( standard モジュール ) 
W ( standard モジュール ) 
waste ( standard モジュール ) 
Window () ( FrameWork モジュール ) 
windowbounds () ( FrameWork モジュール ) 
1 . C や C ++ による Python の 拡張 
1 . 1 簡単 な 例 
1 . C や C ++ による Python の 拡張 
グローバルモジュールインデクス 
モジュール 名 の 後ろ に ある 注釈 は 、 利用 できる プラットフォーム を 表し て い ます 。 
ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
C . 3 差分 翻訳 者 一覧 ( 敬称 略 ) 
1 . Mac OS 9 で Python を 利用 する 
1 . 1 MacPython - OSX の 取得 と インストール 
1 . 1 . 1 Python スクリプト の 実行 方法 
1 . 1 . 2 GUI つき の スクリプト の 実行 
1 . 1 . 3 設定 
1 . 2 MacPython - OS 9 の 取得 と インストール 
1 . 2 . 1 対話 型 インタプリタ を 使う 
1 . 2 . 2 Python スクリプト の 走ら せ 方 
1 . 2 . 3 コマンド ライン 引数 を シミュレート する 
1 . 2 . 4 Python スクリプト を 作成 する 
1 . 3 統合 開発 環境 
1 . 3 . 1 `` Python Interactive '' ウィンドウ を 使う 
1 . 3 . 2 Python スクリプト を 書く 
1 . 3 . 3 統合 開発 環境 の 中 から スクリプト を 実行 する 
1 . 3 . 4 `` Save as '' と `` Save as Applet '' の 違い 
2 . MacPython モジュール 
2 . 1 mac -- os モジュール の 実装 
2 . 2 macpath -- MacOS の パス 操作 関数 
2 . 3 macfs -- 様々 な ファイル システム 関連 の サービス 
2 . 3 . 1 FSSpec オブジェクト 
2 . 3 . 2 エイリアスオブジェクト 
2 . 3 . 3 FInfo オブジェクト 
2 . 4 ic -- インターネット 設定 へ の アクセス 
2 . 4 . 1 IC オブジェクト 
2 . 5 MacOS -- Mac OS インタプリタ 機能 へ の アクセス 
2 . 6 macostools -- ファイル 操作 を 便利 に する ルーチン 集 
2 . 7 findertools -- finder の Apple Events インターフェース 
2 . 8 EasyDialogs -- 基本 的 な Macintosh ダイアログ 
2 . 8 . 1 プログレスバーオブジェクト 
2 . 9 FrameWork -- 対話 型 アプリケーション ・ フレーム ワーク 
2 . 9 . 1 アプリケーション オブジェクト 
2 . 9 . 2 ウィンドウ オブジェクト 
2 . 9 . 3 コントロールウィンドウオブジェクト 
2 . 9 . 4 スクロールウィンドウオブジェクト 
2 . 9 . 5 ダイアログウィンドウオブジェクト 
2 . 10 autoGIL -- イベント ループ 中 の グローバル インタープリタ の 取り扱い 
3 . MacPython OSA モジュール 
3 . 1 gensuitemodule -- OSA スタプ 作成 パッケージ 
3 . 2 aetools -- OSA クライアント の サポート 
3 . 3 aepack -- Python 変数 と AppleEvent データ コンテナ 間 の 変換 
3 . 4 aetypes -- AppleEvent オブジェクト 
3 . 5 MiniAEFrame -- オープンスクリプティングアーキテクチャサーバ の サポート 
3 . 5 . 1 AEServer オブジェクト 
4 . MacOS ツールボックスモジュール 
4 . 2 Carbon . AH -- Apple ヘルプ 
4 . 3 Carbon . App -- アピアランスマネージャ 
4 . 25 ColorPicker -- 色 選択 ダイアログ 
5 . 文書 化 さ れ て い ない モジュール 
5 . 1 applesingle -- AppleSingle デコーダー 
5 . 2 buildtools -- BuildApplet と その 仲間 の ヘルパー モジュール 
5 . 3 py _ resource -- Python コード から の リソース 生成 
5 . 4 cfmfile -- コードフラグメントリソース を 扱う モジュール 
5 . 5 icopen -- open () と Internet Config の 置き換え 
5 . 6 macerrors -- MacOS の エラー 
5 . 7 macresource -- スクリプト の リソース を 見つける 
5 . 8 Nav -- NavServices の 呼出し 
5 . 9 mkcwproject -- CodeWarrior プロジェクト の 作成 
5 . 10 nsremote -- Netscape OSA モジュール の ラッパー 
5 . 11 PixMapWrapper -- PixMap オブジェクト の ラッパー 
5 . 12 preferences -- アプリケーション 初期 設定 管理 プログラム 
5 . 13 pythonprefs -- Python の 初期 設定 管理 プログラム 
5 . 14 quietconsole -- 不可視 の 標準 出力 
5 . 15 videoreader -- QuickTime ムービー の 読み込み 
5 . 16 W -- FrameWork 上 に 作ら れ た ウイ ジェット 
5 . 17 waste -- Apple 製 で は ない TextEdit の 置き換え 
A . 歴史 と ライセンス 
A . 1 Python の 歴史 
Macintosh モジュール リファレンス 
Python は インタプリタ 形式 の 、 オブジェクト 指向 な 高 レベル プログラミング 言語 で 、 動的 な セマンティクス を 持っ て い ます 。 
Python の 高 レベル な 組み込み データ 構造 は 、 動的 な 型付け 機能 や 動的 な 結合 機能 と 組み合わせる こと で 、 迅速 な アプリケーション 開発 や 既存 の ソフトウェア コンポーネント 間 を つなぐ スクリプト 言語 、 または 糊 ( glue ) 言語 として Python を 魅力 的 な 存在 に し て い ます 。 
Python は 単純 で 学び やすい 文法 な ので 、 可読性 が 高まり 、 プログラム の メンテナンス に かかる コスト を 低減 し ます 。 
Python は 、 プログラム の モジュール 化 や 再 利用 を 助ける モジュール と パッケージ を サポート し ます 。 
Python インタプリタ と 多数 の 標準 ライブラリ は 、 ほとんど の プラットフォーム で ソース コード 形式 で も バイナリ 形式 で も 無料 で 入手 する こと が でき 、 無料 で 配布 する こと が でき ます 。 この リファレンス マニュアル で は 、 Python 言語 の 文法 と 、 `` コア と なる セマンティクス '' について 記述 し ます 。 
この マニュアル は そっけ ない 書き方 かも しれ ませ ん が 、 的確 かつ 完璧 な 記述 を 目指し て い ます 。 必須 で ない 組み込み オブジェクト 型 や 組み込み 関数 、 組み込み モジュール に関する セマンティクス は 、 
で 述べ られ て い ます 。 
形式 ばら ない Python 言語 入門 に は 、 
C 言語 あるいは C ++ プログラマ 向け に は 、 この マニュアル と は 別に 二つ の マニュアル が あり ます : 
Python インタプリタ の 拡張 と 埋め込み 
では 、 Python 拡張 モジュール を 書く ため の 高 レベル な 様式 について 述べ て い ます 。 また 、 
Python / C API リファレンス マニュアル 
では 、 C / C ++ プログラマ が 利用 できる インタフェース について 詳細 に 記述 し て い ます 。 
・ 
__ abs __() ( numeric object 、 ホ ・ 皈 ス・テ・ノ ) 
__ add __() ( numeric object 、 ホ ・ 皈 ス・テ・ノ ) 
__ and __() ( numeric object 、 ホ ・ 皈 ス・テ・ノ ) 
__ builtin __ ( チネ 、 ゜ ケ モジュール ),[ Link ] 
__ call __() ( object の メソッド ) 
__ coerce __() ( numeric object の メソッド ) 
__ complex __() ( numeric object の メソッド ) 
__ contains __() ( container object の メソッド ) 
__ del __() ( object の メソッド ) 
__ delattr __() ( object の メソッド ) 
__ delete __() ( object の メソッド ) 
__ delitem __() ( container object の メソッド ) 
__ delslice __() ( sequence object の メソッド ) 
__ div __() ( numeric object の メソッド ) 
__ divmod __() ( numeric object の メソッド ) 
__ eq __() ( object の メソッド ) 
__ float __() ( numeric object の メソッド ) 
__ floordiv __() ( numeric object の メソッド ) 
__ ge __() ( object の メソッド ) 
__ get __() ( object の メソッド ) 
__ getattr __() ( object の メソッド ) 
__ getattribute __() ( object の メソッド ) 
__ getitem __() ( container object の メソッド ) 
__ getslice __() ( sequence object の メソッド ) 
__ gt __() ( object の メソッド ) 
__ hash __() ( object の メソッド ) 
__ hex __() ( numeric object の メソッド ) 
__ iadd __() ( numeric object の メソッド ) 
__ iand __() ( numeric object の メソッド ) 
__ idiv __() ( numeric object の メソッド ) 
__ ifloordiv __() ( numeric object の メソッド ) 
__ ilshift __() ( numeric object の メソッド ) 
__ imod __() ( numeric object の メソッド ) 
__ import __() ( 組み込み 関数 ) 
__ imul __() ( numeric object の メソッド ) 
__ init __() ( object の メソッド ) __ init __. py 
__ int __() ( numeric object の メソッド ) 
__ invert __() ( numeric object の メソッド ) 
__ ior __() ( numeric object の メソッド ) 
__ ipow __() ( numeric object の メソッド ) 
__ irshift __() ( numeric object の メソッド ) 
__ isub __() ( numeric object の メソッド ) 
__ iter __() ( container object の メソッド ) 
__ itruediv __() ( numeric object の メソッド ) 
__ ixor __() ( numeric object の メソッド ) 
__ le __() ( object の メソッド ) 
__ len __() ( container object の メソッド ) 
__ long __() ( numeric object の メソッド ) 
__ lshift __() ( numeric object の メソッド ) 
__ lt __() ( object の メソッド ) 
__ main __ ( 組み込み モジュール ),[ Link ],[ Link ] 
__ mod __() ( numeric object の メソッド ) 
__ mul __() ( numeric object の メソッド ) 
__ ne __() ( object の メソッド ) 
__ neg __() ( numeric object の メソッド ) 
__ oct __() ( numeric object の メソッド ) 
__ or __() ( numeric object の メソッド ) 
__ pos __() ( numeric object の メソッド ) 
__ pow __() ( numeric object の メソッド ) 
__ radd __() ( numeric object の メソッド ) 
__ rand __() ( numeric object の メソッド ) 
__ rcmp __() ( object の メソッド ) 
__ rdiv __() ( numeric object の メソッド ) 
__ rdivmod __() ( numeric object の メソッド ) 
__ repr __() ( object の メソッド ) 
__ rfloordiv __() ( numeric object の メソッド ) 
__ rlshift __() ( numeric object の メソッド ) 
__ rmod __() ( numeric object の メソッド ) 
__ rmul __() ( numeric object の メソッド ) 
__ ror __() ( numeric object の メソッド ) 
__ rpow __() ( numeric object の メソッド ) 
__ rrshift __() ( numeric object の メソッド ) 
__ rshift __() ( numeric object の メソッド ) 
__ rsub __() ( numeric object の メソッド ) 
__ rtruediv __() ( numeric object の メソッド ) 
__ rxor __() ( numeric object の メソッド ) 
__ set __() ( object の メソッド ) 
__ setattr __() ( object method ) __ setattr __() ( object の メソッド ) 
__ setitem __() ( container object の メソッド ) 
__ setslice __() ( sequence object の メソッド ) 
__ str __() ( object の メソッド ) 
__ sub __() ( numeric object の メソッド ) 
__ truediv __() ( numeric object の メソッド ) 
__ unicode __() ( object の メソッド ) 
__ xor __() ( numeric object の メソッド ) 
abs () ( 組み込み 関数 ) 
array ( 標準 モジュール ) 
bsddb ( 標準 モジュール ) 
chr () ( 組み込み 関数 ),[ Link ] 
cmp () ( 組み込み 関数 ) 
compile () ( 組み込み 関数 ) 
complex () ( 組み込み 関数 ) 
divmod () ( 組み込み 関数 ),[ Link ] 
キーワード 
キーワード ,[ Link ],[ Link ],[ Link ],[ Link ] 
eval () ( 組み込み 関数 ),[ Link ],[ Link ] 
execfile () ( 組み込み 関数 ) 
キーワード ,[ Link ],[ Link ],[ Link ] 
float () ( 組み込み 関数 ) 
キーワード ,[ Link ] 
gdbm ( 標準 モジュール ) 
globals () ( 組み込み 関数 ) 
hex () ( 組み込み 関数 ) 
id () ( 組み込み 関数 ) 
indices () ( slice の メソッド ) 
input () ( 組み込み 関数 ) 
int () ( 組み込み 関数 ) 
len () ( 組み込み 関数 ),[ Link ],[ Link ] 
locals () ( 組み込み 関数 ) 
long () ( 組み込み 関数 ) 
oct () ( 組み込み 関数 ) 
open () ( 組み込み 関数 ) 
ord () ( 組み込み 関数 ),[ Link ],[ Link ] 
pow () ( 組み込み 関数 ),[ Link ],[ Link ],[ Link ] 
range () ( 組み込み 関数 ) 
raw _ input () ( 組み込み 関数 ) 
repr () ( 組み込み 関数 ),[ Link ],[ Link ] 
slice () ( 組み込み 関数 ) 
str () ( 組み込み 関数 ),[ Link ] 
sys ( 組み込み モジュール ),[ Link ],[ Link ],[ Link ] 
type () ( 組み込み 関数 ) 
unichr () ( 組み込み 関数 ) 
unicode () ( 組み込み 関数 ),[ Link ] 
except ・ ュ 。 
Python 2 . 4 ドキュメント - June 27 , 2006 
Python ドキュメント 
チュートリアル 
( ここ から 読み 始め て ください ) 
Python 更新 情報 ( 英語 ) 
( 一つ 前 の メジャー リリース から の 変更 ) 
( 全 ドキュメント に すばやく アクセス でき ます ) ライブラリ リファレンス 
( 枕 の 下 に いつも 置い て おき ましょ う ) Macintosh モジュール リファレンス 
( Macintosh を 使っ て いる なら これ も ) Python モジュール の インストール 
( 管理 者 向け ) Python モジュール の 配布 
( 開発 者 , パッケージ 作成 者 向け ) 
リファレンス マニュアル 
( 弁 語 士 向け ) 拡張 と 埋め込み 
( C / C ++ プログラマ 向け チュートリアル ) Python / C API 
( C / C ++ プログラマ 向け リファレンス ) Python ドキュメント の 作成 
( ドキュメント 作者 用 の 情報 ) 
ドキュメント 作成 本部 ( 英語 ) 
( すべて の 人 に ) 
Python How - To ガイド ( 英語 ) 
( 専門 的 な 話題 ) 
Python ライブラリ リファレンス 
Python 言語 の コア 部分 で は 、 これら の 型 に対して リテラル 表現 形式 を 与え 、 意味 づけ 上 の いくつ か の 制約 を 与え て い ます が 、 完全 に その 意味 づけ を 定義 し て いる わけ で は あり ませ ん 。 
( 一方 で 、 言語 の コア 部分 で は 演算 子 の スペル や 優先 順位 の よう な 構文 法的 な 属性 を 定義 し て い ます 。 ) この ライブラリ に は また 、 組み込み 関数 と 例外 が 納め られ て い ます -- 組み込み 関数 および 例外 は 、 全て の Python で 書か れ た コード 上 で 、 import 文 を 使わ ず に 使う こと が できる オブジェクト です 。 
ある モジュール は C 言語 で 書か れ 、 Python インタプリタ に 組み込ま れ て い ます ; 一方 別 の モジュール は Python で 書か れ 、 ソース コード の 形式 で 取り込ま れ ます 。 
つまり 、 この マニュアル を 最初 から 読み 始め 、 読み 飽き 始め た ところ で 次 の 章 に 進め ば 、 Python ライブラリ で 利用 できる モジュール や サポート し て いる アプリケーション 領域 の 概要 を そこそこ 理解 できる という こと です 。 
もちろん 、 この マニュアル を 小説 の よう に 読む 必要 は あり ませ ん -- ( マニュアル の 先頭 部分 に ある ) 目次 に ざっと 目 を 通し たり 、 ( 最 後尾 に ある ) 索引 で お 目当て の 関数 や モジュール 、 用語 を 探す こと だって でき ます 。 
もし ランダム な 項目 について 勉強 し て み たい の なら 、 ランダム に ページ を 選び ( 
参照 )、 そこ から 1 , 2 節 読む こと も でき ます 。 
Python モジュール の インストール 
7 日本語 訳 について 
1 . 導入 
1 . 1 本 マニュアル における 表記 法 
2 . 字句 解析 
2 . 1 行 構造 
2 . 1 . 1 論理 行 ( logical line ) 
2 . 1 . 2 物理 行 ( physical line ) 
2 . 1 . 3 コメント 
2 . 1 . 4 エン コード 宣言 ( encoding declaration ) 
2 . 1 . 5 明示 的 な 行 継続 
2 . 1 . 6 非 明示 的 な 行 継続 
2 . 1 . 7 空 行 
2 . 1 . 8 インデント 
2 . 1 . 9 トー クン 間 の 空白 
2 . 2 その他 の トー クン 
2 . 3 識別子 ( identifier ) および キーワード ( keyword ) 
2 . 3 . 1 キーワード ( keyword ) 
2 . 3 . 2 予約 済み の 識別 子種 ( reserved classes of identifiers ) 
2 . 4 . 3 数値 リテラル 
2 . 4 . 4 整数 および 長 整数 リテラル 
2 . 4 . 5 浮動 小数点 数 リテラル 
2 . 4 . 6 虚数 ( imaginary ) リテラル 
2 . 5 演算 子 ( operator ) 
2 . 6 デリミタ ( delimiter ) 
3 . 3 . 1 基本 的 な カスタマイズ 
3 . 3 . 2 属性 値 アクセス を カスタマイズ する 
3 . 3 . 3 クラス 生成 を カスタマイズ する 
3 . 3 . 4 呼び出し 可能 オブジェクト を エミュレート する 
3 . 3 . 5 コンテナ を エミュレート する 
3 . 3 . 6 シーケンス 型 エミュレーション で 使わ れる その他 の メソッド 
3 . 3 . 7 数値 型 を エミュレーション する 
3 . 3 . 8 型 強制 規則 ( coercion rule ) 
4 . 1 名前 づけ と 束縛 ( naming and binding ) 
4 . 1 . 1 動的 な 機能 と の やりとり 
5 . 1 算術 変換 ( arithmetic conversion ) 
5 . 2 アトム 、 原子 的 要素 ( atom ) 
5 . 2 . 1 識別子 ( identifier 、 または 名前 ( name )) 
5 . 2 . 2 リテラル 
5 . 2 . 3 丸 括弧 形式 ( parenthesized form ) 
5 . 2 . 4 リスト 表現 
5 . 2 . 5 ジェネレータ 式 
5 . 2 . 6 辞書 表現 
5 . 2 . 7 文字 列 変換 
5 . 3 一 次 語 ( primary ) 
5 . 3 . 1 属性 参照 
5 . 3 . 2 添字 表記 ( subscription ) 
5 . 3 . 3 スライス 表記 ( slicing ) 
5 . 3 . 4 呼び出し ( call ) 
5 . 4 べき乗 演算 ( power operator ) 
5 . 5 単項 算術 演算 ( unary arithmetic operation ) 
5 . 6 二 項 算術 演算 ( binary arithmetic operation ) 
5 . 7 シフト 演算 ( shifting operation ) 
5 . 8 ビット 単位 演算 の 二 項 演算 ( binary bit - wise operation ) 
5 . 11 ラムダ ( lambda ) 
5 . 12 式 の リスト 
5 . 13 評価 順序 
5 . 14 まとめ 
6 . 単純 文 ( simple statement ) 
6 . 1 式 文 ( expression statement ) 
6 . 2 Assert 文 ( assert statement ) 
6 . 3 代入 文 ( assignment statement ) 
6 . 3 . 1 累算 代入 文 ( augmented assignment statement ) 
6 . 4 pass 文 
6 . 5 del 文 
6 . 6 print 文 
6 . 7 return 文 
6 . 8 yield 文 
6 . 9 raise 文 
6 . 10 break 文 
6 . 11 continue 文 
6 . 12 import 文 
6 . 12 . 1 future 文 ( future statement ) 
6 . 13 global 文 
6 . 14 exec 文 
7 . 複合 文 ( compound statement ) 
7 . 1 if 文 
7 . 2 while 文 
7 . 3 for 文 
7 . 4 try 文 
7 . 5 関数 定義 
7 . 6 クラス 定義 
8 . トップ レベル 要素 
8 . 1 完全 な Python プログラム 
8 . 2 ファイル 入力 
8 . 3 対話 的 入力 
8 . 4 式 入力 
Python リファレンス マニュアル 
1 はじめ に 
Email : distutils - sig @ python . org 日本語 訳 : Python ドキュメント 翻訳 プロジェクト 
平成 18 年 6 月 27 日 
この ドキュメント で は 、 Python モジュール 配布 ユーティリティ ( Python Distribution Utilities , `` Distutils '') について 、 エンド ユーザ の 視点 に 立ち 、 サード パーティ 製 の モジュール や 拡張 モジュール の 構築 や インストール によって 標準 の Python に 機能 を 追加 する 方法 について 述べ ます 。 
1 . 1 もっとも 簡単 な 場合 : ありふれ た インストール 作業 
1 . 2 新しい 標準 : Distutils 
2 標準 的 な ビルド・インストール 作業 
2 . 1 プラットフォーム による 違い 
2 . 2 ビルド 作業 と インストール 作業 を 分割 する 
2 . 3 ビルド の 仕組み 
2 . 4 インストール の 仕組み 
3 別 の 場所 へ の インストール 
3 . 1 別 の 場所 へ の インストール : home スキーム 
3 . 2 別 の 場所 へ の インストール : Unix ( prefix スキーム ) 
3 . 3 別 の 場所 へ の インストール ( prefix を 使う 方法 ): Windows 
4 カスタム の インストール 
4 . 1 Python サーチ パス の 変更 
5 Distutils 設定 ファイル 
5 . 1 設定 ファイル の 場所 と 名前 
5 . 2 設定 ファイル の 構文 
6 拡張 モジュール の ビルド : 小 技 と 豆 知識 
6 . 1 コンパイラ / リンカ の フラグ を いじる に は 
6 . 2 Windows で 非 Microsoft コンパイラ を 使っ て ビルド する に は 
3 . 1 sys -- システム パラメータ と 関数 
3 . 2 gc -- ガベージコレクタ インターフェース 
3 . 3 weakref -- 弱 参照 
3 . 4 fpectl -- 浮動 小数点 例外 の 制御 
3 . 5 atexit -- 終了 ハンドラ 
3 . 6 types -- 組み込み 型 の 名前 
3 . 7 UserDict -- 辞書 オブジェクト の ため の クラスラッパー 
3 . 8 UserList -- リスト オブジェクト の ため の クラスラッパー 
3 . 9 UserString -- 文字 列 オブジェクト の ため の クラスラッパー 
3 . 10 operator -- 関数 形式 の 標準 演算 子 
3 . 11 inspect -- 使用 中 オブジェクト の 情報 を 取得 する 
3 . 12 traceback -- スタック トレース の 表示 や 取り出し 
3 . 13 linecache -- テキスト ライン に ランダムアクセス する 
3 . 16 copy _ reg -- pickle サポート 関数 を 登録 する 
3 . 17 shelve -- Python オブジェクト の 永続 化 
3 . 18 copy -- 浅い コピー および 深い コピー 操作 
3 . 19 marshal -- 内部 使用 向け の Python オブジェクト 整列 化 
3 . 20 warnings -- 警告 の 制御 
3 . 21 imp -- import 内部 へ アクセス する 
3 . 22 pkgutil -- パッケージ 拡張 ユーティリティ 
3 . 23 code -- インタプリタ 基底 クラス 
3 . 24 codeop -- Python コード を コンパイル する 
3 . 25 pprint -- データ 出力 の 整然 化 
3 . 26 repr -- もう 一つ の repr () の 実装 
3 . 27 new -- ラン タイム 内部 オブジェクト の 作成 
3 . 28 site -- サイト 固有 の 設定 フック 
3 . 29 user -- ユーザー 設定 の フック 
3 . 30 __ builtin __ -- 組み込み 関数 
3 . 31 __ main __ -- トップ レベル の スクリプト 環境 
3 . 32 __ future __ -- Future ステートメント の 定義 
4 . 1 string -- 一般 的 な 文字 列 操作 
4 . 2 re -- 正規 表現 操作 
4 . 3 struct -- 文字 列 データ を パック さ れ た バイナリ データ として 解釈 する 
4 . 4 difflib -- 差異 の 計算 を 助ける 
4 . 5 fpformat -- 浮動 小数点 の 変換 
4 . 6 StringIO -- ファイル の よう に 文字 列 を 読み書き する 
4 . 7 cStringIO -- 高速 化 さ れ た StringIO 
4 . 8 textwrap -- テキスト の 折り返し と 詰め込み 
4 . 9 codecs -- codec レジストリ と 基底 クラス 
4 . 9 . 3 encodings . idna -- アプリケーション における 国際 化 ドメイン 名 ( IDNA ) 
4 . 10 unicodedata -- Unicode データベース 
4 . 11 stringprep -- インターネット の ため の 文字 列 調製 
5 . 1 pydoc -- ドキュメント 生成 と オンラインヘルプシステム 
5 . 2 doctest -- 対話 モード を 使っ た 使用 例 の 内容 を テスト する 
5 . 2 . 1 簡単 な 利用 法 : docstring 中 の 例題 を チェック する 
5 . 2 . 2 簡単 な 利用 法 : テキストファイル 中 の 例題 を チェック する 
5 . 3 unittest -- 単体テスト フレーム ワーク 
5 . 4 test -- Python 用 回帰 テスト パッケージ 
5 . 4 . 3 test . test _ support -- テスト の ため の ユーティリティ 関数 
5 . 5 decimal -- 10 進 浮動 小数点 数 の 算術 演算 
5 . 6 math -- 数学 関数 
5 . 7 cmath -- 複素数 の ため の 数学 関数 
5 . 8 random -- 擬似 乱数 を 生成 する 
5 . 9 whrandom -- 擬似 乱数 生成 器 
5 . 10 bisect -- 配列 二 分 法 アルゴリズム 
5 . 11 collections -- 高性能 な コンテナ ・ データ 型 
5 . 12 heapq -- ヒープキューアルゴリズム 
5 . 13 array -- 効率 の よい 数値 アレイ 
5 . 14 sets -- ユニーク な 要素 の 順序 なし コレクション 
5 . 15 itertools -- 効率 的 な ループ 実行 の ため の イテレータ 生成 関数 
5 . 16 ConfigParser -- 設定 ファイル の 構文 解析 器 
5 . 17 fileinput -- 複数 の 入力 ストリーム を またい だ 行 の 繰り返し 処理 を サポート する 。 
5 . 18 calendar -- 一般 的 な カレンダー に関する 関数 群 
5 . 19 cmd -- 行 指向 の コマンド インタープリタ の サポート 
5 . 20 shlex -- 単純 な 字句 解析 
6 . 1 os -- 雑多 な オペレーティングシステム インタフェース 
6 . 2 os . path -- 共通 の パス 名 操作 
6 . 3 dircache -- キャッシュ さ れ た ディレクトリ 一覧 の 生成 
6 . 4 stat -- stat () の 返す 内容 を 解釈 する 
6 . 5 statcache -- os . stat () の 最適 化 
6 . 6 statvfs -- os . statvfs () で 使わ れる 定数 群 
6 . 7 filecmp -- ファイル および ディレクトリ の 比較 
6 . 9 popen 2 -- アクセス 可能 な I / O ストリーム を 持つ 子 プロセス 生成 
6 . 10 datetime -- 基本 的 な 日付 型 および 時間 型 
6 . 11 time -- 時刻 データ へ の アクセス と 変換 
6 . 12 sched -- イベントスケジューラ 
6 . 13 mutex -- 排他 制御 
6 . 14 getpass -- 可 搬性 の ある パスワード 入力 機構 
6 . 15 curses -- 文字 セル 表示 の ため の 端末 操作 
6 . 16 curses . textpad -- curses プログラム の ため の テキスト 入力 ウィジェット 
6 . 17 curses . wrapper -- curses プログラム の ため の 端末 ハンドラ 
6 . 19 curses . panel -- curses の ため の パネル スタック 拡張 
6 . 20 getopt -- コマンドラインオプション の パーザ 
6 . 21 optparse -- より 強力 な コマンドラインオプション 解析 器 
6 . 22 tempfile -- 一 時 的 な ファイル や ディレクトリ の 生成 
6 . 23 errno -- 標準 の errno システム シンボル 
6 . 24 glob -- Unix 形式 の パス 名 の パターン 展開 
6 . 25 fnmatch -- Unix ファイル 名 の パターン マッチ 
6 . 26 shutil -- 高 レベル な ファイル 操作 
6 . 27 locale -- 国際 化 サービス 
6 . 28 gettext -- 多言 語 対応 に関する 国際 化 サービス 
6 . 29 logging -- Python 用 ロギング 機能 
7 . 1 signal -- 非同期 イベント に ハンドラ を 設定 する 
7 . 2 socket -- 低 レベルネットワークインターフェース 
7 . 3 select -- I / O 処理 の 完了 を 待機 する 
7 . 4 thread -- マルチスレッド の コントロール 
7 . 5 threading -- 高水準 の スレッドインタフェース 
7 . 6 dummy _ thread -- thread の 代替 モジュール 
7 . 7 dummy _ threading -- threading の 代替 モジュール 
7 . 8 Queue -- 同期 キュー クラス 
7 . 10 anydbm -- DBM 形式 の データベース へ の 汎用 アクセス インタフェース 
7 . 11 dbhash -- BSD データベース ライブラリ へ の DBM 形式 の インタフェース 
7 . 12 whichdb -- どの DBM モジュール が データベース を 作っ た か を 推測 する 
7 . 13 bsddb -- Berkeley DB ライブラリ へ の インタフェース 
7 . 14 dumbdbm -- 可 搬性 の ある DBM 実装 
7 . 15 zlib -- gzip 互換 の 圧縮 
7 . 16 gzip -- gzip ファイル の サポート 
7 . 17 bz 2 -- bzip 2 互換 の 圧縮 ライブラリ 
7 . 18 zipfile -- ZIP アーカイブ の 処理 
7 . 20 readline -- GNU readline の インタフェース 
7 . 21 rlcompleter -- GNU readline 向け 補完 関数 
8 . 1 posix -- 最も 一般 的 な POSIX システム コール 群 
8 . 2 pwd -- パスワード データベース へ の アクセス を 提供 する 
8 . 3 grp -- グループ データベース へ の アクセス 
8 . 4 crypt -- Unix パスワード を チェック する ため の 関数 
8 . 5 dl -- 共有 オブジェクト の C 関数 の 呼び出し 
8 . 6 dbm -- UNIX dbm の シンプル な インタフェース 
8 . 7 gdbm -- GNU による dbm の 再 実装 
8 . 8 termios -- POSIX スタイル の 端末 制御 
8 . 9 tty -- 端末 制御 の ため の 関数 群 
8 . 10 pty -- 擬似 端末 ユーティリティ 
8 . 11 fcntl -- fcntl () および ioctl () システム コール 
8 . 12 pipes -- シェル パイプライン へ の インタフェース 
8 . 13 posixfile -- ロック 機構 を サポート する ファイル 類似 オブジェクト 
8 . 14 resource -- リソース 使用 状態 の 情報 
8 . 15 nis -- Sun の NIS ( Yellow Pages ) へ の インタフェース 
8 . 16 syslog -- Unix syslog ライブラリ ルーチン 群 
8 . 17 commands -- コマンド 実行 ユーティリティ 
10 . 9 hotshot -- ハイパフォーマンス・ロギング・プロファイラ 
10 . 10 timeit -- 小さな コード 断片 の 実行 時間 計測 
11 . 1 webbrowser -- 便利 な ウェブブラウザコントローラー 
11 . 2 cgi -- CGI ( ゲートウェイインタフェース 規格 ) の サポート 
11 . 3 cgitb -- CGI スクリプト の トレース バック 管理 機構 
11 . 4 urllib -- URL による 任意 の リソース へ の アクセス 
11 . 5 urllib 2 -- URL を 開く ため の 拡張 可能 な ライブラリ 
11 . 6 httplib -- HTTP プロトコルクライアント 
11 . 7 ftplib -- FTP プロトコルクライアント 
11 . 8 gopherlib -- gopher プロトコル の クライアント 
11 . 9 poplib -- POP 3 プロトコルクライアント 
11 . 10 imaplib -- IMAP 4 プロトコルクライアント 
11 . 11 nntplib -- NNTP プロトコルクライアント 
11 . 12 smtplib -- SMTP プロトコル クライアント 
11 . 13 smtpd -- SMTP サーバ 
11 . 14 telnetlib -- Telnet クライアント 
11 . 15 urlparse -- URL を 解析 し て 構成 要素 に する 
11 . 16 SocketServer -- ネットワーク サーバ 構築 の ため の フレーム ワーク 
11 . 17 BaseHTTPServer -- 基本 的 な 機能 を 持つ HTTP サーバ 
11 . 18 SimpleHTTPServer -- 簡潔 な HTTP リクエスト ハンドラ 
11 . 19 CGIHTTPServer -- CGI 実行 機能 付き HTTP リクエスト 処理 機構 
11 . 20 cookielib -- HTTP クライアント 用 の Cookie 処理 
11 . 21 Cookie -- HTTP の 状態 管理 
11 . 23 SimpleXMLRPCServer -- 基本 的 な XML - RPC サーバー 
11 . 24 DocXMLRPCServer -- セルフ - ドキュメンティング XML - RPC サーバ 
11 . 25 asyncore -- 非同期 ソケット ハンドラ 
11 . 26 asynchat -- 非同期 ソケット コマンド / レスポンス ハンドラ 
12 . 1 formatter -- 汎用 の 出力 書式 化 機構 
12 . 2 email -- 電子 メール と MIME 処理 の ため の パッケージ 
12 . 3 mailcap -- mailcap ファイル の 操作 
12 . 4 mailbox -- 様々 な メールボックス 形式 の 読み出し 
12 . 5 mhlib -- MH の メイル ボックス へ の アクセス 機構 
12 . 6 mimetools -- MIME メッセージ を 解析 する ため の ツール 
12 . 7 mimetypes -- ファイル 名 を MIME 型 へ マップ する 
12 . 8 MimeWriter -- 汎用 MIME ファイル ライター 
12 . 9 mimify -- 電子 メイル メッセージ の MIME 処理 
12 . 10 multifile -- 個別 の 部分 を 含ん だ ファイル 群 の サポート 
12 . 11 rfc 822 -- RFC 2822 準拠 の メイル ヘッダ 読み出し 
12 . 12 base 64 -- RFC 3548 : Base 16 , Base 32 , Base 64 テータ の 符号 化 
12 . 13 binascii -- バイナリ データ と ASCII データ と の 間 で の 変換 
12 . 14 binhex -- binhex 4 形式 ファイル の エン コード および デコード 
12 . 15 quopri -- MIME quoted - printable 形式 データ の エン コード および デコード 
12 . 16 uu -- uuencode 形式 の エン コード と デコード 
12 . 17 xdrlib -- XDR データ の エン コード および デコード 
12 . 18 netrc -- netrc ファイル の 処理 
13 . 1 HTMLParser -- HTML および XHTML の シンプル な パーザ 
13 . 2 sgmllib -- 単純 な SGML パーザ 
13 . 3 htmllib -- HTML 文書 の 解析 器 
13 . 4 htmlentitydefs -- HTML 一般 エンティティ の 定義 
13 . 5 xml . parsers . expat -- Expat を 使っ た 高速 な XML 解析 
13 . 6 xml . dom -- 文書 オブジェクト モデル ( DOM ) API 
13 . 7 xml . dom . minidom -- 軽量 な DOM 実装 
13 . 8 xml . dom . pulldom -- 部分 的 な DOM ツリー 構築 の サポート 
13 . 9 xml . sax -- SAX 2 パーサ の サポート 
13 . 10 xml . sax . handler -- SAX ハンドラ の 基底 クラス 
13 . 11 xml . sax . saxutils -- SAX ユーティリティ 
13 . 12 xml . sax . xmlreader -- XML パーサ の インターフェース 
13 . 13 xmllib -- XML ドキュメント の パーサ 
14 . 1 audioop -- 生 の 音声 データ を 操作 する 
14 . 2 imageop -- 生 の 画像 データ を 操作 する 
14 . 3 aifc -- AIFF および AIFC ファイル の 読み書き 
14 . 4 sunau -- Sun AU ファイル の 読み書き 
14 . 5 wave -- WAV ファイル の 読み書き 
14 . 6 chunk -- IFF チャンクデータ の 読み込み 
14 . 7 colorsys -- 色 体系 間 の 変換 
14 . 8 rgbimg -- `` SGI RGB '' ファイル を 読み書き する 
14 . 9 imghdr -- 画像 の 形式 を 決定 する 
14 . 10 sndhdr -- サウンド ファイル の 識別 
14 . 11 ossaudiodev -- OSS 互換 オーディオ デバイス へ の アクセス 
15 . 1 hmac -- メッセージ 認証 の ため の 鍵 付き ハッシュ 化 
15 . 2 md 5 -- MD 5 メッセージダイジェストアルゴリズム 
15 . 3 sha -- SHA - 1 メッセージダイジェストアルゴリズム 
16 . 1 Tkinter -- Tcl / Tk へ の Python インタフェース 
16 . 2 Tix -- Tk の 拡張 ウィジェット 
16 . 3 ScrolledText -- スクロール する テキストウィジェット 
16 . 4 turtle -- Tk の ため の タートル グラフィックス 
17 . 1 rexec -- 制限 実行 の フレーム ワーク 
17 . 2 Bastion -- オブジェクト に対する アクセス の 制限 
18 . 1 parser -- Python 解析 木 に アクセス する 
18 . 2 symbol -- Python 解析 木 と共に 使わ れる 定数 
18 . 3 token -- Python 解析 木 と共に 使わ れる 定数 
18 . 4 keyword -- Python キーワード チェック 
18 . 5 tokenize -- Python ソース の ため の トークナイザ 
18 . 6 tabnanny -- あいまい な インデント の 検出 
18 . 7 pyclbr -- Python クラス ブラウザー サポート 
18 . 8 py _ compile -- Python ソース ファイル の コンパイル 
18 . 9 compileall -- Python ライブラリ を バイト コンパイル 
18 . 10 dis -- Python バイト コード の 逆 アセンブラ 
18 . 11 distutils -- Python モジュール の 構築 と インストール 
20 . 1 al -- SGI の オーディオ 機能 
20 . 2 AL -- al モジュール で 使わ れる 定数 
20 . 3 cd -- SGI システム の CD - ROM へ の アクセス 
20 . 4 fl -- グラフィカルユーザーインターフェース の ため の FORMS ライブラリ 
20 . 5 FL -- fl モジュール で 使用 さ れる 定数 
20 . 6 flp -- 保存 さ れ た FORMS デザイン を ロード する 関数 
20 . 7 fm -- Font Manager インターフェース 
20 . 8 gl -- Graphics Library インターフェース 
20 . 9 DEVICE -- gl モジュール で 使わ れる 定数 
20 . 10 GL -- gl モジュール で 使わ れる 定数 
20 . 11 imgfile -- SGI imglib ファイル の サポート 
20 . 12 jpeg -- JPEG ファイル の 読み書き を 行う 
21 . 1 sunaudiodev -- Sun オーディオ ハードウェア へ の アクセス 
21 . 2 SUNAUDIODEV -- sunaudiodev で 使わ れる 定数 
22 . 1 msvcrt - MS VC ++ 実行 時 システム の 有用 な ルーチン 群 
22 . 2 _ winreg - Windows レジストリ へ の アクセス 
22 . 3 winsound -- Windows 用 の 音声 再生 インタフェース 
1 . Mac OS 9 で Python を 利用 する 
2 . 1 mac -- os モジュール の 実装 
2 . 2 macpath -- MacOS の パス 操作 関数 
2 . 3 macfs -- 様々 な ファイル システム 関連 の サービス 
2 . 4 ic -- インターネット 設定 へ の アクセス 
2 . 5 MacOS -- Mac OS インタプリタ 機能 へ の アクセス 
2 . 6 macostools -- ファイル 操作 を 便利 に する ルーチン 集 
2 . 7 findertools -- finder の Apple Events インターフェース 
2 . 8 EasyDialogs -- 基本 的 な Macintosh ダイアログ 
2 . 9 FrameWork -- 対話 型 アプリケーション ・ フレーム ワーク 
2 . 10 autoGIL -- イベント ループ 中 の グローバル インタープリタ の 取り扱い 
3 . 1 gensuitemodule -- OSA スタプ 作成 パッケージ 
3 . 2 aetools -- OSA クライアント の サポート 
3 . 3 aepack -- Python 変数 と AppleEvent データ コンテナ 間 の 変換 
3 . 4 aetypes -- AppleEvent オブジェクト 
3 . 5 MiniAEFrame -- オープンスクリプティングアーキテクチャサーバ の サポート 
4 . 25 ColorPicker -- 色 選択 ダイアログ 
ブール 演算 は 、 全て の Python 演算 子 の 中 で 、 最も 低い 優先 順位 に なっ て い ます : 
ブール 演算 の コンテキスト や 、 式 が 制御 フロー 文中 で 使わ れる 最 に は 、 以下 の 値 : None 、 すべて の 数値 型 における ゼロ 、 空 の シーケンス ( 文字 列 、 タプル 、 および リスト ) 、 空 の マップ 型 ( 辞書 ) 、 は 偽 ( false ) で ある と 解釈 さ れ ます 。 
それ 以外 の 値 は 真 ( true ) で ある と 解釈 さ れ ます 。 演算 子 not は 、 引数 が 偽 で ある 場合 に は 1 を 、 それ 以外 の 場合 に は 0 に なり ます 。 
式 
は 、 まず x を 評価 し ます ; x が 偽 なら 、 x の 値 を 返し ます ; それ 以外 の 場合 に は 、 y の 値 を 評価 し 、 その 結果 を 返し ます 。 
は 、 まず x を 評価 し ます ; x が 真 なら 、 x の 値 を 返し ます ; それ 以外 の 場合 に は 、 y の 値 を 評価 し 、 その 結果 を 返し ます 。 
( and も not も 、 返す 値 を 0 や 1 に 制限 する の で は なく 、 最後 に 評価 し た 引数 の 値 を 返す ので 注意 し て ください 。 この 仕様 は 、 例えば s を 文字 列 として 、 s が 空文字 列 の 場合 に デフォルト の 値 に 置き換える よう な 場合 に 、 s or ' foo ' と 書く と 期待 通り の 値 に なる ため に 便利 な こと が あり ます 。 
not は 、 式 の 値 で なく 独自 に 値 を 作成 し て 返す ので 、 引数 と 同じ 型 の 値 を 返す よう な 処理 に 煩わさ れる こと は あり ませ ん 。 例えば 、 not ' foo ' は 、 '' で は なく 0 に なり ます ) 
Cmd インスタンス は 、 次 の メソッド を 持ち ます : 
プロンプト を 繰り返し 出し 、 入力 を 受け取り 、 受け取っ た 入力 から 取り去っ た 先頭 の 語 を 解析 し 、 その 行 の 残り を 引数 として アクション メソッド へ ディスパッチ し ます 。 オプション の 引数 は 、 最初 の プロンプト の 前 に 表示 さ れる バナー あるいは 紹介 用 の 文字 列 です ( これ は クラス メンバ intro を オーバーライド し ます )。 
モジュール が ロード さ れ て いる なら 、 入力 は 自動的 に bash の よう な 履歴 リスト 編集 機能 を 受け継ぎ ます ( 例えば 、 Control - P は 直前 の コマンド へ の スクロール バック 、 Control - N は 次 の もの へ 進む 、 Control - F は カーソル を 右 へ 非破壊 的 に 進める 、 Control - B は カーソル を 非破壊 的 に 左 へ 移動 さ せる 等 )。 
入力 の ファイル 終端 は 、 文字 列 ' EOF ' として 渡さ れ ます 。 メソッド do _ foo () を 持っ て いる 場合 に 限っ て 、 インタープリタ の インスタンス は コマンド 名 " foo " を 認識 し ます 。 
特別 な 場合 として 、 文字 "?" で 始まる 行 は メソッド do _ help () へ ディスパッチ し ます 。 
プロンプト に 答え て タイプ し た か の よう に 引数 を 解釈 実行 し ます 。 
これ を オーバーライド する こと が ある かも しれ ませ ん が 、 通常 は 必要 ない でしょ う 。 便利 な 実行 フック について は 、 precmd () と postcmd () メソッド を 参照 し て ください 。 
戻り 値 は 、 インタープリタ による コマンド の 解釈 実行 を やめる か どう か を 示す フラグ です 。 
コマンド str に 対応 する do _*() メソッド が ある 場合 、 その メソッド の 返り 値 が 返さ れ ます 。 そう で ない 場合 は default () メソッド から の 返り 値 が 返さ れ ます 。 
プロンプト に 空 行 が 入力 さ れ た とき に 呼び出さ れる メソッド 。 
この メソッド が オーバーライド さ れ て い ない なら 、 最後 に 入力 さ れ た 空 行 で ない コマンド が 繰り返さ れ ます 。 
コマンド の 先頭 の 語 が 認識 さ れ ない とき に 、 入 力行 に対して 呼び出さ れ ます 。 
この メソッド が オーバーライド さ れ て い ない なら 、 エラーメッセージ を 表示 し て 戻り ます 。 
利用 可能 な コマンド 固有 の complete _*() が 存在 し ない とき に 、 入 力行 を 補完 する ため に 呼び出さ れる メソッド 。 
デフォルト で は 、 空 行 を 返し ます 。 
コマンド 行 line が 解釈 実行 さ れる 直前 、 しかし 入力 プロンプト が 作ら れ 表示 さ れ た 後 に 実行 さ れる フック メソッド 。 
この メソッド は Cmd 内 の スタブ で あっ て 、 サブ クラス で オーバーライド さ れる ため に 存在 し ます 。 
戻り 値 は onecmd () メソッド が 実行 する コマンド として 使わ れ ます 。 precmd () の 実装 で は 、 コマンド を 書き換える かも しれ ない し 、 あるいは 単に 変更 し て い ない line を 返す かも しれ ませ ん 。 
コマンド ディスパッチ が 終わっ た 直後 に 実行 さ れる フック メソッド 。 
この メソッド の 戻り 値 は 、 stop に 対応 する 内部 フラグ の 新しい 値 として 使わ れ ます 。 偽 を 返す と 、 実行 を 続け ます 。 
cmdloop () が 呼び出さ れ た とき に 一 度 だけ 実行 さ れる フック メソッド 。 
cmdloop () が 戻る 直前 に 一 度 だけ 実行 さ れる フック メソッド 。 この メソッド は Cmd 内 の スタブ で あっ て 、 サブ クラス で オーバーライド さ れる ため に 存在 し ます 。 
Cmd の サブ クラス の インスタンス は 、 公開 さ れ た インスタンス 変数 を いくつ か 持っ て い ます : 
入力 を 求める ため に 表示 さ れる プロンプト 。 
コマンド の 先頭 の 語 として 受け入れ られる 文字 の 文字 列 。 
最後 の 空 で ない コマンドプリフィックス 。 
紹介 または バナー として 表示 さ れる 文字 列 。 
cmdloop () メソッド に 引数 を 与える ため に 、 オーバーライド さ れる かも しれ ませ ん 。 
ヘルプ の 出力 に 文書 化 さ れ た コマンド の 部分 が ある 場合 に 表示 する ヘッダ 。 
ヘルプ の 出力 に その他 の ヘルプ 見出し が ある ( すなわち 、 do _*() メソッド に 対応 し て い ない help _*() メソッド が 存在 する ) 場合 に 表示 する ヘッダ 。 
ヘルプ の 出力 に 文書 化 さ れ て い ない コマンド の 部分 が ある ( すなわち 、 対応 する help _*() メソッド を 持た ない do _*() メソッド が 存在 する ) 場合 に 表示 する ヘッダ 。 
ヘルプ メッセージ の ヘッダ の 下 に 、 区切り 行 を 表示 する ため に 使わ れる 文字 。 
空 の とき は 、 ルーラ 行 が 表示 さ れ ませ ん 。 
デフォルト で は 、 "=" です 。 
フラグ 、 デフォルト で は 真 。 
真 なら ば 、 cmdloop () は プロンプト を 表示 し て 次 の コマンド 読み込む ため に raw _ input () を 使い ます 。 
偽 なら ば 、 sys . stdout . write () と sys . stdin . readline () が 使わ れ ます 。 ( これ が 意味 する の は 、 
を import する こと によって 、 それ を サポート する システム 上 で は 、 インタープリタ が 自動的 に Emacs 形式 の 行 編集 と コマンド 履歴 の キー ストローク を サポート する という こと です 。 ) 
ConfigParser クラス は RawConfigParser の インターフェース を いくつ か の メソッド について 拡張 し 、 省略 可能 な 引数 を 追加 し て い ます 。 
section の option 変数 を 取得 し ます 。 
raw が 真 で ない 時 に は 、 全て の "%" 置換 は コンス トラクタ に 渡さ れ た デフォルト 値 か 、 vars が 与え られ て いれ ば それ を 元 に し て 展開 さ れ て から 返さ れ ます 。 
指定 し た section 内 の 各 オプション に対して 、 ( name , value ) の ペア から なる リスト を 返し ます 。 
省略 可能 な 引数 は get () メソッド と 同じ 意味 を 持ち ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
1 . 2 . 5 . 2 モジュール 検索 パス に モジュール を 追加 する 
EditPythonPrefs を 使う と 、 Python の 振る舞い を 自分 の 好み に 合わせ られ ます 。 
EditPythonPrefs に は 二つ の 用途 が あり ます 。 ひとつ は 環境 設定 を 行う という 普通 の 使い方 、 もう ひとつ は Python の エンジン を ドロップ し て 、 使い たい インタプリタ の バージョン を 制御 する という もの です 。 
後者 は 、 たとえば 普段 は プログラム が 正常 終了 し た 時 に は 出力 ウィンドウ を 閉じる よう に し て おき たい けれども 、 出力 ウィンドウ を 閉じ ない よう な PythonInterpreter の コピー を もう ひとつ 作っ て おき たい よう な 場合 に 便利 です 。 デフォルト の 設定 を 変更 する に は 、 EditPythonPrefs を ダブル クリック し ます 。 
インタプリタ の どれ か ひとつ の 設定 だけ を 変更 し たけれ ば 、 インタプリタ を EditPythonPrefs の 上 に ドロップ し ます 。 
同じ やり方 を 使え ば 、 EditPythonPrefs を 使っ て Python IDE や 作成 し た アプレット の 設定 を 変更 でき ます - 節 や 1 . 3 . 4 節 を 参照 し て ください 。 
1 . 3 . 1 `` Python Interactive '' ウィンドウ を 使う 
Python IDE ( 統合 開発 環境 ) は 独立 し た アプリケーション で 、 Python コード の テキストエディタ や 、 クラスブラウザ 、 グラフィカルデバッガ など として 動作 し ます 。 
1 . 3 . 3 統合 開発 環境 の 中 から スクリプト を 実行 する 
1 . 3 . 4 `` Save as '' と `` Save as Applet '' の 違い Python スクリプト を 書い たら 、 ファイル を 「 アプレット 」 として も 保存 でき ます (`` File '' メニュー の `` Save as applet '' を 選び ます ) 。 
アプレット として 保存 する と 、 ファイル や フォルダ を スクリプト に ドロップ する こと で 、 コマンド ライン 引数 で 渡す の と 同じ よう に スクリプト に ファイル や フォルダ を 渡せる という 、 大きな 利点 が あり ます 。 
詳しく は Python の 標準 ドキュメント を 参照 し て ください 。 スクリプト を アプレット として 保存 し て も 、 Python が インストール さ れ て い ない システム で は 実行 でき ない ので 注意 し て ください 。 
1 . 3 . 2 Python スクリプト を 書く 
1 . 3 . 4 `` Save as '' と 
Python IDE の 最前 面 の ウィンドウ で 全部 実行 ( run all ) ボタン を 押す と 、 その ウィンドウ の スクリプト を 実行 でき ます 。 
しかし 、 仮に Python の 習慣 通り に " if __ name __ == "__ main __":" と 書い て も 、 スクリプト は デフォルト で は 「 __ main __」 に なら ない こと に 注意 し て おき ましょ う 。 
そういう 風 に 動作 さ せる に は 、 ドキュメント ウィンドウ の 一番 右 上 の 小さな 黒い 三角形 から 、 `` Run as __ main __'' オプション を 選ば ね ば なり ませ ん 。 
この オプション は アプリケーション で は なく ファイル に 関連付け られ て いる ので 注意 し て ください 。 
と は いえ 、 この オプション は 保存 後 も そのまま 残り ます 。 止め たけれ ば 、 再度 この オプション を 選ん で ください 。 
Python IDE は 、 対話 的 に 使う だけ で なく 、 Python プログラム を 書き上げ たり 、 順次 保存 し たり でき 、 全体 や 一部分 の 実行 も でき ます 。 「 File 」 メニュー の 適当 な メニュー アイテム を 選択 すれ ば 新た に スクリプト を 作成 し たり 、 前 に 保存 し た スクリプト を 開い たり 、 現在 開い て いる スクリプト を 保存 し たり でき ます 。 
デフォルト で は 、 ファイル の Python IDE を クリエータコード に し て 保存 し ます 。 従って 、 ファイル の アイコ ン を ダブル クリック する と ファイル を 編集 用 に 開き ます 。 
この 動作 を 変更 し て 、 PythonInterpreter で 開い て 実行 する よう し たい と 思う 場合 も ある でしょ う 。 
そう する に は 、 単に 「 save options 」 から 「 Python Interpreter 」 を 選ぶ だけ です 。 
この オプション は アプリケーション で は なく ファイル に 関連付け られ て いる ので 注意 し て ください 。 
MimeWriter インスタンス に は 以下 の メソッド が あり ます : 
MIME メッセージ に 新しい ヘッダ 行 を 追加 し ます 。 
key は 、 その ヘッダ の 名前 で あり 、 そして value で 、 その ヘッダ の 値 を 明示 的 に 与え ます 。 
省略 可能 な 引数 prefix は 、 ヘッダ が 挿入 さ れる 場所 を 決定 し ます ;" 0 " は 最後 に 追加 する こと を 意味 し 、 " 1 " は 先頭 へ の 挿入 です 。 
デフォールト は 最後 に 追加 する こと です 。 
今 まで 集め られ た ヘッダ すべて が 書か れ ( そして 忘れ られ ) る よう に し ます 。 これ は 、 もし 全く 本体 が 必要 で ない 場合 に 役に立ち ます 。 
例えば 、 ヘッダ の よう な 情報 を 保管 する ため に ( 誤っ て ) 使用 さ れ た 、 型 message / rfc 822 の サブ パート 用 。 
メッセージ の 本体 に 書く の に 使用 できる ファイル の よう な オブジェクト を 返し ます 。 
コンテント - 型 は 、 与え られ た ctype に 設定 さ れ 、 省略 可能 な パラメータ plist は 、 コンテント - 型 定義 の ため の 追加 の パラメータ を 与え ます 。 prefix は 、 その デフォールト が 先頭 へ の 挿入 以外 は addheader () で の よう に 働き ます 。 
メッセージ 本体 を 書く の に 使う こと が できる ファイル の よう な オブジェクト を 返し ます 。 
サブ パート は 、 nextpart () を 使っ て 作成 する べき です 。 
マルチパートメッセージ の 個々 の パート を 表す 、 MimeWriter の 新しい インスタンス を 返し ます 。 
これ は 、 その パート を 書く の に も 、 また 複雑 な マルチ パート を 再帰 的 に 作成 する の に も 使う こと が でき ます 。 
メッセージ は 、 nextpart () を 使う 前 に , 最初 startmultipartbody () で 初期 化 し なけれ ば なり ませ ん 。 
これ は 、 マルチパートメッセージ の 最後 の パート を 指定 する の に 使う こと が でき 、 マルチパートメッセージ を 書く とき は いつ でも 使う べき です 。 
MultiFile インスタンス に は 以下 の メソッド が あり ます : 
一行 データ を 読み ます 。 
その 行 が ( セクション 分割 子 や 終了 マーカ や 本物 の EOF で ない ) データ の 場合 、 行 データ を 返し ます 。 
その 行 が もっとも 最近 スタック に プッシュ さ れ た 境界 パターン に マッチ し た 場合 、 '' を 返し 、 マッチ し た 内容 が 終了 マーカ か そう で ない か によって self . last を 1 か 0 に 設定 し ます 。 
行 が その他 の スタック さ れ て いる 境界 パターン に マッチ し た 場合 、 エラー が 送出 さ れ ます 。 
背後 の ストリーム オブジェクト における ファイル の 終端 に 到達 し た 場合 、 全て の 境界 が スタック から 除去 さ れ て い ない 限り この メソッド は Error を 送出 し ます 。 
この パート の 残り の 全て の 行 を 文字 列 の リスト として 返し ます 。 
次 の セクション まで の 全て の 行 を 読み ます 。 
読ん だ 内容 を 単一 の ( 複数 行 にわたる ) 文字 列 として 返し ます 。 
この メソッド に は size 引数 を とら ない ので 注意 し て ください ! 
ファイル を seek し ます 。 
seek する 際 の インデクス は 現在 の セクション の 開始 位置 から の 相対 位置 に なり ます 。 pis および whence 引数 は ファイル の seek における 引数 と 同じ よう に 解釈 さ れ ます 。 
現在 の セクション の 先頭 に対して 相対 的 な ファイル 位置 を 返し ます 。 
次 の セクション まで 行 を 読み 飛ばし ます ( すなわち 、 セクション 分割 子 または 終了 マーカ が 消費 さ れる まで 行 データ を 読み ます )。 
次 の セクション が あっ た 場合 に は 真 を 、 終了 マーカ が 発見 さ れ た 場合 に は 偽 を 返し ます 。 
最も 最近 スタック に プッシュ さ れ た 境界 パターン を 最 有効 化 し ます 。 
str が データ の 場合 に 真 を 返し 、 セクション 分割 子 の 可能 性 が ある 場合 に は 偽 を 返し ます 。 
この メソッド は 行 の 先頭 が ( 全て の MIME 境界 が 持っ て いる ) '- -' 以外 に なっ て いる か を 調べる よう に 実装 さ れ て い ます が 、 導出 クラス で 上書き できる よう に 宣言 さ れ て い ます 。 
この テスト は 実際 の 境界 テスト において 高速 性 を 保つ ため に 使わ れ て いる ので 注意 し て ください ; この テスト が 常に false を 返す 場合 、 テスト が 失敗 する の で は なく 、 単に 処理 が 遅く なる だけ です 。 
境界 文字 列 を スタック に プッシュ し ます 。 
この 境界 文字 列 の 適切 に 修飾 さ れ た バージョン が 入力 ファイル 中 に 見つかっ た 場合 、 セクション 分割 子 または 終了 マーカ で ある と 解釈 さ れ ます 。 
それ 以降 の 全て の データ 読み出し は 、 pop () を 呼ん で 境界 文字 列 を 除去 する か 、 next () を 呼ん で 境界 文字 列 を 再 有効 化 し ない かぎり 、 ファイル 終端 を 示す 空文字 列 を 返し ます 。 一つ 以上 の 境界 を プッシュ する こと は 可能 です 。 
もっとも 最近 プッシュ さ れ た 境界 に 遭遇 する と EOF が 返り ます ; その他 の 境界 に 遭遇 する と エラー が 送出 さ れ ます 。 
セクション 境界 を ポップ し ます 。 
この 境界 は もはや EOF として 解釈 さ れ ませ ん 。 
境界 を セクション 分割 子 に し ます 。 
標準 で は 、 この メソッド は ( 全て の MIME 境界 が 持っ て いる ) '- 
-' を 境界 文字 列 の 先頭 に 追加 し ます が 、 これ は 導出 クラス で 上書き できる よう に 宣言 さ れ て い ます 。 
末尾 の 空白 は 無視 さ れる こと から 考え て 、 この メソッド で は LF や CR - LF を 追加 する 必要 は あり ませ ん 。 
境界 文字 列 を 終了 マーカ 行 に し ます 。 
標準 で は 、 この メソッド は ( MIME マルチパートデータ の メッセージ 終了 マーカ の よう に ) '- 
-' を 境界 文字 列 の 先頭 に 追加 し 、 かつ '- 
-' を 境界 文字 列 の 末尾 に 追加 し ます が 、 これ は 導出 クラス で 上書き できる よう に 宣言 さ れ て い ます 。 
末尾 の 空白 は 無視 さ れる こと から 考え て 、 この メソッド で は LF や CR - LF を 追加 する 必要 は あり ませ ん 。 
最後 に 、 MultiFile インスタンス は 二つ の 公開 さ れ た インスタンス 変数 を 持っ て い ます : 
現在 の パート における 入れ子 の 深 さ です 。 
最後 に 見つかっ た ファイル 終了 イベント が メッセージ 終了 マーカ で あっ た 場合 に 真 と なり ます 。 
クラス Queue は キュー オブジェクト を 実装 し て おり 、 以下 の メソッド を 持っ て い ます 。 
この クラス は 、 他 の キュー 構造 ( 例えば スタック ) を 実装 する ため に 派生 さ せ られる ます が 、 継承 可能 な インタフェース は ここ で は 説明 し ませ ん 。 
詳しい こと は ソース コード を 見 て ください 。 
公開 メソッド は 次 の もの です : 
キュー の 大まか な サイズ を 返し ます 。 
マルチスレッドセマンティクス において 、 この 値 は 信頼 でき ませ ん 。 
キュー が 空 なら True を 返し 、 そう で ない なら False を 返し ます 。 マルチスレッドセマンティクス において 、 この 値 は 信頼 でき ませ ん 。 
キュー が 満杯 なら True を 返し 、 そう で ない なら False を 返し ます 。 マルチスレッドセマンティクス において 、 この 値 は 信頼 でき ませ ん 。 
item を キュー に 入れ ます 。 
もし オプション 引数 block が True で timeout が None ( デフォルト ) なら ば 、 フリー スロット が 利用 可能 に なる まで ブロック し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 : the timeout parameter 
put ( item , False ) と 同じ 意味 です 。 
キュー から アイテム を 取り除き 、 それ を 返し ます 。 
もし オプション 引数 block が True で timeout が None ( デフォルト ) なら ば 、 アイテム が 利用 可能 に なる まで ブロック し ます 。 
もし timeout が 正 の 値 の 場合 、 最大 で timeout 秒間 ブロック し 、 その 時間 内 で アイテム が 利用 可能 に なら なけれ ば 、 例外 Empty を 送出 し ます 。 
他方 ( block が False )、 直ちに アイテム が 利用 できる なら ば 、 それ を 返し ます 。 でき ない なら ば 、 例外 Empty を 送出 し ます ( この 場合 timeout は 無視 さ れ ます )。 
get ( False ) と 同じ 意味 です 。 
RawConfigParser クラス の インスタンス は 以下 の メソッド を 持ち ます : 
インスタンス 全体 で 使わ れる デフォルト 値 の 辞書 を 返し ます 。 
利用 可能 な セクション の リスト を 返し ます 。 DEFAULT は この リスト に 含ま れ ませ ん 。 
section という 名前 の セクション を インスタンス に 追加 し ます 。 
同名 の セク ション が 存在 し た 場合 、 DuplicateSectionError が 発生 し ます 。 has _ section 
指定 し た セクション が コンフィグレーションファイル に 存在 する か を 返し ます 。 
DEFAULT セクション は 存在 する と みなさ れ ませ ん 。 
section で 指定 し た セクション で 利用 できる オプション の リスト を 返し ます 。 
与え られ た セクション が 存在 し て かつ オプション が 与え られ て いれ ば True を 返し 、 そう で なけれ ば False を 返し ます 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
ファイル 名 の リスト を 読ん で 解析 を こころみ 、 うまく 解析 でき た ファイル 名 の リスト を 返し ます 。 
もし filenames が 文字 列 か ユニ コード 文字 列 なら 、 1 つ の ファイル 名 として 扱わ れ ます 。 
filenames で 指定 さ れ た ファイル が 開け ない 場合 、 その ファイル は 無視 さ れ ます 。 この 挙動 は 設定 ファイル が 置か れる 可能 性 の ある 場所 ( 例えば 、 カレント ディレクトリ 、 ホーム ディレクトリ 、 システム 全体 の 設定 を 行う ディレクトリ ) を 設定 し て 、 そこ に 存在 する 設定 ファイル を 読む こと を 想定 し て 設計 さ れ て い ます 。 
設定 ファイル が 存在 し なかっ た 場合 、 ConfigParser の インスタンス は 空 の データセット を 持ち ます 。 
初期 値 の 設定 ファイル を 先 に 読み込ん で おく 必要 が ある アプリケーション で は 、 readfp ()) を read () の 前 に 呼び出す こと で その よう な 動作 を 実現 でき ます : 
バージョン 2 . 4 で 変更 さ れ た 仕様 : うまく 解析 でき た ファイル 名 の リスト を 返す 
fp で 与え られる ファイル か ファイル の よう な オブジェクト を 読み込ん で 構文 解析 し ます ( readline () メソッド だけ を 使い ます )。 
もし filename が 省略 さ れ て fp が name 属性 を 持っ て いれ ば filename の 代わり に 使わ れ ます 。 
ファイル 名 の 初期 値 は "???" です 。 get 
section の option を 整数 として 評価 する 関数 です 。 
section の option を 浮動 小数点 数 として 評価 する 関数 です 。 
指定 し た section の option 値 を ブール 値 に 型 強制 する 便宜 メソッド です 。 
option として 受理 できる 値 は 、 真 ( True ) として は " 1 "、 " yes "、 " true "、 " on " 、 偽 ( False ) として は " 0 "、 " no "、 " false "、 " off " です 。 
これら の 文字 列 値 に対して は 大文字 小文字 の 区別 を し ませ ん 。 
その他 の 値 の 場合 に は ValueError を 送出 し ます 。 
与え られ た section の それぞれ の オプション について ( name , value ) ペア の リスト を 返し ます 。 
与え られ た セクション が 存在 し て いれ ば 、 オプション を 指定 さ れ た 値 に 設定 し ます 。 セクション が 存在 し なけれ ば NoSectionError を 発生 さ せ ます 。 
RawConfigParser ( あるいは raw パラメータ を セット し た ConfigParser ) を 文字 列 型 で ない 値 の 内部 的 な 格納 場所 として 使う こと は 可能 です が 、 すべて の 機能 ( 置換 や ファイル へ の 出力 を 含む ) が サポート さ れる の は 文字 列 を 値 として 使っ た 場合 だけ です 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
設定 を 文字 列 表現 に 変換 し て ファイル オブジェクト に 書き出し ます 。 
この 文字 列 表現 は read () で 読み込む こと が でき ます 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
指定 さ れ た section から 指定 さ れ た option を 削除 し ます 。 セクション が 存在 し なけれ ば 、 NoSectionError を 起こし ます 。 
存在 する オプション を 削除 し た 時 は True を 、 そう で ない 時 は False を 返し ます 。 
バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 remove _ section 
指定 さ れ た section を 設定 から 削除 し ます 。 もし 指定 さ れ た セクション が 存在 すれ ば True 、 そう で なけれ ば False を 返し ます 。 
入力 ファイル 中 に 見つかっ た オプション 名 か , クライアントコード から 渡さ れ た オプション 名 option を , 内部 で 利用 する 形式 に 変換 し ます 。 
デフォルト で は option を 全て 小文字 に 変換 し た 名前 が 返さ れ ます 。 
サブルクラス で は この 関数 を オーバーライド する こと で この 振舞い を 替える こと が でき ます 。 たとえば 、 この メソッド を str () に 設定 する こと で 大 小文字 の 差 を 区別 する よう に 変更 する こと が でき ます 。 
Repr インスタンス は 様々 な オブジェクト 型 の 表現 に サイズ 制限 を 与える ため に 使える いくつ か の メンバー と 、 特定 の オブジェクト 型 を 書式 化 する メソッド を 提供 し ます 。 
再帰 的 な 表現 を 作る 場合 の 深 さ 制限 。 
デフォルト は 6 です 。 
指定 さ れ た オブジェクト 型 に対する エントリ 表現 の 数 について の 制限 。 
長 整数 の 表現 の おける 文字数 の 最大 値 。 
中央 の 数字 が 抜け落ち ます 。 
デフォルト は 40 です 。 
文字 列 の 表現 における 文字数 の 制限 。 
文字 列 の `` 通常 の '' 表現 は 文字 の 材料 だ という こと に 注意 し て ください : 表現 に エスケープ シーケンス が 必要 と さ れる 場合 は 、 表現 が 短縮 さ れ た とき に これら は マングル さ れ ます 。 
デフォルト は 30 です 。 
この 制限 は Repr オブジェクト に 利用 できる 特定 の 書式 化 メソッド が ない オブジェクト 型 の サイズ を コントロール する ため に 使わ れ ます 。 maxstring と 同じ よう な やり方 で 適用 さ れ ます 。 
デフォルト は 20 です 。 
インスタンス が 強制 する 書式 化 を 使う 組み込み repr () と 等価 な もの 。 
repr () が 使う 再帰 的 な 実装 。 
これ は どの 書式 化 メソッド を 呼び出す か を 決定 する ため に obj の 型 を 使い 、 それ を obj と level に 渡し ます 。 
再帰 呼び出し において level の 値 に対して 
level - 1 を 与える 再帰 的 な 書式 化 を 実行 する ため に 、 型 に 固有 の メソッド は repr 1 () を 呼び出し ます 。 
型名 に 基づく 名前 を もつ メソッド として 、 特定 の 型 に対する 書式 化 メソッド は 実装 さ れ ます 。 
メソッド 名 で は 、 type は string . join ( string . split ( type ( obj ).__ name __, '_')) に 置き換え られ ます 。 これら の メソッド へ の ディスパッチ は repr 1 () によって 処理 さ れ ます 。 
再帰 的 に 値 の 書式 を 整える 必要 が ある 型 固有 の メソッド は 、 " self . repr 1 ( subobj , level - 1 )" を 呼び出し ます 。 
次 の 例 は 最低限 必要 な メールアドレス (` To ' と ` From ') を 含ん だ メッセージ を 送信 する もの です 。 
この 例 で は RFC 822 ヘッダ の 加工 も し て い ませ ん 。 
メッセージ に 含ま れる ヘッダ は 、 メッセージ に 含ま れる 必要 が あり 、 特に 、 明確 な ' To '、 と ' From ' アドレス は メッセージ ヘッダ に 含ま れ て いる 必要 が あり ます 。 
SMTP クラス インスタンス は 次 の メソッド を 提供 し ます : 
コネクション 間 で やりとり さ れる メッセージ 出力 の レベル を セット し ます 。 
メッセージ の 冗長 さ は level に 応じ て 決まり ます 。 
ホスト 名 と ポート 番号 を もと に 接続 し ます 。 
サーバ へ コマンド cmd を 送信 し ます 。 
応答 待ち の とき に 、 サーバ へ の コネクション が 失わ れる と 、 SMTPServerDisconnected が 上がり ます 。 
SMTP サーバ に " HELO " コマンド で 身元 を 示し ます 。 
デフォルト で は hostname 引数 は ローカル ホスト を 指し ます 。 
通常 は sendmail () が 呼び だす ため 、 これ を 明示 的 に 呼び出す 必要 は あり ませ ん 。 
" EHLO " を 利用 し 、 ESMTP サーバ に 身元 を 明かし ます 。 
デフォルト で は hostname 引数 は ローカル ホスト を 指し ます 。 
また 、 ESMTP オプション の ため に 応答 を 調べ た もの は 、 has _ extn () に 備え て 保存 さ れ ます 。 
has _ extn () を メール を 送信 する 前 に 使わ ない 限り 、 明示 的 に この メソッド を 呼び出す 必要 が ある べき で は なく 、 sendmail () が 必要 と し た 場合 に 呼ば れ ます 。 
、 has _ extn 
name が 拡張 SMTP サービス セット に 含ま れ て いる 場合 に は True を 返し 、 そう で なけれ ば False を 返し ます 。 大 小文字 は 区別 さ れ ませ ん 。 
" VRFY " を 利用 し て SMTP サーバ に アドレス の 妥当 性 を チェック し ます 。 妥当 で ある 場合 は コード 250 と 完全 な RFC 822 アドレス ( 人名 ) の タプル を 返し ます 。 
それ 以外 の 場合 は 、 400 以上 の エラーコード と エラー 文字 列 を 返し ます 。 
注意 : ほとんど の サイト は スパマー の 裏 を かく ため に SMTP の " VRFY " は 使用 不可 に なっ て い ます 。 
サーバ が " HELO " に 返答 でき なかっ た 。 
サーバ が ユーザ 名 / パスワード で の 認証 に 失敗 し た 。 
どんな 認証 方法 も 見付から なかっ た 。 
TLS ( Transport Layer Security ) モード で SMTP コネクション を 出し 、 全て の SMTP コマンド は 暗号 化 さ れ ます 。 
これ は ehlo () を もう一度 呼び だす とき に する べき です 。 
keyfile と certfile が 提供 さ れ た 場合 に 、 
モジュール の ssl () 関数 が 通る よう に なり ます 。 
メール を 送信 し ます 。 
必要 な 引数 は RFC 822 の from アドレス 文字 列 、 RFC 822 の to アドレス 文字 列 の リスト 、 メッセージ 文字 列 です 。 送信 側 は " MAIL FROM " コマンド で 使用 さ れる mail _ options の ESMTP オプション (" 8 bitmime " の よう な ) の リスト を 得る かも しれ ませ ん 。 
全て の " RCPT " コマンド で 使わ れる べき ESMTP オプション ( 例えば " DSN " コマンド ) は 、 rcpt _ options を通して 利用 する こと が でき ます 。 
( も し 送信 先 別 に ESMTP オプション を 使う 必要 が あれ ば 、 メッセージ を 送る ため に mail 、 rcpt 、 data といった 下位 レベル の メソッド を 使う 必要 が あり ます 。 ) 
注意 : 配送 エージェント は from _ addr 、 to _ addrs 引数 を 使い 、 メッセージ の エンベロープ を 構成 し ます 。 SMTP は メッセージ ヘッダ を 修正 し ませ ん 。 
まだ セッション が 無い 場合 は 、 " EHLO " または " HELO " コマンド で セッション を 作り ます 。 ESMTP の 場合 は " EHLO " が 先 に 試さ れ ます 。 
また 、 サーバ が ESMTP 対応 なら ば 、 メッセージ サイズ と それぞれ 指定 さ れ た オプション も 渡し ます 。 
( feature オプション が あれ ば サーバ の 広告 を セット し ます )" EHLO " が 失敗 し た 場合 は 、 ESMTP オプション の 無い " HELO " が 試さ れ ます 。 この メソッド は メール が 受け入れ られ た とき は 普通 に 戻り ます が 、 そう で ない 場合 は 例外 を 投げ ます 。 
この メソッド が 例外 を 投げ られ なけれ ば 、 誰か が 送信 し た メール を 得る べき です 。 
また 、 例外 を 投げ れ なかっ た 場合 は 、 拒絶 さ れ た 受取 人 ごと へ の 1 つ の エントリー と共に 、 辞書 を 返し ます 。 
各 エントリー は 、 サーバー によって 送ら れ た SMTP エラーコード および エラーメッセージ の タプル を 含ん で い ます 。 この メソッド は 次 の 例外 を 上げる こと が あり ます : 
全て の 受信 を 拒否 さ れ 、 誰 に も メール が 届け られ ませ ん でし た 。 
例外 オブジェクト の recipients 属性 は 、 受信 拒否 について の 情報 の 入っ た 辞書 オブジェクト です 。 ( 辞書 は 少なくとも 一つ は 受信 さ れ た とき に 似 て い ます )。 
サーバ が " HELP " に 返答 し ませ ん でし た 。 
サーバ が from _ addr を 弾き まし た 。 
サーバ が 予期 し ない エラーコード を 返し まし た 。 ( 受信 拒否 以外 ) 
また 、 この 他 の 注意 として 、 例外 が 上がっ た 後 も コネクション は 開い た まま に なっ て い ます 。 
SMTP セッション を 終了 し 、 コネクション を 閉じ ます 。 
下位 レベル の メソッド は 標準 SMTP / ESMTP コマンド " HELP "、 " RSET "、" NOOP "、" MAIL "、" RCPT "、" DATA " に 対応 し て い ます 。 
通常 これら は 直接 呼ぶ 必要 は なく 、 また 、 ドキュメント も あり ませ ん 。 
詳細 は モジュール の コード を 調べ て ください 。 
SafeConfigParser は ConfigParser と 同様 の 拡張 インター フェイス を もっ て い ます が 、 以下 の よう な 機能 が 追加 さ れ て い ます : 
open () によって 返さ れる Wave _ read オブジェクト に は 、 以下 の メソッド が あり ます : 
ストリーム を 閉じ 、 この オブジェクト の インスタンス を 使用 でき なく し ます 。 
これ は オブジェクト の ガベージコレクション 時 に 自動的 に 呼び出さ れ ます 。 
オーディオ チャンネル 数 ( モノラル なら 1 、 ステレオ なら 2 ) を 返し ます 。 
サンプル サイズ を バイト 数 で 返し ます 。 
サンプリング レート を 返し ます 。 
オーディオ フレーム 数 を 返し ます 。 
圧縮 形式 を 返し ます (' NONE ' だけ が サポート さ れ て いる 形式 です )。 
getcomptype () を 人 に 判読 可能 な 形 に し た もの です 。 通常 、 ' NONE ' に対して ' not compressed ' が 返さ れ ます 。 
get *() メソッド が 返す の と 同じ ( nchannels , sampwidth , framerate , nframes , comptype , compname ) の タプル を 返し ます 。 
現在 の ポインタ から n 個 の オーディオ フレーム の 値 を 読み込ん で 、 バイト ごと に 文字 に 変換 し て 文字 列 を 返し ます 。 
ファイル の ポインタ を オーディオ ストリーム の 先頭 に 戻し ます 。 
以下 の 2 つ の メソッド は 
モジュール と の 互換 性 の ため に 定義 さ れ て い ます が 、 何 も 面白い こと は し ませ ん 。 
None を 返し ます 。 
エラー を 発生 し ます 。 
以下 の 2 つ の メソッド は 共通 の `` 位置 '' を 定義 し て い ます 。 `` 位置 '' は 他 の 関数 と は 独立 し て 実装 さ れ て い ます 。 
ファイル の ポインタ を 指定 し た 位置 に 設定 し ます 。 
ファイル の 現在 の ポインタ 位置 を 返し ます 。 
open () によって 返さ れる Wave _ write オブジェクト に は 、 以下 の メソッド が あり ます : 
nframes が 正しい か 確認 し て 、 ファイル を 閉じ ます 。 この メソッド は オブジェクト の 削除 時 に 呼び出さ れ ます 。 
チャンネル 数 を 設定 し ます 。 
サンプル サイズ を n バイト に 設定 し ます 。 
サンプリング レート を n に 設定 し ます 。 
フレーム 数 を n に 設定 し ます 。 
あと から フレーム が 書き込ま れる と フレーム 数 は 変更 さ れ ます 。 
圧縮 形式 と その 記述 を 設定 し ます 。 
tuple は ( nchannels , sampwidth , framerate , nframes , comptype , compname ) で 、 それぞれ set *() の メソッド の 値 に ふさわしい もの で なけれ ば なり ませ ん 。 
全て の 変数 を 設定 し ます 。 
ファイル の 中 の 現在 位置 を 返し ます 。 Wave _ read . tell () と Wave _ read . setpos () メソッド で お断り し た こと が この メソッド に も 当てはまり ます 。 
nframes の 修正 なし に オーディオ フレーム を 書き込み ます 。 
オーディオ フレーム を 書き込ん で nframes を 修正 し ます 。 
writeframes () や writeframesraw () メソッド を 呼び出し た あと で 、 どんな パラメータ を 設定 しよ う として も 不正 と なる こと に 注意 し て 下さい 。 そうすると wave . Error を 発生 し ます 。 
Python ドキュメント について 
Python ドキュメント は 、 もともと Guido van Rossum 一 人 の 手 で 書か れ た もの です が 、 ここ 数 年 で は だんだん と Python コミュニティ 自体 の 取り組み に なっ て き て い ます 。 
ドキュメント に関する 一般 的 な コメント や 質問 は 、 電子 メール なら docs @ python . org に 送っ て ください 。 
この ドキュメント に 書か れ て いる 情報 の 使い方 に関する 質問 は 、 Python の ニュース グループ 、 comp . lang . python 、 または Python メーリングリスト ( ニュース グループ と 橋渡し さ れ て い て 、 同じ 情報 が 流れ ます ) に 送っ て ください 。 
上 で 挙げ た チャネル で は いずれ も 、 決して HTML メール を 送ら ない よう に し て ください 。 よろしく お願い し ます 。 
ユーザ 名 / パスワード を 取得 し 、 再度 サーバ へ の リクエスト を 試みる こと で 、 サーバ から の 認証 リクエスト を 処理 し ます 。 
authreq は リクエスト において レルム に関する 情報 が 含ま れ て いる ヘッダ の 名前 、 host は 認証 を 行う 対象 の ホスト 名 、 req は ( 失敗 し た ) Request オブジェクト 、 そして headers は エラー ヘッダ で なく て は なり ませ ん 。 
6 . 6 バッファ プロトコル ( buffer protocol ) 
6 . 5 イテレータプロトコル ( iterator protocol ) 
6 . 抽象 オブジェクト レイヤ ( abstract objects 
7 . 具象 オブジェクト ( concrete object ) 
文字 ベース の 入力 として 使える 読み出し 専用 メモリ 上 の 位置 へ の ポインタ を 返し ます 。 
obj 引数 は 単一 セグメント から なる 文字 バッファ インタフェース を サポート し て い なけれ ば なり ませ ん 。 
成功 する と 0 を 返し 、 buffer を メモリ の 位置 に 、 buffer _ len を バッファ の 長 さ に 設定 し ます 。 
エラー の 際 に は - 1 を 返し 、 TypeError を セット し ます 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
任意 の データ を 収め た 読み出し 専用 の メモリ 上 の 位置 へ の ポインタ を 返し ます 。 
obj 引数 は 単一 セグメント から なる 読み出し 可能 バッファ インタフェース を サポート し て い なけれ ば なり ませ ん 。 
成功 する と 0 を 返し 、 buffer を メモリ の 位置 に 、 buffer _ len を バッファ の 長 さ に 設定 し ます 。 
エラー の 際 に は - 1 を 返し 、 TypeError を セット し ます 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
o が 単一 セグメント から なる 読み出し 可能 バッファ インタフェース を サポート し て いる 場合 に 1 を 返し ます 。 
それ 以外 の 場合 に は 0 を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
書き込み 可能 な メモリ 上 の 位置 へ の ポインタ を 返し ます 。 
obj 引数 は 単一 セグメント から なる 文字 バッファ インタフェース を サポート し て い なけれ ば なり ませ ん 。 
成功 する と 0 を 返し 、 buffer を メモリ の 位置 に 、 buffer _ len を バッファ の 長 さ に 設定 し ます 。 
エラー の 際 に は - 1 を 返し 、 TypeError を セット し ます 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
authreq は リクエスト において レルム に関する 情報 が 含ま れ て いる ヘッダ の 名前 、 host は 認証 を 行う 対象 の ホスト 名 、 req は ( 失敗 し た ) Request オブジェクト 、 そして headers は エラー ヘッダ で なく て は なり ませ ん 。 
6 . 抽象 オブジェクト レイヤ ( abstract objects layer ) 
5 . 5 引数 の 解釈 と 値 の 構築 
6 . 1 オブジェクト プロトコル ( object protocol ) 
6 . 抽象 オブジェクト レイヤ ( abstract objects layer ) 
この 章 で 説明 する 関数 は 、 Python オブジェクト と の やりとり を 型 や ( 数値 型 全て 、 シーケンス 型 全て といった ) 大まか な オブジェクト 型 の 種類 に 関係 なく 行い ます 。 
関数 を 適用 対象 で ない オブジェクト に対して 使っ た 場合 、 Python の 例外 が 送出 さ れる こと に なり ます 。 
6 . 1 オブジェクト プロトコル ( object protocol ) 
6 . 2 数値 型 プロトコル ( number protocol ) 
6 . 3 シーケンス 型 プロトコル ( sequence protocol ) 
6 . 4 マップ 型 プロトコル ( mapping protocol ) 
6 . 1 オブジェクト プロトコル ( object protocol ) 
Jes 俍 Cea Avi 
Gerhard H 醺 ing 
Fran 槢 is Pinard 
Hern 睹 Mart  ez Foffani 
。 「 ・ ィ 。 シ ・ 讌 ッ・ゥ 。 「 隕 ・ ィ・オ・ハ・  「  ェエ  サ 、 ヒ 、 ハ 、 熙 ソ 、 、 ハ 蓮 
AddressList インスタンス は 以下 の メソッド を 持ち ます : 
アドレス リスト 中 の アドレス の 数 を 返し ます 。 
アドレス リスト の 正規 化 ( canonicalize ) さ れ た 文字 列 表現 を 返し ます 。 
アドレス は カンマ で 分割 さ れ た " name " host @ domain 形式 に なり ます 。 
二つ の AddressList 被 演算 子中 の 双方 に 含ま れる アドレス について 、 重複 を 除い た ( 集合 和 の ) 全て の アドレス を 含む 新た な AddressList インスタンス を 返し ます 。 
__ add __() の インプレース 演算 版 です ; AddressList インスタンス と 右側 値 alist と の 集合 和 を とり 、 その 結果 を インスタンス 自体 と 置き換え ます 。 
左側 値 の AddressList インスタンス の アドレス の うち 、 右側 値 中 に 含ま れ て い ない もの 全て を 含む ( 集合 差分 の ) 新た な AddressList インスタンス を 返し ます 。 
__ sub __() の インプレース 演算 版 で 、 alist に も 含ま れ て いる アドレス を 削除 し ます 。 
最後 に 、 AddressList インスタンス は public な インスタンス 変数 を 一つ 持ち ます : 
アドレス あたり 一つ の 文字 列 ペア で 構成 さ れる タプル から なる リスト です 。 
各 メンバ 中 で は 、 最初 の 要素 は 正規 化 さ れ た 名前 部分 で 、 二つ 目 は 実際 の 配送 アドレス ("@" で 分割 さ れ た ユーザ 名 と ホスト . ドメイン から なる ペア ) です 。 
8 . 3 高度 な デバッガ サポート ( advanced debugger support ) 
8 . 2 プロファイル と トレース ( profiling and 
8 . 初期 化 ( initialization )、 終了 処理 ( finalization )、 スレッド 
9 . メモリ 管理 
以下 の 関数 は 高度 な デバッグ ツール で の 使用 の ため だけ の もの です 。 
インタプリタ interp に 関連付け られ て いる スレッド から なる リスト の うち 、 先頭 に ある PyThreadState オブジェクト を 返し ます 。 
AppleEvent ハンドラ を インストール し ます 。 classe と type は 4 文字 の OSA クラス と タイプ の 指定 子 で 、 ワイルドカード '****' も 使え ます 。 
対応 する AppleEvent を 受ける と パラメータ が デコード さ れ 、 与え た コール バック が 呼び出さ れ ます 。 
与え た コール バック は 、 OSA ダイレクトオブジェクト を 1 番目 の パラメータ として 呼び出さ れ ます 。 
他 の パラメータ は 4 文字 の 指定 子 を 名前 に し た キーワード 引数 として 渡さ れ ます 。 
他 に 3 つ の キーワード ・ パラメータ が 渡さ れ ます 。 つまり 、 _ class と _ type は クラス と タイプ 指定 子 で 、 _ attributes は AppleEvent 属性 を 持つ 辞書 です 。 
与え た メソッド の 返り 値 は aetools . packevent () で パック さ れ 、 リプライ として 送ら れ ます 。 
現在 の クラス 設計 に は いくつ か 重大 な 問題 が ある こと に 注意 し て ください 。 
引数 に 名前 で は ない 4 文字 の 指定 子 を 持つ AppleEvent は まだ 実装 さ れ て い ない し 、 イベント の 送信 側 に エラー を 返す こと も でき ませ ん 。 
この 問題 は 将来 の リリース まで 先送り に さ れ て い ます 。 
newconfig () で 返さ れる コンフィギュレーションオブジェクト に は 以下 の メソッド が あり ます : 
キュー サイズ を 返し ます 。 
キュー サイズ を 設定 し ます 。 
サンプル サイズ を 返し ます 。 
サンプル サイズ を 設定 し ます 。 
チャンネル 数 を 返し ます 。 
チャンネル 数 を 設定 し ます 。 
サンプル の フォーマット を 返し ます 。 
サンプル の フォーマット を 設定 し ます 。 
浮動 小数点 数 で サンプル データ の 最大 値 を 返し ます 。 
浮動 小数点 数 で サンプル データ の 最大 値 を 設定 し ます 。 
openport () で 返さ れる ポート オブジェクト に は 以下 の メソッド が あり ます : 
ポート を 閉じ ます 。 
ファイル ディスクリプタ を 整数 で 返し ます 。 
バッファ に 存在 する サンプル の 数 を 返し ます 。 
バッファ の 空き に 入れる こと の できる サンプル の 数 を 返し ます 。 
必要 なら ブロック し て 、 キュー から 指定 の サンプル 数 を 読み込み ます 。 生 データ を 文字 列 として ( 例えば 、 サンプル サイズ が 2 バイト なら サンプル 当たり 2 バイト が big - endian ( high byte 、 low byte ) で ) 返し ます 。 
必要 なら ブロック し て 、 キュー に サンプル を 書き込み ます 。 
サンプル は readsamps () で 返さ れる 値 の よう に エン コード さ れ て い なけれ ば なり ませ ん 。 
` fill point ' を 返し ます 。 
` fill point ' を 設定 し ます 。 
現在 の ポート の コンフィギュレーション を 含ん だ コンフィギュレーションオブジェクト を 返し ます 。 
コンフィギュレーション を 引数 に 取り 、 その コンフィギュレーション に 設定 し ます 。 
最後 の エラー について の ステイタス の 情報 を 返し ます 。 
エイリアス ( Alias ) レコード の 生 データ です 。 リソース へ の 書き込み や 他 の プログラム へ の 転送 に 適し た 形式 です 。 
エイリアス を 解決 し ます 。 
エイリアス が 相対 エイリアス として 作成 さ れ て いる 場合 は 、 どこ から の 相対 か を 示す ファイル を 渡さ ね ば なり ませ ん 。 
エイリアス が 指し示す ファイル の FSSpec と 、 Alias オブジェクト 自体 が 検索 処理 中 に 変更 さ れ た か どう か を 示す フラグ を 返し ます 。 
ファイル は 実在 し ない が 、 ファイル まで の パス は 実在 する 場合 、 有効 な FSSpec を 返し ます 。 
C の ルーチン GetAliasInfo () へ の インタフェース です 。 
エイリアス を 、 file に 指定 し た ファイル を 指す よう に 更新 し ます 。 
file 2 を 指定 し て いれ ば 、 相対 エイリアス を 作成 し ます 。 
今 の ところ 、 リソース は Alias オブジェクト として 直接 操作 でき ませ ん 。 
その ため 、 Update () を 呼ん だ 後 か 、 Resolve () で エイリアス に 変更 が あっ た と 分かっ た 後 は 、 Python プログラム 側 で Alias オブジェクト から data の 値 を 取りだし 、 リソース を 修正 し て おく 責任 が あり ます 。 
10 . 1 オブジェクト を ヒープ 上 に メモリ 確保 する 
10 . オブジェクト 実装 サポート ( object implementation 
10 . 2 共通 の オブジェクト 構造 体 ( common object 
戻り 値 : 
新た な 参照 . 
借り た 参照 . 
新た に メモリ 確保 さ れ た オブジェクト op に対し 、 型 と 初期 状態 で の 参照 ( initial reference ) を 初期 化 し ます 。 
初期 化 さ れ た オブジェクト を 返し ます 。 
type から その オブジェクト が 循環 参照 ガベージ 検出 の 機能 を 有する 場合 、 検出 機構 が 監視 対象 と する オブジェクト の セット に 追加 さ れ ます 。 オブジェクト の 他 の フィールド に は 影響 を 及ぼし ませ ん 。 
PyObject _ Init () の 全て の 処理 を 行い 、 可変 サイズ オブジェクト の 場合 に は 長 さ 情報 も 初期 化 し ます 。 
C 構造 体型 TYPE と Python 型 オブジェクト type を 使っ て 新た な Python オブジェクト を メモリ 確保 し ます 。 
Python オブジェクト ヘッダ で 定義 さ れ て い ない フィールド は 初期 化 さ れ ませ ん ; オブジェクト の 参照 カウント は 1 に なり ます 。 
メモリ 確保 の サイズ は 型 オブジェクト の tp _ basicsize で 決定 し ます 。 
Python オブジェクト ヘッダ で 定義 さ れ て い ない フィールド は 初期 化 さ れ ませ ん 。 
確保 さ れ た メモリ は 、 TYPE 構造 体 に 加え 、 vartype の tp _ itemsize フィールド で 指定 さ れ て いる サイズ 中 の size フィールド を 収容 でき ます 。 
この 関数 は 、 例えば タプル の よう に 生成 時 に サイズ を 決定 できる オブジェクト を 実装 する 際 に 便利 です 。 
一連 の 複数 の フィールド に対する アロケーション 操作 を 一つ に し て 埋め込む と 、 アロケーション 回数 が 減り 、 メモリ 管理 の 処理 効率 が 向上 し ます 。 
PyObject _ New () や PyObject _ NewVar () で 確保 さ れ た メモリ を 解放 し ます 。 
この 関数 は 、 通常 オブジェクト の 型 に 指定 さ れ て いる tp _ dealloc ハンドラ 内 で 呼び出し ます 。 
この 関数 を 呼び出し た 後 で は 、 オブジェクト の メモリ 領域 は もはや 有効 な Python オブジェクト を 表現 し て は い ない ので 、 オブジェクト の フィールド に対して アクセス し て は なり ませ ん 。 
安全 性 と 引き換え に パフォーマンス を 高める ため の PyObject _ New () の マクロ 版 です 。 
type が NULL か どう か チェック し ませ ん 。 
安全 性 と 引き換え に パフォーマンス を 高める ため の PyObject _ NewVar () の マクロ 版 です 。 
type が NULL か どう か チェック し ませ ん 。 
PyObject _ Del () の マクロ 版 です 。 
name と 関数 の テーブル に 基づい て 新た な モジュール オブジェクト を 生成 し 、 生成 さ れ た モジュール オブジェクト を 返し ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 以前 の バージョン の Python で は 、 methods 引数 の 値 として NULL を サポート し て い ませ ん でし た 
doc が NULL で ない 場合 、 モジュール の docstring として 使わ れ ます 。 
self が NULL で ない 場合 、 モジュール 内 の 各 関数 の 第 一 引数 として 渡さ れ ます ( NULL の 時 に は 第 一 引数 も NULL に なり ます )。 
( この 関数 は 実験 的 な 機能 の ため に 追加 さ れ た もの で 、 現在 の Python の バージョン で 使わ れ て は い ない はず です 。 
) apiver に 渡し て よい 値 は 、 PYTHON _ API _ VERSION で 定義 さ れ て いる 定数 だけ です 。 
注意 : この 関数 の ほとんど の 用途 は 、 代わり に Py _ InitModule 3 () を 使える はず です ; 本当に この 関数 を 使い たい とき に だけ 利用 し て ください 
Python から は None に 見える オブジェクト です 。 
この 値 へ の アクセス は 、 この オブジェクト へ の ポインタ を 評価 する Py _ None マクロ を 使わ ね ば なり ませ ん 。 
6 . 汎用 オペレーティングシステム サービス 
本章 に 記述 さ れ た モジュール は 、 ファイル の 取り扱い や 時間 計測 の よう な ( ほぼ ) すべて の オペレーティングシステム で 利用 可能 な 機能 に インターフェース を 提供 し ます 。 
これら の インターフェース は 、 Unix もしくは C の インターフェース を 基 に 作ら れ ます が 、 ほとんど の 他 の システム で 同様 に 利用 可能 です 。 
概要 を 以下 に 記述 し ます 。 
雑多 な オペレーティングシステム インタフェース 。 
共通 の パス 名 操作 。 
キャッシュ メカニズム を 備え た ディレクトリ 一覧 生成 。 
ファイル の stat を 調べ 、 その 結果 を 記憶 し ます 。 
os . statvfs () の 返す 値 を 解釈 する ため に 使わ れる 定数 群 。 
ファイル 群 を 効率 的 に 比較 し ます 。 
サブ プロセス 管理 
アクセス 可能 な I / O ストリーム を 持つ 子 プロセス 生成 。 
基本 的 な 日付 型 および 時間 型 。 
時刻 データ へ の アクセス と 変換 
一般 的 な 目的 の ため の イベントスケジューラ 
排他 制御 の ため の ロック と キュー 
ポータブル な パスワード と ユーザー ID の 検索 
可 搬性 の ある 端末 操作 を 提供 する curses ライブラリ へ の インタフェース . 
curses ウィンドウ 内 で の Emacs ライク な 入力 編集 機能 。 
curses プログラム の ため の 端末 設定 ラッパ 。 
ASCII 文字 に関する 定数 および 集合 帰属 関数 。 
curses ウィンドウ に 深 さ の 概念 を 追加 する パネル スタック 拡張 。 
ポータブル な コマンドラインオプション の パーザ 。 長短 の 両方 の 形式 を サポート し ます 。 
より 便利 で 柔軟 性 に 富ん だ 強力 な コマンド ライン 解析 ライブラリ 
一時 的 な ファイル や ディレクトリ を 生成 。 
標準 の errno システム シンボル 。 
Unix シェル 形式 の パス 名 の パターン 展開 。 
Unix シェル 形式 の ファイル 名 の パターン マッチ 。 
コピー を 含む 高 レベル な ファイル 操作 。 
国際 化 サービス 。 
多 言語 対応 に関する 国際 化 サービス 。 
PEP 282 に 基づく Python 用 の ロギング モジュール 。 
実行 中 プラットフォーム から できるだけ 多く の 固有 情報 を 取得 する 
2 標準 的 な ビルド・インストール 作業 
3 . 1 別 の 場所 へ の インストール : home スキーム 
しばしば 、 サード パーティ 製 Python モジュール を インストール する ため の 標準 の 場所 以外 に モジュール を インストール し なけれ ば なら なかっ たり 、 単に そう し たく なる とき が あり ます 。 
例えば Unix システム で は 、 標準 の サード パーティ 製 モジュール ディレクトリ に対する 書き込み 権限 を 持っ て い ない かも しれ ませ ん 。 
または 、 ある モジュール を 、 ローカル で 使っ て いる Python に 標準 の モジュール の 一部 として 組み込む 前 に テスト し て み たい と 思う かも しれ ませ ん 。 
既存 の 配布 物 を アップ グレード する 際 に は 特に そう でしょ う : 実際 に アップ グレード する 前 に 、 既存 の スクリプト の 基本 と なる 部分 が 新た な バージョン で も 動作 する か 確認 し たい はず です 。 Distutils の install コマンド は 、 別 の 場所 へ 配布 物 を インストール する 作業 を 単純 で 苦労 の ない 作業 に する よう に 設計 さ れ て い ます 。 
基本 的 な アイデア は 、 インストール 先 の ベース ディレクトリ を 指定 し て おき 、 install コマンド が その ベース ディレクトリ 下 に ファイル 群 を インストール する ため の 一連 の ディレクトリ ( インストール スキーム : installation scheme ) を 作成 する という もの です 。 
詳細 は プラットフォーム によって 異なる ので 、 以下 の 節 から 自分 の プラットフォーム に 当てはまる もの を 読ん で ください 。 
`` home スキーム '' の 背後 に ある 考え方 は 、 Python モジュール を 個人 用 の モジュール 置き場 で ビルド し 、 維持 する という もの です 。 
この スキーム の 名前 は Unix の 「 ホーム 」 ディレクトリ の 概念 から とり まし た 。 というのも 、 Unix の ユーザ にとって 、 自分 の ホーム ディレクトリ を / usr / や / usr / local / の よう に レイアウト する の は よく ある こと だ から です 。 
と は いえ 、 この スキーム は どの オペレーティングシステム の ユーザ で も 使え ます 。 新た な モジュール の インストール は 単純 で 、 
python setup . py install -- home = dir の よう に し ます 。 
この とき 、 -- home オプション を 使っ て ディレクトリ を 指定 し ます 。 
面倒 臭 がり の 人 は 、 単に チルダ (~) を タイプ する だけ で かまい ませ ん ; install コマンド が チルダ を ホーム ディレクトリ に 展開 し て くれ ます : 
-- home オプション は 、 インストール の ベース ディレクトリ を 指定 し ます 。 
ファイル は インストール ベース 下 の 以下 の ディレクトリ に 保存 さ れ ます : 
ファイル の 種類 
インストール 先 ディレクトリ 
オーバライド する ため の オプション 
pure モジュール 配布 物 
非 pure モジュール 配布 物 
スクリプト 
データ 
バージョン 2 . 4 で 変更 さ れ た 仕様 :-- home は Unix で しか サポート さ れ て い ませ ん でし た 
ある インストール 済み の Python を 使っ て モジュール の ビルド / インストール を ( 例えば setup スクリプト を 実行 し て ) 行い たい けれども 、 別 の インストール 済み の Python の サード パーティ 製 モジュール 置き場 ( あるいは 、 そう 見える よう な ディレクトリ 構造 ) に 、 ビルド さ れ た モジュール を インストール し たい 場合 に は 、 `` prefix スキーム '' が 便利 です 。 
そんな 作業 は まったく ありえ そう に ない 、 と 思う なら 、 確か に その 通り です -- `` home スキーム '' を 先 に 説明 し た の も その ため です 。 
と は いえ 、 prefix スキーム が 有用 な ケース は 少なくとも 二つ あり ます 。 まず 、 多く の Linux ディストリビューション は 、 Python を / usr / local で は なく / usr に 置い て いる こと を 考え て ください 。 
この 場合 は 、 Python は ローカル の 計算 機 ごと の アドオン ( add - on ) で は なく 、 `` システム '' の 一部 と なっ て いる ので 、 / usr に 置く の は 全く 正当 な こと です 。 
しかしながら 、 Python モジュール を ソース コード から インストール し て いる と 、 モジュール を / usr / lib / python 2 . X 
では なく / usr / local / lib / python 2 . X 
に 置き たい と 思う かも しれ ませ ん 。 
これ を 行う に は 
から モジュール を 探す でしょ う が 、 モジュール は 別 の 場所 、 例えば / mnt /@ server / export / lib / python 2 . X 
に インストール し なけれ ば なら ない かも しれ ませ ん 。 
この 場合 に は 、 
の よう に し ます 。 どちら の 場合 も 、 -- prefix オプション で インストールベースディレクトリ を 決め 、 -- exec - prefix で プラットフォーム 固有 の ファイル 置き場 名 として 使う 、 プラットフォーム 固有 インストールベースディレクトリ を 決め ます 。 
( プラットフォーム 固有 の ファイル と は 、 現状 で は 単に 非 pure モジュール 配布 物 の こと を 意味 し ます が 、 C ライブラリ や バイナリ 実行 可能 形式 など に 拡張 さ れる かも しれ ませ ん 。 
) -- exec - prefix が 指定 さ れ て い なけれ ば 、 デフォルト の -- prefix に なり ます 。 
ファイル は 以下 の よう に インストール さ れ ます : 
-- prefix や -- exec - prefix が 実際 に 他 の インストール 済み Python の 場所 を 指し て いる 必要 は あり ませ ん ; 上 に 挙げ た ディレクトリ が まだ 存在 し なけれ ば 、 インストール 時 に 作成 さ れ ます 。 ちなみに 、 prefix スキーム が 重要 な 本当 の 理由 は 、 単に 標準 の Unix インストール が prefix スキーム を 使っ て いる から です 。 
ただし 、 その とき に は 、 -- prefix や -- exec - prefix は Python 自体 が sys . prefix や sys . exec _ prefix を 使っ て 決め ます 。 
という わけ で 、 読者 は prefix スキーム を 決して 使う こと は ある まい と 思っ て いる かも しれ ませ ん が 、 python setup . py install を オプション を 何 も つけ ず に 実行 し て いれ ば 、 常に prefix スキーム を 使っ て いる こと に なる の です 。 拡張 モジュール を 別 の インストール 済み Python に インストール し て も 、 拡張 モジュール の ビルド 方法 による 影響 を 受ける こと は あり ませ ん : 特に 、 拡張 モジュール を コンパイル する 際 に は 、 setup スクリプト を 実行 する 際 に 使う Python インタプリタ と 一緒 に インストール さ れ て いる Python ヘッダ ファイル ( Python . h と その 仲間 たち ) を 使い ます 。 
上 で 述べ て き た やり方 で インストール さ れ た 拡張 モジュール を 実行 する インタプリタ と 、 インタプリタ を ビルド する 際 に 用い た 別 の インタプリタ と の 互換 性 を 保証 する の は ユーザ の 責任 です 。 
これ を 行う に は 、 二つ の インタプリタ が 同じ バージョン の Python ( ビルド が 違っ て い たり 、 同じ ビルド の コピー という こと も あり 得 ます ) で ある か どう か を 確かめ ます 。 
( もちろん 、 -- prefix や -- exec - prefix が 別 の インストール 済み Python の 場所 すら 指し て い なけれ ば どうにも なり ませ ん 。 ) 
Windows は ユーザ の ホーム ディレクトリ という 概念 が なく 、 Windows 環境 下 で 標準 的 に インストール さ れ た Python は Unix より も 単純 な 構成 を し て いる ので 、 Windows で 追加 の パッケージ を 別 の 場所 に 入れる 場合 に は 、 伝統 的 に -- prefix が 使わ れ て き まし た 。 
と する と 、 モジュール を 現在 の ドライブ の TempPython ディレクトリ に インストール し ます インストールベースディレクトリ は 、 -- prefix オプション だけ で 決まり ます ; -- exec - prefix オプション は 、 Windows で は サポート さ れ て い ませ ん 。 ファイル は 以下 の よう な 構成 で インストール さ れ ます : 
2 ソース コード 配布 物 を 作成 する : sdist command 
1 distutils . core -- Distutils の コア 機能 
1 . 1 インクルードファイル 
1 . 2 オブジェクト 、 型 および 参照 カウント 
1 . 2 . 1 参照 カウント 
1 . 2 . 2 型 
1 . 3 例外 
1 . 4 Python の 埋め込み 
2 . 超 高 レベル レイヤ 
3 . 参照 カウント 
4 . 例外 処理 
4 . 1 標準 例外 
4 . 2 文字 列 例外 の 廃止 
5 . ユーティリティ 関数 
5 . 1 オペレーティングシステム 関連 の ユーティリティ 
5 . 2 プロセス 制御 
5 . 3 モジュール の import 
5 . 4 データ 整列 化 ( data marshalling ) の サポート 
5 . 5 引数 の 解釈 と 値 の 構築 
7 . 具象 オブジェクト ( concrete object ) レイヤ 
7 . 1 基本 オブジェクト ( fundamental object ) 
7 . 1 . 1 型 オブジェクト ( type object ) 
7 . 1 . 2 None オブジェクト 
7 . 2 数値 型 オブジェクト ( numeric object ) 
7 . 2 . 1 ( 通常 ) 整数 型 オブジェクト ( plain integer object ) 
7 . 2 . 2 Bool 型 オブジェクト 
7 . 2 . 3 長 整数 型 オブジェクト ( long integer object ) 
7 . 2 . 4 浮動 小数点 型 オブジェクト ( floating point object ) 
7 . 2 . 5 浮動 小数点 オブジェクト ( complex number object ) 
7 . 3 シーケンス オブジェクト ( sequence object ) 
7 . 3 . 1 文字 列 オブジェクト ( string object ) 
7 . 3 . 2 Unicode オブジェクト ( Unicode object ) 
7 . 3 . 4 タプルオブジェクト ( tuple object ) 
7 . 4 マップ 型 オブジェクト ( mapping object ) 
7 . 4 . 1 辞書 オブジェクト ( dictionary object ) 
7 . 5 その他 の オブジェクト 
7 . 5 . 1 ファイル オブジェクト ( file object ) 
7 . 5 . 2 インスタンス オブジェクト ( instance object ) 
7 . 5 . 3 メソッド オブジェクト ( method object ) 
7 . 5 . 4 モジュール オブジェクト ( module object ) 
7 . 5 . 5 イテレータオブジェクト ( iterator object ) 
7 . 5 . 6 デスクリプタ オブジェクト ( descriptor object ) 
7 . 5 . 7 スライス オブジェクト ( slice object ) 
7 . 5 . 8 弱 参照 オブジェクト ( weak reference object ) 
7 . 5 . 9 C オブジェクト ( CObject ) 
7 . 5 . 10 セル オブジェクト ( cell object ) 
7 . 5 . 11 ジェネレータオブジェクト 
7 . 5 . 12 DateTime オブジェクト 
8 . 初期 化 ( initialization )、 終了 処理 ( finalization )、 スレッド 
8 . 1 スレッド 状態 ( thread state ) と グローバル インタプリタ ロック ( global interpreter lock ) 
8 . 2 プロファイル と トレース ( profiling and tracing ) 
9 . 1 概要 
9 . 2 メモリ インタフェース 
9 . 3 例 
10 . オブジェクト 実装 サポート ( object implementation support ) 
10 . 2 共通 の オブジェクト 構造 体 ( common object structure ) 
10 . 3 型 オブジェクト 
10 . 4 マップ 型 オブジェクト 構造 体 ( mapping object structure ) 
10 . 5 数値 オブジェクト 構造 体 ( number object structure ) 
10 . 6 シーケンス オブジェクト 構造 体 ( sequence object structure ) 
10 . 7 バッファ オブジェクト 構造 体 ( buffer object structure ) 
10 . 8 イテレータプロトコル を サポート する 
10 . 9 循環 参照 ガベージコレクション を サポート する 
2 . 9 . 1 アプリケーション オブジェクト アプリケーション オブジェクト の メソッド は 各種 あり ます が 、 次 の メソッド を あげ て おき ます 。 
アプリケーション で メニュー を 使う 必要 が ある 場合 、 この メソッド を オーバーライド し ます 。 
属性 menubar に メニュー を 追加 し ます 。 
この メソッド を オーバーライド する こと で 、 アプリケーション の 説明 を 記述 する テキスト 文字 列 を 返し ます 。 
代わり に 、 do _ about () メソッド を オーバーライド すれ ば 、 もっと 凝っ た `` アバウト '' メッセージ を 出す 事 が でき ます 。 
この ルーチン が メインイベントループ で 、 作成 し た アプリケーション が 動き出す ため に は これ を 呼ぶ こと に なり ます 。 
代わり に self ._ quit () を 呼ん で ください 。 イベント ループ は 小さな パーツ に 分割 さ れ て い て 、 各々 を オーバーライド できる よう に なっ て い ます 。 
これら の メソッド は 、 デフォルト で ウィンドウ と ダイアログ や 、 ドラッグ と リサイズ の 操作 、 AppleEvent 、 非 FrameWork の ウィンドウ に関する ウィンドウ の 操作 など に関する イベント を 分岐 する こと など まで 面倒 を み て くれ ます 。 原則 として 、 全て の イベント ハンドラ は 、 イベント が 完全 に 取り扱わ れ た 場合 は 1 を 返さ なく て は いけ ませ ん し 、 それ 以外 で は 0 を 返さ なく て は いけ ませ ん ( 例えば 、 前面 の ウィンドウ は FrameWork ウィンドウ で は ない 場合 を 考え て ください )。 
非同期 で イベント 操作 を し たい 場合 は 、 非 ゼロ の 引数 で この メソッド を 呼ん で ください 。 
こう する こと で 、 イベント が 生じ た 時 に 、 内部 の インタプリタ の ループ で 、 アプリケーションイベントハンドラ async _ dispatch が 呼ば れる こと に なり ます 。 
すると 、 長時間 の 計算 を 行っ て いる 場合 でも 、 FrameWork ウィンドウ が アップデート さ れ 、 ユーザー インターフェース が 動き 続ける よう に なり ます 。 ただし 、 インタプリタ の 動作 が 減速 し 、 非 リエントラント の コード ( 例えば FrameWork 自身 など ) に 奇妙 な 動作 が 見 られる かも しれ ませ ん 。 
デフォルト で は async _ dispatch は すぐ に our _ dispatch を 呼び ます が 、 この メソッド を オーバーライド する と 、 特定 の イベント を 非同期 で 操作 し て も 良く なり ます 。 
処理 し ない イベント は Sioux など に 渡さ れる こと に なり ます 。 on あるいは off 値 が 返さ れ ます 。 
実行 中 の mainloop () 呼び出し を 、 次 の 適当 な タイミング で 終了 さ せ ます 。 
ユーザー が 文字 c を タイプ し た 時 に 呼ば れ ます 。 
イベント の 全 詳細 は event 構造 体 の 中 に あり ます 。 
この メソッド は ウィンドウ オブジェクト 内 で 使う ため に も 提供 さ れ て い ます 。 
この オブジェクト の ウィンドウ が 最前 面 に ある 場合 は 、 アプリケーション 全般 について 本 ハンドラ を オーバーライド し ます 。 do _ dialogevent 
イベント ループ 内部 で 最初 に 呼ば れ て 、 モードレスダイアログイベント を 処理 し ます 。 
デフォルト で は メソッド は 単に イベント を 適切 な ダイアログ に 分岐 する だけ です ( 関連 し た ダイアログウィンドウオブジェクト を 経由 し て で は あり ませ ん )。 
特別 に ダイアログイベント ( キーボード ショートカット など ) を 処理 する 必要 が ある 場合 に オーバーライド し て ください 。 
イベント が 無い 場合 に メインイベントループ から 呼ば れ ます 。 
null イベント も 渡さ れ ます ( つまり マウス 位置 など を 監視 する こと が でき ます )。 
5 . 4 データ 整列 化 ( data marshalling ) 
これら の 関数 は 独自 の 拡張 モジュール 用 の 関数 や メソッド を 作成 する 際 に 便利 です 。 
詳しい 情報 や 用例 は 
例外 として 、 括弧 で 囲わ れ て い ない 書式 化 単位 文字 列 が 単一 の アドレス 引数 に 対応 する 場合 が いくつ か あり ます 。 
以下 の 説明 で は 、 引用 符 の つい た 形式 は 書式 化 単位 です ;( 丸 ) 括弧 で 囲っ た 部分 は 書式 化 単位 に 対応 する Python の オブジェクト 型 です ; [ 角 ] 括弧 は 値 を アドレス 渡し する 際 に 使う C の 変数 型 です 。 
" s " ( 文字 列 型 または Unicode オブジェクト 型 ) [ const char *] 
Python の 文字 列 または Unicode オブジェクト を 、 キャラクタ 文字 列 を 指す C の ポインタ に 変換 し ます 。 
変換 先 の 文字 列 自体 の 記憶 領域 を 提供 する 必要 は あり ませ ん ; キャラクタ 型 ポインタ 変数 の アドレス を 渡す と 、 すでに 存在 し て いる 文字 列 へ の ポインタ を その 変数 に 記録 し ます 。 
C 文字 列 は NUL で 終端 さ れ て い ます 。 
Python の 文字 列 型 は 、 NUL バイト が 途中 に 埋め込ま れ て い て は なり ませ ん ; もし 埋め込ま れ て いれ ば TypeError 例外 を 送出 し ます 。 Unicode オブジェクト は デフォルトエンコーディング を 使っ て C 文字 列 に 変換 さ れ ます 。 
変換 に 失敗 する と UnicodeError を 送出 し ます 。 
" s #" ( 文字 列 型 、 Unicode オブジェクト 型 または 任意 の 読み出し バッファ 互換 型 )[ const char *, int ] これ は " s " の 変化 形 で 、 値 を 二つ の 変数 に 記録 し ます 。 
一つ 目 の 変数 は キャラクタ 文字 列 へ の ポインタ で 、 二つ 目 は その 長 さ です 。 
この 書式 化 単位 の 場合 に は 、 Python 文字 列 に null バイト が 埋め込ま れ て い て も かまい ませ ん 。 
Unicode オブジェクト の 場合 、 デフォルトエンコーディング で の 変換 が 可能 なら ば 、 変換 し た オブジェクト から 文字 列 へ の ポインタ を 返し ます 。 
その他 の 読み出し バッファ 互換 オブジェクト は 生 の 内部 データ 表現 へ の 参照 を 返し ます 。 
" z " ( 文字 列 型 または None ) [ const char *] 
" s " に 似 て い ます が 、 Python オブジェクト は None で も よく 、 その 場合 に は C の ポインタ は NULL に セット さ れ ます 。 
" z #" ( 文字 列 型 、 None 、 または 任意 の 読み出し バッファ 互換 型 ) [ const char *, int ] 
" s #" の " s " を " z " に し た よう な 意味 です 。 
" u " ( Unicode オブジェクト 型 ) [ Py _ UNICODE *] 
Python の Unicode オブジェクト を 、 NUL で 終端 さ れ た 16 ビット の Unicode ( UTF - 16 ) データ に 変換 し ます 。 
" s " と 同様 に 、 Unicode データ バッファ 用 に 記憶 領域 を 提供 する 必要 は あり ませ ん ; Py _ UNICODE 型 ポインタ 変数 の アドレス を 渡す と 、 すでに 存在 し て いる Unicode データ へ の ポインタ を その 変数 に 記録 し ます 。 
" u #" ( Unicode オブジェクト 型 ) [ Py _ UNICODE *, int ] 
" es " ( 文字 列 型 、 Unicode オブジェクト 型 または 任意 の 読み出し バッファ 互換 型 )[ const char * encoding , char ** buffer ] 
これ は " s " の 変化 形 で 、 Unicode オブジェクト や Unicode に 変換 可能 な オブジェクト を キャラクタ 型 バッファ に エン コード する ため に 用い られ ます 。 
NUL バイト が 埋め込ま れ て い ない 文字 列 で のみ 動作 し ます 。 この 書式 化 単位 に は 二つ の 引数 が 必要 です 。 
一つ 目 は 入力 に のみ 用い られ 、 NUL で 終端 さ れ た エン コード 名 文字 列 を 指す const char * 型 で なけれ ば なり ませ ん 。 
指定 し た エン コード 名 を Python が 理解 でき ない 場合 に は 例外 を 送出 し ます 。 
第 二 の 引数 は char ** で なけれ ば なり ませ ん ; この 引数 が 参照 し て いる ポインタ の 値 は 、 引数 に 指定 し た テキスト の 内容 が 入っ た バッファ へ の ポインタ に なり ます 。 
テキスト は 最初 の 引数 に 指定 し た エン コード 方式 で エン コード さ れ ます 。 
PyArg _ ParseTuple () を 使う と 、 必要 な サイズ の バッファ を 確保 し 、 その バッファ に エン コード 後 の データ を コピー し て 、 * buffer が この 新た に 確保 さ れ た 記憶 領域 を 指す よう に 変更 し ます 。 
呼び出し 側 に は 、 確保 さ れ た バッファ を 使い 終わっ た 後 に PyMem _ Free () で 解放 する 責任 が あり ます 。 
" et " ( 文字 列 型 、 Unicode オブジェクト 型 または 文字 列 バッファ 互換 型 ) [ const char * encoding , char ** buffer ] 
" es " と 同じ です 。 ただし 、 8 ビット 幅 の 文字 列 オブジェクト を エン コード し 直さ ず に 渡し ます 。 
その 代わり 、 実装 で は 文字 列 オブジェクト が パラメタ に 渡し た エン コード を 使っ て いる もの と 仮定 し ます 。 
" es #" ( 文字 列 型 、 Unicode オブジェクト 型 または 文字 列 バッファ 互換 型 ) [ const char * encoding , char ** buffer , int * buffer _ length ] 
" s #" の 変化 形 で 、 Unicode オブジェクト や Unicode に 変換 可能 な オブジェクト を キャラクタ 型 バッファ に エン コード する ため に 用い られ ます 。 
" es " 書式 化 単位 と 違っ て 、 この 変化 形 は バイト が 埋め込ま れ て い て も かまい ませ ん 。 この 書式 化 単位 に は 三つ の 引数 が 必要 です 。 
一つ 目 は 入力 に のみ 用い られ 、 NUL で 終端 さ れ た エン コード 名 文字 列 を 指す const char * 型 か NULL で なけれ ば なり ませ ん 。 NULL の 場合 に は デフォルトエンコーディング を 使い ます 。 
指定 し た エン コード 名 を Python が 理解 でき ない 場合 に は 例外 を 送出 し ます 。 
第 二 の 引数 は char ** で なけれ ば なり ませ ん ; この 引数 が 参照 し て いる ポインタ の 値 は 、 引数 に 指定 し た テキスト の 内容 が 入っ た バッファ へ の ポインタ に なり ます 。 
テキスト は 最初 の 引数 に 指定 し た エン コード 方式 で エン コード さ れ ます 。 
呼び出し 側 に は 、 確保 さ れ た バッファ を 使い 終わっ た 後 に PyMem _ Free () で 解放 する 責任 が あり ます 。 * buffer が 非 NULL の ポインタ ( すでに メモリ 確保 済み の バッファ ) を 指し て いる 場合 、 PyArg _ ParseTuple () は この メモリ 位置 を バッファ として 用い 、 * buffer _ length の 初期 値 を バッファ サイズ として 用い ます 。 
PyArg _ ParseTuple () は 次に エン コード 済み の データ を バッファ に コピー し て 、 NUL で 終端 し ます 。 
バッファ の 大き さ が 足り なけれ ば ValueError が セット さ れ ます 。 どちら の 場合 も 、 * buffer _ length は 終端 の NUL バイト を 含ま ない エン コード 済み データ の 長 さ に セット さ れ ます 。 
" et #" ( 文字 列 型 、 Unicode オブジェクト 型 または 文字 列 バッファ 互換 型 ) [ const char * encoding , char ** buffer ] 
" es #" と 同じ です 。 ただし 、 文字 列 オブジェクト を エン コード し 直さ ず に 渡し ます 。 
その 代わり 、 実装 で は 文字 列 オブジェクト が パラメタ に 渡し た エン コード を 使っ て いる もの と 仮定 し ます 。 
" b " ( 整数 型 ) [ char ] 
Python の 整数 型 を 、 C の char 型 の 小さな 整数 に 変換 し ます 。 
" B " ( 整数 型 ) [ unsigned char ] 
Python の 整数 型 を 、 オーバフロー チェック を 行わ ず に 、 C の unsigned char 型 の 小さな 整数 に 変換 し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
" h " ( 整数 型 ) [ short int ] 
Python の 整数 型 を 、 C の short int 型 に 変換 し ます 。 
" H " ( 整数 型 ) [ unsigned short int ] 
Python の 整数 型 を 、 オーバフロー チェック を 行わ ず に 、 C の unsigned short int 型 に 変換 し ます 。 
" i " ( 整数 型 ) [ int ] 
Python の 整数 型 を 、 C の int 型 に 変換 し ます 。 
" I " ( 整数 型 ) [ unsigned int ] 
Python の 整数 型 を 、 オーバフロー チェック を 行わ ず に 、 C の unsigned int 型 に 変換 し ます 。 
" l " ( 整数 型 ) [ long int ] 
Python の 整数 型 を 、 C の long int 型 に 変換 し ます 。 
" k " ( 整数 型 ) [ unsigned long ] 
Python の 整数 型 を 、 オーバフロー チェック を 行わ ず に 、 C の unsigned long int 型 に 変換 し ます 。 
" L " ( 整数 型 ) [ PY _ LONG _ LONG ] 
Python の 整数 型 を 、 C の long long 型 に 変換 し ます 。 
この 書式 化 単位 は 、 long long 型 ( または Windows の _ int 64 型 ) が サポート さ れ て いる プラットフォーム で のみ 利用 でき ます 。 
Convert a Python integer to a C long long . This format isonly available on platforms that support long long ( or _ int 64 on Windows ). " K " ( 整数 型 ) [ unsigned PY _ LONG _ LONG ] 
Python の 整数 型 を 、 オーバフロー チェック を 行わ ず に 、 C の unsigned long long 型 に 変換 し ます 。 
この 書式 化 単位 は 、 unsigned long long 型 ( または Windows の unsigned _ int 64 型 ) が サポート さ れ て いる プラットフォーム で のみ 利用 でき ます 。 
" c " ( 長 さ 1 の 文字 列 型 ) [ char ] 
長 さ 1 の 文字 列 として 表現 さ れ て いる Python キャラクタ を C の char 型 に 変換 し ます 。 
" f " ( 浮動 小数点 型 ) [ float ] 
Python の 浮動 小数点 型 を 、 C の float 型 に 変換 し ます 。 
" d " ( 浮動 小数点 型 ) [ double ] 
Python の 浮動 小数点 型 を 、 C の double 型 に 変換 し ます 。 
" D " ( 複素数 型 ) [ Py _ complex ] 
Python の 複素数 型 を 、 C の Py _ complex 構造 体 に 変換 し ます 。 
" O " ( オブジェクト ) [ PyObject *] 
Python オブジェクト を ( 一切 変換 を 行わ ず に ) C の Python オブジェクト 型 ポインタ に 保存 し ます 。 
これ により 、 C プログラム は 実際 の オブジェクト を 受け渡し さ れ ます 。 
オブジェクト の 参照 カウント は 増加 し ませ ん 。 
保存 さ れる ポインタ が NULL に なる こと は あり ませ ん 。 
" O !" ( オブジェクト ) [ typeobject , PyObject *] 
Python オブジェクト を C の Python オブジェクト 型 ポインタ に 保存 し ます 。 
" O " に 似 て い ます が 、 二つ の C の 引数 を とり ます : 一つ 目 の 引数 は Python の 型 オブジェクト へ の アドレス で 、 二つ 目 の 引数 は オブジェクト へ の ポインタ が 保存 さ れ て いる ( PyObject * の ) C の 変数 へ の アドレス です 。 
Python オブジェクト が 指定 し た 型 で は ない 場合 、 TypeError を 送出 し ます 。 
" O " ( オブジェクト ) [ converter , anything ] 
Python オブジェクト を converter 関数 を 介し て C の 変数 に 変換 し ます 。 
二つ の 引数 を とり ます : 一つ 目 は 関数 で 、 二つ 目 は ( 任意 の 型 の ) C 変数 へ の アドレス を void * 型 に 変換 し た もの です 。 
converter は 以下 の よう に し て 呼び出さ れ ます : 
ここ で object は 変換 対象 の Python オブジェクト で 、 address は PyArg _ Parse *() に 渡し た void * 型 の 引数 です 。 
戻り 値 status は 変換 に 成功 し た 際 に 1 、 失敗 し た 場合 に は 0 に なり ます 。 
変換 に 失敗 し た 場合 、 converter 関数 は 例外 を 送出 し なく て は なり ませ ん 。 
" S " ( 文字 列 型 ) [ PyStringObject *] 
" O " に 似 て い ます が 、 Python オブジェクト は 文字 列 オブジェクト で なけれ ば なり ませ ん 。 
オブジェクト が 文字 列 オブジェクト で ない 場合 に は TypeError を 送出 し ます 。 
C 変数 は PyObject * で 宣言 し て おい て も かまい ませ ん 。 
" U " ( Unicode 文字 列 型 ) [ PyUnicodeObject *] 
" O " に 似 て い ます が 、 Python オブジェクト は Unicode オブジェクト で なけれ ば なり ませ ん 。 
オブジェクト が Unicode オブジェクト で ない 場合 に は TypeError を 送出 し ます 。 
" t #" ( 読み出し 専用 キャラクタ バッファ ) [ char *, int ] 
" s #" に 似 て い ます が 、 読み出し 専用 バッファ インタフェース を 実装 し て いる 任意 の オブジェクト を 受理 し ます 。 
char * 変数 は バッファ の 最初 の バイト を 指す よう に セット さ れ 、 int は バッファ の 長 さ に セット さ れ ます 。 
単一 セグメント から なる バッファ オブジェクト だけ を 受理 し ます ; それ 以外 の 場合 に は TypeError を 送出 し ます 。 
" w " ( 読み書き 可能 な キャラクタ バッファ ) [ char *] 
" s " と 同様 です が 、 読み書き 可能 な バッファ インタフェース を 実装 し て いる 任意 の オブジェクト を 受理 し ます 。 
呼び出し 側 は 何らかの 別 の 手段 で バッファ の 長 さ を 決定 する か 、 あるいは " w #" を 使わ ね ば なり ませ ん 。 
単一 セグメント から なる バッファ オブジェクト だけ を 受理 し ます ; それ 以外 の 場合 に は TypeError を 送出 し ます 。 
" w #" ( 読み書き 可能 な キャラクタ バッファ ) [ char *, int ] 
" s #" に 似 て い ます が 、 読み書き 可能 な バッファ インタフェース を 実装 し て いる 任意 の オブジェクト を 受理 し ます 。 
char * 変数 は バッファ の 最初 の バイト を 指す よう に セット さ れ 、 int は バッファ の 長 さ に セット さ れ ます 。 
"( items )" ( タプル ) [ matching - items ] 
オブジェクト は items に 入っ て いる 書式 化 単位 の 数 だけ の 長 さ を 持つ Python の シーケンス 型 で なく て は なり ませ ん 。 
各 C 引数 は items 内 の 個々 の 書式 化 単位 に 対応 づけ でき ね ば なり ませ ん 。 
シーケンス の 書式 化 単位 は 入れ子 構造 に でき ます 。 
注意 : Python の バージョン 1 . 5 . 2 より 以前 は 、 この 書式 化 指定 文字 列 は パラメタ 列 で は なく 、 個別 の パラメタ が 入っ た タプル で なけれ ば なり ませ ん でし た 。 
この ため 、 以前 は TypeError を 引き起こし て い た よう な コード が 現在 は 例外 を 出さ ず に 処理 さ れる かも しれ ませ ん 。 
と は いえ 、 既存 の コード にとって これ は 問題 ない と 思わ れ ます 。 
Python 整数 型 を 要求 し て いる 場所 に Python 長 整数 型 を 渡す の は 可能 です ; しか し ながら 、 適切 な 値域 チェック は まったく 行わ れ ませ ん -- 値 を 受け取る ため の フィールド が 、 値 全て を 受け取る に は 小さ すぎる 場合 、 上 桁 の ビット 群 は 暗黙 の うち に 切り詰め られ ます ( 実際 の ところ 、 この セマンティクス は C の ダウン キャスト ( downcast ) から 継承 し て い ます -- その 恩恵 は 人 それぞれ かも しれ ませ ん が )。 その他 、 書式 化 文字 列 において 意味 を 持つ 文字 が いくつ か あり ます 。 
それら の 文字 は 括弧 による 入れ子 内 に は 使え ませ ん 。 
以下 に 文字 を 示し ます : 
Python 引数 リスト 中 で 、 この 文字 以降 の 引数 が オプション で ある こと を 示し ます 。 
オプション の 引数 に 対応 する C の 変数 は デフォルト の 値 で 初期 化 し て おか ね ば なり ませ ん -- オプション の 引数 が 省略 さ れ た 場合 、 PyArg _ ParseTuple () は 対応 する C 変数 の 内容 に 手 を 加え ませ ん 。 
この 文字 が ある と 、 書式 化 単位 の 記述 は そこ で 終わり ます ; コロン 以降 の 文字 列 は 、 エラーメッセージ における 関数 名 ( PyArg _ ParseTuple () が 送出 する 例外 の `` 付属 値 ( associated value )'') として 使わ れ ます 。 
この 文字 が ある と 、 書式 化 単位 の 記述 は そこ で 終わり ます ; セミコロン 以降 の 文字 列 は 、 デフォルト エラーメッセージ を 置き換える エラーメッセージ として 使わ れ ます 。 
言うまでもなく 、 ":" と ";" は 相互 に 排他 の 文字 です 。 
呼び出し 側 に 提供 さ れる Python オブジェクト の 参照 は 全て 借り た ( borrowed ) もの です ; オブジェクト の 参照 カウント を デクリメント し て は なり ませ ん ! 以下 の 関数 に 渡す 補助 引数 ( additional argument ) は 、 書式 化 文字 列 から 決定 さ れる 型 へ の アドレス で なけれ ば なり ませ ん ; 補助 引数 に 指定 し た アドレス は 、 タプル から 入力 さ れ た 値 を 保存 する ため に 使い ます 。 
上 の 書式 化 単位 の リスト で 説明 し た よう に 、 補助 引数 を 入力 値 として 使う 場合 が いくつ か あり ます ; その 場合 、 対応 する 書式 化 単位 の 指定 する 形式 に 従う よう に せ ね ば なり ませ ん 。 変換 を 正しく 行う ため に は 、 arg オブジェクト は 書式 化 文字 に 一致 し なけれ ば なら ず 、 かつ 書式 化 文字 列 内 の 書式 化 単位 に 全て 値 が 入る よう に せ ね ば なり ませ ん 。 
成功 する と 、 PyArg _ Parse *() 関数 は 真 を 返し ます 。 それ 以外 の 場合 に は 偽 を 返し 、 適切 な 例外 を 送出 し ます 。 
固定 引数 のみ を 引数 に とる 関数 の パラメタ を 解釈 し て 、 ローカル な 変数 に 変換 し ます 。 
成功 する と 真 を 返し ます ; 失敗 する と 偽 を 返し 、 適切 な 例外 を 送出 し ます 。 
PyArg _ ParseTuple () と 同じ です が 、 可変長 の 引数 で は なく va _ list を 引数 に とり ます 。 
固定 引数 および キーワード 引数 を とる 関数 の パラメタ を 解釈 し て 、 ローカル な 変数 に 変換 し ます 。 
成功 する と 真 を 返し ます ; 失敗 する と 偽 を 返し 、 適切 な 例外 を 送出 し ます 。 
PyArg _ ParseTupleAndKeywords () と 同じ です が 、 可変長 の 引数 で は なく va _ list を 引数 に とり ます 。 
`` 旧 形式 '' の 関数 における 引数 リスト を 分析 する ため に 使わ れる 関数 です -- 旧 形式 の 関数 は 、 引数 解釈 手法 に METH _ OLDARGS を 使い ます 。 
新た に 書か れる コード で の パラメタ 解釈 に は この 関数 の 使用 は 奨め られ ず 、 標準 の インタプリタ における ほとんど の コード が もはや 引数 解釈 の ため に この 関数 を 使わ ない よう に 変更 済み です 。 
この 関数 を 残し て いる の は 、 この 関数 が 依然として 引数 以外 の タプル を 分析 する 上 で 便利 だ から です が 、 この 目的 において は 将来 も 使わ れ つづける かも しれ ませ ん 。 
パラメータ 取得 を 簡単 に し た 形式 で 、 引数 の 型 を 指定 する 書式 化 文字 列 を 使い ませ ん 。 
パラメタ の 取得 に この 手法 を 使う 関数 は 、 関数 宣言 テーブル 、 または メソッド 宣言 テーブル 内 で METH _ VARARGS として 宣言 し なく て は なり ませ ん 。 
実 引数 の 入っ た タプル は args に 渡し ます ; この タプル は 本当 の タプル で なく て は なり ませ ん 。 
タプル の 長 さ は 少なくとも min で 、 max を 超え て は なり ませ ん ; min と max が 等しく て も かまい ませ ん 。 
補助 引数 を 関数 に 渡さ なく て は なら ず 、 各 補助 引数 は PyObject * 変数 へ の ポインタ で なく て は なり ませ ん ; これら の 補助 引数 に は 、 args の 値 が 入り ます ; 値 の 参照 は 借り た 参照 です 。 
この 例 における PyArg _ UnpackTuple () 呼び出し は 、 PyArg _ ParseTuple () を 使っ た 以下 の 呼び出し : 
PyArg _ ParseTuple ( args , " O | O : ref ", object , callback ) と 全く 等価 です 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
PyArg _ Parse *() ファミリ の 関数 が 受け取る の と 似 た 形式 の 書式 化 文字 列 および 値 列 に 基づい て 、 新た な 値 を 生成 し ます 。 
生成 し た 値 を 返し ます 。 エラー の 場合 に は NULL を 返し ます ; NULL を 返す 場合 、 例外 を 送出 する でしょ う 。 
Py _ BuildValue () は 常に タプル を 生成 する と は 限り ませ ん 。 
この 関数 が タプル を 生成 する の は 、 書式 化 文字 列 に 二つ 以上 の 書式 化 単位 が 入っ て いる とき だけ です 。 
書式 化 文字 列 が 空 の 場合 、 None を 返し ます ; 書式 化 単位 が 厳密 に 一つ だけ 入っ て いる 場合 、 書式 化 単位 で 指定 さ れ て いる 何らかの オブジェクト 単体 を 返し ます 。 
サイズ が ゼロ や 1 の タプル を 返す よう に 強制 する に は 、 丸 括弧 で 囲わ れ た 書式 化 文字 列 を 使い ます 。 書式 化 単位 " s " や " s #" の 場合 の よう に 、 オブジェクト を 構築 する 際 に データ を 供給 する ため に メモリ バッファ を パラメタ として 渡す 場合 に は 、 指定 し た データ は コピー さ れ ます 。 
Py _ BuildValue () が 生成 し た オブジェクト は 、 呼び出し 側 が 提供 し た バッファ を 決して 参照 し ませ ん 。 
これら の 文字 を 使う と 、 長い 書式 化 文字 列 を ちょっと だけ 読み やすく でき ます 。 
" s " ( 文字 列 型 ) [ char *] 
null 終端 さ れ た C 文字 列 から Python オブジェクト に 変換 し ます 。 
C 文字 列 ポインタ が NULL の 場合 、 None に なり ます 。 
" s #" ( 文字 列 型 ) [ char *, int ] 
C 文字 列 と その 長 さ から Python オブジェクト に 変換 し ます 。 
C 文字 列 ポインタ が NULL の 場合 、 長 さ は 無視 さ れ None に なり ます 。 
" s " と 同じ です 。 
" s #" と 同じ です 。 
null 終端 さ れ た Unicode ( UCS - 2 または UCS - 4 ) データ の バッファ から Python オブジェクト に 変換 し ます 。 
Unicode バッファ ポインタ が NULL の 場合 、 None に なり ます 。 
null 終端 さ れ た Unicode ( UCS - 2 または UCS - 4 ) データ の バッファ と その 長 さ から Python オブジェクト に 変換 し ます 。 
Unicode バッファ ポインタ が NULL の 場合 、 長 さ は 無視 さ れ None に なり ます 。 
通常 の C の int を Python の 整数 オブジェクト に 変換 し ます 。 
" i " と 同じ です 。 
C の long int を Python の 整数 オブジェクト に 変換 し ます 。 
文字 を 表す 通常 の C の int を 、 長 さ 1 の Python の 文字 列 オブジェクト に 変換 し ます 。 
C の double を Python の 浮動 小数点 数 に 変換 し ます 。 
" d " と 同じ です 。 
" D " ( 複素数 型 ) [ Py _ complex *] 
C の Py _ complex 構造 体 を Python の 複素数 に 変換 し ます 。 
Python オブジェクト を 手 を 加え ず に 渡し ます ( ただし 、 参照 カウント は 1 インクリメント し ます )。 
渡し た オブジェクト が NULL ポインタ の 場合 、 この 引数 を 生成 する の に 使っ た 何らかの 呼び出し が エラー に なっ た の が 原因 で ある と 仮定 し て 、 例外 を セット し ます 。 従って この とき Py _ BuildValue () は NULL を 返し ます が Py _ BuildValue () 自体 は 例外 を 送出 し ませ ん 。 
例外 を まだ 送出 し て い なけれ ば SystemError を セット し ます 。 
" S " ( オブジェクト ) [ PyObject *] 
" O " と 同じ です 。 
" N " ( オブジェクト ) [ PyObject *] 
" O " と 同じ です 。 ただし 、 オブジェクト の 参照 カウント を インクリメント し ませ ん 。 
オブジェクト が 引数 リスト 内 の オブジェクトコンストラクタ 呼び出し によって 生成 さ れ て いる 場合 に 便利 です 。 
anything を converter 関数 を 介し て Python オブジェクト に 変換 し ます 。 
この 関数 は anything ( void * と 互換 の 型 で なけれ ば なり ませ ん ) を 引数 に し て 呼び出さ れ 、 `` 新た な '' オブジェクト を 返す か 、 失敗 し た 場合 に は NULL を 返す よう に し なけれ ば なり ませ ん 。 
"( items )" ( タプル 型 ) [ matching - items ] 
C の 値 から なる 配列 を 、 同じ 要素 数 を 持つ Python の タプル に 変換 し ます 。 
"[ items ]" ( リスト 型 ) [ matching - items ] 
C の 値 から なる 配列 を 、 同じ 要素 数 を 持つ Python の リスト に 変換 し ます 。 
"{ items }" ( 辞書 型 ) [ matching - items ] 
C の 値 から なる 配列 を Python の 辞書 に 変換 し ます 。 
一連 の ペア から なる C の 値 が 、 それぞれ キー および 値 と なっ て 辞書 に 追加 さ れ ます 。 
書式 化 文字 列 に関する エラー が 生じる と 、 SystemError 例外 を セット し て NULL を 返し ます 。 
1 . 2 . 2 . 2 クリエータ を セット し て ダブル クリック する 
1 . 2 MacPython - OS 9 の 取得 と インストール 
1 . 2 . 4 Python スクリプト を 作成 する 
1 . 2 . 3 コマンド ライン 引数 を シミュレート する MacPython - OS 9 で コマンド ライン 引数 を シミュレート する に は 2 つ の 方法 が あり ます 。 
インタプリタ オプション を 使う 場合 
スクリプト を 起動 する 時 、 オプション キー を 押し ながら 行い ます 。 
Python インタプリタ オプション の ダイアログボックス が 現われ ます 。 
`` Set Unix - style command line ..'' ボタン を クリック し ます 。 
`` Argument '' フィールド に 引数 を タイプ し ます 。 
`` OK '' を クリック し ます 。 
`` Run '' を クリック し ます 。 
ドラッグ & ドロップ を 使う 場合 。 スクリプト を アプレット として 保存 し た 場合 ( 1 . 3 . 4 節 参照 )、 「 ドラッグ & ドロップ 」 で コマンド ライン 引数 も シミュレート でき ます 。 
この 場合 、 アプレット に ドロップ し た ファイル の 名前 が sys . argv に 追加 さ れ 、 ドロップ し た ファイル 名 は スクリプト 側 から は コマンド ライン で タイプ さ れ た か の よう に 見え ます 。 
Unix システム と 同様 、 sys . srgv の 最初 の 要素 は アプレット 自体 へ の パス に なり ます 。 残り の 要素 は アプレット に ドロップ し た ファイル の 名前 です 。 
Assert 文 
は 、 プログラム 内 に デバッグ 用 アサーション ( debugging assertion ) を 仕掛ける ため の 便利 な 方法 です : 
単純 な 形式 " assert expression " は 、 
と 等価 です 。 拡張 形式 " assert expression 1 , expression 2 " は 、 
と 等価 です 。 
上記 の 等価 関係 は 、 __ debug __ と AssertionError 
が 、 同名 の 組み込み 変数 を 参照 し て いる という 前提 の 上 に 成り立っ て い ます 。 
現在 の 実装 で は 、 組み込み 変数 __ debug __ は 通常 は 1 で あり 、 インタプリタ に ( コマンドラインオプション - O で ) 最適 化 を 要求 する と 0 に なり ます 。 
現状 の コード 生成 器 は 、 コンパイル 時 に 最適 化 が 要求 さ れ て いる と assert 文 に対する コード を 全く 出力 し ませ ん 。 
実行 に 失敗 し た 式 の ソース コード を エラーメッセージ 内 に 入れる 必要 は あり ませ ん ; メッセージ は スタック トレース 内 で 表示 さ れ ます 。 __ debug __ へ の 代入 は 不正 な 操作 です 。 
組み込み 変数 の 値 は 、 インタプリタ が 開始 する とき に 決定 さ れ ます 。 
6 . 2 Assert 文 ( assert 
6 . 3 . 1 累算 代入 文 ( augmented assignment 
代入 文 
は 、 名前 を 値 に ( 再 ) 束縛 し たり 、 変更 可能 な オブジェクト の 属性 や 要素 を 変更 し たり する ため に 使わ れ ます : 
( 末尾 の 三つ の シンボル の 構文 について は 5 . 3 節 を 参照 し て ください 。 ) 代入 文 は 式 の リスト ( これ は 単一 の 式 で も 、 カンマ で 区切ら れ た 式 リスト で も よく 、 後者 は タプル に なる こと を 思い出し て ください ) を 評価 し 、 得 られ た 単一 の 結果 オブジェクト を ターゲット ( target ) の リスト に対して 左 から 右 へ と 代入 し て ゆき ます 。 
代入 は ターゲット ( リスト ) の 形式 に従って 再帰 的 に 行わ れ ます 。 
ターゲット が 変更 可能 な オブジェクト ( 属性 参照 、 添字 表記 、 または スライス ) の 一部 で ある 場合 、 この 変更 可能 な オブジェクト は 最終 的 に 代入 を 実行 し て 、 その 代入 が 有効 な 操作 で ある か 判断 し なけれ ば なり ませ ん 。 代入 が 不可能 な 場合 に は 例外 を 発行 する こと も でき ます 。 
型 ごと に み られる 規則 や 、 送出 さ れる 例外 は 、 その オブジェクト 型 定義 で 与え られ て い ます ( 3 . 2 節 を 参照 し て ください ). 
ターゲット リスト へ の オブジェクト の 代入 は 、 以下 の よう に し て 再帰 的 に 定義 さ れ て い ます 。 
ターゲット リスト が 単一 の ターゲット から なる 場合 : オブジェクト は その ターゲット に 代入 さ れ ます 。 
ターゲット リスト が 、 カンマ で 区切ら れ た 複数 の ターゲット から なる リスト の 場合 : オブジェクト は ターゲット リスト 中 の ターゲット 数 と 同じ 数 の 要素 から なる シーケンス で なけれ ば なら ず 、 その 各 要素 は 左 から 右 へ と 対応 する ターゲット に 代入 さ れ ます 。 
( これ は Python 1 . 5 で 緩和 さ れ た 規則 です ; 以前 の バージョン で は 、 代入 する オブジェクト は タプル で なけれ ば なり ませ ん でし た 。 
文字 列 も シーケンス な ので 、 今 で は " a , b = " xy "" の よう な 代入 は 文字 列 が 正しい 長 さ を 持つ 限り 正規 の 操作 に なり ます 。 ) 
単一 の ターゲット へ の 単一 の オブジェクト の 代入 は 、 以下 の よう に し て 再帰 的 に 定義 さ れ て い ます 。 
ターゲット が 識別子 ( 名前 ) の 場合 : 
名前 が 現在 の コード ブロック 内 の global 文 に 書か れ て い ない 場合 : 名前 は 現在 の ローカル 名前 空間 内 の オブジェクト に 束縛 さ れ ます 。 
それ 以外 の 場合 : 名前 は 現在 の グローバル 名前 空間 内 の オブジェクト に 束縛 さ れ ます 。 
名前 が すでに 束縛 済み の 場合 、 再 束縛 ( rebind ) が おこなわ れ ます 。 
再 束縛 によって 、 以前 その 名前 に 束縛 さ れ て い た オブジェクト の 参照 カウント ( reference count ) が ゼロ に なっ た 場合 、 オブジェクト は 解放 ( deallocate ) さ れ 、 デストラクタ ( destructor 
) が ( 存在 すれ ば ) 呼び出さ れ ます 。 
ターゲット が 丸 括弧 や 角 括弧 で 囲わ れ た ターゲット リスト の 場合 : オブジェクト は ターゲット リスト 中 の ターゲット 数 と 同じ 数 の 要素 から なる シーケンス で なけれ ば なら ず 、 その 各 要素 は 左 から 右 へ と 対応 する ターゲット に 代入 さ れ ます 。 
ターゲット が 属性 参照 の 場合 : 参照 さ れ て いる 一 次 語 の 式 が 値 評価 さ れ ます 。 
値 は 代入 可能 な 属性 を 伴う オブジェクト で なけれ ば なり ませ ん ; そう で なけれ ば 、 TypeError が 送出 さ れ ます 。 
次に 、 この オブジェクト に対して 、 被 代入 オブジェクト を 指定 し た 属性 に 代入 し て よい か 問い合わせ ます ; 代入 を 実行 でき ない 場合 、 例外 ( 通常 は AttributeError です が 、 必然 で は あり ませ ん ) を 送出 し ます 。 
ターゲット が 添字 表記 の 場合 : 参照 さ れ て いる 一 次 語 の 式 が 値 評価 さ れ ます 。 
まず 、 値 は 変更 可能 な シーケンス オブジェクト ( 例えば リスト ) か 、 マップ オブジェクト ( 例えば 辞書 ) で なけれ ば なり ませ ん 。 
次に 、 添字 表記 の 表す 式 が 値 評価 さ れ ます 。 
一 次 語 が 変更 可能 な シーケンス オブジェクト ( 例えば リスト ) の 場合 、 まず 添字 は 整数 で なけれ ば なり ませ ん 。 
添字 が 負数 の 場合 、 シーケンス の 長 さ が 加算 さ れ ます 。 
添字 は 最終 的 に 、 シーケンス の 長 さ より も 小さな 非負 の 整数 で なく て は なり ませ ん 。 次に 、 添字 を インデクス に 持つ 要素 に 非 代入 オブジェクト を 代入 し て よい か 、 シーケンス に 問い合わせ ます 。 
範囲 を 超え た インデクス に対して は IndexError が 送出 さ れ ます ( 添字 指定 さ れ た シーケンス に 代入 を 行っ て も 、 リスト 要素 の 新た な 追加 は でき ませ ん )。 
一 次 語 が マップ オブジェクト ( 例えば 辞書 ) の 場合 、 まず 添字 は マップ の キー 型 と 互換 性 の ある 型 で なく て は なり ませ ん 。 次に 、 添字 を 被 代入 オブジェクト に 関連付ける よう な キー / データ の 対 を 生成 する よう マップ オブジェクト に 問い合わせ ます 。 
この 操作 で は 、 既存 の キー / 値 の 対 を 同じ キー と 別 の 値 で 置き換え て も よく 、 ( 同じ 値 を 持つ キー が 存在 し ない 場合 ) 新た な キー / 値 の 対 を 挿入 し て も かまい ませ ん 。 
ターゲット が スライス の 場合 : 参照 さ れ て いる 一 次 語 の 式 が 値 評価 さ れ ます 。 
まず 、 値 は 変更 可能 な シーケンス オブジェクト ( 例えば リスト ) で なけれ ば なり ませ ん 。 
被 代入 オブジェクト は 同じ 型 を 持っ た シーケンス オブジェクト で なけれ ば なり ませ ん 。 
次に 、 スライス の 下 境界 と 上 境界 を 示す 式 が あれ ば 評価 さ れ ます ; デフォルト 値 は それぞれ ゼロ と シーケンス の 長 さ です 。 
上下 境界 は 整数 に なら なけれ ば なり ませ ん 。 
いずれ か の 境界 が 負数 に なっ た 場合 、 シーケンス の 長 さ が 加算 さ れ ます 。 
最終 的 に 、 境界 は ゼロ から シーケンス の 長 さ まで の 内包 に なる よう に クリップ さ れ ます 。 
最後 に 、 スライス を 被 代入 オブジェクト で 置き換え て よい か シーケンス オブジェクト に 問い合わせ ます 。 
オブジェクト で 許さ れ て いる 限り 、 スライス の 長 さ は 被 代入 シーケンス の 長 さ と 異なっ て い て よく 、 この 場合 に は ターゲット シーケンス の 長 さ が 変更 さ れ ます 。 
( 現在 の 実装 で は 、 ターゲット の 構文 は 式 の 構文 と 同じ で ある と みなさ れ て おり 、 無効 な 構文 は コード 生成 フェーズ 中 に 詳細 な エラーメッセージ を 伴っ て 拒否 さ れ ます 。 
) 警告 : 代入 の 定義 で は 、 左辺 値 と 右辺 値 が オーバラップ する よう な 代入 ( 例えば 、 " a , b = b , a " を 行う と 、 二つ の 変数 を 入れ替え ます ) を 定義 し て も ` 安全 ( safe )' に 代入 でき ます が 、 代入 対象 と なる 変数 群 の 間 で オーバラップ が ある 場合 は 安全 で は あり ませ ん ! 例えば 、 以下 の プログラム は "[ 0 , 2 ]" を 出力 し て しまい ます : 
11 . 26 . 1 asynchat - 補助 クラス と 関数 
以下 の サンプル は 、 async _ chat で HTTP リクエスト を 読み込む 処理 の 一部 です 。 
Web サーバ は 、 クライアント から の 接続 毎 に http _ request _ handler オブジェクト を 作成 し ます 。 
次 の 簡単 な 例 で は 、 ある モジュール を import し た 時 に カウンタ を 初期 化 し て おき 、 プログラム が 終了 する とき に アプリケーション が この モジュール を 明示 的 に 呼び出さ なく て も カウンタ が 更新 さ れる よう に する 方法 を 示し て い ます 。 
register () に 指定 し た 固定 引数 と キーワード パラメタ は 登録 し た 関数 を 呼び出す 際 に 渡さ れ ます 。 
アトム の 形 に なっ て いる 識別子 ( identifier ) は 名前 ( name ) です 。 
名前 づけ や 束縛 について は 、 4 . 1 節 を 参照 し て ください 。 名前 が ある オブジェクト に 束縛 さ れ て いる 場合 、 名前 アトム を 評価 する と その オブジェクト に なり ます 。 
名前 が 束縛 さ れ て い ない 場合 、 アトム を 評価 しよ う と する と NameError 例外 を 送出 し ます 。 
プライベート な 名前 の 難 号 化 ( mangling ): 
クラス 定義 内 に テキスト の 形 で 書か れ た 識別子 で 、 二つ 以上 の アンダー スコア から 始まり 、 末尾 が 二つ 以上 の アンダー スコア に なっ て い ない もの は 、 その クラス の プライベート な 名前 ( private name ) と みなさ れ ます 。 プライベート な 名前 は 、 コード が 生成 さ れる 前 に 、 より 長い 形式 の 名前 に 変換 さ れ ます 。 
この 変換 で は 、 クラス 名 の 先頭 に ある アンダー スコア を 全て はぎとり 、 先頭 に アンダー スコア を 一つ 挿入 し て 、 名前 の 前 に 付加 し ます 。 
例えば 、 クラス Ham 内 の 識別子 __ spam は 、 _ Ham __ spam に 変換 さ れ ます 。 
変換 は 識別子 が 使わ れ て いる 構文 的 コンテキスト と は 独立 し て い ます 。 
変換 さ れ た 名前 が 非常 に 長い ( 255 文字 以上 ) の 場合 に は 、 実装 によって は 名前 の 切り 詰め が 起きる かも しれ ませ ん 。 
クラス 名 が アンダー スコア だけ から 成り立つ 場合 に は 、 変換 は 行わ れ ませ ん 。 
Python で は 、 文字 列 リテラル と 、 様々 な 数値 リテラル を サポート し て い ます : 
リテラル を 評価 する と 、 指定 し た 型 ( 文字 列 、 整数 、 長 整数 、 浮動 小数点 数 、 複素数 ) の 指定 し た 値 を 持つ オブジェクト に なり ます 。 
浮動 小数点 や 虚数 ( 複素数 ) リテラル の 場合 、 値 は 近似 値 に なる 場合 が あり ます 。 
同じ 値 を 持つ 複数 の リテラル を 評価 し た 場合 、 ( それら の リテラル が プログラム の 同じ 場所 由来 の もの で あっ て も 、 そう で なく て も ) 同じ オブジェクト を 指し て いる か 、 まったく 同じ 値 を 持つ 別 の オブジェクト に なり ます 。 
アトム ( 原子 的 要素 : atom ) は 、 式 を 構成 する 基本 単位 です 。 
もっとも 単純 な アトム は 、 識別子 または リテラル に なり ます 。 
逆 クオート や 丸 括弧 、 波 括弧 、 または 角 括弧 で 囲わ れ た 形式 ( form ) も また 、 文法 的 に は アトム に 分類 さ れ ます 。 
アトム の 構文 定義 は 以下 の よう に なり ます : 
5 . 2 . 1 識別子 ( identifier 、 または 名前 ( name )) 
3 . 3 . 2 . 1 新しい 形式 の クラス の ため の 別 の 属性 アクセス 
以下 の メソッド を 定義 し て 、 クラス インスタンス へ の 属性 値 アクセス ( 属性 値 の 使用 、 属性 値 へ の 代入 、 x . name の 削除 ) の 意味 を カスタマイズ する こと が でき ます 。 
属性 値 の 検索 を 行っ た 結果 、 通常 の 場所 に 属性 値 が 見つから なかっ た 場合 ( すなわち 、 self の インスタンス 属性 で なく 、 かつ クラス ツリー に も 見つから なかっ た 場合 ) に 呼び出さ れ ます 。 この メソッド は ( 計算 さ れ た ) 属性 値 を 返す か 、 AttributeError 例外 を 送出 し なけれ ば なり ませ ん 。 
少なくとも インスタンス 変数 に対して は 、 値 を インスタンス の 属性 値 辞書 に 挿入 し ない よう に し て ( 代わり に 他 の オブジェクト に 挿入 する こと で ) 属性 値 が 完全 に 制御 さ れ て いる よう に 見せかけ られる こと に 注意 し て ください 。 
新 形式 の クラス で 実際 に 完全 な 制御 を 行う 方法 は 、 以下 の __ getattribute __() メソッド を 参照 し て ください 。 
属性 値 へ の 代入 が 試み られ た 際 に 呼び出さ れ ます 。 
この メソッド は 通常 の 代入 メカニズム ( すなわち 、 インスタンス 辞書 へ の 値 の 代入 ) の 代わり に 呼び出さ れ ます 。 
name は 属性 名 で 、 value は その 属性 に 代入 する 値 です 。 
__ setattr __() の 中 で インスタンス 属性 値 へ の 代入 が 必要 な 場合 、 単に " self . name = value " として は なり ませ ん -- この よう に する と 、 自分 自身 に対する 再帰 呼び出し が おき て しまい ます 。 
その 代わり に 、 インスタンス 属性 の 辞書 に 値 を 挿入 し て ください 。 
例えば 、 " self .__ dict __[ name ] = value " と し ます 。 新しい 形式 の クラス で は 、 インスタンス 辞書 に アクセス する の で は なく 、 基底 クラス の メソッド を 同じ 属性 名 で 呼び出し ます 。 
例えば 、 " object .__ setattr __( self , name , value )" と し ます 。 __ delattr __ 
__ setattr __() に 似 て い ます が 、 代入 で は なく 値 の 削除 を 行い ます 。 
この メソッド を 実装 する の は 、 オブジェクト にとって " del obj . name 
" が 意味 が ある 場合 だけ に し なけれ ば なり ませ ん 。 
3 . 3 . 2 . 1 新しい 形式 の クラス の ため の 別 の 属性 アクセス 
3 . 3 . 2 . 2 デスクリプタ ( descriptor ) の 実装 
3 . 3 . 2 . 3 デスクリプタ を 呼び出す 
属性 参照 は 、 一 次 語 の 後ろ に ピリオド と 名前 を 連ね た もの です : 
一 次 語 の 値 評価 結果 は 、 例えば モジュール 、 リスト 、 インスタンス といった 、 属性 参照 を サポート する 型 で なけれ ば なり ませ ん 。 
オブジェクト は 次に 、 指定 し た 名前 が 識別子 名 と なっ て いる よう な 属性 を 生成 する よう 問い合わせ さ れ ます 。 
問い合わせ た 属性 が 得 られ ない 場合 、 例外 AttributeError が 送出 さ れ ます 。 
それ 以外 の 場合 、 オブジェクト は 属性 オブジェクト の 型 と 値 を 決定 し 、 生成 し て 返し ます 。 
同じ 属性 参照 を 複数 回 評価 し た とき 、 互いに 異なる 属性 オブジェクト に なる こと が あり ます 。 
この インターフェース は 
Attributesinterface ( セクション 13 . 12 . 5 参照 ) の サブ タイプ です 。 
修飾 名 の 値 を 返す 。 
修飾 名 name に 対応 する ( namespace , localname ) の ペア を 返す 。 
( namespace , localname ) の ペア に 対応 する 修飾 名 を 返す 。 
すべて の 属性 の 修飾 名 を 返す 。 
Attributes オブジェクト は copy ()、 get ()、 has _ key ()、 items ()、 keys ()、 values () など を 含む 、 マッピング ・ プロトコル の 一部 を 実装 し た もの です 。 
さらに 次 の メソッド も 提供 さ れ て い ます 。 : 
属性 の 数 を 返す 。 
属性 の 名前 を 返す 。 
属性 名 name の タイプ を 返す 。 通常 は ' CDATA '。 
属性 name の 値 を 返す 。 
上述 の open () によって 返さ れる AU _ read オブジェクト に は 、 以下 の メソッド が あり ます : 
( これ は オブジェクト の ガベージコレクション 時 に 自動的 に 呼び出さ れ ます 。 ) 
オーディオ チャンネル 数 ( モノラル なら 1 、 ステレオ なら 2 ) を 返し ます 。 
圧縮 形式 を 返し ます 。 ' ULAW '、' ALAW '、' NONE ' が サポート さ れ て いる 形式 です 。 
getcomptype () を 人 に 判読 可能 な 形 に し た もの です 。 
上述 の 形式 に対して 、 それぞれ ' CCITT G . 711 u - law '、' CCITT G . 711 A - law '、' not compressed ' が サポート さ れ て い ます 。 
get *() メソッド が 返す の と 同じ ( nchannels , sampwidth , framerate , nframes , comptype , compname ) の タプル を 返し ます 。 
n 個 の オーディオ フレーム の 値 を 読み込ん で 、 バイト ごと に 文字 に 変換 し た 文字 列 を 返し ます 。 
データ は linear 形式 で 返さ れ ます 。 
もし 元 の データ が u - LAW 形式 なら 、 変換 さ れ ます 。 
tell () で 返さ れる 値 を pos として 使用 し なけれ ば なり ませ ん 。 
返さ れる 値 は ファイル の 実際 の 位置 に対して 何 も 操作 は し ませ ん 。 
以下 の 2 つ の メソッド は 
モジュール と の 互換 性 の ため に 定義 さ れ て い ます が 、 何 も 面白い こと は し ませ ん 。 
上述 の open () によって 返さ れる Wave _ write オブジェクト に は 、 以下 の メソッド が あり ます : 
サンプル サイズ を ( バイト 数 で ) 設定 し ます 。 
フレーム レート を 設定 し ます 。 
フレーム 数 を 設定 し ます 。 
あと から フレーム が 書き込ま れる と フレーム 数 は 変更 さ れ ます 。 
圧縮 形式 と その 記述 を 設定 し ます 。 ' NONE ' と ' ULAW ' だけ が 、 出力 時 に サポート さ れ て いる 形式 です 。 
全て の 変数 を 設定 し ます 。 
ファイル の 中 の 現在 位置 を 返し ます 。 AU _ read . tell () と AU _ read . setpos () メソッド で お断り し た こと が この メソッド に も 当てはまり ます 。 
writeframes () や writeframesraw () メソッド を 呼び出し た あと で 、 どんな パラメータ を 設定 しよ う として も 不正 と なる こと に 注意 し て 下さい 。 
オーディオデバイスオブジェクト は open () で 返さ れ 、 この オブジェクト に は 以下 の メソッド が 定義 さ れ て い ます ( control オブジェクト は 除き ます 。 これ に は getinfo ()、 setinfo ()、 fileno ()、 drain () だけ が 定義 さ れ て い ます ): 
この メソッド は デバイス を 明示 的 に 閉じ ます 。 
オブジェクト を 削除 し て も 、 それ を 参照 し て いる もの が あっ て 、 すぐ に 閉じ て くれ ない 場合 に 便利 です 。 
閉じ られ た デバイス を 使う こと は でき ませ ん 。 
デバイス に 関連づけ られ た ファイル ディスクリプタ を 返し ます 。 
これ は 、 後述 の SIGPOLL の 通知 を 組み立てる の に 使わ れ ます 。 
この メソッド は 全て の 出力 中 の プロセス が 終了 する まで 待っ て 、 それから 制御 が 戻り ます 。 この メソッド の 呼び出し は そう 必要 で は あり ませ ん : オブジェクト を 削除 する と 自動的 に オーディオ デバイス を 閉じ て 、 暗黙 の うち に 吐き出し ます 。 
この メソッド は 全て の 出力 中 の もの を 捨て去り ます 。 
ユーザ の 停止 命令 に対する 反応 の 遅れ ( 1 秒 まで の 音声 の バッファリング によって 起こり ます ) を 避ける の に 使わ れ ます 。 
この メソッド は 入出力 の ボリューム 値 など の 情報 を 引き出し て 、 オーディオ ステータス の オブジェクト 形式 で 返し ます 。 
この オブジェクト に は 何 も メソッド は あり ませ ん が 、 現在 の デバイス の 状態 を 示す 多く の 属性 が 含ま れ ます 。 
属性 の 名称 と 意味 は sun / audioio . h と 
audio ( 7 I ) に 記載 が あり ます 。 
メンバー 名 は 相当 する C の もの と は 少し 違っ て い ます : ステータス オブジェクト は 1 つ の 構造 体 です 。 
その 中 の 構造 体 で ある play の メンバー に は 名前 の 初め に " o _" が つい て い て 、 record に は " i _" が つい て い ます 。 
その ため 、 C の メンバー で ある play . sample _ rate は o _ sample _ rate として 、 record . gain は i _ gain として 参照 さ れ 、 monitor _ gain は そのまま monitor _ gain で 参照 さ れ ます 。 
この メソッド は 録音 側 で バッファリング さ れる サンプル 数 を 返し ます 。 
つまり 、 プログラム は 同じ 大き さ の サンプル に対する read () の 呼び出し を ブロック し ませ ん 。 
この メソッド は 再生 側 で バッファリング さ れる サンプル 数 を 返し ます 。 
残念 ながら 、 この 数値 は ブロック なし に 書き込める サンプル 数 を 調べる の に は 使え ませ ん 。 という の は 、 カーネル の 出力 キュー の 長 さ は 可変 だ から です 。 
この メソッド は オーディオ 入力 から size の サイズ の サンプル を 読み込ん で 、 Python の 文字 列 として 返し ます 。 
この 関数 は 必要 な データ が 得 られる まで 他 の 操作 を ブロック し ます 。 
この メソッド は オーディオ デバイス の ステータス パラメータ を 設定 し ます 。 
パラメータ status は getinfo () で 返さ れ たり 、 プログラム で 変更 さ れ た オーディオステータスオブジェクト です 。 
パラメータ として オーディオ サンプル を Python 文字 列 を 受け取り 、 再生 し ます 。 もし 十分 な バッファ の 空き が あれ ば すぐ に 制御 が 戻り 、 そう で ない なら ブロック さ れ ます 。 
オーディオ デバイス は SIGPOLL を 介し て 様々 な イベント の 非同期 通知 に 対応 し て い ます 。 
Python で これ を どの よう に し たら できる か 、 例 を 挙げ ます : 
6 . 3 . 1 累算 代入 文 ( augmented assignment statement ) 累算 代入 文 は 、 二 項 演算 と 代入 文 を 組み合わせ て 一つ の 文 に し た もの です : 
累算 代入 文 は 、 ターゲット ( 通常 の 代入 文 と 違っ て 、 アンパック は 起こり ませ ん ) と 式 リスト を 評価 し 、 それら 二つ の 被 演算 子 間 で 特定 の 累算 代入 型 の 二 項 演算 を 行い 、 結果 を もと の ターゲット に 代入 し ます 。 
ターゲット は 一 度 しか 評価 さ れ ませ ん 。 x += 1 の よう な 累算 代入 式 は 、 x = x + 1 の よう に 書き換え て ほぼ 同様 の 動作 に でき ます が 、 厳密 に 等価 に は なり ませ ん 。 
累算 代入 の 方 で は 、 x は 一 度 しか 評価 さ れ ませ ん 。 
同様 に 、 累算 代入 で 行わ れる 二 項 演算 は 、 場合 によって インプレース 演算 が 行わ れる こと を 除き 、 通常 の 二 項 演算 と 同じ です 。 属性 参照 の ターゲット の 場合 、 代入 前 の 初期 値 は getattr () で 取り出さ れ 、 演算 結果 は setattr () で 代入 さ れ ます 。 
二つ の メソッド が 同じ 変数 を 参照 する という 必然 性 は ない ので 注意 し て ください 。 
例えば : 
class A : x = 3 # class variablea = A () a . x += 1 # writes a . x as 4 leaving A . x as 3 の よう に 、 getattr () が クラス 変数 を 参照 し て い て も 、 setattr () は インスタンス 変数 へ の 書き込み を 行っ て しまい ます 。 
1 . 2 幕間 小話 : エラー と 例外 
1 . 4 モジュール の メソッド テーブル と 初期 化 関数 
先 ほど の 関数 の 例 に 戻る と 、 今度 は 以下 の 実 行文 を 理解 できる はず です : 
この 実行 文 は 、 PyArg _ ParseTuple () が セット する 例外 によって 、 引数 リスト に 何らかの エラー が 生じ た とき に NULL ( オブジェクト へ の ポインタ を 返す タイプ の 関数 における エラー 標示 値 ) を 返し ます 。 
エラー で なけれ ば 、 引数 として 与え た 文字 列 値 は ローカル な 変数 command に コピー さ れ て い ます 。 
この 操作 は ポインタ 代入 で あり 、 ポインタ が 指し て いる 文字 列 に対して 変更 が 行わ れる と は 想定 さ れ て い ませ ん ( 従っ て 、 標準 C で は 、 変数 command は " const char * command " として 適切 に 定義 せ ね ば なり ませ ん )。 次 の 文 で は 、 PyArg _ ParseTuple () で 得 た 文字 列 を 渡し て Unix 関数 system () を 呼び出し て い ます : 
spam . system () は sts を Python オブジェクト として 返さ ね ば なり ませ ん 。 
これ に は 、 PyArg _ ParseTuple () の 逆と も いう べき 関数 Py _ BuildValue () を 使い ます : Py _ BuildValue () は 書式 化 文字 列 と 任意 の 数 の C の 値 を 引数 に とり 、 新た な Python オブジェクト を 返し ます 。 Py _ BuildValue () に関する 詳しい 情報 は 後で 示し ます 。 
上 の 場合 で は 、 Py _ BuildValue () は 整数 オブジェクト を 返し ます 。 
( そう 、 整数 で すら 、 Python において は ヒープ 上 の オブジェクト な の です ! ) 何ら 有用 な 値 を 返さ ない 関数 ( void を 返す 関数 ) に 対応 する Python の 関数 は None を 返さ ね ば なり ませ ん 。 
関数 に None を 返さ せる に は 、 以下 の よう な 慣用 句 を 使い ます ( この 慣用 句 は Py _ RETURN _ NONE マクロ に 実装 さ れ て い ます ): 
Py _ None は 特殊 な Pyhton オブジェクト で ある None に 対応 する C で の 名前 です 。 
これ まで 見 て き た よう に ほとんど の コンテキスト で `` エラー '' を 意味 する NULL ポインタ と は 違い 、 None は 純粋 な Python の オブジェクト です 。 
BaseHandler オブジェクト は 直接的 に 役に立つ 2 つ の メソッド と 、 その他 として 導出 クラス で 使わ れる こと を 想定 し た メソッド を 提供 し ます 。 
以下 は 直接的 に 使う ため の メソッド です : 
親 オブジェクト として 、 director を 追加 し ます 。 
全て の 親 オブジェクト を 削除 し ます 。 
以下 の メンバ および メソッド は BaseHandler から 導出 さ れ た クラス で のみ 使わ れ ます : 
注意 : 慣習 的 に 、 
protocol _ request () や 
protocol _ response () といった メソッド を 定義 し て いる サブ クラス は * Processor と 名づけ 、 その他 は * Handler と 名づける こと に なっ て い ます 
有効 な OpenerDirector です 。 この 値 は 違う プロトコル を 使っ て URL を 開く 場合 や エラー を 処理 する 際 に 使わ れ ます 。 
この メソッド は BaseHandler で は 定義 さ れ て い ませ ん 。 しかし 、 全て の URL を キャッチ さ せ たい なら 、 サブ クラス で 定義 する 必要 が あり ます 。 
この メソッド が 定義 さ れ て い た 場合 、 OpenerDirector から 呼び出さ れ ます 。 この メソッド は OpenerDirector の メソッド open () が 返す 値 について 記述 さ れ て いる よう な ファイル 類似 の オブジェクト か 、 None を 返さ なく て は なり ませ ん 。 
この メソッド が 送出 する 例外 は 、 真に 例外 的 な こと が 起き ない 限り 、 URLError を 送出 し なけれ ば なり ませ ん ( 例えば 、 MemoryError を URLError を マップ し て は いけ ませ ん )。 
この メソッド は プロトコル 固有 の オープン メソッド が 呼び出さ れる 前 に 呼び出さ れ ます 。 protocol _ open ( 
戻り 値 は default _ open と 同じ で なけれ ば なり ませ ん 。 
この メソッド は BaseHandler で は 定義 さ れ て い ませ ん 。 しかし その他 の 処理 さ れ なかっ た HTTP エラー を 処理 する 機能 を もたせ たい なら 、 サブ クラス で 定義 する 必要 が あり ます 。 
この メソッド は エラー に 遭遇 し た OpenerDirector から 自動的 に 呼び出さ れ ます 。 その他 の 状況 で は 普通 呼び出す べき で は あり ませ ん 。 
nnn は 3 桁 の 10 進数 から なる HTTP エラーコード で なく て は なり ませ ん 。 
戻り 値 も また 、 urlopen () の 戻り 値 と 同じ インタフェース を 実装 し た オブジェクト で なけれ ば なり ませ ん 。 
この クラス は 、 文字 列 ( NUL を 含む ) で 初期 化 する こと が でき ます 。 Binary の 内容 は 、 属性 で 参照 し ます 。 
Binary インスタンス が カプセル 化 し て いる バイナリ データ 。 
この データ は 8 bit クリーン です 。 
以下 の メソッド は 、 主 に 内部 的 に マーシャル / アンマーシャル 時 に 使用 さ れ ます : 
指定 さ れ た base 64 文字 列 を デコード し 、 インスタンス の データ と し ます 。 
バイナリ 値 を base 64 で エン コード し 、 出力 ストリーム オブジェクト out に 出力 し ます 。 
また 、 __ cmp __ で 定義 さ れる 演算 子 を 使用 する こと が でき ます 。 
5 . 5 単項 算術 演算 ( unary arithmetic 
二 項 算術 演算 は 、 慣習 的 な 優先 順位 を 踏襲 し て い ます 。 
演算 子 の いずれ か は 、 特定 の 非 数値 型 に も 適用 さ れる ので 注意 し て ください 。 
べき乗 ( power ) 演算 子 を 除き 、 演算 子 に は 二つ の レベル 、 すなわち 乗算 的 ( multiplicatie ) 演算 子 と 加算 的 ( additie ) 演算 子 しか あり ませ ん : 
* ( 乗算 : multiplication ) 演算 は 、 引数 間 の 積 に なり ます 。 
引数 の 組 は 、 双方 とも に 数値 型 で ある か 、 片方 が 整数 ( 通常 の 整数 または 長 整数 ) 型 で 他方 が シーケンス 型 か の どちら か で なけれ ば なり ませ ん 。 前者 の 場合 、 数値 は 共通 の 型 に 変換 さ れ た 後 乗算 さ れ ます 。 
後者 の 場合 、 シーケンス の 繰り返し 操作 が 行わ れ ます 。 繰り返し 数 を 負 に する と 、 空 の シーケンス に なり ます 。 
/ ( 除算 : division ) および // ( 切り捨て 除算 : floor division ) は 、 引数 間 の 商 に なり ます 。 
数値 引数 は まず 共通 の 型 に 変換 さ れ ます 。 
整数 または 長 整数 の 除算 結果 は 、 同じ 型 の 整数 に なり ます ; この 場合 、 結果 は 数学 的 な 除算 に 関数 ` floor ' を 適用 し た もの に なり ます 。 
ゼロ による 除算 を 行う と ZeroDivisionError 例外 を 送出 し ます 。 
% ( モジュロ : modulo ) 演算 は 、 第 一 引数 を 第 二 引数 で 除算 し た とき の 剰余 に なり ます 。 
数値 引数 は まず 共通 の 型 に 変換 さ れ ます 。 
右 引数 値 が ゼロ の 場合 に は 、 ZeroDivisionError 例外 が 送出 さ れ ます 。 
引数 値 は 浮動 小数点 で も よく 。 例えば 3 . 14 % 0 . 7 は 0 . 34 に なり ます ( 3 . 14 は 4 * 0 . 7 + 0 . 34 だ から です )。 
モジュロ 演算 子 は 常に 第 二 引数 と 同じ 符号 ( または ゼロ ) の 結果 に なり ます ; モジュロ 演算 の 結果 の 絶対 値 は 、 常に 第 二 引数 の 絶対 値 より も 小さく なり ます 。 
整数 による 除算 演算 や モジュロ 演算 は 、 恒等 式 : x == ( x / y )* y + ( x % y ) と 関係 し て い ます 。 
整数 除算 や モジュロ は また 、 組み込み 関数 divmod (): divmod ( x , y ) == ( x / y , x % y ) と 関係 し て い ます 。 
これら の 恒等 関係 は 浮動 小数点 の 場合 に は 維持 さ れ ませ ん ; x / y が floor ( x / y ) や floor ( x / y ) - 1 に 置き換え られ た 場合 、 これら の 恒等 式 は 近似 性 を 維持 し ます 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 
切り捨て 除算 演算 子 、 モジュロ 演算 子 、 および divmod () 関数 は 、 複素数 に対して は もはや 定義 さ れ て い ませ ん 。 
目的 に 合う なら ば 、 代わり に abs () を 使っ て 浮動 小数点 に 変換 し て ください 。 
+ ( 加算 ) 演算 は 、 引数 を 加算 し た 値 を 返し ます 。 引数 は 双方 とも 数値 型 か 、 双方 とも 同じ 型 の シーケンス で なけれ ば なり ませ ん 。 
前者 の 場合 、 数値 は 共通 の 型 に 変換 さ れ 、 加算 さ れ ます 。 
後者 の 場合 、 シーケンス は 結合 ( concatenate ) さ れ ます 。 
- ( 減算 ) 演算 は 、 引数 間 で 減算 を 行っ た 値 を 返し ます 。 
数値 引数 は まず 共通 の 型 に 変換 さ れ ます 。 
... の 絶対 値 より も 小さく なり ます 。 5 . 2 
例えば 、 Python の 浮動 小数点 型 が IEEE 754 倍 精度 数 型 に なっ て いる プラットフォーム を 仮定 する と 、 - 1 e - 100 % 1 e 100 は 1 e 100 と 同じ 符号 に なる はず な のに 、 計算 結果 は - 1 e - 100 + 1 e 100 と なり ます 。 これ は 数値 計算 的 に は 厳密 に 1 e 100 と 等価 です 。 
math モジュール の 関数 fmod () は 、 最初 の 引数 と 符号 が 一致 する よう な 値 を 返す ので 、 上記 の 場合 に は - 1 e - 100 を 返し ます 。 どちら の アプローチ が 適切 か は 、 アプリケーション に 依存 し ます 。 
... 置き換え られ た 場合 、 これら の 恒等 式 は 近似 性 を 維持 し ます 。 
x が y の 整数 倍 に 非常 に 近い 場合 、 丸め誤差 によって floor ( x / y ) は ( x - x % y )/ y より も 大きな 値 に なる 可能 性 が あり ます 。 
その よう な 場合 、 Python は divmod ( x , y )[ 0 ] * y + x % y が x に 非常 に 近く なる という 関係 を 保つ ため に 、 後者 の 値 を 返し ます 。 
一般 に は 、 bisect () 関数 は 数値 データ を 分類 する の に 役に立ち ます 。 
この 例 で は 、 bisect () を 使っ て 、 ( たとえば ) 順序 の つい た 数値 の 区切り 点 の 集合 に 基づい て 、 試験 全体 の 成績 の 文字 を 調べ ます 。 
区切り 点 は 85 以上 は ` A '、 75 .. 84 は ` B '、 など です 。 grades = " FEDCBA " breakpoints = [ 30 , 44 , 66 , 75 , 85 ] from bisect import bisect def grade ( total ):... return grades [ bisect ( breakpoints , total )]... grade ( 66 )' C ' map ( grade , [ 33 , 99 , 77 , 44 , 12 , 88 ])[' E ', ' A ', ' B ', ' D ', ' F ', ' A '] 
通常 および 長 整数 型 で は さらに 、 ビット 文字 列 に対して のみ 意味 の ある 演算 を サポート し て い ます 。 
演算 
結果 
注釈 
ビット 単位 の x と y の 論理 和 
ビット 単位 の x と y の 論理 積 
x の n ビット 左 シフト 
x の n ビット 右 シフト 
x の ビット 反転 
注釈 : 
負 値 の シフト 数 は 不正 で あり 、 ValueError が 送出 さ れ ます 。 
n ビット の 左 シフト は 、 オーバフロー チェック を 行わ ない pow ( 2 , n ) による 乗算 と 等価 です 。 
n ビット の 右 シフト は 、 オーバフロー チェック を 行わ ない pow ( 2 , n ) による 除算 と 等価 です 。 
以下 の 三つ の ビット 単位 演算 に は 、 それぞれ 異なる 優先 順位 レベル が あり ます : 
演算 子 は 、 引数 間 で ビット 単位 の AND を とっ た 値 に なり ます 。 引数 は 整数 または 長 整数 で なけれ ば なり ませ ん 。 
引数 は 共通 の 型 に 変換 さ れ ます 。 
^ 演算 子 は 、 引数 間 で ビット 単位 の XOR ( 排他 的 OR ) を とっ た 値 に なり ます 。 引数 は 整数 または 長 整数 で なけれ ば なり ませ ん 。 
引数 は 共通 の 型 に 変換 さ れ ます 。 
| 演算 子 は 、 引数 間 で ビット 単位 の OR ( 非 排他 的 OR ) を とっ た 値 に なり ます 。 
引数 は 整数 または 長 整数 で なけれ ば なり ませ ん 。 
スペース 、 タブ 、 フォーム フィード 、 および コメント のみ を 含む 論理 行 は 無視 さ れ ます ( すなわち 、 NEWLINE トー クン は 生成 さ れ ませ ん )。 
文 を 対話 的 に 入力 し て いる 際 に は 、 空 行 の 扱い は 行 読み込み - 評価 - 出力 ( read - eval - print ) ループ の 実装 によって 異なる かも しれ ませ ん 。 
標準 的 な 実装 で は 、 完全 な 空 行 で でき た 論理 行 ( すなわち 、 空白 文字 も コメント も 全く 含ま ない 空 行 ) は 、 複数 行 から なる 実行 文 の 終端 を 示し ます 。 
コード オブジェクト は 、 関数 本体 の よう な `` 擬似 コンパイル さ れ た '' Python の 実行 可能 コード を 表す ため に 実装 系 によって 使わ れ ます 。 コード オブジェクト は グローバル な 実行 環境 へ の 参照 を 持た ない 点 で 関数 オブジェクト と は 異なり ます 。 
コード オブジェクト は 組み込み 関数 compile () によって 返さ れ 、 関数 オブジェクト の func _ code 属性 として 取り出す こと が でき ます 。 
を 読ん で 下さい 。 
この オブジェクト は 拡張 スライス 表記 によって 使わ れ ます ( 
を 参照 し て ください )。 
特殊 な 操作 は 何 も サポート し て い ませ ん 。 
省略 表記 オブジェクト は 一つ だけ で 、 その 名前 は Ellipsis ( 組み込み 名 ) です 。 Ellipsis と 書き表さ れ ます 。 
ファイル オブジェクト 
ファイル 操作 が I / O 関連 の 理由 で 失敗 し た 場合 例外 IOError が 送出 さ れ ます 。 
この 理由 に は 例えば seek () を 端末 デバイス に 行っ たり 、 読み出し 専用 で 開い た ファイル に 書き込み を 行う といった 、 何らかの 理由 によって その ファイル で 定義 さ れ て い ない 操作 を 行っ た よう な 場合 も 含ま れ ます 。 ファイル は 以下 の メソッド を 持ち ます : 
ファイル を 閉じ ます 。 
閉じ られ た ファイル は それ 以後 読み書き する こと は でき ませ ん 。 ファイル が 開か れ て いる こと が 必要 な 操作 は 、 ファイル が 閉じ られ た 後 は すべて ValueError を 送出 し ます 。 
close を 一 度 以上 呼び出し て も かまい ませ ん 。 
stdio の fflush () の よう に 、 内部 バッファ を フラッシュ し ます 。 
ファイル 類似 の オブジェクト によって は 、 この 操作 は 何 も 行い ませ ん 。 
背後 に ある 実装 系 が オペレーティングシステム に I / O 操作 を 要求 する ため に 用いる 、 整数 の `` ファイル 記述 子 '' を 返し ます 。 
この 値 は 他 の 用途 として 、 
モジュール や os . read () や その 仲間 の よう な 、 ファイル 記述 子 を 必要 と する 低 レベル の インタフェース で 役に立ち ます 。 
注意 : ファイル 類似 の オブジェクト が 実際 の ファイル に 関連付け られ て い ない 場合 、 この メソッド を 提供 す べき で は あり ませ ん 。 
ファイル が tty ( または 類似 の ) デバイス に 接続 さ れ て いる 場合 True を 返し 、 そう で ない 場合 False を 返し ます 。 
注意 : ファイル 類似 の オブジェクト が 実際 の ファイル に 関連付け られ て い ない 場合 、 この メソッド を 実装 す べき で は あり ませ ん 。 
ファイル オブジェクト は それ 自身 が イテレータ です 。 すなわち 、 iter ( f ) は ( f が 閉じ られ て い ない 限り ) f を 返し ます 。 
for ループ ( 例えば for line in f : print line ) の よう に ファイル が イテレータ として 使わ れ た 場合 、 next () メソッド が 繰り返し 呼び出さ れ ます 。 
個 の メソッド は 次 の 入 力行 を 返す か 、 または EOF に 到達 し た とき に StopIteration を 送出 し ます 。 
ファイル 内 の 各行 に対する for ループ ( 非常 に よく ある 操作 です ) を 効率 的 な 方法 で 行う ため に 、 next () メソッド は 隠蔽 さ れ た 先読み バッファ を 使い ます 。 
先読み バッファ を 使っ た 結果 として 、 ( readline () の よう な ) 他 の ファイル メソッド と next () を 組み合わせ て 使う と うまく 動作 し ませ ん 。 
しかし 、 seek () を 使っ て ファイル 位置 を 絶対 指定 し なおす と 、 先読み バッファ は フラッシュ さ れ ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
最大 で size バイト を ファイル から 読み込み ます ( size バイト を 取得 する 前 に EOF に 到達 し た 場合 、 それ 以下 の 長 さ に なり ます ) size 引数 が 負 で ある か 省略 さ れ た 場合 、 EOF に 到達 する まで の 全て の データ を 読み込み ます 。 
読み出さ れ た バイト 列 は 文字 列 オブジェクト として 返さ れ ます 。 
直後 に EOF に 到達 し た 場合 、 空 の 文字 列 が 返さ れ ます 。 
( 端末 の よう な ある 種 の ファイル で は 、 EOF に 到達 し た 後 で ファイル を 読み つづける こと に も 意味 が あり ます 。 
) この メソッド は 、 size バイト に 可能 な 限り 近く データ を 取得 する ため に 、 背後 の C 関数 fread () を 1 度 以上 呼び出す かも しれ ない ので 注意 し て ください 。 
また 、 非 ブロック ・ モード で は 、 size パラメータ が 与え られ なく て も 、 要求 さ れ た より も 少ない データ が 返さ れる 場合 が ある こと に 注意 し て ください 。 
ファイル から 一行 を 読み出し ます 。 
末尾 の 改行 文字 は 文字 列 中 に 残さ れ ます ( です が 、 ファイル が 不完全 な 行 で 終わっ て いる 場合 は 何 も 残ら ない かも しれ ませ ん )。 
注意 : stdio の fgets () と 違い 、 入力 中 に ヌル 文字 (' 0 ') が 含ま れ て いれ ば 、 ヌル 文字 を 含ん だ 文字 列 が 返さ れ ます 。 
readline () を 使っ て に 到達 する まで 読み出し 、 EOF 読み出さ れ た 行 を 含む リスト を 返し ます 。 
オプション の sizehint 引数 が 存在 すれ ば 、 EOF まで 読み出す 代わり に 完全 な 行 を 全体 で 大体 sizehint バイト に なる よう に ( おそらく 内部 バッファ サイズ を 切り詰め て ) 読み出し ます 。 
ファイル 類似 の インタフェース を 実装 し て いる オブジェクト は 、 sizehint を 実装 でき ない か 効率 的 に 実装 でき ない 場合 に は 無視 し て も かまい ませ ん 。 
個 の メソッド は iter ( f ) と 同じ 結果 を 返し ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 
代わり に " for line in file " を 使っ て ください 。 
stdio の fseek () と 同様 に 、 ファイル の 現在 位置 を 返し ます 。 whence 引数 は オプション で 、 標準 の 値 は 0 ( 絶対 位置 指定 ) です ; 他 に 取り 得る 値 は 1 ( 現在 の ファイル 位置 から 相対 的 に seek する ) および 2 ( ファイル の 末端 から 相対 的 に seek する ) です 。 
戻り 値 は あり ませ ん 。 
ファイル を 追記 モード ( モード ' a ' または ' a +') で 開い た 場合 、 書き込み を 行う まで に 行っ た seek () 操作 は すべて 元 に 戻さ れる ので 注意 し て ください 。 
ファイル が 追記 のみ の 書き込み モード (' a ') で 開か れ た 場合 、 この メソッド は 実質 何 も 行い ませ ん が 、 読み込み が 可能 な 追記 モード (' a +') で 開か れ た ファイル で は 役に立ち ます 。 
ファイル を テキスト モード (' t ') で 開い た 場合 、 tell () が 返す オフセット のみ が 正しい 値 に なり ます 。 
他 の オフセット 値 を 使っ た 場合 、 その 振る舞い は 未定義 です 。 全て の ファイル オブジェクト が seek できる と は 限ら ない ので 注意 し て ください 。 
stdio の ftell () と 同様 、 ファイル の 現在 位置 を 返し ます 。 
ファイル の サイズ を 切り詰め ます 。 
オプション の size が 存在 すれ ば 、 ファイル は ( 最大 で ) 指定 さ れ た サイズ に 切り詰め られ ます 。 
標準 設定 の サイズ の 値 は 、 現在 の ファイル 位置 まで の ファイルサイズ です 。 
現在 の ファイル 位置 は 変更 さ れ ませ ん 。 
指定 さ れ た サイズ が ファイル の 現在 の サイズ を 越える 場合 、 その 結果 は プラットフォーム 依存 な ので 注意 し て ください : 可能 性 として は 、 ファイル は 変更 さ れ ない か 、 指定 さ れ た サイズ まで ゼロ で 埋め られる か 、 指定 さ れ た サイズ まで 未 定義 の 新た な 内容 で 埋め られる か 、 が あり ます 。 利用 可能 な 環境 : Windows , 多く の Unix 系 。 
文字 列 を ファイル に 書き込み ます 。 
バッファリング によって 、 flush () または close () が 呼び出さ れる まで 実際 に ファイル 中 に 文字 列 が 書き込ま れ ない こと も あり ます 。 
文字 列 から なる シーケンス を ファイル に 書き込み ます 。 
ファイル は イテレータプロトコル を サポート し ます 。 
各 反復 操作 で は 
現在 の ファイル オブジェクト の 状態 を 示す ブール 値 です 。 
この 値 は 読み出し 専用 の 属性 です ; close () メソッド が この 値 を 変更 し ます 。 全て の ファイル 類似 オブジェクト で 利用 可能 と は 限り ませ ん 。 
この ファイル が 使っ て いる エン コーディング です 。 
Unicode 文字 列 が ファイル に 書き込ま れる 際 、 Unicode 文字 列 は この エン コーディング を 使っ て バイト 文字 列 に 変換 さ れ ます 。 さらに 、 ファイル が 端末 に 接続 さ れ て いる 場合 、 この 属性 は 端末 が 使っ て いる と おぼしき エン コーディング ( この 情報 は 端末 が うまく 設定 さ れ て い ない 場合 に は 不正確 な こと も あり ます ) を 与え ます 。 
この 属性 は 読み出し 専用 で 、 すべて の ファイル 類似 オブジェクト に ある と は 限り ませ ん 。 
また この 値 は None の こと も あり 、 この 場合 、 ファイル は Unicode 文字 列 の 変換 の ため に システム の デフォルトエンコーディング を 使い ます 。 
ファイル の I / O モード です 。 
ファイル が 組み込み 関数 open () で 作成 さ れ た 場合 、 この 値 は 引数 mode の 値 に なり ます 。 
この 値 は 読み出し 専用 の 属性 で 、 全て の ファイル 類似 オブジェクト に 存在 する と は 限り ませ ん 。 
ファイル オブジェクト が open () を 使っ て 生成 さ れ た 時 の ファイル の 名前 です 。 
そう で なけれ ば 、 ファイル オブジェクト 生成 の 起源 を 示す 何らかの 文字 列 に なり 、 "..." の 形式 を とり ます 。 
この 値 は 読み出し 専用 の 属性 で 、 全て の ファイル 類似 オブジェクト に 存在 する と は 限り ませ ん 。 
Python を ビルド する とき 、 -- with - universal - newlines オプション が configure に 指定 さ れ た 場合 ( デフォルト )、 この 読み出し 専用 の 属性 が 存在 し ます 。 一般 的 な 改行 に 変換 する 読み出し モード で 開か れ た ファイル において 、 この 属性 は ファイル の 読み出し 中 に 遭遇 し た 改行 コード を 追跡 し ます 。 
取り 得る 値 は ' r '、' n '、' rn '、 None ( 不明 または 、 まだ 改行 し て い ない )、 見つかっ た 全て の 改行 文字 を 含む タプル の いずれ か です 。 最後 の タプル は 、 複数 の 改行 慣例 に 遭遇 し た こと を 示し ます 。 
一般 的 な 改行 文字 を 使う 読み出し モード で 開か れ て い ない ファイル の 場合 、 この 属性 の 値 は None です 。 
print 文 を 使っ た 場合 、 他 の 値 を 出力 する 前 に スペース 文字 を 出力 する 必要 が ある か どう か を 示す ブール 値 です 。 ファイル オブジェクト を シミュレート 仕様 と する クラス は 書き込み 可能 な softspace 属性 を 持た なけれ ば なら ず 、 この 値 は ゼロ に 初期 化 さ れ なけれ ば なり ませ ん 。 
この 値 は Python で 実装 さ れ て いる ほとんど の クラス で 自動的 に 初期 化 さ れ ます ( 属性 へ の アクセス 手段 を 上書き する よう な オブジェクト で は 注意 が 必要 です ); C で 実装 さ れ た 型 で は 、 書き込み 可能 な softspace 属性 を 提供 し なけれ ば なり ませ ん 。 
注意 : この 属性 は print 文 を 制御 する ため に 用い られ ます が 、 print の 内部 状態 を 乱さ ない ため に 、 その 実装 を 行う こと は でき ませ ん 。 
file () は Python 2 . 2 で 新しく 追加 さ れ まし た 。 
古い バージョン の 組み込み 関数 open () は file () の 別名 です 。 
... 何 も 残ら ない かも しれ ませ ん )。 
改行 を 残す 利点 は 、 空 の 文字 列 が 返る と EOF を 示し 、 紛らわしく なく なる から です 。 
また 、 ファイル の 最後 の 行 が 改行 で 終わっ て いる か そう で ない ( ありえる こと です !) か ( 例えば 、 ファイル を 行 単位 で 読み ながら その 完全 な コピー を 作成 し た 場合 に は 問題 に なり ます ) を 調べる こと が でき ます 。 
この オブジェクト は 明示 的 に 値 を 返さ ない 関数 によって 返さ れ ます 。 
この オブジェクト に は 特有 の 操作 は あり ませ ん 。 
ヌルオブジェクト は 一つ だけ で 、 None ( 組み込み 名 ) と 名づけ られ て い ます 。 None と 書き表さ れ ます 。 
型 オブジェクト は 様々 な オブジェクト 型 を 表し ます 。 
オブジェクト の 型 は 組み込み 関数 type () で アクセス さ れ ます 。 
型 オブジェクト に は 特有 の 操作 は あり ませ ん 。 
標準 モジュール 
に は 全て の 組み込み 型名 が 定義 さ れ て い ます 。 
型 は type ' int ' の よう に 書き表さ れ ます 。 
7 . 2 . 1 ( 通常 ) 整数 型 オブジェクト ( plain integer 
7 . 2 . 3 長 整数 型 オブジェクト ( long integer 
7 . 2 . 2 Bool 型 オブジェクト Python の Bool 型 は 整数 の サブ クラス として 実装 さ れ て い ます 。 
ブール 型 の 値 は 、 Py _ False と Py _ True の 2 つ しか あり ませ ん 。 
従って 、 通常 の 生成 / 削除 関数 は ブール 型 に は あてはまり ませ ん 。 
と は いえ 、 以下 の マクロ が 利用 でき ます 。 
o が PyBool _ Type の 場合 に 真 を 返し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 PyObject * 
Python における False オブジェクト です 。 
この オブジェクト は メソッド を 持ち ませ ん 。 
参照 カウント の 点 で は 、 他 の オブジェクト と 同様 に 扱う 必要 が あり ます 。 
Python における True オブジェクト です 。 
Py _ False に 適切 な 参照 カウント の インクリメント を 行っ て 、 関数 から 返す ため の マクロ です 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 Py _ RETURN _ TRUE 
Py _ True に 適切 な 参照 カウント の インクリメント を 行っ て 、 関数 から 返す ため の マクロ です 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
v の 値 に 応じ て Py _ True または Py _ False を 返し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
この クラス は 全て の Python の 値 で 初期 化 する こと が でき 、 生成 さ れる インスタンス は 指定 し た 値 の 真偽 値 によって のみ 決まり ます 。 
Boolean という 名前 から 想像 さ れる 通り に 各種 の Python 演算 子 を 実装 し て おり 、 __ cmp __(),__ repr __(), __ int __(), __ nonzero __() で 定義 さ れる 演算 子 を 使用 する こと が でき ます 。 以下 の メソッド は 、 主 に 内部 的 に アンマーシャル 時 に 使用 さ れ ます : 
出力 ストリーム オブジェクト out に 、 XML - RPC エン コーディング の Boolean 値 を 出力 し ます 。 
x が 偽 なら y 、 そう で なけれ ば x 
x が 偽 なら x 、 そう で なけれ ば y 
x が 偽 なら True 、 そう で なけれ ば False 
これら の 演算 子 は 、 演算 を 行う 上 で 必要 が ない 限り 、 二つ 目 の 引数 を 評価 し ませ ん 。 
" not " は 非 ブール 演算 子 より も 低い 演算 優先 度 な ので 、 not a == b 
は not ( a == b ) と 評価 さ れ 、 
は 構文 エラー と なり ます 。 
break 文 は for ループ や while ループ 内 の ネスト で 構文 法的 に のみ 現れ ます が 、 ループ 内 の 関数 定義 や クラス 定義 に は 現れ ませ ん 。 
break 文 は 、 文 を 囲う 最も 内側 の ループ を 終了 さ せ 、 ループ に オプション の else 節 が ある 場合 に は else 節 に 飛び ます 。 
for ループ を break によって 終了 する と 、 ループ 制御 ターゲット は その 時 の 値 を 保持 し ます 。 
break が finally 節 を 伴う try 文 の 外側 に 処理 を 渡す 際 に は 、 ループ を 実際 に 抜ける 前 に その finally 節 が 実行 さ れ ます 。 
ブラウザコントローラー に は 2 つ の メソッド が 定義 さ れ て い て 、 モジュール レベル の 便利 な 2 つ の 関数 に 相当 し ます : 
この コントローラー で ハンドル さ れ た ブラウザ で url を 表示 し ます 。 
new が true なら 、 可能 で あれ ば ブラウザ の 新しい ウィンドウ が 開き ます 。 
可能 で あれ ば 、 この コントローラー で ハンドル さ れ た ブラウザ の 新しい ウィンドウ で url を 開き ます が 、 そう で ない 場合 は ブラウザ の ただ 1 つ の ウィンドウ で url を 開き ます 。 
インスタンス 化 し た ハッシュ 、 B - Tree , および レコード オブジェクト は 辞書 型 と 同じ メソッド を サポート する よう に なり ます 。 
加え て 、 以下 に 列挙 し た メソッド も サポート し ます 。 バージョン 2 . 3 . 1 で 変更 さ れ た 仕様 : 辞書 型 メソッド を 追加 し まし た 
データベース の 背後 に ある ファイル を 閉じ ます 。 
オブジェクト は アクセス でき なく なり ます 。 
これら の オブジェクト に は oepn メソッド が ない ため 、 再度 ファイル を 開く ため に は 、 新た な bsddb モジュール を 開く 関数 を 呼び出さ なく て は なり ませ ん 。 
DB ファイル に 収め られ て いる キー から なる リスト を 返し ます 。 
リスト 内 の キー の 順番 は 決まっ て おら ず 、 あて に は なり ませ ん 。 
特に 、 異なる ファイル 形式 の DB 間 で は 返さ れる リスト の 順番 が 異なり ます 。 
引数 key が DB ファイル に キー として 含ま れ て いる 場合 1 を 返し ます 。 
カーソル を key で 示さ れる 要素 に 移動 し 、 キー 及び 値 から なる タプル を 返し ます 。 
( bopen を 使っ て 開か れる ) B - Tree データベース で は 、 key が 実際 に は データベース 内 に 存在 し なかっ た 場合 、 カーソル は 並び 順 が key の 次 に 来る よう な 要素 を 指し 、 その 場所 の キー 及び 値 が 返さ れ ます 。 
他 の データベース で は 、 データベース 中 に key が 見つから なかっ た 場合 KeyError が 送出 さ れ ます 。 
カーソル を DB ファイル の 最初 の 要素 に 設定 し 、 その 要素 を 返し ます 。 
B - Tree データベース の 場合 を 除き 、 ファイル 中 の キー の 順番 は 決まっ て い ませ ん 。 データベース が 空 の 場合 、 この メソッド は bsddb . error を 発生 さ せ ます 。 
カーソル を DB ファイル の 次 の 要素 に 設定 し 、 その 要素 を 返し ます 。 
B - Tree データベース の 場合 を 除き 、 ファイル 中 の キー の 順番 は 決まっ て い ませ ん 。 
カーソル を DB ファイル の 直前 の 要素 に 設定 し 、 その 要素 を 返し ます 。 
B - Tree データベース の 場合 を 除き 、 ファイル 中 の キー の 順番 は 決まっ て い ませ ん 。 
( hashopen () で 開か れる よう な ) ハッシュ 表 データベース で は サポート さ れ て い ませ ん 。 
カーソル を DB ファイル の 最後 の 要素 に 設定 し 、 その 要素 を 返し ます 。 
ファイル 中 の キー の 順番 は 決まっ て い ませ ん 。 
( hashopen () で 開か れる よう な ) ハッシュ 表 データベース で は サポート さ れ て い ませ ん 。 データベース が 空 の 場合 、 この メソッド は bsddb . error を 発生 さ せ ます 。 
ディスク 上 の ファイル を データベース に 同期 さ せ ます 。 
以下 は プログラム 例 です : 
10 . 6 シーケンス オブジェクト 構造 体 ( sequence object 
10 . 8 イテレータプロトコル を サポート する 
バッファ インタフェース は 、 ある オブジェクト の 内部 データ を 一連 の データチャンク ( chunk ) として 見せる モデル を 外部 から 利用 できる よう に し ます 。 各 チャンク は ポインタ / データ 長 から なる ペア で 指定 し ます 。 
チャンク は セグメント ( segment ) と 呼ば れ 、 メモリ 内 に 不連続 的 に 配置 さ れる もの と 想定 さ れ て い ます 。 バッファ インタフェース を 利用 できる よう に し たく ない オブジェクト で は 、 PyTypeObject 構造 体 の tp _ as _ buffer メンバ を NULL に し なく て は なり ませ ん 。 
利用 できる よう に する 場合 、 tp _ as _ buffer は PyBufferProcs 構造 体 を 指さ ね ば なり ませ ん 。 注意 : 
PyTypeObject 構造 体 の tp _ flags メンバ の 値 を 0 で なく Py _ TPFLAGS _ DEFAULT に し て おく こと が とても 重要 です 。 
この 設定 は 、 PyBufferProcs 構造 体 に bf _ getcharbuffer スロット が 入っ て いる こと を Python ラン タイム に 教え ます 。 
Python の 古い バージョン に は bf _ getcharbuffer メンバ が 存在 し ない ので 、 古い 拡張 モジュール を 使お う と し て いる 新しい バージョン の Python インタプリタ は 、 この メンバ が ある か どう か テスト し て から 使える よう に する 必要 が ある の です 。 
バッファ プロトコル の 実装 を 定義 し て いる 関数 群 へ の ポインタ を 保持 する の に 使わ れる 構造 体 です 。 最初 の スロット は bf _ getreadbuffer で 、 getreadbufferproc 型 です 。 
この スロット が NULL の 場合 、 オブジェクト は 内部 データ の 読み出し を サポート し ませ ん 。 
その よう な 仕様 に は 意味 が ない ので 、 実装 を 行う 側 は この スロット に 値 を 埋める はず です が 、 呼び出し 側 で は 非 NULL の 値 か どう か きちん と 調べ て おく べき です 。 次 の スロット は bf _ getwritebuffer で 、 getwritebufferproc 型 です 。 
オブジェクト が 返す バッファ に対して 書き込み を 許可 し ない 場合 は この スロット を NULL に でき ます 。 第 三 の スロット は bf _ getsegcount で 、 getsegcountproc 型 です 。 
この スロット は NULL で あっ て は なら ず 、 オブジェクト に いくつ セグメント が 入っ て いる か を 呼び出し 側 に 教える ため に 使わ れ ます 。 
PyString _ Type や PyBuffer _ Type オブジェクト の よう な 単純 な オブジェクト に は 単一 の セグメント しか 入っ て い ませ ん 。 最後 の スロット は bf _ getcharbuffer で 、 getcharbufferproc です 。 
例えば 、 オブジェクト が 浮動 小数点 数 を 保持 する よう に 設定 さ れ た アレイ の 場合 、 呼び出し 側 が bf _ getcharbuffer を 使っ て 8 ビット 文字 列 として データ を 取り出そ う と する と 例外 を 送出 する よう に でき ます 。 この 、 内部 バッファ を `` テキスト '' として 取り出す という 概念 は 、 本質 的 に は バイナリ で 、 文字 ベース の 内容 を 持っ た オブジェクト 間 の 区別 に 使わ れ ます 。 
注意 : 現在 の ポリ シ で は 、 文字 ( character ) は マルチ バイト 文字 でも かまわ ない と 決め て いる よう に 思わ れ ます 。 
従って 、 サイズ N の バッファ が N 個 の キャラクタ から なる と は かぎら ない こと に なり ます 。 
型 構造 体 中 の フラグ ビット で 、 bf _ getcharbuffer スロット が 既知 の 値 に なっ て いる こと を 示し ます 。 
この フラグ ビット が セット さ れ て い た として も 、 オブジェクト が バッファ インタフェース を サポート し て いる こと や 、 bf _ getcharbuffer スロット が NULL で ない こと を 示す わけ で は あり ませ ん 。 
読み出し 可能 な バッファ セグメント へ の ポインタ を 返し ます 。 
この 関数 は 例外 を 送出 し て も よく 、 送出 する 場合 に は - 1 を 返さ ね ば なり ませ ん 。 
segment に 渡す 値 は ゼロ または 正 の 値 で 、 bf _ getsegcount スロット 関数 が 返す セグメント 数 より も 必ず 小さな 値 で なけれ ば なり ませ ん 。 
成功 する と 、 バッファメモリ の サイズ を 返し 、 * ptrptr を バッファメモリ を 指す ポインタ 値 に セット し ます 。 
読み出し 可能 な バッファ セグメント へ の ポインタ を * ptrptr 
に 返し 、 セグメント の 長 さ を 関数 の 戻り 値 として 返し ます 。 
エラー による 例外 の 場合 に は - 1 を - 1 を 返さ ね ば なり ませ ん 。 
オブジェクト が 呼び出し 専用 バッファ しか サポート し て い ない 場合 に は TypeError を 、 segment が 存在 し ない セグメント を 指し て いる 場合 に は SystemError を 送出 し なけれ ば なり ませ ん 。 
バッファ を 構成 する メモリ セグメント の 数 を 返し ます 。 
lenp が NULL で ない 場合 、 この 関数 の 実装 は 全て の セグメント の サイズ ( バイト 単位 ) の 合計 値 を * lenp を 介し て 報告 し なけれ ば なり ませ ん 。 
この 関数 呼び出し は 失敗 さ せ られ ませ ん 。 
セグメント segment の メモリ バッファ を ptrptr に 入れ 、 メモリ バッファ の サイズ を 返し ます 。 
が メモリ バッファ を 表す 値 に なる よう に セット さ れ ます 。 
7 . 3 . 2 . 2 メソッド および スロット 関数 ( slot function ) 
C で 実装 さ れ た Python オブジェクト は 、 `` バッファ インタフェース ( buffer interface )'' と 呼ば れる 一連 の 関数 を 公開 し て いる こと が あり ます 。 
これら の 関数 は 、 ある オブジェクト の データ を 生 ( raw ) の バイト 列 形式 で 公開 する ため に 使い ます 。 
この オブジェクト の 使い手 は 、 バッファ インタフェース を 使う こと で 、 オブジェクト を あらかじめ コピー し て おく 必要 なし に 、 オブジェクト の データ に 直接アクセス でき ます 。 バッファ インタフェース を サポート する オブジェクト の 例 として 、 文字 列 型 と アレイ ( array ) 型 の 二つ が あり ます 。 
文字 列 オブジェクト は 、 その 内容 を バッファ インタフェース の バイト 単位 形式 で 公開 し て い ます 。 
アレイ も その 内容 を 公開 し て い ます が 、 注意 する 必要 が ある の は アレイ の 要素 は 複数 バイト の 値 に なり うる 、 という こと です 。 バッファ インタフェース の 使い手 の 一 例 として 、 ファイル オブジェクト の write () メソッド が あり ます 。 
バッファ インタフェース を 介し て バイト 列 を 公開 し て いる オブジェクト は 全て 、 ファイル へ の 書き出し が でき ます 。 
`` バッファ オブジェクト '' は ヘッダ ファイル bufferobject . h の 中 で 定義 さ れ て い ます ( この ファイル は Python . h が インクルード し て い ます )。 
バッファ オブジェクト は 、 Python プログラミング の レベル から は 文字 列 オブジェクト と 非常 に よく 似 て いる よう に 見え ます : スライス 、 インデクス 指定 、 結合 、 その他 標準 の 文字 列 操作 を サポート し て い ます 。 
しかし 、 バッファ オブジェクト の データ は 二つ の データ ソース : 何らかの メモリ ブロック か 、 バッファ インタフェース を 公開 し て いる 別 の オブジェクト 、 の いずれ か に 由来 し て い ます 。 バッファ オブジェクト は 、 他 の オブジェクト の バッファ インタフェース から Python プログラマ に データ を 公開 する 方法 として 便利 です 。 
バッファ オブジェクト は ゼロ コピー な スライス 機構 ( zero - copy slicing mechanism ) として も 使わ れ ます 。 
ブロック メモリ を 参照 する という バッファ オブジェクト の 機能 を 使う こと で 、 任意 の データ を きわめて 簡単 に Python プログラマ に 公開 でき ます 。 
メモリ ブロック は 巨大 でも かまい ませ ん し 、 C 拡張 モジュール 内 の 定数 配列 でも かまい ませ ん 。 また 、 オペレーティングシステム ライブラリ 側 に 渡す 前 の 、 操作 用 の 生 の ブロック メモリ でも かまい ませ ん し 、 構造 化 さ れ た データ を ネイティブ の メモリ 配置 形式 で やりとり する ため に も 使え ます 。 
この PyObject の サブ タイプ は バッファ オブジェクト を 表現 し ます 。 
Python バッファ 型 ( buffer type ) を 表現 する PyTypeObject です ; Python レイヤ における types . BufferType 
と 同じ オブジェクト です 。 
この 定数 は 、 PyBuffer _ FromObject () または の PyBuffer _ FromReadWriteObject () size パラメタ に 渡し ます 。 
この パラメタ を 渡す と 、 PyBufferObject は 指定 さ れ た offset から バッファ の 終わり まで を base オブジェクト として 参照 し ます 。 
この パラメタ を 使う こと で 、 関数 の 呼び出し 側 が base オブジェクト の サイズ を 調べる 必要 が なくなり ます 。 
引数 が PyBuffer _ Type 型 の とき に 真 を 返し ます 。 
新た な 読み出し 専用 バッファ オブジェクト を 返し ます 。 
base が 読み出し 専用 バッファ に 必要 な バッファ プロトコル を サポート し て い ない 場合 や 、 厳密 に 一つ の バッファ セグメント を 提供 し て い ない 場合 に は TypeError を 送出 し 、 offset が ゼロ 以下 の 場合 に は ValueError を 送出 し ます 。 
バッファ オブジェクト は は base オブジェクト に対する 参照 を 保持 し 、 バッファ オブジェクト の の 内容 は base オブジェクト の offset から size バイト の バッファ インタフェース へ の 参照 に なり ます 。 
size が Py _ END _ OF _ BUFFER の 場合 、 新た に 作成 する バッファ オブジェクト の 内容 は base から 公開 さ れ て いる バッファ の 末尾 まで に わたり ます 。 
新た な 書き込み 可能 バッファ オブジェクト を 返し ます 。 
パラメタ および 例外 は PyBuffer _ FromObject と 同じ です 。 
base オブジェクト が 書き込み 可能 バッファ に 必要 な バッファ プロトコル を 公開 し て い ない 場合 、 TypeError を 送出 し ます 。 
メモリ 上 の 指定 さ れ た 場所 から 指定 さ れ た サイズ の データ を 読み 出せる 、 新た な 読み出し 専用 バッファ オブジェクト を 返し ます 。 
この 関数 が 返す バッファ オブジェクト が 存続 する 間 、 ptr で 与え られ た メモリ バッファ が デアロケート さ れ ない よう に する の は 呼び出し 側 の 責任 です 。 
size が ゼロ 以下 の 場合 に は ValueError を 送出 し ます 。 
size に は Py _ END _ OF _ BUFFER を 指定 し て は なり ませ ん ; 指定 する と 、 ValueError を 送出 し ます 。 
PyBuffer _ FromMemory () に 似 て い ます が 、 書き込み 可能 な バッファ を 返し ます 。 
size バイト の メモリ バッファ を 独自 に 維持 する 新た な 書き込み 可能 バッファ オブジェクト を 返し ます 。 
size が ゼロ または 正 の 値 で ない 場合 、 ValueError を 送出 し ます 。 
( PyObject _ AsWriteBuffer () が 返す よう な ) メモリ バッファ は 特に 整列 さ れ て い ない ので 注意 し て 下さい 。 
1 . 8 拡張 モジュール 関数 の キーワード パラメタ 
Py _ BuildValue () は 、 PyArg _ ParseTuple () の 認識 する 一連 の 書式 化 単位 に 似 た 書式 化 単位 を 認識 し ます 。 ただし ( 関数 へ の 出力 で は なく 、 入力 に 使わ れる ) 引数 は ポインタ で は なく 、 ただ の 値 で なけれ ば なり ませ ん 。 
書式 化 文字 列 が 空 なら 、 None を 返し ます 。 きっかり 一つ の 書式 化 単位 なら 、 その 書式 化 単位 が 記述 し て いる 何らかの オブジェクト に なり ます 。 
サイズ が 0 や 1 の タプル 返さ せ たい の なら 、 書式 化 文字 列 を 丸 括弧 で 囲い ます 。 以下 に 例 を 示し ます ( 左 に 呼び出し 例 を 、 右 に 構築 さ れる Python 値 を 示し ます ): 
3 . 1 拡張 モジュール の 配布 
4 . 1 型 どおり の アプローチ 
4 . Windows 上 で の C および C ++ 拡張 モジュール の ビルド 
この 章 で は Windows 向け の Python 拡張 モジュール を Microsoft Visual C ++ を 使っ て 作成 する 方法 について 簡単 に 述べ 、 その後 に 拡張 モジュール の ビルド が どの よう に 動作 する の か について 詳しい 背景 を 述べ ます 。 
この 説明 は 、 Python 拡張 モジュール を 作成 する Windows プログラマ と 、 Unix と Windows の 双方 で うまく ビルド できる よう な ソフトウェア の 作成 に 興味 が ある Unix プログラマ の 双方 にとって 有用 です 。 モジュール の 作者 に は 、 この 節 で 説明 し て いる 方法 より も 、 distutils による アプローチ で 拡張 モジュール を ビルド する よう 勧め ます 。 
また 、 Python を ビルド し た 際 に 使わ れ た C コンパイラ が 必要 です ; 通常 は Microsoft Visual C ++ です 。 
注意 : この 章 で は 、 Python の バージョン 番号 が 符号 化 さ れ て 入っ て いる たくさん の ファイル 名 について 触れ ます 。 
これら の ファイル 名 は " XY " で 表さ れる バージョン 名 付き で 表現 さ れ ます ;" X " は 使っ て いる Python リリース の メジャー バージョン 番号 、 " Y " は マイナー バージョン 番号 です 。 
例えば 、 Python 2 . 2 . 1 を 使っ て いる なら 、 " XY " は 実際 に は " 22 " に なり ます 。 
3 . 1 拡張 モジュール の 配布 
3 . distutils による C および C ++ 拡張 モジュール の ビルド 
Python 1 . 4 に なっ て から 、 動的 に リンク さ れる よう な 拡張 モジュール を ビルド する ため の メイク ファイル を 作成 する よう な 、 特殊 な メイク ファイル を Unix 向け に 提供 する よう に なり まし た 。 
Python 2 . 0 から は この 機構 ( いわゆる Makefile . pre . in および Setup ファイル の 関係 ファイル ) は サポート さ れ なく なり まし た 。 インタプリタ 自体 の カスタマイズ は ほとんど 使わ れ ず 、 distutils で 拡張 モジュール を ビルド できる よう に なっ た から です 。 
distutils を 使っ た 拡張 モジュール の ビルド に は 、 ビルド を 行う 計算 機上 に distutils を インストール し て いる こと が 必要 です 。 Python 2 . x に は distutils が 入っ て おり 、 Python 1 . 5 用 に は 個別 の パッケージ が あり ます 。 
distutils は バイナリ パッケージ の 作成 も サポート し て いる ので 、 ユーザ が 拡張 モジュール を インストール する 際 に 、 必ずしも コンパイラ が 必要 という わけ で は あり ませ ん 。 distutils ベース の パッケージ に は 、 駆動 スクリプト ( driver script ) と なる setup . py が 入っ て い ます 。 
setup . py は 普通 の Python プログラム ファイル で 、 ほとんど の 場合 以下 の よう な 見かけ に なっ て い ます : 
この setup . py と ファイル demo . c が ある とき 、 以下 の コマンド 
を 実行 する と 、 demo . c を コンパイル し て 、 " demo " という 名前 の 拡張 モジュール を build ディレクトリ 内 に 生成 し ます 。 
システム によって は モジュール ファイル は build / lib . system サブ ディレクトリ に 生成 さ れ 、 demo . so や demo . pyd といった 名前 に なる こと が あり ます 。 setup . py 内 で は 、 コマンド の 実行 は すべて " setup " 関数 を 呼び出し て 行い ます 。 
この 関数 は 可変 個 の キーワード 引数 を とり ます 。 例 で は その 一部 を 使っ て いる に すぎ ませ ん 。 
もっと 具体 的 に いう と 、 例 の 中 で は パッケージ を ビルド する ため の メタ 情報 と 、 パッケージ の 内容 を 指定 し て い ます 。 
通常 、 パッケージ に は Python ソース モジュール や ドキュメント 、 サブ パッケージ 等 といった 別 の ファイル も 入り ます 。 
distutils の 機能 に関する 詳細 は 、 
Python モジュール の 配布 
に 書か れ て いる distutils の ドキュメント を 参照 し て ください ; この 節 で は 、 拡張 モジュール の ビルド について のみ 説明 し ます 。 駆動 スクリプト を より よく 構成 する ため に 、 決め 打ち の 引数 を setup に 入れ て おく こと が よく あり ます 。 
上 の 例 で は 、 setup の " ext _ modules " は 拡張 モジュール の リスト で 、 リスト の 各々 の 要素 は Extension クラス の インスタンス に なっ て い ます 。 
例えば 以下 の ファイル が その 実例 です 。 
この 例 で は 、 setup は 追加 の メタ 情報 と共に 呼び出さ れ ます 。 配布 パッケージ を 構築 する 際 に は 、 メタ 情報 の 追加 が 推奨 さ れ て い ます 。 
拡張 モジュール 自体 について は 、 プリプロセッサ 定義 、 インクルードファイル の ディレクトリ 、 ライブラリ の ディレクトリ 、 ライブラリ といった 指定 が あり ます 。 distutils は この 情報 を コンパイラ に 応じ て 異なる やり方 で 引渡し ます 。 
例えば 、 Unix で は 、 上 の 設定 は 以下 の よう な コンパイル コマンド に なる かも しれ ませ ん : 
これら の コマンド ライン は 実演 目的 で 書か れ た もの です ; distutils の ユーザ は distutils が 正しく コマンド を 実行 する と 信用 し て ください 。 
5 ビルド 済み 配布 物 を 作成 する 
1 ダム 形式 の ビルド 済み 配布 物 を 作成 する 
`` ビルド 済み 配布 物 '' と は 、 おそらく 皆さん が 通常 `` バイナリ パッケージ '' とか `` インストーラ '' ( 背景 に し て いる 知識 によって 違い ます ) と 考え て いる もの です 。 
と は いえ 、 配布 物 が 必然 的 に バイナリ 形式 に なる わけ で は あり ませ ん 。 
配布 物 に は 、 Python ソース コード 、 かつ / または バイト コード が 入る から です ; また 、 我々 は パッケージ という 呼び 方 も し ませ ん 。 
すでに Python の 用語 として 使っ て いる から です ( また 、 `` インストーラ '' という 言葉 は 主流 の デスク トップ システム 特有 の 用語 です ) ビルド 済み 配布 物 は 、 モジュール 配布 物 を インストール 作業 者 にとって できるだけ 簡単 な 状況 に する 方法 です : ビルド 済み 配布 物 は 、 RPM ベース の Linux システム ユーザ にとって は バイナリ RPM 、 Windows ユーザ にとって は 実行 可能 な インストーラ 、 Debian ベース の Linux システム で は Debian パッケージ 、 など といった 具合 です 。 
単純 な 例 として 、 Distutils ソース ツリー から 以下 の コマンド を 実行 し た と し ます : 
すると 、 Distutils は モジュール 配布 物 ( ここ で は Distutils 自体 ) を ビルド し 、 `` 偽 の ( fake )'' インストール を ( build ディレクトリ で ) 行い ます 。 そして 現在 の プラットフォーム における 標準 の 形式 で ビルド 済み 配布 物 を 生成 し ます 。 
デフォルト の ビルド 済み 形式 と は 、 Unix で は `` ダム ( dumb )'' の tar ファイル で 、 Windows で は シンプル な 実行 形式 の インストーラ に なり ます 。 
( tar ファイル は 、 特定 の 場所 に 手作業 で 解凍 し ない と 動作 し ない ので 、 `` ダム : 賢く ない '' 形式 と みなし ます 。 ) 従っ て 、 Unix システム で 上記 の コマンド を 実行 する と 、 Distutils - 1 . 0 . plat . tar . gz を 作成 し ます ; この tarball を 正しい 場所 で 解凍 する と 、 ちょうど ソース 配布 物 を ダウンロード し て python setup . py install を 実行 し た の と 同じ よう に 、 正しい 場所 に Distutils が インストール さ れ ます 。 
(`` 正しい 場所 ( right place )'' と は 、 ファイル システム の ルート 下 か 、 Python の prefix ディレクトリ 下 で 、 これ は bdist _ dumb に 指定 する コマンド で 変わり ます ; デフォルト の 設定 で は 、 prefix から の 相対 パス に インストール さ れる ダム 配布 物 が 得 られ ます 。 
) 言うまでもなく 、 pure Python 配布 物 の 場合 なら 、 python setup . py install する の に 比べ て 大して 簡単 に なっ た と は 言え ませ ん -- しか し 、 非 pure 配布 物 で 、 コンパイル の 必要 な 拡張 モジュール を 含む 場合 、 拡張 モジュール を 利用 できる か 否 か という 大きな 違い に なり え ます 。 
と する と 、 Unix システム で は 、 Distutils - 1 . 0 . plat . zip を 作成 し ます -- 先 に も 述べ た よう に 、 Distutils を インストール する に は 、 この アーカイブ 形式 を ルート ディレクトリ 下 で 展開 し ます 。 ビルド 済み 配布 物 として 利用 できる 形式 を 以下 に 示し ます : 
形式 
説明 
注記 
gzip 圧縮 さ れ た tar ファイル (. tar . gz ) 
compress 圧縮 さ れ た tar ファイル (. tar . Z ) 
tar ファイル (. tar ) 
zip ファイル (. zip ) 
RPM 形式 
Solaris pkgtool 形式 
Windows 用 の 自己 展開 形式 ZIP ファイル 
注記 : 
Unix で の デフォルト 形式 です 
Python インタプリタ は 数多く の 組み込み 関数 を 持っ て い て 、 いつ でも 利用 する こと が でき ます 。 
それら の 関数 を アルファベット 順 に 挙げ ます 。 
この 関数 は import 
文 によって 呼び出さ れ ます 。 
この 関数 の 主 な 意義 は 、 同様 の インタフェース を 持つ 関数 で この 関数 を 置き換え 、 import 文 の 意味 を 変更 できる よう に する こと です 。 
これ を 行う 理由 と やり方 の 例 について は 、 標準 ライブラリ モジュール ihooks 
および 
について も 読ん で み て 下さい 。 自分 で 関数 __ import __ を 構築 する 際 に 便利 な 操作 が 定義 さ れ て い ます 。 
例えば 、 文 " import spam " は 結果 として 以下 の 呼び出し :__ import __(' spam ', globals (), locals (), []) に なり ます ; 文 " from spam . ham import eggs " は "__ import __(' spam . ham ', globals (), locals (), [' eggs '])" です 。 
locals () および [' eggs '] が 引数 で 与え られ ます が 、 関数 __ import __() は eggs という 名 の ローカル 変数 を 設定 し ない ので 注意 し て ください ; この 操作 は それ 以後 の import 文 の ため に 生成 さ れ た コード で 行わ れ ます 。 
( 実際 、 標準 の 実装 で は locals 引数 を 全く 使わ ず 、 import 文 の パッケージ 文脈 を 決定 する ため だけ に globals を 使い ます 。 ) 変数 name が package . module の 形式 で あっ た 場合 、 通常 、 name という 名 の モジュール で は なく トップ レベル の パッケージ ( 最初 の ドット まで の 名前 ) が 返さ れ ます 。 
しかし 、 空 で ない fromlist 引数 が 与え られ て いれ ば 、 name と 名づけ られ た モジュール が 返さ れ ます 。 
これ は 異なる 種類 の import 文 に対して 生成 さ れ た バイト コード と 互換 性 を もた せる ため に 行わ れ ます ;" import spam . ham . eggs " と する と 、 トップ レベル の パッケージ spam は イン ポート する 名前 空間 に 置か れ なけれ ば なり ませ ん が 、 " from spam . ham import eggs " と する と 、 変数 eggs を 見つける ため に は spam . ham サブ パッケージ を 使わ なく て は なり ませ ん 。 
この 振る舞い を 回避 する ため に 、 getattr () を 使っ て 必要 な コンポーネント を 展開 し て ください 。 
例えば 、 以下 の よう な ヘルパー 関数 : 
数値 の 絶対 値 を 返し ます 。 
引数 として 通常 の 整数 、 長 整数 、 浮動 小数点 数 を とる こと が でき ます 。 
引数 が 複素数 の 場合 、 その 大き さ ( magnitude ) が 返さ れ ます 
標準 の 真 値 テスト を 使っ て 、 値 を ブール 値 に 変換 し ます 。 
この クラス の インスタンス は False および True だけ です 。 
バージョン 2 . 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 引数 が 与え られ なかっ た 場合 、 この 関数 は False を 返し ます 。 
object 引数 が 呼び出し 可能 な オブジェクト の 場合 、 真 を 返し ます 。 そう で なけれ ば 偽 を 返し ます 。 
この 関数 が 真 を 返し て も object の 呼び出し は 失敗 する 可能 性 が あり ます が 、 偽 を 返し た 場合 は 決して 成功 する こと は あり ませ ん 。 
クラス は 呼び出し 可能 ( クラス を 呼び出す と 新しい インスタンス を 返し ます ) な こと と 、 クラス の インスタンス が メソッド __ call __() を 持つ 場合 に は 呼び出し が 可能 な ので 注意 し て ください 。 
ASCII コード が 整数 i と なる よう な 文字 1 字 から なる 文字 列 を 返し ます 。 
例えば 、 chr ( 97 ) は 文字 列 ' a ' を 返し ます 。 この 関数 は ord () の 逆 です 。 
引数 は [ 0 .. 255 ] の 両端 を 含む 範囲 内 に 収まら なけれ ば なり ませ ん ; i が 範囲 外 の 値 の とき に は ValueError が 送出 さ れ ます 。 
@ classmethod は 関数 デコレータ 形式 です 。 
詳しく は ../ ref / ref . htmlPython リファレンス マニュアル の 7 章 に ある 関数 定義 について の 説明 を 参照 し て ください 。 
この メソッド は クラス で 呼び出す こと ( 例えば C . f () ) も 、 インスタンス として 呼び出す こと ( 例えば C (). f ()) も でき ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 関数 デコレータ 構文 を 追加 し まし た 
二つ の オブジェクト x および y を 比較 し 、 その 結果 に従って 整数 を 返し ます 。 
戻り 値 は 
の 時 に は ゼロ 、 
string を コード オブジェクト に コンパイル し ます 。 
コード オブジェクト は exec 文 で 実行 し たり 、 eval () を 呼び出し て 評価 でき ます 。 
ある 機能 を 指定 する ため に 必要 な ビット フィールド は 、 __ future __ モジュール の _ Feature インスタンス における compiler _ flag 属性 で 得 られ ます 。 
値 real + imag * j の 複素数 型 数 を 生成 する か 、 文字 列 または 数値 を 複素数 型 に 変換 し ます 。 
それぞれ の 引数 は ( 複素数 を 含む ) 任意 の 数値 型 を とる こと が でき ます 。 imag が 省略 さ れ た 場合 、 標準 の 値 は ゼロ で 、 関数 は int 、 long () および float () の よう な 数値 型 へ の 変換 関数 として 動作 し ます 。 
全て の 引数 が 省略 さ れ た 場合 、 0 j を 返し ます 。 
setattr () の 親戚 と なる 関数 です 。 
引数 は オブジェクト と 文字 列 です 。 
文字 列 は オブジェクト の 属性 の どれ か 一つ の 名前 で なけれ ば なり ませ ん 。 
この 関数 は 与え られ た 名前 の 属性 を 削除 し ます が 、 オブジェクト が それ を 許す 場合 に 限り ます 。 
例えば 、 delattr ( x , ' foobar ') は del x . foobar 
と 等価 です 。 
オプション の 場所 に ある 引数 か 、 キーワード 引数 の 集合 から 、 新しく 辞書 オブジェクト を 初期 化 し て 返し ます 。 
この 場合 引数 中 の 要素 も また 、 上 に 挙げ た 型 の どれ か で なく て は なら ず 、 加え て 正確 に 2 個 の オブジェクト を 持っ て い なく て は なり ませ ん 。 
最初 の 要素 は 新た な 辞書 の キー として 、 二つ 目 の 要素 は 辞書 の 値 として 使わ れ ます 。 
同じ キー が 一 度 以上 与え られ た 場合 、 新た な 辞書 中 に は 最後 に 与え た 値 だけ が 関連付け られ ます 。 キーワード 引数 が 与え られ た 場合 、 キーワード と それ に 関連付け られ た 値 が 辞書 の 要素 として 追加 さ れ ます 。 
オプション の 場所 に ある オブジェクト 内 と キーワード 引数 の 両方 で 同じ キー が 指定 さ れ て い た 場合 、 辞書 中 に は キーワード 引数 の 設定 値 の 方 が 残さ れ ます 。 例えば 、 以下 の コード は どれ も 、 {" one ": 2 , " two ": 3 } と 同じ 辞書 を 返し ます : 
バージョン 2 . 3 で 変更 さ れ た 仕様 : キーワード 引数 から 辞書 を 構築 する 機能 が 追加 さ れ まし た 
引数 が ない 場合 、 現在 の ローカル シンボル テーブル に ある 名前 の リスト を 返し ます 。 
引数 が ある 場合 、 その オブジェクト の 有効 な 属性 から なる リスト を 返そ う と 試み ます 。 
この 情報 は オブジェクト の __ dict __ 属性 が 定義 さ れ て いる 場合 、 そこ から 収集 さ れ ます 。 また 、 クラス または 型 オブジェクト から も 集め られ ます 。 
dir () は 第 一 に 対話 プロンプト の ため に 提供 さ れ て いる ので 、 厳密 さ や 一貫 性 をもって 定義 さ れ た 名前 の セット より も 、 むしろ 興味深い 名前 の セット を 与えよ う と し ます 。 また 、 この 関数 の 細かい 動作 は リリース 間 で 変わる 可能 性 が あり ます 。 
a , b ) 2 つ の ( 複素数 で ない ) 数値 を 引数 として 取り 、 長 除法 を 行っ て その 商 と 剰余 から なる ペア を 返し ます 。 
被 演算 子 が 型 混合 で ある 場合 、 2 進 算術 演算 子 で の 規則 が 適用 さ れ ます 。 
通常 の 整数 と 長 整数 の 場合 、 結果 は ( a / b , a % b ) と 同じ です 。 
浮動 小数点 数 の 場合 、 結果 は ( q , a % b ) で あり 、 q は 通常 math . floor ( a / b ) です が 、 そう で は なく 1 に なる こと も あり ます 。 
いずれ に せよ 、 
は a に 非常 に 近い 値 に なり 、 
が ゼロ で ない 値 の 場合 、 その 符号 は b と 同じ で 、 0 = abs ( a % b ) abs ( b ) に なり ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 複素数 に対する divmod () の 使用 は 廃 用 さ れ まし た 。 
列挙 オブジェクト を 返し ます 。 iterable は シーケンス 型 、 イテレータ 型 、 あるいは 反復 を サポート する 他 の オブジェクト 型 で なけれ ば なり ませ ん 。 
文字 列 と オプション の 引数 globals 、 locals を とり ます 。 
globals を 指定 する 場合 に は 辞書 で なく て は なり ませ ん 。 
locals は 任意 の マップ 型 に でき ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 以前 は locals も 辞書 で なけれ ば なり ませ ん でし た 
引数 expression は Python の 表現 式 ( 技術 的 に いう と 、 条件 の リスト です ) として 構文 解釈 さ れ 、 評価 さ れ ます 。 この とき 辞書 globals および locals は それぞれ グローバル および ローカル な 名前 空間 として 使わ れ ます 。 
locals 辞書 が 存在 する が 、 '__ builtins __' が 欠け て いる 場合 、 expression を 解析 する 前 に 現在 の グローバル 変数 を globals に コピー し ます 。 
この こと から 、 expression は 通常 標準 の 
モジュール へ の 完全 な アクセス を 有し 、 制限 さ れ た 環境 が 伝播 する よう に なっ て い ます 。 
locals 辞書 が 省略 さ れ た 場合 、 標準 の 値 として globals に 設定 さ れ ます 。 
辞書 が 両方 とも 省略 さ れ た 場合 、 表現 式 は eval が 呼び出さ れ て いる 環境 の 下 で 実行 さ れ ます 。 
構文 エラー は 例外 として 報告 さ れ ます 。 
以下 に 例 を 示し ます : 
この 関数 は ( compile () で 生成 さ れる よう な ) 任意 の コード オブジェクト を 実行 する ため に 利用 する こと も でき ます 。 
この 場合 、 文字 列 の 代わり に コード オブジェクト を 渡し ます 。 
この コード オブジェクト は 引数 kind を ' eval ' に し て コンパイル さ れ て い なけれ ば なり ませ ん 。 ヒント : 文 の 動的 な 実行 は exec 文 で サポート さ れ て い ます 。 
ファイル から の 文 の 実行 は 関数 execfile () で サポート さ れ て い ます 。 
関数 globals () および locals () は それぞれ 現在 の グローバル および ローカル な 辞書 を 返す ので 、 eval () や execfile () で 使う こと が でき ます 。 
この 関数 は exec 文 に 似 て い ます が 、 文字 列 の 代わり に ファイル に対して 構文 解釈 を 行い ます 。 
import 文 と 違っ て 、 モジュール 管理 機構 を 使い ませ ん -- この 関数 は ファイル を 無条件 に 読み込み 、 新た な モジュール を 生成 し ませ ん 。 
引数 は 文字 列 と オプション の 2 つ の 辞書 から なり ます 。 
file は 読み込ま れ 、 ( モジュール の よう に ) Python 文 の 列 として 評価 さ れ ます 。 この とき globals および locals が それぞれ グローバル および ローカル な 名前 空間 として 使わ れ ます 。 
辞書 が 両方 とも 省略 さ れ た 場合 、 表現 式 は execfiles が 呼び出さ れ て いる 環境 の 下 で 実行 さ れ ます 。 
戻り 値 は None です 。 
警告 : 標準 で は locals は 後 に 述べる 関数 locals () の よう に 動作 し ます : 標準 の locals 辞書 に対する 変更 を 試み て は いけ ませ ん 。 
execfile () の 呼び出し が 返る 時 に コード が locals に 与える 影響 を 知り たい なら 、 明示 的 に loacals 辞書 を 渡し て ください 。 execfile () は 関数 の ローカル を 変更 する ため の 信頼 性 の ある 方法 として 使う こと は でき ませ ん 
新た な ファイル オブジェクト ( section 2 . 3 . 9 , `` File + Objects '' 参照 ) を 返し ます 。 
最初 の 2 つ の 引数 は studio の fopen () と 同じ です : filename は 開き たい ファイル の 名前 で 、 mode は ファイル を どの よう に し て 開く か を 指定 し ます : 読み出し は ' r '、 書き込み ( ファイル が すでに 存在 すれ ば 切り詰め られ ます ) は ' w '、 追記 書き込み は ' a ' です ( いくつ か の Unix システム で は 、 全て の 書き込み が 現在 の ファイル シーク 位置 に 関係 なく ファイル の 末尾 に 追加 さ れ ます ) 。 ' r +'、' w +'、 および ' a +' は ファイル を 更新 モード で 開き ます (' w +' は ファイル が すでに 存在 すれ ば 切り詰める ので 注意 し て ください ) 。 
バイナリ と テキストファイル を 区別 する システム で は 、 ファイル を バイナリ モード で 開く ため に は ' b ' を 追加 し て ください ( 区別 し ない システム で は ' b ' は 無視 さ れ ます )。 
ファイル を 開く こと が でき なけれ ば 、 IOError が 送出 さ れ ます 。 標準 の fopen () における mode の 値 に 加え て 、 ' U ' または ' rU ' を 使う こと が でき ます 。 
Python が 全 改行 文字 サポート を 行っ て いる ( 標準 で は し て い ます ) 場合 , ファイル が テキストファイル で 開か れ ます が 、 行末 文字 として Unix における 慣行 で ある ' n ' 、 Machintosh における 慣行 で ある ' r '、 Windows における 慣行 で ある ' rn ' の いずれ を 使う こと も でき ます 。 
これら の 改行 文字 の 外部 表現 は どれ も 、 Python プログラム から は ' n ' に 見え ます 。 
Python が 全 改行 文字 サポート なし で 構築 さ れ て いる 場合 、 mode ' U ' は 通常 の テキスト モード と 同様 に なり ます 。 
開か れ た ファイル オブジェクト は また 、 newlines と 呼ば れる 属性 を 持っ て おり 、 その 値 は None ( 改行 が 見つから なかっ た 場合 )、' n '、' r '、 ' rn '、 または 見つかっ た 全て の 改行 タイプ を 含む タプル に なり ます 。 mode が 省略 さ れ た 場合 、 標準 の 値 は ' r ' に なり ます 。 
移植 性 を 高める ため に は 、 バイナリ ファイル を 開く とき に は 、 mode の 値 に ' b ' を 追加 し なけれ ば なり ませ ん 。 
( バイナリ ファイル と テキストファイル を 区別 なく 扱う よう な システム で も 、 ドキュメンテーション の 代わり に なる ので 便利 です ) 
オプション の bufsize 引数 は 、 ファイル の ため に 必要 と する バッファ の サイズ を 指定 し ます : 0 は 非 バッファリング 、 1 は 行 単位 バッファリング 、 その他 の 正 の 値 は 指定 し た 値 ( の 近似 値 ) の サイズ を もつ バッファ を 使用 する こと を 意味 し ます 。 
bufsize の 値 が 負 の 場合 、 システム の 標準 を 使い ます 。 通常 、 端末 は 行 単位 の バッファリング で あり 、 その他 の ファイル は 完全 な バッファリング です 。 
省略 さ れ た 場合 、 システム の 標準 の 値 が 使わ れ ます 。 
file () コンス トラクタ は Python 2 . 2 で 新た に 追加 さ れ まし た 。 
以前 の 関数 名 で ある open () は 互換 性 の ため に 残さ れ て おり 、 file () の 別名 と なっ て い ます 。 
文字 列 または 数値 を 浮動 小数点 数 に 変換 し ます 。 
それ 以外 の 場合 、 引数 は 通常 整数 、 長 整数 、 または 浮動 小数点 数 を とる こと が でき 、 同じ 値 の 浮動 小数点 数 が ( Python の 浮動 小数点 精度 で ) 返さ れ ます 。 
引数 が 指定 さ れ なかっ た 場合 、 0 . 0 を 返し ます 。 
注意 : 文字 列 で 値 を 渡す 際 、 背後 の C ライブラリ によって NaN 
および Infinity 
が 返さ れる かも しれ ませ ん 。 
これら の 値 を 返す よう な 特殊 な 文字 列 の セット は 完全 に C ライブラリ に 依存 し て おり 、 バリエーション が ある こと が 知ら れ て い ます 。 
要素 は iterable から 取得 し ます 。 
frozenset 型 は 、 update メソッド を 持た ない 代わり に ハッシュ 化 でき 、 他 の set 型 の 要素 に し たり 辞書 型 の キー に し たり でき ます 。 
frozenset の 要素 自体 は 変更 不能 で なけれ ば なり ませ ん 。 
集合 ( set ) 型 の 集合 を 表現 する ため に は 、 内 集合 も frozenset オブジェクト で なけれ ば なり ませ ん 。 
iterable を 指定 し ない 場合 に は 空 の 集合 frozenset ([]) を 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
指定 さ れ た object の 属性 を 返し ます 。 
name は 文字 列 で なく て は なり ませ ん 。 文字 列 が オブジェクト の 属性 名 の 一つ で あっ た 場合 、 戻り 値 は その 属性 の 値 に なり ます 。 
例えば 、 getattr ( x , ' foobar ') は x . foobar と 等価 です 。 
指定 さ れ た 属性 が 存在 し ない 場合 、 default が 与え られ て いる 場合 に はしれ が 返さ れ ます 。 そう で ない 場合 に は AttributeError が 送出 さ れ ます 。 
現在 の グローバルシンボルテーブル を 表す 辞書 を 返し ます 。 常に 現在 の モジュール の 辞書 に なり ます ( 関数 または メソッド の 中 で は それら を 定義 し て いる モジュール を 指し 、 この 関数 を 呼び出し た モジュール で は あり ませ ん )。 
引数 は オブジェクト と 文字 列 です 。 
文字 列 が オブジェクト の 属性 名 の 一つ で あっ た 場合 True を 、 そう で ない 場合 False を 返し ます ( この 関数 は getattr ( object , name ) を 呼び出し 、 例外 を 送出 する か どう か を 調べる こと で 実装 し て い ます )。 
オブジェクト の ハッシュ 値 を ( 存在 すれれ ば ) 返し ます 。 
ハッシュ 値 は 整数 です 。 
これら は 辞書 を 検索 する 際 に 辞書 の キー を 高速 に 比較 する ため に 使わ れ ます 。 
等しい 値 と なる 数値 は 等しい ハッシュ 値 を 持ち ます ( 1 と 1 . 0 の よう に 型 が 異なっ て い て も です )。 
組み込み ヘルプ システム を 起動 し ます ( この 関数 は 対話 的 な 使用 の ため の もの です )。 
引数 が 与え られ て い ない 場合 、 対話 的 ヘルプ システム は インタプリタ コンソール 上 で 起動 し ます 。 
引数 が 文字 列 の 場合 、 文字 列 は モジュール 、 関数 、 クラス 、 メソッド 、 キーワード 、 または ドキュメント の 項目 名 として 検索 さ れ 、 ヘルプ ページ が コンソール 上 に 印字 さ れ ます 。 
引数 が 何らかの オブジェクト の 場合 、 その オブジェクト に関する ヘルプ ページ が 生成 さ れ ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
オブジェクト の `` 識別 値 '' を 返し ます 。 
この 値 は 整数 ( または 長 整数 ) で 、 この オブジェクト の 有効 期間 は 一意 かつ 定数 で ある こと が 保証 さ れ て い ます 。 
オブジェクト の 有効 期間 が 重なら ない 2 つ の オブジェクト は 同じ id () 値 を 持つ かも しれ ませ ん 。 
( 実装 に関する 注釈 : この 値 は オブジェクト の アドレス です 。 ) 
eval ( raw _ input ( prompt )) と 同じ です 。 
警告 : この 関数 は ユーザ の エラー に対して 安全 で は あり ませ ん ! この 関数 で は 、 入力 は 有効 な Python の 式 で ある と 期待 し て い ます ; 入力 が 構文 的 に 正しく ない 場合 、 SyntaxError が 送出 さ れ ます 。 
式 を 評価 する 際 に エラー が 生じ た 場合 、 他 の 例外 も 送出 さ れる かも しれ ませ ん 。 
( 一方 、 この 関数 は 時に 、 熟練 者 が すばやく スクリプト を 書く 際 に 必要 な まさに その もの です ) 
モジュール が 読み込ま れ て いれ ば 、 input () は 精緻 な 行 編集 および ヒストリ 機能 を 提供 し ます 。 一般 的 な ユーザ から の 入力 の ため の 関数 として は raw _ input () を 使う こと を 検討 し て ください 。 
文字 列 または 数値 を 通常 の 整数 に 変換 し ます 。 
radix が ゼロ の 場合 、 文字 列 の 内容 から 適切 な 基数 を 推測 し ます ; 変換 は 整数 リテラル と 同じ です 。 
radix が 指定 さ れ て おり 、 x が 文字 列 で ない 場合 、 TypeError が 送出 さ れ ます 。 それ 以外 の 場合 、 引数 は 通常 整数 、 長 整数 、 または 浮動 小数点 数 を とる こと が でき ます 。 
浮動 小数点 数 から 整数 へ 変換 で は ( ゼロ 方向 に ) 値 を 丸め ます 。 引数 が 通常 整数 の 範囲 を 超え て いる 場合 、 長 整数 が 代わり に 返さ れ ます 。 
引数 が 与え られ なかっ た 場合 、 0 を 返し ます 。 
引数 object が 引数 classinfo の インスタンス で ある か 、 ( 直接 または 間接 的 な ) サブ クラス の インスタンス の 場合 に 真 を 返し ます 。 
また 、 classinfo が 型 オブジェクト で あり 、 object が その 型 の オブジェクト で ある 場合 に も 真 を 返し ます 。 
object が クラス インスタンス や 与え られ た 型 の オブジェクト で ない 場合 、 この 関数 は 常に 偽 を 返し ます 。 
classinfo を クラス オブジェクト で も 型 オブジェクト に も せ ず 、 クラス や 型 オブジェクト から なる タプル や 、 そういった タプル を 再帰 的 に 含む タプル ( 他 の シーケンス 型 は 受理 さ れ ませ ん ) でも かまい ませ ん 。 
classinfo が クラス 、 型 、 クラス や 型 から なる タプル 、 そういった タプル が 再帰 構造 を とっ て いる タプル の いじれ で も ない 場合 、 例外 TypeError が 送出 さ れ ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : 型 情報 を タプル に し た 形式 の サポート が 追加 さ れ まし た 。 
class が classinfo の ( 直接 または 間接 的 な ) サブ クラス で ある 場合 に 真 を 返し ます 。 
クラス は その クラス 自体 の サブ クラス と clasinfo は クラス オブジェクト から なる タプル で も よく 、 この 場合 に は classinfo の すべて の エントリ が 調べ られ ます 。 
その他 の 場合 で は 、 例外 TypeError が 送出 さ れ ます 。 バージョン 2 . 3 で 変更 さ れ た 仕様 : 型 情報 から なる タプル へ の サポート が 追加 さ れ まし た 
イテレータオブジェクト を 返し ます 。 
2 つ 目 の 引数 が ある か どう か で 、 最初 の 引数 の 解釈 は 非常 に 異なり ます 。 2 つ 目 の 引数 が ない 場合 、 o は 反復 プロトコル (__ iter __() メソッド ) か 、 シーケンス 型 プロトコル ( 引数 が 0 から 開始 する __ getitem __() メソッド ) を サポート する 集合 オブジェクト で なけれ ば なり ませ ん 。 
これら の プロトコル が 両方 とも サポート さ れ て い ない 場合 、 TypeError が 送出 さ れ ます 。 2 つ 目 の 引数 sentinel が 与え られ て いれ ば 、 o は 呼び出し 可能 な オブジェクト で なけれ ば なり ませ ん 。 
オブジェクト の 長 さ ( 要素 の 数 ) を 返し ます 。 
引数 は シーケンス 型 ( 文字 列 、 タプル 、 または リスト ) か 、 マップ 型 ( 辞書 ) です 。 
sequence の 要素 と 同じ 要素 を もち 、 かつ 順番 も 同じ な リスト を 返し ます 。 sequence は シーケンス 、 反復 処理 を サポート する コンテナ 、 あるいは イテレータオブジェクト です 。 
sequence が すでに リスト の 場合 、 
sequence [:] と 同様 に コピー を 作成 し て 返し ます 。 
例えば 、 list (' abc ') は [' a ', ' b ', ' c '] および list ( 1 , 2 , 3 ) は [ 1 , 2 , 3 ] を 返し ます 。 
引数 が 与え られ なかっ た 場合 、 新しい 空 の リスト [] を 返し ます 。 
現在 の ローカル シンボル テーブル を 表す 辞書 を 更新 し て 返し ます 。 
警告 : この 辞書 の 内容 は 変更 し て は いけ ませ ん ; 値 を 変更 し て も 、 インタプリタ が 使う ローカル 変数 の 値 に は 影響 し ませ ん 。 
文字 列 または 数値 を 長 整 数値 に 変換 し ます 。 
radix 引数 は int () と 同じ よう に 解釈 さ れ 、 x が 文字 列 の 時 だけ 与える こと が でき ます 。 それ 以外 の 場合 、 引数 は 通常 整数 、 長 整数 、 または 浮動 小数点 数 を とる こと が でき 、 同じ 値 の 長 整数 が 返さ れ ます 。 
浮動 小数点 数 から 整数 へ 変換 で は ( ゼロ 方向 に ) 値 を 丸め ます 。 
引数 が 与え られ なかっ た 場合 、 0 L を 返し ます 。 
function を list の 全て の 要素 に 適用 し 、 返さ れ た 値 から なる リスト を 返し ます 。 
追加 の list 引数 を 与え た 場合 、 function は それら を 引数 として 取ら なけれ ば なら ず 、 関数 は その リスト の 全て の 要素 について 個別 に 適用 さ れ ます ; 他 の リスト より 短い リスト が ある 場合 、 要素 None で 延長 さ れ ます 。 
function が None の 場合 、 恒等 関数 で ある と 仮定 さ れ ます ; すなわち 、 複数 の リスト 引数 が 存在 する 場合 、 map () は 全て の リスト 引数 に対し 、 対応 する 要素 から なる タプル から なる リスト を 返し ます ( 転置 操作 の よう な もの です )。 
list 引数 は どの よう な シーケンス 型 でも かまい ませ ん ; 結果 は 常に リスト に なり ます 。 
単一 の 引数 s の 場合 、 空 で ない シーケンス ( 文字 列 、 タプル または リスト ) の 要素 の うち 最大 の もの を 返し ます 。 
1 個 より も 引数 が 多い 場合 、 引数 間 で 最大 の もの を 返し ます 。 
単一 の 引数 s の 場合 、 空 で ない シーケンス ( 文字 列 、 タプル または リスト ) の 要素 の うち 最小 の もの を 返し ます 。 
1 個 より も 引数 が 多い 場合 、 引数 間 で 最小 の もの を 返し ます 。 
ユーザ 定義 の 属性 や メソッド を 持た ない 、 新しい オブジェクト を 返し ます 。 
object () は 新 スタイル の クラス の 、 基底 クラス です 。 
これ は 、 新 スタイル の クラス の インスタンス に 共通 の メソッド 群 を 持ち ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : この 関数 は いかなる 引数 も 受け付け ませ ん 。 以前 は 、 引数 を 受理 し まし た が 無視 し て い まし た 。 
( 任意 の サイズ の ) 整数 を 8 進 の 文字 列 に 変換 し ます 。 
結果 は Python の 式 として も 使える 形式 に なり ます 。 バージョン 2 . 4 で 変更 さ れ た 仕様 : 以前 は 符号 なし の リテラル しか 返し ませ ん でし た 
前述 の 関数 file () の 別名 です 。 
1 文字 から なる 文字 列 または Unicode 文字 の ASCII 値 を 返し ます 。 
例えば 、 ord (' a ') は 整数 97 を 返し 、 ord ( u ' u 2020 ') は 8224 を 返し ます 。 
この 値 は 文字 列 に対する chr () の 逆 で あり 、 Unicode 文字 に対する unichr () の 逆 です 。 
引数 は 数値 型 で なく て は なり ませ ん 。 
型 混合 の 場合 、 2 進 算術 演算 における 型 強制 規則 が 適用 さ れ ます 。 
通常 整数 および 長 整数 の 被 演算 子 に対して は 、 二つ 目 の 引数 が 負 の 数 で ない 限り 、 結果 は ( 型 強制 後 の ) 被 演算 子 と 同じ 型 に なり ます ; 負 の 場合 、 全て の 引数 は 浮動 小数点 型 に 変換 さ れ 、 浮動 小数点 型 の 結果 が 返さ れ ます 。 
例えば 、 10 ** 2 は 100 を 返し ます が 、 100 **- 2 は 0 . 01 を 返し ます 。 ( 最後 に 述べ た 機能 は Python 2 . 2 で 追加 さ れ た もの です 。 
( この 制限 は Python 2 . 2 で 追加 さ れ まし た 。 
Python 2 . 1 以前 で は 、 3 つ の 浮動 小数点 引数 を 持つ pow () は 浮動 小数点 の 丸め に関する 偶発 誤差 により 、 プラットフォーム 依存 の 結果 を 返し ます 。 ) 
新しい 形式 の クラス ( object から 導出 さ れ た クラス ) における プロパティ 属性 を 返し ます 。 
fget は 属性 値 を 取得 する ため の 関数 で 、 同様 に fset は 属性 値 を 設定 する ため の 関数 です 。 また 、 fdel は 属性 を 削除 する ため の 関数 です 。 
以下 に 属性 x を 扱う 典型 的 な 利用 法 を 示し ます : 
数列 を 含む リスト を 生成 する ため の 多 機能 関数 です 。 
for ループ で よく 使わ れ ます 。 
引数 は 通常 の 整数 で なけれ ば なり ませ ん 。 
step 引数 が 無視 さ れ た 場合 、 標準 の 値 1 に なり ます 。 
start 引数 が 蒸し さ れ た 場合 標準 の 値 0 に なり ます 。 
完全 な 形式 で は 、 通常 の 整数 列 [ start , start + step , start + 2 * step , ...] を 返し ます 。 
step が 正 の 値 の 場合 、 最後 の 要素 は stop より も 小さい 
の 最大 値 に なり ます ; step が 負 の 値 の 場合 、 最後 の 要素 は stop より も 大きい 
の 最小 値 に なり ます 。 step は ゼロ で あっ て は なり ませ ん ( さもなければ ValueError が 送出 さ れ ます )。 
引数 proompt が 存在 する 場合 、 末尾 の 改行 を 除い て 標準 出力 に 出力 さ れ ます 。 
次に 、 この 関数 は 入力 から 1 行 を 読み込ん で 文字 列 に 変換 し て ( 末尾 の 改行 を 除い て ) 返し ます 。 EOF が 読み込ま れる と EOFError が 送出 さ れ ます 。 
モジュール が 読み込ま れ て いれ ば 、 input () は 精緻 な 行 編集 および ヒストリ 機能 を 提供 し ます 。 
sequence の 要素 に対して 、 シーケンス を 単一 の 値 に 短縮 する よう な 形 で 2 つ の 引数 を もつ function を 左 から 右 に 累積 的 に 適用 し ます 。 
例えば 、 reduce ( labmda x , y : x + y , [ 1 , 2 , 3 , 4 , 5 ]) は (((( 1 + 2 )+ 3 )+ 4 )+ 5 ) を 計算 し ます 。 
左 引数 x は 累計 の 値 に なり 、 右 引数 y は sequence から 取り出し た 更新 値 に なり ます 。 
オプション の initializer が 存在 する 場合 、 計算 の 際 に シーケンス の 先頭 に 置か れ ます 。 また 、 シーケンス が 空 の 場合 に は 標準 の 値 に なり ます 。 
initializer が 与え られ て おら ず 、 sequence が 単一 の 要素 しか 持っ て い ない 場合 、 最初 の 要素 が 返さ れ ます 。 
すでに イン ポート さ れ た module を 再 解釈 し 、 再 初期 化 し ます 。 
引数 は モジュール オブジェクト で なけれ ば なら ない ので 、 予め イン ポート に 成功 し て い なけれ ば なり ませ ん 。 
この 関数 は モジュール の ソース コード ファイル を 外部 エディタ で 編集 し て 、 Python インタプリタ から 離れる こと なく 新しい バージョン を 試し たい 際 に 有効 です 。 
戻り 値 は ( module 引数 と 同じ ) モジュール オブジェクト です 。 reload ( module ) を 実行 する と 、 以下 の 処理 が 行わ れ ます : 
Python モジュール の コード は 再 コンパイル さ れ 、 モジュール レベル の コード は 再度 実行 さ れ ます 。 モジュール の 辞書 中 に ある 、 何らかの 名前 に 結び付け られ た オブジェクト を 新た に 定義 し ます 。 
拡張 モジュール 中 の init 関数 が 二 度 呼び出さ れる こと は あり ませ ん 。 
Python における 他 の オブジェクト と 同様 、 以前 の オブジェクト の メモリ 領域 は 、 参照 カウント が ゼロ に なら ない かぎり 再 利用 さ れ ませ ん 。 
モジュール 名前 空間 内 の 名前 は 新しい オブジェクト ( または 更新 さ れ た オブジェクト ) を 指す よう 更新 さ れ ます 。 
以前 の オブジェクト が ( 外部 の 他 の モジュール など から の ) 参照 を 受け て いる 場合 、 それら を 新た な オブジェクト に バインド し 直す こと は ない ので 、 必要 なら 自分 で 名前 空間 を 更新 せ ね ば なり ませ ん 。 
いくつ か 補足 説明 が あり ます : モジュール は 文法 的 に 正しい が 、 その 初期 化 に は 失敗 し た 場合 、 その モジュール の 最初 の import 文 は モジュール 名 を ローカル に は バインド し ませ ん が 、 ( 部分 的 に 初期 化 さ れ た ) モジュール オブジェクト を sys . modules に 記憶 し ます 。 
従って 、 モジュール を ロード し なおす に は 、 reload () する 前 に まず import ( モジュール の 名前 を 部分 的 に 初期 化 さ れ た オブジェクト に バインド し ます ) を 再度 行わ なけれ ば なり ませ ん 。 モジュール が 再 ロード さ れ た 再 、 その 辞書 ( モジュール の グローバル 変数 を 含み ます ) は そのまま 残り ます 。 
名前 の 再 定義 を 行う と 、 以前 の 定義 を 上書き する ので 、 一般 的 に は 問題 は あり ませ ん 。 
新た な バージョン の モジュール が 古い バージョン で 定義 さ れ た 名前 を 定義 し て い ない 場合 、 古い 定義 が そのまま 残り ます 。 
辞書 が グローバル テーブル や オブジェクト の キャッシュ を 維持 し て いれ ば 、 この 機能 を モジュール を 有効 性 を 引き出す ため に 使う こと が でき ます -- つまり 、 try 文 を 使え ば 、 必要 に 応じ て テーブル が ある か どう か を テスト し 、 その 初期 化 を 飛ばす こと が でき ます : 
組み込み モジュール や 動的 に ロード さ れる モジュール を 再 ロード する こと は 、 不正 な やり方 で は あり ませ ん が 、 一般 的 に それほど 便利 で は あり ませ ん 。 例外 は 
、 
です 。 
これ は 導出 クラス の 場合 でも 同じ です 。 
この 関数 は 多く の 型 について 、 eval () に 渡さ れ た とき に 同じ 値 を 持つ よう な オブジェクト を 表す 文字 列 を 生成 しよ う と し ます 。 
x を 小数点 以下 n 桁 で 丸め た 浮動 小数点 数 の 値 を 返し ます 。 
n が 省略 さ れる と 、 標準 の 値 は ゼロ に なり ます 。 結果 は 浮動 小数点 数 です 。 
値 は 最も 近い 10 の マイナス n の 倍数 に 丸め られ ます 。 二つ の 倍数 と の 距離 が 等しい 場合 、 ゼロ から 離れる 方向 に 丸め られ ます ( 従っ て 、 例えば round ( 0 . 5 ) は 1 . 0 に なり 、 round (- 0 . 5 ) は - 1 . 0 に なり ます )。 
集合 を 表現 する set 型 オブジェクト を 返し ます 。 要素 は iterable から 取得 し ます 。 
要素 は 変更 不能 で なけれ ば なり ませ ん 。 
集合 の 集合 を 表現 する に は 、 内 集合 は frozenset オブジェクト で なけれ ば なり ませ ん 。 
iterable を 指定 し ない 場合 、 新た な 空 の set 型 オブジェクト 、 set ([]) を 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
getattr () と 対 を なす 関数 です 。 
引数 は それぞれ オブジェクト 、 文字 列 、 そして 任意 の 値 です 。 
文字 列 は すでに 存在 する 属性 の 名前 で も 、 新た な 属性 の 名前 でも かまい ませ ん 。 
この 関数 は 指定 し た 値 を 指定 し た 属性 に 関連付け ます が 、 指定 し た オブジェクト において 可能 な 場合 に 限り ます 。 
例えば 、 setattr ( x , ' foobar ', 123 ) は 
range ( start , stop , step ) で 指定 さ れる インデクス の 集合 を 表す スライス オブジェクト を 返し ます 。 range ( start ) スライス オブジェクト を 返し ます 。 
引数 start および step は 標準 で は None です 。 
スライス オブジェクト は 読み出し 専用 の 属性 start 、 stop および step を 持ち 、 これら は 単に 引数 で 使わ れ た 値 ( または 標準 の 値 ) を 返し ます 。 
これら の 値 に は 、 その他 の はっきり と し た 機能 は あり ませ ん ; しか し ながら 、 これら の 値 は Numerical Python 
および その他 の サード パーティ による 拡張 で 利用 さ れ て い ます 。 
スライス オブジェクト は 拡張 さ れ た インデクス 指定 構文 が 使わ れる 際 に も 生成 さ れ ます 。 
例えば : " a [ start : stop : step ]" や " a [ start : stop , i ]" です 。 
function の 静的 メソッド を 返し ます 。 
静的 メソッド は 暗黙 の 第 一 引数 を 受け取り ませ ん 。 
静的 メソッド の 宣言 は 、 以下 の よう に 書き 慣わさ れ ます : class C :@ staticmethoddef f ( arg 1 , arg 2 , ...): ... 
@ staticmethod は 関数 デコレータ 形式 です 。 
オブジェクト を うまく 印字 可能 な 形 に 表現 し た もの を 含む 文字 列 を 返し ます 。 
文字 列 に対して は その 文字 列 自体 を 返し ます 。 
repr ( object ) と の 違い は 、 str ( object ) は 常に eval () が 受理 できる よう な 文字 列 を 返そ う と 試みる わけ で は ない という 点 です ; この 関数 の 目的 は 印字 可能 な 文字 列 を 返す ところ に あり ます 。 
引数 が 与え られ なかっ た 場合 、 空 の 文字 列 '' を 返し ます 。 
文字 列 から なる シーケンス を 結合 する 高速 かつ 正しい 方法 は ''. join ( sequence ) です 。 sum ( range ( n ), m ) は reduce ( operator . add , range ( n ), m ) と 同等 です 。 
type の 上位 クラス を 返し ます 。 
返さ れ た 上位 クラス オブジェクト が 非 バインド の 場合 、 二つ め の 引数 は 省略 さ れ ます 。 
二 つめ の 引数 が オブジェクト の 場合 、 isinstance ( obj , type ) は 真 で なく て は なり ませ ん 。 
super は " super ( C , self ).__ getitem __( name )" の よう な 明示 的 な ドット 表記 の 属性 参照 の 一部 として 使わ れ て いる ので 注意 し て ください 。 
これ に 伴っ て 、 super は " super ( C , self )[ name ]" の よう な 文 や 演算 子 を 使っ た 非 明示 的 な 属性 参照 向け に は 定義 さ れ て い ない ので 注意 し て ください 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
sequence の 要素 と 要素 が 同じ で 、 かつ 順番 も 同じ に なる タプル を 返し ます 。 sequence は シーケンス 、 反復 を サポート する コンテナ 、 および イテレータオブジェクト を とる こと が でき ます 。 
sequence が すでに タプル の 場合 、 その タプル を 変更 せ ず に 返し ます 。 
例えば 、 tuple (' abc ') は (' a ', ' b ', ' c ') を 返し 、 tuple ([ 1 , 2 , 3 ]) は ( 1 , 2 , 3 ) を 返し ます 。 
object の 型 を 返し ます 。 
返さ れる 値 は 型 
オブジェクト です 。 
標準 モジュール types 
は 、 組み込み 名 を 持っ て い ない 全て の 組み込み 型 の 名前 を 定義 し て い ます 。 
オブジェクト の 型 の テスト に は 、 組み込み 関数 isinstance () が 推奨 さ れ て い ます 。 
Unicode における コード が 整数 i に なる よう な 文字 1 文字 から なる Unicode 文字 列 を 返し ます 。 
例えば 、 unichr ( 97 ) は 文字 列 u ' a ' を 返し ます 。 
この 関数 は Unicode 文字 列 に対する ord () の 逆 です 。 
引数 は 両端 を 含め て [ 0 .. 65535 ] の 範囲 で なけれ ば なり ませ ん 。 
それ 以外 の 値 に対して は ValueError が 送出 さ れ ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
以下 の モード の うち 一つ を 使っ て 、 object の Unicode 文字 列 バージョン を 返し ます : もし encoding かつ / または errors が 与え られ て いれ ば 、 unicode () は 8 ビット の 文字 列 または 文字 列 バッファ に なっ て いる オブジェクト を encoding の codec を 使っ て デコード し ます 。 encoding パラメタ は エン コーディング 名 を 与える 文字 列 です ; 未知 の エン コーディング の 場合 、 LookupError が 送出 さ れ ます 。 
エラー 処理 は errors に従って 行わ れ ます ; この パラメタ は 入力 エン コーディング 中 で 無効 な 文字 の 扱い 方 を 指定 し ます 。 
もっと 詳しく いえ ば 、 object が Unicode 文字 列 か その サブ クラス なら 、 デコード 処理 を 一切 介する こと なく Unicode 文字 列 を 返す という こと です 。 __ unicode __() メソッド を 提供 し て いる オブジェクト の 場合 、 unicode () は この メソッド を 引数 なし で 呼び出し て Unicode 文字 列 を 生成 し ます 。 
それ 以外 の オブジェクト の 場合 、 8 ビット の 文字 列 か 、 オブジェクト の データ 表現 ( representation ) を 呼び出し 、 その後 デフォルトエンコーディング で ' strict ' モード の codec を 使っ て Unicode 文字 列 に 変換 し ます 。 
バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 2 で 変更 さ れ た 仕様 :__ unicode __() の サポート が 追加 さ れ まし た 
引数 無し で は 、 現在 の ローカル シンボル テーブル に 対応 する 辞書 を 返し ます 。 
モジュール 、 クラス 、 または クラスインスタンスオブジェクト ( または その他 __ dict __ 属性 を 持つ もの ) を 引数 として 与え た 場合 、 その オブジェクト の シンボル テーブル に 対応 する 辞書 を 返し ます 。 
返さ れる 辞書 は 変更 す べき で は あり ませ ん : 変更 が 対応 する シンボル テーブル に もたらす 影響 は 未定義 です 。 
この 関数 は range () に 非常 に よく 似 て い ます が 、 リスト の 代わり に `` xrange オブジェクト '' を 返し ます 。 
この オブジェクト は 不透明 な シーケンス 型 で 、 対応 する リスト と 同じ 値 を 持ち ます が 、 それら の 値 全て を 同時に 記憶 し ませ ん 。 
ragne () に対する xrange () の 利点 は 微々たる もの です ( xrange () は 要求 に 応じ て 値 を 生成 する から です ) ただし 、 メモリ 量 の 厳しい 計算 機 で 巨大 な 範囲 の 値 を 使う 時 や 、 ( ループ が よく break で 中断 さ れる といった よう に ) 範囲 中 の 全て の 値 を 使う と は 限ら ない 場合 は その 限り で は あり ませ ん 。 
注意 : 
xrange () は シンプル さ と 速度 の ため に 定義 さ れ て いる 関数 で あり 、 その 実現 の ため に 実装 上 の 制限 を 課し て いる 場合 が あり ます 。 
Python の C 実装 で は 、 全て の 引数 を ネイティブ の C long 型 ( Python の " short " 整数 型 ) に 制限 し て おり 、 要素 数 が ネイティブ の C long 型 の 範囲 内 に 収まる よう 要求 し て い ます 。 
この 関数 は タプル の リスト を 返し ます 。 
この リスト の i 番目 の タプル は 各 引数 の シーケンス 中 の i 番目 の 要素 を 含み ます 。 返さ れる リスト は 引数 の シーケンス の うち 長 さ が 最小 の もの の 長 さ に 切り詰め られ ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : これ まで は 、 zip () は 少なくとも 一つ の 引数 を 要求 し て おり 、 空 の リスト を 返す 代わり に TypeError を 送出 し て い まし た 
... 新た な モジュール を 生成 し ませ ん 。 
この 関数 は 比較 利用 さ れ ない 方 な ので 、 将来 構文 に する か どう か は 保証 でき ませ ん 。 
... 場合 、 システム の 標準 の 値 が 使わ れ ます 。 
現状 で は 、 setvbuf () を 持っ て い ない システム で は 、 バッファ サイズ を 指定 し て も 効果 は あり ませ ん 。 
バッファ サイズ を 指定 する ため の インタフェース は setvbuf () を 使っ て は 行わ れ て い ませ ん 。 何らかの I / O が 実行 さ れ た 後 で 呼び出さ れる と コア ダンプ する こと が あり 、 どの よう な 場合 に そう なる か を 決定 する 信頼 性 の ある 方法 が ない から です 。 
... に もたらす 影響 は 未定義 です 。 
現在 の 実装 で は 、 ローカル な 値 の バインディング は 通常 は 影響 を 受け ませ ん が 、 ( モジュール の よう な ) 他 の スコープ から 取り出し た 値 は 影響 を 受ける かも しれ ませ ん 。 
また この 実装 は 変更 さ れる かも しれ ませ ん 。 
組み込み 例外 名 、 関数 名 、 各種 定数 名 は 専用 の シンボル テーブル 中 に 存在 し て い ます 。 
シンボル 名 を 参照 する とき この シンボル テーブル は 最後 に 参照 さ れる ので 、 ユーザー が 設定 し た ローカル な 名前 や グローバル な 名前 によって オーバーライド する こと が でき ます 。 
組み込み 型 について は 参照 し やすい よう に ここ で 説明 さ れ て い ます 。 
2 . 1 この 章 に ある 表 で は 、 オペレータ の 優先 度 を 昇順 に 並べ て 表わし て い て 、 同じ 優先 度 の オペレータ は 同じ 箱 に 入れ て い ます 。 
同じ 優先 度 の 二 項 演算 子 は 左 から 右 へ の 結合 順序 を 持っ て い ます 。 
の 5 章 を ごらん ください 。 
... 組み込み 型 について は 参照 し やすい よう に ここ で 説明 さ れ て い ます 。 
2 . 1 ほとんど の 説明 で は そこ で 発生 し うる 例外 について は 説明 さ れ て い ませ ん 。 
この マニュアル の 将来 の 版 で 訂正 さ れる 予定 です 。 
7 . 3 . 2 . 1 組み込み codec ( built - in codec ) 
7 . 3 . 2 Unicode オブジェクト ( Unicode 
Python で は 、 処理 速度 を 高める ため に C で 書か れ た 一 そろい の codec を 提供 し て い ます 。 
これら の codec は 全て 以下 の 関数 を 介し て 直接 利用 でき ます 。 以下 の API の 多く が 、 encoding と errors という 二つ の 引数 を とり ます 。 
これら の パラメタ は 、 組み込み の Unicode オブジェクトコンストラクタ で ある unicode () における 同名 の パラメタ と 同じ セマンティクス に なっ て い ます 。 
encoding を NULL に する と 、 デフォルトエンコーディング で ある ASCII を 使い ます 。 
ファイル システム に関する 関数 の 呼び出し で は 、 ファイル 名 に対する エン コーディング として Py _ FileSystemDefaultEncoding を 使わ ね ば なり ませ ん 。 
以下 は 汎用 codec の API です : 
何らかの エン コード 方式 で エン コード さ れ た 、 size バイト の 文字 列 s を デコード し て Unicode オブジェクト を 生成 し ます 。 encoding と errors は 、 組み込み 関数 unicode () の 同名 の パラメタ と 同じ 意味 を 持ち ます 。 
使用 する codec の 検索 は 、 Python の codec レジストリ を 使っ て 行い ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
size で 指定 さ れ た サイズ の Py _ UNICODE バッファ を エン コード し た Python 文字 列 オブジェクト を 返し ます 。 encoding および errors は Unicode 型 の encode () メソッド に 与える 同名 の パラメタ と 同じ 意味 を 持ち ます 。 
使用 する codec の 検索 は 、 Python の codec レジストリ を 使っ て 行い ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
以下 は UTF - 8 codec の API です : 
UTF - 8 で エン コード さ れ た size バイト の 文字 列 s から Unicode オブジェクト を 生成 し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
consumed が NULL の 場合 、 PyUnicode _ DecodeUTF 8 () と 同じ よう に 動作 し ます 。 consumed が NULL で ない 場合 、 PyUnicode _ DecodeUTF 8 Stateful () は 末尾 の 不完全 な UTF - 8 バイト 列 を エラー と みなし ませ ん 。 
これら の バイト 列 は デコード さ れ ず 、 デコード さ れ た バイト 数 を consumed に 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を UTF - 8 で エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
UTF - 8 で Unicode オブジェクト を エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
エラー 処理 は `` strict '' です 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
以下 は UTF - 16 codec の API です : 
UTF - 16 で エン コード さ れ た バッファ s から size バイト デコード し て 、 結果 を Unicode オブジェクト で 返し ます 。 errors は ( NULL で ない 場合 ) エラー 処理 方法 を 定義 し ます 。 
デフォルト 値 は `` strict '' です 。 byteorder が NULL で ない 場合 、 デコード 機構 は 以下 の よう に 指定 さ れ た バイト 整列 ( byte order ) に従って デコード を 開始 し ます : 
* byteorder == - 1 : リトルエンディアン * byteorder == 0 : ネイティブ * byteorder == 1 : ビッグエンディアン 
その後 、 入力 データ 中 に 見つかっ た 全て の バイト 整列 マーカ ( byte order mark , BOM ) に従って 、 バイト 整列 を 切り替え ます 。 
BOM は デコード 結果 の Unicode 文字 列 中 に は コピー さ れ ませ ん 。 
デコード を 完結 し た 後 、 * byteorder は 入力 データ の 終点 現在 における バイト 整列 に 設定 さ れ ます 。 byteorder が NULL の 場合 、 codec は ネイティブ バイト 整列 の モード で 開始 し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 PyObject * 
consumed が NULL の 場合 、 PyUnicode _ DecodeUTF 16 () と 同じ よう に 動作 し ます 。 
consumed が NULL で ない 場合 、 PyUnicode _ DecodeUTF 16 Stateful () は 末尾 の 不完全 な UTF - 16 バイト 列 ( 奇数 長 の バイト 列 や 分割 さ れ た サロゲートペア ) を エラー と みなし ませ ん 。 
これら の バイト 列 は デコード さ れ ず 、 デコード さ れ た バイト 数 を consumed に 返し ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 PyObject * 
s 中 の Unicode データ を UTF - 16 で エン コード し た 結果 が 入っ て いる Python 文字 列 オブジェクト を 返し ます 。 
byteorder が 0 で ない 場合 、 出力 は 以下 の バイト 整列 指定 に従って 書き出さ れ ます : 
byteorder == - 1 : リトルエンディアン byteorder == 0 : ネイティブ ( BOM マーカ を 書き出し ます ) byteorder == 1 : ビッグエンディアン 
バイト オーダ が 0 の 場合 、 出力 結果 と なる 文字 列 は 常に Unicode BOM マーカ ( U + FEFF ) で 始まり ます 。 
それ 以外 の モード で は 、 BOM マーカ を 頭 に つけ ませ ん 。 Py _ UNICODE _ WIDE が 定義 さ れ て いる 場合 、 単一 の Py _ UNICODE 値 は サロゲートペア として 表現 さ れる こと が あり ます 。 
Py _ UNICODE _ WIDE が 定義 さ れ て い なけれ ば 、 各 Py _ UNICODE 値 は UCS - 2 文字 として 表現 さ れ ます 。 codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
ネイティブバイトオーダ の UTF - 16 で エン コード さ れ た Python 文字 列 を 返し ます 。 
文字 列 は 常に BOM マーカ から 始まり ます 。 
エラー 処理 は `` strict '' です 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
以下 は `` Unicode Escape '' codec の API です : 
Unicode - Escape で エン コード さ れ た size バイト の 文字 列 s から Unicode オブジェクト を 生成 し ます 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を Unicode - Escape で エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
Unicode - Escape で Unicode オブジェクト を エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
エラー 処理 は `` strict '' です 。 codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
以下 は `` Raw Unicode Escape '' codec の API です : 
Raw - Unicode - Escape で エン コード さ れ た size バイト の 文字 列 s から Unicode オブジェクト を 生成 し ます 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を Raw - Unicode - Escape で エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
Raw - Unicode - Escape で Unicode オブジェクト を エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
以下 は Latin - 1 codec の API です : Latin - 1 は 、 Unicode 序 数 の 最初 の 256 個 に 対応 し 、 エン コード 時 に は この 256 個 だけ を 受理 し ます 。 
Latin - 1 で エン コード さ れ た size バイト の 文字 列 s から Unicode オブジェクト を 生成 し ます 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を Latin - 1 で エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
Latin - 1 で Unicode オブジェクト を エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
以下 は ASCII codec の API です : 7 ビット の ASCII データ だけ を 受理 し ます 。 
その他 の コード は エラー に なり ます 。 
ASCII で エン コード さ れ た size バイト の 文字 列 s から Unicode オブジェクト を 生成 し ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を ASCII で エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 
ASCII で Unicode オブジェクト を エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
以下 は mapping codec の API です : この codec は 、 多く の 様々 な codec を 実装 する 際 に 使わ れる という 点 で 特殊 な codec です ( 実際 、 encodings パッケージ に 入っ て いる 標準 codecs の ほとんど は 、 この codec を 使っ て い ます )。 この codec は 、 文字 の エン コード や デコード に マップ 型 ( mapping ) を 使い ます 。 
この ため 、 codec を 実現 する マップ 型 に 入れる 必要 が ある 対応 付け 関係 は 、 ある 文字 を 別 の コード 点 に 対応付ける もの だけ です 。 
エン コード さ れ た size バイト の 文字 列 s から mapping に 指定 さ れ た オブジェクト を 使っ て Unicode オブジェクト を 生成 し ます 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を mapping に 指定 さ れ た オブジェクト を 使っ て エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
Unicode オブジェクト を mapping に 指定 さ れ た オブジェクト を 使っ て エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
以下 の codec API は Unicode から Unicode へ の 対応 付け を 行う 特殊 な もの です 。 
で 指定 さ れ た 長 さ を 持つ Py _ UNICODE バッファ を 、 文字 変換 マップ table を 適用 し て 変換 し 、 変換 結果 を Unicode オブジェクト で 返し ます 。 
対応 付け を 行っ て い ない ( LookupError を 起こす よう な ) 文字 序 数 に対して は 、 変換 は 行わ ず 、 そのまま コピー し ます 。 
以下 は MBCS codec の API です 。 
この codec は 現在 の ところ 、 Windows 上 だけ で 利用 でき 、 変換 の 実装 に は Win 32 MBCS 変換 機構 ( Win 32 MBCS converter ) を 使っ て い ます 。 
MBCS ( または DBCS ) は エン コード 方式 の 種類 ( class ) を 表す 言葉 で 、 単一 の エン コード 方式 を 表す わけ で な ない ので 注意 し て ください 。 
利用 さ れる エン コード 方式 ( target encoding ) は 、 codec を 動作 さ せ て いる マシン 上 の ユーザ 設定 で 定義 さ れ て い ます 。 
MBCS で エン コード さ れ た size バイト の 文字 列 s から Unicode オブジェクト を 生成 し ます 。 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ を MBCS で エン コード し 、 Python 文字 列 オブジェクト に し て 返し ます 。 
MBCS で Unicode オブジェクト を エン コード し 、 結果 を Python 文字 列 オブジェクト として 返し ます 。 
18 . 10 . 1 Python バイト コード 命令 
現在 Python コンパイラ は 次 の バイト コード 命令 を 生成 し ます 。 
STOP _ CODE コンパイラ に end - of - code ( コード の 終わり ) を 知らせ ます 。 
インタプリタ で は 使わ れ ませ ん 。 
top - of - stack ( TOS )( スタック の 先頭 ) の 項目 を 取り除き ます 。 
スタック の 先頭 から 二つ の 項目 を 入れ替え ます 。 
スタック の 先頭 に 参照 の 複製 を 作り ます 。 
TOS = + TOS を 実行 し ます 。 
TOS = - TOS を 実行 し ます 。 
TOS = not TOS を 実行 し ます 。 
TOS = ` TOS ` を 実行 し ます 。 
TOS = ~ TOS を 実行 し ます 。 
TOS = iter ( TOS ) を 実行 し ます 。 
二 項 演算 は スタック から スタック の 先頭 ( TOS ) と 先頭 から 二 番目 の スタック 項目 を 取り除き ます 。 
演算 を 実行 し 、 スタック へ 結果 を プッシュ し 戻し ます 。 
TOS = TOS 1 ** TOS を 実行 し ます 。 
TOS = TOS 1 * TOS を 実行 し ます 。 
from __ future __ import division が 有効 で ない とき 、 TOS = TOS 1 / TOS を 実行 し ます 。 
TOS = TOS 1 // TOS を 実行 し ます 。 
from __ future __ import division が 有効 で ない とき 、 TOS = TOS 1 / TOS を 実行 し ます 。 
TOS = TOS 1 % TOS を 実行 し ます 。 
TOS = TOS 1 + TOS を 実行 し ます 。 
TOS = TOS 1 - TOS を 実行 し ます 。 
TOS = TOS 1 [ TOS ] を 実行 し ます 。 
TOS を 実行 し ます 。 
TOS = TOS 1 TOS を 実行 し ます 。 
TOS = TOS 1 ^ TOS を 実行 し ます 。 
TOS = TOS 1 | TOS を 実行 し ます 。 
インプレース 演算 は TOS と TOS 1 を 取り除い て 結果 を スタック へ プッシュ する という 点 で 二 項 演算 と 似 て い ます 。 
インプレース に TOS = TOS 1 ** TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 * TOS を 実行 し ます 。 
from __ future __ import division が 有効 で ない とき 、 インプレース に TOS = TOS 1 / TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 // TOS を 実行 し ます 。 
from __ future __ import division が 有効 で ない とき 、 インプレース に TOS = TOS 1 / TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 % TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 + TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 - TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 
インプレース に TOS = TOS 1 TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 ^ TOS を 実行 し ます 。 
インプレース に TOS = TOS 1 | TOS を 実行 し ます 。 
スライス 演算 は 三つ まで の パラメータ を 取り ます 。 
TOS = TOS [:] を 実行 し ます 。 
TOS = TOS 1 [ TOS :] を 実行 し ます 。 
TOS = TOS 1 [: TOS ] を 実行 し ます 。 
TOS = TOS 2 [ TOS 1 : TOS ] を 実行 し ます 。 
スライス 代入 は さらに 別 の パラメータ を 必要 と し ます 。 
どんな 文 も そう で ある よう に 、 スタック に 何 も プッシュ し ませ ん 。 
TOS [:] = TOS 1 を 実行 し ます 。 
TOS 1 [ TOS :] = TOS 2 を 実行 し ます 。 
TOS 1 [: TOS ] = TOS 2 を 実行 し ます 。 
TOS 2 [ TOS 1 : TOS ] = TOS 3 を 実行 し ます 。 
del TOS [:] を 実行 し ます 。 
del TOS 1 [ TOS :] を 実行 し ます 。 
del TOS 1 [: TOS ] を 実行 し ます 。 
del TOS 2 [ TOS 1 : TOS ] を 実行 し ます 。 
TOS 1 [ TOS ] = TOS 2 を 実行 し ます 。 
del TOS 1 [ TOS ] を 実行 し ます 。 
その他 の 演算 。 
対話 モード の ため の 式 文 を 実行 し ます 。 
TOS は スタック から 取り除か れ プリント さ れ ます 。 
非 対話 モード において は 、 式 文 は POP _ STACK で 終了 し て い ます 。 
sys . stdout に 束縛 さ れ た ファイル 互換 の オブジェクト へ TOS を プリント し ます 。 
print 文 に 、 各 項目 に対する この よう な 命令 が 一つ あり ます 。 
PRINT _ ITEM と 似 て い ます が 、 TOS から 二 番目 の 項目 を TOS に ある ファイル 互換 オブジェクト へ プリント し ます 。 
これ は 拡張 print 文 で 使わ れ ます 。 
sys . stdout へ 改行 を プリント し ます 。 
これ は print 文 が コンマ で 終わっ て い ない 場合 に print 文 の 最後 の 演算 として 生成 さ れ ます 。 
PRINT _ NEWLINE と 似 て い ます が 、 TOS の ファイル 互換 オブジェクト に 改行 を プリント し ます 。 
break 文 が ある ため ループ を 終了 し ます 。 
continue 文 が ある ため ループ を 継続 し ます 。 
target は ジャンプ する アドレス です ( アドレス は FOR _ ITER 命令 で ある べき です )。 LOAD _ LOCALS 
現在 の スコープ の ローカル な 名前 空間 ( locals ) へ の 参照 を スタック に プッシュ し ます 。 これ は クラス 定義 の ため の コード で 使わ れ ます : クラス 本体 が 評価 さ れ た 後 、 locals は クラス 定義 へ 渡さ れ ます 。 
関数 の 呼び出し 元 へ TOS を 返し ます 。 
TOS を ポップ し 、 それ を ジェネレータ から yield し ます 。 
"_" で 始まっ て い ない すべて の シンボル を モジュール TOS から 直接 ローカル 名前 空間 へ ロード し ます 。 
モジュール は すべて の 名前 を ロード し た 後 に ポップ さ れ ます 。 この 演算 コード は from module import * を 実行 し ます 。 
exec TOS 2 , TOS 1 , TOS を 実行 し ます 。 
コンパイラ は 見つから ない オプション の パラメータ を None で 埋め ます 。 
ブロック スタック から ブロック を 一つ 取り除き ます 。 
フレーム ごと に ブロック の スタック が あり 、 ネスト し た ループ 、 try 文 など を 意味 し て い ます 。 
finally 節 を 終わら せ ます 。 
インタプリタ は 例外 を 再び 発生 さ せ なけれ ば なら ない か どう か 、 あるいは 、 関数 が 返り 外側 の 次 の ブロック に 続く か どう か を 思い出し ます 。 
新しい クラス オブジェクト を 作成 し ます 。 
TOS は メソッド 辞書 、 TOS 1 は 基底 クラス の 名前 の タプル 、 TOS 2 は クラス 名 です 。 
次 の 演算 コード は すべて 引数 を 要求 し ます 。 
引数 は より 重要 な バイト を 下位 に もつ 2 バイト です 。 
del name を 実行 し ます 。 ここ で 、 namei は コード オブジェクト の co _ names 属性 へ の インデックス です 。 
TOS を count 個 の へ 個別 の 値 に 分け 、 右 から 左 に スタック に 置か れ ます 。 
count 個 の 項目 を 同じ 順番 を 保ち ながら 複製 し ます 。 
実装 上 の 制限 から 、 count は 1 から 5 の 間 ( 5 を 含む ) で なけれ ば いけ ませ ん 。 
TOS . name = TOS 1 を 実行 し ます 。 ここ で 、 namei は co _ names における 名前 の インデックス です 。 
co _ names へ の インデックス として namei を 使い 、 del TOS . name を 実行 し ます 。 
STORE _ NAME として 機能 し ます が 、 グローバル として 名前 を 記憶 し ます 。 
DELETE _ NAME として 機能 し ます が 、 グルーバル 名 を 削除 し ます 。 
" co _ consts [ consti ]" を スタック に プッシュ し ます 。 
" co _ names [ namei ]" に 関連付け られ た 値 を スタック に プッシュ し ます 。 
スタック から count 個 の 項目 を 消費 する タプル を 作り出し 、 でき た タプル を スタック に プッシュ し ます 。 
BUILD _ TUPLE として 機能 し ます が 、 リスト を 作り出し ます 。 
スタック に 新しい 空 の 辞書 オブジェクト を プッシュ し ます 。 
引数 は 無視 さ れ 、 コンパイラ によって ゼロ に 設定 さ れ ます 。 
TOS を getattr ( TOS , co _ names [ namei ]) と 入れ替え ます 。 
ブール 演算 を 実行 し ます 。 
演算 名 は cmp _ op [ opname ] に あり ます 。 
モジュール co _ names [ namei ] を イン ポート し ます 。 
モジュール オブジェクト は スタック へ プッシュ さ れ ます 。 
現在 の 名前 空間 は 影響 さ れ ませ ん : 適切 な import 文 に対して 、 それ に 続く STORE _ FAST 命令 が 名前 空間 を 変更 し ます 。 
属性 co _ names [ namei ] を TOS に 見つかる モジュール から ロード し ます 。 
作成 さ れ た オブジェクト は スタック に プッシュ さ れ 、 その後 STORE _ FAST 命令 によって 記憶 さ れ ます 。 
バイトコードカウンタ を delta だけ 増加 さ せ ます 。 
TOS が 真 なら ば 、 delta だけ バイトコードカウンタ を 増加 さ せ ます 。 
TOS は スタック に 残さ れ ます 。 
TOS が 偽 なら ば 、 delta だけ バイトコードカウンタ を 増加 さ せ ます 。 
TOS は 変更 さ れ ませ ん 。 
バイトコードカウンタ を target に 設定 し ます 。 
TOS は イテレータ です 。 
その next () メソッド を 呼び出し ます 。 
これ が 新しい 値 を 作り出す なら ば 、 それ を ( その 下 に イテレータ を 残し た まま ) スタック に プッシュ し ます 。 
イテレータ が 尽き た こと を 示し た 場合 は 、 TOS が ポップ さ れ ます 。 そして 、 バイトコードカウンタ が delta だけ 増やさ れ ます 。 
グルーバル 名 co _ names [ namei ] を スタック 上 に ロード し ます 。 
ブロック スタック に ループ の ため の ブロック を プッシュ し ます 。 
ブロック は 現在 の 命令 から delta バイト の 大き さ を 占め ます 。 
try - except 節 から try ブロック を ブロック スタック に プッシュ し ます 。 
delta は 最初 の except ブロック を 指し ます 。 SETUP _ FINALLY 
try - except 節 から try ブロック を ブロック スタック に プッシュ し ます 。 delta は finally ブロック を 指し ます 。 
ローカル な co _ varnames [ var _ num ] へ の 参照 を スタック に プッシュ し ます 。 
TOS を ローカル な co _ varnames [ var _ num ] の 中 に 保存 し ます 。 
ローカル な co _ varnames [ var _ num ] を 削除 し ます 。 
セル と 自由 変数 記憶 領域 の スロット i に 含ま れる セル へ の 参照 を プッシュ し ます 。 
i が co _ cellvars の 長 さ より 小さけれ ば 、 変数 の 名前 は co _ cellvars [ i ] です 。 
そう で なけれ ば 、 それ は co _ freevars [ i - len ( co _ cellvars )] です 。 
セル と 自由 変数 記憶 領域 の スロット i に 含ま れる セル を ロード し ます 。 
セル が 持つ オブジェクト へ の 参照 を スタック に プッシュ し ます 。 
セル と 自由 変数 記憶 領域 の スロット i に 含ま れる セル へ TOS を 保存 し ます 。 
この オペコード は 廃止 さ れ まし た 。 
例外 を 発生 さ せ ます 。 argc は raise 文 へ 与える パラメータ の 数 を 0 から 3 の 範囲 で 示し ます 。 
ハンドラ は TOS 2 として トレース バック 、 TOS 1 として パラメータ 、 そして TOS として 例外 を 見つけ られ ます 。 
関数 を 呼び出し ます 。 
argc の 低位 バイト は 位置 パラメータ を 示し 、 高位 バイト は キーワード パラメータ の 数 を 示し ます 。 オペコード は 最初 に キーワード パラメータ を スタック 上 に 見つけ ます 。 
それぞれ の キーワード 引数 に対して 、 その 値 は キー の 上 に あり ます 。 
スタック 上 の キーワード パラメータ の 下 に 位置 パラメータ は あり 、 先頭 に 最も 右 の パラメータ が あり ます 。 
スタック 上 の パラメータ の 下 に は 、 呼び出す 関数 オブジェクト が あり ます 。 
新しい 関数 オブジェクト を スタック に プッシュ し ます 。 
TOS は 関数 に 関連付け られ た コード です 。 
関数 オブジェクト は TOS の 下 に ある argc デフォルト パラメータ を もつ よう に 定義 さ れ ます 。 
新しい 関数 オブジェクト を 作り出し 、 その func _ closure スロット を 設定 し 、 それ を スタック に プッシュ し ます 。 
TOS は 関数 に 関連付け られ た コード です 。 コード オブジェクト が N 個 の 自由 変数 を 持っ て いる なら ば 、 スタック 上 の 次 の N 個 の 項目 は これら の 変数 に対する セル です 。 
関数 は セル の 前 に ある argc デフォルト パラメータ も 持っ て い ます 。 
スライス オブジェクト を スタック に プッシュ し ます 。 argc は 2 あるいは 3 で なけれ ば なり ませ ん 。 
組み込み 関数 を 参照 し て ください 。 
大き すぎ て デフォルト の 二 バイト に 当てはめる こと が でき ない 引数 を もつ あらゆる オペコード の 前 に 置か れ ます 。 ext は 二つ の 追加 バイト を 保持 し 、 その 後ろ の オペコード の 引数 と 一緒 に なっ て 取ら れ ます 。 
それら は 四 バイト 引数 を 構成 し 、 ext は その 最 上位 バイト です 。 CALL _ FUNCTION _ VAR 
関数 を 呼び出し ます 。 argc は CALL _ FUNCTION の よう に 解釈 実行 さ れ ます 。 
スタック の 先頭 の 要素 は キーワード 引数 辞書 を 含ん で い おり 、 その後 に 変数 引数 の タプル が 続き 、 さらに 明示 的 な キーワード と 位置 引数 が 続き ます 。 
7 . 5 . 8 弱 参照 オブジェクト ( weak reference 
この オブジェクト の 使用 法 に関する 情報 は 、 Python インタプリタ の 拡張 と 埋め込み 1 . 12 節 、 `` Providing a C API for an Extension Module ,'' を 参照 し て ください 。 
この PyObject の サブ タイプ は 不透明 型 値 ( opaque value ) を 表現 し ます 。 C 拡張 モジュール が Python コード から 不透明 型 値 を ( void * ポインタ で ) 他 の C コード に 渡す 必要 が ある とき に 便利 です 。 
正規 の import 機構 を 使っ て 動的 に ロード さ れる モジュール 内 で 定義 さ れ て いる C API に アクセス する ため に 、 ある モジュール 内 で 定義 さ れ て いる C 関数 ポインタ を 別 の モジュール で も 利用 できる よう に する ため に よく 使わ れ ます 。 
引数 が PyCObject の 場合 に 真 を 返し ます 。 
cobj から PyCObject を 生成 し ます 。 
関数 destr が NULL で ない 場合 、 オブジェクト を 再 利用 する 際 に 呼び出し ます 。 
関数 destr が NULL で ない 場合 、 オブジェクト を 再 利用 する 際 に 呼び出し ます 。 引数 desc を 使っ て 、 デストラクタ 関数 に 追加 の コール バック データ を 渡せ ます 。 
PyCObject オブジェクト self を 生成 する の に 用い た オブジェクト void * を 返し ます 。 
PyCObject オブジェクト self を 生成 する の に 用い た コール バック データ void * を 返し ます 。 
CacheFTPHandler オブジェクト は FTPHandler オブジェクト に 以下 の メソッド を 追加 し た もの です : 
接続 の タイム アウト を t 秒 に 設定 し ます 。 
キャッシュ 付き 接続 の 最大 接続 数 を m に 設定 し ます 。 
インスタンス が 関数 として `` 呼ば れ た '' 際 に 呼び出さ れ ます ; この メソッド が 定義 さ れ て いる 場合 、 
x ( arg 1 , arg 2 , ...) は 
x .__ call __( arg 1 , arg 2 , ...) を 短く 書い た もの に なり ます 。 
1 . 7 拡張 モジュール 関数 で の パラメタ 展開 
これ まで は 、 Python から の C 関数 の 呼び出し に 重点 を 置い て 述べ て き まし た 。 ところで この 逆 : C から の Python 関数 の 呼び出し も また 有用 です 。 
とりわけ 、 いわゆる `` コール バック '' 関数 を サポート する よう な ライブラリ を 作成 する 際 に は この 機能 が 便利 です 。 
ある C インタフェース が コール バック を 利用 し て いる 場合 、 同等 の 機能 を 提供 する Python コード で は 、 しばしば Python プログラマ に コール バック 機構 を 提供 する 必要 が あり ます ; この とき 実装 で は 、 C で 書か れ た コール バック 関数 から Python で 書か れ た コール パック 関数 を 呼び出す よう に する 必要 が ある でしょ う 。 
もちろん 、 他 の 用途 も 考え られ ます 。 幸運 な こと に 、 Python インタプリタ は 簡単 に 再帰 呼び出し でき 、 Python 関数 を 呼び出す ため の 標準 インタフェース も あり ます 。 
( Python パーザ を 特定 の 入力 文字 を 使っ て 呼び出す 方法 について 詳説 する つもり は あり ませ ん -- この 方法 に 興味 が ある なら 、 Python ソース コード の Python / pythonmain . c に ある 、 コマンドラインオプション - c の 実装 を 見 て ください ) Python 関数 の 呼び出し は 簡単 です 。 
まず 、 C の コード に対して コール バック を 登録 しよ う と する Python プログラム は 、 何らかの 方法 で Python の 関数 オブジェクト を 渡さ ね ば なり ませ ん 。 
この ため に 、 コール バック 登録 関数 ( または その他 の インタフェース ) を 提供 せ ね ば なり ませ ん 。 
この コール バック 登録 関数 が 呼び出さ れ た 際 に 、 引き渡さ れ た Python 関数 オブジェクト へ の ポインタ を グローバル 変数 に -- あるいは 、 どこ か 適切 な 場所 に -- 保存 し ます ( 関数 オブジェクト を Py _ INCREF () する よう よく 注意 し て ください !)。 
例えば 、 以下 の よう な 関数 が モジュール の 一部 に なっ て いる こと でしょ う : 
static PyObject * my _ callback = NULL ; static PyObject * my _ set _ callback ( PyObject * dummy , PyObject * args ){ PyObject * result = NULL ; PyObject * temp ; if ( PyArg _ ParseTuple ( args , " O : set _ callback ", temp )) { if (! PyCallable _ Check ( temp )) { PyErr _ SetString ( PyExc _ TypeError , " parameter must be callable "); return NULL ;} Py _ XINCREF ( temp ); /* 新た な コール バック へ の 参照 を 追加 */ Py _ XDECREF ( my _ callback ); /* 以前 の コール バック を 捨てる */ my _ callback = temp ; /* 新た な コール バック を 記憶 *//* " None " を 返す 際 の 定型 句 */ Py _ INCREF ( Py _ None ); result = Py _ None ;} return result ;} 
この 関数 は METH _ VARARGS フラグ を 使っ て インタプリタ に 登録 せ ね ば なり ませ ん ; METH _ VARARGS フラグ について は 、 1 . 4 節 、 `` モジュール の メソッド テーブル と 初期 化 関数 '' で 説明 し て い ます 。 
PyArg _ ParseTuple () 関数 と その 引数 について は 、 1 . 7 節 、 `` 拡張 モジュール 関数 で の パラメタ 展開 '' に 記述 し て い ます 。 Py _ XINCREF () および Py _ XDECREF () は 、 オブジェクト に対する 参照 カウント を インクリメント / デクリメント する ため の マクロ で 、 NULL ポインタ が 渡さ れ て も 安全 に 操作 できる 形式 です ( と は いえ 、 上 の 流れ で は temp が NULL に なる こと は あり ませ ん )。 
この 関数 に は 二つ の 引数 : Python 関数 と Python 関数 の 引数 リスト が あり 、 いずれ も 任意 の Python オブジェクト を 表す ポインタ 型 です 。 
引数 リスト は 常に タプルオブジェクト で なけれ ば なら ず 、 その 長 さ は 引数 の 数 に なり ます 。 
Python 関数 を 引数 なし で 呼び出す の なら 空 の タプル を 渡し ます ; 単一 の 引数 で 関数 を 呼び出す の なら 、 単 要素 ( singleton ) の タプル を 渡し ます 。 Py _ BuildValue () の 書式 化 文字 列 中 に 、 ゼロ 個 または 一 個 以上 の 書式 化 コード が 入っ た 丸 括弧 が ある 場合 、 この 関数 は タプル を 返し ます 。 
以下 に 例 を 示し ます : 
int arg ; PyObject * arglist ; PyObject * result ;... arg = 123 ;.../* ここ で コール バック を 呼ぶ */ arglist = Py _ BuildValue ("( i )", arg ); result = PyEval _ CallObject ( my _ callback , arglist ); Py _ DECREF ( arglist ); 
PyEval _ CallObject () は Python オブジェクト へ の ポインタ を 返し ます ; これ は Python 関数 から の 戻り 値 に なり ます 。 
PyEval _ CallObject () は 、 引数 に対して `` 参照 カウント 中立 ( reference - count - neutral )'' です 。 
上 の 例 で は タプル を 生成 し て 引数 リスト として 提供 し て おり 、 この タプル は 呼び出し 直後 に Py _ DECREF () し て い ます 。 PyEval _ CallObject () は `` 新しい '' 戻り 値 を 返し ます : 戻り 値 が 表す オブジェクト は 新た な オブジェクト か 、 既存 の オブジェクト の 参照 カウント を インクリメント し た もの です 。 
従って 、 この オブジェクト を グローバル 変数 に 保存 し たい の で ない かぎり 、 たとえ この 戻り 値 に 興味 が なく て も ( むしろ 、 そう で あれ ば なおさら !) 何 が しか の 方法 で 戻り 値 オブジェクト を Py _ DECREF () し なけれ ば なり ませ ん 。 と は いえ 、 戻り 値 を Py _ DECREF () する 前 に は 、 値 が NULL で ない か チェック し て おく こと が 重要 です 。 
もし NULL なら 、 呼び出し た Python 関数 は 例外 を 送出 し て 終了 さ せ られ て い ます 。 
PyEval _ CallObject () を 呼び出し て いる コード 自体 も また Python から 呼び出さ れ て いる の で あれ ば 、 今度 は C コード が 自分 を 呼び出し て いる Python コード に エラー 標示 値 を 返さ ね ば なり ませ ん 。 それ により 、 インタプリタ は スタック トレース を 出力 し たり 、 例外 を 処理 する ため の Python コード を 呼び出し たり でき ます 。 
例外 の 送出 が 不可能 だっ たり 、 し たく ない の なら 、 PyErr _ Clear () を 呼ん で 例外 を 消去 し て おか ね ば なり ませ ん 。 
例えば 以下 の よう に し ます : 
if ( result == NULL ) return NULL ; /* エラー を 返す */... use result ... Py _ DECREF ( result ); 
Python コール バック 関数 を どんな インタフェース に し たい か によって は 、 引数 リスト を PyEval _ CallObject () に 与え なけれ ば なら ない 場合 も あり ます 。 
ある ケース で は 、 コール バック 関数 を 指定 し た の と 同じ インタフェース を 介し て 、 引数 リスト も 渡さ れ て いる かも しれ ませ ん 。 
また 別 の ケース で は 、 新しい タプル を 構築 し て 引数 リスト を 渡さ ね ば なら ない かも しれ ませ ん 。 
この 場合 最も 簡単 な の は Py _ BuildValue () を 呼ぶ やり方 です 。 
例えば 、 整数 の イベント コード を 渡し たけれ ば 、 以下 の よう な コード を 使う こと に なる でしょ う : 
PyObject * arglist ;... arglist = Py _ BuildValue ("( l )", eventcode ); result = PyEval _ CallObject ( my _ callback , arglist ); Py _ DECREF ( arglist ); if ( result == NULL ) return NULL ; /* エラー を 返す *//* 場合 によって は ここ で 結果 を 使う かも ね */ Py _ DECREF ( result ); 
" Py _ DECREF ( arglist )" が 呼び出し の 直後 、 エラー チェック より も 前 に 置か れ て いる こと に 注意 し て ください ! また 、 厳密 に 言え ば 、 この コード は 完全 で は あり ませ ん : Py _ BuildValue () は メモリ 不足 に おちいる かも しれ ず 、 チェック し て おく べき です 。 
呼び出し ( call ) は 、 呼び出し 可能 オブジェクト ( callable object , 例えば 関数 など ) を 、 引数 列 とともに 呼び出し ます 。 引数 列 は 空 の シーケンス でも かまい ませ ん : 
引数 式 は 全て 、 呼び出し を 試みる 前 に 値 評価 さ れ ます 。 
仮 引数 ( formal parameter ) リスト の 構文 について は 、 7 . 5 を 参照 し て ください 。 キーワード 引数 が 存在 する 場合 、 以下 の よう に し て 最初 に 固定 引数 ( positional argument ) に 変換 さ れ ます 。 
まず 、 値 の 入っ て い ない スロット が 仮 引数 に対して 生成 さ れ ます 。 
N 個 の 固定 引数 が ある 場合 、 固定 引数 は 先頭 の N スロット に 配置 さ れ ます 。 
次に 、 各 キーワード 引数 について 、 識別子 を 使っ て 対応 する スロット を 決定 し ます ( 識別子 が 最初 の 仮 引数 パラメタ 名 と 同じ なら 、 最初 の スロット を 使う 、 といった 具合 です )。 
全て の 引数 が 処理 さ れ たら 、 まだ 埋め られ て い ない スロット を それぞれ に 対応 する 関数 定義 時 の デフォルト 値 で 埋め ます 。 
( デフォルト 値 は 、 関数 が 定義 さ れ た とき に 一 度 だけ 計算 さ れ ます ; 従っ て 、 リスト や 辞書 の よう な 変更 可能 な オブジェクト が デフォルト 値 として 使わ れる と 、 対応 する スロット に 引数 を 指定 し ない 限り 、 この オブジェクト が 全て の 呼び出し から 共有 さ れ ます ; この よう な 状況 は 通常 避ける べき です 。 
) デフォルト 値 が 指定 さ れ て い ない 、 値 の 埋め られ て い ない スロット が 残っ て いる 場合 、 TypeError 例外 が 送出 さ れ ます 。 
この シーケンス の 要素 は 、 追加 の 固定 引数 の よう に 扱わ れ ます ; すなわち 、 固定 引数 x 1 ,..., xN と 、 y 1 ,..., yM に なる シーケンス " expression " を 使っ た 場合 、 M + N 個 の 固定 引数 x 1 ,..., xN , y 1 ,..., yM を 使っ た 呼び出し と 同じ に なり ます 。 上記 の 仕様 による 結果 として 、 "* expression " 構文 は たとえ キーワード 引数 以降 に あっ て も 、 キーワード 引数 以前 に ("** expression " 引数 が あれ ば さらに その後 に - 下記 参照 ) 処理 さ れ ます 。 
従って : 
def f ( a , b ):... print a , b ... f ( b = 1 , *( 2 ,)) 2 1 f ( a = 1 , *( 2 ,)) Traceback ( most recent call last ): File " stdin ", line 1 , in ? TypeError : f () got multiple values for keyword argument ' a ' f ( 1 , *( 2 ,)) 1 2 と なり ます 。 
明示 的 な キーワード 引数 が " expression " 内 の キーワード と 重複 し た 場合 に は 、 TypeError 例外 が 送出 さ れ ます 。 "* identifier " や "** identifier " 構文 を 使っ た 仮 引数 は 、 固定 引数 スロット や キーワード 引数 名 に する こと が でき ませ ん 。 
ユーザ 定義 関数 の とき : 
関数 の コード ブロック に 引数 リスト が 渡さ れ 、 実行 さ れ ます 。 
コード ブロック は 、 まず 仮 引数 を 実 引数 に 結合 ( bind ) し ます ; この 動作 について は 7 . 5 で 記述 し て い ます 。 
コード ブロック で return 文 が 実行 さ れる 際 に 、 関数 呼び出し の 戻り 値 ( return value ) が 決定 さ れ ます 。 
組み込み 関数 や 組み込み メソッド の とき : 
結果 は インタプリタ に 依存 し ます ; 組み込み 関数 や 組み込み メソッド の 詳細 は 、 
Python ライブラリ リファレンス 
を 参照 し て ください 。 
クラス オブジェクト の とき : 
その クラス の 新しい インスタンス が 返さ れ ます 。 
クラスインスタンスメソッド の とき : 
対応 する ユーザ 定義 の 関数 が 呼び出さ れ ます 。 この とき 、 呼び出し 時 の 引数 リスト より 一つ 長い 引数 リスト で 呼び出さ れ ます : インスタンス が 引数 リスト の 先頭 に 追加 さ れ ます 。 
クラス インスタンス の とき : 
クラス で __ call __() メソッド が 定義 さ れ て い なけれ ば なり ませ ん ; __ call __() メソッド が 呼び出さ れ た 場合 と 同じ 効果 を もたらし ます 。 
パーザ オブジェクト ( createparser () で 返さ れ ます ) に は 以下 の メソッド が あり ます : 
パーザ に コール バック を 加え ます 。 
デジタルオーディオストリーム の 8 つ の 異なる データタイプ の ため の コール バック を パーザ は 持っ て い ます 。 
これら の タイプ の ため の 定数 は cd モジュール の レベル で 定義 さ れ て い ます ( 上記 参照 )。 
コール バック は 以下 の よう に 呼び出さ れ ます : func ( arg , type , data )、 ここ で arg は ユーザ が 与え た 引数 、 type は コール バック の 特定 の タイプ 、 data は この type の コール バック に 渡さ れる データ です 。 
データ の タイプ は 以下 の よう に コール バック の タイプ によって 決まり ます : 
al . writesamps () へ そのまま 渡す こと の できる 文字 列 。 
プログラム ( トラック ) ナンバー を 示す 整数 。 
インデックス ナンバー を 示す 整数 。 
プログラム の 時間 を 示す 分 、 秒 、 フレーム から なる タプル 。 
絶対 的 な 時刻 を 示す 分 、 秒 、 フレーム から なる タプル 。 
CD の カタログ ナンバー を 示す 13 文字 の 文字 列 。 
録音 の ISRC 識別 番号 を 示す 12 文字 の 文字 列 。 
文字 列 は 2 文字 の 国 別 コード 、 3 文字 の 所有 者 コード 、 2 文字 の 年号 、 5 文字 の シリアル ナンバー から なり ます 。 
CD の サブ コード データ の コントロール ビット を 示す 整数 。 
パーザ を 消去 し て 、 使用 し て い た メモリ を 解放 し ます 。 
この 呼び出し の あと 、 オブジェクト は 使用 でき ませ ん 。 
オブジェクト へ の 最後 の 参照 が 削除 さ れる と 、 自動的 に この メソッド が 呼び出さ れ ます 。 
readda () など から 返さ れ た デジタル オーディオ CD の データ の 1 つ あるいは それ 以上 の フレーム を パース し ます 。 
データ 内 に どういう サブ コード が ある か を 決定 し ます 。 
その 前 の フレーム から サブ コード が 変化 し て い たら 、 parseframe () は 対応 する タイプ の コール バック を 起動 し て 、 フレーム 内 の サブ コード データ を コール バック に 渡し ます 。 C の 関数 と は 違っ て 、 1 つ 以上 の デジタルオーディオデータ の フレーム を この メソッド に 渡す こと が でき ます 。 
指定 し た type の コール バック を 削除 し ます 。 
サブ コード を 追跡 し て いる パーザ の フィールド を リセット し て 、 初期 状態 に し ます 。 ディスク を 交換 し た あと 、 resetparser () を 呼び出さ なけれ ば なり ませ ん 。 
`` セル ( cell )'' オブジェクト は 、 複数 の スコープ から 参照 さ れる 変数 群 を 実装 する ため に 使わ れ ます 。 
セル は 各 変数 について 作成 さ れ 、 各々 の 値 を 記憶 し ます ; この 値 を 参照 する 各 スタック フレーム における ローカル 変数 に は 、 その スタック フレーム の 外側 で 同じ 値 を 参照 し て いる セル に対する 参照 が 入り ます 。 
セル で 表現 さ れ た 値 に アクセス する と 、 セル オブジェクト 自体 の 代わり に セル 内 の 値 が 使わ れ ます 。 
この セル オブジェクト を 使っ た 間接 参照 ( dereference ) は 、 インタプリタ によって 生成 さ れ た バイト コード 内 で サポート さ れ て いる 必要 が あり ます ; セル オブジェクト に アクセス し た 際 に 、 自動的 に 間接 参照 は 起こり ませ ん 。 
上記 以外 の 状況 で は 、 セル オブジェクト は 役に立た ない はず です 。 
セル オブジェクト に 使わ れる C 構造 体 です 。 
セル オブジェクト に 対応 する 型 オブジェクト です 。 
ob が セル オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 
値 ob の 入っ た 新た な セル オブジェクト を 生成 し て 返し ます 。 引数 を NULL に し て も かまい ませ ん 。 
cell の 内容 を 返し ます 。 
cell の 内容 を 返し ます が 、 cell が 非 NULL で かつ セル オブジェクト で ある か どう か チェック し ませ ん 。 
セル オブジェクト cell の 内容 を value に 設定 し ます 。 
成功 する と 0 を 返し ます 。 
セル オブジェクト cell の 値 を value に 設定 し ます 。 
参照 カウント に対する 変更 は なく 、 安全 の ため の チェック は 何 も 行い ませ ん ; cell は 非 NULL で なけれ ば なら ず 、 かつ セル オブジェクト で なけれ ば なり ませ ん 。 
11 . 2 . 2 cgi モジュール を 使う 
CGI スクリプト は 、 HTTP サーバ によって 起動 さ れ 、 通常 は HTML の FORM または ISINDEX エレメント を通じて ユーザ が 入力 し た 内容 を 処理 し ます 。 
この モジュール で は 、 上記 の ケース の 違い に 注意 し つつ 、 Python スクリプト に対して は 単純 な インタフェース を 提供 し て い ます 。 
最初 の セクション は 複数 の ヘッダ から なり 、 後続 する データ が どの よう な もの か を クライアント に 通知 し ます 。 
最小 の ヘッダ セクション を 生成 する ため の Python の コード は 以下 の よう な もの です : 
print " Content - Type : text / html " # 以降 の データ が HTML で ある こと を 示す 行 print # ヘッダ 部 の 終了 を 示す 空 行 
二つ 目 の セクション は 通常 、 ヘッダ や インライン イメージ 等 の 付属 し た テキスト を うまく フォーマット し て 表示 できる よう に し た HTML です 。 以下 に 単純 な HTML を 出力 する Python コード を 示し ます : 
11 . 2 . 7 CGI スクリプト を Unix 
これ は よく 知ら れ て いる セキュリティ ホール で あり 、 これ によって Web の どこ か に いる 悪賢い ハッカー が 、 だまさ れ やすい CGI スクリプト に 任意 の シェル コマンド を 実行 さ せ て しまえ ます 。 
URL の 一部 や フィールド 名 で さえ も 信用 し て は いけ ませ ん 。 CGI へ の リクエスト は あなた の 作っ た フォーム から 送信 さ れる と は 限ら ない から です ! 安全 な 方法 を とる ため に 、 フォーム から 入力 さ れ た 文字 を シェル に 渡す 場合 、 文字 列 に 入っ て いる の が 英 数 文字 、 ダッシュ 、 アンダー スコア 、 および ピリオド だけ か どう か を 確認 し て ください 。 
クラス 定義 は 、 クラス オブジェクト を 定義 し ます ( 3 . 2 節 参照 ): 
クラス 定義 は 実行 可能 な 文 です 。 
クラス 定義 で は 、 まず 継承 リスト が あれ ば それ を 評価 し ます 。 
継承 リスト の 各 要素 の 値 評価 結果 は クラス オブジェクト か 、 サブ クラス 可能 な クラス 型 で なけれ ば なり ませ ん 。 
次に クラス の スイート が 新た な 実行 フレーム 内 で 、 新た な ローカル 名前 空間 と 元々 の グローバル 名前 空間 を 使っ て 実行 さ れ ます ( 4 . 1 節 を 参照 し て ください )。 
( 通常 、 スイート に は 関数 定義 のみ が 含ま れ ます ) クラス の スイート を 実行 し 終える と 、 実行 フレーム は 無視 さ れ ます が 、 ローカル な 名前 空間 は 保存 さ れ ます 。 
次に 、 基底 クラス の 継承 リスト を 使っ て クラス オブジェクト が 生成 さ れ 、 ローカル な 名前 空間 を 属性 値 辞書 として 保存 し ます 。 
最後 に 、 もと の ローカル な 名前 空間 において 、 クラス 名 が この クラス オブジェクト に 束縛 さ れ ます 。 
プログラマ の ため の 注釈 : クラス 定義 内 で 定義 さ れ た 変数 は クラス 変数 です ; クラス 変数 は 全て の インスタンス 間 で 共有 さ れ ます 。 
インスタンス 変数 を 定義 する に は 、 __ init __() メソッド や 他 の メソッド 中 で 変数 に 値 を 与え ます 。 
クラス 変数 も インスタンス 変数 も `` self . name '' 表記 で アクセス する こと が でき ます 。 
この 表記 で アクセス する 場合 、 インスタンス 変数 は 同名 の クラス 変数 を 隠蔽 し ます 。 
変更 不能 な 値 を もつ クラス 変数 は 、 インスタンス 変数 の デフォルト 値 として 使え ます 。 新 形式 の クラス で は 、 デスクリプタ を 使っ て インスタンス 変数 の 振舞い を 変更 でき ます 。 
5 ドキュメント クラス Python ドキュメント で 利用 する ため 、 2 つ の LaTeX ドキュメント クラス が 定義 さ れ て い ます 。 
manual クラス は 、 章 単位 で 区分 する よう な 大きな ドキュメント の ため の クラス です 。 
howto クラス は より 小さな ドキュメント の ため の クラス です 。 manual ドキュメント は 大 規模 で 、 ほとんど の 標準 ドキュメント が 使う クラス です 。 
この ドキュメント クラス は 標準 LaTeX の report クラス に 基づい て い て 、 まるで 長い 技術 的 報告 書 の よう に フォーマット さ れ ます 。 
ます 。 
Python リファレンス マニュアル 
は manual ドキュメント の よい 例 です 。 また 、 
は 大 規模 な 文書 の 例 です 。 howto ドキュメント は より 短く 、 manual ドキュメント の よう な 大きな 構造 を 持ち ませ ん 。 
この クラス は 標準 LaTeX の article クラス に 基づい て い て 、 Linux Documentation プロジェクト の `` HOWTO '' シリーズ の よう に フォーマット さ れ ます 。 `` HOWTO '' シリーズ は もともと LinuxDoc ソフトウェア を 使っ て フォーマット を 行っ て い ます 。 
この ドキュメント クラス の 本来 の 目的 は 、 LDP の HOWTO シリーズ と 同様 の 役割 を 果たす こと に あり まし た が 、 その後 、 この クラス に は より 広範囲 な 適用 性 が ある と わかり まし た 。 
この クラス は `` how - to '' ドキュメント ( この ドキュメント が その 一 例 です ) や 、 小規模 で 、 かなり 強い 関連 性 で 結ば れ た モジュール ライブラリ の リファレンス マニュアル に 用い ます 。 
後者 の ドキュメント クラス の 例 に は 
が あり ます 。 
これら の ドキュメント は 、 大きな ドキュメント における 章 一つ 分 と だいたい 同じ 規模 です 。 
4 . 9 . 1 . 1 Codec オブジェクト 
4 . 9 . 1 . 2 StreamWriter オブジェクト 
Codec クラス は 以下 の メソッド を 定義 し ます 。 これら の メソッド は 、 内部 状態 を 持た ない エンコーダ / デコーダ 関数 の インタフェース を 定義 し ます 。 
オブジェクト input エン コード し 、 ( 出力 オブジェクト , 消費 し た 長 さ ) の タプル を 返し ます 。 
codecs は Unicode 専用 で は あり ませ ん が 、 Unicode の 文脈 で は 、 エン コーディング は Unicode オブジェクト を 特定 の 文字 集合 エン コーディング ( たとえば cp 1252 や iso - 8859 - 1 ) を 使っ て 文字 列 オブジェクト に 変換 し ます 。 
errors は 適用 する エラー 処理 を 定義 し ます 。 
' strict ' 処理 が デフォルト です 。 この メソッド は Codec に 内部 状態 を 保存 し て は なり ませ ん 。 
オブジェクト input を デコード し 、 ( 出力 オブジェクト , 消費 し た 長 さ ) の タプル を 返し ます 。 
Unicode の 文脈 で は 、 デコード は 特定 の 文字 集合 エン コーディング で エン コード さ れ た 文字 列 を Unicode オブジェクト に 変換 し ます 。 
input は bf _ getreadbuf バッファ スロット を 提供 する オブジェクト で なけれ ば なり ませ ん 。 
バッファ スロット を 提供 し て いる オブジェクト に は Python 文字 列 オブジェクト 、 バッファ オブジェクト 、 メモリマップファイル が あり ます 。 
' strict ' が デフォルト 値 です 。 この メソッド は 、 Codec インスタンス に 内部 状態 を 保存 し て は なり ませ ん 。 
StreamWriter と StreamReader クラス は 、 新しい エンコーディングモジュール を 、 非常 に 簡単 に 実装 する の に 使用 できる 、 一般 的 な インター フェイス 提供 し ます 。 
実装 例 は encodings . utf _ 8 を ご覧 ください 。 
本節 で は 、 型 強制 ( coercion ) に関する 規則 について 記述 し ます 。 
プログラム 言語 が 進化 する につれ 、 型 強制 規則 について 正確 に 記述 する の は 難しく なっ て ゆき ます ; 従っ て 、 ある バージョン の ある 実装 について 記述 する の は 望ましく あり ませ ん 。 
その 代わり に 、 型 強制 に関する 非公式 的 な ガイドライン を 示し て おき ます 。 
Python 3 . 0 から は 、 型 強制 が サポート さ れ なく なる 予定 です 。 
% 演算 子 の 左 被 演算 子 が 文字 列 か Unicode オブジェクト の 場合 、 型 強制 は 起き ず 、 文字 列 として の 書式 化 操作 が 呼び出さ れ ます 。 
型 強制 演算 の 定義 は もはや 推奨 さ れ て い ませ ん 。 
事実 上 、 NotImplemented を 返す 演算 子 は 、 全く 実装 さ れ て い ない もの として 扱わ れ ます 。 
以下 の 説明 で は 、 __ op __() および __ rop __() は 、 演算 子 に 相当 する 一般 的 な メソッド 名 を 表す ため に 使わ れ ます ; __ iop __ は インプレース 演算 子 を 表し ます 。 
例えば 、 演算 子 `+' の 場合 、 __ add __() および __ radd __() が それぞれ 左右 の 被 演算 子 用 の 二 項 演算 子 として 使わ れ 、 __ iadd __ が インプレース 演算 用 の 演算 子 として 使わ れる 、 といった 具合 です 。 
オブジェクト x および y に対して 、 まず 
x .__ op __( y ) が 試さ れ ます 。 
この 演算 が 実装 さ れ て い ない か 、 NotImplemented を 返す 場合 、 次に 
y .__ rop __( x ) が 試さ れ ます 。 
この 演算 も 実装 さ れ て い ない か 、 NotImplemented を 返す なら 、 TypeError 例外 が 送出 さ れ ます 。 
ただし 、 以下 の 例外 が ある ので 参照 し て ください : 
前項 に対する 例外 : 左 被 演算 子 が 組み込み 型 や 新 形式 クラス の インスタンス で あり 、 かつ 右 被 演算 子 が 左 被 演算 子 と 同じ クラス か 適切 な サブ クラス の インスタンス で ある 場合 、 左 被 演算 子 の __ op __() メソッド を 試す 前 に 右 被 演算 子 の __ rop __() が 試さ れ ます 。 
これ は 、 サブ クラス 側 で 二 項 演算 子 を 完全 に オーバライド できる よう に する ため です 。 
そう し なけれ ば 、 常に 左 被 演算 子 の __ op __ メソッド が 右 被 演算 子 を 受理 し て しまい ます : ある クラス の インスタンス が 被 演算 子 に なる と さ れ て いる 場合 、 その サブ クラス の インスタンス も また 受理 可能 だ から です 。 
双方 の 被 演算 子 が 型 強制 を 定義 し て いる 場合 、 型 強制 は 被 演算 子 の 型 の __ op __() や __ rop __() メソッド が 呼び出さ れる 前 に 呼び出さ れ 、 それ より 早く なる こと は あり ませ ん 。 
型 強制 の 結果 、 型 強制 を 行う こと に なっ た いずれ の 被 演算 子 と も 異なる 型 が 返さ れ た 場合 、 返さ れ た オブジェクト の 新た な 型 を 使っ て 、 この 過程 が 部分 的 に 再度 行わ れ ます 。 
(`+=' の よう な ) インプレース 型 の 演算 子 を 用いる 際 、 左 被 演算 子 が __ iop __() を 実装 し て いれ ば 、 __ iop __() が 呼び出さ れ 、 型 強制 は 一切 行わ れ ませ ん 。 
演算 が __ op __() かつ / または __ rop __() に 帰着 し た 場合 、 通常 の 型 強制 規則 が 適用 さ れ ます 。 
y において 、 x が 結合 ( concatenation ) 演算 を 実装 し て いる シーケンス で あれ ば 、 シーケンス の 結合 が 実行 さ れ ます 。 
y において 、 一方 の 演算 子 が 繰り返し ( repeat ) 演算 を 実装 し て いる シーケンス で あり 、 かつ 他方 が 整数 ( int または long ) で ある 場合 、 シーケンス の 繰り返し が 実行 さ れ ます 。 
(__ eq __() など の メソッド で 実装 さ れ て いる ) 拡張 比較 は 、 決して 型 強制 を 行い ませ ん 。 
(__ cmp __() で 実装 さ れ て いる ) 三 値 比較 ( three - way comparison ) は 、 他 の 二 項 演算 子 で 行わ れ て いる の と 同じ 条件 で 型 強制 を 受け ます 。 
現在 の 実装 で は 、 組み込み 数値 型 int , long および float は 型 強制 を 行い ませ ん ; 一方 、 complex は 型 強制 を 使い ます 。 
こうした 違い は 、 これら の 型 を サブ クラス 化 する 際 に 顕在 化 し て き ます 。 
そのうち 、 complex 型 について も 型 強制 を 避ける よう 修正 さ れる かも しれ ませ ん 。 
これら の 型 は 全て 、 関数 coerce () から 利用 する ため の __ coerce __() メソッド を 実装 し て い ます 。 
コメント は 文字 列 リテラル 内 に 入っ て い ない ハッシュ 文字 (#) から 始まり 、 同じ 物理 行 の 末端 で 終わり ます 。 
非 明示 的 な 行 継続 規則 が 適用 さ れ て い ない 限り 、 コメント は 論理 行 を 終端 さ せ ます 。 コメント は 構文 上 無視 さ れ ます ; コメント は トー クン に なり ませ ん 。 
10 . 1 オブジェクト を ヒープ 上 に メモリ 確保 する 
Python で は 、 オブジェクト 型 を 定義 する 上 で 数 多く の 構造 体 が 使わ れ ます 。 
PyObject 型 や PyVarObject 型 も また 、 他 の 全て の Python オブジェクト を 定義 する 上 で 直接的 ・ 間接 的 に 使わ れ て いる マクロ を 使っ て 定義 さ れ て い ます 。 
全て の オブジェクト 型 は この 型 を 拡張 し た もの です 。 
この 型 に は 、 ある オブジェクト に対する オブジェクト として の ポインタ を Python から 扱う 必要 が ある 際 に 必要 な 情報 が 入っ て い ます 。 
通常 に `` リリース さ れ て いる '' ビルド で は 、 この 構造 体 に は オブジェクト の 参照 カウント と 、 オブジェクト に 対応 する 型 オブジェクト だけ が 入っ て い ます 。 
PyObject _ HEAD マクロ 展開 で 定義 さ れ て いる フィールド に 対応 し ます 。 
PyObject を 拡張 し て 、 ob _ size フィールド を 追加 し た もの です 。 
この 構造 体 は 、 長 さ ( length ) の 概念 を 持つ オブジェクト だけ に対して 使い ます 。 
この 型 が Python / C API で 使わ れる こと は ほとんど あり ませ ん 。 
PyObject _ VAR _ HEAD マクロ 展開 で 定義 さ れ て いる フィールド に 対応 し ます 。 
PyObject および PyVarObject の 定義 に は 以下 の マクロ が 使わ れ て い ます : 
PyObject 型 の フィールド 宣言 に 展開 さ れる マクロ です ; 可変 で ない 長 さ を 持つ オブジェクト を 表現 する 新た な 型 を 宣言 する 場合 に 使い ます 。 
展開 によって どの フィールド が 宣言 さ れる か は 、 Py _ TRACE _ REFS の 定義 に 依存 し ます 。 
デフォルト で は 、 Py _ TRACE _ REFS は 定義 さ れ て おら ず 、 PyObject _ HEAD は 以下 の コード に 展開 さ れ ます : 
Py _ TRACE _ REFS が 定義 さ れ て いる 場合 、 以下 の よう に 展開 さ れ ます : 
PyObject _ VAR _ HEAD マクロ です 。 
PyVarObject 型 の フィールド 宣言 に 展開 さ れる マクロ です ; インスタンス によって 可変 の 長 さ を 持つ オブジェクト を 表現 する 新た な 型 を 宣言 する 場合 に 使い ます 。 
マクロ は 常に 以下 の よう に 展開 さ れ ます : 
マクロ 展開 結果 の 一部 に PyObject _ HEAD が 含ま れ て おり 、 PyObject _ HEAD の 展開 結果 は Py _ TRACE _ REFS の 定義 に 依存 し ます 。 
ほとんど の Python の 呼び出し 可能 オブジェクト を C で 実装 する 際 に 用い られ て いる 関数 の 型 です 。 この 型 の 関数 は 二つ の PyObject * 型 パラメタ を とり 、 PyObject * 型 の 値 を 返し ます 。 
戻り 値 を NULL に する 場合 、 例外 を セット し て おか なけれ ば なり ませ ん 。 
NULL で ない 値 を 返す 場合 、 戻り 値 は Python に 関数 の 戻り 値 として 公開 さ れる 値 として 解釈 さ れ ます 。 
この 型 の 関数 は 新た な 参照 を 返さ なけれ ば なり ませ ん 。 
拡張 型 の メソッド を 記述 する 際 に 用いる 構造 体 です 。 
この 構造 体 に は 4 つ の フィールド が あり ます : 
フィールド 
C データ 型 
メソッド 名 
C 実装 へ の ポインタ 
呼び出し を どの よう に 行う か を 示す フラグ ビット 
docstring の 内容 を 指す ポインタ 
ml _ meth は C の 関数 ポインタ です 。 
関数 は 別 の 型 で 定義 さ れ て い て も かまい ませ ん が 、 常に PyObject * を 返し ます 。 
関数 が PyFunction で ない 場合 、 メソッド テーブル 内 で キャスト を 行う よう コンパイラ が 要求 する こと に なる でしょ う 。 
PyCFunction で は 最初 の パラメタ が PyObject * 型 で ある と 定義 し て い ます が 、 固有 の C 型 を self オブジェクト に 使う 実装 は よく 行わ れ て い ます 。 ml _ flags フィールド は ビット フィールド で 、 以下 の フラグ が 入り ます 。 
個々 の フラグ は 呼び出し 規約 ( calling convention ) や 束縛 規約 ( binding convention ) を 表し ます 。 
呼び出し 規約 フラグ で は 、 METH _ VARARGS および METH _ KEYWORDS を 組み合わせ られ ます ( ただし 、 METH _ KEYWORDS 単体 の 指定 を 行っ て も 
METH _ VARARGS | METH _ KEYWORDS と 同じ な ので 注意 し て ください )。 
呼び出し 規約 フラグ は 束縛 フラグ と 組み合わせ られ ます 。 
PyCFunction 型 の メソッド で 典型 的 に 使わ れる 呼び出し 規約 です 。 
関数 は PyObject * 型 の 引数 値 を 二つ 要求 し ます 。 
最初 の 引数 は メソッド の self オブジェクト です ; モジュール 関数 の 場合 、 Py _ InitModule 4 () に 与える こと に なる 値 が 入り ます ( NULL に する と Py _ InitModule () が 使わ れ ます )。 
第 二 の パラメタ ( よく args と 呼ば れ ます ) は 、 全て の 引数 を 表現 する タプルオブジェクト です 。 
パラメタ は 通常 、 PyArg _ ParseTuple () や PyArg _ UnpackTuple で 処理 さ れ ます 。 
この フラグ を 持つ メソッド は PyCFunctionWithKeywords 型 で なけれ ば なり ませ ん 。 
PyCFunctionWithKeywords は 三つ の パラメタ : self 、 args 、 および キーワード 引数 全て から なる 辞書 、 を 要求 し ます 。 
この フラグ は 通常 METH _ VARARGS と 組み合わさ れ 、 パラメタ は PyArg _ ParseTupleAndKeywords () で 処理 さ れ ます 。 
引数 の ない メソッド は 、 METH _ NOARGS フラグ を つけ た 場合 、 必要 な 引数 が 指定 さ れ て いる か を チェック し なく なり ます 。 
こうした メソッド は PyCFunction 型 で なく て は なり ませ ん 。 
オブジェクト の メソッド に 使っ た 場合 、 第 一 の パラメタ は self に なり 、 オブジェクト インスタンス へ の 参照 を 保持 する こと に なり ます 。 
いずれ に せよ 、 第 二 の パラメタ は NULL に なり ます 。 
単一 の オブジェクト 引数 だけ を とる メソッド は 、 PyArg _ ParseTuple () を 引数 " O " に し て 呼び出す 代わり に 、 METH _ O フラグ つき で 指定 でき ます 。 
メソッド は PyCFunction 型 で 、 self パラメタ と 単一 の 引数 を 表現 する PyObject * パラメタ を 伴い ます 。 
この 呼び出し 規約 は 撤廃 さ れ まし た 。 
メソッド は PyCFunction 型 で なけれ ば なり ませ ん 。 
第 二 引数 は 、 引数 が ない 場合 に は NULL 、 単一 の 引数 の 場合 に は その 引数 オブジェクト 、 複数個 の 引数 の 場合 に は 引数 オブジェクト から なる タプル です 。 
この 呼び出し 規約 を 使う と 、 複数個 の 引数 の 場合 と 、 単一 の タプル が 唯一 引数 の 場合 を 区別 でき なく なっ て しまい ます 。 
以下 の 二つ の 定数 は 、 呼び出し 規約 を 示す もの で は なく 、 クラス の メソッド として 使う 際 の 束縛 方式 を 示す もの です 。 
モジュール に対して 定義 さ れ た 関数 で 用い て は なり ませ ん 。 
メソッド に対して は 、 最大 で 一つ しか この フラグ を セット でき ませ ん 。 
メソッド の 最初 の 引数 に は 、 型 の インスタンス で は なく 型 オブジェクト が 渡さ れ ます 。 
この フラグ は 組み込み 関数 classmethod () を 使っ て 生成 する の と 同じ クラス メソッド ( class method ) を 生成 する ため に 使わ れ ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
メソッド の 最初 の 引数 に は 、 型 の インスタンス で は なく NULL が 渡さ れ ます 。 
この フラグ は 、 staticmethod () を 使っ て 生成 する の と 同じ 静的 メソッド ( static method ) を 生成 する ため に 使わ れ ます 。 
もう 一つ の 定数 は 、 ある メソッド を 同名 の 別 の メソッド 定義 と 置き換える か どう か を 制御 し ます 。 
メソッド を 既存 の 定義 を 置き換える 形 で ロード し ます 。 
METH _ COEXIST を 指定 し なけれ ば 、 デフォルト の 設定 に したがっ て 、 定義 が 重複 し ない よう スキップ し ます 。 
スロット ラッパ は メソッド テーブル より も 前 に ロード さ れる ので 、 例えば sq _ contains スロット は ラップ し て いる メソッド __ contains __() を 生成 し 、 同名 の PyCFunction の ロード を 阻止 し ます 。 
この フラグ を 定義 する と 、 PyCFunction は ラッパ オブジェクト を 置き換える 形 で ロード さ れ 、 スロット と 連立 し ます 。 
PyCFunctions の 呼び出し は ラッパ オブジェクト の 呼び出し より も 最適 化 さ れ て いる ので 、 こうした 仕様 が 便利 に なり ます 。 
C で 実装 さ れ た 拡張 型 の 束縛 メソッド オブジェクト を 返し ます 。 
PyObject _ GenericGetAttr () 関数 を 使わ ない tp _ getattro や tp _ getattr ハンドラ を 実装 する 際 に 便利 です 。 
比較 演算 は 全て の オブジェクト で サポート さ れ て い ます 。 
比較 演算 子 は 全て 同じ 演算 優先 度 を 持っ て い ます ( ブール 演算 より 高い 演算 優先 度 です )。 比較 は 任意 の 形 で 連鎖 さ せる こと が でき ます ; 例えば 、 
は 
x y および y = z 
と 等価 で 、 違う の は y が 一 度 だけ しか 評価 さ れ ない という こと です ( どちら の 場合 でも 、 
が 偽 と なっ た 場合 に は z は 評価 さ れ ませ ん ) 。 
以下 の テーブル に 比較 演算 を まとめ ます : 
より 小さい 
以下 
より 大きい 
以上 
等しい 
等しく ない 
同一 の オブジェクト で ある 
同一 の オブジェクト で ない 
および != は 同じ 演算 子 を 別 の 書き方 に し た もの です 。 
繰り返し ます が 、 その よう な オブジェクト も 任意 の 順番 付け を さ れ て い ます が 、 それ は 一貫 し た もの です 。 
被 演算 子 が 複素数 の 場合 、 演算 子 、 = 、 および = は 例外 TypeError を 送出 し ます 。 
ある クラス の インスタンス 間 の 比較 は 、 その クラス で __ cmp __() メソッド が 定義 さ れ て い ない 限り 等しく なり ませ ん 。 
この メソッド を 使っ て オブジェクト の 比較 方法 に 影響 を 及ぼす ため の 情報 について は 
を 参照 し て ください 。 
実装 に関する 注釈 : 数値 型 を 除き 、 異なる 型 の オブジェクト は 型 の 名前 で 順番 付け さ れ ます ; 適当 な 比較 を サポート し て い ない ある 型 の オブジェクト は アドレス によって 順番 付け さ れ ます 。 同じ 優先 度 を 持つ 演算 子 として さらに 2 つ 、 シーケンス 型 で のみ " in " 
および " not in " 
が サポート さ れ て い ます ( 以下 を 参照 )。 
1 . 6 C から Python 
新しい 拡張 モジュール を 使える よう に なる まで 、 まだ 二つ の 作業 : コンパイル と 、 Python システム へ の リンク 、 が 残っ て い ます 。 
動的 読み込み ( dynamic loading ) を 使っ て いる の なら 、 作業 の 詳細 は 自分 の システム が 使っ て いる 動的 読み込み の 形式 によって 変わる かも しれ ませ ん ; 詳しく は 、 拡張 モジュール の ビルド に関する 章 ( 3 章 ) や 、 Windows における ビルド に 関係 する 追加 情報 の 章 ( 4 章 ) を 参照 し て ください 。 動的 読み込み を 使え なかっ たり 、 モジュール を 常時 Python インタプリタ の 一部 に し て おき たい 場合 に は 、 インタプリタ の ビルド 設定 を 変更 し て 再 ビルド し なけれ ば なら なく なる でしょ う 。 
Unix で は 、 幸運 な こと に この 作業 は とても 単純 です : 単に 自作 の モジュール ファイル ( 例えば spammodule . c ) を 展開 し た ソース 配布 物 の Modules / ディレクトリ に 置き 、 Modules / Setup . local に 自分 の ファイル を 説明 する 以下 の 一行 : 
を 追加 し て 、 トップ レベル の ディレクトリ で make を 実行 し て 、 インタプリタ を 再 ビルド する だけ です 。 
Modules / サブ ディレクトリ で も make を 実行 でき ます が 、 前もって ` make Makefile ' を 実行 し て Makefilew 再 ビルド し て おか なけれ ば なら り ませ ん 。 ( この 作業 は Setup ファイル を 変更 する たび に 必要 です 。 
) モジュール が 別 の ライブラリ と リンク さ れ て いる 必要 が ある 場合 、 ライブラリ も 設定 ファイル に 列挙 でき ます 。 例えば 以下 の よう に し ます : 
Python compiler パッケージ は Python の ソース コード を 分析 し たり Python バイト コード を 生成 する ため の ツール です 。 
compiler は Python の ソース コード から 抽象 的 な 構文 木 を 生成 し 、 その 構文 木 から Python バイト コード を 生成 する ライブラリ を そなえ て い ます 。 
パッケージ は 、 Python で 書か れ た Python ソース コード から バイト コード へ の 変換 プログラム です 。 
これ は 組み込み の 構文 解析 器 を つかい 、 そこ で 得 られ た 具体 的 な 構文 木 に対して 標準 的 な 
モジュール を 使用 し ます 。 
この 構文 木 から 抽象 構文 木 AST ( Abstract Syntax Tree ) が 生成 さ れ 、 その後 Python バイト コード が 得 られ ます 。 この パッケージ の 機能 は 、 Python インタプリタ に 内蔵 さ れ て いる 組み込み の コンパイラ が すべて 含ん で いる もの です 。 
これ は その 機能 と 正確 に 同じ もの に なる よう 意図 し て つくら れ て い ます 。 
なぜ 同じ こと を する コンパイラ を もう ひとつ 作る 必要 が ある の でしょ う か ? この パッケージ は いろいろ な 目的 に 使う こと が できる から です 。 
パッケージ の いろいろ な コンポーネント が どの よう に 動作 する の か を 説明 し ます 。 
その ため 説明 は リファレンス マニュアル 的 な もの と 、 チュートリアル 的 な 要素 が まざっ た もの に なっ て い ます 。 以下 の モジュール は 
パッケージ の 一部 です : 
Completer オブジェクト は 以下 の メソッド を 持っ て い ます : 
text の state 番目 の 補完 候補 を 返し ます 。 もし text が ピリオド (".") を 含ま ない 場合 、 
で 定義 さ れ て いる 名前 か 、 キーワード ( 
モジュール で 定義 さ れ て いる ) から 補完 さ れ ます 。 ピリオド を 含む 名前 の 場合 、 副作用 を 出さ ず に 名前 を 最後 まで 評価 しよ う と し ます ( 関数 を 明示 的 に 呼び出し は し ませ ん が 、 __ getattr __() を 呼ん で しまう こと は あり ます ) そして 、 dir () 関数 で マッチ する 語 を 見つけ ます 。 
7 . 2 . 4 浮動 小数点 型 オブジェクト ( floating point 
7 . 2 . 5 . 1 C 構造 体 として の 複素数 
Python の 複素数 オブジェクト は 、 C API 側 から 見る と 二つ の 別個 の 型 として 実装 さ れ て い ます : 一方 は Python プログラム に対して 公開 さ れ て いる Python の オブジェクト で 、 他方 は 実際 の 複素 数値 を 表現 する C の 構造 体 です 。 
API で は 、 これら 双方 を 扱う 関数 を 提供 し て い ます 。 
7 . 2 . 5 . 1 C 構造 体 として の 複素数 
7 . 2 . 5 . 2 Python オブジェクト として の 複素数 型 
7 . 1 if 文 
7 . 複合 文 ( compound statement ) 
複合 文 に は 、 他 の 文 ( の グループ ) が 入り ます ; 複合 文 は 、 中 に 入っ て いる 他 の 文 の 実行 の 制御 に 何らかの やり方 で 影響 を 及ぼし ます 。 
関数 と クラス 定義 も また 、 構文 法的 に は 複合 文 です 。 複合 文 は 、 一つ または それ 以上 の ` 節 ( clause )' から なり ます 。 
一つ の 節 は 、 ヘッダ と ` スイート ( suite )' から なり ます 。 
特定 の 複合 文 を 構成 する 節 の ヘッダ 部分 は 、 全て 同じ インデント レベル に なり ます 。 各々 の 節 ヘッダ 行 は 一意 に 識別 さ れる キーワード から 始まり 、 コロン で 終わり ます 。 
スイート は 、 ヘッダ の コロン の 後ろ に セミコロン で 区切ら れ た 一つ または それ 以上 の 単純 文 を 並べる か 、 ヘッダ 行 後 の インデント さ れ た 文 の 集まり です 。 
後者 の 形式 の スイート に 限り 、 ネスト さ れ た 複合 文 を 入れる こと が でき ます ; 以下 の 文 は 、 else 節 が どの if 節 に 属する か が はっきり し ない という 理由 から 不正 に なり ます : 
また 、 この コンテキスト 中 で は 、 セミコロン は コロン より も 強い 結合 を 表す こと に も 注意 し て ください 。 従って 、 以下 の 例 で は 、 print は 全て 実行 さ れる か 、 さ れ ない か の どちら か です : 
まとめる と 、 以下 の よう に なり ます : 
文 は 常に NEWLINE 
か 、 その後 に DEDENT が 続い た もの で 終了 する こと に 注意 し て ください 。 
また 、 オプション の 継続 節 は 常に ある キーワード から 始まり 、 この キーワード から 複合 文 を 開始 する こと は でき ない ため 、 曖昧 さ は 存在 し ない こと に も 注意 し て ください ( Python で は 、 ` ぶら下がり ( dangling ) else ' 問題 を 、 ネスト さ れ た if 文 は インデント さ せる こと 解決 し て い ます )。 
以下 の 節 における 文法 規則 の 記述 方式 は 、 明確 さ の ため に 、 各 節 を 別々 の 行 に 書く よう に し て い ます 。 
Distutils の 使い方 は 、 モジュール 開発 者 と サード パーティ 製 の モジュール を インストール する ユーザ / 管理 者 の どちら にとって も きわめて 単純 です 。 
開発 者 側 の やる べき こと は ( もちろん 、 しっかり し た 実装 で 、 詳しく 文書 化 さ れ 、 よく テスト さ れ た コード を 書く こと は 別 として !) 以下 の 項目 に なり ます : 
setup スクリプト ( setup . py という 名前 に する の が ならわし ) を 書く 
( 必要 が あれ ば ) setup 設定 ファイル を 書く 
ソース コード 配布 物 を 作成 する 
( 必要 が あれ ば ) 一つ または それ 以上 の ビルド 済み ( バイナリ ) 形式 の 配布 物 を 作成 する 
これら の 作業 について は 、 いずれ も この ドキュメント で 扱っ て い ます 。 全て の モジュール 開発 者 が 複数 の 実行 プラットフォーム を 利用 できる わけ で は ない ので 、 全て の プラットフォーム 向け に ビルド 済み の 配布 物 を 提供 し て もらえる と 期待 する わけ に は いき ませ ん 。 
ですから 、 仲介 を 行う 人々 、 いわゆる パッケージ 作成 者 ( packager ) が この 問題 を 解決 す べく 立ち上がっ て くれる こと が 望ましい でしょ う 。 
パッケージ 作成 者 は モジュール 開発 者 が リリース し た ソース コード 配布 物 を 、 一つ または それ 以上 の プラットフォーム 上 で ビルド し て 、 得 られ た ビルド 済み 配布 物 を リリース する こと に なり ます 。 
したがって 、 ほとんど の 一般 的 な プラットフォーム における ユーザ は 、 setup スクリプト 一つ 実行 せ ず 、 コード を 一 行 たり と も コンパイル し なく て も 、 使っ て いる プラットフォーム 向け の きわめて 普通 の 方法 で ほとんど の 一般 的 な Python モジュール 配布 物 を インストール できる でしょ う 。 
7 . 1 基本 オブジェクト ( fundamental object ) 
7 . 具象 オブジェクト ( concrete object ) レイヤ 
この 章 で は は 、 特定 の Python オブジェクト 型 固有 の 関数 について 述べ て い ます 。 
これら の 関数 に 間違っ た 方 の オブジェクト を 渡す の は 良い 考え で あ あり ませ ん ; Python プログラム から 何らかの オブジェクト を 受け取っ た とき 、 その オブジェクト が 正しい 型 に なっ て いる か 確信 を もて ない の なら 、 まず 型 チェック を 行わ なけれ ば なり ませ ん ; 例えば 、 ある オブジェクト が 辞書 型 か 調べる に は 、 PyDict _ Check () を 使い ます 。 
この 章 は Python の オブジェクト 型 における `` 家計 図 '' に従って 構成 さ れ て い ます 。 
警告 : この 章 で 述べ て いる 関数 は 、 渡さ れ た オブジェクト の 型 を 注意深く チェック し は する ものの 、 多く の 関数 は 渡さ れ た オブジェクト が 有効 な NULL な の か 有効 な オブジェクト な の か を チェック し ませ ん 。 
これら の 関数 に NULL を 渡さ せ て しまう と 、 関数 は メモリ アクセス 違反 を 起こし て 、 インタプリタ を 即座 に 終了 さ せ て しまう はず です 。 
7 . 2 . 5 . 1 C 構造 体 として の 複素数 
7 . 3 . 2 . 2 メソッド および スロット 関数 ( slot function ) 
条件 変数 ( condition variable ) は 常に ある 種 の ロック に 関連付け られ て い ます ; 条件 変数 に 関連付ける ロック は 明示 的 に 引き渡し たり 、 デフォルト で 生成 さ せ たり でき ます 。 
これら 三つ の メソッド を 呼び出せる の は 、 呼び出し 手 の スレッド が ロック を 獲得 し て いる 時 だけ です 。 wait () メソッド は 現在 の スレッド の ロック を 解放 し 、 他 の スレッド が 同じ 条件 変数 に対して notify () または notifyAll () を 呼び出し て 現在 の スレッド を 起こす まで ブロック し ます 。 
一度 起こさ れる と 、 再度 ロック を 獲得 し て 処理 を 戻し ます 。 
wait () に は タイム アウト も 設定 でき ます 。 notify () メソッド は 条件 変数 待ち の スレッド を 1 つ 起こし ます 。 
例えば 、 以下 の コード は 無 制限 の バッファ 容量 の とき の 一般 的 な 生産 者 - 消費 者 問題 です : 
notify () と notifyAll () の どちら を 使う か は 、 その 状態 の 変化 に 興味 を 持っ て いる 待ち スレッド が 一つ だけ な の か 、 あるいは 複数 な の か で 考え ます 。 
例えば 、 典型 的 な 生産 者 - 消費 者 問題 で は 、 バッファ に 1 つ の 要素 を 加え た 場合 に は 消費 者 スレッド を 1 つ しか 起こさ なく て かまい ませ ん 。 
クラス Condition 
lock を 指定 し て 、 None の 値 に する 場合 、 Lock または RLock オブジェクト で なけれ ば なり ませ ん 。 
この 場合 、 lock は 根底 に ある ロック オブジェクト として 使わ れ ます 。 それ 以外 の 場合 に は 新しい RLock オブジェクト を 生成 し て 使い ます 。 
この メソッド を 呼び出し て よい の は 、 呼び出し 手 の スレッド が ロック を 獲得 し て いる とき だけ です 。 
この メソッド は 根底 に ある ロック を 解放 し 、 他 の スレッド が 同じ 条件 変数 に対して notify () または notifyAll () を 呼び出し て 現在 の スレッド を 起こす か 、 オプション の タイム アウト が 発生 する まで ブロック し ます 。 
その 代わり 、 ロック が 再帰 的 に 複数 回 獲得 さ れ て い て も 確実 に アン ロック を 行える RLock クラス の 内部 インタフェース を 使い ます 。 その後 ロック を 再 獲得 する 時 に 、 もう 一つ の 内部 インタフェース を 使っ て ロック の 再帰 レベル を 復帰 し ます 。 
何らかの 待機 中 スレッド が ある 場合 、 その スレッド の 一つ を 起こし ます 。 
待機 中 の スレッド が なけれ ば 何 も し ませ ん 。 現在 の 実装 で は 、 待機 中 の メソッド を ただ 一つ だけ 起こし ます 。 
と は いえ 、 この 挙動 に 依存 する の は 安全 で は あり ませ ん 。 
将来 、 実装 の 最適 化 によって 、 複数 の スレッド を 起こす よう に なる かも しれ ない から です 。 注意 : 起こさ れ た スレッド は 実際 に ロック を 再 獲得 できる まで wait () 呼出し から 戻り ませ ん 。 
notify () は ロック を 解放 し ない ので 、 notify () 呼び出し 手 は 明示 的 に ロック を 解放 せ ね ば なり ませ ん 。 
この 条件 を 待っ て いる すべて の スレッド を 起こし ます 。 
この メソッド は notify () の よう に 動作 し ます が 、 1 つ で は なく すべて の 待ち スレッド を 起こし ます 。 
6 拡張 モジュール の ビルド : 小 技 と 豆 知識 
上 で 述べ た よう に 、 Distutils 設定 ファイル を 使え ば 、 任意 の Distutils オプション に対して 個人 的 な 設定 や サイト 全体 の 設定 を 記録 でき ます 。 
すなわち 、 任意 の コマンド の 任意 の オプション を 二つ か 三つ ( プラットフォーム によって 異なり ます ) の 設定 ファイル に 保存 でき 、 コマンド ライン を 解釈 する 前 に オプション を 問い合わせ さ せる よう に でき ます 。 
つまり 、 設定 ファイル は デフォルト の 値 を 上書き し 、 さらに コマンド ライン 上 で 与え た 値 が 設定 ファイル の 内容 を 上書き する わけ です 。 
さらに 、 複数 の 設定 ファイル が 適用 さ れる と 、 `` 先 に '' 適用 さ れ た ファイル に 指定 さ れ て い た 値 は `` 後 に '' 適用 さ れ た ファイル 内 の 値 で 上書き さ れ ます 。 
設定 ファイル の 名前 と 場所 は 、 非常 に わずか です が プラットフォーム 間 で 異なり ます 。 
Unix で は 、 三 種類 の 設定 ファイル は 以下 の よう に なり ます ( 処理 さ れる 順 に 並ん で い ます ): 
設定 ファイル の タイプ 
場所 と ファイル 名 
Windows で は 設定 ファイル は 以下 の よう に なり ます : 
Mac OS で は 以下 の よう に なり ます : 
厳密 に 言え ば 、 システム 全体 向け の 設定 ファイル は 、 Distutils が インストール さ れ て いる ディレクトリ に なり ます ; Unix の Python 1 . 6 以降 で は 、 表 の 通り の 場所 に なり ます 。 
Python 1 . 5 . 2 で は 、 Distutils は 通常 
prefix / lib / python 1 . 5 / site - packages / distutils に インストール さ れる ため 、 Python 1 . 5 . 2 で は 設定 ファイル を そこ に 置か なけれ ば なり ませ ん 。 
Unix で は 、 環境 変数 HOME が 定義 さ れ て い ない 場合 、 標準 モジュール 
の getpwuid () 関数 を 使っ て ユーザ の ホーム ディレクトリ を 決定 し ます 。 
現在 の ディレクトリ ( 通常 は setup スクリプト が ある 場所 ) です 。 
( 注記 ( 1 ) も 参照 し て ください ) Python 1 . 6 および それ 以降 の バージョン で は 、 Python の デフォルト の `` インストールプレフィクス '' は C : Python な ので 、 システム 設定 ファイル は 通常 C : P y thonLibdistutilsdistutils . cfg に なり ます 。 
Python 1 . 5 . 2 で は デフォルト の プレフィクス は C : ProgramFilesPython で あり 、 Distutils は 標準 ライブラリ の 一部 で は あり ませ ん -- 従っ て 、 システム 設定 ファイル は 、 Windows 用 の 標準 の Python 1 . 5 . 2 で は C : P r o g r a m F i l e sPythondistutilsdistutils . cfg に なり ます 。 
Windows で は 、 環境 変数 HOME が 設定 さ れ て い ない 場合 、 個人 用 の 設定 ファイル は どこ に も なく 、 使わ れる こと も あり ませ ん 。 
( 言い換えれ ば 、 Windows で の Distutils は ホーム ディレクトリ が どこ に ある か 一切 推測 しよ う と し ない という こと です 。 ) 
( 注釈 ( 1 ) と ( 4 ) も 参照 し て ください ) デフォルト の インストールプレフィクス は 単に Python : な ので 、 Python 1 . 6 以降 で は 、 通常 は Python : Lib : distutils : distutils . cfg に なり ます 。 
Distutils 設定 ファイル は 、 全て 同じ 構文 を し て い ます 。 
設定 ファイル は セクション で グループ 分け さ れ て い ます 。 
各 Distutils コマンド ごと に セクション が あり 、 それ に 加え て 全て の コマンド に 影響 する グローバル オプション を 設定 する ため の global セクション が あり ます 。 
各 セクション に は option = value の 形 で 、 一行 あたり 一つ の オプション を 指定 し ます 。 例えば 、 以下 は 全て の コマンド に対して デフォルト で メッセージ を 出さ ない よう 強制 する ため の 完全 な 設定 ファイル です : 
この 内容 の ファイル が システム 全 体用 の 設定 ファイル として インストール さ れ て いれ ば 、 その システム の 全て の ユーザ による 全て の Python モジュール 配布 物 に対する 処理 に 影響 し ます 。 
ファイル が ( 個人 用 の 設定 を サポート し て いる システム で ) 個人 用 の 設定 ファイル として インストール さ れ て いれ ば 、 その ユーザ が 処理 する モジュール 配布 物 に のみ 影響 し ます 。 この 内容 を 特定 の モジュール 配布 物 の setup . cfg として 使え ば 、 その 配布 物 だけ に 影響 し ます 。 
以下 の よう に し て 、 デフォルト の `` ビルドベース '' ディレクトリ を オーバライド し たり 、 build * コマンド が 常に 強制 的 に リビルド を 行う よう に も でき ます : 
この 設定 は 、 コマンド ライン 引数 の 
python setup . py build -- build - base = blib -- force に 対応 し ます 。 
ただし 、 後者 で は コマンド ライン 上 で build コマンド を 含め て 、 その コマンド を 実行 する よう 意味 し て いる ところ が 違い ます 。 
特定 の コマンド に対する オプション を 設定 ファイル に 含める と 、 この よう な 関連 付け の 必要 は なくなり ます ; ある コマンド が 実行 さ れる と 、 その コマンド に対する オプション が 適用 さ れ ます 。 
( また 、 設定 ファイル 内 から オプション を 取得 する よう な 他 の コマンド を 実行 し た 場合 、 それら の コマンド も また 設定 ファイル 内 の 対応 する オプション の 値 を 使い ます 。 ) ある コマンド に対する オプション の 完全 な リスト は 、 例えば 以下 の よう に 、 -- help を 使っ て 調べ ます : 
グローバル オプション の 完全 な リスト を 得る に は 、 コマンド を 指定 せ ず に -- help オプション を 使い ます : 
`` Python モジュール の 配布 '' マニュアル の 、 `` リファレンス マニュアル '' の 節 も 参照 し て ください 。 
6 拡張 モジュール の ビルド : 小 技 と 豆 知識 
1 . 2 . 5 設定 を 行なう MacPython 配布 物 に は 、 EditPythonPrefs という アプレット が つい て き ます 。 
この アプレット を 使う と 、 MacPython の 環境 を カスタマイズ し て 、 自分 の 作業 方法 に あわせる 手助け を し て くれ ます 。 
InteractiveConsole クラス は InteractiveInterpreter の サブ クラス です 。 以下 の 追加 メソッド だけ で なく 、 インタプリタ オブジェクト の すべて の メソッド も 提供 し ます 。 
対話 的 な Python コンソール を そっくり に エミュレート し ます 。 
その 行 は バッファ へ 追加 さ れ 、 ソース として 連結 さ れ た 内容 が 渡さ れ インタプリタ の runsource () メソッド が 呼び出さ れ ます 。 
コマンド が 実行 さ れ た か 、 有効 で ある こと を これ が 示し て いる 場合 は 、 バッファ は リセット さ れ ます 。 そう で なけれ ば 、 コマンド が 不完全 で 、 その 行 が 付加 さ れ た 後 の まま バッファ は 残さ れ ます 。 
さらに 入力 が 必要 なら ば 、 戻り 値 は True です 。 その 行 が ある 方法 で 処理 さ れ た なら ば 、 False です ( これ は runsource () と 同じ です )。 
入力 バッファ から 処理 さ れ て い ない ソース テキスト を 取り除き ます 。 
プロンプト を 書き込み 、 一行 を 読み込み ます 。 
返る 行 は 末尾 に 改行 を 含み ませ ん 。 
ユーザ が EOF キー シーケンス を 入力 し た とき は 、 EOFError を 発生 さ せ ます 。 
基本 実装 で は 、 組み込み 関数 raw _ input () を 使い ます 。 サブ クラス は これ を 異なる 実装 と 置き換える かも しれ ませ ん 。 
ContentHandler は アプリケーション 側 で サブ クラス 化 し て 利用 する こと が 前提 に なっ て い ます 。 
パーサ は 入力 ドキュメント の イベント により 、 それぞれ に 対応 する 以下 の メソッド を 呼び出し ます 。 
アプリケーション に ドキュメント ・ イベント の 発生 位置 を 通知 する ため に パーサ から 呼び出さ れ ます 。 
典型 的 な 利用 方法 として は 、 アプリケーション 側 で この 情報 を 使い 独自 の エラー を 発生 さ せる こと ( 文字 コンテンツ が アプリケーション 側 で 決め た 規則 に 沿っ て い ない 場合 等 ) が あげ られ ます 。 
しかし ロケータ が 返す 情報 は 検索 エンジン など で 利用 する もの として は おそらく 不充分 でしょ う 。 ロケータ が 正しい 情報 を 返す の は 、 インターフェース から イベント の 呼出し が 実行 さ れ て いる 間 だけ です 。 
それ 以外 の とき は 使用 す べき で あり ませ ん 。 
ドキュメント の 開始 通知 を 受け取り ます 。 SAX パーサ は この インターフェース や DTDHandler の どの メソッド ( setDocumentLocator () を 除く ) より も 先 に この メソッド を 一 度 だけ 呼び出し ます 。 
ドキュメント の 終了 通知 を 受け取り ます 。 SAX パーサ は この メソッド を 一 度 だけ 、 パース 過程 の 最後 に 呼び出し ます 。 
パーサ は ( 回復 不能 な エラー で ) パース 処理 を 中断 する か 、 あるいは 入力 の 最後 に 到達 する まで この メソッド を 呼び出し ませ ん 。 
プリフィックス と URI の 名前 空間 の 関連 付け を 終了 し ます 。 詳しく は startPrefixMapping () を 参照 し て ください 。 
この イベント は 常に 対応 する endElement () の 後 で 発生 し ます が 、 複数 の endPrefixMapping () イベント の 順序 は 特に 保証 さ れ ませ ん 。 
非 名前 空間 モード で 要素 の 開始 を 通知 し ます 。 name パラーメータ に は 要素 型 の raw XML 1 . 0 名 を 文字 列 として 、 attrs パラメータ に は 要素 の 属性 を 保持 する 
Attributes インターフェース オブジェクト を それぞれ 指定 し ます 。 
attrs として 渡さ れ た オブジェクト は パーサ で 再 利用 する こと も 可能 です が 、 属性 の コピー を 保持 する ため に これ を 参照 し 続ける の は 確実 な 方法 で は あり ませ ん 。 
属性 の コピー を 保持 し たい とき は attrs オブジェクト の copy () メソッド を 用い て ください 。 
非 名前 空間 モード で 要素 の 終了 を 通知 し ます 。 name パラメータ に は startElement () イベント 同様 の 要素 型名 を 指定 し ます 。 
名前 空間 モード で 要素 の 開始 を 通知 し ます 。 name パラーメータ に は 要素 型 を ( uri , localname ) の タプル として 、 qname パラメータ に は ソース ・ ドキュメント で 用い られ て いる raw XML 1 . 0 名 、 attrs に は 要素 の 属性 を 保持 する 
AttributesNS インターフェース の インスタンス を それぞれ 指定 し ます 。 
要素 に 関連付け られ た 名前 空間 が ない とき は 、 name コンポーネント の uri が None に なり ます 。 
attrs として 渡さ れ た オブジェクト は パーサ で 再 利用 する こと も 可能 です が 、 属性 の コピー を 保持 する ため に これ を 参照 し 続ける の は 確実 な 方法 で は あり ませ ん 。 
属性 の コピー を 保持 し たい とき は attrs オブジェクト の copy () メソッド を 用い て ください 。 feature _ namespace _ prefixes 機能 が 有効 に なっ て い なけれ ば 、 パーサ で qname を None に セット する こと も 可能 です 。 
文字 データ の 通知 を 受け取り ます 。 パーサ は 文字 データ の チャンク ごと に この メソッド を 呼び出し て 通知 し ます 。 
SAX パーサ は 一連 の 文字 データ を 単一 の チャンク として 返す 場合 と 複数 の チャンク に 分け て 返す 場合 が あり ます が 、 ロケータ の 情報 が 正しく 保た れる よう に 、 一つ の イベント の 文字 データ は 常に 同じ 外部 エンティティ の もの で なけれ ば なり ませ ん 。 
content は ユニ コード 文字 列 、 バイト 文字 列 の どちら でも かまい ませ ん が 、 expat リーダ ・ モジュール は 常に ユニ コード 文字 列 を 生成 する よう に なっ て い ます 。 
注意 : Python XML SIG が 提供 し て い た 初期 SAX 1 で は 、 この メソッド に もっと JAVA 風 の インターフェース が 用い られ て い ます 。 
しかし Python で 採用 さ れ て いる 大半 の パーサ で は 古い インターフェース を 有効 に 使う こと が でき ない ため 、 より シンプル な もの に 変更 さ れ まし た 。 
古い コード を 新しい インターフェース に 変更 する に は 、 古い offset と length パラメータ で スライス せ ず に 、 content を 指定 する よう に し て ください 。 
スキップ し た エンティティ の 通知 を 受け取り ます 。 
パーサ は エンティティ を スキップ する たび に この メソッド を 呼び出し ます 。 妥当 性 検査 を し ない プロセッサ は ( 外部 DTD サブ セット で 宣言 さ れ て いる など の 理由 で ) 宣言 が 見当たら ない エンティティ を スキップ し ます 。 
すべて の プロセッサ は feature _ external _ ges および feature _ external _ pes 属性 の 値 によって は 外部 エンティティ を スキップ する こと が あり ます 。 
Python / C API リファレンス マニュアル 
continue 文 は for ループ や while ループ 内 の ネスト で 構文 法的 に のみ 現れ ます が 、 ループ 内 の 関数 定義 や クラス 定義 、 try 文 の 中 に は 現れ ませ ん 。 
continue 文 は 、 文 を 囲う 最も 内側 の ループ の 次 の 周期 に 処理 を 継続 し ます 。 
... 文 の 中 に は 現れ ませ ん 。 
except 節 や else 節 中 に 置く こと は でき ます 。 
try 文 に 置け ない という 制限 は 、 実装 側 の 不精 による もの で 、 そのうち 改善 さ れる こと でしょ う 。 
コントロールウィンドウオブジェクト に は Window オブジェクト の メソッド の 他 に 次 の メソッド が あり ます 。 
コントロール control の パート コード pcode が ユーザー に ヒット さ れ た 場合 に 呼ば れ ます 。 
トラッキング など は 任せ て おい て かまい ませ ん 。 
以下 の 算術 演算 子 の 記述 で 、 「 数値 引数 は 共通 の 型 に 変換 さ れ ます 」 と 書か れ て いる 場合 、 引数 は 3 章 の 末尾 に 記載 さ れ て いる 型 強制 規則 に 基づい て 型 強制 さ れ ます 。 
引数 が いずれ も 標準 の 数値 型 で ある 場合 、 以下 の 型 強制 が 適用 さ れ ます : 
片方 の 引数 が 複素数 型 で あれ ば 、 他方 は 複素数 型 に 変換 さ れ ます ; 
それ 以外 の 場合 で 、 片方 の 引数 が 浮動 小数点 数 で あれ ば 、 他方 は 浮動 小数点 型 に 変換 さ れ ます ; 
それ 以外 の 場合 で 、 片方 の 引数 が 長 整数 型 で あれ ば 、 他方 は 長 整数 型 に 変換 さ れ ます ; 
それ 以外 の 場合 で 、 両方 の 引数 が 通常 の 整数 型 で あれ ば 、 変換 の 必要 は あり ませ ん 。 
特定 の 演算 子 ( 文字 列 を 左 引数 と する `%' 演算 子 など ) で は 、 さらに 別 の 規則 が 適用 さ れ ます 。 
拡張 を おこなう こと で 、 個々 の 演算 子 に対する 型 強制 を 定義 でき ます 。 
次 の 例 は Cookie の 使い方 を 示し た もの です 。 
Cookie インスタンス は 、 さまざま な クッキー の 標準 で 規定 さ れ て いる 標準 的 な クッキー 属性 と おおまか に 対応 する Python 属性 を もっ て い ます 。 
しかし デフォルト 値 を 決める 複雑 な やり方 が 存在 し て おり 、 また max - age および expires クッキー 属性 は 同じ 値 を もつ こと に なっ て いる ので 、 この 対応 は 1 対 1 で は あり ませ ん 。 CookiePolicy メソッド 内 で の ごく わずか な 例外 を 除け ば 、 これら の 属性 に 代入 する 必要 は ない はず です 。 
この クラス は 内部 の 一貫 性 を 保つ よう に は し て い ない ため 、 代入 する の は 自分 の やっ て いる こと を 理解 し て いる 場合 のみ に し て ください 。 
整数 または None 。 
Netscape クッキー は バージョン 0 で あり 、 RFC 2965 および RFC 2109 クッキー は バージョン 1 です 。 
クッキー の 名前 ( 文字 列 )。 
クッキー の 値 ( 文字 列 )、 あるいは None 。 
ポート あるいは ポート の 集合 を あらわす 文字 列 ( 例 : ' 80 ' または ' 80 , 8080 ')、 あるいは None 。 
クッキー の パス 名 ( 文字 列 、 例 :'/ acme / rocket _ launchers ')。 
その クッキー を 返せる の が 安全 な 接続 のみ なら ば 真 を 返し ます 。 
クッキー の 期限 が 切れる 日時 を あわら す 整数 ( エポック から 経過 し た 秒 数 )、 あるいは None 。 
is _ expired () も 参照 し て ください 。 
これ が セッション クッキー で あれ ば 真 を 返し ます 。 
この クッキー の 働き を 説明 する 、 サーバ から の コメント 文字 列 、 あるいは None 。 
この クッキー の 働き を 説明 する 、 サーバ から の コメント の リンク URL 、 あるいは None 。 
サーバ が ポート 、 あるいは ポート の 集合 を ( Set - Cookie : / Set - Cookie 2 : ヘッダ 内 で ) 明示 的 に 指定 し て いれ ば 真 を 返し ます 。 
サーバ が ドメイン を 明示 的 に 指定 し て いれ ば 真 を 返し ます 。 
サーバ が 明示 的 に 指定 し た ドメイン が 、 ドット ('.') で 始まっ て いれ ば 真 を 返し ます 。 
クッキー は 、 オプション として 標準 的 で ない クッキー 属性 を 持つ こと も でき ます 。 
これら は 以下 の メソッド で アクセス でき ます : 
その クッキー が 指定 さ れ た 名前 の クッキー 属性 を もっ て いる 場合 に は 真 を 返し ます 。 
クッキー が 指定 さ れ た 名前 の クッキー 属性 を もっ て いれ ば 、 その 値 を 返し ます 。 
そう で ない 場合 は default を 返し ます 。 set _ nonstandard _ attr 
指定 さ れ た 名前 の クッキー 属性 を 設定 し ます 。 
Cookie クラス は 以下 の メソッド も 定義 し て い ます : 
サーバ が 指定 し た 、 クッキー の 期限 が 切れる べき 時 が 過ぎ て いれ ば 真 を 返し ます 。 
now が 指定 さ れ て いる とき は ( エポック から 経過 し た 秒 数 です )、 その クッキー が 指定 さ れ た 時間 において 期限切れ に なっ て いる か どう か を 判定 し ます 。 
文字 列 表現 を 値 に デコード し て 返し ます 。 
戻り 値 の 型 は どの よう な もの で も 許さ れ ます 。 
この メソッド は BaseCookie において 何 も 実行 せ ず 、 オーバーライド さ れる ため に だけ 存在 し ます 。 
エン コード し た 値 を 返し ます 。 
ブラウザ が JavaScript を サポート し て いる 場合 、 HTTP ヘッダ を 送信 し た 場合 と 同様 に 動作 する 埋め込み 可能 な JavaScript snippet を 返し ます 。 attrs の 意味 は output () と 同じ です 。 
rawdata が 文字 列 で あれ ば 、 HTTP _ COOKIE として 処理 し 、 その 値 を Morsel として 追加 し ます 。 
辞書 の 場合 は 次 と 同様 の 処理 を おこない ます 。 
11 . 20 . 2 FileCookieJar の サブ クラス と web 
CookiePolicy インター フェイス を 実装 する オブジェクト は 以下 の よう な メソッド を 持っ て い ます : 
クッキー が サーバ から 受け入れ られる べき か どう か を 表わす boolean 値 を 返し ます 。 
cookie は cookielib . Cookie インスタンス です 。 request は CookieJar . extract _ cookies () の 説明 で 定義 さ れ て いる インター フェイス を 実装 する オブジェクト です 。 
クッキー が サーバ に 返さ れる べき か どう か を 表わす boolean 値 を 返し ます 。 
cookie は cookielib . Cookie インスタンス です 。 request は CookieJar . add _ cookie _ header () の 説明 で 定義 さ れ て いる インター フェイス を 実装 する オブジェクト です 。 
与え られ た クッキー の ドメイン に対して 、 そこ に クッキー を 返す べき で ない 場合 に は false を 返し ます 。 この メソッド は 高速 化 の ため の もの です 。 
これ により 、 すべて の クッキー を ある 特定 の ドメイン に対して チェック する ( これ に は 多数 の ファイル 読み こみ を 伴 なう 場合 が あり ます ) 必要 が なくなり ます 。 
domain _ return _ ok () および path _ return _ ok () の 両方 から true が 返さ れ た 場合 、 すべて の 決定 は return _ ok () に 委ね られ ます 。 もし 、 この クッキー ドメイン に対して domain _ return _ ok () が true を 返す と 、 つぎ に その クッキー の パス 名 に対して path _ return _ ok () が 呼ば れ ます 。 
そう で ない 場合 、 その クッキー ドメイン に対する path _ return _ ok () および return _ ok () は 決して 呼ば れる こと は あり ませ ん 。 
path _ return _ ok () が true を 返す と 、 return _ ok () が その Cookie オブジェクト 自身 の 全 チェック の ため に 呼ば れ ます 。 
そう で ない 場合 、 その クッキー パス 名 に対する return _ ok () は 決して 呼ば れる こと は あり ませ ん 。 注意 : domain _ return _ ok () は request ドメイン だけ で は なく 、 すべて の cookie ドメイン に対して 呼ば れ ます 。 
たとえば request ドメイン が " www . example . com " だっ た 場合 、 この 関数 は ". example . com " および " www . example . com " の 両方 に対して 呼ば れる こと が あり ます 。 
同じ こと は path _ return _ ok () に も いえ ます 。 request 引数 は return _ ok () で 説明 さ れ て いる とおり です 。 
与え られ た クッキー の パス 名 に対して 、 そこ に クッキー を 返す べき で ない 場合 に は false を 返し ます 。 
domain _ return _ ok () の 説明 を 参照 し て ください 。 上 の メソッド の 実装 に くわえ て 、 CookiePolicy インター フェイス の 実装 で は 以下 の 属性 を 設定 する 必要 が あり ます 。 
これ は どの プロトコル が どの よう に 使わ れる べき か を 示す もの で 、 これら の 属性 に は すべて 代入 する こと が 許さ れ て い ます 。 
Netscape プロトコル を 実装 し て いる こと を 示し ます 。 
RFC 2965 プロトコル を 実装 し て いる こと を 示し ます 。 
Cookie 2 : ヘッダ を リクエスト に 含め ない よう に し ます ( この ヘッダ が 存在 する 場合 、 私 たち は RFC 2965 クッキー を 理解 する という こと を サーバ に 示す こと に なり ます )。 
もっとも 有用 な 方法 は 、 DefaultCookiePolicy を サブ クラス 化 し た CookiePolicy クラス を 定義 し て 、 いくつ か ( あるいは すべて ) の メソッド を オーバーライド する こと でしょ う 。 
CookiePolicy 自体 は どの よう な クッキー も 受け入れ て 設定 を 許可 する 「 ポリシー 無し 」 ポリシー として 使う こと も でき ます ( これ が 役に立つ こと は あまり あり ませ ん が )。 
はじめ に 、 もっとも 一般 的 な cookielib の 使用 例 を あげ ます : 
以下 の 例 で は 、 URL を 開く 際 に Netscape や Mozilla または Lynx の クッキー を 使う 方法 を 示し て い ます ( クッキー ファイル の 位置 は Unix / Netscape の 慣例 に したがう もの と 仮定 し て い ます ): 
つぎ の 例 は DefaultCookiePolicy の 使用 例 です 。 RFC 2965 クッキー を オン に し 、 Netscape クッキー を 設定 し たり 返し たり する ドメイン に対して より 厳密 な 規則 を 適用 し ます 。 
そして いくつ か の ドメイン から クッキー を 設定 あるいは 返還 する の を ブロック し て い ます : import urllib 2 from cookielib import CookieJar , DefaultCookiePolicypolicy = DefaultCookiePolicy ( rfc 2965 = True , strict _ ns _ domain = Policy . DomainStrict , blocked _ domains =[" ads . net ", ". ads . net "]) cj = CookieJar ( policy ) opener = urllib 2 . build _ opener ( urllib 2 . HTTPCookieProcessor ( cj )) r = opener . open (" http :// example . com /") 
2 . 超 高 レベル レイヤ 
この 節 の マクロ は Python オブジェクト の 参照 カウント を 管理 する ため に 使わ れ ます 。 
オブジェクト o に対する 参照 カウント を 一つ 増やし ます 。 
オブジェクト が NULL で あっ て は いけ ませ ん 。 それ が NULL で は ない と 確信 が 持て ない なら ば 、 Py _ XINCREF () を 使っ て ください 。 
オブジェクト が NULL で あっ て も よく 、 その 場合 マクロ は 何 の 影響 も 与え ませ ん 。 
オブジェクト o に対する 参照 カウント を 一つ 減らし ます 。 
オブジェクト が NULL で あっ て は いけ ませ ん 。 それ が NULL で は ない と 確信 が 持て ない なら ば 、 Py _ XDECREF () を 使っ て ください 。 
参照 カウント が ゼロ に なっ たら 、 オブジェクト の 型 の メモリ 解放 関数 ( NULL で あっ て は なら ない ) が 呼ば れ ます 。 
警告 :( 例えば __ del __() メソッド を もつ クラス インスタンス が メモリ 解放 さ れ た とき に ) メモリ 解放 関数 は 任意 の Python コード を 呼び出す こと が でき ます 。 
この よう な コード で は 例外 は 伝播 し ませ ん が 、 実行 さ れ た コード は すべて の Python グローバル 変数 に 自由 に アクセス でき ます 。 
これ が 意味 する の は 、 Py _ DECREF () が 呼び出さ れる より 前 で は 、 グローバル 変数 から 到達 可能 な どんな オブジェクト も 一貫 し た 状態 に ある べき で ある という こと です 。 
例えば 、 リスト から オブジェクト を 削除 する コード は 削除 する オブジェクト へ の 参照 を 一時 変数 に コピー し 、 リスト データ 構造 を 更新 し 、 それから 一時 変数 に対して Py _ DECREF () を 呼び出す べき です 。 
オブジェクト o へ の 参照 カウント を 一つ 減らし ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
以下 の 関数 : Py _ IncRef ( PyObject * o ), Py _ DecRef ( PyObject * o ). は , 実行 時 の 動的 な Python 埋め 込み で 使わ れる 関数 です . これら の 関数 は それぞれ Py _ XINCREF () および Py _ XDECREF () を エクスポート し た だけ です . 以下 の 関数 や マクロ : _ Py _ Dealloc (), _ Py _ ForgetReference (),_ Py _ NewReference () は , インタプリタ の コア の 内部 において のみ 使用 する ため の もの です 。 また 、 グローバル 変数 _ Py _ RefTotal も 同様 です 。 
1 . 12 拡張 モジュール に C API 
C ++ で も 拡張 モジュール は 作成 でき ます 。 
ただし いくつ か 制限 が あり ます 。 
メイン プログラム ( Python インタプリタ ) は C コンパイラ で コンパイル さ れ リンク さ れ て いる ので 、 グローバル 変数 や 静的 オブジェクト を コンス トラクタ で 作成 でき ませ ん 。 
メイン プログラム が C ++ コンパイラ で リンク さ れ て いる なら これ は 問題 で は あり ませ ん 。 
Python インタプリタ から 呼び出さ れる 関数 ( 特に モジュール 初期 化 関数 ) は 、 extern " C " を 使っ て 宣言 し なけれ ば なり ませ ん 。 また 、 Python ヘッダ ファイル を extern " C " {...} に 入れる 必要 は あり ませ ん -- シンボル "__ cplusplus " ( 最近 の C ++ コンパイラ は 全て この シンボル を 定義 し て い ます ) が 定義 さ れ て いる とき に extern " C " {...} が 行わ れる よう に 、 ヘッダ ファイル 内 に すでに 書か れ て いる から です 。 
1 ダム 形式 の ビルド 済み 配布 物 を 作成 する 
1 ダム 形式 の ビルド 済み 配布 物 を 作成 する 
RPM 形式 は 、 Red Hat , SuSE , Mandrake といった 、 多く の 一般 的 な Linux ディストリビューション で 使わ れ て い ます 。 
あるいは 、 bdist コマンド を -- format オプション 付き で 使い ます : 
前者 の 場合 、 RPM 特有 の オプション を 指定 でき ます ; 後者 の 場合 、 一 度 の 実行 で 複数 の 形式 を 指定 でき ます 。 
両方 同時に やり たけれ ば 、 それぞれ の 形式 について 各 コマンド ごと に オプション 付き で bdist _* コマンド を 並べ ます : 
Distutils が setup スクリプト で 制御 さ れ て いる の と ほとんど 同じく 、 RPM パッケージ の 作成 は 、 . spec で 制御 さ れ て い ます 。 
RPM の 作成 を 簡便 に 解決 する ため 、 bdist _ rpm コマンド で は 通常 、 setup スクリプト に 与え た 情報 と コマンド ライン 、 そして Distutils 設定 ファイル に 基づい て . spec ファイル を 作成 し ます 。 
. spec ファイル の 様々 な オプション や セクション 情報 は 、 以下 の よう に し て setup スクリプト から 取り出さ れ ます : 
RPM . spec ファイル の オプション または セクション 
Distutils setup スクリプト 内 の オプション 
Summary ( preamble 内 ) 
author と author _ email , または maintainer と maintainer _ email 
% description ( セクション ) 
また 、 . spec ファイル 内 の 多く の オプション は 、 setup スクリプト 中 に 対応 する オプション が あり ませ ん 。 
これら の ほとんど は 、 以下 に 示す bdist _ rpm コマンド の オプション で 扱え ます : 
bdist _ rpm オプション 
デフォルト 値 
( 上記 参照 ) 
言うまでもなく 、 こうした オプション を コマンド ライン で 指定 する の は 面倒 だ し 、 エラー の 元 に なり ます から 、 普通 は setup . cfg に 書い て おく の が ベスト です -- 12 節 を 参照 し て ください 。 
沢山 の Python モジュール 配布 物 を 配布 し たり パッケージ 化 し たり し て いる の なら 、 配布 物 全部 に 当てはまる オプション を 個人 用 の Distutils 設定 ファイル (~/. pydistutils . cfg ) に 入れ られ ます 。 バイナリ 形式 の RPM パッケージ を 作成 する 際 に は 三つ の 段階 が あり 、 Distutils は これら 全て の 段階 を 自動的 に 処理 し ます : 
RPM パッケージ の 内容 を 記述 する . spec ファイル を 作成 し ます (. spec ファイル は setup スクリプト に 似 た ファイル です ; 実際 、 setup スクリプト の ほとんど の 情報 が . spec ファイル から 引き揚げ られ ます ) 
ソース RPM を 作成 し ます 
`` バイナリ ( binary )'' RPM を 生成 し ます ( モジュール 配布 物 に Python 拡張 モジュール が 入っ て いる か 否 か で 、 バイナリ コード が 含ま れる こと も 含ま れ ない こと も あり ます ) 
通常 、 RPM は 最後 の 二つ の ステップ を まとめ て 行い ます ; Distutils を 使う と 、 普通 は 三つ の ステップ 全て を まとめ て 行い ます 。 望む なら 、 これら の 三つ の ステップ を 分割 でき ます 。 
bdist _ rpm コマンド に -- spec - only を 指定 すれ ば 、 単に . spec を 作成 し て 終了 し ます ; この 場合 、 . spec ファイル は `` 配布 物 ディレクトリ ( distribution directory )''-- 通常 は dist / に 作成 さ れ ます が 、 -- dist - dir オプション で 変更 する こと も でき ます 。 
( 通常 、 . spec ファイル は `` ビルドツリー ( build tree )''、 すなわち build _ rpm が 作成 する 一時 ディレクトリ の 中 から 引き揚げ られ ます 。 ) 
1 . 2 . 2 . 2 クリエータ を セット し て ダブル クリック する 
1 . 2 . 2 . 1 ドラッグ & ドロップ する 
1 . 2 . 2 Python スクリプト の 走ら せ 方 
1 . 2 . 3 コマンド ライン 引数 を シミュレート する 
スクリプト を 、 MacPython 配布 物 の Mac フォルダ 下 の scripts フォルダ に 置き ます 。 
修正 し たい スクリプト は 全て ひとつ の フォルダ に 入れ ます 。 
他 の ファイル は 入れ ない よう に し ます 。 fixfiletypes . py アイコ ン を ダブル クリック し ます 。 
修正 し たい ファイル の 入っ た フォルダ を 選ん で `` Select current folder '' ボタン を 押し ます 。 
15 . 暗号 関連 の サービス 
この 章 で 記述 さ れ て いる モジュール で は 、 暗号 の 本質 に 関わる 様々 な アルゴリズム を 実装 し て い ます 。 
これら は 必要 に 応じ て インストール する こと で 使え ます 。 
概要 を 以下 に 示し ます : 
Python で 実装 さ れ た 、 メッセージ 認証 の ため の 鍵 付き ハッシュ 化 ( HMAC : Keyed - Hashing for Message Authentication ) アルゴリズム 。 
NIST の セキュアハッシュアルゴリズム 、 SHA 。 
あなた が ハード コア な サイバーパンク なら 、 さらに A . M . Kuchling の 書い た 暗号 化 モジュール に 興味 を 持つ かも しれ ませ ん 。 この パッケージ で は 組み込み の DES および IDEA 暗号 を 追加 し 、 PGP 暗号 化 さ れ た ファイル の 読み込み や 復号 化 を 行う ため の モジュール など を 提供 し ます 。 
これら の モジュール は Python と 一緒 に は 配布 さ れ ず 、 別に 入手 でき ます 。 
詳細 は http :// www . amk . ca / python / code / crypto . html を 見 て ください 。 
12 . 20 . 2 Dialect クラス と 書式 化 パラメタ 
csv モジュール で は 以下 の 関数 を 定義 し て い ます : 
与え られ た csvfile 内 の 行 を 反復 処理 する よう な reader オブジェクト を 返し ます 。 csvfile は イテレータプロトコル を サポート し 、 next メソッド が 呼ば れ た 際 に 常に 文字 列 を 返す よう な 任意 の オブジェクト に する こと が でき ます 。 
csvfile が ファイル オブジェクト の 場合 、 ファイル オブジェクト の 形式 に 違い が ある よう な プラットフォーム で は ' b ' フラグ を 付け て 開か なけれ ば なり ませ ん 。 
オプション として dialect パラメタ を 与える こと が でき 、 特定 の CSV 表現 形式 ( dialect ) 特有 の パラメタ の 集合 を 定義 する ため に 使わ れ ます 。 
dialect パラメタ は Dialect クラス の サブ クラス の インスタンス か 、 list _ dialects 関数 が 返す 文字 列 の 一つ に する こと が でき ます 。 
別 の オプション で ある fmtparam キーワード 引数 は 、 現在 の 表現 形式 における 個々 の 書式 パラメタ を 上書き する ため に 与える こと が でき ます 。 
表現 形式 および 書式 化 パラメタ の 詳細 について は 、 12 . 20 . 2 節 、 `` Dialect クラス と 書式 化 パラメタ '' を 参照 し て ください 。 読み出さ れ た データ は 全て 文字 列 として 返さ れ ます 。 
データ 型 の 変換 が 自動的 に 行わ れる こと は あり ませ ん 。 
ユーザ が 与え た データ を デリミタ で 区切ら れ た 文字 列 に 変換 し 、 与え られ た ファイル オブジェクト に する ため の writer オブジェクト を 返し ます 。 csvfile は write メソッド を 持つ 任意 の オブジェクト で かまい ませ ん 。 
csvfile が ファイル オブジェクト の 場合 、 ファイル オブジェクト の 形式 に 違い が ある よう な プラットフォーム で は ' b ' フラグ を 付け て 開か なけれ ば なり ませ ん 。 
オプション として dialect パラメタ を 与える こと が でき 、 特定 の CSV 表現 形式 ( dialect ) 特有 の パラメタ の 集合 を 定義 する ため に 使わ れ ます 。 
dialect パラメタ は Dialect クラス の サブ クラス の インスタンス か 、 list _ dialects 関数 が 返す 文字 列 の 一つ に する こと が でき ます 。 
別 の オプション で ある fmtparam キーワード 引数 は 、 現在 の 表現 形式 における 個々 の 書式 パラメタ を 上書き する ため に 与える こと が でき ます 。 
表現 形式 および 書式 化 パラメタ の 詳細 について は 、 12 . 20 . 2 節 、 `` Dialect クラス と 書式 化 パラメタ '' を 参照 し て ください 。 
DB API を 実装 する モジュール と の インタフェース を 可能 な 限り 容易 に する ため に 、 None は 空文字 列 として 書き込ま れ ます 。 
この 処理 は 可逆 な 変換 で は あり ませ ん が 、 SQL で NULL データ 値 を CSV に ダンプ する 処理 を 、 cursor . fetch *() 呼び出し によって 返さ れ た データ を 前 処理 する こと なく 簡単 に 行う こと が でき ます 。 
他 の 非 文字 データ は 、 書き出さ れる 前 に str () を 使っ て 文字 列 に 変換 さ れ ます 。 
dialect を name と 関連付け ます 。 
dialect は csv . Dialect の サブ クラス で なけれ ば なり ませ ん 。 name は 文字 列 か Unicode オブジェクト で なけれ ば なり ませ ん 。 
name に 関連づけ られ た 表現 形式 を 表現 形式 レジストリ から 削除 し ます 。 
name が 表現 形式 名 で ない 場合 に は Error を 送出 し ます 。 
name に 関連づけ られ た 表現 形式 を 返し ます 。 
name が 表現 形式 名 で ない 場合 に は Error を 送出 し ます 。 
登録 さ れ て いる 全て の 表現 形式 を 返し ます 。 
csv モジュール で は 以下 の クラス を 定義 し て い ます : 
クラス DictReader 
省略 可能 な fieldnames パラメタ で 与え られ た キー を 読み出さ れ た 情報 に 対応付ける 他 は 正規 の reader の よう に 動作 する オブジェクト を 生成 し ます 。 
fieldnames パラメタ が 無い 場合 に は 、 csvfile の 最初 の 行 の 値 が フィールド 名 として 利用 さ れ ます 。 
読み出さ れ た 行 が fieldnames の シーケンス より も 多く の フィールド を 持っ て い た 場合 、 残り の フィールド データ は restkey の 値 を キー と する シーケンス に 追加 さ れ ます 。 
読み出さ れ た 行 が fieldnames の シーケンス より も 少ない フィールド しか 持た ない 場合 、 残り の キー は オプション の restval パラメタ に 指定 さ れ た 値 を 取り ます 。 
その他 の 省略 可能 または キーワード 形式 の パラメタ は ベース に なっ て いる reader の インスタンス に 渡さ れ ます 。 
クラス DictWriter 
辞書 を 出 力行 に 対応付ける 他 は 正規 の writer の よう に 動作 する オブジェクト を 生成 し ます 。 
fieldnames パラメタ に は 、 辞書 中 の writerow () メソッド に 渡さ れる 値 が どの 順番 で csvfile に 書き出さ れる か を 指定 し ます 。 
オプション の restval パラメタ は 、 fieldnames 内 の キー が 辞書 中 に ない 場合 に 書き出さ れる 値 を 指定 し ます 。 
writerow () メソッド に 渡さ れ た 辞書 に 、 fieldnames 内 に は 存在 し ない キー が 入っ て いる 場合 、 オプション の extraaction パラメタ で どの よう な 動作 を 行う か を 指定 し ます 。 
この 値 が ' raise ' に 設定 さ れ て いる 場合 ValueError が 送出 さ れ ます 。 
' ignore ' に 設定 さ れ て いる 場合 、 辞書 の 余分 の 値 は 無視 さ れ ます 。 
Python の dict オブジェクト は 整列 さ れ て い ない ので 、 列 が csvfile に 書か れる べき 順序 を 推定 する ため の 十分 な 情報 は あり ませ ん 。 
Dialect クラス は コンテナ クラス で 、 基本 的 な 用途 として は 、 その 属性 を 特定 の reader や writer インスタンス の パラメタ を 定義 する ため に 用い ます 。 
Sniffer クラス は CSV ファイル の 書式 を 推理 する ため に 用い られる クラス です 。 
Sniffer クラス で は メソッド を 一つ 提供 し て い ます : 
与え られ た sample を 解析 し 、 発見 さ れ た パラメタ を 反映 し た Dialect サブ クラス を 返し ます 。 
オプション の delimiters パラメタ を 与え た 場合 、 有効 な デリミタ 文字 を 含ん で いる はず の 文字 列 として 解釈 さ れ ます 。 
( CSV 形式 と 仮定 さ れる ) サンプル テキスト を 解析 し て 、 最初 の 行 が カラム ヘッダ の 羅列 の よう に 推察 さ れる 場合 True を 返し ます 。 
csv モジュール で は 以下 の 定数 を 定義 し て い ます : 
writer オブジェクト に対し 、 全て の フィールド を クオート する よう に 指示 し ます 。 
writer オブジェクト に対し 、 現在 の delimiter を 含む か 、 あるいは quotechar で 始まる フィールド だけ を クオート する よう に 指示 し ます 。 
writer オブジェクト に対し 、 全て の 非 数値 フィールド を クオート する よう に 指示 し ます 。 
writer オブジェクト に対し 、 フィールド を 決して クオート し ない よう に 指示 し ます 。 
現在 の delimiter が 出力 データ 中 に 現れ た 場合 、 現在 設定 さ れ て いる excapechar 文字 が 前 に 付け られ ます 。 
QUOTE _ NONE の 効果 下 に ある 時 に は 、 1 文字 から なる 文字 列 escapechar が 定義 さ れ て い ない と 、 たとえ 書き出さ れる データ 中 に delimiter 文字 が 入っ て い なく て も エラー に なり ます 。 
csv モジュール で は 以下 の 例外 を 定義 し て い ます : 
全て の 関数 において 、 エラー が 検出 さ れ た 際 に 送出 さ れる 例外 です 。 
レコード に対する 入出力 形式 の 指定 を より 簡単 に する ため に 、 特定 の 書式 化 パラメタ は 表現 形式 ( dialect ) に まとめ て グループ 化 さ れ ます 。 
表現 形式 は Dialect クラス の サブ クラス で 、 様々 な クラス 特有 の メソッド と 、 validate () メソッド を 一つ 持っ て い ます 。 
reader または writer オブジェクト を 生成 する とき 、 プログラマ は 文字 列 または Dialect クラス の サブ クラス を 表現 形式 パラメタ として 渡さ なけれ ば なり ませ ん 。 
さらに 、 dialect パラメタ の 代り に 、 プログラマ は 上 で 定義 さ れ て いる 属性 と 同じ 名前 を 持つ 個々 の 書式 化 パラメタ を Dialect クラス に 指定 する こと が でき ます 。 Dialect は 以下 の 属性 を サポート し て い ます : 
フィールド 間 を 分割 する の に 用い られる 1 文字 から なる 文字 列 です 。 
デフォルト で は ',' です 。 
フィールド 内 に 現れ た quotechar の インスタンス で 、 クオート で は ない その 文字 自身 で なけれ ば なら ない 文字 を どの よう に クオート する か を 制御 し ます 。 
True の 場合 、 この 文字 は 二重化 さ れ ます 。 False の 場合 、 escapechar は 1 文字 から なる 文字 列 で なけれ ば なら ず 、 quotechar の 前 に 置か れ ます 。 
デフォルト で は True です 。 
quoting が QUOTE _ NONE に 設定 さ れ て いる 場合 に 、 delimiter を エスケープ する ため に 用い られる 、 1 文字 から なる 文字 列 です 。 
デフォルト で は None です 。 
CSV ファイル の 各行 を 終端 する 際 に 用い られる 文字 列 です 。 
デフォルト で は ' rn ' です 。 
delimiter を 含む か 、 quotechar から 始まる 要素 を クオート する 際 に 用い られる 1 文字 から なる 文字 列 です 。 
デフォルト で は '"' です 。 
writer によって クオート が い つ 生成 さ れる か を 制御 し ます 。 
QUOTE _* 定数 の いずれ か ( 12 . 20 . 1 節 参照 ) を とる こと が でき 、 デフォルト で は QUOTE _ MINIMAL です 。 
True の 場合 、 delimiter の 直後 に 続く 空白 は 無視 さ れ ます 。 
デフォルト で は False です 。 
curses モジュール で は 以下 の 例外 を 定義 し て い ます : 
curses ライブラリ 関数 が エラー を 返し た 際 に 送出 さ れる 例外 です 。 
注意 : 関数 や メソッド における オプション の 引数 x および y が ある 場合 、 標準 の 値 は 常に 現在 の カーソル に なり ます 。 オプション の attr が ある 場合 、 標準 の 値 は A _ NORMAL です 。 
curses で は 以下 の 関数 を 定義 し て い ます : 
端末 の 出力 速度 を ビット / 秒 で 返し ます 。 
ソフトウェア 端末 エミュレータ の 場合 、 これ は 固定 の 高い 値 を 持つ こと に なり ます 。 この 関数 は 歴史 的 な 理由 で 入れ られ て い ます ; かつて は 、 この 関数 は 時間 遅延 を 生成 する ため の 出力 ループ を 書く ため に 用い られ たり 、 行 速度 に 応じ て インタフェース を 切り替え たり する ため に 用い られ たり し て い まし た 。 
注意 を 促す 短い 音 を 鳴らし ます 。 
端末 に 表示 さ れる 色 を プログラマ が 変更 できる か 否 か によって 、 真 または 偽 を 返し ます 。 
cbreak モード に 入り ます 。 
cbreak モード (`` rare '' モード と 呼ば れる こと も あり ます ) で は 、 通常 の tty 行 バッファリング は オフ に さ れ 、 文字 を 一文字 一 文字 読む こと が でき ます 。 
ただし 、 raw モード と は 異なり 、 特殊 文字 ( 割り込み : interrupt 、 終了 : quit 、 一時 停止 : suspend 、 および フロー 制御 ) について は 、 tty ドライバ および 呼び出し 側 の プログラム に対する 通常 の 効果 を もっ て い ます 。 
まず raw () を 呼び出し 、 次いで cbreak () を 呼び出す と 、 端末 を cbreak モード に し ます 。 
色 color _ number の 赤 、 緑 、 および 青 ( RGB ) 要素 の 強度 を 返し ます 。 
color _ number は 0 から COLORS の 間 で なけれ ば なり ませ ん 。 与え られ た 色 の R 、 G 、 B 、 の 値 から なる 三 要素 の タプル が 返さ れ ます 。 
この 値 は 0 ( その 成分 は ない ) から 1000 ( その 成分 の 最大 強度 ) の 範囲 を とり ます 。 color _ pair 
指定 さ れ た 色 の 表示 テキスト における 属性 値 を 返し ます 。 
属性 値 は A _ STANDOUT 、 A _ REVERSE 、 および その他 の A _* 属性 と 組み合わせ られ て い ます 。 pair _ number () は この 関数 の 逆 です 。 
カーソル の 状態 を 設定 し ます 。 visibility は 0 、 1 、 または 2 に 設定 さ れ 、 それぞれ 不可視 、 通常 、 または 非常 に 可視 、 を 意味 し ます 。 
要求 さ れ た 可視 属性 を 端末 が サポート し て いる 場合 、 以前 の カーソル 状態 が 返さ れ ます ; そう で なけれ ば 例外 が 送出 さ れ ます 。 
多く の 端末 で は 、 `` 可視 ( 通常 )'' モード は 下線 カーソル で 、 `` 非常 に 可視 '' モード は ブロック カーソル です 。 
現在 の 端末 属性 を 、 稼動 中 の プログラム が curses を 使う 際 の モード で ある `` プログラム '' モード として 保存 し ます 。 
( この モード の 反対 は 、 プログラム が curses を 使わ ない `` シェル '' モード です 。 
) その後 reset _ prog _ mode () を 呼ぶ と この モード を 復旧 し ます 。 
現在 の 端末 属性 を 、 稼動 中 の プログラム が curses を 使っ て い ない とき の モード で ある `` シェル '' モード として 保存 し ます 。 
( この モード の 反対 は 、 プログラム が curses 機能 を 利用 し て いる `` プログラム '' モード です 。 
) その後 reset _ shell _ mode () を 呼ぶ と この モード を 復旧 し ます 。 delay _ output 
出力 に ms ミリ 秒 の 一時 停止 を 入れ ます 。 
物理 スクリーン ( physical screen ) を 更新 し ます 。 
curses ライブラリ は 、 現在 の 物理 スクリーン の 内容 と 、 次 の 状態 として 要求 さ れ て いる 仮想 スクリーン を それぞれ 表す 、 2 つ の データ 構造 を 保持 し て い ます 。 
doupdate () は 更新 を 適用 し 、 物理 スクリーン を 仮想 スクリーン に 一致 さ せ ます 。 仮想 スクリーン は addstr () の よう な 書き込み 操作 を ウィンドウ に 行っ た 後 に noutrefresh () を 呼び出し て 更新 する こと が でき ます 。 
通常 の refresh () 呼び出し は 、 単に noutrefresh () を 呼ん だ 後 に doupdate () を 呼ぶ だけ です ; 複数 の ウィンドウ を 更新 し なけれ ば なら ない 場合 、 全て の ウィンドウ に対して noutrefresh () を 呼び出し た 後 、 一 度 だけ doupdate () を 呼ぶ こと で 、 パフォーマンス を 向上 さ せる こと が でき 、 おそらく スクリーン の ちらつき も 押さえる こと が でき ます 。 
echo モード に 入り ます 。 
echo モード で は 、 各 文字 入力 は スクリーン 上 に 入力 さ れ た 通り に エコー バック さ れ ます 。 
ライブラリ の 非 初期 化 を 行い 、 端末 を 通常 の 状態 に 戻し ます 。 
ユーザ の 現在 の 消去 文字 ( erase character ) 設定 を 返し ます 。 
Unix オペレーティングシステム で は 、 この 値 は curses プログラム が 制御 し て いる 端末 の 属性 で あり 、 curses ライブラリ 自体 で は 設定 さ れ ませ ん 。 
filter () ルーチン を 使う 場合 、 initscr () を 呼ぶ 前 に 呼び出さ なく て は なり ませ ん 。 
この 手順 の もたらす 効果 は 以下 の 通り です : まず 二つ の 関数 の 呼び出し の 間 は 、 LINES は 1 に 設定 さ れ ます ; clear 、 cup 、 cud 、 cud 1 、 cuu 1 、 cuu 、 vpa は 無効 化 さ れ ます ; home 文字 列 は cr の 値 に 設定 さ れ ます 。 これ により 、 カーソル は 現在 の 行 に 制限 さ れる ので 、 スクリーン の 更新 も 同様 に 制限 さ れ ます 。 
この 関数 は 、 スクリーン の 他 の 部分 に 影響 を 及ぼさ ず に 文字 単位 の 行 編集 を 行う 場合 に 利用 でき ます 。 
スクリーン を フラッシュ ( flash ) し ます 。 
すなわち 、 画面 を 色 反転 ( reverse - video ) に し て 、 短時間 で もと に もどし ます 。 
人 によって は 、 beep () で 生成 さ れる 可聴 な 注意 音 より も 、 この よう な `` 可視 ベル ( visible bell )'' を 好み ます 。 
全て の 入力 バッファ を フラッシュ し ます 。 
この 関数 は 、 ユーザ によって すでに 入力 さ れ て いる が 、 まだ プログラム によって 処理 さ れ て い ない 全て の 先行 入力 文字 ( typeahead ) を 捨て去り ます 。 
イベント は ( id , x , y , z , bstate ) の 5 要素 の タプル で 表現 さ れ て い ます 。 
仮想 スクリーン における 現在 の カーソル 位置 を y および x の 順 で 返し ます 。 
leaveok が 真に 設定 さ れ て いれ ば 、 - 1 、- 1 が 返さ れ ます 。 
以前 の putwin () 呼び出し で ファイル に 保存 さ れ て いる 、 ウィンドウ 関連 データ を 読み出し ます 。 
次に 、 この ルーチン は その データ を 使っ て 新た な ウィンドウ を 生成 し 初期 化 し て 、 その 新規 ウィンドウ オブジェクト を 返し ます 。 
端末 が 色 表示 を 行える 場合 に は 真 を 返し ます 。 そう で ない 場合 に は 偽 を 返し ます 。 
端末 が 文字 の 挿入 / 削除 機能 を 持つ 場合 に 真 を 返し ます 。 
この 関数 は 、 最近 の 端末 エミュレータ が どれ も この 機能 を 持っ て いる の と 同じく 、 歴史 的 な 理由 だけ の ため に 含め られ て い ます 。 
端末 が 行 の 挿入 / 削除 機能 を 持つ か 、 領域 単位 の スクロール によって 機能 を シミュレート できる 場合 に 真 を 返し ます 。 
キー 値 ch を とり 、 現在 の 端末 タイプ が その 値 の キー を 認識 できる 場合 に 真 を 返し ます 。 
半 遅延 モード 、 すなわち cbreak モード に 似 た 、 ユーザ が 打鍵 し た 文字 が すぐ に プログラム で 利用 できる よう に なる モード で 使わ れ ます 。 しかしながら 、 何 も 入力 さ れ なかっ た 場合 、 tenths 十 秒 後 に 例外 が 送出 さ れ ます 。 
tenths の 値 は 1 から 255 の 間 で なけれ ば なり ませ ん 。 
半 遅延 モード から 抜ける に は nocbreak () を 使い ます 。 
色 の 定義 を 変更 し ます 。 変更 し たい 色 番号 と 、 その後 に 3 つ 組み の RGB 値 ( 赤 、 緑 、 青 の 成分 の 大き さ ) を とり ます 。 
color _ number の 値 は 0 から COLORS の 間 で なけれ ば なり ませ ん 。 
r 、 g 、 b の 値 は 0 から 1000 の 間 で なけれ ば なり ませ ん 。 
init _ color () を 使う と 、 スクリーン 上 で カラー が 使用 さ れ て いる 部分 は 全て 新しい 設定 に 即時 変更 さ れ ます 。 
この 関数 は ほとんど の 端末 で 何 も 行い ませ ん ; can _ change _ color () が 1 を 返す 場合 に のみ 動作 し ます 。 
色 ペア の 定義 を 変更 し ます 。 
3 つ の 引数 : 変更 し たい 色 ペア 、 前 景色 の 色 番号 、 背景 色 の 色 番号 、 を とり ます 。 
pair _ number は 1 から COLOR _ PAIRS - 1 の 間 で なけれ ば なり ませ ん ( 0 色 ペア は 黒色 背景 に 白色 前景 と なる よう に 設定 さ れ て おり 、 変更 する こと が でき ませ ん ) 。 
fg および bg 引数 は 0 と COLORS の 間 で なけれ ば なり ませ ん 。 
色 ペア が 以前 に 初期 化 さ れ て いれ ば 、 スクリーン を 更新 し て 、 指定 さ れ た 色 ペア の 部分 を 新た な 設定 に 変更 し ます 。 
ライブラリ を 初期 化 し ます 。 
スクリーン 全体 を あらわす WindowObject を 返し ます 。 
注意 : 端末 の オープン 時 に エラー が 発生 し た 場合 、 curses ライブラリ によって インタープリタ が 終了 さ れる 場合 が あり ます 。 
endwin () が すでに 呼び出さ れ て いる ( すなわち 、 curses ライブラリ が 非 初期 化 さ れ て しまっ て いる ) 場合 に 真 を 返し ます 。 
k に 番号 付け さ れ て いる キー の 名前 を 返し ます 。 
印字 可能 な ASCII 文字 を 生成 する キー の 名前 は その キー の 文字 自体 に なり ます 。 
コントロール キー と 組み合わせ た キー の 名前 は 、 キャレット の 後 に 対応 する ASCII 文字 が 続く 2 文字 の 文字 列 に なり ます 。 
Alt キー と 組み合わせ た キー ( 128 - 255 ) の 名前 は 、 先頭 に ` M -' が 付き 、 その後 に 対応 する ASCII 文字 が 続く 文字 列 に なり ます 。 
ユーザ の 現在 の 行 削除 文字 を 返し ます 。 
現在 の 端末 について 記述 し て いる terminfo の 長 形式 name フィールド が 入っ た 文字 列 を 返し ます 。 
verbose 形式 記述 の 最大 長 は 128 文字 です 。 
この 値 は initscr () 呼び出し の 後 で のみ 定義 さ れ て い ます 。 
yes が 1 の 場合 、 8 ビット 文字 を 入力 として 許し ます 。 
yes が 0 の 場合 、 7 ビット 文字 だけ を 許し ます 。 
ボタン が 押さ れ て から 離さ れる まで の 時間 を マウス クリック 一 回 として 認識 する 最大 の 時間 間隔 を 設定 し ます 。 以前 の 内部 設定 値 を 返し ます 。 
標準 の 値 は 200 ミリ 秒 、 または 5 分の 1 秒 です 。 
この 関数 が 呼ば れ ない 限り 、 マウス イベント は 何 も 報告 さ れ ませ ん 。 
ms ミリ 秒 スリープ し ます 。 
与え られ た 行 と カラム 数 を 持つ パッド ( pad ) データ 構造 を 生成 し 、 その ポインタ を 返し ます 。 
パッド は ウィンドウ オブジェクト として 返さ れ ます 。 パッド は ウィンドウ と 同じ よう な もの です が 、 スクリーン の サイズ による 制限 を うけ ず 、 スクリーン の 特定 の 部分 に 関連付け られ て い なく て も かまい ませ ん 。 
大きな ウィンドウ が 必要 で あり 、 スクリーン に は その ウィンドウ の 一部 しか 一 度 に 表示 し ない 場合 に 使え ます 。 
( スクロール や 入力 エコー など による ) パッド に対する 再 描画 は 起こり ませ ん 。 
パッド に対する refresh () および noutrefresh () メソッド は 、 パッド 中 の 表示 する 部分 と 表示 する ため に 利用 する スクリーン 上 の 位置 を 指定 する 6 つ の 引数 が 必要 です 。 これら の 引数 は pminrow 、 pmincol 、 sminrow 、 smincol 、 smaxrow 、 smaxcol です ; p で 始まる 引数 は パッド 中 の 表示 領域 の 左上 位置 で 、 s で 始まる 引数 は パッド 領域 を 表示 する スクリーン 上 の クリップ 矩形 を 指定 し ます 。 
左上 の 角 が ( begin _ y , begin _ x ) で 、 高 さ / 幅 が nlines / ncols の 新規 ウィンドウ を 返し ます 。 
標準 で は 、 ウィンドウ は 指定 さ れ た 位置 から スクリーン の 右 下 まで 広がり ます 。 
newlime モード に 入り ます 。 
この モード は リターンキー を 入力 中 の 改行 として 変換 し 、 出力 時 に 改行 文字 を 復帰 ( return ) と 改行 ( line - feed ) に 変換 し ます 。 newline モード は 初期 化 時 に は オン に なっ て い ます 。 
cbreak モード から 離れ ます 。 
行 バッファリング を 行う 通常 の `` cooked '' モード に 戻り ます 。 
echo モード から 離れ ます 。 
入力 の エコー バック は オフ に さ れ ます 。 
newline モード から 離れ ます 。 
入力 時 の リターンキー から 改行 へ の 変換 、 および 出力 時 の 改行 から 復帰 / 改行 へ の 低 レベル 変換 を 無効 化 し ます ( ただし 、 addch (' n ') の 振る舞い は 変更 せ ず 、 仮想 スクリーン 上 で は 常に 復帰 と 改行 に 等しく なり ます )。 
変換 を オフ に する こと で 、 curses は 水平 方向 の 動き を 少し だけ 高速 化 できる こと が あり ます ; また 、 入力 中 の リターンキー の 検出 が できる よう に なり ます 。 
noquiflush ルーチン を 使う と 、 通常 行わ れ て いる INTR 、 QUIT 、 および SUSP 文字 による 入力 および 出力 キュー の フラッシュ が 行わ れ なく なり ます 。 
シグナル ハンドラ が 終了 し た 際 、 割り込み が 発生 し なかっ た か の よう に 出力 を 続 たい 場合 、 ハンドラ 中 で noqiflush () を 呼び出す こと が でき ます 。 
raw モード から 離れ ます 。 
要求 さ れ た 色 ペア 中 の 色 を 含む ( fg , bg ) から なる タプル を 返し ます 。 
pair _ number は 0 から 
COLOR _ PAIRS - 1 の 間 で なけれ ば なり ませ ん 。 
attr に対する 色 ペア セット の 番号 を 返し ます 。 color _ pair () は この 関数 の 逆 に 相当 し ます 。 
tputs ( str , 1 , putchar ) と 等価 です ; 現在 の 端末 における 、 指定 さ れ た terminfo 機能 の 値 を 出力 し ます 。 
putp の 出力 は 常に 標準 出力 に 送ら れる ので 注意 し て 下さい 。 
flag が 偽 なら 、 noqiflush () を 呼ぶ の と と 同じ 効果 です 。 
flag が 真 か 、 引数 が 与え られ て い ない 場合 、 制御 文字 が 読み出さ れ た 最 に キュー は フラッシュ さ れ ます 。 
raw モード に 入り ます 。 
raw モード で は 、 通常 の 行 バッファリング と 割り込み ( interrupt )、 終了 ( quit )、 一 時 停止 ( suspend )、 および フロー 制御 キー は オフ に なり ます ; 文字 は curses 入力 関数 に 一文字 づつ 渡さ れ ます 。 
端末 を `` program '' モード に 復旧 し 、 予め def _ prog _ mode () で 保存 し た 内容 に 戻し ます 。 
端末 を `` shell '' モード に 復旧 し 、 予め def _ shell _ mode () で 保存 し た 内容 に 戻し ます 。 
仮想 スクリーン カーソル を y 、 x に 設定 し ます 。 y および x が 共に - 1 の 場合 、 leaveok が 設定 さ れ ます 。 
端末 を 初期 化 し ます 。 
termstr は 文字 列 で 、 端末 の 名前 を 与え ます ; 省略 さ れ た 場合 、 TERM 環境 変数 の 値 が 使わ れ ます 。 
fd は 初期 化 シーケンス が 送ら れる 先 の ファイル 記述 子 です ; fd を 与え ない 場合 、 sys . stdout の ファイル 記述 子 が 使わ れ ます 。 start _ color 
プログラマ が カラー を 利用 し たい 場合 で 、 かつ 他 の 何らかの カラー 操作 ルーチン を 呼び出す 前 に 呼び出さ なく て は なり ませ ん 。 
この 関数 は initscr () を 呼ん だ 直後 に 呼ぶ よう に し て おく と よい でしょ う 。 
start _ color () は 8 つ の 基本 色 ( 黒 、 赤 、 緑 、 黄 、 青 、 マゼンタ 、 シアン 、 および 白 ) と 、 色 数 の 最大 値 と 端末 が サポート する 色 ペア の 最大 数 が 入っ て いる 、 curses モジュール における 二つ の グローバル 変数 、 COLORS および COLOR _ PAIRS を 初期 化 し ます 。 
この 関数 は また 、 色 設定 を 端末 の スイッチ が 入れ られ た とき の 状態 に 戻し ます 。 
端末 が サポート する 全て の ビデオ 属性 を 論理 和 し た 値 を 返し ます 。 
この 情報 は 、 curses プログラム が スクリーン の 見え 方 を 完全 に 制御 する 必要 が ある 場合 に 便利 です 。 
14 文字 以下 に なる よう に 切り詰め られ た 環境 変数 TERM の 値 を 返し ます 。 
terminfo 機能 名 capname に 対応 する 機能 値 を ブール 値 で 返し ます 。 
capname が ブール 値 で 表さ れる 機能 値 で ない 場合 - 1 が 返さ れ 、 機能 が キャンセル さ れ て いる か 、 端末 記述 上 に 見つから ない 場合 に は 0 を 返し ます 。 
terminfo 機能 名 capname に 対応 する 機能 値 を 数値 で 返し ます 。 
capname が 数値 で 表さ れる 機能 値 で ない 場合 - 2 が 返さ れ 、 機能 が キャンセル さ れ て いる か 、 端末 記述 上 に 見つから ない 場合 に は - 1 を 返し ます 。 
terminfo 機能 名 capname に 対応 する 機能 値 を 文字 列 値 で 返し ます 。 
capname が 文字 列 値 で 表さ れる 機能 値 で ない 場合 や 、 機能 が キャンセル さ れ て いる か 、 端末 記述 上 に 見つから ない 場合 に は None を 返し ます 。 
str を 与え られ た パラメタ を 使っ て 文字 列 に インスタンス 化 し ます 。 
str は terminfo データベース から 得 られ た パラメタ を 持つ 文字 列 で なけれ ば なり ませ ん 。 
例えば 、 tparm ( tigetstr (" cup "), 5 , 3 ) は ' 033 [ 6 ; 4 H ' の よう に なり ます 。 厳密 に は 端末 の 形式 によって 異なる 結果 と なり ます 。 
先読み チェック に 使う ため の ファイル 記述 子 fd を 指定 し ます 。 
fd が - 1 の 場合 、 先読み チェック は 行わ れ ませ ん 。 curses ライブラリ は スクリーン を 更新 する 間 、 先読み 文字 列 を 定期 的 に 検索 する こと で `` 行 はみ出 し 最適 化 ( line - breakout optimization )'' を 行い ます 。 
入力 が 得 られ 、 かつ 入力 は 端末 から の もの で ある 場合 、 現在 行お う と し て いる 更新 は refresh や doupdate を 再度 呼び出す まで 先送り に し ます 。 
この 関数 は 異なる ファイル 記述 子 で 先読み チェック を 行う よう に 指定 する こと が でき ます 。 
ch の 印字 可能 な 表現 を 文字 列 で 返し ます 。 
制御 文字 は 例えば ^ C の よう に キャレット に 続く 文字 として 表示 さ れ ます 。 
印字 可能 文字 は そのまま です 。 
ch を プッシュ し て 、 getch () を 次に 呼び出し た とき に 返さ れる よう に し ます 。 
注意 : getch () を 呼び出す まで は ch は 一つ しか プッシュ でき ませ ん 。 
与え られ た 状態 データ が 関連付け られ た KEY _ MOUSE イベント を 入力 キュー に プッシュ し ます 。 
この 関数 を 使う 場合 、 initscr () または newterm を 呼ぶ 前 に 呼び出さ なく て は なり ませ ん 。 
flag が 偽 の 場合 、 環境 変数 LINES および COLUMNS の 値 ( これら は 標準 の 設定 で 使わ れ ます ) の 値 が 設定 さ れ て い たり 、 curses が ウィンドウ 内 で 動作 し て ( この 場合 LINES や COLUMNS が 設定 さ れ て い ない と ウィンドウ の サイズ を 使い ます ) い て も 、 terminfo データベース に 指定 さ れ た lines および columns の 値 を 使い ます 。 
この 機能 を サポート し て いる 端末 上 で 、 色 の 値 として デフォルト 値 を 使う 設定 を し ます 。 
あなた の アプリケーション で 透過 性 と サポート する ため に この 関数 を 使っ て ください 。 
デフォルト の 色 は 色 番号 - 1 に 割り当て られ ます 。 この 関数 を 呼ん だ 後 、 たとえば init _ pair ( x , curses . COLOR _ RED , - 1 ) は 色 ペア x を 赤い 前 景色 と デフォルト の 背景 色 に 初期 化 し ます 。 
上記 の new _ panel () が 返す Panel オブジェクト は スタック 順 の 概念 を 持つ ウィンドウ です 。 
ウィンドウ は パネル に 関連付け られ て おり 、 表示 する 内容 を 決定 し て いる 一方 、 パネル の メソッド は パネル スタック 中 の ウィンドウ の 深 さ 管理 を 担い ます 。 Panel オブジェクト は 以下 の メソッド を 持っ て い ます : 
現在 の パネル の 上 に ある パネル を 返し ます 。 
現在 の パネル の 下 に ある パネル を 返し ます 。 
パネル を スタック の 最 下層 に プッシュ し ます 。 
パネル が 隠れ て いる ( 不可視 で ある ) 場合 に 真 を 返し 、 そう で ない 場合 偽 を 返し ます 。 
パネル を 隠し ます 。 
この 操作 で は オブジェクト は 消去 さ れ ず 、 スクリーン 上 の ウィンドウ を 不可視 に する だけ です 。 
パネル を スクリーン 座標 ( y , x ) に 移動 し ます 。 
パネル に 関連付け られ た ウィンドウ を win に 変更 し ます 。 
パネル の ユーザ ポインタ を obj に 設定 し ます 。 
この メソッド は 任意 の データ を パネル に 関連付ける ため に 使わ れ 、 任意 の Python オブジェクト に する こと が でき ます 。 
( 隠れ て いる はず の ) パネル を 表示 し ます 。 
パネル を スタック の 最 上層 に プッシュ し ます 。 
パネル の ユーザ ポインタ を 返し ます 。 
任意 の Python オブジェクト です 。 
パネル に 関連付け られ て いる ウィンドウ オブジェクト を 返し ます 。 
6 . 16 . 1 Textbox オブジェクト 
以下 の よう な Textbox オブジェクト を インスタンス 生成 する こと が でき ます : 
クラス Textbox 
テキストボックスウィジェットオブジェクト を 返し ます 。 
Textbox オブジェクト は 以下 の メソッド を 持ち ます : 
普段 使う こと に なる エントリ ポイント です 。 
終了 キー ストローク の 一つ が 入力 さ れる まで 編集 キー ストローク を 受け付け ます 。 
validator を 与える 場合 、 関数 で なけれ ば なり ませ ん 。 
validator は キー ストローク が 入力 さ れる たび に その キー ストローク が 引数 と なっ て 呼び出さ れ ます ; 返さ れ た 値 に対して 、 コマンドキーストローク として 解釈 が 行わ れ ます 。 
この メソッド は ウィンドウ の 内容 を 文字 列 として 返し ます ; ウィンドウ 内 の 空白 が 含め られる か どう か は stripspaces メンバ で 決め られ ます 。 
単一 の コマンドキーストローク を 処理 し ます 。 
以下 に サポート さ れ て いる 特殊 キー ストローク を 示し ます : 
キー ストローク 
動作 
ウィンドウ の 左端 に 移動 し ます 。 
カーソル を 左 へ 移動 し 、 必要 なら 前 の 行 に 折り返し ます 。 
カーソル 下 の 文字 を 削除 し ます 。 
右端 ( stripspaces が オフ の とき ) または 行末 ( stripspaces が オン の とき ) に 移動 し ます 。 
カーソル を 右 に 移動 し 、 必要 なら 次 の 行 に 折り返し ます 。 
ウィンドウ を 終了 し 、 その 内容 を 返し ます 。 
逆 方向 に 文字 を 削除 し ます 。 
( バック スペース ) Control - J 
ウィンドウ が 1 行 で あれ ば 終了 し 、 そう で なけれ ば 新しい 行 を 挿入 し ます 。 
行 が 空白 行 なら その 行 全体 を 削除 し 、 そう で なけれ ば カーソル 以降 行末 まで を 消去 し ます 。 
スクリーン を 更新 し ます 。 
カーソル を 下 に 移動 し ます ; 1 行 下 に 移動 し ます 。 
カーソル の 場所 に 空 行 を 1 行 挿入 し ます 。 
カーソル を 上 に 移動 し ます ; 1 行 上 に 移動 し ます 。 
移動 操作 は 、 カーソル が ウィンドウ の 縁 に あっ て 移動 が でき ない 場合 に は 何 も 行い ませ ん 。 
場合 によって は 、 以下 の よう な 同義 の キー ストローク が サポート さ れ て い ます : 
定数 
他 の キー ストローク は 、 与え られ た 文字 を 挿入 し 、 ( 行 折り返し 付き で ) 右 に 移動 する コマンド として 扱わ れ ます 。 
この メソッド は ウィンドウ の 内容 を 文字 列 として 返し ます ; ウィンドウ 内 の 空白 が 含め られる か どう か は stripspaces メンバ 変数 で 決め られ ます 。 
この データ メンバ は ウィンドウ 内 の 空白 領域 の 解釈 方法 を 制御 する ため の フラグ です 。 
フラグ が オン に 設定 さ れ て いる 場合 、 各行 の 末端 に ある 空白 領域 は 無視 さ れ ます ; すなわち 、 末端 空白 領域 に カーソル が 入る と 、 その 場所 の 代わり に 行 の 末尾 に カーソル が 移動 し ます 。 また 、 末端 の 空白 領域 は ウィンドウ の 内容 を 取得 する 際 に 剥ぎ 取ら れ ます 。 
6 . 15 . 3 定数 
上記 の initscr () や newwin () が 返す ウィンドウ は 、 以下 の メソッド を 持ち ます : 
( y , x ) に ある 文字 ch を 属性 attr で 描画 し ます 。 この とき その 場所 に 以前 描画 さ れ た 文字 は 上書き さ れ ます 。 
標準 の 設定 で は 、 文字 の 位置 および 属性 は ウィンドウ オブジェクト における 現在 の 設定 に なり ます 。 
文字 列 str から 最大 で n 文字 を ( y , x ) に 属性 attr で 描画 し ます 。 以前 ディスプレイ に あっ た 内容 は すべて 上書き さ れ ます 。 
( y , x ) に 文字 列 str を 属性 attr で 描画 し ます 。 以前 ディスプレイ に あっ た 内容 は すべて 上書き さ れ ます 。 
現在 の ウィンドウ に 書き込ま れ た 全て の 内容 に対し `` バックグラウンド '' に 設定 さ れ た 属性 attr を 除去 し ます 。 
現在 の ウィンドウ に 書き込ま れ た 全て の 内容 に対し `` バックグラウンド '' に 属性 attr を 追加 し ます 。 
`` バックグラウンド '' の 属性 セット を attr に 設定 し ます 。 
初期 値 は 0 ( 属性 なし ) です 。 
ウィンドウ 上 の 背景 プロパティ を 、 attr を 属性 と する 文字 ch に 設定 し ます 。 
変更 は その ウィンドウ 中 の 全て の 文字 に 以下 の よう に し て 適用 さ れ ます : 
ウィンドウ 中 の 全て の 文字 の 属性 が 新た な 背景 属性 に 変更 さ れ ます 。 
以前 の 背景 文字 が 出現 する と 、 常に 新た な 背景 文字 に 変更 さ れ ます 。 
ウィンドウ の 背景 を 設定 し ます 。 
ウィンドウ の 背景 は 、 文字 と 何らかの 属性 の 組み合わせ から 成り立ち ます 。 
背景 情報 の 属性 の 部分 は 、 ウィンドウ 上 に 描画 さ れ て いる 空白 で ない 全て の 文字 と 組み合わさ れ ( OR さ れ ) ます 。 
空白 文字 に は 文字 部分 と 属性 部分 の 両方 が 組み合わさ れ ます 。 
背景 は 文字 の プロパティ と なり 、 スクロール や 行 / 文字 の 挿入 / 削除 操作 の 際 に は 文字 と 一緒 に 移動 し ます 。 
ウィンドウ の 縁 に 境界 線 を 描画 し ます 。 
各 引数 に は 境界 の 特定 部分 を 表現 する ため に 使わ れる 文字 を 指定 し ます ; 詳細 は 以下 の テーブル を 参照 し て ください 。 
文字 は 整数 または 1 文字 から なる 文字 列 で 指定 さ れ ます 。 
注意 : どの 引数 も 、 0 を 指定 し た 場合 標準 設定 の 文字 が 使わ れる よう に なり ます 。 
キーワード 引数 は 使う こと が でき ませ ん 。 
標準 の 設定 は テーブル 中 に 示さ れ て い ます : 
引数 
記述 
標準 の 設定 値 
左側 
右側 
上側 
下 側 
左上 の 角 
右 上 の 角 
左下 の 角 
右 下 の 角 
border () と 同様 です が 、 ls および rs は 共に vertch で 、 ts および bs は 共に horch です 。 
この 関数 で は 、 角 に 使わ れる 文字 は 常に 標準 設定 の 値 です 。 
erase () に 似 て い ます が 、 次に refresh () が 呼び出さ れ た 際 に 全て の ウィンドウ を 再 描画 する よう に し ます 。 
yes が 1 なら ば 、 次 の refresh () は ウィンドウ を 完全 に 消去 し ます 。 
カーソル の 位置 から ウィンドウ の 端 まで を 消去 し ます : カーソル 以降 の 全て の 行 が 削除 さ れる ため 、 clrtoeol () が 実行 さ れ た の と おなじ に なり ます 。 
カーソル 位置 から 行末 まで を 消去 し ます 。 
ウィンドウ の 全て の 親 ウィンドウ について 、 現在 の カーソル 位置 を 反映 する よう 更新 し ます 。 
( y , x ) に ある 文字 を 削除 し ます 。 
カーソル の 下 に ある 行 を 削除 し ます 。 
後続 の 行 は すべて 1 行 上 に 移動 し ます 。 
`` derive window ( ウィンドウ を 導出 する )'' の 短縮 形 です 。 
derwin () は subwin () と 同じ です が 、 begin _ y および begin + x は スクリーン 全体 の 原点 で は なく 、 ウィンドウ の 原点 から の 相対 位置 です 。 
導出 さ れ た ウィンドウ オブジェクト が 返さ れ ます 。 
文字 ch に 属性 attr を 付与 し 、 即座 に refresh () を ウィンドウ に対して 呼び出し ます 。 
与え られ た 文字 セル 座標 を スクリーン 原点 から 相対 的 な もの と し 、 ウィンドウ の 中 に 含ま れる か を 調べ て 、 真 または 偽 を 返し ます 。 
スクリーン 上 の ウィンドウ の 一部 が マウス イベント の 発生 場所 を 含む か どう か を 調べる 上 で 便利 です 。 
ウィンドウ を クリア し ます 。 
左上 の 角 の 座標 を あらわす タプル ( y , x ) を 返し ます 。 
文字 を 取得 し ます 。 
返さ れる 整数 は ASCII の 範囲 の 値 と なる わけ で は ない ので 注意 し て ください : ファンクション キー 、 キー パッド 上 の キー 等 は 256 より も 大きな 数字 を 返し ます 。 
無 遅延 ( no - delay ) モード で は 、 入力 が ない 場合 - 1 が 返さ れ ます 。 
文字 を 取得 し 、 getch () の よう に 整数 を 返す 代わり に 文字 列 を 返し ます 。 
ファンクション キー 、 キーバットキー など は キー 名 の 入っ た 複数 バイト から なる 文字 列 を 返し ます 。 
無 遅延 モード で は 、 入力 が ない 場合 例外 が 送出 さ れ ます 。 
ウィンドウ の 高 さ および 幅 を 表す タプル ( y , x ) を 返し ます 。 
親 ウィンドウ 中 における ウィンドウ の 開始 位置 を x と y の 二つ の 整数 で 返し ます 。 
ウィンドウ に 親 ウィンドウ が ない 場合 - 1 ,- 1 を 返し ます 。 
原始 的 な 文字 編集 機能 つき で 、 ユーザ の 入力 文字 列 を 読み取り ます 。 
ウィンドウ の 左上 角 から の 相対 で 表し た 現在 の カーソル 位置 を タプル ( y , x ) で 返し ます 。 
( y , x ) から 始まり 、 n の 長 さ を 持つ 、 文字 ch で 作ら れる 水平 線 を 表示 し ます 。 
flag が 偽 の 場合 、 curses は 端末 の ハードウェア による 文字 挿入 / 削除 機能 を 使お う と し なく なり ます ; flag が 真 なら ば 、 文字 挿入 / 削除 は 有効 に さ れ ます 。 
curses が 最初 に 初期 化 さ れ た 際 に は 文字 挿入 / 削除 は 標準 の 設定 で 有効 に なっ て い ます 。 
yes が 1 で あれ ば 、 curses は ハードウェア の 行 編集 機能 を 利用 しよ う と 試み ます 。 
行 挿入 / 削除 は 無効 化 さ れ ます 。 
flag が 真 なら ば 、 ウィンドウ イメージ 内 における 何らかの 変更 が ある と ウィンドウ を 更新 する よう に なり ます ; すなわち 、 refresh () を 自分 で 呼ば なく て も 良く なり ます 。 
と は いえ 、 wrefresh を 繰り返し 呼び出す こと に なる ため 、 この 操作 は かなり パフォーマンス を 低下 さ せ ます 。 
標準 の 設定 で は 無効 に なっ て い ます 。 
ウィンドウ の 指定 の 位置 の 文字 を 返し ます 。 
下位 8 ビット が 常に 文字 と なり 、 それ より 上 の ビット は 属性 を 表し ます 。 
( y , x ) に 文字 ch を 属性 attr で 描画 し 、 行 の x から の 内容 を 1 文字 分 右 に ずらし ます 。 
nlines 行 を 指定 さ れ た ウィンドウ の 現在 の 行 の 上 に 挿入 し ます 。 
その 下 に ある nlines 行 は 失わ れ ます 。 
負 の nlines を 指定 する と 、 カーソル の ある 行 以降 の nlines を 削除 し 、 削除 さ れ た 行 の 後ろ に 続く 内容 が 上 に 来 ます 。 
その 下 に ある nlines は 消去 さ れ ます 。 
現在 の カーソル 位置 は そのまま です 。 
カーソル の 下 に 空 行 を 1 行 入れ ます 。 
それ 以降 の 行 は 1 行 づつ 下 に 移動 し ます 。 
文字 列 を カーソル の 下 に ある 文字 の 前 に ( 一 行 に 収まる だけ ) 最大 n 文字 挿入 し ます 。 
n が ゼロ または 負 の 値 の 場合 、 文字 列 全体 が 挿入 さ れ ます 。 カーソル の 右 に ある 全て の 文字 は 右 に 移動 し 、 行 の 左端 に ある 文字 は 失わ れ ます 。 
カーソル 位置 は ( y 、 x が 指定 さ れ て い た 場合 は そこ に 移動 し ます が 、 その後 は ) 変化 し ませ ん 。 
キャラクタ 文字 列 を ( 行 に 収まる だけ ) カーソル より 前 に 挿入 し ます 。 
カーソル の 右側 に ある 文字 は 全て 右 に シフト し 、 行 の 右端 の 文字 は 失わ れ ます 。 
現在 の カーソル 位置 、 または y , x が 指定 さ れ て いる 場合 に は その 場所 から 始まる キャラクタ 文字 列 を ウィンドウ から 抽出 し て 返し ます 。 
属性 は 文字 から 剥ぎ 取ら れ ます 。 
n が 指定 さ れ た 場合 、 instr () は ( 末尾 の NUL 文字 を 除い て ) 最大 で n 文字 まで の 長 さ から なる 文字 列 を 返し ます 。 is _ linetouched 
指定 し た 行 が 、 最後 に refresh () を 呼ん だ 時 から 変更 さ れ て いる 場合 に 真 を 返し ます ; そう で ない 場合 に は 偽 を 返し ます 。 
line が 現在 の ウィンドウ 上 の 有効 な 行 で ない 場合 、 curses . error 例外 を 送出 し ます 。 
指定 し た ウィンドウ が 、 最後 に refresh () を 呼ん だ 時 から 変更 さ れ て いる 場合 に 真 を 返し ます ; そう で ない 場合 に は 偽 を 返し ます 。 
yes が 1 の 場合 、 ある 種 の キー ( キー パッド や ファンクション キー ) によって 生成 さ れ た エスケープ シーケンス は curses で 解釈 さ れ ます 。 yes が 0 の 場合 、 エスケープ シーケンス は 入力 ストリーム に そのまま の 状態 で 残さ れ ます 。 
yes が 0 の 場合 、 カーソル は 更新 の 際 に 常に `` カーソル 位置 '' に 移動 し ます 。 
カーソル を ( new _ y , new _ x ) に 移動 し ます 。 
ウィンドウ を 親 ウィンドウ の 中 で 移動 し ます 。 
ウィンドウ の スクリーン 相対 と なる パラメタ 群 は 変化 し ませ ん 。 
この ルーチン は 親 ウィンドウ の 一部 を スクリーン 上 の 同じ 物理 位置 に 表示 する 際 に 用い られ ます 。 
ウィンドウ の 左上 角 が ( new _ y , new _ x ) に なる よう に 移動 し ます 。 
yes が 1 の 場合 、 getch () は 非 ブロック で 動作 し ます 。 
yes が 1 の 場合 、 エスケープ シーケンス は タイム アウト し なく なり ます 。 yes が 0 の 場合 、 数 ミリ 秒間 の 間 エスケープ シーケンス は 解釈 さ れ ず 、 入力 ストリーム 中 に そのまま の 状態 で 残さ れ ます 。 
更新 を マーク は し ます が 待機 し ます 。 
この 関数 は ウィンドウ の データ 構造 を 表現 し たい 内容 を 反映 する よう に 更新 し ます が 、 物理 スクリーン 上 に 反映 さ せる ため の 強制 更新 を 行い ませ ん 。 
更新 を 行う ため に は doupdate () を 呼び出し ます 。 
ウィンドウ を destwin の 上 に 重ね 書き ( overlay ) し ます 。 
ウィンドウ は 同じ サイズ で ある 必要 は なく 、 重なっ て いる 領域 だけ が 複写 さ れ ます 。 
destwin の 上 に ウィンドウ の 内容 を 上書き ( overwrite ) し ます 。 
ウィンドウ は 同じ サイズ で ある 必要 は なく 、 重なっ て いる 領域 だけ が 複写 さ れ ます 。 
ウィンドウ に 関連付け られ て いる 全て の データ を 与え られ た ファイル オブジェクト に 書き込み ます 。 
この 情報 は 後 に getwin () 関数 を 使っ て 取得 する こと が でき ます 。 
beg 行 から 始まる num スクリーン 行 の 表示 内容 が 壊れ て おり 、 次 の refresh () 呼び出し で 完全 に 再 描画 さ れ なけれ ば なら ない こと を 通知 し ます 。 
ウィンドウ 全体 を 更新 ( touch ) し 、 次 の refresh () 呼び出し で 完全 に 再 描画 さ れる よう に し ます 。 
ディスプレイ を 即時 更新 し ( 現実 の ウィンドウ と これ まで の 描画 / 削除 メソッド の 内容 と の 同期 を とり ) ます 。 6 つ の オプション 引数 は ウィンドウ が newpad () で 生成 さ れ た 場合 に のみ 指定 する こと が でき ます 。 
追加 の 引数 は パッド や スクリーン の どの 部分 が 含ま れる の か を 示す ため に 必要 です 。 
pminrow および pmincol に は パッド が 表示 さ れ て いる 矩形 の 左 上角 を 指定 し ます 。 sminrow , smincol , smaxrow , および smaxcol に は 、 スクリーン 上 に 表示 さ れる 矩形 の 縁 を 指定 し ます 。 
パッド 内 に 表示 さ れる 矩形 の 右 下角 は スクリーン 座標 から 計算 さ れる ので 、 矩形 は 同じ サイズ で なけれ ば なり ませ ん 。 
矩形 は 両方 とも 、 それぞれ の ウィンドウ 構造 内 に 完全 に 含ま れ て い なけれ ば なり ませ ん 。 
pminrow , pmincol , sminrow , または smincol に 負 の 値 を 指定 する と 、 ゼロ を 指定 し た もの として 扱わ れ ます 。 
スクリーン または スクロール 領域 を 上 に lines 行 スクロール し ます 。 
ウィンドウ の カーソル が 、 最下 行 で 改行 を 行っ たり 最後 の 文字 を 入力 し たり し た 結果 、 ウィンドウ や スクロール 領域 の 縁 から はみ出し て 移動 し た 際 の 動作 を 制御 し ます 。 
flag が 偽 の 場合 、 カーソル は 最下 行 に そのまま に し て おか れ ます 。 
flag が 真 の 場合 、 ウィンドウ は 1 行 上 に スクロール し ます 。 
端末 の 物理 スクロール 効果 を 得る ため に は idlok () も 呼び出す 必要 が ある ので 注意 し て ください 。 
スクロール 領域 を top から bottom に 設定 し ます 。 
スクロール 動作 は 全て この 領域 で 行わ れ ます 。 
A _ STANDOUT 属性 を オフ に し ます 。 
端末 によって は 、 この 操作 で 全て の 属性 を オフ に する 副作用 が 発生 し ます 。 
A _ STANDOUT 属性 を オン に し ます 。 
左上 の 角 が ( begin _ y , begin _ x ) に あり 、 幅 / 高 さ が それぞれ ncols / nlines で ある よう な サブ ウィンドウ を 返し ます 。 
左上 の 角 が ( begin _ y , begin _ x ) に あり 、 幅 / 高 さ が それぞれ ncols / nlines で ある よう な サブ ウィンドウ を 返し ます 。 
標準 の 設定 で は 、 サブ ウィンドウ は 指定 さ れ た 場所 から ウィンドウ の 右 下角 まで 広がり ます 。 
この ウィンドウ の 上位 の ウィンドウ の いずれ か で 更新 ( touch ) さ れ た 各 場所 を この ウィンドウ 内 で も 更新 し ます 。 
この ルーチン は refresh () から 呼び出さ れる ので 、 手動 で 呼び出す 必要 は ほとんど ない はず です 。 
flag を 真に し て 呼び出す と 、 ウィンドウ が 変更 さ れ た 際 は 常に syncup () を 自動的 に 呼ぶ よう に なり ます 。 
ウィンドウ 内 で 更新 ( touch ) し た 場所 を 、 上位 の 全て の ウィンドウ 内 で も 更新 し ます 。 
ウィンドウ の ブロック または 非 ブロック 読み込み 動作 を 設定 し ます 。 
delay が 負 の 場合 、 ブロック 読み出し が 使わ れ 、 入力 を 無 期限 で 待ち受け ます 。 
delay が ゼロ の 場合 、 非 ブロック 読み出し が 使わ れ 、 入力 待ち の 文字 が ない 場合 getch () は - 1 を 返し ます 。 
delay が 正 の 値 で あれ ば 、 getch () は delay ミリ 秒間 ブロック し 、 ブロック 後 の 時点 で 入力 が ない 場合 に は - 1 を 返し ます 。 
start から 始まる count 行 が 変更 さ れ た か の よう に 振舞わ せ ます 。 
描画 を 最適 化 する ため に 、 全て の ウィンドウ が 変更 さ れ た か の よう に 振舞わ せ ます 。 
ウィンドウ 内 の 全て の 行 を 、 最後 に refresh () を 呼ん だ 際 から 変更 さ れ て い ない もの として マーク し ます 。 
( y , x ) から 始まり 、 n の 長 さ を 持つ 、 文字 ch で 作ら れる 垂直 線 を 表示 し ます 。 
curses . panel で は 以下 の 関数 を 定義 し て い ます : 
パネル スタック の 最 下層 の パネル を 返し ます 。 
与え られ た ウィンドウ win に 関連付け られ た パネル オブジェクト を 返し ます 。 
パネル スタック の 最 上層 の パネル を 返し ます 。 
仮想 スクリーン を パネル スタック 変更 後 の 状態 に 更新 し ます 。 
この 関数 で は curses . doupdate () を 呼ば ない ので 、 ユーザ は 自分 で 呼び出す 必要 が あり ます 。 
インスタンス が 生成 さ れ た 際 に 呼び出さ れる コンス トラクタ ( constructor ) です 。 
引数 は その クラス の コンス トラクタ 式 に 渡し た 引数 に なり ます 。 
基底 クラス が __ init __() メソッド を 持っ て いる 場合 、 導出 クラス の __ init __() メソッド で は 、 例えば " BaseClass .__ init __( self , [ args ...])" の よう に 、 必要 なら ば 明示 的 に 基底 クラス の __ init __() メソッド を 呼び出し て 、 インスタンス の 基底 クラス に 関わる 部分 が 正しく 初期 化 さ れる よう に し なけれ ば なり ませ ん 。 
コンス トラクタ に は 、 値 を 返し て は なら ない という 特殊 な 制限 が あり ます ; 値 を 返す よう に する と 、 実行 時 に TypeError の 送出 を 引き起こし ます 。 
インスタンス が 消滅 さ せ られる 際 に 呼び出さ れ ます 。 
この メソッド は デストラクタ ( destructor ) 
と も 呼ば れ ます 。 
基底 クラス が __ del __() メソッド を 持っ て いる 場合 、 導出 クラス の __ del __() メソッド で は 、 必要 なら ば 明示 的 に 基底 クラス の __ del __() メソッド を 呼び出し て 、 インスタンス の 基底 クラス に 関わる 部分 が 正しく 消滅 処理 さ れる よう に し なけれ ば なり ませ ん 。 
__ del __() メソッド で インスタンス に対する 新た な 参照 を 作る こと で 、 インスタンス の 消滅 を 遅らせる こと が でき ます ( と は いえ 、 推奨 し ませ ん !)。 
この よう に する と 、 新た に 作成 さ れ た 参照 が その後 削除 さ れ た 際 に もう一度 __ del __() メソッド が 呼び出さ れ ます 。 
インタプリタ が 終了 する 際 に 残っ て いる オブジェクト に対して 、 __ del __() メソッド が 呼び出さ れる 保証 は あり ませ ん 。 
注意 :" del x " は 直接 x .__ del __() を 呼び出し ませ ん -- 前者 は x へ の 参照 カウント ( reference count ) を 1 つ 減らし 、 後者 は x へ の 参照 カウント が ゼロ に なっ た 際 に のみ 呼び出さ れ ます 。 
ごみ オブジェクト と 化し た 循環 参照 は 、 オプション の 循環 参照 検出 機構 ( cycle detector ) が 有効 に さ れ て いる 場合 ( これ は デフォルト の 設定 です ) に は 検出 さ れ ます が 、 検出 さ れ た 循環 参照 を 消去 する の は Python レベル で __ del __() メソッド が 定義 さ れ て い ない 場合 だけ です 。 
__ del __() メソッド が 循環 参照 検出 機構 で どの よう に 扱わ れる か 、 とりわけ garbage 値 の 記述 に関して は 、 
また 、 ( 例えば プログラム の 実行 終了 による ) モジュール の 削除 に 伴っ て __ del __() が 呼び出さ れる 際 に は 、 __ del __() メソッド が 参照 し て いる 他 の グローバル 変数 は すでに 削除 さ れ て いる かも しれ ませ ん 。 
この 理由 から 、 __ del __() メソッド で は 外部 の 不変 関係 を 維持 する 上 で 絶対 最低限 必要 な こと だけ を す べき です 。 
バージョン 1 . 5 から は 、 単一 の アンダー スコア で 始まる よう な グローバル 変数 は 、 他 の グローバル 変数 が 削除 さ れる 前 に モジュール から 削除 さ れる よう に Python 側 で 保証 し て い ます ; これら の アンダー スコア 付き グローバル 変数 は 、 __ del __() が 呼び出さ れ た 際 に 、 import さ れ た モジュール が まだ 残っ て いる か 確認 する 上 で 役に立ち ます 。 
組み込み 関数 repr () 
や 、 文字 列 へ の 変換 ( 逆 クオート 表記 : reverse quote ) の 際 に 呼び出さ れ 、 オブジェクト を 表す `` 公式 の ( official )'' 文字 列 を 計算 し ます 。 
可能 な 場合 に は 、 この 値 は 同じ 値 を 持っ た オブジェクト を ( 適切 な 環境 で ) 再 生成 する ため に 使える よう な 有効 な Python 式 に 似せる べき です 。 
それ が 不可能 なら 、 "... some usefuldescription ..." 形式 の 文字 列 を 返し て ください 。 
戻り 値 は 文字 列 オブジェクト で なけれ ば なり ませ ん 。 クラス が __ repr __() を 定義 し て いる が __ str __() を 定義 し て い ない 場合 、 その クラス の インスタンス に対する `` 非公式 の ( informal )'' 文字 列 表現 が 必要 な とき に も __ repr __() が 使わ れ ます 。 
この 関数 は デバッグ の 際 に よく 用い られる ので 、 たくさん の 情報 を 含み 、 あいまい で ない よう な 表記 に する こと が 重要 です 。 
組み込み 関数 str () 
および print 
文 によって 呼び出さ れ 、 オブジェクト を 表す `` 非公式 の '' 文字 列 を 計算 し ます 。 
この メソッド は 、 有効 な Python 式 を 返さ なく て も 良い という 点 で 、 __ repr __() と 異なり ます : その 代わり 、 より 便利 で 分かり やすい 表現 を 返す よう に し て ください 。 
戻り 値 は 文字 列 オブジェクト で なけれ ば なり ませ ん 。 
は x .__ lt __( y ) を 呼び出し ます ; 
は 
x .__ le __( y ) を 呼び出し ます ; 
は 
x .__ eq __( y ) を 呼び出し ます ; 
は x .__ gt __( y ) を 呼び出し ます ; 
x .__ ge __( y ) を 呼び出し ます 。 
すなわち 、 x == y 
が 真 で ある 場合 、 暗黙 の うち に 
が 偽 に なる わけ で は あり ませ ん 。 
与え られ た 引数 ペア の 間 で 演算 が 実装 さ れ て い ない 場合 、 拡張 比較 メソッド は NotImplemented を 返し ます 。 
拡張 比較 ( 上 参照 ) が 定義 さ れ て い ない 場合 、 比較 演算 によって 呼び出さ れ ます 。 
self other で ある 場合 に は 負 の 値 、 self == other なら ば ゼロ 、 self other で あれ ば 正 の 値 を 返さ なけれ ば なり ませ ん 。 
演算 __ cmp __() 、 __ eq __() および __ ne __() が いずれ も 定義 さ れ て い ない 場合 、 クラス インスタンス は オブジェクト の アイデンティティ (`` アドレス '') で 比較 さ れ ます 。 
自作 の 比較 演算 を サポート する オブジェクト や 、 辞書 の キー として 使える オブジェクト を 生成 する に は 、 __ hash __() に関する 記述 を 参照 し て ください 。 ( 注意 : __ cmp __() が 例外 を 伝播 し ない という 制限 は Python 1 . 5 から 除去 さ れ まし た 。 
バージョン 2 . 1 で 変更 さ れ た 仕様 : もはや サポート さ れ て い ませ ん 
辞書 演算 における ハッシュ 値 として 利用 できる 、 32 ビット の 整数 を 返さ なけれ ば なり ませ ん 。 
この メソッド に 必要 な 性質 は 、 比較 結果 が 等価 で ある オブジェクト は 同じ ハッシュ 値 を もつ という こと です ; オブジェクト 間 で 比較 を 行う 際 に は 、 オブジェクト の 各 要素 に対する ハッシュ 値 を ( 排他 的 論理 和 を とる など し て ) 何らかの 方法 で 混合 する よう 勧め ます 。 
クラス が __ cmp __() メソッド を 定義 し て い ない 場合 、 __ hash __() メソッド も 定義 し て は なり ませ ん ; クラス が __ cmp __() または __ eq __() を 定義 し て いる が 、 __ hash __() を 定義 し て い ない 場合 、 インスタンス を 辞書 の キー として 使う こと は でき ませ ん 。 クラス が 変更 可能 な オブジェクト を 定義 し て おり 、 __ cmp __() または __ eq __() メソッド を 実装 し て いる 場合 、 __ hash __() を 定義 し て は なり ませ ん 。 
これ は 、 辞書 の 実装 において ハッシュ 値 が 変更 不能 で ある こと が 要求 さ れ て いる から です ( オブジェクト の ハッシュ 値 が 変化 する と 、 キー が 誤っ た ハッシュ バケツ : hash bucket に 入っ て いる こと に なっ て しまい ます )。 
真 値 テスト や 組み込み 演算 bool () を 実現 する ため に 呼び出さ れ ます ; False または True か 、 等価 な 整数 値 0 または 1 を 返さ なけれ ば なり ませ ん 。 この メソッド が 定義 さ れ て い ない 場合 、 __ len __() ( 下記 参照 ) が 定義 さ れ て いれ ば 呼び出さ れ ます 。 
__ len __() と __ nonzero __() の どちら も クラス で 定義 さ れ て い ない 場合 、 その クラス の インスタンス は すべて 真 の 値 を 持つ もの と みなさ れ ます 。 
組み込み 関数 unicode () を 実現 する ため に 呼び出さ れ ます 。 
Unicode オブジェクト を 返さ なけれ ば なり ませ ん 。 
この メソッド が 定義 さ れ て い なけれ ば 、 文字 列 へ の 変換 が 試み られ 、 その 結果 が デフォルト の 文字 エン コード を 用い て Unicode に 変換 さ れ ます 。 
7 . 3 Cygwin で の 作業 多く の パッケージ は Cygwin 環境 下 で の インストール が 難しい ため に 、 Cygwin 用 に 必要 な ツール の Cygwin 環境 下 で の インストール は 少し 厄介 です 。 
Cygwin インストーラ を 使っ て 、 Cygwin の インストール によって Perl 、 Python 、 そして TeX パッケージ が 入っ て いる こと を 確認 し て ください 。 
Perl と Python は インストーラ の Interpreters セクション の 下 に 配置 さ れ て い ます 。 TeX パッケージ は Text セクション の 下 です ; tetex - beta 、 texmkf 、 texmf - base 、 および texmf - extra を インストール する と 、 必要 な 全て の パッケージ を 利用 できる よう に なり ます 。 
説明 に従って インストール し て ください 。 
LaTeX 2 HTML は ソース アーカイブ から の インストール も でき ます が 、 配布 物 中 の ある ファイル を いじっ て から で ない と でき ませ ん 。 
展開 し た 配布 物 の トップ レベル に ある L 2 hos . pm を 編集 し て ください ; ファイル の 末尾 近く に ある 、 $^ O という テキスト を ' unix ' に 変更 し て ください 。 
以下 の コマンド を 使っ て ソフトウェア を ビルド し て インストール し ます : 
これ で 少なくとも DVI 、 HTML 、 PDF 、 および PostScript 形式 版 の フォーマット 済み ドキュメント を ビルド でき ます 。 
3 . 1 オブジェクト 、 値 、 および 型 
3 . 3 . 2 . 1 新しい 形式 の クラス の ため の 別 の 属性 アクセス 
date オブジェクト は 日付 ( 年 、 月 、 および 日 ) を 表し ます 。 日付 は 理想 的 な カレンダー 、 すなわち 現在 の グレゴリオ 暦 を 過去 と 未来 の 両方向 に 無限 に 延長 し た もの で 表さ れ ます 。 
1 年 の 1 月 1 日 は 日 番号 1 、 1 年 1 月 2 日 は 日 番号 2 、 と なっ て いき ます 。 
この 暦法 は 、 全て の 計算 における 基本 カレンダー で ある 、 Dershowitz と Reingold の 書籍 Calendrical Calculations における " 予期 的 グレゴリオ ( proleptic Gregorian )" 暦 の 定義 に 一致 し ます 。 
クラス date 
全て の 引数 が 必要 です 。 
引数 は 整数 で も 長 整数 で も よく 、 以下 の 範囲 に 入ら なけれ ば なり ませ ん : 
1 = day = 指定 さ れ た 月 と 年 における 日数 
範囲 を 超え た 引数 を 与え た 場合 、 ValueError が 送出 さ れ ます 。 
他 の コンス トラクタ 、 および 全て の クラス メソッド を 以下 に 示し ます : 
現在 の ローカル な 日付 を 返し ます 。 
date . fromtimestamp ( time . time ()) と 等価 です 。 
time . time () が 返す よう な POSIX タイム スタンプ に 対応 する 、 ローカル な 日付 を 返し ます 。 
タイム スタンプ が プラットフォーム における C 関数 localtime () で サポート さ れ て いる 範囲 を 超え て いる 場合 に は ValueError を 送出 する こと が あり ます 。 
この 値 は よく 1970 年 から 2038 年 に 制限 さ れ て いる こと が あり ます 。 
うるう 秒 が タイム スタンプ の 概念 に 含ま れ て いる 非 POSIX システム で は 、 fromtimestamp () は うるう 秒 を 無視 し ます 。 
予期 的 グレゴリオ 暦 順序 に 対応 する 日付 を 表し 、 1 年 1 月 1 日 が 序 数 1 と なり ます 。 
1 = ordinal = date . max . toordinal () で ない 場合 、 ValueError が 送出 さ れ ます 。 
任意 の 日付 d に対し 、 date . fromordinal ( d . toordinal ()) == d と なり ます 。 
以下 に クラス 属性 を 示し ます : 
表現 できる 最も 古い 日付 で 、 date ( MINYEAR , 1 , 1 ) です 。 
表現 できる 最も 新しい 日付 で 、 date ( MAXYEAR , 12 , 31 ) です 。 
等しく ない 日付 オブジェクト 間 の 最小 の 差 で 、 timedelta ( days = 1 ) です 。 
以下 に ( 読み出し 専用 の ) インスタンス 属性 を 示し ます : 
両端 値 を 含む MINYEAR から MAXYEAR まで の 値 です 。 
両端 値 を 含む 1 から 12 まで の 値 です 。 
1 から 与え られ た 月 と 年 における 日数 まで の 値 です 。 
サポート さ れ て いる 操作 を 以下 に 示し ます : 
date 2 は から date 1 から 
timedelta . days 日 移動 し た 日付 です 。 ( 1 ) 
date 1 が 時刻 として date 2 より も 前 を 表す 場合 に 、 date 1 は date 2 より も 小さい と 見なさ れ ます 。 
date 2 は timedelta . days 0 の 場合 進む 方向 に 、 
timedelta . days 0 の 場合 戻る 方向 に 移動 し ます 。 
演算 後 は 、 
date 2 - date 1 == timedelta . days と なり ます 。 
timedelta . seconds および 
timedelta . microseconds は 無視 さ れ ます 。 
date 2 . year が MINYEAR に なっ て しまっ たり 、 MAXYEAR より 大きく なっ て しまう 場合 に は OverflowError が 送出 さ れ ます 。 
この 操作 は date 1 + (- timedelta ) と 等価 で は あり ませ ん 。 なぜ なら ば 、 date 1 - timedelta が オーバフロー し ない 場合 でも 、 - timedelta 単体 が オーバフロー する 可能 性 が ある から です 。 
timedelta . seconds および 
timedelta . microseconds は 無視 さ れ ます 。 
この 演算 は 厳密 で 、 オーバフロー し ませ ん 。 timedelta . seconds および timedelta . microseconds は 0 で 、 演算 後 に は date 2 + timedelta == date 1 と なり ます 。 
別 の 言い方 を する と 、 date 1 . toordinal () date 2 . toordinal () で あり 、 かつ その とき に 限り date 1 date 2 と なり ます 。 
型 混合 の 比較 が デフォルト の オブジェクト アドレス 比較 と なっ て しまう の を 抑止 する ため に 、 timedelta オブジェクト と 異なる 型 の オブジェクト が 比較 さ れる と TypeError が 送出 さ れ ます 。 
しかしながら 、 被 比較 演算 子 の もう 一方 が timetuple 属性 を 持つ 場合 に は NotImplemented が 返さ れ ます 。 
この フック により 、 他 種 の 日付 オブジェクト に 型 混合 比較 を 実装 する チャンス を 与え て い ます 。 そう で ない 場合 、 timedelta オブジェクト と 異なる 型 の オブジェクト が 比較 さ れる と 、 比較 演算 子 が == または != で ない かぎり TypeError が 送出 さ れ ます 。 
後者 の 場合 、 それぞれ False または True を 返し ます 。 
date オブジェクト は 辞書 の キー として 用いる こと が でき ます 。 
ブール 演算 コンテキスト で は 、 全て の date オブジェクト は 真 で ある と みなさ れ ます 。 以下 に インスタンス メソッド を 示し ます : 
キーワード 引数 で 指定 さ れ た データ メンバ が 置き換え られる こと を 除き 、 同じ 値 を 持つ date オブジェクト を 返し ます 。 
例えば 、 d == date ( 2002 , 12 , 31 ) と する と 、 d . replace ( day = 26 ) == date ( 2002 , 12 , 26 ) と なり ます 。 
時間 、 分 、 および 秒 は 0 で 、 DST フラグ は - 1 に なり ます 。 
d . timetuple () は time . struct _ time (( d . year , d . month , d . day , 0 , 0 , 0 , d . weekday (), d . toordinal () - date ( d . year , 1 , 1 ). toordinal () + 1 ,- 1 )) と 等価 です 。 
予測 的 グレゴリオ 暦 における 日付 序 数 を 返し ます 。 1 年 の 1 月 1 日 が 序 数 1 と なり ます 。 
任意 の date オブジェクト d について 、 date . fromordinal ( d . toordinal ()) == d 
と なり ます 。 
月曜日 を 0 、 日曜日 を 6 として 、 曜日 を 整数 で 返し ます 。 
例えば 、 date ( 2002 , 12 , 4 ). weekday () == 2 で あり 、 水曜日 を 示し ます 。 
isoweekday () も 参照 し て ください 。 
月曜日 を 1 、 日曜日 を 7 として 、 曜日 を 整数 で 返し ます 。 
例えば 、 date ( 2002 , 12 , 4 ). weekday () == 3 で あり 、 水曜日 を 示し ます 。 
weekday ()、 isocalendar () も 参照 し て ください 。 
細かい 説明 について は http :// www . phys . uu . nl /~ vgent / calendar / isocalendar . htm を 参照 し て ください 。 
ISO 年 は 完全 な 週 が 52 または 53 週 あり 、 週 は 月曜 から 始まっ て 日曜 に 終わり ます 。 ISO 年 で の ある 年 における 最初 の 週 は 、 その 年 の 木曜日 を 含む 最初 の ( グレゴリオ 暦 で の ) 週 と なり ます 。 
この 週 は 週番 号 1 と 呼ば れ 、 この 木曜日 で の ISO 年 は グレゴリオ 暦 における 年 と 等しく なり ます 。 
例えば 、 2004 年 は 木曜日 から 始まる ため 、 ISO 年 の 最初 の 週 は 2003 年 12 月 29 日 、 月曜日 から 始まり 、 2004 年 1 月 4 日 、 日曜日 に 終わり ます 。 
従って 、 date ( 2003 , 12 , 29 ). isocalendar () == ( 2004 , 1 , 1 ) で あり 、 かつ date ( 2004 , 1 , 4 ). isocalendar () == ( 2004 , 1 , 7 ) と なり ます 。 
ISO 8601 形式 、 ' YYYY - MM - DD ' の 日付 を 表す 文字 列 を 返し ます 。 
例えば 、 date ( 2002 , 12 , 4 ). isoformat () == ' 2002 - 12 - 04 ' と なり ます 。 
date オブジェクト d において 、 str ( d ) は 
d . isoformat () と 等価 です 。 
日付 を 表す 文字 列 を 、 例えば date ( 2002 , 12 , 4 ). ctime () == ' Wed Dec 4 00 : 00 : 00 2002 ' の よう に し て 返し ます 。 
ネイティブ の C 関数 ctime () ( time . ctime () は この 関数 を 呼び出し ます が 、 date . ctime () は 呼び出し ませ ん ) が C 標準 に 準拠 し て いる プラットフォーム で は 、 d . ctime () は time . ctime ( time . mktime ( d . timetuple ())) と 等価 です 。 
明示 的 な 書式 化 文字 列 で 制御 さ れ た 、 日付 を 表現 する 文字 列 を 返し ます 。 
時間 、 分 、 秒 を 表す 書式 化 コード は 値 0 に なり ます 。 strftime () の ふるまい について の セクション を 参照 し て ください 。 
datetime オブジェクト は date オブジェクト および time オブジェクト の 全て の 情報 が 入っ て いる 単一 の オブジェクト です 。 
date オブジェクト と 同様 に 、 datetime は 現在 の グレゴリオ 暦 が 両 方向 に 延長 さ れ て いる もの と 仮定 し ます ; また 、 time オブジェクト と 同様 に 、 datetime は 毎日 が 厳密 に 3600 * 24 秒 で ある と 仮定 し ます 。 
以下 に コンス トラクタ を 示し ます : クラス datetime 
年 、 月 、 および 日 の 引数 は 必須 です 。 tzinfo は None または tzinfo クラス の サブ クラス の インスタンス に する こと が でき ます 。 
残り の 引数 は 整数 または 長 整数 で 、 以下 の よう な 範囲 に 入り ます : 
1 = day = 与え られ た 年 と 月 における 日数 
引数 が これら の 範囲 外 に ある 場合 、 ValueError が 送出 さ れ ます 。 
その他 の コンス トラクタ 、 および クラス メソッド を 以下 に 示し ます : 
現在 の ローカル な datetime を tzinfo が None で ある もの として 返し ます 。 
これ は datetime . fromtimestamp ( time . time ()) と 等価 です 。 now ()、 fromtimestamp () も 参照 し て ください 。 
現在 の ローカル な 日付 および 時刻 を 返し ます 。 
オプション の 引数 tz が None で ある か 指定 さ れ て い ない 場合 、 この メソッド は today () と 同様 です が 、 可能 なら ば time . time () タイム スタンプ を 通じ て 得る こと が できる より 高い 精度 で 時刻 を 提供 し ます ( 例えば 、 プラットフォーム が C 関数 gettimeofday () を サポート する 場合 に は 可能 な こと が あり ます )。 
そう で ない 場合 、 tz は クラス tzinfo の サブ クラス の インスタンス で なけれ ば なら ず 、 現在 の 日付 および 時刻 は tz の タイム ゾーン に 変換 さ れ ます 。 
この 場合 、 結果 は 
tz . fromutc ( datetime . utcnow (). replace ( tzinfo = tz )) と 等価 に なり ます 。 
today (), utcnow () も 参照 し て ください 。 
現在 の UTC における 日付 と 時刻 を 、 tzinfo が None で ある もの として 返し ます 。 
この メソッド は now () に 似 て い ます が 、 現在 の UTC における 日付 と 時刻 を naive な datetime オブジェクト として 返し ます 。 now () も 参照 し て ください 。 
time . time () が 返す よう な 、 POSIX タイム スタンプ に 対応 する ローカル な 日付 と 時刻 を 返し ます 。 
オプション の 引数 tz が None で ある か 、 指定 さ れ て い ない 場合 、 タイム スタンプ は プラットフォーム の ローカル な 日付 および 時刻 に 変換 さ れ 、 返さ れる datetime オブジェクト は naive な もの に なり ます 。 そう で ない 場合 、 tz は クラス tzinfo の サブ クラス の インスタンス で なけれ ば なら ず 、 現在 の 日付 および 時刻 は tz の タイム ゾーン に 変換 さ れ ます 。 
この 場合 、 結果 は 
tz . fromutc ( datetime . utcfromtimestamp ( timestamp ). replace ( tzinfo = tz )) と 等価 に なり ます 。 
タイム スタンプ が プラットフォーム の C 関数 localtime () や gmtime () で サポート さ れ て いる 範囲 を 超え た 場合 、 fromtimestamp () は ValueError を 送出 する こと が あり ます 。 
time . time () が 返す よう な POSIX タイム スタンプ に 対応 する 、 UTC で の datetime オブジェクト を 返し ます 。 タイム スタンプ が プラットフォーム における C 関数 localtime () で サポート さ れ て いる 範囲 を 超え て いる 場合 に は ValueError を 送出 する こと が あり ます 。 
この 値 は よく 1970 年 から 2038 年 に 制限 さ れ て いる こと が あり ます 。 fromtimestamp () も 参照 し て ください 。 
1 年 1 月 1 日 を 序 数 1 と する 予測 的 グレゴリオ 暦 序 数 に 対応 する datetime オブジェクト を 返し ます 。 1 = ordinal = datetime . max . toordinal () で ない かぎり ValueError が 送出 さ れ ます 。 
結果 として 返さ れる オブジェクト の 時間 、 分 、 秒 、 および マイクロ 秒 は すべて 0 と なり 、 tzinfo は None と なり ます 。 
与え られ た date オブジェクト と 同じ データ メンバ を 持ち 、 時刻 と tzinfo メンバ が 与え られ た time オブジェクト と 等しい 、 新た な datetime オブジェクト を 返し ます 。 
任意 の datetime オブジェクト d について 、 d == datetime . combine ( d . date (), d . timetz ()) と なり ます 。 
date が datetime オブジェクト の 場合 、 その 時刻 と tzinfo は 無視 さ れ ます 。 
表現 できる 最も 古い datetime で 、 datetime ( MINYEAR , 1 , 1 , tzinfo = None ) です 。 
表現 できる 最も 新しい datetime で 、 datetime ( MAXYEAR , 12 , 31 , 23 , 59 , 59 , 999999 , tzinfo = None ) です 。 
等しく ない datetime オブジェクト 間 の 最小 の 差 で 、 timedelta ( microseconds = 1 ) です 。 
range ( 24 ) 内 の 値 です 。 
range ( 60 ) 内 の 値 です 。 
range ( 1000000 ) 内 の 値 です 。 
datetime コンス トラクタ に tzinfo 引数 として 与え られ た オブジェクト に なり 、 何 も 渡さ れ なかっ た 場合 に は None に なり ます 。 
以下 に サポート さ れ て いる 演算 を 示し ます : 
datetime を datetime と 比較 し ます 。 ( 4 ) 
datetime 2 は datetime 1 から 時間 timedelta 移動 し た もの で 、 
timedelta . days 0 の 場合 進む 方向 に 、 
timedelta . days 0 の 場合 戻る 方向 に 移動 し ます 。 
datetime から datetime の 減算 は 両方 の 被 演算 子 が naive で ある か 、 両方 とも aware で ある 場合 に のみ 定義 さ れ て い ます 片方 が aware で もう 一方 が naive の 場合 、 TypeError が 送出 さ れ ます 。 
両方 とも naive か 、 両方 とも aware で 同じ tzinfo メンバ を 持つ 場合 、 tzinfo メンバ は 無視 さ れ 、 結果 は 
datetime 2 + t == datetime 1 で ある よう な timedelta オブジェクト t と なり ます 。 
この 場合 タイム ゾーン 修正 は 全く 行わ れ ませ ん 。 
両方 が aware で 異なる tzinfo メンバ を 持つ 場合 、 a - b は a および b を まず naive な UTC datetime オブジェクト に 変換 し た か の よう に し て 行い ます 。 
演算 結果 は 決して オーバフロー を 起こさ ない こと を 除き 、 ( a . replace ( tzinfo = None ) - a . utcoffset ()) -( b . replace ( tzinfo = None ) - b . utcoffset ()) と 同じ に なり ます 。 
datetime 1 が 時刻 として datetime 2 より も 前 を 表す 場合 に 、 datetime 1 は datetime 2 より も 小さい と 見なさ れ ます 。 被 演算 子 の 片方 が naive で もう 一方 が aware の 場合 、 TypeError が 送出 さ れ ます 。 
両方 の 被 演算 子 が aware で 、 同じ tzinfo メンバ を 持つ 場合 、 共通 の tzinfo メンバ は 無視 さ れ 、 基本 の datetime 間 の 比較 が 行わ れ ます 。 
両方 の 被 演算 子 が aware で 異なる tzinfo メンバ を 持つ 場合 、 被 演算 子 は まず ( self . utcoffset () で 得 られる ) UTC オフセット で 修正 さ れ ます 。 
注意 : 型 混合 の 比較 が デフォルト の オブジェクト アドレス 比較 と なっ て しまう の を 抑止 する ため に 、 被 演算 子 の もう 一方 が datatime オブジェクト と 異なる 型 の オブジェクト の 場合 に は TypeError が 送出 さ れ ます 。 
しかしながら 、 被 比較 演算 子 の もう 一方 が timetuple 属性 を 持つ 場合 に は NotImplemented が 返さ れ ます 。 
この フック により 、 他 種 の 日付 オブジェクト に 型 混合 比較 を 実装 する チャンス を 与え て い ます 。 
そう で ない 場合 、 datetime オブジェクト と 異なる 型 の オブジェクト が 比較 さ れる と 、 比較 演算 子 が == または != で ない かぎり TypeError が 送出 さ れ ます 。 
後者 の 場合 、 それぞれ False または True を 返し ます 。 
datetime オブジェクト は 辞書 の キー として 用いる こと が でき ます 。 
ブール 演算 コンテキスト で は 、 全て の datetime オブジェクト は 真 で ある と みなさ れ ます 。 インスタンス メソッド を 以下 に 示し ます : 
同じ 年 、 月 、 日 の date オブジェクト を 返し ます 。 
同じ 時 、 分 、 秒 、 マイクロ 秒 を 持つ time オブジェクト を 返し ます 。 tzinfo は None です 。 
timetz () も 参照 し て ください 。 
同じ 時 、 分 、 秒 、 マイクロ 秒 、 および tzinfo メンバ を 持つ time オブジェクト を 返し ます 。 
time () メソッド も 参照 し て ください 。 
キーワード 引数 で 指定 し た メンバ の 値 を 除き 、 同じ 値 を もつ datetime オブジェクト を 返し ます 。 
メンバ に対する 変換 を 行わ ず に aware な datetime オブジェクト から naive な datetime オブジェクト を 生成 する ため に 、 tzinfo = None を 指定 する こと も でき ます 。 
tz は tzinfo の サブ クラス の インスタンス で なけれ ば なら ず 、 インスタンス の utcoffset () および dst () メソッド は None を 返し て は なり ませ ん 。 
self は aware で なく て は なり ませ ん ( 
self . tzinfo が None で あっ て は なら ず 、 かつ 
self . utcoffset () は None を 返し て は なり ませ ん )。 
self . tzinfo が tz の 場合 、 
self . astimezone ( tz ) は self に 等しく なり ます : 日付 および 時刻 データ メンバ に対する 調整 は 行わ れ ませ ん 。 そう で ない 場合 、 結果 は タイム ゾーン tz における ローカル 時刻 で 、 self と 同じ UTC 時刻 を 表す よう に なり ます : 
astz = dt . astimezone ( tz ) と し た 後 、 
astz - astz . utcoffset () は 通常 dt - dt . utcoffset () と 同じ 日付 および 時刻 データ メンバ を 持ち ます 。 
tzinfo クラス に関する 議論 で は 、 夏時間 ( Daylight Saving time ) の 遷移 境界 で は 上 の 等価 性 が 成り立た ない こと を 説明 し て い ます ( tz が 標準時 と 夏時間 の 両方 を モデル 化 し て いる 場合 のみ の 問題 です )。 単に タイムゾーンオブジェクト tz を datetime オブジェクト dt に 追加 し たい だけ で 、 日付 や 時刻 データ メンバ へ の 調整 を 行わ ない の なら 、 
dt . replace ( tzinfo = tz ) を 使っ て ください 。 
単に aware な datetime オブジェクト dt から タイムゾーンオブジェクト を 除去 し たい だけ で 、 日付 や 時刻 データ メンバ の 変換 を 行わ ない の なら 、 dt . replace ( tzinfo = None ) を 使っ て ください 。 
デフォルト の tzinfo . fromutc () メソッド を tzinfo の サブ クラス で 上書き し て 、 astimezone () が 返す 結果 に 影響 を 及ぼす こと が でき ます 。 
エラー の 場合 を 無視 する と 、 astimezone () は 以下 の よう に 動作 し ます : 
tzinfo が None の 場合 、 None を 返し 、 そう で ない 場合 に は 
self . tzinfo . utcoffset ( self ) を 返し ます 。 
後者 の 式 が None か 、 1 日 以下 の 大き さ を 持つ 経過 時間 を 表す timedelta オブジェクト の いずれ か を 返さ ない 場合 に は 例外 を 送出 し ます 。 
self . tzinfo . dst ( self ) を 返し ます 。 
後者 の 式 が None か 、 1 日 以下 の 大き さ を 持つ 経過 時間 を 表す timedelta オブジェクト の いずれ か を 返さ ない 場合 に は 例外 を 送出 し ます 。 
self . tzinfo . tzname ( self ) を 返し ます 。 
後者 の 式 が None か 文字 列 オブジェクト の いずれ か を 返さ ない 場合 に は 例外 を 送出 し ます 。 
d . timetuple () は time . struct _ time (( d . year , d . month , d . day , d . hour , d . minute , d . second , d . weekday (), d . toordinal () - date ( d . year , 1 , 1 ). toordinal () + 1 , dst )) と 等価 です 。 
返さ れる タプル の tm _ isdst フラグ は dst () メソッド に従って 設定 さ れ ます : tzinfo が None か dst () が None を 返す 場合 、 tm _ isdst は - 1 に 設定 さ れ ます ; そう で ない 場合 、 dst () が ゼロ で ない 値 を 返す と 、 tm _ isdst は 1 と なり ます ; それ 以外 の 場合 に は tm _ isdst は 0 に 設定 さ れ ます 。 
datetime インスタンス d が naive の 場合 、 この メソッド は 
d . timetuple () と 同じ で あり 、 d . dst () の 返す 内容 に かかわら ず tm _ isdst が 0 に 強制 さ れる 点 だけ が 異なり ます 。 
DST が UTC 時刻 に 影響 を 及ぼす こと は 決して あり ませ ん 。 d が aware の 場合 、 d から 
d . utcoffset () が 差し引か れ て UTC 時刻 に 正規 化 さ れ 、 正規 化 さ れ た 時刻 の time . struct _ time を 返し ます 。 tm _ isdst は 0 に 強制 さ れ ます 。 
d . year が MINYEAR や MAXUEAR で 、 UTC へ の 修正 の 結果 表現 可能 な 年 の 境界 を 越え た 場合 に は 、 戻り 値 の tm _ year メンバ は MINYEAR - 1 または MAXYEAR + 1 に なる こと が あり ます 。 
予測 的 グレゴリオ 暦 における 日付 序 数 を 返し ます 。 
self . date (). toordinal () と 同じ です 。 
self . date (). weekday () と 同じ です 。 
isoweekday () も 参照 し て ください 。 
self . date (). isoweekday () と 等価 です 。 
weekday ()、 isocalendar () も 参照 し て ください 。 
3 要素 の タプル ( ISO 年 、 ISO 週番 号 、 ISO 曜日 ) を 返し ます 。 
self . date (). isocalendar () と 等価 です 。 
日付 と 時刻 を ISO 8601 形式 、 すなわち YYYY - MM - DDTHH : MM : SS . mmmmmm か 、 microsecond が 0 の 場合 に は YYYY - MM - DDTHH : MM : SS で 表し た 文字 列 を 返し ます 。 
utcoffset () が None を 返さ ない 場合 、 UTC から の オフセット を 時間 と 分 を 表し た ( 符号 付き の ) 6 文字 から なる 文字 列 が 追加 さ れ ます : すなわち 、 YYYY - MM - DDTHH : MM : SS . mmmmmm + HH : MM と なる か 、 microsecond が ゼロ の 場合 に は YYYY - MM - DDTHH : MM : SS + HH : MM と なり ます 。 オプション の 引数 sep ( デフォルト で は ' T ' です ) は 1 文字 の セパレータ で 、 結果 の 文字 列 の 日付 と 時刻 の 間 に 置か れ ます 。 
例えば 、 
と なり ます 。 __ str __ 
datetime オブジェクト d において 、 str ( d ) は 
d . isoformat (' ') と 等価 です 。 
日付 を 表す 文字 列 を 、 例えば datetime ( 2002 , 12 , 4 , 20 , 30 , 40 ). ctime () ==' Wed Dec 4 20 : 30 : 40 2002 ' の よう に し て 返し ます 。 
ネイティブ の C 関数 ctime () ( time . ctime () は この 関数 を 呼び出し ます が 、 datetime . ctime () は 呼び出し ませ ん ) が C 標準 に 準拠 し て いる プラットフォーム で は 、 d . ctime () は time . ctime ( time . mktime ( d . timetuple ())) と 等価 です 。 
明示 的 な 書式 化 文字 列 で 制御 さ れ た 、 日付 を 表現 する 文字 列 を 返し ます 。 
strftime () の ふるまい について の セクション を 参照 し て ください 。 
datetime モジュール で は 、 様々 な 日付 オブジェクト や 時刻 オブジェクト を 提供 し て い ます 。 
以下 に 示す 関数 を 使う 場合 に は 、 あらかじめ ヘッダ ファイル datetime . h を ソース に include し ( Python . h は この ファイル を include し ませ ん )、 PyDateTime _ IMPORT () マクロ を 起動 し て おく 必要 が あり ます 。 
この マクロ は 以下 の マクロ で 使わ れる 静的 変数 PyDateTimeAPI に C 構造 体 へ の ポインタ を 入れ ます 。 以下 は 型 チェック マクロ です : 
ob が PyDateTime _ DateType 型 か PyDateTime _ DateType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ DateType 型 の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ DateTimeType 型 か PyDateTime _ DateTimeType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ DateTimeType 型 の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ TimeType 型 か PyDateTime _ TimeType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ TimeType 型 の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ DeltaType 型 か PyDateTime _ DeltaType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ DeltaType 型 の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ TZInfoType 型 か PyDateTime _ TZInfoType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ob が PyDateTime _ TZInfoType 型 の オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
以下 は オブジェクト を 作成 する ため の マクロ です : 
指定 さ れ た 年 、 月 、 日 の datetime . date オブジェクト を 返し ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
指定 さ れ た 年 、 月 、 日 、 時 、 分 、 秒 、 マイクロ 秒 の datetime . datetime オブジェクト を 返し ます 。 
指定 さ れ た 時 、 分 、 秒 、 マイクロ 秒 の datetime . time オブジェクト を 返し ます 。 
指定 さ れ た 日 、 秒 、 マイクロ 秒 の datetime . timedelta オブジェクト を 返し ます 。 
マイクロ 秒 と 秒 が datetime . timedelta オブジェクト で 定義 さ れ て いる 範囲 に 入る よう に 正規 化 を 行い ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
以下 の マクロ は date オブジェクト から フィールド 値 を 取り出す ため の もの です 。 
引数 は PyDateTime _ Date または その サブ クラス ( 例えば PyDateTime _ DateTime ) の インスタンス で なけれ ば なり ませ ん 。 
引数 を NULL に し て は なら ず 、 型 チェック は 行い ませ ん : 
年 を 正 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
月 を 1 から 12 の 間 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
日 を 1 から 31 の 間 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
以下 の マクロ は datetime オブジェクト から フィールド 値 を 取り出す ため の もの です 。 
引数 は PyDateTime _ DateTime または その サブ クラス の インスタンス で なけれ ば なり ませ ん 。 引数 を NULL に し て は なら ず 、 型 チェック は 行い ませ ん : 
時 を 0 から 23 の 間 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
分 を 0 から 59 の 間 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
秒 を 0 から 59 の 間 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
マイクロ 秒 を 0 から 999999 の 間 の 整数 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
以下 の マクロ は time オブジェクト から フィールド 値 を 取り出す ため の もの です 。 
引数 は PyDateTime _ Time または その サブ クラス の インスタンス で なけれ ば なり ませ ん 。 引数 を NULL に し て は なら ず 、 型 チェック は 行い ませ ん : 
以下 の マクロ は DB API を 実装 する 上 で の 便宜 用 です : 
dateitme . datetime . fromtimestamp () に 渡す の に 適し た 引数 タプル から 新た な datetime . datetime オブジェクト を 生成 し て 返し ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 PyObject * 
dateitme . date . fromtimestamp () に 渡す の に 適し た 引数 タプル から 新た な datetime . date オブジェクト を 生成 し て 返し ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
time オブジェクト は ( ローカル の ) 日 中 時刻 を 表現 し ます 。 
この 時刻 表現 は 特定 の 日 の 影響 を 受け ず 、 tzinfo オブジェクト を 介し た 修正 の 対象 と なり ます 。 クラス time 
全て の 引数 は オプション です 。 tzinfo は None または tzinfo クラス の サブ クラス の インスタンス に する こと が でき ます 。 
残り の 引数 は 整数 または 長 整数 で 、 以下 の よう な 範囲 に 入り ます : 
tzinfo の デフォルト 値 が None で ある 以外 の デフォルト 値 は 0 です 。 
表現 できる 最も 古い datetime で 、 time ( 0 , 0 , 0 , 0 ) です 。 The earliest representable time , time ( 0 , 0 , 0 , 0 ). 
表現 できる 最も 新しい datetime で 、 time ( 23 , 59 , 59 , 999999 , tzinfo = None ) です 。 
等しく ない datetime オブジェクト 間 の 最小 の 差 で 、 timedelta ( microseconds = 1 ) です が 、 time オブジェクト 間 の 四則 演算 は サポート さ れ て い ない ので 注意 し て ください 。 
time コンス トラクタ に tzinfo 引数 として 与え られ た オブジェクト に なり 、 何 も 渡さ れ なかっ た 場合 に は None に なり ます 。 
以下 に サポート さ れ て いる 操作 を 示し ます : 
time と time の 比較 で は 、 a が 時刻 として b より も 前 を 表す 場合 に a は b より も 小さい と 見なさ れ ます 。 
被 演算 子 の 片方 が naive で もう 一方 が aware の 場合 、 TypeError が 送出 さ れ ます 。 
両方 の 被 演算 子 が aware で 、 同じ tzinfo メンバ を 持つ 場合 、 共通 の tzinfo メンバ は 無視 さ れ 、 基本 の datetime 間 の 比較 が 行わ れ ます 。 
両方 の 被 演算 子 が aware で 異なる tzinfo メンバ を 持つ 場合 、 被 演算 子 は まず ( self . utcoffset () で 得 られる ) UTC オフセット で 修正 さ れ ます 。 
型 混合 の 比較 が デフォルト の オブジェクト アドレス 比較 と なっ て しまう の を 抑止 する ため に 、 time オブジェクト が 他 の 型 の オブジェクト と 比較 さ れ た 場合 、 比較 演算 子 が == または != で ない かぎり TypeError が 送出 さ れ ます 。 
ハッシュ 化 、 辞書 の キー として の 利用 
効率 的 な pickle 化 
ブール 演算 コンテキスト で は 、 time オブジェクト は 、 分 に 変換 し 、 utfoffset () ( None を 返し た 場合 に は 0 ) を 差し引い て 変換 し た 後 の 結果 が ゼロ で ない 場合 、 かつ その とき に 限っ て 真 と みなさ れ ます 。 
以下 に インスタンス メソッド を 示し ます : 
キーワード 引数 で 指定 し た メンバ の 値 を 除き 、 同じ 値 を もつ time オブジェクト を 返し ます 。 
メンバ に対する 変換 を 行わ ず に aware な datetime オブジェクト から naive な time オブジェクト を 生成 する ため に 、 tzinfo = None を 指定 する こと も でき ます 。 
日付 と 時刻 を ISO 8601 形式 、 すなわち HH : MM : SS . mmmmmm か 、 microsecond が 0 の 場合 に は HH : MM : SS で 表し た 文字 列 を 返し ます 。 
utcoffset () が None を 返さ ない 場合 、 UTC から の オフセット を 時間 と 分 を 表し た ( 符号 付き の ) 6 文字 から なる 文字 列 が 追加 さ れ ます : すなわち 、 HH : MM : SS . mmmmmm + HH : MM と なる か 、 microsecond が 0 の 場合 に は HH : MM : SS + HH : MM と なり ます 。 
time オブジェクト t において 、 str ( t ) は 
t . isoformat () と 等価 です 。 
明示 的 な 書式 化 文字 列 で 制御 さ れ た 、 日付 を 表現 する 文字 列 を 返し ます 。 
strftime () の ふるまい について の セクション を 参照 し て ください 。 
self . tzinfo . utcoffset ( None ) を 返し ます 。 
後者 の 式 が None か 、 1 日 以下 の 大き さ を 持つ 経過 時間 を 表す timedelta オブジェクト の いずれ か を 返さ ない 場合 に は 例外 を 送出 し ます 。 
self . tzinfo . dst ( None ) を 返し ます 。 
後者 の 式 が None か 、 1 日 以下 の 大き さ を 持つ 経過 時間 を 表す timedelta オブジェクト の いずれ か を 返さ ない 場合 に は 例外 を 送出 し ます 。 
self . tzinfo . tzname ( None ) を 返し ます 。 
後者 の 式 が None か 文字 列 オブジェクト の いずれ か を 返さ ない 場合 に は 例外 を 送出 し ます 。 
timedelta オブジェクト は 経過 時間 、 すなわち 二つ の 日付 や 時刻 間 の 差 を 表し ます 。 
クラス timedelta 
全て の 引数 が オプション で 、 デフォルト 値 は 0 です 。 
引数 は 整数 、 長 整数 、 浮動 小数点 数 に する こと が でき 、 正 で も 負 でも かまい ませ ん 。 days 、 seconds および microseconds のみ が 内部 に 記憶 さ れ ます 。 
引数 は 以下 の よう に し て 変換 さ れ ます : 
1 ミリ 秒 は 1000 マイクロ 秒 に 変換 さ れ ます 。 
1 分 は 60 秒 に 変換 さ れ ます 。 
1 時間 は 3600 秒 に 変換 さ れ ます 。 
1 週間 は 7 日 に 変換 さ れ ます 。 
その後 、 日 、 秒 、 マイクロ 秒 は 値 が 一意 に 表さ れる よう に 、 
0 = seconds 3600 * 24 ( 一 日 中 の 秒 数 ) 
で 正規 化 さ れ ます 。 引数 の いずれ か が 浮動 小数点 で あり 、 小数 の マイクロ 秒 が 存在 する 場合 、 小数 の マイクロ 秒 は 全て の 引数 から 一 度 取り置か れ 、 それら の 和 は 最も 近い マイクロ 秒 に 丸め られ ます 。 
例えば 、 d = timedelta ( microseconds =- 1 ) ( d . days , d . seconds , d . microseconds )(- 1 , 86399 , 999999 ) 
クラス 属性 を 以下 に 示し ます : 
最小 の 値 を 表す timedelta オブジェクト で 、 timedelta (- 999999999 ) です 。 
最大 の 値 を 表す timedelta オブジェクト で 、 timedelta ( days = 999999999 , hours = 23 , minutes = 59 , seconds = 59 , microseconds = 999999 ) です 。 
timedelta オブジェクト が 等しく なら ない 最小 の 時間 差 で 、 timedelta ( microseconds = 1 ) です 。 
属性 
値 
両端 値 を 含む - 999999999 から 999999999 の 間 
両端 値 を 含む 0 から 86399 の 間 
両端 値 を 含む 0 から 999999 の 間 
端数 を 切り捨て て 除算 さ れ 、 剰余 ( が ある 場合 ) は 捨て られ ます 。 ( 3 ) 
同じ 値 を 持つ timedelta オブジェクト を 返し ます 。 ( 2 ) 
- t 1 timedelta (- t 1 . days , - t 1 . seconds ,- t 1 . microseconds )、 および t 1 * - 1 と 同じ です 。 
t . days = 0 の とき に は + t 、 t . days 0 の とき に は - t と なり ます 。 ( 2 ) 
この 操作 は 厳密 です が 、 オーバフロー する か も しれ ませ ん 。 
この 操作 は 厳密 で あり 、 オーバフロー し ない はず です 。 
0 による 除算 は ZeroDivisionError を 送出 し ます 。 
- timedelta . max は timedelta オブジェクト で 表現 する こと が でき ませ ん 。 
timedelta オブジェクト は ハッシュ 可能 ( 辞書 の キー として 利用 可能 ) で あり 、 効率 的 な pickle 化 を サポート し ます 、 また 、 ブール 演算 コンテキスト で は 、 timedelta オブジェクト は timedelta ( 0 ) に 等しく ない 場合 かつ その とき に 限り 真 と なり ます 。 
tzinfo は 抽象 基底 クラス です 。 
tzinfo の 具体 的 な サブ クラス で は 、 以下 の メソッド を 実装 する 必要 が あり ます 。 
厳密 に どの メソッド が 必要 な の か は 、 aware な datetime オブジェクト が この サブ クラス の インスタンス を どの よう に 使う か に 依存 し ます 。 
不確か なら ば 、 単に 全て を 実装 し て ください 。 
ローカル 時間 の UTC から の オフセット を 、 UTC から 東 向き を 正 と し た 分 で 返し ます 。 
ローカル 時間 が UTC の 西側 に ある 場合 、 この 値 は 負 に なり ます 。 
この メソッド は UTC から の オフセット の 総計 を 返す よう に 意図 さ れ て いる ので 注意 し て ください ; 例えば 、 tzinfo オブジェクト が タイム ゾーン と DST 修正 の 両方 を 表現 する 場合 、 utcoffset () は それら の 合計 を 返さ なけれ ば なり ませ ん 。 
UTC オフセット が 未知 で ある 場合 、 None を 返し て ください 。 
そう で ない 場合 に は 、 返さ れる 値 は - 1439 から 1439 の 両端 を 含む 値 ( 1440 = 24 * 60 ; つまり 、 オフセット の 大き さ は 1 日 より 短く なく て は なり ませ ん ) が 分 で 指定 さ れ た timedelta オブジェクト で なけれ ば なり ませ ん 。 
ほとんど の utcoffset () 実装 は 、 おそらく 以下 の 二つ の うち の 一つ に 似 た もの に なる でしょ う : 
utcoffset () が None を 返さ ない 場合 、 dst () も None を 返し て は なり ませ ん 。 utcoffset () の デフォルト の 実装 は NotImplementedError を 送出 し ます 。 
夏時間 ( DST ) 修正 を 、 UTC から 東 向き を 正 と し た 分 で 返し ます 。 DST 情報 が 未知 の 場合 、 None が 返さ れ ます 。 
例えば 、 datetime . timetuple () は tzinfo メンバ の dst () メソッド を 呼ん で tm _ isdst フラグ が セット さ れ て いる か どう か 判断 し 、 tzinfo . fromutc () は dst () タイム ゾーン を 移動 する 際 に DST による 変更 が ある か どう か を 調べ ます 。 
全て の datetime オブジェクト dt について 常に 同じ 結果 を 返さ なけれ ば なら ない という 点 で 、 一貫 性 を 持っ て い なけれ ば なり ませ ん 。 
正常 に 実装 さ れ た tzinfo の サブ クラス で は 、 この 式 は タイム ゾーン における " 標準 オフセット ( standard offset )" を 表し 、 特定 の 日 や 時刻 の 事情 で は なく 地理 的 な 位置 に のみ 依存 し て い なく て は なり ませ ん 。 
datetime . astimezone () の 実装 は この 事実 に 依存 し て い ます が 、 違反 を 検出 する こと が でき ませ ん ; 正しく 実装 する の は プログラマ の 責任 です 。 
tzinfo の サブ クラス で これ を 保証 する こと が でき ない 場合 、 tzinfo . fromutc () の 実装 を オーバライド し て 、 astimezone () に 関わら ず 正しく 動作 する よう に し て も かまい ませ ん 。 ほとんど の dst () 実装 は 、 おそらく 以下 の 二つ の うち の 一つ に 似 た もの に なる でしょ う : 
デフォルト の dst () 実装 は NotImplementedError を 送出 し ます 。 
datetime オブジェクト dt に 対応 する タイム ゾーン 名 を 文字 列 で 返し ます 。 datetime モジュール で は 文字 列 名 について 何 も 定義 し て おら ず 、 特に 何 か を 意味 する といった 要求 仕様 も まったく あり ませ ん 。 
例えば 、 " GMT "、" UTC "、 "- 500 "、 "- 5 : 00 "、 " EDT "、 " US / Eastern "、" America / New York " は 全て 有効 な 応答 と なり ます 。 
文字 列 名 が 未知 の 場合 に は None を 返し て ください 。 
tzinfo の サブ クラス で は 、 特に 、 tzinfo クラス が 夏時間 について 記述 し て いる 場合 の よう に 、 渡さ れ た dt の 特定 の 値 によって 異なっ た 名前 を 返し たい 場合 が ある ため 、 文字 列 値 で は なく メソッド と なっ て いる こと に 注意 し て ください 。 デフォルト の tzname () 実装 は NotImplementedError を 送出 し ます 。 
以下 の メソッド は datetime や time オブジェクト において 、 同名 の メソッド が 呼び出さ れ た 際 に 応じ て 呼び出さ れ ます 。 
datetime オブジェクト は 自身 を 引数 として メソッド に 渡し 、 time オブジェクト は 引数 として None を メソッド に 渡し ます 。 
従って 、 tzinfo の サブ クラス における メソッド は 引数 dt が None の 場合 と 、 datetime の 場合 を 受理 する よう に 用意 し なけれ ば なり ませ ん 。 None が 渡さ れ た 場合 、 最良 の 応答 方法 を 決める の は クラス 設計 者 次第 です 。 
例えば 、 この クラス が tzinfo プロトコル と 関係 を もた ない という こと を 表明 さ せ たけれ ば 、 None が 適切 です 。 
その 結果 tzinfo メソッド は dt が ローカル 時間 で ある と 解釈 する ので 、 他 の タイム ゾーン で の オブジェクト の 振る舞い について 心配 する 必要 が あり ませ ん 。 
デフォルト の datetime . astimezone () 実装 で 呼び出さ れ ます 。 
datetime . astimezone () から 呼ば れ た 場合 、 
dt . tzinfo は self で あり 、 dt の 日付 および 時刻 データ メンバ は UTC 時刻 を 表し て いる もの として 見え ます 。 
fromutc () の 目的 は 、 self の ローカル 時刻 に 等しい datetime オブジェクト を 返す こと により 日付 と 時刻 データ メンバ を 修正 する こと に あり ます 。 ほとんど の tzinfo サブ クラス で は デフォルト の fromutc () 実装 を 問題 なく 継承 でき ます 。 
デフォルト の 実装 は 、 固定 オフセット の タイム ゾーン や 、 標準時 と 夏時間 の 両方 について 記述 し て いる タイム ゾーン 、 そして DST 移行 時刻 が 年 によって 異なる 場合 で さえ 、 扱える くらい 強力 な もの です 。 
以下 に tzinfo クラス の 使用 例 を 示し ます : 
具体 的 な 例 として 、 東部 アメリカ 時刻 ( US Eastern , UTC - 5000 ) を 考え ます 。 
EDT は 4 月 の 最初 の 日曜日 の 1 : 59 ( EST ) 以後 に 開始 し 、 10 月 の 最後 の 日曜日 の 1 : 59 ( EDT ) に 終了 し ます : 
DST の 開始 の 際 (" start " の 並び ) ローカル の 壁 時計 は 1 : 59 から 3 : 00 に 飛び ます 。 
この 日 は 2 : MM の 形式 を とる 時刻 は 実際 に は 無意味 と なり ます 。 従って 、 astimezone ( Eastern ) は DST が 開始 する 日 に は hour == 2 と なる 結果 を 返す こと は あり ませ ん 。 
astimezone () が この こと を 保証 する よう に する に は 、 tzinfo . dst () メソッド は " 失わ れ た 時間 " ( 東部 時刻 における 2 : MM ) が 夏時間 に 存在 する こと を 考え なけれ ば なり ませ ん 。 DST が 終了 する 際 (" end " の 並び ) で は 、 問題 は さらに 悪化 し ます : 1 時間 の 間 、 ローカル の 壁 時計 で はっきり と 時刻 を いえ なく なり ます : それ は 夏時間 の 最後 の 1 時間 です 。 
東部 時刻 で は 、 その 日 の UTC で の 5 : MM に 夏時間 は 終了 し ます 。 
東部 時刻 の 例 で は 、 5 : MM および 6 : MM の 形式 を とる UTC 時刻 は 両方 とも 、 東部 時刻 に 変換 さ れ た 際 に 1 : MM に 対応 づけ られ ます 。 
astimezone () が この こと を 保証 する よう に する に は 、 tzinfo . dst () は " 繰り返さ れ た 時間 " が 標準時 に 存在 する こと を 考慮 し なけれ ば なり ませ ん 。 
この こと は 、 例えば タイム ゾーン の 標準 の ローカル な 時刻 に DST へ の 切り替え 時刻 を 表現 する こと で 簡単 に 設定 する こと が でき ます 。 この よう な あいまい さ を 許容 でき ない アプリケーション は 、 ハイブリッド な tzinfo サブ クラス を 使っ て 問題 を 回避 し なけれ ば なり ませ ん ; UTC や 、 他 の オフセット が 固定 さ れ た tzinfo の サブ クラス ( EST (- 5 時間 の 固定 オフセット ) のみ を 表す クラス や 、 EDT (- 4 時間 の 固定 オフセット ) のみ を 表す クラス ) を 使う 限り 、 あいまい さ は 発生 し ませ ん 。 
open () によって 返さ れる データベース オブジェクト は 、 全て の DBM 形式 データベース や マップ 型 オブジェクト で 共通 の メソッド を 提供 し ます 。 
それら 標準 の メソッド に 加え 、 dbhash で は 以下 の メソッド が 利用 可能 です 。 
この メソッド と next () メソッド を 使っ て 、 データベース の 全て の キー / 値 の ペア にわたって ループ 処理 を 行え ます 。 
探索 は データベース の 内部 ハッシュ 値 の 順番 に 行わ れ 、 キー の 値 に 順 に 並ん で いる と は 限り ませ ん 。 
この メソッド は 最初 の キー を 返し ます 。 
データベース 探索 における 最後 の キー / 値 を 返し ます 。 
逆順 探索 を 開始 する 際 に 使う こと が でき ます ; previous () を 参照 し て ください 。 
データベース の 順 方向 探索 において 、 次 の より も 後 に 来る キー / 値 の ペア を 返し ます 。 
以下 の コード は データベース db について 、 キー 全て を 含む リスト を メモリ 上 に 生成 する こと なく 全て の キー を 出力 し ます 。 
データベース の 逆 方向 探索 において 、 手前 に 来る キー / 値 の ペア を 返し ます 。 last () と 併せ て 、 逆 方向 の 探索 に 用い られ ます 。 
この メソッド は ディスク に まだ 書き込ま れ て い ない データ を 全て 書き込ま せ ます 。 
デバッガ は 以下 の コマンド を 認識 し ます 。 
ほとんど の コマンド は 一文字 または 二 文字 に 省略 する こと が でき ます 。 
例えば 、 " h ( elp )" が 意味 する の は 、 ヘルプ コマンド を 入力 する ため に " h " か " help " の どちら か 一方 を 使う こと が できる という こと です ( が 、 " he " や " hel " は 使え ず 、 また " H " や " Help "、" HELP " も 使え ませ ん )。 
コマンド の 引数 は 空白 ( スペース または タブ ) で 区切ら れ なけれ ば なり ませ ん 。 
オプション の 引数 は コマンド 構文 の 角 括弧 ("[]") の 中 に 入れ なけれ ば なり ませ ん 。 角 括弧 を タイプ し て は いけ ませ ん 。 
コマンド 構文 における 選択肢 は 垂直 バー ("|") で 区切ら れ ます 。 空 行 を 入力 する と 入力 さ れ た 直前 の コマンド を 繰り返し ます 。 
例外 : 直前 の コマンド が " list " コマンド なら ば 、 次 の 11 行 が リスト さ れ ます 。 デバッガ が 認識 し ない コマンド は Python 文 と みなし て 、 デバッグ し て いる プログラム の コンテキスト おい て 実行 さ れ ます 。 
Python 文 は 感嘆 符 ("!") を 前 に 付ける こと も でき ます 。 
これ は デバッグ 中 の プログラム を 調査 する 強力 な 方法 です 。 変数 を 変更 し たり 関数 を 呼び出し たり する こと さえ 可能 です 。 
この よう な 文 で 例外 が 発生 し た 場合 に は 例外 名 が プリント さ れ ます が 、 デバッガ の 状態 は 変化 し ませ ん 。 複数 の コマンド を ";;" で 区切っ て 一行 で 入力 する こと が でき ます 。 
エイリアス は パラメータ を 持つ こと が でき 、 調査 中 の コンテキスト に対して 人 が ある程度 柔軟 に 対応 でき ます 。 ファイル . pdbrc 
両方 の ファイル が 存在 する 場合 、 ホーム ディレクトリ の もの が 最初 に 読ま れ 、 そこ に 定義 さ れ て いる エイリアス は ローカル ファイル により 上書き さ れる こと が あり ます 。 
引数 なし で は 、 利用 できる コマンド の 一覧 を プリント し ます 。 
引数 として command が ある 場合 は 、 その コマンド について の ヘルプ を プリント し ます 。 
" help pdb " は 完全 ドキュメンテーション ファイル を 表示 し ます 。 環境 変数 PAGER が 定義 さ れ て いる なら ば 、 代わり に ファイル は その コマンド へ パイプ さ れ ます 。 
command 引数 が 識別子 で なけれ ば なら ない ので 、 "!" コマンド について の ヘルプ を 得る ため に は " help exec " と 入力 し なけれ ば なら ない 。 
スタック の 底 に ある 最も 新しい フレーム と 一緒 に スタック トレース を プリント し ます 。 
矢印 は カレント フレーム を 指し 、 それ が ほとんど の コマンド の コンテキスト を 決定 し ます 。 
( より 新しい フレーム に 向かっ て ) スタック トレース 内 で カレント フレーム を 一 レベル 下げ ます 。 
( より 古い フレーム に 向かっ て ) スタック トレース 内 で カレント フレーム を 一 レベル 上げ ます 。 
lineno 引数 が ある 場合 は 、 現在 の ファイル の その 場所 に ブレーク ポイント を 設定 し ます 。 
function 引数 が ある 場合 は 、 その 関数 の 中 の 最初 の 実行 可 能文 に ブレーク ポイント を 設定 し ます 。 別 の ファイル ( まだ ロード さ れ て い ない かも しれ ない もの ) の ブレーク ポイント を 指定 する ため に 、 行 番号 は ファイル 名 と コロン を ともに 先頭 に 付け られ ます 。 
ファイル は sys . path に そっ て 検索 さ れ ます 。 
一時 的 な ブレーク ポイント で 、 最初 に そこ に 達し た とき に 自動的 に 取り除か れ ます 。 
引数 は break と 同じ です 。 
スペース で 区切ら れ た ブレークポイントナンバー の リスト を 与える と 、 それら の ブレーク ポイント を 解除 し ます 。 
引数 なし の 場合 は 、 すべて の ブレーク ポイント を 解除 し ます ( が 、 はじめ に 確認 し ます )。 
スペース で 区切ら れ た ブレークポイントナンバー の リスト として 与え られる ブレーク ポイント を 無効 に し ます 。 
ブレーク ポイント を 無効 に する と 、 プログラム の 実行 を 止める こと が でき なく なり ます が 、 ブレーク ポイント の 解除 と 違い ブレーク ポイント の リスト に 残っ た まま に なり 、 ( 再び ) 有効 に する こと が でき ます 。 
指定 し た ブレーク ポイント を 有効 に し ます 。 
与え られ た ブレークポイントナンバー に 通過 カウント を 設定 し ます 。 
count が 省略 さ れる と 、 通過 カウント は 0 に 設定 さ れ ます 。 
通過 カウント が ゼロ に なっ た とき 、 ブレーク ポイント が 機能 する 状態 に なり ます 。 
ゼロ で ない とき は 、 その ブレーク ポイント が 無効 に さ れ ず 、 どんな 関連 条件 も 真に 評価 さ れ て い て 、 ブレーク ポイント に 来る たび に count が 減らさ れ ます 。 
condition は ブレーク ポイント が honored (???) する 前 に 真に 評価 し なけれ ば なら ない 式 です 。 
condition が ない 場合 は 、 どんな 既存 の 条件 も 取り除か れ ます 。 すなわち 、 ブレーク ポイント に 条件 が あり ませ ん 。 
現在 の 行 を 実行 し 、 最初 に 実行 可能 な もの が あらわれ た とき に ( 呼び出さ れ た 関数 の 」 中 か 、 現在 の 関数 の 次 の 行 で ) 停止 し ます . 
現在 の 関数 の 次 の 行 に 達する か 、 あるいは 関数 が 返る まで 実行 を 継続 し ます 。 
(" next " と " step " の 差 は " step " が 呼び出さ れ た 関数 の 内部 で 停止 する の に対し 、 " next " は 呼び出さ れ た 関数 を ( ほぼ ) 全速力 で 実行 し 、 現在 の 関数 内 の 次 の 行 で 停止 する だけ です 。 
現在 の 関数 が 返る まで 実行 を 継続 し ます 。 
ブレーク ポイント に 出会う まで 、 実行 を 継続 し ます 。 
次に 実行 する 行 を 指定 し ます 。 
最も 底 の フレーム 中 で のみ 実行 可能 です 。 
前 に 戻っ て 実行 し たり 、 不要 な 部分 を スキップ し て 先 の 処理 を 実行 する 場合 に 使用 し ます 。 ジャンプ に は 制限 が あり 、 例えば for ループ の 中 に は 飛び込め ませ ん し 、 finally 節 の 外 に も 飛ぶ 事 が でき ませ ん 。 
現在 の ファイル の ソース コード を リスト 表示 し ます 。 
引数 なし の 場合 は 、 現在 の 行 の 周囲 を 11 行 リスト する か 、 または 前 の リスト の 続き を 表示 し ます 。 
引数 が 一つ ある 場合 は 、 その 行 の 周囲 を 11 行 表示 し ます 。 
引数 が 二つ の 場合 は 、 与え られ た 範囲 を リスト 表示 し ます 。 第 二 引数 が 第 一 引数 より 小さい とき は 、 カウント と 解釈 さ れ ます 。 
現在 の 関数 の 引数 リスト を プリント し ます 。 
現在 の コンテキスト において expression を 評価 し 、 その 値 を プリント し ます 。 
( 注意 : " print " も 使う こと が でき ます が 、 デバッガ コマンド で は あり ませ ん -- これ は Python の print 文 を 実行 し ます 。 ) 
pprint モジュール を 使っ て 例外 の 値 が 整形 さ れる こと を 除い て " p " コマンド と 同様 です 。 
name という 名前 の command を 実行 する エイリアス を 作成 し ます 。 
コマンド は 引用 符 で 囲ま れ て い て は いけ ませ ん 。 
入れ替え 可能 な パラメータ は "% 1 "、"% 2 " など で 指し示さ れ 、 さらに "%*" は 全 パラメータ に 置き換え られ ます 。 
コマンド が 与え られ なけれ ば 、 name に対する 現在 の エイリアス を 表示 し ます 。 
引数 が 与え られ なけれ ば 、 すべて の エイリアス が リスト さ れ ます 。 エイリアス は 入れ子 に なっ て も よく 、 pdb プロンプト で 合法 的 に タイプ できる どんな もの でも 含める こと が でき ます 。 
内部 pdb コマンド を エイリアス によって 上書き する こと が でき ます 。 
その とき 、 この よう な コマンド は エイリアス が 取り除か れる まで 隠さ れ ます 。 
指定 し た エイリアス を 削除 し ます 。 
現在 の スタック フレーム の コンテキスト において ( 一 行 の ) statement を 実行 し ます 。 文 の 最初 の 語 が デバッガ コマンド と 共通 で ない 場合 は 、 感嘆 符 を 省略 する こと が でき ます 。 
グローバル 変数 を 設定 する ため に 、 同じ 行 に " global " コマンド とともに 代入 コマンド の 前 に 付ける こと が でき ます 。 ( Pdb ) global list _ options ; list _ options = ['- l ']( Pdb ) 
デバッガ を 終了 し ます 。 実行 し て いる プログラム は 中断 さ れ ます 。 
いくつ か の 変更 が インタプリタ へ 加え られ まし た : 
sys . settrace ( func ) が グローバル トレース 関数 を 設定 し ます 
そこで 、 ローカル トレース 関数 を 使う こと も でき ます ( 後ろ を 参照 ) 
' call ' 関数 が 呼び出さ れ ます ( または 、 他 の コード ブロック に 入り ます )。 
インタプリタ が コード の 新しい 行 を 実行 しよ う と し て いる ところ です ( ときどき 、 一行 に 複数 行 イベント が 存在 し ます )。 ローカル トレース 関数 が 呼び出さ れ ます 。 
arg は None です 。 戻り 値 は 新しい ローカル トレース 関数 を 指定 し ます 。 
関数 ( または 、 コード ブロック ) が 返ろ う と し て いる ところ です 。 
ローカル トレース 関数 が 呼び出さ れ ます 。 arg は 返る で あろ う 値 です 。 
トレース 関数 の 戻り 値 は 無視 さ れ ます 。 
例外 が 生じ て い ます 。 
拡張 モジュール または 組み込み の C 関数 が 呼び出さ れよ う と し て い ます 。 
arg は C 関数 オブジェクト です 。 
' c _ return ' C 関数 が 処理 を 戻し まし た 。 
arg は None です 。 
' c _ exception ' C 関数 が 例外 を 送出 し まし た 。 
arg は None です 。 
例外 が 一連 の 呼び出し 元 を 伝え られ て 行く とき に 、 ' exception ' イベント は 各 レベル で 生成 さ れる こと ことに 注意 し て ください 。 コード と フレーム オブジェクト について さらに 情報 を 得る に は 、 
コンテキスト ( context ) と は 、 算術 演算 における 環境 設定 です 。 
コンテキスト は 計算 精度 を 決定 し 、 値 丸め の 方法 を 設定 し 、 シグナル の どれ が 例外 に なる か を 決め 、 指数 の 範囲 を 制限 し て い ます 。 多重 スレッド で 処理 を 行う 場合 に は 各 スレッド ごと に 現在 の コンテキスト が あり 、 getcontext () や setcontext () といった 関数 で アクセス し たり 設定 変更 でき ます : 
アクティブ な スレッド の 現在 の コンテキスト を 返し ます 。 
General Decimal Arithmetic Specification で 定義 さ れ て いる 標準 コンテキスト の 一つ です 。 
精度 は 9 桁 に 設定 さ れ て い ます 。 
丸め 規則 は ROUND _ HALF _ UP です 。 
すべて の 演算 結果 フラグ は クリア さ れ て い ます 。 
Inexact 、 Rounded 、 Subnormal を 除く 全て の 演算 エラー トラップ が 有効 ( 例外 として 扱う ) に なっ て い ます 。 多く の トラップ が 有効 に なっ て いる ので 、 デバッグ の 際 に 便利 な コンテキスト です 。 
丸め 規則 は ROUND _ HALF _ EVEN です 。 
トラップ は 全て 無効 ( 演算 中 に 一切 例外 を 送出 し ない ) に なっ て い ます 。 トラップ が 無効 に なっ て いる ので 、 エラー の 伴う 演算 結果 を NaN や Infinity に し 、 例外 を 送出 し ない よう に し たい アプリケーション に 向い た コンテキスト です 。 
この コンテキスト を 使う と 、 他 の 場合 に は プログラム が 停止 し て しまう よう な 状況 が あっ て も 実行 を 完了 さ せ られ ます 。 
Context コンス トラクタ が 新た な コンテキスト を 作成 する さい に 雛形 に する コンテキスト です 。 
この コンテキスト の フィールド ( 精度 の 設定 など ) を 変更 する と 、 Context コンス トラクタ が 生成 する 新た な コンテキスト に 影響 を 及ぼし ます 。 この コンテキスト は 、 主 に 多重 スレッド 環境 で 便利 です 。 
スレッド を 開始 する 前 に 何らかの フィールド を 変更 し て おく と 、 システム 全体 の デフォルト 設定 に 効果 を 及ぼせ ます 。 
スレッド を 開始 し た 後 に フィールド を 変更 する と 競合 条件 を 抑制 する ため に スレッド を 同期 化 せ ね ば なら ない ので 推奨 し ませ ん 。 単一 スレッド の 環境 で は 、 この コンテキスト を 使わ ない よう 薦め ます 。 
下 で 述べる よう に 明示 的 に コンテキスト を 作成 し て ください 。 デフォルト の 値 は 精度 28 桁 、 丸め 規則 ROUND _ HALF _ EVEN で 、 トラップ Overflow 、 InvalidOperation 、 および DivisionByZero が 有効 に なっ て い ます 。 
上 に 挙げ た 三つ の コンテキスト に 加え 、 Context コンス トラクタ を 使っ て 新た な コンテキスト を 生成 でき ます 。 
クラス Context 
新た な コンテキスト を 生成 し ます 。 
ある フィールド が 定義 さ れ て い ない か None で あれ ば 、 DefaultContext から デフォルト 値 を コピー し ます 。 
Context クラス で は 、 いくつ か の 汎用 の メソッド の 他 、 現在 の コンテキスト で 算術 演算 を 直接 行う ため の メソッド を 数多く 定義 し て い ます 。 
フラグ を 全て 0 に セット し ます 。 
コンテキスト の 複製 を 返し ます 。 
self を コンテキスト と する 新た な Decimal インスタンス を num から 生成 し ます 。 
Decimal コンス トラクタ と 違い 、 数値 を 変換 する 際 に コンテキスト の 精度 、 値 丸め 方法 、 フラグ 、 トラップ を 適用 し ます 。 定数 値 は しばしば アプリケーション の 要求 より も 高い 精度 を 持っ て いる ため 、 この メソッド が 役に立ち ます 。 
また 、 値 丸め を 即座 に 行う ため 、 例えば 以下 の よう に 、 入力 値 に 値 丸め を 行わ ない ため に 合計 値 に ゼロ の 加算 を 追加 する だけ で 結果 が 変わっ て しまう といった 、 現在 の 精度 より も 細かい 値 の 影響 が 紛れ込む 問題 を 防げる という 恩恵 も あり ます 。 
" Emmin - prec + 1 " に 等しい 値 を 返し ます 。 演算 結果 の 劣化 が 起こる 桁 の 最小 値 です 。 
アンダー フロー が 起き た 場合 、 指数 は Etiny に 設定 さ れ ます 。 
" Emax - prec + 1 " に 等しい 値 を 返し ます 。 
Decimal を 使っ た 処理 を 行う 場合 、 通常 は Decimal インスタンス を 生成 し て 、 算術 演算 を 適用 する という アプローチ を とり ます 。 演算 は アクティブ な スレッド における 現在 の コンテキスト の 下 で 行わ れ ます 。 
もう 一つ の アプローチ は 、 コンテキスト の メソッド を 使っ た 特定 の コンテキスト 下 で の 計算 です 。 
コンテキスト の メソッド は Decimal クラス の メソッド に 似 て いる ので 、 ここ で は 簡単 な 説明 に とどめ ます 。 
x の 絶対 値 を 返し ます 。 
x と y の 加算 を 返し ます 。 
二つ の 値 を 数値 として 比較 し ます 。 __ cmp __() に 似 て い ます が 、 以下 の よう に Decimal インスタンス を 返し ます : 
x を y で 除算 し た 値 を 返し ます 。 
二つ の 数値 間 の 除算 を 行い 、 結果 の 整数 部 を 返し ます 。 
二つ の 値 を 数値 として 比較 し 、 大きい ほう を 返し ます 。 
数値 上 二つ の 値 が 等しい 場合 に は 、 左側 値 を 結果 として 返し ます 。 
二つ の 値 を 数値 として 比較 し 、 小さい ほう を 返し ます 。 
数値 上 二つ の 値 が 等しい 場合 に は 、 左側 値 を 結果 として 返し ます 。 
Python における 単項 の 符号 反転 前 置 演算 子 ( unary prefix minus operator ) に 対応 する 演算 です 。 
x と y の 積 を 返し ます 。 
被 演算 子 を もっとも 単純 な 表記 に し ます 。 本質 的 に は 、 plus 演算 の 結果 から 末尾 の ゼロ を 全て 取り除い た もの と 同じ です 。 
Python における 単項 の 符号 非 反転 前 置 演算 子 ( unary prefix plus operator ) に 対応 する 演算 です 。 
コンテキスト における 精度 や 値 丸め を 適用 する ので 、 等 値 ( identity ) 演算 と は 違い ます 。 
" x ** y " を 計算 し ます 。 
modulo が 指定 さ れ て いれ ば 使い ます 。 右 被 演算 子 は 整数 部 が 9 桁 以下 で 、 小数 部 ( の ある 場合 ) は 値 丸め 前 に 全て ゼロ に なっ て い なけれ ば なり ませ ん 。 
x に 値 丸め を 適用 し 、 指数 を y に し た 値 を 返し ます 。 他 の 演算 と 違い 、 量子 化 後 の 係数 の 長 さ が 精度 より も 大きい 場合 に は InvalidOperation を シグナル し ます 。 
この ため 、 エラー が 生じ ない かぎり 、 量子 化 後 の 指数 は 右側 の 被 演算 子 の 指数 と 等しく なる こと が 保証 さ れ ます 。 また 、 結果 が 劣化 し て い たり 不正確 な 値 で あっ て も 、 Underflow を シグナル し ない という 点 も 他 の 演算 と 異なり ます 。 
整数 除算 の 剰余 を 返し ます 。 
剰余 が ゼロ で ない 場合 、 符号 は 割ら れる 数 の 符号 と 同じ に なり ます 。 remainder _ near 
モジュロ を 計算 し 、 正負 の モジュロ の うち ゼロ に 近い 値 を 返し ます 。 
たとえば 、 " Decimal ( 10 ). remainder _ near ( 6 )" は Decimal (" 4 ") より も ゼロ に 近い 値 Decimal ("- 2 ") を 返し ます 。 ゼロ から の 差 が 同じ 場合 に は 、 self と 同じ 符号 を 持っ た 方 を 返し ます 。 
self と other が 同じ 指数 を 持っ て いる か 、 あるいは 双方 とも NaN で ある 場合 に 真 を 返し ます 。 
平方根 を 精度 いっぱい まで 求め ます 。 
x と y の 間 の 差 を 返し ます 。 
工学 表記 で 文字 列 に 変換 し ます 。 
工学 表記 で は 指数 は 3 の 倍数 に なり ます 。 
従って 、 最大 で 3 桁 まで の 数字 が 基数 の 小数 部 に 現れ ます 。 
たとえば 、 Decimal (' 123 E + 1 ') は Decimal (" 1 . 23 E + 3 ") に 変換 さ れ ます 。 to _ integral 
Inexact や Rounded といった シグナル を 出さ ず に 最近 傍 の 整数 に 値 を 丸め ます 。 
数値 を 科学 表記 で 文字 列 に 変換 し ます 。 
10 進 浮動 小数点 数 を 使う と 、 10 進数 表現 による 誤差 を 抑制 でき ます ( 0 . 1 を 正確 に 表現 できる よう に なり ます ); しか し 、 ゼロ で ない 桁 が 一定 の 精度 を 越え て いる 場合 に は 、 演算 によって は 依然として 値 丸め による 誤差 を 引き起こし ます 。 
Knuth は 、 十分 で ない 計算 精度 の 下 で 値 丸め を 伴う 浮動 小数点 演算 を 行っ た 結果 、 加算 の 結合 則 や 分配 則 における 恒等 性 が 崩れ て しまう 例 を 二つ 示し て い ます : 
decimal モジュール で は 、 最下 桁 を 失わ ない よう に 十分 に 計算 精度 を 広げる こと で 、 上 で 問題 に し た よう な 恒等 性 を とりもどせ ます : 
decimal モジュール の 数 体系 で は 、 NaN , sNaN , - Infinity , Infinity , および 二つ の ゼロ 、+ 0 と - 0 といった 特殊 な 値 を 提供 し て い ます 。 無限 大 ( Infinity ) は Decimal (' Infinity ') で 直接 構築 でき ます 。 
また 、 DivisionByZero を トラップ せ ず に ゼロ で 除算 を 行っ た 場合 に も 出 て き ます 。 
同様 に 、 Overflow シグナル を トラップ し なけれ ば 、 表現 可能 な 最大 の 数値 の 制限 を 越え た 値 を 丸め た とき に 出 て き ます 。 無限 大 に は 符号 が あり ( アフィン : affine で あり )、 算術 演算 に 使用 でき 、 非常 に 巨大 で 不 確定 の ( indeterminate ) 値 として 扱わ れ ます 。 
例えば 、 0 / 0 は NaN を 返し ます 。 
NaN は 「 非 数値 ( not a number )」 を 表し ます 。 この よう な NaN は 暗黙 の うち に 生成 さ れ 、 一度 生成 さ れる と それ を 他 の 計算 に も 流れ て ゆき 、 関係 する 個々 の 演算 全て が 個別 の NaN を 返す よう に なり ます 。 
この 挙動 は 、 たまに 入力 値 が 欠ける よう な 状況 で 一連 の 計算 を 行う 際 に 便利 です -- 特定 の 計算 に対して は 無効 な 結果 を 示す フラグ を 立て つつ 計算 を 進め られる から です 。 
一方 、 NaN の 変種 で ある sNaN は 関係 する 全て の 演算 で 演算 後 に シグナル を 送出 し ます 。 
二つ の 符号 付き ゼロ が 区別 さ れ て いる の に 等価 で ある こと に 加え て 、 異なる 精度 における ゼロ の 表現 は まちまち な のに 、 値 は 等価 と みなさ れる という こと が あり ます 。 
これ に 慣れる に は 多少 時間 が かかり ます 。 
正規 化 浮動 小数点 表現 に 目 が 慣れ て しまう と 、 以下 の 計算 で ゼロ に 等しい 値 が 返っ て いる と は 即座 に 分かり ませ ん : 
Decimal クラス の 利用 を 実演 し て いる 例 を いくつ か 示し ます 。 これら は ユーティリティ 関数 として も 利用 でき ます : 
def moneyfmt ( value , places = 2 , curr ='', sep =',', dp ='.', pos ='', neg ='-', trailneg =''):""" Decimal を 通貨 表現 の 文字 列 に 変換 し ます 。 
places : 小数点 以下 の 値 を 表す の に 必要 な 桁 数 curr : 符号 の 前 に 置く 通貨 記号 ( オプション で 、 空 でも かまい ませ ん ) sep : 桁 の グループ 化 に 使う 記号 、 オプション です ( コンマ 、 ピリオド 、 スペース 、 または 空 ) dp : 小数点 ( コンマ または ピリオド ) 小数 部 が ゼロ の 場合 に は 空 に でき ます 。 
pos : optional sign for positive numbers : '+', space or blankneg : optional sign for negative numbers : '-', '(', space or blanktrailneg : optional trailing minus indicator : '-', ')', space or blank d = Decimal ('- 1234567 . 8901 ') moneyfmt ( d , curr ='$')'-$ 1 , 234 , 567 . 89 ' moneyfmt ( d , places = 0 , sep ='.', dp ='', neg ='', trailneg ='-')' 1 . 234 . 568 -' moneyfmt ( d , curr ='$', neg ='(', trailneg =')')'($ 1 , 234 , 567 . 89 )' moneyfmt ( Decimal ( 123456789 ), sep =' ')' 123 456 789 . 00 ' moneyfmt ( Decimal ('- 0 . 02 '), neg ='', trailneg ='')'. 02 '""" q = Decimal (( 0 , ( 1 ,), - places )) # 2 places -- ' 0 . 01 ' sign , digits , exp = value . quantize ( q ). as _ tuple () assert exp == - places result = [] digits = map ( str , digits ) build , next = result . append , digits . popif sign : build ( trailneg ) for i in range ( places ): if digits : build ( next ()) else : build (' 0 ') build ( dp ) i = 0 while digits : build ( next ()) i += 1 if i == 3 and digits : i = 0 build ( sep ) build ( curr ) if sign : build ( neg ) else : build ( pos ) result . reverse () return ''. join ( result ) def pi ():""" Compute Pi to the current precision . print pi () 3 . 1 4 1592653589793238462643383 """ getcontext (). prec += 2 # extra digits for intermediate stepsthree = Decimal ( 3 ) # substitute " three = 3 . 0 " for regular floatslasts , t , s , n , na , d , da = 0 , three , 3 , 1 , 0 , 0 , 24 while s != lasts : lasts = sn , na = n + na , na + 8 d , da = d + da , da + 32 t = ( t * n ) / ds += tgetcontext (). prec -= 2 return + s # unary plus applies the new precisiondef exp ( x ):""" Return e raised to the power of x . Result type matches input type . print exp ( Decimal ( 1 )) 2 . 7 1 8281828459045235360287471 print exp ( Decimal ( 2 )) 7 . 3 8 9056098930650227230427461 print exp ( 2 . 0 ) 7 . 38905609893 print exp ( 2 + 0 j )( 7 . 38905609893 + 0 j )""" getcontext (). prec += 2 i , lasts , s , fact , num = 0 , 0 , 1 , 1 , 1 while s != lasts : lasts = s i += 1 fact *= inum *= x s += num / fact getcontext (). prec -= 2 return + sdef cos ( x ):""" x ラジアン の 余弦 を 返し ます 。 print cos ( Decimal (' 0 . 5 ')) 0 . 8 7 7 5825618903727161162815826 print cos ( 0 . 5 ) 0 . 87758256189 print cos ( 0 . 5 + 0 j )( 0 . 87758256189 + 0 j )""" getcontext (). prec += 2 i , lasts , s , fact , num , sign = 0 , 0 , 1 , 1 , 1 , 1 while s != lasts : lasts = s i += 2 fact *= i * ( i - 1 ) num *= x * xsign *= - 1 s += num / fact * sign getcontext (). prec -= 2 return + sdef sin ( x ):""" x ラジアン の 正弦 を 返し ます 。 
5 . 5 . 4 シグナル シグナル は 、 計算 中 に 生じ た 様々 な エラー 条件 を 表現 し ます 。 
例えば 、 DivisionByZero が 設定 さ れ て いる と 、 エラー 条件 が 生じ た 際 に DivisionByZero 例外 を 送出 し ます 。 
値 の 表現 上 の 制限 に 沿わ せる ため に 指数 部 が 変更 さ れ た こと を 通知 し ます 。 通常 、 クランプ ( clamp ) は 、 指数 部 が コンテキスト における 指数 桁 の 制限 値 Emin および Emax を 越え た なっ た 場合 に 発生 し ます 。 
可能 な 場合 に は 、 係数 部 に ゼロ を 加え た 表現 に 合わせ て 指数 部 を 減らし ます 。 
他 の シグナル の 基底 クラス で 、 ArithmeticError の サブ クラス です 。 
有限 値 を ゼロ で 除算 し た とき の シグナル です 。 除算 や モジュロ 除算 、 数 を 負 の 値 で 累乗 し た 場合 に 起きる こと が あり ます 。 
この シグナル を トラップ し ない 場合 、 演算 結果 は Infinity または - Infinity に なり 、 その 符号 は 演算 に 使っ た 入力 に 基づい て 決まり ます 。 
値 の 丸 め によって 演算 結果 から 厳密 さ が 失わ れ た こと を 通知 し ます 。 この シグナル は 値 丸め 操作 中 に ゼロ で ない 桁 を 無視 し た 際 に 生じ ます 。 
演算 結果 は 値 丸め 後 の 値 です 。 
シグナル の フラグ や トラップ は 、 演算 結果 の 厳密 さ が 失わ れ た こと を 検出 する ため に 使える だけ です 。 
この シグナル の 発生 原因 として 考え られる の は 、 以下 の よう な 状況 です : 
数値 オーバフロー を 示す シグナル です 。 この シグナル は 、 値 丸め を 行っ た 後 の 指数 部 が Emax より 大きい こと を 示し ます 。 
シグナル を トラップ し ない 場合 、 演算 結果 は 値 丸め の モード により 、 表現 可能 な 最大 の 数値 に なる よう に 内側 へ 引き込ん で 丸め を 行っ た 値 か 、 Infinity に なる よう に 外側 に 丸め た 値 の いずれ か に なり ます 。 
いずれ の 場合 も 、 Inexact および Rounded が 同時に シグナル さ れ ます 。 
この シグナル を トラップ し なけれ ば 、 演算 結果 を そのまま 返し ます 。 
この シグナル は 有効 桁 数 の 減少 を 検出 する 際 に 使い ます 。 
これら の シグナル の 階層 構造 を まとめる と 、 以下 の 表 の よう に なり ます : 
関数 getcontext () は 、 スレッド 毎 に 別々 の Context オブジェクト に アクセス し ます 。 
アプリケーション を通じて 全て の スレッド に 同じ 値 を 使う よう に デフォルト を 設定 し たけれ ば 、 DefaultContext オブジェクト を 直接 変更 し ます 。 
getcontext () を 呼び出す スレッド 間 で 競合 条件 が 生じ ない よう に する ため 、 DefaultContext へ の 変更 は いかなる スレッド を 開始 する より も 前 に 行わ ね ば なり ませ ん 。 
以下 に 例 を 示し ます : 
# スレッド を 立ち 上げる 前 に アプリケーション にわたる デフォルト を 設定 DefaultContext . prec = 12 DefaultContext . rounding = ROUND _ DOWNDefaultContext . traps = ExtendedContext . traps . copy () DefaultContext . traps [ InvalidOperation ] = 1 setcontext ( DefaultContext )# その後 で スレッド を 開始 t 1 . start () t 2 . start () t 3 . start (). . . 
普通 、 decimal を 使う とき に は 、 モジュール を import し 、 現在 の 演算 コンテキスト を getcontext () で 調べ 、 必要 に 応じ て 精度 や 丸め を 設定 し 、 演算 エラー の トラップ を 有効 に し ます : 
from decimal import * getcontext () Context ( prec = 28 , rounding = ROUND _ HALF _ EVEN , Emin =- 999999999 , Emax = 999999999 , capitals = 1 , flags =[], traps =[ Overflow , InvalidOperation , DivisionByZero ]) getcontext (). prec = 7 # 新た な 精度 を 設定 
Decimal の インスタンス は 、 整数 、 文字 列 または タプル から 生成 でき ます 。 
Decimal を float から 生成 し たけれ ば 、 まず 文字 列 型 に 変換 せ ね ば なり ませ ん 。 
そう する こと で 、 変換 方法 の 詳細 を ( representation error も 含め て ) 明示 的 に 残せ ます 。 
Decimal は `` 数値 で は ない ( Not a Number )'' を 表す NaN や 正負 の Infinity ( 無限 大 )、- 0 といった 特殊 な 値 も 表現 でき ます 。 
新た な Decimal 型 数値 の 有効 桁 数 は 入力 し た 数 の 桁 数 だけ で 決まり ます 。 
演算 コンテキスト における 精度 や 値 丸め の 設定 が 影響 する の は 算術 操作 の 中 だけ です 。 
Decimal 型 数値 は ほとんど の 場面 で Python の 他 の 機能 と うまく やりとり でき ます 。 
Decimal 浮動 小数点 小 劇場 ( flying circus ) を 示し ましょ う : 
data = map ( Decimal , ' 1 . 34 1 . 87 3 . 45 2 . 35 1 . 00 0 . 03 9 . 25 '. split ()) max ( data ) Decimal (" 9 . 25 ") min ( data ) Decimal (" 0 . 03 ") sorted ( data )[ Decimal (" 0 . 03 "), Decimal (" 1 . 00 "), Decimal (" 1 . 34 "), Decimal (" 1 . 87 "), Decimal (" 2 . 35 "), Decimal (" 3 . 45 "), Decimal (" 9 . 25 ")] sum ( data ) Decimal (" 19 . 29 ") a , b , c = data [: 3 ] str ( a )' 1 . 34 ' float ( a ) 1 . 3400000000000001 round ( a , 1 ) # round () は 値 を まず 二 進 の 浮動 小数点 数 に 変換 し ます 1 . 3 int ( a ) 1 a * 5 Decimal (" 6 . 70 ") a * bDecimal (" 2 . 5058 ") c % aDecimal (" 0 . 77 ") 
quantize () メソッド は 位 を 固定 し て 数値 を 丸め ます 。 
この メソッド は 、 計算 結果 を 固定 の 桁 数 で 丸める こと が よく ある 、 通貨 を 扱う アプリケーション で 便利 です : 
前述 の よう に 、 getcontext () 関数 を 使う と 現在 の 演算 コンテキスト に アクセス でき 、 設定 を 変更 でき ます 。 
ほとんど の アプリケーション は この アプローチ で 十分 です 。 より 高度 な 作業 を 行う 場合 、 Context () コンス トラクタ を 使っ て 別 の 演算 コンテキスト を 作っ て おく と 便利 な こと が あり ます 。 
別 の 演算 コンテキスト を アクティブ に し たけれ ば 、 setcontext () を 使い ます 。 Decimal モジュール で は 、 標準 仕様 に従って 、 すぐ 利用 できる 二つ の 標準 コンテキスト 、 BasicContext および ExtendedContext を 提供 し て い ます 。 
後者 は ほとんど の トラップ が 有効 に なっ て おり 、 とりわけ デバッグ の 際 に 便利 です : 
演算 コンテキスト に は 、 演算 中 に 遭遇 し た 例外 的 状況 を モニタ する ため の シグナル フラグ が あり ます 。 
フラグ が 一度 セット さ れる と 、 明示 的 に クリア する まで 残り 続け ます 。 その ため 、 フラグ の モニタ を 行い たい よう な 演算 の 前 に は clear _ flags () メソッド で フラグ を クリア し て おく の が ベスト です 。 
flags エントリ から 、 Pi の 有理数 による 近似 値 が 丸め られ た ( コンテキスト 内 で 決め られ た 精度 を 超え た 桁 数 が 捨て られ た ) こと と 、 計算 結果 が 厳密 で ない ( 無視 さ れ た 桁 の 値 に 非 ゼロ の もの が あっ た ) こと が わかり ます 。 コンテキスト の traps フィールド に 入っ て いる 辞書 を 使う と 、 個々 の トラップ を セット でき ます : 
ほとんど の プログラム で は 、 開始 時 に 一 度 だけ 現在 の 演算 コンテキスト を 修正 し ます 。 
また 、 多く の アプリケーション で は 、 データ から Decimal へ の 変換 は ループ 内 で 一 度 だけ キャスト し て 行い ます 。 
コンテキスト を 設定 し 、 Decimal オブジェクト を 生成 でき たら 、 ほとんど の プログラム は 他 の Python 数値 型 と 全く 変わら ない か の よう に Decimal を 操作 でき ます 。 
クッキー を 受けつけ 、 また それ を 返す 際 の 標準 的 な ルール を 実装 し ます 。 RFC 2965 クッキー と Netscape クッキー の 両方 に 対応 し て い ます 。 
デフォルト で は 、 RFC 2965 の 処理 は オフ に なっ て い ます 。 自分 の ポリシー を 提供 する いちばん 簡単 な 方法 は 、 この クラス を 継承 し て 、 自分 用 の 追加 チェック の 前 に オーバーライド し た 元 の メソッド を 呼び出す こと です : 
CookiePolicy インター フェイス を 実装 する の に 必要 な 機能 に 加え て 、 この クラス で は クッキー を 受けとっ たり 設定 し たり する ドメイン を 許可 し たり 拒絶 し たり できる よう に なっ て い ます 。 
コンス トラクタ の 引数 blocked _ domains 、 および blocked _ domains () と set _ blocked _ domains () メソッド を 使っ て ください ( allowed _ domains に関して も 同様 の 対応 する 引数 と メソッド が あり ます )。 
ホワイト リスト を 設定 し た 場合 は 、 それ を None に する こと で ホワイト リスト 機能 を オフ に する こと が でき ます 。 ブラックリスト あるいは ホワイト リスト 中 に ある ドメイン の うち 、 ドット (.) で 始まっ て い ない もの は 、 正確 に それ と 一致 する ドメイン の クッキー に しか 適用 さ れ ませ ん 。 
たとえば ブラックリスト 中 の エントリ " example . com " は 、 " example . com " に は マッチ し ます が 、 " www . example . com " に は マッチ し ませ ん 。 
一方 ドット (.) で 始まっ て いる ドメイン は 、 より 特 化 さ れ た ドメイン とも マッチ し ます 。 たとえば 、 ". example . com " は 、 " www . example . com " と " www . coyote . example . com " の 両方 に マッチ し ます ( が 、 " example . com " 自身 に は マッチ し ませ ん )。 
IP アドレス は 例外 で 、 つねに 正確 に 一致 する 必要 が あり ます 。 
たとえば 、 かりに blocked _ domains が " 192 . 168 . 1 . 2 " と ". 168 . 1 . 2 " を 含ん で い た として 、 192 . 168 . 1 . 2 は ブロック さ れ ます が 、 193 . 168 . 1 . 2 は ブロック さ れ ませ ん 。 
DefaultCookiePolicy は 以下 の よう な 追加 メソッド を 実装 し て い ます : 
ブロック し て いる ドメイン の シーケンス を ( タプル として ) 返し ます 。 
ブロック する ドメイン を 設定 し ます 。 
domain が クッキー を 授受 し ない ブラックリスト に 載っ て いる か どう か を 返し ます 。 
None あるいは 明示 的 に 許可 さ れ て いる ドメイン を ( タプル として ) 返し ます 。 
許可 する ドメイン 、 あるいは None を 設定 し ます 。 
domain が クッキー を 授受 する ホワイト リスト に 載っ て いる か どう か を 返し ます 。 
サイト に 、 国 別 コード と トップ レベル ドメイン だけ から なる ドメイン 名 (. co . uk , . gov . uk ,. co . nz など ) を 設定 さ せ ない よう に し ます 。 
これ は 完璧 から は ほど遠い 実装 で あり 、 いつも うまく いく と は 限り ませ ん ! 
RFC 2965 プロトコル の 厳密 性 に関する スイッチ : 
検証 不可能 な トランザクション ( 通常 これ は リダイレクト か 、 別 の サイト が ホスティング し て いる イメージ の 読み込み 要求 です ) に関する RFC 2965 の 規則 に 従い ます 。 
この 値 が 偽 の 場合 、 検証 可能 性 を 基準 に し て クッキー が ブロック さ れる こと は 決して あり ませ ん 。 
Netscape プロトコル の 厳密 性 に関する スイッチ : 
検証 不可能 な トランザクション に関する RFC 2965 の 規則 を Netscape クッキー に対して も 適用 し ます 。 
Netscape クッキー に対する ドメイン マッチング の 規則 を どの 程度 厳しく する か を 指示 する フラグ です 。 
とり うる 値 について は 下 の 説明 を 見 て ください 。 
Set - Cookie : ヘッダ で 、 '$' で 始まる 名前 の クッキー を 無視 し ます 。 
要求 し た URI に パス が マッチ し ない クッキ の 設定 を 禁止 し ます 。 
strict _ ns _ domain は いくつ か の フラグ の 集合 です 。 
これ は いくつ か の 値 を or する こと で 構成 し ます ( たとえば DomainStrictNoDots | DomainStrictNonDomain は 両方 の フラグ が 設定 さ れ て いる こと に なり ます )。 
クッキー を 設定 する さい 、 ホスト 名 の プレフィクス に ドット が 含ま れる の を 禁止 し ます ( 例 : www . foo . bar . com は . bar . com の クッキー を 設定 する こと は でき ませ ん 、 なぜ なら www . foo は ドット を 含ん で いる から です )。 
domain クッキー 属性 を 明示 的 に 指定 し て い ない クッキー は 、 その クッキー を 設定 し た ドメイン と 同一 の ドメイン だけ に 返さ れ ます ( 例 : example . com から の クッキー に domain クッキー 属性 が ない 場合 、 その クッキー が spam . example . com に 返さ れる こと は あり ませ ん )。 
クッキー を 設定 する さい 、 RFC 2965 の 完全 ドメイン マッチング を 要求 し ます 。 
以下 の 属性 は 上記 の フラグ の うち もっとも よく 使わ れる 組み合わせ で 、 便宜 を はかる ため に 提供 さ れ て い ます 。 
0 と 同じ です ( つまり 、 上述 の Netscape の ドメイン 厳密 性 フラグ が すべて オフ に さ れ ます )。 
DomainStrictNoDots | DomainStrictNonDomain と 同じ です 。 
EditPythonPrefs ダイアログボックス の 「 Default startupoptions ...」 ボタン を 押す と 、 沢山 の オプション が 現れ ます 。 オプション の 中 に は 、 スクリプト の 終了 後 に 「 Output 」 ウィンドウ を 開い た まま に し て おける よう に し たり 、 スクリプト の 実行 終了 後 に 対話 モード に 入れる よう に し たり できる もの が あり ます 。 
後者 は スクリプト 実行 中 に 生成 さ れ た オブジェクト を 調べ たい 場合 に とても 便利 です 。 
2 . 1 基本 的 な こと 
2 . 新しい 型 を 定義 する 
注意 : Python 2 . 2 から 、 新しい 型 を 定義 する 方法 が かなり 変わっ て ( よく なっ て ) い ます 。 
この 文書 は Python 2 . 2 および それ 以降 で 新しい 型 を どう やっ て 定義 する か について 述べ て い ます 。 
古い バージョン の Python を サポート する 必要 が ある 場合 は 、 この 文書 の 古い 版 を 参照 し て ください 。 
2 . 2 . 3 . 1 総称 的 な 属性 を 管理 する 
2 . 2 . 3 . 2 特定 の 型 に 特 化 し た 属性 の 管理 
オブジェクト の 削除 ( deletion ) は 、 代入 の 定義 と 非常 に 似 た 方法 で 再帰 的 に 定義 さ れ て い ます 。 
ここ で は 完全 な 詳細 を 記述 する より も いくつ か の ヒント を 述べる に とどめ ます 。 ターゲット リスト に対する 削除 は 、 各々 の ターゲット を 左 から 右 へ と 順に 再帰 的 に 削除 し ます 。 
名前 に対して 削除 を 行う と 、 ローカル または グローバル 名前 空間 で の その 名前 の 束縛 を 解除 し ます 。 どちら の 名前 空間 か は 、 名前 が 同じ コード ブロック 内 の global 文 で 宣言 さ れ て いる か どう か に より ます 。 
名前 が 未 束縛 ( unbound ) で ある ば あい 、 NameError 例外 が 送出 さ れ ます 。 
ネスト し た ブロック 中 で 自由 変数 
に なっ て いる ローカル 名前 空間 上 の 名前 に対する 削除 は 不正 な 操作 に なり ます 属性 参照 、 添字 表記 、 および スライス の 削除 操作 は 、 対象 と なる 一 次 語 オブジェクト に 渡さ れ ます ; スライス の 削除 は 一般 的 に は 適切 な 型 の 空 の スライス を 代入 する の と 等価 です ( が 、 この 仕様 自体 も スライス さ れる オブジェクト で 決定 さ れ て い ます )。 
以下 の トーク ン は 文法 上 の デリミタ として 働き ます : 
浮動 小数点 数 や 虚数 リテラル 中 に ピリオド が あっ て も かまい ませ ん 。 
ピリオド 三つ の 列 は スライス 表記 における 省略 符号 ( ellipsis ) として 特別 な 意味 を 持っ て い ます 。 リスト 後半 の 累算 代入 演算 子 ( augmentedassignment operator ) は 、 字句 的 に は デリミタ として 振舞い ます が 、 演算 も 行い ます 。 
以下 の 印字 可能 ASCII 文字 は 、 他 の トー クン の 一部 として 特殊 な 意味 を 持っ て い たり 、 字句 解析 器 にとって 重要 な 意味 を 持っ て い ます : ' " # \ 
以下 の 印字 可能 ASCII 文字 は 、 Python で は 使わ れ て い ませ ん 。 
これら の 文字 が 文字 列 リテラル や コメント の 外 に ある 場合 、 無条件 に エラー と なり ます : 
この 節 で は deque を つかっ た さまざま な アプローチ を 紹介 し ます 。 rotate () メソッド の おかげ で 、 deque の 一部 を 切り出し たり 削除 し たり できる こと に なり ます 。 
たとえば del d [ n ] の 純粋 な Python 実装 で は pop し たい 要素 まで rotate () し ます : 
この アプローチ を やや 変え た もの として 、 Forth スタイル の スタック 操作 、 つまり dup , drop , swap , over , pick , rot , および roll を 実装 する の も 簡単 です 。 ラウンド ロビン の タスク サーバ は deque を つかっ て 、 popleft () で 現在 の タスク を 選択 し 、 入力 ストリーム が 使い果たさ れ なけれ ば append () で タスク リスト の 戻し て やる こと が でき ます : 
複数 パス の データ ・ リダクション アルゴリズム は 、 popleft () を 複数 回 呼ん で 要素 を とりだし 、 リダクション 用 の 関数 を 適用 し て から append () で deque に 戻し て やる こと により 、 簡潔 かつ 効率 的 に 表現 する こと が でき ます 。 たとえば 入れ子 状 に なっ た リスト で バランス さ れ た 二 進 木 を つくり たい 場合 、 2 つ の 隣接 する ノード を ひとつ の リスト に グループ 化 する こと に なり ます : 
2 setup スクリプト を 書く 
3 . 1 拡張 モジュール の 名前 と パッケージ 
pure Python モジュール を 書く より Python 拡張 モジュール を 書く 方 が ちょっと だけ 複雑 な よう に 、 Distutils で の 拡張 モジュール に関する 記述 も ちょっと 複雑 です 。 
仮に 、 foo . c で 実装 さ れ た 拡張 モジュール foo が 、 配布 物 に 一つ だけ 入っ てる と し ます 。 
コンパイラ / リンカ に 他 の 情報 を 与える 必要 が ない 場合 、 この 拡張 モジュール の ため の 記述 は きわめて 単純 です : 
Extension クラス は 、 setup () によって 、 distutils . core から import さ れ ます 。 
従って 、 拡張 モジュール が 一つ だけ 入っ て い て 、 他 に は 何 も 入っ て い ない モジュール 配布 物 を 作成 する ため の setup スクリプト は 、 以下 の よう に なる でしょ う : 
Explained クラス ( 実質 的 に は 、 Explained クラス の 根底 に ある build _ ext コマンド で 実装 さ れ て いる 、 拡張 モジュール を ビルド する 機構 ) は 、 Python 拡張 モジュール を きわめて 柔軟 に 記述 できる よう な サポート を 提供 し て い ます 。 これ について は 後 の 節 で 説明 し ます 。 
Extension クラス の コンス トラクタ に 与える 最初 の 引数 は 、 常に 拡張 モジュール の 名前 に し ます 。 これ に は パッケージ 名 も 含め ます 。 
と する と 、 拡張 モジュール を ルート パッケージ に 置く こと に なり ます 。 
一方 、 Extension (' pkg . foo ', [' src / foo 1 . c ', ' src / foo 2 . c ']) 
は 、 同じ 拡張 モジュール を pkg パッケージ の 下 に 置く よう 記述 し て い ます 。 
ソース コード ファイル と 、 作成 さ れる オブジェクト コード は どちら の 場合 でも 同じ です ; 作成 さ れ た 拡張 モジュール が ファイル システム 上 の どこ に 置か れる か ( すなわち Python の 名前 空間 上 の どこ に 置か れる か ) が 違う に すぎ ませ ん 。 同じ パッケージ 内 に ( または 、 同じ 基底 パッケージ 下 に ) いくつ も の 拡張 モジュール が ある 場合 、 ext _ package キーワード 引数 を setup () に 指定 し ます 。 
と する と 、 foo . c を コンパイル し て pkg . foo に し 、 bar . c を コンパイル し て pkg . subpkg . bar に し ます 。 
Extension コンス トラクタ の 二 番目 の 引数 は 、 ソース ファイル の リスト です 。 
Distutils は 現在 の ところ 、 C 、 C ++、 そして Objective - C の 拡張 しか サポート し て い ない ので 、 引数 は 通常 C / C ++/ Objective - C ソース コード ファイル に なり ます 。 
( C ++ ソース コード ファイル を 区別 できる よう 、 正しい ファイル 拡張 子 を 使っ て ください : . cc や . cpp に すれ ば 、 Unix と Windows 用 の 双方 の コンパイラ で 認識 さ れる よう です 。 
Extension に は 三 種類 の オプション 引数 : include _ dirs , define _ macros , そして undef _ macros が あり 、 検索 対象 に する インクルードディレクトリ を 指定 し たり 、 プリプロセッサ マクロ を 定義 ( define )/ 定義 解除 ( undefine ) し たり する 必要 が ある とき 役立ち ます 。 例えば 、 拡張 モジュール が 配布 物 ルート 下 の include ディレクトリ に ある ヘッダ ファイル を 必要 と する とき に は 、 include _ dirs オプション を 使い ます : 
ここ に は 絶対 パス も 指定 でき ます ; 例えば 、 自分 の 拡張 モジュール が 、 / usr の 下 に X 11 R 6 を インストール し た Unix システム だけ で ビルド さ れる と 知っ て いれ ば 、 
Extension (' foo ', [' foo . c '], include _ dirs =['/ usr / include / X 11 ']) の よう に 書け ます 。 
自分 の コード を 配布 する 際 に は 、 この よう な 可 搬性 の ない 使い方 は 避ける べき です : おそらく 、 C の コード を 
の よう に 書い た 方 が まし でしょ う 。 他 の Python 拡張 モジュール 由来 の ヘッダ を include する 必要 が ある なら 、 Distutils の install _ header コマンド が 一貫 し た 方法 で ヘッダ ファイル を インストール する という 事実 を 活用 でき ます 。 
例えば 、 Numerical Python の ヘッダ ファイル は 、 ( 標準 的 な Unix が インストール さ れ た 環境 で は ) / usr / local / include / python 1 . 5 / Numerical に インストール さ れ ます 。 ( 実際 の 場所 は 、 プラットフォーム や どの Python を インストール し た か で 異なり ます 。 
) Python の include ディレクトリ -- 今 の 例 で は / usr / local / include / python 1 . 5 -- は 、 Python 拡張 モジュール を ビルド する 際 に 常に ヘッダ ファイル 検索 パス に 取り込ま れる ので 、 C コード を 書く 上 で もっとも よい アプローチ は 、 
と なり ます 。 Numerical インクルードディレクトリ 自体 を ヘッダ 検索 パス に 置き たい の なら 、 この ディレクトリ を Distutils の 
モジュール を 使っ て 見つけ させ られ ます : 
name は 定義 し たい マクロ の 名前 ( 文字 列 ) で 、 value は その 値 です : value は 文字 列 か None に なり ます 。 
( マクロ FOO を None に する と 、 C ソース コード 内 で # define FOO と 書い た の と 同じ に なり ます : こう 書く と 、 ほとんど の コンパイラ は FOO を 文字 列 1 に 設定 し ます 。 
は 、 全て の C ソース コード ファイル の 先頭 に 、 以下 の マクロ : 
# define NDEBUG 1 # define HAVE _ STRFTIME # undef HAVE _ FOO # undef HAVE _ BAR が ある の と 同じ に なり ます 。 
拡張 モジュール を ビルド する 際 に リンク する ライブラリ や 、 ライブラリ を 検索 する ディレクトリ も 指定 でき ます 。 
非 標準 の パス 上 に ある ライブラリ を リンク し たい なら 、 その 場所 を library _ dirs に 入れ て おか なけれ ば なり ませ ん : 
( 繰り返し に なり ます が 、 この 手 の 可 搬性 の ない 書き方 は 、 コード を 配布 する の が 目的 なら 避ける べき です 。 
) 3 . 5 その他 の 操作 
他 に も いくつ か オプション が あり 、 特殊 な 状況 を 扱う ため に 使い ます 。 
extra _ objects オプション に は 、 リンカ に 渡す オブジェクト ファイル の リスト を 指定 し ます 。 
ファイル 名 に は 拡張 子 を つけ て は なら ず 、 コンパイラ で 使わ れ て いる デフォルト の 拡張 子 が 使わ れ ます 。 
extra _ compile _ args および extra _ link _ args に は 、 それぞれ コンパイラ と リンカ に 渡す 追加 の コマンド ライン 引数 を 指定 し ます 。 
export _ symbols は Windows で のみ 意味 が あり ます 。 
この オプション に は 、 公開 ( export ) する ( 関数 や 変数 の ) シンボル の リスト を 入れ られ ます 。 
コンパイル し て 拡張 モジュール を ビルド する 際 に は 、 この オプション は 不要 です : Distutils は 公開 する シンボル を 自動的 に initmodule に 渡す から です 。 
デスクリプタ は 、 デスクリプタ プロトコル ( descriptor protocol ) の メソッド : __ get __(), __ set __(), および __ delete __() を 使っ て 、 属性 アクセス を オーバライド し て いる もの です 。 
これら の メソッド の いずれ か が オブジェクト に対して 定義 さ れ て いる 場合 、 オブジェクト は デスクリプタ で ある と いい ます 。 属性 アクセス の デフォルト の 動作 は 、 オブジェクト の 辞書 から 値 を 取り出し たり 、 値 を 設定 し たり 、 削除 し たり する という もの です 。 
例えば 、 a . x による 属性 の 検索 で は 、 まず a .__ dict __[' x '] 、 次に type ( a ).__ dict __[' x '] 、 そして type ( a ) の 基底 クラス で メタ クラス で ない もの に 続く 、 といった 具合 に 連鎖 が 起こり ます 。 しかしながら 、 検索 対象 と なる 値 が 、 デスクリプタ メソッド の いずれ か を 定義 し て いる オブジェクト の 属性 値 で ある 場合 、 Python は デフォルト の 動作 を オーバライド し て 、 デスクリプタ メソッド の 方 を 呼び出し ます 。 
前後 する 呼び出し 連鎖 の 中 の どこ で デスクリプタ メソッド が 呼び出さ れる か は 、 どの デスクリプタ メソッド が 定義 さ れ て いる か と 、 どう やっ て デスクリプタ メソッド が 呼ば れる か に 依存 し ます 。 
直接 呼出し ( Direct Call ) 
最も 単純 で 、 かつ めった に 使わ れ ない 呼び出し 操作 は 、 コード 中 で 直接 デスクリプタ メソッド の 呼び出し : x .__ get __( a ) を 行う と いう もの です 。 
インスタンス 束縛 ( Instance Binding ) 
新しい 形式 の クラス の インスタンス に対する 束縛 で は 、 a . x は 呼び出し : type ( a ).__ dict __[' x '].__ get __( a , type ( a )) に 変換 さ れ ます 。 
クラス 束縛 ( Class Binding ) 
新しい 形式 の クラス に対する 束縛 で は 、 A . x は 呼び出し : A .__ dict __[' x '].__ get __( None , A ) に 変換 さ れ ます 。 
スーパクラス 束縛 ( Super Binding ) 
a が super の インスタンス で ある 場合 、 束縛 super ( B , obj ). m () を 行う と まず A 、 続い て B に対して obj .__ class _.__ mro __ を 検索 し 、 次に 呼び出し : A .__ dict __[' m '].__ get __( obj , A ) で デスクリプタ を 呼び出し ます 。 
インスタンス 束縛 で は 、 デスクリプタ 呼び出し の 優先 順位 は どの デスクリプタ が 定義 さ れ て いる か に 依存 し ます 。 
データ デスクリプタ で は 、 __ get __() と __ set __() を 定義 し ます 。 
非 データ デスクリプタ に は __ get __() メソッド しか あり ませ ん 。 
インスタンス 辞書 内 で 属性 値 が 再 定義 さ れ て も 、 データ デスクリプタ は 常に この 値 を オーバライド し ます 。 
対照 的 に 、 非 データ デスクリプタ の 場合 に は 、 属性 値 は インスタンス 側 で オーバライド さ れ ます 。 ( staticmethod () や classmethod () を 含む ) Python メソッド は 、 非 データ デスクリプタ として 実装 さ れ て い ます 。 
その 結果 、 インスタンス で は メソッド を 再 定義 し たり オーバライド でき ます 。 
この こと により 、 個々 の インスタンス が 同じ クラス の 他 の インスタンス と 互いに 異なる 動作 を 獲得 する こと が でき ます 。 
property () 関数 は データ デスクリプタ として 実装 さ れ て い ます 。 従って 、 インスタンス は ある プロパティ の 動作 を オーバライド する こと が でき ませ ん 。 
`` デスクリプタ ( descriptor )'' は 、 ある オブジェクト の いくつ か の 属性 について 記述 し た オブジェクト です 。 デスクリプタ オブジェクト は 型 オブジェクト の 辞書 内 に あり ます 。 
組み込み デスクリプタ 型 の 型 オブジェクト です 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 PyObject * 
新た な 参照 . 
デスクリプタ オブジェクト descr が データ 属性 の デスクリプタ の 場合 に は 真 を 、 メソッド デスクリプタ の 場合 に は 偽 を 返し ます 。 
3 . 3 . 2 . 3 デスクリプタ を 呼び出す 
3 . 3 . 2 . 2 デスクリプタ ( descriptor ) の 実装 以下 の メソッド は 、 デスクリプタ メソッド を 持っ て いる クラス ( いわゆる デスクリプタ ( descriptor ) クラス ) の インスタンス が 別 の 新た な 形式 の クラス 、 いわゆる オーナ ( owner ) クラス の クラス 辞書 に 存在 する 場合 に のみ 適用 さ れ ます 。 
以下 の 例 で の `` 属性 '' と は 、 属性 の 名前 が オーナクラス の __ dict __ に 入っ て いる プロパティ ( porperty ) を 検索 する ため の キー に なっ て いる よう な 属性 を 指し ます 。 
この メソッド は ( 計算 さ れ た ) 属性 値 を 返す か 、 AttributeError 例外 を 送出 し なけれ ば なり ませ ん 。 
オーナクラス の インスタンス instance 上 の 属性 を 新た な 値 value に 設定 する 際 に 呼び出さ れ ます 。 
オーナクラス の インスタンス instance 上 の 属性 を 削除 する 際 に 呼び出さ れ ます 。 
ダイアログウィンドウオブジェクト に は 、 Window オブジェクト の メソッド の 他 に 次 の メソッド が あり ます 。 
ID resid の DLOG リソース から ダイアログウィンドウ を 作成 し ます 。 
ダイアログオブジェクト は self . wid に 保存 さ れ ます 。 
アイテム 番号 item が ヒット さ れ た 時 に 呼ば れ ます 。 
トグルボタン など の 再 描画 は 自分 で 処理 し て ください 。 
辞書 表現 は 、 新た な 辞書 オブジェクト を 表し ます 。 
) 重複 する キー 間 で 衝突 が 起き て も 、 衝突 が 検出 さ れる こと は あり ませ ん ; ある キー に対して 、 最後 に 渡さ れ た データ ( プログラム テキスト 上 で は 、 辞書 表記 の 最も 右側 値 と なる もの ) が 使わ れ ます 。 
この PyObject の サブ タイプ は Python の 辞書 オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の 辞書 を 表現 し ます 。 
この オブジェクト は 、 Python プログラム に は types . DictType および types . DictionaryType として 公開 さ れ て い ます 。 
引数 が PyDictObject の とき に 真 を 返し ます 。 
p が 辞書 型 オブジェクト で あり 、 かつ 辞書 型 の サブ クラス の インスタンス で ない 場合 に 真 を 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ある マップ 型 オブジェクト に対して 、 読み出し 専用 に 制限 さ れ た プロキシオブジェクト ( proxy object ) を 返し ます 。 
通常 、 この 関数 は 動的 で ない クラス 型 ( non - dynamic class type ) の クラス 辞書 を 変更 さ せ ない ため に プロ キシ を 作成 する ため に 使わ れ ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
現在 辞書 に 入っ て いる 全て の キー と 値 の ペア を 除去 し て 空 に し ます 。 
辞書 p に key が 入っ て いる か 判定 し ます 。 
p の 要素 が key に 一致 し た 場合 は 1 を 返し 、 それ 以外 の 場合 に は 0 を 返し ます 。 
エラー の 場合 - 1 を 返し ます 。 
この 関数 は Python の 式 " 
" と 等価 です 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
p と 同じ キー と 値 の ペア が 入っ た 新た な 辞書 を 返し ます 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
辞書 p に 、 key を キー として 値 value を 挿入 し ます 。 
key は ハッシュ 可能 で なけれ ば なり ませ ん ; ハッシュ 可能 で ない 場合 、 TypeError を 送出 し ます 。 成功 し た 場合 に は 0 を 、 失敗 し た 場合 に は - 1 を 返し ます 。 
辞書 p に 、 key を キー として 値 value を 挿入 し ます 。 
key は char * 型 で なけれ ば なり ませ ん 。 
キー オブジェクト は PyString _ FromString ( key ) で 生成 さ れ ます 。 
成功 し た 場合 に は 0 を 、 失敗 し た 場合 に は - 1 を 返し ます 。 
辞書 p から key を キー と する エントリ を 除去 し ます 。 key は ハッシュ 可能 で なけれ ば なり ませ ん ; ハッシュ 可能 で ない 場合 、 TypeError を 送出 し ます 。 
成功 し た 場合 に は 0 を 、 失敗 し た 場合 に は - 1 を 返し ます 。 
辞書 p から 文字 列 key を キー と する エントリ を 除去 し ます 。 
成功 し た 場合 に は 0 を 、 失敗 し た 場合 に は - 1 を 返し ます 。 
辞書 p 内 で key を キー と する オブジェクト を 返し ます 。 
キー key が 存在 し ない 場合 に は NULL を 返し ます が 、 例外 を セット し ませ ん 。 
PyDict _ GetItem () と 同じ です が 、 key は PyObject * で は なく char * で 指定 し ます 。 
辞書 オブジェクト の メソッド item () の よう に 、 辞書 内 の 全て の 要素 対 が 入っ た PyListObject を 返し ます 。 ( items () について は 
を 参照 し て ください 。 ) 
辞書 オブジェクト の メソッド keys () の よう に 、 辞書 内 の 全て の キー が 入っ た PyListObject を 返し ます 。 ( keys () について は 
辞書 オブジェクト の メソッド values () の よう に 、 辞書 内 の 全て の 値 が 入っ た PyListObject を 返し ます 。 ( values () について は 
辞書 内 の 要素 の 数 を 返し ます 。 
辞書 に対して " len ( p )" を 実行 する の と 同じ です 。 
辞書 p 内 の 全て の キー / 値 の ペア にわたる 反復 処理 を 行い ます 。 
ppos が 参照 し て いる int 型 は 、 この 関数 で 反復 処理 を 開始 する 際 に 、 最初 に 関数 を 呼び出す より も 前 に 0 に 初期 化 し て おか なけれ ば なり ませ ん ; この 関数 は 辞書 内 の 各 ペア を 取り上げる ごと に 真 を 返し 、 全て の ペア を 取り上げ た こと が 分かる と 偽 を 返し ます 。 
パラメタ pkey および pvalue に は 、 それぞれ 辞書 の 各々 の キー と 値 を 指す ポインタ か 、 または NULL が 入り ます 。 
この 関数 から 返さ れる 参照 は すべて 借り た 参照 に なり ます 。 反復 処理 中 に ppos を 変更 し て は なり ませ ん 。 
この 値 は 内部 的 な 辞書 構造 体 の オフセット を 表現 し て おり 、 構造 体 は スパース な ので 、 オフセット の 値 に 一貫 性 が ない ため です 。 
以下 に 例 を 示し ます : 
PyObject * key , * value ; int pos = 0 ; while ( PyDict _ Next ( self - dict , pos , key , value )) {/* 取り出し た 値 で 何らかの 処理 を 行う ... */...} 
反復 処理 中 に 辞書 p を 変更 し て は なり ませ ん 。 
( Python 2 . 1 から は ) 辞書 を 反復 処理 する 際 に 、 キー に 対応 する 値 を 変更 し て も 大丈夫 に なり まし た が 、 キー の 集合 を 変更 し ない こと が 前提 です 。 
PyObject * a , PyObject * b , int override ) マップ 型 オブジェクト b の 全て の 要素 にわたって 、 反復 的 に キー / 値 の ペア を 辞書 a に 追加 し ます 。 
C で 表せ ば PyDict _ Merge ( a , b , 1 ) と 同じ 、 Python で 表せ ば 
seq 2 内 の キー / 値 ペア を 使っ て 、 辞書 a の 内容 を 更新 し たり 統合 し たり し ます 。 seq 2 は 、 キー / 値 の ペア と みなせる 長 さ 2 の 反復 可能 オブジェクト ( iterable object ) を 生成 する 反復 可能 オブジェクト で なけれ ば なり ませ ん 。 
この 例 で は 2 つ の テキスト を 比較 し ます 。 
初め に 、 改行 文字 で 終了 する 独立 し た 1 行 の 連続 し た ( ファイル 形式 オブジェクト の readlines () メソッド によって 得 られる よう な ) テキスト を 用意 し ます 。 
注意 : Differ オブジェクト を インスタンス 化 する とき 、 `` junk .'' で ある 列 と 文字 を フィルタ リング す 関数 を 渡す こと が でき ます 。 
詳細 は Differ () コンス トラクタ を 参照 し て ください 。 
最後 に 、 2 つ を 比較 し ます 。 
Differ オブジェクト によって 抽出 さ れ た 差分 は 、 最小 単位 の 差分 を 見 て も 問題 なく 抽出 さ れ ます 。 
隣接 する マッチ 列 の 同期 する ポイント を 制限 する こと で 、 より 長い 差異 を 算出 する 再帰 的 な コスト で の 、 局所 性 の 概念 を 制限 し ます 。 Differ は 、 以下 の よう な コンス トラクタ を 持ち ます 。 
クラス Differ 
オプション の パラメータ linejunk と charjunk は filter 関数 の ため に 指定 し ます ( もしくは None を 指定 )。 
linejunk : ひとつ の 文字 列 引数 を 受け取れる べき 関数 です 。 文字 列 が junk の とき に true を 返し ます 。 
デフォルト で は 、 None で あり 、 どんな 行 で あっ て も junk と は 見なさ れ ませ ん 。 
charjunk : この 関数 は ( 長 さ 1 の ) 文字 列 を 引数 として 受け取り 、 文字 列 が junk で ある とき に true を 返し ます 。 デフォルト は None で あり 、 どんな 文字 列 も junk と は 見なさ れ ませ ん 。 
Differ オブジェクト は 、 以下 の ひとつ の メソッド によって 使わ れ ます ( 違い を 生成 し ます )。 
文字 列 から なる 2 つ の シーケンス を 比較 し 、 差異 ( を 表す 文字 列 から なる シーケンス ) を 生成 し ます 。 Each sequence must contain individual single - line strings endingwith newlines . Such sequences can be obtained from thereadlines () method of file - like objects . The delta generatedalso consists of newline - terminated strings , ready to be printed as - isvia the writelines () method of a file - like object . それぞれ の シーケンス は 、 改行 文字 によって 終了 する 、 独立 し た ひと 連なり の 文字 列 で なけれ ば なり ませ ん 。 
その よう な シーケンス は 、 ファイル 形式 オブジェクト の readline () メソッド によって 得る こと が でき ます 。 
( 得 られる ) 差異 は 改行 文字 で 終了 する 文字 列 として 得 られ 、 ファイル 形式 オブジェクト の writeline () メソッド によって 出力 できる 形 に なっ て い ます 。 
dircmp の インスタンス は 以下 の コンス トラクタ で 生成 さ れ ます : 
クラス dircmp 
dircmp クラス は 以下 の メソッド を 提供 し て い ます : 
a および b の 間 の 比較 結果 を ( sys . stdout に ) 出力 し ます 。 
a および b および それら の 直下 に ある 共通 の サブ ディレクトリ 間 で の 比較 結果 を 出力 し ます 。 
a および b および それら の 共通 の サブ ディレクトリ 間 で の 比較 結果 を ( 再帰 的 に 比較 し て ) 出力 し ます 。 
dircmp は 、 比較 し て いる ディレクトリ ツリー に関する 様々 な 種類 の 情報 を 取得 する ため に 使える よう な 、 多く の 興味深い 属性 を 提供 し て い ます 。 __ getattr __() フック を 経由 する と 、 全て の 属性 を のろのろ と 計算 する ため 、 速度 上 の ペナルティ を 受け ない の は 計算 処理 の 軽い 属性 を 使っ た とき だけ な ので 注意 し て ください 。 
a に ある ファイル および サブ ディレクトリ です 。 hide および ignore で フィルタ さ れ て い ます 。 
b に ある ファイル および サブ ディレクトリ です 。 hide および ignore で フィルタ さ れ て い ます 。 
a および b の 両方 に ある ファイル および サブ ディレクトリ です 。 
a だけ に ある ファイル および サブ ディレクトリ です 。 
b だけ に ある ファイル および サブ ディレクトリ です 。 
a および b の 両方 に ある サブ ディレクトリ です 。 
a および b の 両方 に ある ファイル です 。 
a および b の 両方 に あり 、 ディレクトリ 間 で タイプ が 異なる か 、 os . stat () が エラー を 報告 する よう な 名前 です 。 
a および b 両方 に あり 、 一致 する ファイル です 。 
a および b 両方 に ある が 、 一致 し ない ファイル です 。 
a および b 両方 に ある が 、 比較 さ れ なかっ た ファイル です 。 
common _ dirs の ファイル 名 を dircmp オブジェクト に 対応付け た 辞書 です 。 
2 ディレクトリ 構造 標準 Python ドキュメント の ソース 配布 物 に は 、 数多く の ディレクトリ が 入っ て い ます 。 
サード パーティ 製 の ドキュメント は 、 この ディレクトリ 構造 下 や 似 た ディレクトリ 構造 下 に おく 必要 は あり ませ ん が 、 Python ドキュメント 作成 ツール を 利用 し て 新た な ドキュメント を 開発 する 際 に 、 どこ で 例題 や ツール を 探せ ば よい か 知っ て おけ ば 便利 でしょ う 。 
ファイル は README や Makefile を 含め 、 ほとんど が その 名 の 通り の ファイル です 。 
ディレクトリ は 以下 の 三つ の カテゴリ に 分かれ ます : 
ドキュメント ソース 
各 ドキュメント の LaTeX ソース は 、 それぞれ 別々 の ディレクトリ に 配置 さ れ て い ます 。 
ディレクトリ に は 、 各々 の ドキュメント を 漠然と 説明 する 短い 名前 が つい て い ます : 
ディレクトリ 
タイトル 
Macintosh モジュール リファレンス 
Python の 更新 情報 
出力 形式 ごと の 出力 ディレクトリ 
ほとんど の 出力 形式 に対して 、 出力 結果 の ドキュメント を 格納 する ディレクトリ が あり 、 その 出力 形式 で の ドキュメント 生成 を 制御 する Makefile が 入っ て い ます 。 
この カテゴリ の 例外 と なる の は Portable Document Format ( PDF ) および PostScript 版 で 、 これら は paper - a 4 / および paper - letter / に 出力 さ れ ます ( こう する こと で 、 LaTeX が 生成 する 全て の 一時 ファイル が 用紙 サイズ ごと に 同じ 場所 に 置か れ 、 目立た なく なり ます )。 
出力 形式 
HTML 形式 
GNU info 形式 
iSilo ドキュメント ( Palm OS 機器 用 ) 
paper - letter / PDF と PostScript 、 US - Letter サイズ 
補助 ファイル 群 
その他 の ディレクトリ は 、 様々 な 処理 で 用い られる 補助 ファイル を 格納 する ため の もの です 。 
補助 ファイル は 、 各 ドキュメント で 共通 の LaTeX ドキュメント クラス 、 LaTeX 2 HTML の サポート ファイル 、 ドキュメント の 構成 要素 と なる 雛形 ファイル 、 フォーマット 処理 の 様々 な ステップ を 実行 する スクリプト など です 。 
内容 
ドキュメント 間 で 共通 の 文章 
LaTeX 2 HTML 処理 の サポート 
ソース ドキュメント の 例 
LaTeX スタイル ファイル 
独自 の 処理 用 スクリプト 
Doc - SIG に は メーリングリスト の アーカイブ や 購読 情報 が あり 、 http :// www . python . org / sigs / doc - sig / で 利用 でき ます 。 SIG は ドキュメンテーション に 関心 を 持つ 全て の 人々 に 解放 さ れ て い ます 。 
標準 ドキュメント に対する コメント や バグ 報告 は docs @ python . org に 送っ て ください 。 
これ に は フォーマット 、 内容 、 文法 的 間違い や つづり 間違い 、 そして この ドキュメント 自体 に対する コメント も 含み ます 。 
この ドキュメント に対する コメント は 作者 で ある fdrake @ acm . org に 直接 送っ て いただい て も かまい ませ ん 。 注意 : 和訳 に対する コメント や バグ 報告 は 、 SourceForge . jp の プロジェクト ページ に お 寄せ ください 。 
A . 日本語 訳 について ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
3 . distutils による C 
3 . distutils による C 
4 . Windows 上 で の C 
3 . 1 拡張 モジュール の 配布 
拡張 モジュール を うまく ビルド でき たら 、 三 通り の 使い方 が あり ます 。 エンド ユーザ は 普通 モジュール を インストール しよ う と 考え ます ; これ に は 
を 実行 し ます 。 モジュールメンテナ は ソース パッケージ を 作成 し ます ; これ に は 
プラットフォーム に 応じ て 、 以下 の コマンド の いずれ か を 使い ます 。 
リリース 2 . 4 , 平成 18 年 6 月 27 日 更新 ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
4 Distutils 固有 の 用語 以下 は Distutils を 使っ て Python モジュール を 配布 する 際 に 使わ れる 特有 の 用語 です : 
モジュール 配布 物 ( module distribution ) 
一 個 の ファイル として ダウンロード 可能 な リソース の 形 を とり 、 一括 し て インストール さ れる こと に なっ て いる 形態 で 配ら れる Python モジュール の コレクション です 。 
よく 知ら れ た モジュール 配布 物 に は 、 Numeric Python 、 PyXML 、 PIL ( the Python Imaging Library )、 mxBase など が あり ます 。 
( パッケージ ( package ) と 呼ば れる こと も あり ます が 、 Python 用語 として の パッケージ と は 意味 が 違い ます : 一つ の モジュール 配布 物 の 中 に は 、 場合 により ゼロ 個 、 一つ 、 それ 以上 の Python パッケージ が 入っ て い ます 。 ) 
pure モジュール 配布 物 ( pure module distribution ) 
pure Python モジュール や パッケージ だけ が 入っ た モジュール 配布 物 です 。 
`` pure 配布 物 ( pure distribution )'' と も 呼ば れ ます 。 
非 pure モジュール 配布 物 ( non - pure module distribution ) 
少なくとも 一つ の 拡張 モジュール が 入っ た モジュール 配布 物 です 。 
`` 非 pure 配布 物 '' と も 呼び ます 。 
配布 物 ルート ディレクトリ ( distribution root ) 
ソースコードツリー ( または ソース 配布 物 ) ディレクトリ の 最上 階層 で 、 setup . py の ある 場所 です 。 
一般 的 に は 、 setup . py は この ディレクトリ 上 で 実行 し ます 。 
open () によって 返さ れ た Dl オブジェクト は 次 の メソッド を 持っ て い ます : 
メモリー を 除く 全て の リソース を 解放 し ます 。 
name という 名前 の 関数 が 参照 さ れ た 共有 オブジェクト に 存在 する 場合 、 その ポインター ( 整数 値 ) を 返し ます 。 
存在 し ない 場合 None を 返し ます 。 
これ は 次 の よう に 使え ます : if a . sym (' time '): ... a . call (' time ')... else : ... time . time () 
( 0 は NULL ポインター で ある ので 、 この 関数 は 0 で ない 数 を 返す だろ う という こと に 注意 し て ください ) 
参照 さ れ た 共有 オブジェクト の name という 名前 の 関数 を 呼出し ます 。 引数 は 、 Python 整数 ( そのまま 渡さ れる )、 Python 文字 列 ( ポインター が 渡さ れる )、 None ( NULL として 渡さ れる ) の どれ か で なけれ ば いけ ませ ん 。 
Python は その 文字 列 が 変化 さ せ られる の を 好ま ない ので 、 文字 列 は const char * として 関数 に 渡さ れる べき で ある こと に 注意 し て ください 。 最大 で 10 個 の 引数 が 渡す こと が でき 、 与え られ ない 引数 は None として 扱わ れ ます 。 
関数 の 返り 値 は C long ( Python 整数 で ある ) です 。 
2 . 1 . 1 基本 の サンプル に データ と メソッド を 追加 する 
Python ラン タイム で は 、 すべて の Python オブジェクト は PyObject * 型 の 変数 として 扱い ます 。 
PyObject は さほど 大仰 な オブジェクト で は なく 、 単に オブジェクト に対する 参照 回数 と 、 その オブジェクト の 「 タイプ オブジェクト ( type object )」 へ の ポインタ を 格納 し て いる だけ です 。 
重要 な 役割 を 果たし て いる の は この タイプ オブジェクト です 。 
この 手 の こと は 例 を 見 た ほう が 早い でしょ う から 、 ここ に 最小限 の 、 しかし 完全 な 、 新しい 型 を 定義 する モジュール を あげ て おき ます : 
さしあたっ て 覚え て おく こと は 以上 です が 、 これ で 前 の 章 から すこし は 説明 が わかり やすく なっ て いる こと と 思い ます 。 最初 に 習う の は 、 つぎ の よう な もの です : 
これ が Noddy オブジェクト の 内容 です -- この ケース で は 、 ほか の Python オブジェクト が 持っ て いる もの と 何ら 変わり は あり ませ ん 。 つまり 参照 カウント と 型 オブジェクト へ の ポインタ です ね 。 
これら は PyObject _ HEAD マクロ によって 展開 さ れる メンバ です 。 
マクロ を 使う 理由 は 、 レイアウト を 標準 化 する ため と 、 デバッグ 用 ビルド 時 に 特別 な デバッグ 用 の メンバ を 定義 できる よう に する ため です 。 
この PyObject _ HEAD マクロ の 後 に は セミコロン が ない こと に 注意 し て ください 。 セミコロン は すでに マクロ 内 に 含ま れ て い ます 。 
うっかり 後 に セミコロン を つけ て しまわ ない よう に 気 を つけ て 。 
これ は お 使い の 機種 で は 何 の 問題 も 起こら ない かも しれ ませ ん が 、 機種 によって は 、 おそらく 問題 に なる の です ! ( Windows 上 で は 、 MS Visual C が この 手 の エラー を 出し 、 コンパイル でき ない こと が 知ら れ て い ます ) 比較 の ため 、 以下 に 標準 的 な Python の 整数 型 の 定義 を 見 て み ましょ う : 
typedef struct { PyObject _ HEADlong ob _ ival ;} PyIntObject ; で は 次に いっ て み ます 。 
かなめ の 部分 、 タイプ オブジェクト です 。 
object . h の 中 に ある PyTypeObject の 定義 を 見る と 、 実際 に は ここ に 挙げ た 以上 の 数 の メンバ が ある と わかる でしょ う 。 
これ 以外 の メンバ は C コンパイラ によって ゼロ に 初期 化 さ れる ので 、 必要 な 時 を 除い て ふつう は それら の 値 を 明示 的 に は 指定 せ ず に おき ます 。 次 の もの は 非常 に 重要 な ので 、 とくに 最初 の 最初 に 見 て おき ましょ う : 
これ は ちょっと ぶっきらぼう です ね 。 実際 に 書き たかっ た の は こう です : 
この 場合 、 タイプ オブジェクト の 型 は 「 type 」 という 名前 に なり ます が 、 これ は 厳密 に は C の 基準 に 従っ て おら ず 、 コンパイラ によって は 文句 を 言わ れ ます 。 
幸い に も 、 この メンバ は PyType _ Ready () が 埋め て くれ ます 。 
ヘッダ 中 の ob _ size メンバ は 使わ れ て い ませ ん 。 これ は 歴史 的 な 遺物 で あり 、 構造 体 中 に これ が 存在 し て いる の は 古い バージョン の Python 用 に コンパイル さ れ た 拡張 モジュール と の バイナリ 上 の 互換 性 を 保つ ため です 。 
ここ に は つねに ゼロ を 指定 し て ください 。 
これ は 型 の 名前 です 。 
この 名前 は オブジェクト の デフォルト の 表現 形式 と 、 いくつ か の エラーメッセージ 中 で 使わ れ ます 。 
たとえば : "" + noddy . new _ noddy () Traceback ( most recent call last ): File " stdin ", line 1 , in ? TypeError : cannot add type " noddy . Noddy " to string 
注意 : この 名前 は ドット で 区切ら れ た 名前 で 、 モジュール 名 と 、 その モジュール 内 で の 型名 を 両方 ふくん で い ます 。 
この 場合 の モジュール は noddy で 、 型 の 名前 は Noddy です から 、 ここ で の 型名 として は noddy . Noddy を 指定 する わけ です 。 
これ によって Python は PyObject _ New () が 呼ば れ た とき に どれ くらい の 量 の メモリ を 割り当てれ ば よい の か 知る こと が でき ます 。 
注意 : あなた の タイプ を Python で サブ クラス 化 可能 に し たい 場合 、 その タイプ が 基底 タイプ と 同じ tp _ basicsize を もっ て いる と 多重 継承 の とき に 問題 が 生じる こと が あり ます 。 
その タイプ を Python の サブ クラス に し た とき 、 その __ bases __ リスト に は あなた の タイプ が 最初 に くる よう に し なけれ ば なり ませ ん 。 さも ない と エラー の 発生 なし に あなた の タイプ の __ new __ メソッド を 呼び出す こと は でき なく なり ます 。 
この 問題 を 回避 する に は 、 つねに あなた の タイプ の tp _ basicsize を その 基底 タイプ より も 大きく し て おく こと です 。 
ほとんど の 場合 、 あなた の タイプ は object か 、 そう で なけれ ば 基底 タイプ に データ 用 の メンバ を 追加 し た もの でしょ う から 、 したがって 大き さ は つねに 増加 する ため この 条件 は 満たさ れ て い ます 。 
これ は リスト や 文字 列 など の 可変長 オブジェクト の ため の もの です 。 
すべて の 型 は フラグ に この 定数 を 含め て おく 必要 が あり ます 。 
これ は 現在 の バージョン の Python で 定義 さ れ て いる すべて の メンバ を 許可 し ます 。 この 型 の docstring は tp _ doc に 入れ ます 。 
ここ から タイプ メソッド に 入る わけ です が 。 ここ が あなた の オブジェクト が 他 と 違う ところ です 。 
オブジェクト の 作成 を 許可 する に は 、 tp _ new の 実装 を 提供 する 必要 が あり ます 。 
今回 は 、 API 関数 によって 提供 さ れる デフォルト の 実装 PyType _ GenericNew () を 使う だけ に し ましょ う 。 
これ を 単に tp _ new スロット に 代入 すれ ば よい の です が 、 これ は 互換 上 の 理由 から でき ませ ん 。 プラットフォーム や コンパイラ によって は 、 構造 体 メンバ の 初期 化 に 別 の 場所 で 定義 さ れ て いる C の 関数 を 代入 する こと は でき ない の です 。 
この 関数 は 、 上 で NULL に 指定 し て い た ob _ type など の いくつ も の メンバ を 埋め て 、 Noddy 型 を 初期 化 し ます 。 
これ は この 型 を モジュール 中 の 辞書 に 埋め込み ます 。 
これ で 、 Noddy クラス を 呼べ ば Noddy インスタンス を 作れる よう に なり まし た : 
これ だけ です ! 残る は これ を どう やっ て ビルド する か という こと です 。 
上 の コード を noddy . c という ファイル に 入れ て 、 以下 の もの を setup . py という ファイル に 入れ ましょ う 。 
そして 、 シェル から 以下 の よう に 入力 し ます 。 
何 も データ を 持っ て ない し 、 何 も し て は くれ ませ ん 。 
継承 し て サブ クラス を 作る こと さえ でき ない の です 。 
2 . 1 . 3 循環 ガベージコレクション を サポート する 
たくさん の メソッド が あり ます ね 。 
型 を 初期 化 する さい に 、 これら の メンバ を 正しい 順序 で 並べる よう 、 くれぐれも 注意 し て ください 。 
ふつう いちばん 簡単 な の は 、 必要 な メンバ が すべて 含ま れ て いる ( たとえ それら が 0 に 初期 化 さ れ て い て も ) 例 を とっ て き て 、 自分 の 型 に 合わせる よう 変更 を くわえる こと です 。 char * tp _ name ; /* 表示 用 */ 
これ は 型 の 名前 です 。 
前節 で 説明 し た よう に 、 これ は いろいろ な 場面 で 現れ 、 ほとんど は 診断 用 の 目的 で 使わ れる もの です 。 な ので 、 その よう な 場面 で 役に立つ で あろ う 名前 を 選ん で ください 。 
int tp _ basicsize , tp _ itemsize ; /* 割り当て 用 */ 
これら の メンバ は 、 この 型 の オブジェクト が 作成 さ れる とき に どれ だけ の メモリ を 割り当てれ ば よい の か を ラン タイム に 指示 し ます 。 
Python に は 可変長 の 構造 体 ( 文字 列 や リスト など を 想像 し て ください ) に対する 組み込み の サポート が ある程度 あり 、 ここ で tp _ itemsize メンバ が 使わ れ ます 。 
これら について は あと で ふれ ます 。 
DocXMLRPCServer は SimpleXMLRPCServer . SimpleXMLRPCServer の 派生 クラス で 、 セルフ - ドキュメンティング の 手段 と XML - RPC サーバ 機能 を 提供 し ます 。 
HTTP POST リクエスト は XML - RPC メソッド の 呼び出し として 扱わ れ ます 。 
HTTP GET リクエスト は pydoc スタイル の HTML ドキュメント 生成 の リクエスト として 扱わ れ ます 。 
これ は サーバ が 自分 自身 の ドキュメント を Web ベース で 提供 可能 で ある こと を 意味 し ます 。 
生成 する HTML ドキュメント の タイトル を セット し ます 。 
この タイトル は HTML の title 要素 として 使わ れ ます 。 
生成 する HTML ドキュメント の 名前 を セット し ます 。 
この 名前 は HTML 冒頭 の h 1 要素 に 使わ れ ます 。 set _ server _ documentation 
生成 する HTML ドキュメント の 本文 を セット し ます 。 
この 本文 は ドキュメント 中 の 名前 の 下 に パラグラフ として 出力 さ れ ます 。 
5 . 2 . 9 . 1 DocTest オブジェクト 
5 . 2 . 9 . 2 Example オブジェクト 
クラス DocTest 
単一 の 名前 空間 内 で 実行 さ れる doctest 例題 の 集まり です 。 
コンス トラクタ の 引数 は DocTest インスタンス 中 の 同名 の メンバ 変数 の 初期 化 に 使わ れ ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
DocTest で は 、 以下 の メンバ 変数 を 定義 し て い ます 。 
これら の 変数 は コンス トラクタ で 初期 化 さ れ ます 。 直接 変更 し て は なり ませ ん 。 
対話 モード における 例題 それぞれ を エン コード し て い て 、 テスト で 実行 さ れる 、 Example オブジェクト から なる リスト です 。 
例題 を 実行 する 名前 空間 ( いわゆる グローバル 変数 ) です 。 この メンバ は 、 名前 から 値 へ の 対応 付け を 行っ て いる 辞書 です 。 
例題 が 名前 空間 に対して ( 新た な 変数 を バインド する など ) 何らかの 変更 を 行っ た 場合 、 globs へ の 反映 は テスト の 実行 後 に 起こり ます 。 
DocTest を 識別 する 名前 の 文字 列 です 。 
通常 、 この 値 は テスト を 取り出し た オブジェクト か ファイル の 名前 に なり ます 。 
DocTest を 取り出し た ファイル の 名前 です ; ファイル 名 が 未知 の 場合 や DocTest を ファイル から 取り出し た の で ない 場合 に は None に なり ます 。 
filename 中 で DocTest の テスト 例題 が 始まっ て いる 行 の 行 番号 です 。 
行 番号 は 、 ファイル の 先頭 を ゼロ として 数え ます 。 
テスト を 取り出し た docstring 自体 を 現す 文字 列 です 。 docstring 文字 列 を 得 られ ない 場合 や 、 文字 列 から テスト 例題 を 取り出し た の で ない 場合 に は None に なり ます 。 
5 . 2 . 9 . 3 DocTestFinder オブジェクト 
5 . 2 . 9 . 4 DocTestParser オブジェクト 
クラス DocTestFinder 
与え られ た オブジェクト について 、 その docstring か 、 その オブジェクト に 入っ て いる オブジェクト の docstring から DocTest を 抽出 する 処理 クラス です 。 
現在 の ところ 、 モジュール 、 関数 、 クラス 、 メソッド 、 静的 メソッド 、 クラス メソッド 、 プロパティ から DocTest を 抽出 でき ます 。 オプション 引数 verbose を 使う と 、 抽出 処理 の 対象 と なる オブジェクト を 表示 でき ます 。 
DocTestFinder で は 以下 の メソッド を 定義 し て い ます : 
name を 指定 し ない 場合 、 
obj .__ name __ を 使い ます 。 オプション の パラメタ module は 、 指定 し た オブジェクト を 収め て いる モジュール を 指定 し ます 。 
module を 指定 し ない か 、 None を 指定 し た 場合 に は 、 正しい モジュール を 自動的 に 決定 しよ う と 試み ます 。 
オブジェクト の モジュール は 以下 の よう な 役割 を 果たし ます : 
globs を 指定 し て い ない 場合 、 オブジェクト の モジュール は デフォルト の 名前 空間 に なり ます 。 
他 の モジュール から import さ れ た オブジェクト に対して DocTestFinder が DocTest を 抽出 する の を 避ける ため に 使い ます ( module 由来 で ない オブジェクト を 無視 し ます )。 
オブジェクト の 入っ て いる ファイル 名 を 調べる ため に 使い ます 。 
オブジェクト が ファイル 内 の 何 行 目 に ある か を 調べる 手助け に し ます 。 
module が False の 場合 に は 、 モジュール の 検索 を 試み ませ ん 。 
各々 の DocTest に対して 、 グローバル 変数 を 表す 辞書 の 新た な 浅い コピー を 生成 し ます 。 
globs を 指定 し ない 場合 に 使わ れる の デフォルト 値 は 、 モジュール を 指定 し て いれ ば その モジュール の __ dict __ に なり 、 指定 し て い なけれ ば {} に なり ます 。 
extraglobs を 指定 し ない 場合 、 デフォルト の 値 は {} に なり ます 。 
5 . 2 . 9 . 5 DocTestRunner オブジェクト 
クラス DocTestParser 
対話 モード の 例題 を 文字 列 から 抽出 し 、 それ を 使っ て DocTest オブジェクト を 生成 する ため に 使わ れる 処理 クラス です 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
DocTestParser で は 以下 の メソッド を 定義 し て い ます : 
指定 し た 文字 列 から 全て の doctest 例題 を 抽出 し 、 DocTest オブジェクト 内 に 集め ます 。 
globs , name , filename , および lineno は 新た に 作成 さ れる DocTest オブジェクト の 属性 に なり ます 。 
詳しく は DocTest の ドキュメント を 参照 し て ください 。 
指定 し た 文字 列 から 全て の doctest 例題 を 抽出 し 、 Example オブジェクト から なる リスト に し て 返し ます 。 
各 Example の 行 番号 は ゼロ から 数え ます 。 
オプション 引数 name は この 文字 列 に つける 名前 で 、 エラーメッセージ に しか 使わ れ ませ ん 。 
指定 し た 文字 列 を 、 例題 と その間 の テキスト に 分割 し 、 例題 を Example オブジェクト に 変換 し 、 Example と 文字 列 から なる リスト に し て 返し ます 。 各 Example の 行 番号 は ゼロ から 数え ます 。 
オプション 引数 name は この 文字 列 に つける 名前 で 、 エラーメッセージ に しか 使わ れ ませ ん 。 
5 . 2 . 9 . 6 OutputChecker オブジェクト 
クラス DocTestRunner 
DocTest 内 の 対話 モード 例題 を 実行 し 、 検証 する 際 に 用い られる 処理 クラス です 。 予想 出力 と 実際 の 出力 と の 比較 は OutputChecker で 行い ます 。 
比較 は 様々 な オプション フラグ を 使っ て カスタマイズ でき ます ; 詳しく は 5 . 2 . 6 を 参照 し て ください 。 
デフォルト は sys . stdout . write です 。 
verbose が True の 場合 、 各 例題 を 実行 する つど 、 その 例題 について の 情報 を 出力 し ます 。 
verbose が False の 場合 、 テスト の 失敗 だけ を 出力 し ます 。 
verbose を 指定 し ない 場合 や None を 指定 し た 場合 、 コマンドラインスイッチ - v を 使っ た 場合 に のみ verbose 出力 を 適用 し ます 。 オプション の キーワード 引数 optionflags を 使う と 、 テストランナ が 予想 出力 と 実際 の 出力 を 比較 する 方法 や 、 テスト の 失敗 を 表示 する 方法 を 制御 でき ます 。 
詳しく は 5 . 2 . 6 節 を 参照 し て ください 。 
DocTestRunner で は 、 以下 の メソッド を 定義 し て い ます : 
test は example の 入っ て いる テスト です 。 
out は 出力 用 の 関数 で 、 DocTestRunner . run () に 渡さ れ ます 。 report _ success 
与え られ た 例題 が 正しく 動作 し た こと を 報告 し ます 。 
この メソッド は DocTestRunner の サブ クラス で 出力 を カスタマイズ できる よう に する ため に 提供 さ れ て い ます ; 直接 呼び出し て は なり ませ ん 。 
与え られ た 例題 が 正しく 動作 し なかっ た こと を 報告 し ます 。 
この メソッド は DocTestRunner の サブ クラス で 出力 を カスタマイズ できる よう に する ため に 提供 さ れ て い ます ; 直接 呼び出し て は なり ませ ん 。 
与え られ た 例題 が 予想 と は 違う 例外 を 送出 し た こと を 報告 し ます 。 この メソッド は DocTestRunner の サブ クラス で 出力 を カスタマイズ できる よう に する ため に 提供 さ れ て い ます ; 直接 呼び出し て は なり ませ ん 。 
test 内 の 例題 ( DocTest オブジェクト ) を 実行 し 、 その 結果 を 出力 用 の 関数 out を 使っ て 表示 し ます 。 
compileflags に は 、 例題 を 実行 する 際 に Python コンパイラ に 適用 する フラグ セット を 指定 し ます 。 
compileflags を 指定 し ない 場合 、 デフォルト 値 は globs で 適用 さ れ て いる future - import フラグ セット に なり ます 。 各 例題 の 出力 は DocTestRunner の 出力 チェッカ で 検査 さ れ 、 その 結果 は DocTestRunner . report _*. メソッド で 書式 化 さ れ ます 。 
この DocTestRunner が 実行 し た 全て の テストケース の サマリ を 出力 し 、 タプル "( failure _ count , test _ count )" を 返し ます 。 オプション の verbose 引数 を 使う と 、 どの くらい サマリ を 詳しく する か を 制御 でき ます 。 
冗長 度 を 指定 し ない 場合 、 DocTestRunner 自体 の 冗長 度 を 使い ます 。 
クラス Example 
ひとつ の Python 文 と 、 それ に対する 予想 出力 から なる 、 単一 の 対話 的 モード の 例題 です 。 
コンス トラクタ の 引数 は Example インスタンス 中 の 同名 の メンバ 変数 の 初期 化 に 使わ れ ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
Example で は 、 以下 の メンバ 変数 を 定義 し て い ます 。 
例題 の ソース コード が 入っ た 文字 列 です 。 
ソース コード は 単一 の Python で 、 末尾 は 常に 改行 です 。 コンス トラクタ は 必要 に 応じ て 改行 を 追加 し ます 。 
コンス トラクタ は 必要 に 応じ て 改行 を 追加 し ます 。 
例題 が 例外 を 生成 する と 予想 さ れる 場合 の 例外 メッセージ です 。 
例外 を 送出 し ない 場合 に は None です 。 この 例外 メッセージ は 、 traceback . format _ exception _ only () の 戻り 値 と 比較 さ れ ます 。 
値 が None で ない 限り 、 exc _ msg は 改行 で 終わっ て い なけれ ば なり ませ ん ; コンス トラクタ は 必要 に 応じ て 改行 を 追加 し ます 。 
この 例題 の 入っ て いる 文字 列 中 における 、 例題 の 実 行文 の ある 行 の の 行 番号 です 。 
行 番号 は 文字 列 の 先頭 を ゼロ として 数え ます 。 
例題 の 入っ て いる 文字 列 の インデント 、 すなわち 例題 の 最初 の プロンプト より 前 に ある 空白 文字 の 数 です 。 
オプション フラグ を True または False に 対応付け て いる 辞書 です 。 例題 に対する デフォルト オプション を 上書き する ため に 用い られ ます 。 
この 辞書 に 入っ て い ない オプション フラグ は デフォルト の 状態 ( DocTestrunner の optionflags の 内容 ) の まま に なり ます 。 
クラス OutputChecker 
doctest 例題 を 実際 に 実行 し た とき の 出力 が 予想 出力 と 一致 する か どう か を チェック する ため に 使わ れる クラス です 。 
OutputChecker で は 、 与え られ た 二つ の 出力 を 比較 し て 、 一致 する 場合 に は 真 を 返す check _ output と 、 二つ の 出力 間 の 違い を 説明 する 文字 列 を 返す output _ difference の 、 二つ の メソッド が あり ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
OutputChecker で は 以下 の メソッド を 定義 し て い ます : 
例題 から 実際 に 得 られ た 出力 ( got ) と 、 予想 出力 ( want ) が 一致 する 場合 に のみ True を 返し ます 。 
二つ の 文字 列 が 全く 同一 の 場合 に は 常に 一致 する と みなし ます が 、 テストランナ の 使っ て いる オプション フラグ により 、 厳密 に は 同じ 内容 に なっ て い なく て も 一致 する と みなす 場合 も あり ます 。 
オプション フラグ について の 詳しい 情報 は 5 . 2 . 6 節 を 参照 し て ください 。 
与え られ た 例題 の 予想 出力 ( want ) と 、 実際 に 得 られ た 出力 ( got ) の 間 の 差異 を 解説 し て いる 文字 列 を 返し ます 。 optionflags は want と got を 比較 する 際 に 使わ れる オプション フラグ の セット です 。 
基本 API は 、 doctest を 使い やすく する ため の 簡単 な ラッパ で あり 、 柔軟 性 が あっ て ほとんど の ユーザ の 必要 を 満たし て い ます ; と は いえ 、 もっと テスト を きめ細か に 制御 し たい 場合 や 、 doctest の 機能 を 拡張 し たい 場合 、 拡張 API ( advanced API ) を 使わ ね ば なり ませ ん 。 
拡張 API は 、 doctest ケース から 抽出 し た 対話 モード で の 例題 を 記憶 する ため の 二つ の コンテナ クラス を 中心 に 構成 さ れ て い ます : 
Example : 一つ の Python 実行 文 と 、 その 予想 出力 を ペア に し た もの 。 
DocTest : Example の 集まり 。 通常 一つ の docstring や テキストファイル から 抽出 さ れ ます 。 
その他 に 、 doctest の 例題 を 検索 、 パーズ 、 実行 、 チェック する ため の 処理 クラス が 以下 の よう に 定義 さ れ て い ます : 
DocTestFinder : 与え られ た モジュール から 全て の docstring を 検索 し 、 対話 モード で の 例題 が 入っ た 各 docstring から DocTestParser を 使っ て DocTest を 生成 し ます 。 
DocTestParser : ( オブジェクト に つけ られ た docstring の よう な ) 文字 列 から DocTest オブジェクト を 生成 し ます 。 
DocTestRunner : DocTest 内 の 例題 を 実行 し 、 OutputChecker を 使っ て 出力 を 検証 し ます 。 
OutputChecker : doctest 例題 から 実際 に 出力 さ れ た 結果 を 予想 出力 と 比較 し 、 両者 が 一致 する か 判別 し ます 。 
これら の 処理 クラス の 関係 を 図 に まとめる と 、 以下 の よう に なり ます : 
5 . 2 . 6 . 2 注意 
関数 testmod () および testfile () は 、 基本 的 な ほとんど の 用途 に 十分 な doctest インタフェース を 提供 し て い ます 。 
これら 二つ の 関数 について もっと くだけ た 説明 を 読み たけれ ば 、 5 . 2 . 1 節 および 5 . 2 . 2 節 を 参照 し て ください 。 
filename 以外 の 引数 は 全て オプション で 、 キーワード 引数 形式 で 指定 せ ね ば なり ませ ん 。 filename に 指定 し た ファイル 内 に ある 例題 を テスト し ます 。 
"( failure _ count , test _ count )" を 返し ます 。 オプション 引数 の module _ relative は 、 ファイル 名 を どの よう に 解釈 する か を 指定 し ます : 
module _ relative が True ( デフォルト ) の 場合 、 filename は OS に 依存 し ない モジュール の 相対 パス に なり ます 。 
デフォルト で は 、 この パス は 関数 testfile を 呼び出し て いる モジュール から の 相対 パス に なり ます ; ただし 、 package 引数 を 指定 し た 場合 に は 、 パッケージ から の 相対 に なり ます 。 
OS へ の 依存 性 を 除く ため 、 filename で は パス を 分割 する 文字 に / を 使わ ね ば なら ず 、 絶対 パス に し て は なり ませ ん ( パス 文字 列 を / で 始め て は なり ませ ん )。 
module _ relative が False の 場合 、 filename は OS 依存 の パス を 示し ます 。 
パス は 絶対 パス で も 相対 パス でも かまい ませ ん ; 相対 パス に し た 場合 、 現在 の 作業 ディレクトリ を 基準 に 解決 し ます 。 
オプション 引数 name に は 、 テスト の 名前 を 指定 し ます ; デフォルト の 場合 や None を 指定 し た 場合 、 os . path . basename ( filename ) に なり ます 。 オプション 引数 package に は 、 Python パッケージ を 指定 する か 、 モジュール 相対 の ファイル 名 の 場合 に は 相対 の 基準 ディレクトリ と なる Python パッケージ の 名前 を 指定 し ます 。 
パッケージ を 指定 し ない 倍 、 関数 を 呼び出し て いる モジュール の ディレクトリ を 相対 の 基準 ディレクトリ として 使い ます 。 
マージ は dict . update () の よう に 振舞い ます : globs と extraglobs と の 間 に 同じ キー 値 が ある 場合 、 両者 を 合わせ た 辞書 中 に は extraglobs の 方 の 値 が 入り ます 。 
この 仕様 は 、 パラメタ 付き で doctest を 実行 する という 、 やや 進ん だ 機能 です 。 
オプション 引数 report が 真 の 場合 、 テスト の 最後 に サマリ を 出力 し ます 。 
オプション 引数 raise _ on _ error の 値 は デフォルト で は 偽 です 。 
真に する と 、 最初 の テスト 失敗 や 予期 し ない 例外 が 起き た とき に 例外 を 送出 し ます 。 
デフォルト で は 通常 の パーザ ( 
DocTestParser ()) です 。 
m .__ test __ が 存在 し 、 None で ない 場合 、 この 辞書 から 到達 できる 例題 も テスト し ます 。 
オプション 引数 exclude _ empty は デフォルト で は 偽 に なっ て い ます 。 
m .__ dict __ に なり ます 。 オプション 引数 isprivate に は 、 ある 名前 が プライベート 名 で ある か どう か を 決定 する 関数 を 指定 し ます 。 
リリース 2 . 4 で 撤廃 さ れ まし た 。 
isprivate を 使う の は 賢く あり ませ ん - 使わ ない よう に し て ください 。 名前 に 基づい て テスト を スキップ し たけれ ば 、 DocTestFinder . find () の 返す リスト を フィルタ し て ください 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : optionflags パラメタ を 追加 し まし た 
バージョン 2 . 4 で 変更 さ れ た 仕様 : extraglobs , raise _ on _ error および exclude _ empty パラメタ を 追加 し まし た 
単一 の オブジェクト に 関連付け られ た doctest を 実行 する ため の 関数 も あり ます 。 この 関数 は 以前 の バージョン と の 互換 性 の ため に 提供 さ れ て い ます 。 
この 関数 を 撤廃 する 予定 は あり ませ ん が 、 役に立つ こと は ほとんど あり ませ ん : 
オブジェクト f に 関連付け られ た 例題 を テスト し ます 。 
デフォルト で は 、 例題 の テスト に 失敗 し た とき のみ 出力 を 生成 し ます 。 オプション 引数 compileflags に は 、 例題 を 実行 する とき に Python バイトコードコンパイラ が 使う フラグ を 指定 し ます 。 
デフォルト の 場合 や None を 指定 し た 場合 、 フラグ は globs 内 に ある future 機能 セット に 対応 し た もの に なり ます 。 オプション 引数 optionflags は 、 上 で 述べ た testfile () と 同様 の 働き を し ます 。 
5 . 2 . 11 提言 
doctest で は 、 doctest 例題 を デバッグ する メカニズム を いくつ か 提供 し て い ます : 
doctest を 実行 可能 な Python プログラム に 変換 し 、 Python デバッガ 
で 実行 できる よう に する ため の 関数 が いくつ か あり ます 。 
DocTestSuite () の 生成 する 
テストケース は 、 debug () メソッド を サポート し て い ます 。 debug () は 
. TestCase で 定義 さ れ て い ます 。 
. set _ trace () を doctest 例題 の 中 で 呼び出し て おけ ば 、 その 行 が 実行 さ れ た とき に Python デバッガ が 組み込ま れ ます 。 
デバッガ を 組み込ん だ あと は 、 変数 の 現在 の 値 など を 調べ られ ます 。 
たとえば 、 以下 の よう な モジュール レベル の docstring の 入っ た ファイル a . py が ある と し ます : 
対話 セッション は 以下 の よう に なる でしょ う : 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 
. set _ trace () を doctest の 中 で 有効 に 使える よう に なり まし た 
以下 は 、 doctest を Python コード に 変換 し て 、 でき た コード を デバッガ 下 で 実行 できる よう に する ため の 関数 です : 
例題 の 入っ た テキスト を スクリプト に 変換 し ます 。 引数 s は doctest 例題 の 入っ た 文字 列 です 。 
この 文字 列 は Python スクリプト に 変換 さ れ 、 その 中 で は s の doctest 例題 が 通常 の コード に 、 それ 以外 は Python の コメント 文 に なり ます 。 
生成 し た スクリプト を 文字 列 で 返し ます 。 
例えば 、 import doctestprint doctest . script _ from _ examples ( r """ Set x and y to 1 and 2 . x , y = 1 , 2 Print their sum : print x + y 3 """) 
は 、 
# Set x and y to 1 and 2 . x , y = 1 , 2 ## Print their sum : print x + y # Expected :## 3 に なり ます 。 
この 関数 は 他 の 関数 ( 下記 参照 ) から 使わ れ て いま る が 、 対話 セッション を Python スクリプト に 変換 し たい よう な 場合 に も 便利 でしょ う 。 
ある オブジェクト の doctest を スクリプト に 変換 し ます 。 引数 module は モジュール オブジェクト か 、 対象 の doctest を 持つ オブジェクト の 入っ た モジュール の ドット 表記 名 です 。 
引数 name は 対象 の doctest を 持つ オブジェクト の ( モジュール 内 の ) 名前 です 。 
対象 オブジェクト の docstring を 上 の script _ from _ examples () で 説明 し た 方法 で Python スクリプト に 変換 し て でき た 文字 列 を 返し ます ます 。 
例えば 、 a . py モジュール の トップ レベル に 関数 f () が ある 場合 、 以下 の コード 
を 実行 する と 、 f () の docstring から doctest を コード に 変換 し 、 それ 以外 を コメント に し た スクリプト を 出力 し ます 。 
オブジェクト の 持つ doctest を デバッグ し ます 。 module および name 引数 は 上 の testsource () と 同じ です 。 
指定 し た オブジェクト の docstring から 合成 さ れ た Python スクリプト は 一時 ファイル に 書き出さ れ 、 その後 Python デバッガ 
オプション 引数 pm は 、 検死 デバッグ を 行う か どう か を 指定 し ます 。 
pm が 真 の 場合 、 スクリプト ファイル は 直接 実行 さ れ 、 スクリプト が 送出 し た 例外 が 処理 さ れ ない まま 終了 し た 場合 に のみ デバッガ が 立ち入り ます 。 
その 場合 、 
. post _ mortem () によって 検死 デバッグ を 起動 し 、 処理 さ れ なかっ た 例外 から 得 られ た トレースバックオブジェクト を 渡し ます 。 
pm を 指定 し ない か 値 を 偽 に し た 場合 、 
. run () に 適切 な execfile () 呼び出し を 渡し て 、 最初 から デバッガ の 下 で スクリプト を 実行 し ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 pm を 追加 し まし た 
文字 列 中 の doctest を デバッグ し ます 。 
globs を 指定 し ない 場合 や None に し た 場合 、 空 の 辞書 を 使い ます 。 
辞書 を 指定 し た 場合 、 実際 の 実行 コンテキスト に は 浅い コピー が 使わ れ ます 。 
DebugRunner クラス 自体 や DebugRunner クラス が 送出 する 特殊 な 例外 は 、 テストフレームワーク の 作者 にとって 非常 に 興味 の ある ところ で The DebugRunner class , and the special exceptions it may raise , are of most interest to testing framework authors , and will only besketched here . 詳しく は ソース コード 、 とりわけ DebugRunner の docstring ( それ 自体 doctest です よ !) を 参照 し て ください 。 
クラス DebugRunner 
テスト の 失敗 に 遭遇 する と すぐ に 例外 を 送出 する よう に なっ て いる DocTestRunner の サブ クラス です 。 
予期 し ない 例外 が 生じる と 、 UnexpectedException 例外 を 送出 し ます 。 この 例外 に は 、 テスト 、 例題 、 もともと 送出 さ れ た 例外 が 入っ て い ます 。 
DebugRunner インスタンス の 送出 する 例外 に は 以下 の 二つ が あり ます : 
例外 DocTestFailure 
doctest 例題 の 実際 の 出力 が 予想 出力 と 一致 し なかっ た こと を 示す ため に DocTestRunner が 送出 する 例外 です 。 コンス トラクタ の 引数 は 、 インスタンス の 同名 の メンバ 変数 を 初期 化 する ため に 使わ れ ます 。 
DocTestFailure で は 以下 の メンバ 変数 を 定義 し て い ます : 
例題 が 失敗 し た 時 に 実行 さ れ て い た DocTest オブジェクト です 。 
失敗 し た Example オブジェクト です 。 
例題 の 実際 の 出力 です 。 
例外 UnexpectedException 
doctest 例題 が 予期 し ない 例外 を 送出 し た こと を 示す ため に DocTestRunner が 送出 する 例外 です 。 
コンス トラクタ の 引数 は 、 インスタンス の 同名 の メンバ 変数 を 初期 化 する ため に 使わ れ ます 。 
UnexpectedException で は 以下 の メンバ 変数 を 定義 し て い ます : 
予期 し ない 例外 について の 情報 の 入っ た タプル で 、 sys . exc _ info () が 返す の と 同じ もの です 。 
5 . 2 . 4 ドキュメンテーション 文字 列 内 の 例 を どう やっ て 認識 する の か ? 
5 . 2 . 3 . 1 どの ドキュメンテーション 文字 列 が 検証 さ れる の か ? 
5 . 2 . 5 実行 コンテキスト と は 何 か ? 
5 . 2 . 4 ドキュメンテーション 文字 列 内 の 例 を どう やっ て 認識 する の か ? 
ほとんど の 場合 、 対話 コンソール セッション 上 で の コピー / ペースト は うまく 動作 し ます 。 と は いえ 、 doctest は 特定 の Python シェル の 振る舞い を 正確 に エミュレーション しよ う と する わけ で は あり ませ ん 。 
ハード タブ は 全て 8 カラム の タブ ストップ を 使っ て スペース に 展開 さ れ ます 。 
従って 、 タブ が その よう に 表現 さ れる と 考え て おか ない と と まずい こと に なり ます : その 場合 は 、 ハード タブ を 使わ ない か 、 自前 で DocTestParser クラス を 書い て ください 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 新た に タブ を スペース に 展開 する よう に なり まし た ; 以前 の バージョン は ハード タブ を 保存 しよ う と し て い た ので 、 混乱 さ せる よう な テスト 結果 に なっ て しまっ て い まし た 
出力 結果 例 に は 、 全て 空白 の 行 が 入っ て い て は なり ませ ん 。 
stdout へ の 出力 は 取り込ま れ ます が 、 stderr は 取り込ま れ ませ ん ( 例外 発生 時 の トレース バック は 別 の 方法 で 取り込ま れ ます )。 
対話 セッション において 、 バックス ラッシュ を 用い て 次 の 行 に 続ける 場合 や 、 その他 の 理由 で バックス ラッシュ を 用いる 場合 、 raw docstring を 使っ て バックス ラッシュ を 入力 どおり に 扱わ せる よう に せ ね ば なり ませ ん : 
こう し なけれ ば 、 バックス ラッシュ は 文字 列 の 一部 として 解釈 さ れ て しまい ます う 。 例えば 、 上 の 例 の "" は 改行 文字 として 認識 さ れ て しまう でしょ う 。 
こう する 代わり に 、 ( raw docstring を 使わ ず に ) doctest 版 の 中 で は バックス ラッシュ を 全て 二 重 に し て も かまい ませ ん : 
開始 カラム は どこ でも かまい ませ ん : 
出力 結果 例 の 先頭 部 に ある 空白 文字 列 は 、 例題 の 開始 部分 にあたる '' 行 の 先頭 に ある 空白 文字 列 と 同じ だけ はぎとら れ ます 。 
5 . 2 . 3 doctest の からくり 
5 . 2 . 2 簡単 な 利用 法 : テキストファイル 中 の 例題 を チェック する 
この 節 で は 、 doctest の からくり : どの docstring を 見 に 行く の か 、 どう やっ て 対話 操作 例 を 見つけ出す の か 、 どんな 実行 コンテキスト を 使う の か 、 例外 を どう 扱う か 、 上記 の 振る舞い を 制御 する ため に どの よう な オプション フラグ を 使う か 、 について 詳しく 吟味 し ます 。 
5 . 2 . 6 . 1 オプション フラグ と ディレクティブ 
5 . 2 . 6 例外 は どう 扱え ば よい の です か ? 
5 . 2 . 6 例外 は どう 扱え ば よい の です か ? 
doctest で は 、 その 挙動 の 様々 な 側面 を たくさん の オプション フラグ で 制御 し て い ます 。 
各 フラグ の シンボル 名 は モジュール の 定数 として 提供 さ れ て おり 、 論理 和 で 組み合わせ て 様々 な 関数 に 渡せる よう に なっ て い ます 。 
デフォルト で は 、 予想 出力 ブロック に 単に 1 だけ が 入っ て おり 、 実際 の 出力 ブロック に 1 または True だけ が 入っ て い た 場合 、 これら の 出力 は 一致 し て いる と みなさ れ ます 。 
0 と False の 場合 も 同様 です 。 
DONT _ ACCEPT _ TRUE _ FOR _ 1 を 指定 する と 、 こうした 値 の 読み 替え を 行い ませ ん 。 デフォルト の 挙動 で 読み替え を 行う の は 、 最近 の Python で 多く の 関数 の 戻り 値 型 が 整数 型 から ブール 型 に 変更 さ れ た こと に 対応 する ため です ; 読み替え を 行う 場合 、 " 通常 の 整数 " の 出力 を 予想 出力 と する よう な doctest も 動作 し ます 。 
この オプション は そのうち 無くなる でしょ う が 、 ここ 数 年 は そのまま でしょ う 。 
デフォルト で は 、 予想 出力 ブロック に BLANKLINE だけ の 入っ た 行 が ある 場合 、 その 行 は 実際 の 出力 における 空 行 に 一致 する よう に なり ます 。 
完全 な 空 行 を 入れ て しまう と 予想 出力 が そこ で 終わっ て いる と みなさ れ て しまう ため 、 空 行 を 予想 出力 に 入れ たい 場合 に は この 方法 を 使わ ね ば なり ませ ん 。 
DONT _ ACCEPT _ BLANKLINE を 指定 する と 、 BLANKLINE の 読み替え を 行わ なく なり ます 。 
NORMALIZE _ WHITESPACE この フラグ を 指定 する と 、 空白 ( 空白 と 改行 文字 ) の 列 は 互いに 等価 で ある と みなし ます 。 
この フラグ を 指定 する と 、 予想 出力 中 の 省略 記号 マーカ (...) を 実際 の 出力 中 の 任意 の 部分 文字 列 に 一致 さ せ られ ます 。 
部分 文字 列 は 行 境界 にわたる もの や 空文字 列 を 含み ます 。 従って 、 この フラグ を 使う の は 単純 な 内容 を 対象 に する 場合 に とどめ ましょ う 。 
複雑 な 使い方 を する と 、 正規 表現 に .* を 使っ た とき の よう に " あら ら 、 省略 部分 を マッチ が え てる ( match too much ) !" と 驚く こと に なり かね ませ ん 。 
この フラグ を 指定 する と 、 予想 さ れる 実行 結果 に 例外 が 入る よう な 例題 で 、 予想 通り の 型 の 例外 が 送出 さ れ た 場合 に 、 例外 の 詳細 情報 が 一致 し て い なく て も テスト を パス さ せ ます 。 
例えば 、 予想 出力 が " ValueError : 42 " で ある よう な 例題 は 、 実際 に 送出 さ れ た 例外 が " ValueError : 3 * 14 " で も パス し ます が 、 TypeError が 送出 さ れる といった 場合 に は パス し ませ ん 。 ELLIPSIS を 使っ て も 同様 の こと が でき 、 IGNORE _ EXCEPTION _ DETAIL は リリース 2 . 4 以前 の Python を 使う 人 が ほとんど い なく なっ た 時期 を 見計らっ て 撤廃 する かも しれ ない ので 気 を つけ て ください 。 
それ まで は 、 IGNORE _ EXCEPTION _ DETAIL は 2 . 4 以前 の Python で 例外 の 詳細 について は 気 に せ ず テスト を パス さ せる よう に doctest を 書く ため の 唯一 の 明確 な 方法 です 。 
に する と 、 Python 2 . 4 と Python 2 . 3 の 両方 で テスト を パス さ せ られ ます 。 
という の は 、 例外 の 詳細 情報 は 2 . 4 で 変更 さ れ 、 " doesn ' t " から " does not " と 書く よう に なっ た から です 。 
上記 の 比較 フラグ 全て の 論理 和 を とっ た ビット マスク です 。 
二つ 目 の オプション 群 は 、 テスト の 失敗 を 報告 する 方法 を 制御 し ます : 
この オプション を 指定 する と 、 複数 行 にわたる 予想 出力 や 実際 の 出力 を 、 一元化 ( unified ) diff を 使っ て 表示 し ます 。 
この オプション を 指定 する と 、 複数 行 にわたる 予想 出力 や 実際 の 出力 を 、 コンテキスト diff を 使っ て 表示 し ます 。 
この オプション を 指定 する と 、 予想 出力 と 実際 の 出力 と の 間 の 差分 を よく 知ら れ て いる ndiff . py ユーティリティ と 同じ アルゴリズム を 使っ て いる difflib . Differ で 分析 し ます 。 
これ は 、 行 単位 の 差分 と 同じ よう に 行内 の 差分 に マーカ を つけ られる よう に する 唯一 の 手段 です 。 
例えば 、 予想 出力 の ある 行 に 数字 の 1 が 入っ て い て 、 実際 の 出力 に は l が 入っ て いる 場合 、 不一致 の おき て いる カラム 位置 を 示す キャレット の 入っ た 行 が 一行 挿入 さ れ ます 。 
この オプション を 指定 する と 、 各 doctest で 最初 に エラー の 起き た 例題 だけ を 表示 し 、 それ 以後 の 例題 の 出力 を 抑制 し ます 。 
これ により 、 正しく 書か れ た 例題 が 、 それ 以前 の 例題 の 失敗 によって おかしく なっ て しまっ た 場合 に 、 doctest が それ を 報告 し ない よう に なり ます 。 と は いえ 、 最初 に 失敗 を 引き起こし た 例題 と は 関係 なく 誤っ て 書か れ た 例題 の 報告 も 抑制 し て しまい ます 。 
REPORT _ ONLY _ FIRST _ FAILURE を 指定 し た 場合 、 例題 が どこ か で 失敗 し て も 、 それ 以後 の 例題 を 続け て 実行 し 、 失敗 し た テスト の 総数 を 報告 し ます ; 出力 が 抑制 さ れる だけ です 。 
上記 の エラー 報告 に関する フラグ 全て の 論理 和 を とっ た ビット マスク です 。 
「 doctest ディレクティブ 」 を 使う と 、 個々 の 例題 に対して オプション フラグ の 設定 を 変更 でき ます 。 
doctest ディレクティブ は 特殊 な Python コメント 文 として 表現 さ れ 、 例題 の ソース コード の 後 に 続け ます : 
+ や - と ディレクティブオプション 名 の 間 に 空白 を 入れ て は なり ませ ん 。 
ディレクティブオプション 名 は 上 で 説明 し た オプション フラグ 名 の いずれ か です 。 ある 例題 の doctest ディレクティブ は 、 その 例題 だけ の doctest の 振る舞い を 変え ます 。 
ある 特定 の 挙動 を 有効 に し たけれ ば + を 、 無効 に し たけれ ば - を 使い ます 。 例えば 、 以下 の テスト は パス し ます : 
ディレクティブ が ない 場合 、 実際 の 出力 に は 一 桁 の 数字 の 間 に 二つ スペース が 入っ て い ない こと 、 実際 の 出力 は 1 行 に なる こと から 、 テスト は パス し ない はず です 。 
別 の ディレクティブ を 使っ て 、 この テスト を パス さ せる こと も でき ます : 
複数 の ディレクティブ は 、 一つ の 物理 行 の 中 に コンマ で 区切っ て 指定 でき ます : 
一つ の 例題 中 で 複数 の ディレクティブコメント を 使っ た 場合 、 それら は 組み合わさ れ ます : 
前 の 例題 で 示し た よう に 、 "..." の 後ろ に ディレクティブ だけ の 入っ た 行 を 例題 の うし ろ に 追加 し て 書け ます 。 
この 書きかた は 、 例題 が 長 すぎる ため に ディレクティブ を 同じ 行 に 入れる と 収まり が 悪い 場合 に 便利 です : 
デフォルト で は 全て の オプション が 無効 に なっ て おり 、 ディレクティブ は 特定 の 例題 だけ に 影響 を 及ぼす ので 、 通常 意味 が ある の は 有効 に する ため の オプション (+ の つい た ディレクティブ ) だけ です 。 
と は いえ 、 doctest を 実行 する 関数 は オプション フラグ を 指定 し て デフォルト と は 異なっ た 挙動 を 実現 できる ので 、 その よう な 場合 に は - を 使っ た 無効 化 オプション も 意味 を 持ち ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : Constants DONT _ ACCEPT _ BLANKLINE , NORMALIZE _ WHITESPACE , ELLIPSIS , IGNORE _ EXCEPTION _ DETAIL , REPORT _ UDIFF , REPORT _ CDIFF , REPORT _ NDIFF , REPORT _ ONLY _ FIRST _ FAILURE , COMPARISON _ FLAGS and REPORTING _ FLAGS を 追加 し まし た 。 
予想 出力 中 の BLANKLINE が デフォルト で 実際 の 出力 中 の 空 行 に マッチ する よう に なり まし た 。 また 、 doctest ディレクティブ が 追加 さ れ まし た 
新た な オプション フラグ 名 を 登録 する 方法 も あり ます が 、 
の 内部 を サブ クラス で 拡張 し ない 限り 、 意味 は ない でしょ う : 
名前 name の 新た な オプション フラグ を 作成 し 、 作成 さ れ た フラグ の 整数 値 を 返し ます 。 register _ optionflag () は OutputChecker や DocTestRunner を サブ クラス 化 し て 、 その 中 で 新た に 作成 し た オプション を サポート さ せる 際 に 使い ます 。 
register _ optionflag は 以下 の よう な 定形 文 で 呼び出さ ね ば なり ませ ん : MY _ FLAG = register _ optionflag (' MY _ FLAG ') 
5 . 2 . 1 簡単 な 利用 法 : docstring 中 の 例題 を チェック する 
doctest の もう 一つ の 簡単 な 用途 は 、 テキストファイル 中 に ある 対話 操作 の 例 に対する テスト です 。 
これ に は testfile () 関数 を 使い ます : 
この 短い スクリプト は 、 example . txt という ファイル の 中 に 入っ て いる 対話 モード の Python 操作 例 全て を 実行 し て 、 その 内容 を 検証 し ます 。 
ファイル の 内容 は 一つ の 巨大 な docstring で ある か の よう に 扱わ れ ます ; ファイル が Python プログラム で なく て も よい の です ! 例えば 、 example . txt に は 以下 の よう な 内容 が 入っ て いる かも しれ ませ ん : 
doctest . testfile (" example . txt ") を 実行 する と 、 この ドキュメント 内 の エラー を 見つけ出し ます : 
testmod () と 同じく 、 testfile () は 例題 が 失敗 し ない 限り 何 も 表示 し ませ ん 。 
例題 が 失敗 する と 、 失敗 し た 例題 と その 原因 が ( 場合 によって は 複数 ) testmod () と 同じ 書式 で 標準 出力 に 書き出さ れ ます 。 デフォルト で は 、 testfile () は 自分 自身 を 呼び出し た モジュール の ある ディレクトリ を 探し ます 。 
doctest を 試す 簡単 な 方法 、 ( と は いえ 、 いつも そう する 必要 は ない の です が ) は 、 各 モジュール M の 最後 を 、 以下 : 
実行 を 試み た 全て の 例 について 詳細 に 報告 し 、 最後 に 各種 まとめ を おこなっ た 内容 が 標準 出力 に 印字 さ れ ます 。 verbose = True を testmod () に 渡せ ば 、 詳細 報告 ( verbose ) モード を 強制 でき ます 。 
5 . 2 . 12 進ん だ 使い方 
冒頭 で も 触れ た よう に 、 
は 、 
docstring 内 の 例題 を チェック する 、 
回帰 テスト を 行う 、 
実行 可能 な ドキュメント / 読める テスト の 実現 、 
という 三つ の 主 な 用途 を 持つ よう に なり まし た 。 これら の 用途 に は それぞれ 違っ た 要求 が ある ので 、 区別 し て 考える の が 重要 です 。 
例題 は 、 ドキュメント に 紛れ 無し の 価値 を 与え ます 。 
よい 例 が たくさん の 言葉 に 値する こと は 多々 あり ます 。 注意深く やれ ば 、 例 は ユーザ にとって は あまり 意味 の ない もの に なる かも しれ ませ ん が 、 歳 を 経る につれて 、 あるいは " 状況 が 変わっ た " 際 に 何 度 も 何 度 も 正しく 動作 さ せる ため に かかる こと に なる 時間 を 節約 する という 形 で 、 きっと 見返り を 得る でしょ う 。 
は 回帰 テスト の 優れ た ツール に も なり 得 ます 。 
説明 文 と 例題 を 交互 に 記述 し て いけ ば 、 実際 に 何 を どうして テスト し て いる の か もっと 簡単 に 把握 できる よう に なる でしょ う 。 
もちろん 、 コード ベース の テスト に 詳しく コメント を 入れる の も 手 です が 、 そんな こと を する プログラマ は ほとんど い ませ ん 。 多く の 人々 が 、 
doctest の アプローチ を とっ た 方 が きれい に テスト を 書ける と 気づい て い ます 。 
おそらく 、 これ は 単に コード 中 に コメント を 書く の が 少し 面倒 だ から という 理由 でしょ う 。 
私 は もう少し うがっ た 見方 も し て い ます : doctest ベース の テスト を 書く とき の 自然 な 態度 は 、 自分 の ソフトウェア の よい 点 を 説明 しよ う として 、 例題 を 使っ て 説明 しよ う と する とき の 態度 そのもの だ から だ 、 という 理由 です 。 
それ ゆえ に 、 テスト ファイル は 自然 と 単純 な 機能 の 解説 から 始め 、 論理 的 により 複雑 で 境界 条件 的 な ケース に 進む よう な 形 に なり ます 。 
結果 的 に 、 一見 ランダム に 見える よう な 個別 の 機能 を テスト し て いる 個別 の 関数 の 集まり で は なく 、 首尾 一貫 し た 説明 が できる よう に なる の です 。 
回帰 テスト の 組み方 に は いくつ か 選択肢 が あり ます : 
テストケース を 対話 モード の 例題 に し て 入れ た テキストファイル を 書き 、 testifle () や DocFileSuite () を 使っ て その ファイル を テスト し ます 。 
という 名前 の 関数 を 定義 し ます 。 
この 関数 に は 、 ある トピック に 対応 する テストケース の 入っ た docstring が 一つ だけ 入っ て い ます 。 
この 関数 は モジュール と 同じ ファイル の 中 に も 置け ます し 、 別 の テスト ファイル に 分け て も かまい ませ ん 。 
回帰 テスト の トピック を テストケース の 入っ た docstring に 対応付け た 辞書 __ test __ 辞書 を 定義 し ます 。 
doctest 化 し た モジュール の コレクション が 増える につれ 、 全て の doctest を システマティック に 実行 し たい と 思う よう に なる はず です 。 
Python 2 . 4 以前 の 
に は Tester という ほとんど ドキュメント 化 さ れ て い ない クラス が あり 、 複数 の モジュール の doctest を 統合 する 初歩 的 な 手段 を 提供 し て い まし た 。 
Tester は 非力 で あり 、 実際 の ところ 、 もっと きちんと し た Python の テストフレームワーク が 
モジュール で 構築 さ れ て おり 、 複数 の ソース コード から の テスト を 統合 する 柔軟 な 方法 を 提供 し て い ます 。 
そこで Python 2 . 4 で は 
こうした テストスイート は 、 
の テストランナ を 使っ て 実行 でき ます : 
doctest の 入っ た テキストファイル や モジュール から 
. TestSuite インスタンス を 生成 する ため の 主 な 関数 は 二つ あり ます : 
単一 または 複数 の テキストファイル に 入っ て いる doctest 形式 の テスト を 、 
. TestSuite インスタンス に 変換 し ます 。 この 関数 の 返す 
. TestSuite インスタンス は 、 unittest フレーム ワーク で 動作 さ せ 、 各 ファイル の 例題 を 対話 的 に 実行 する ため の もの です 。 
module _ relative が True ( デフォルト ) の 場合 、 filename は OS に 依存 し ない モジュール の 相対 パス に なり ます 。 
OS へ の 依存 性 を 除く ため 、 filename で は パス を 分割 する 文字 に / を 使わ ね ば なら ず 、 絶対 パス に し て は なり ませ ん ( パス 文字 列 を / で 始め て は なり ませ ん )。 
module _ relative が False の 場合 、 filename は OS 依存 の パス を 示し ます 。 
オプション 引数 package に は 、 Python パッケージ を 指定 する か 、 モジュール 相対 の ファイル 名 の 場合 に は 相対 の 基準 ディレクトリ と なる Python パッケージ の 名前 を 指定 し ます 。 
パッケージ を 指定 し ない 倍 、 関数 を 呼び出し て いる モジュール の ディレクトリ を 相対 の 基準 ディレクトリ として 使い ます 。 
module _ relative を False に 指定 し て いる 場合 、 package を 指定 する と エラー に なり ます 。 オプション 引数 setUp に は 、 テストスイート の セットアップ に 使う 関数 を 指定 し ます 。 
この 関数 は 、 各 ファイル の テスト を 実行 する 前 に 呼び出さ れ ます 。 
setUp 関数 は DocTest オブジェクト に 引き渡さ れ ます 。 
setUp は globs 属性 を 介し て テスト の グローバル 変数 に アクセス でき ます 。 オプション 引数 tearDown に は 、 テスト を 解体 ( tear - down ) する ため の 関数 を 指定 し ます 。 
この 関数 は 、 各 ファイル の テスト の 実行 を 終了 する たび に 呼び出さ れ ます 。 
tearDown 関数 は DocTest オブジェクト に 引き渡さ れ ます 。 
tearDown は は globs 属性 を 介し て テスト の グローバル 変数 に アクセス でき ます 。 オプション 引数 globs は 辞書 で 、 テスト の グローバル 変数 の 初期 値 が 入り ます 。 
この 辞書 は 各 テスト ごと に 新た に コピー し て 使わ れ ます 。 
デフォルト で は glob は 空 の 新た な 辞書 です 。 オプション 引数 optionflags に は 、 テスト を 実行 する 際 に デフォルト で 適用 さ れる doctest オプション を OR で 結合 し て 指定 し ます 。 
デフォルト は 通常 の パーザ ( 
doctest の テスト を 
. TestSuite に 変換 し ます 。 この 関数 の 返す 
. TestSuite インスタンス は 、 unittest フレーム ワーク で 動作 さ せ 、 モジュール 内 の 各 doctest を 実行 する ため の もの です 。 
何らかの doctest の 実行 に 失敗 する と 、 この 関数 で 生成 し た 単位 テスト は 失敗 し 、 該当 する テスト の 入っ て いる ファイル の 名前 と 、 ( 場合 により だいたい の ) 行 番号 の 入っ た failureException 例外 を 送出 し ます 。 オプション 引数 module に は 、 テスト し たい モジュール の 名前 を 指定 し ます 。 
module に は モジュール オブジェクト または ( ドット 表記 の ) モジュール 名 を 指定 でき ます 。 
module を 指定 し ない 場合 、 この 関数 を 呼び出し て いる モジュール に なり ます 。 オプション 引数 globs は 辞書 で 、 テスト の グローバル 変数 の 初期 値 が 入り ます 。 
デフォルト で は glob は 空 の 新た な 辞書 です 。 オプション 引数 extraglobs に は 追加 の グローバル 変数 セット を 指定 し ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : globs , extraglobs , test _ finder , setUp , tearDown , および optionflags パラメタ を 追加 し まし た 。 また 、 この 関数 は doctest の 検索 に testmod () と 同じ テクニック を 使う よう に なり まし た 
DocTestSuite () は 水面 下 で は doctest . DocTestCase インスタンス から 
. TestSuite を 作成 し て おり 、 DocTestCase は 
. TestCase の サブ クラス に なっ て い ます 。 
DocTestCase について は ここ で は 説明 し ませ ん ( これ は 内部 実装 上 の 詳細 だ から です ) が 、 その コード を 調べ て みれ ば 、 
の 組み込み の 詳細 に関する 疑問 を 解決 できる はず です 。 同様 に 、 DocFileSuite () は doctest . DocFileCase インスタンス から 
これ に は はっきり と し た 訳 が あり ます : 
関数 を 自分 で 実行 する 場合 、 オプション フラグ を 
関数 に 渡す こと で 、 
の オプション を 直接 操作 でき ます 。 
しかしながら 、 
フレーム ワーク を 書い て いる 場合 に は 、 い つ どの よう に テスト を 動作 さ せる か を 
が 完全 に 制御 し て しまい ます 。 
フレーム ワーク の 作者 は たいてい 、 
の レポート オプション を ( コマンドラインオプション で 指定 する など し て ) 操作 し たい と 考え ます が 、 
を 介し て 
の テストランナ に オプション を 渡す 方法 は 存在 し ない の です 。 
この ため 、 
では 、 以下 の 関数 を 使っ て 、 
サポート に 特 化 し た レポート フラグ 表記 方法 も サポート し て い ます : 
の レポート フラグ を セット し ます 。 
引数 flags に は オプション フラグ を OR で 結合 し て 渡し ます 。 5 . 2 . 6 節 を 参照 し て ください 。 
「 レポート フラグ 」 しか 使え ませ ん 。 この 関数 で 設定 し た 内容 は モジュール 全体 にわたる 物 で あり 、 関数 呼び出し 以後 に 
モジュール から 実行 さ れる 全て の doctest に 影響 し ます : DocTestCase の runTest () メソッド は 、 DocTestCase インスタンス が 作成 さ れ た 際 に 、 現在 の テストケース に 指定 さ れ た オプション フラグ を 見 に 行き ます 。 
レポート フラグ が 指定 さ れ て い ない 場合 ( 通常 の 場合 で 、 望ましい ケース です )、 
の 
レポート フラグ が OR で 結合 さ れ 、 doctest を 実行 する ため に 作成 さ れる DocTestRunner インスタンス に 渡さ れ ます 。 
DocTestCase インスタンス を 構築 する 際 に 何らかの レポート フラグ が 指定 さ れ て い た 場合 、 
レポート フラグ は 無視 さ れ ます 。 この 関数 は 、 関数 を 呼び出す 前 に 有効 に なっ て い た 
レポート フラグ の 値 を 返し ます 。 
5 . 2 . 6 . 1 オプション フラグ と ディレクティブ 
doctest で は 、 予想 出力 に対する 厳密 な 一致 を 厳しく 求め て い ます 。 
一致 し ない 文字 が 一文字 で も ある と 、 テスト は 失敗 し て しまい ます 。 
この ため 、 Python が 出力 に関して 何 を 保証 し て い て 、 何 を 保証 し て い ない か を 正確 に 知っ て い ない と 幾 度 か 混乱 さ せ られる こと でしょ う 。 
例えば 、 辞書 を 出力 する 際 、 Python は キー と 値 の ペア が 常に 特定 の 順番 で 並ぶ よう 保証 し て は い ませ ん 。 従って 、 以下 の よう な テスト 
は 失敗 する かも しれ ない の です ! 回避 する に は 
と する の が 一つ の やり方 です 。 
別 の やり方 は 、 
d = foo (). items () d . sort () d [(' Harry ', ' broomstick '), (' Hermione ', ' hippogryph ')] です 。 
他 に も あり ます が 、 自分 で 考え て み て ください 。 以下 の よう に 、 オブジェクト アドレス を 埋め込む よう な 結果 を print する の も よく あり ませ ん : 
ELLIPSIS ディレクティブ を 使う と 、 上 の よう な 例 を うまく 解決 でき ます : 
浮動 小数点 数 も また 、 プラットフォーム 間 で の 微妙 な 出力 の 違い の 原因 と なり ます 。 というのも 、 Python は 浮動 小数点 の 書式 化 を プラットフォーム の C ライブラリ に ゆだね て おり 、 この 点 で は 、 C ライブラリ は プラットフォーム 間 で 非常 に 大きく 異なっ て いる から です 。 
I / 2 .** J の 形式 に なる 数値 は どの プラットフォーム で も うまく 動作 する ので 、 私 は この 形式 の 数値 を 生成 する よう に doctest の 例題 を 工夫 し て い ます : 
この よう に 、 単 分数 ( simple fraction ) を 使え ば 、 人間 にとって も 理解 し やすく よい ドキュメント に なり ます 。 
5 . 2 . 3 . 1 どの ドキュメンテーション 文字 列 が 検証 さ れる の か ? 
5 . 2 . 4 ドキュメンテーション 文字 列 内 の 例 を どう やっ て 認識 する の か ? 
モジュール の ドキュメンテーション 文字 列 、 全て の 関数 、 クラス および メソッド の ドキュメンテーション 文字 列 が 検索 さ れ ます 。 
モジュール に import さ れ た オブジェクト は 検索 さ れ ませ ん 。 加え て 、 M .__ test __ が 存在 し 、 " 真 の 値 を 持つ " 場合 、 この 値 は 辞書 で 、 辞書 の 各 エントリ は ( 文字 列 の ) 名前 を 関数 オブジェクト 、 クラス オブジェクト 、 または 文字 列 に 対応付け て い なく て は なり ませ ん 。 
M .__ test __ から 得 られ た 関数 および クラス オブジェクト の ドキュメンテーション 文字 列 は 、 その 名前 が プライベート な もの で も 検索 さ れ 、 文字 列 の 場合 に は それ が ドキュメンテーション 文字 列 で ある か の よう に 直接 検索 を 行い ます 。 
出力 において は 、 M .__ test __ における キー K は 、 
name of M .__ test __. K の よう に 表示 さ れ ます 。 
検索 中 に 見つかっ た クラス も 同様 に 再帰 的 に 検索 が 行わ れ 、 クラス に 含ま れ て いる メソッド および ネスト さ れ た クラス について ドキュメンテーション 文字 列 の テスト が 行わ れ ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 :" プライベート 名 " の 概念 は 撤廃 さ れ た ため 、 今後 は ドキュメント に し ませ ん 
13 . 6 . 3 . 2 アクセサメソッド 
13 . 6 . 3 . 1 型 の 対応 付け 
OMG IDL から Python へ の 対応 付け は 、 IDL attribute 宣言 へ の アクセサ 関数 の 定義 を 、 Java による 対応 付け が 行う の と ほとんど 同じ よう に 行い ます 。 
IDL 宣言 の 対応 付け 
は 、 三つ の アクセサ 関数 : someValue に対する `` get '' メソッド (_ get _ someValue ())、 そして anotherValue に対する `` get '' および `` set '' メソッド (_ get _ anotherValue () および _ set _ anotherValue ()) を 生み出し ます 。 
とりわけ 、 対応 付け で は 、 IDL 属性 が 通常 の Python 属性 として アクセス 可能 で ある こと は 必須 で は あり ませ ん : object . someValue が 動作 する こと は 必須 で は なく 、 AttributeError を 送出 し て も かまい ませ ん 。 
しかしながら 、 Python DOM API で は 、 通常 の 属性 アクセス が 動作 する こと が 必須 です 。 
これ は 、 Python IDL コンパイラ によって 生成 さ れ た 典型 的 な サロゲーション は まず 動作 する こと は なく 、 DOM オブジェクト が CORBA を 解し て アクセス さ れる 場合 に は 、 クライアント 上 で ラッパ オブジェクト が 必要 で ある こと を 意味 し ます 。 CORBA DOM クライアント で は 他 に も いくつ か 考慮 す べき こと が ある 一方 で 、 CORBA を 介し て DOM を 使っ た 経験 を 持つ 実装 者 は この こと を 問題 視 し て い ませ ん 。 
readonly で ある と 宣言 さ れ た 属性 は 、 全て の DOM 実装 で 書き込み アクセス を 制限 し て いる と は 限り ませ ん 。 さらに 、 アクセサ 関数 は 必須 で は あり ませ ん 。 
アクセサ 関数 が 提供 さ れ た 場合 、 Python IDL 対応 付け によって 定義 さ れ た 形式 を とら なけれ ば なり ませ ん が 、 属性 は Python から 直接 アクセス する こと が できる ので 、 それら の メソッド は 必須 で は ない と 考え られ ます 。 
readonly で ある と 宣言 さ れ た 属性 に対して は 、 `` set '' アクセサ を 提供 し て は なり ませ ん 。 
13 . 6 . 2 . 7 Attr オブジェクト 
13 . 6 . 2 . 6 Element オブジェクト 
13 . 6 . 2 DOM 内 の オブジェクト 
Attr は Node を 継承 し て おり 、 全て の 属性 を 受け継い で い ます 。 
名前 に コロン が あれ ば コロン 以降 の 部分 に 、 なけれ ば 名前 全体 に なり ます 。 
名前 に コロン が あれ ば コロン 以前 の 部分 に 、 なけれ ば 空文字 列 に なり ます 。 
13 . 6 . 2 . 9 Comment オブジェクト 
NamedNodeMap は Node を 継承 し て い ませ ん 。 
属性 リスト の 長 さ です 。 
特定 の インデクス を 持つ 属性 を 返し ます 。 
属性 の 並び方 は 任意 です が 、 DOM 文書 が 生成 さ れ て いる 間 は 一定 に なり ます 。 
各 要素 は 属性 ノード です 。 
属性 値 は ノード の value 属性 で 取得 し て ください 。 
この クラス を より マップ 型 的 な 動作 が できる よう に する 実験 的 な メソッド も あり ます 。 
そうした メソッド を 使う こと も でき ます し 、 Element オブジェクト に対して 、 標準 化 さ れ た getAttribute *() ファミリ の メソッド を 使う こと も でき ます 。 
13 . 6 . 2 . 10 Text オブジェクト および CDATASection 
Comment は XML 文書 中 の コメント を 表現 し ます 。 
Comment は Node の サブ クラス です が 、 子 ノード を 持つ こと は あり ませ ん 。 
文字 列 による コメント の 内容 です 。 
- と - 
- 自体 は 含み ませ ん 。 
13 . 6 . 2 . 12 例外 
13 . 6 . 2 . 5 Document オブジェクト 
13 . 6 . 2 . 4 DocumentType オブジェクト 
Document は XML ドキュメント 全体 を 表現 し 、 その 構成 要素 で ある 要素 、 属性 、 処理 命令 、 コメント 等 が 入っ て い ます 。 
Document は Node から プロパティ を 継承 し て いる こと を 思い出し て ください 。 
ドキュメント の 唯一 無二 の ルート 要素 です 。 
新た な 要素 ノード を 生成 し て 返し ます 。 
要素 は 、 生成 さ れ た 時点 で は ドキュメント 内 に 挿入 さ れ ませ ん 。 
insertBefore () や appendChild () の よう な 他 の メソッド の 一つ を 使っ て 明示 的 に 挿入 を 行う 必要 が あり ます 。 
名前 空間 を 伴う 新た な 要素 ノード を 生成 し て 返し ます 。 
tagName に は プレフィクス ( prefix ) が あっ て も かまい ませ ん 。 
要素 は 、 生成 さ れ た 時点 で は 文書 内 に 挿入 さ れ ませ ん 。 
insertBefore () や appendChild () の よう な 他 の メソッド の 一つ を 使っ て 明示 的 に 挿入 を 行う 必要 が あり ます 。 appendChild (). 
パラメタ で 渡さ れ た データ の 入っ た テキスト ノード を 生成 し て 返し ます 。 
他 の 生成 ( create ) メソッド と 同じく 、 この メソッド は 生成 さ れ た ノード を ツリー に 挿入 し ませ ん 。 
パラメタ で 渡さ れ た データ の 入っ た コメント ノード を 生成 し て 返し ます 。 
パラメタ で 渡さ れ た target および data の 入っ た 処理 命令 ノード を 生成 し て 返し ます 。 
他 の 生成 ( create ) メソッド と 同じく 、 この メソッド は 生成 さ れ た ノード を ツリー に 挿入 し ませ ん 。 
属性 ノード を 生成 し て 返し ます 。 
この メソッド は 属性 ノード を 特定 の 要素 に 関連づける こと は し ませ ん 。 
新た に 生成 さ れ た 属性 インスタンス を 使う に は 、 適切 な Element オブジェクト の setAttributeNode () を 使わ なけれ ば なり ませ ん 。 
名前 空間 を 伴う 新た な 属性 ノード を 生成 し て 返し ます 。 
この メソッド は 属性 ノード を 特定 の 要素 に 関連づける こと は し ませ ん 。 
全て の 下位 要素 ( 直接 の 子 要素 、 子 要素 の 子 要素 、 等 ) から 、 特定 の 要素 型名 を 持つ もの を 検索 し ます 。 
全て の 下位 要素 ( 直接 の 子 要素 、 子 要素 の 子 要素 、 等 ) から 、 特定 の 名前 空間 URI と ローカル 名 ( local name ) を 持つ もの を 検索 し ます 。 
ローカル 名 は 名前 空間 における プレフィクス 以降 の 部分 です 。 
13 . 6 . 2 . 3 NodeList オブジェクト 
文書 で 宣言 さ れ て いる 記法 ( notation ) や エンティティ ( entity ) に関する ( 外部 サブ セット ( external subset ) が パーザ から 利用 でき 、 情報 を 提供 できる 場合 に は それ も 含め た ) 情報 は 、 DocumentType オブジェクト から 手 に 入れる こと が でき ます 。 
文書 の DocumentType は 、 Document オブジェクト の doctype 属性 で 入手 する こと が でき ます ; 文書 の DOCTYPE 宣言 が ない 場合 、 文書 の doctype 属性 は 、 この インタフェース を 持つ インスタンス の 代わり に None に 設定 さ れ ます 。 
DocumentType は Node を 特殊 化 し た もの で 、 以下 の 属性 を 加え て い ます : 
文書 型 定義 ( document type definition ) の 外部 サブ セット に対する 公開 識別子 ( public identifier ) です 。 
文字 列 または None に なり ます 。 
文書 型 定義 ( document type definition ) の 外部 サブ セット に対する システム 識別子 ( system identifier ) です 。 
文字 列 の URI または None に なり ます 。 
ドキュメント の 完全 な 内部 サブ セット を 与える 文字 列 です 。 サブ セット を 囲む ブラケット は 含み ませ ん 。 
ドキュメント が 内部 サブ セット を 持た ない 場合 、 この 値 は None です 。 
DOCTYPE 宣言 で ルート 要素 の 名前 が 与え られ て いる 場合 、 その 値 に なり ます 。 
外部 エンティティ の 定義 を 与える NamedNodeMap です 。 
複数 回 定義 さ れ て いる エンティティ に対して は 、 最初 の 定義 だけ が 提供 さ れ ます ( その他 は XML 勧告 で の 要求 仕様 によって 無視 さ れ ます )。 
パーザ によって 情報 が 提供 さ れ ない か 、 エンティティ が 定義 さ れ て い ない 場合 に は 、 この 値 は None に なる こと が あり ます 。 
記法 の 定義 を 与える NamedNodeMap です 。 複数 回 定義 さ れ て いる 記法 名 に対して は 、 最初 の 定義 だけ が 提供 さ れ ます ( その他 は XML 勧告 で の 要求 仕様 によって 無視 さ れ ます )。 
パーザ によって 情報 が 提供 さ れ ない か 、 エンティティ が 定義 さ れ て い ない 場合 に は 、 この 値 は None に なる こと が あり ます 。 
Element は Node の サブ クラス です 。 この ため Node クラス の 全て の 属性 を 継承 し ます 。 
要素 型名 です 。 
名前 空間 使用 の 文書 で は 、 要素 型名 中 に コロン が ある かも しれ ませ ん 。 
値 は 文字 列 です 。 
Document クラス 内 における 同名 の メソッド と 同じ です 。 
属性 値 を 文字 列 で 返し ます 。 
attrname で 指定 さ れ た 属性 の Attr ノード を 返し ます 。 
指定 し た namespaceURI および localName を 持つ 属性 値 を 文字 列 として 返し ます 。 
指定 し た namespaceURI および localName を 持つ 属性 値 を ノード として 返し ます 。 
名前 で 指定 さ れ た 属性 を 削除 し ます 。 
該当 する 属性 が なく て も 例外 は 送出 さ れ ませ ん 。 
oldAttr が 属性 リスト に ある 場合 、 削除 し て 返し ます 。 oldAttr が 存在 し ない 場合 、 NotFoundErr が 送出 さ れ ます 。 
この メソッド は qname で は なく localName を 使う ので 注意 し て ください 。 
該当 する 属性 が なく て も 例外 は 送出 さ れ ませ ん 。 
文字 列 を 使っ て 属性 値 を 設定 し ます 。 
新た な 属性 ノード を 要素 に 追加 し ます 。 name 属性 が 既存 の 属性 に 一致 し た 場合 、 必要 に 応じ て 属性 を 置き換え ます 。 
置換 が 生じる と 、 古い 属性 ノード が 返さ れ ます 。 
newAttr が すでに 使わ れ て いれ ば 、 InuseAttributeErr が 送出 さ れ ます 。 
新た な 属性 ノード を 要素 に 追加 し ます 。 namespaceURI および localName 属性 が 既存 の 属性 に 一致 し た 場合 、 必要 に 応じ て 属性 を 置き換え ます 。 
置換 が 生じる と 、 古い 属性 ノード が 返さ れ ます 。 
newAttr が すでに 使わ れ て いれ ば 、 InuseAttributeErr が 送出 さ れ ます 。 
指定 さ れ た namespaceURI および qname で 与え られ た 属性 の 値 を 文字 列 で 設定 し ます 。 
qname は 属性 の 完全 な 名前 で あり 、 この 点 が 上記 の メソッド と 違う ので 注意 し て ください 。 
13 . 7 . 3 minidom と DOM 
以下 の プログラム 例 は 、 かなり 現実 的 な 単純 な プログラム の 例 です 。 
特に この 例 に関して は 、 DOM の 柔軟 性 を あまり 活用 し て は い ませ ん 。 
13 . 6 . 2 . 11 ProcessingInstruction オブジェクト 
バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
DOM の 実装 で は 、 適切 な 特定 の 例外 を 送出 し なけれ ば なら ず 、 各 例外 は code 属性 に 対応 する 適切 な 値 を 伴わ なけれ ば なり ませ ん 。 
全て の 特定 の DOM 例外 で 使わ れ て いる 基底 例外 クラス です 。 
この 例外 クラス は 直接 インスタンス 化 する こと が でき ませ ん 。 
指定 さ れ た 範囲 の テキスト が 文字 列 に 収まら ない 場合 に 送出 さ れ ます 。 この 例外 は Python の DOM 実装 で 使わ れる か どう か は 判っ て い ませ ん が 、 Python で 書か れ て い ない DOM 実装 から 送出 さ れる 場合 が あり ます 。 
挿入 でき ない 型 の ノード を 挿入 しよ う と 試み た とき に 送出 さ れ ます 。 
メソッド に 与え た インデクス や サイズ パラメタ が 負 の 値 や 許容 範囲 の 値 を 超え た 際 に 送出 さ れ ます 。 
文書 中 に すでに 存在 する Attr ノード を 挿入 しよ う と 試み た 際 に 送出 さ れ ます 。 
パラメタ または 操作 が 根底 に ある オブジェクト で サポート さ れ て い ない 場合 に 送出 さ れ ます 。 
この 例外 は 、 文字 列 パラメタ が 、 現在 使わ れ て いる コンテキスト で XML 1 . 0 勧告 によって 許可 さ れ て い ない 場合 に 送出 さ れ ます 。 
例えば 、 要素 型 に 空白 の 入っ た Element ノード を 生成 しよ う と する と 、 この エラー が 送出 さ れ ます 。 
ノード の 型 を 変更 しよ う と 試み た 際 に 送出 さ れ ます 。 
定義 さ れ て い ない オブジェクト や 、 もはや 利用 でき なく なっ た オブジェクト を 使お う と 試み た 際 に 送出 さ れ ます 。 
に 照らし て 許可 さ れ て い ない 方法 で オブジェクト を 変更 しよ う と 試み た 場合 、 この 例外 が 送出 さ れ ます 。 
参照 し て いる コンテキスト 中 に 目的 の ノード が 存在 し ない 場合 に 送出 さ れる 例外 です 。 
例えば 、 NamedNodeMap . removeNamedItem () は 渡さ れ た ノード が ノード マップ 中 に 存在 し ない 場合 に この 例外 を 送出 し ます 。 
要求 さ れ た 方 の オブジェクト や 操作 が 実装 で サポート さ れ て い ない 場合 に 送出 さ れ ます 。 
データ 属性 を サポート し ない ノード に データ を 指定 し た 際 に 送出 さ れ ます 。 
オブジェクト に対して ( 読み出し 専用 ノード に対する 修正 の よう に ) 許可 さ れ て い ない 修正 を 行お う と 試み た 際 に 送出 さ れ ます 。 
無効 または 不正 な 文字 列 が 指定 さ れ た 際 に 送出 さ れ ます 。 
ノード が 現在 属し て いる 文書 と 異なる 文書 に 挿入 さ れ 、 かつ ある 文書 から 別 の 文書 へ の ノード の 移行 が 実装 で サポート さ れ て い ない 場合 に 送出 さ れ ます 。 
DOM 勧告 で 定義 さ れ て いる 例外 コード は 、 以下 の テーブル に従って 上記 の 例外 と 対応付け られ ます : 
例外 
13 . 6 . 2 . 1 DOMImplementation オブジェクト 
13 . 6 . 2 . 2 Node オブジェクト 
DOMImplementation インタフェース は 、 利用 し て いる DOM 実装 において 特定 の 機能 が 利用 可能 か どう か を 決定 する ため の 方法 を アプリケーション に 提供 し ます 。 
DOM レベル 2 で は 、 DOMImplementation を 使っ て 新た な Document オブジェクト や DocumentType オブジェクト を 生成 する 機能 も 追加 し て い ます 。 
Python の DOM API 定義 は 
モジュール ドキュメント の 一部 として 与え られ て い ます 。 
と の 違い について 列挙 し ます 。 
DOM と の 内部 的 な 参照 を 破壊 し て 、 循環 参照 ガベージコレクション を 持た ない バージョン の Python で も ガベージコレクション さ れる よう に し ます 。 
循環 参照 ガベージコレクション が 利用 でき て も 、 この メソッド を 使え ば 、 大量 の メモリ を すぐ に 使える よう に できる ため 、 必要 なくなっ たら すぐ に この メソッド を DOM オブジェクト に対して 呼ぶ の が 良い 習慣 です 。 
この メソッド は Document オブジェクト に対して だけ 呼び出せ ば よい の です が 、 ある ノード の 子 ノード を 放棄 する ため に 子 ノード に対して 呼び出し て も かまい ませ ん 。 
XML を writer オブジェクト に 書き込み ます 。 
writer は 、 ファイルオブジェクトインタフェース の write () に 該当 する メソッド を 持た なけれ ば なり ませ ん 。 
indent パラメタ に は 現在 の ノード の インデント を 指定 し ます 。 
addindent パラメタ に は 現在 の ノード の 下 に サブ ノード を 追加 する 際 の インデント 増 分 を 指定 し ます 。 
newl に は 、 改行 時 に 行末 を 終端 する 文字 列 を 指定 し ます 。 
バージョン 2 . 1 で 変更 さ れ た 仕様 : 美しい 出力 を サポート する ため 、 新た な キーワード 引数 indent 、 addindent 、 および newl が 追加 さ れ まし た 
バージョン 2 . 3 で 変更 さ れ た 仕様 : Document ノード に対して 、 追加 の キーワード 引数 encoding を 使っ て 、 XML ヘッダ の encoding フィールド を 指定 できる よう に なり まし た 
DOM が 表現 し て いる XML を 文字 列 に し て 返し ます 。 引数 が なけれ ば 、 XML ヘッダ は encoding を 指定 せ ず 、 文書 内 の 全て の 文字 を デフォルトエンコード 方式 で 表示 でき ない 場合 、 結果 は Unicode 文字 列 と なり ます 。 
この 文字 列 を UTF - 8 以外 の エン コード 方式 で エン コード する の は 不正 で あり 、 なぜ なら UTF - 8 が XML の デフォルトエンコード 方式 だ から です 。 明示 的 な encoding 引数 が ある と 、 結果 は 指定 さ れ た エン コード 方式 による バイト 文字 列 と なり ます 。 
引数 を 常に 指定 する よう 推奨 し ます 。 
表現 不可能 な テキスト データ の 場合 に UnicodeError が 送出 さ れる の を 避ける ため 、 encoding 引数 は " utf - 8 " に 指定 する べき です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : encoding が 追加 さ れ まし た 
美しく 出力 さ れ た バージョン の 文書 を 返し ます 。 indent は インデント を 行う ため の 文字 で 、 デフォルト は タブ です ; newl に は 行末 で 出力 さ れる 文字 列 を 指定 し 、 デフォルト は n です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : encoding 引数 の 追加 ; toxml を 参照 
以下 の 標準 DOM メソッド は 、 
では 特別 な 注意 を する 必要 が あり ます : 
この メソッド は Python 2 . 0 に パッケージ さ れ て いる バージョン の 
に は あり まし た が 、 これ に は 深刻 な 障害 が あり ます 。 
以降 の リリース で は 修正 さ れ て い ます 。 
XML 文書 内 の 処理 命令 を 表現 し ます ; Node インタフェース を 継承 し て い ます が 、 子 ノード を 持つ こと は でき ませ ん 。 
最初 の 空白 文字 まで の 処理 命令 の 内容 です 。 
読み出し 専用 の 属性 です 。 
最初 の 空白 文字 以降 の 処理 命令 の 内容 です 。 
13 . 6 . 2 . 10 Text オブジェクト および CDATASection オブジェクト 
Text インタフェース は XML 文書 内 の テキスト を 表現 し ます 。 
パーザ および DOM 実装 が DOM の XML 拡張 を サポート し て いる 場合 、 CDATA で マーク さ れ た 区域 ( section ) に 入れ られ て いる 部分 テキスト は CDATASection オブジェクト に 記憶 さ れ ます 。 
これら 二つ の インタフェース は 同一 の もの です が 、 nodeType 属性 が 異なり ます 。 これら の インタフェース は Node インタフェース を 拡張 し た もの です 。 
しかし 子 ノード を 持つ こと は でき ませ ん 。 
文字 列 による テキスト ノード の 内容 です 。 
注意 : CDATASection ノード の 利用 は 、 ノード が 完全 な CDATA マーク 区域 を 表現 する という 意味 で は なく 、 ノード の 内容 が CDATA 区域 の 一部 で ある という こと を 意味 する だけ です 。 
単一 の CDATA セクション は 文書 ツリー 内 で 複数 の ノード として 表現 さ れる こと が あり ます 。 
二つ の 隣接 する CDATASection ノード が 、 異なる CDATA マーク 区域 か どう か を 決定 する 方法 は あり ませ ん 。 
DOM 仕様 で 使わ れ て いる 基本 的 な IDL 型 は 、 以下 の テーブル に従って Python の 型 に 対応付け られ て い ます 。 
IDL 型 
Python 型 
IntegerType ( 値 0 または 1 ) による 
さらに 、 勧告 で 定義 さ れ て いる DOMString は 、 Python 文字 列 または Unicode 文字 列 に 対応付け られ ます 。 
アプリケーション で は 、 DOM から 文字 列 が 返さ れる 際 に は 常に Unicode を 扱え なけれ ば なり ませ ん 。 IDL の null 値 は None に 対応付け られ て おり 、 API で null の 使用 が 許さ れ て いる 場所 で は 常に 受理 さ れる か 、 あるいは 実装 によって 提供 さ れる はず です 。 
DTDHandler インスタンス は 以下 の メソッド を 提供 し ます 。 
表記 法 宣言 イベント の 通知 を 捕捉 し ます 。 
未 構文 解析 エンティティ 宣言 イベント の 通知 を 受け取り ます Handle an unparsed entity declaration event . 
UserDict . DictMixin クラス で 提供 さ れ て いる メソッド に 加え 、 dumbdbm オブジェクト で は 以下 の メソッド を 提供 し て い ます 。 
ディスク 上 の 辞書 と データファイル を 同期 し ます 。 
この メソッド は Shelve オブジェクト の sync メソッド から 呼び出さ れ ます 。 
4 . 1 名前 づけ と 束縛 ( naming and 
自由 変数 の 入っ た 入れ子 スコープ ( nested scope ) を 併用 する と 、 Python の 文 が 不正 な 文 に なる 場合 が いくつ か あり ます 。 ある 変数 が スコープ の 外側 から 参照 さ れ た 場合 、 その 名前 に対する 削除 操作 は 不正 に なり ます 。 
この 場合 、 コンパイル 時 に エラー が 報告 さ れる こと に なり ます 。 ワイルドカード 形式 の import 文 -- " import *" -- を 関数 内 で 使っ た 場合 や 、 関数 が 自由 変数 を 含ん で い たり 、 自由 変数 を 伴う 入れ子 ブロック で ある 場合 、 コンパイラ は SyntaxError を 送出 し ます 。 
exec が 関数 内 で 使わ れ て おり 、 関数 が 自由 変数 を 含ん で い たり 、 自由 変数 を 伴う 入れ子 ブロック で ある 場合 、 exec に 明示 的 に ローカル 名前 空間 を 指定 し ない かぎり コンパイラ は SyntaxError を 送出 し ます 。 
名前 が 呼び出し 側 の ローカル 名前 空間 や グローバル 名前 空間 から 解決 さ れる こと は あり ます 。 
自由 変数 は 最 内 名前 空間 で は なく 、 グローバル 名前 空間 から 解決 さ れ ます 。 
exec 文 と 、 関数 eval () および execfile () に は オプション の 引数 が あり 、 グローバル および ローカル 名前 空間 を オーバライド でき ます 。 
名前 空間 を 一つ しか 指定 し なけれ ば 、 両方 の 名前 空間 として 使わ れ ます 。 
... 自由 変数 は 最 内 名前 空間 で は なく 、 グローバル 名前 空間 から 解決 さ れ ます 。 
この 制限 は 、 上記 の 操作 によって 実行 さ れる コード が 、 モジュール を コンパイル し た とき に は 利用 でき ない ため に 起こり ます 。 
4 . Windows 上 で の C 
Unix と Windows で は 、 コード の 実行 時 読み込み に 全く 異なる パラダイム を 用い て い ます 。 
動的 ロード さ れる よう な モジュール を ビルド しよ う と する 前 に 、 自分 の システム が どの よう に 動作 する か 知っ て おい て ください 。 Unix で は 、 共有 オブジェクト (. so ) ファイル に プログラム が 使う コード 、 そして プログラム 内 で 使う 関数 名 や データ が 入っ て い ます 。 
ファイル が プログラム に 結合 さ れる と 、 これら の 関数 や データ に対する ファイル の コード 内 の 全て の 参照 は 、 メモリ 内 で 関数 や データ が 配置 さ れ て いる 、 プログラム 中 の 実際 の 場所 を 指す よう に 変更 さ れ ます 。 
これ は 基本 的 に は リンク 操作 に あたり ます 。 Windows で は 、 動的 リンク ライブラリ (. dll ) ファイル に は ぶら下がり 参照 ( dangling reference ) は あり ませ ん 。 
その 代わり 、 関数 や データ へ の アクセス は ルックアップテーブル を 介し ます 。 
共有 オブジェクト ファイル (. so ) を 作成 する リンク 処理 の 段階 中 に 、 リンカ は 定義 場所 の 不明 な 識別子 に 遭遇 する こと が あり ます 。 
この とき リンカ は ライブラリ 内 の オブジェクト ファイル を 検索 し ます ; も し 識別子 が 見つかる と 、 リンカ は その オブジェクト ファイル から 全て の コード を 取り込み ます 。 Windows で は 、 二つ の 形式 の ライブラリ 、 静的 ライブラリ と インポートライブラリ が あり ます ( どちら も . lib と 呼ば れ て い ます )。 
静的 ライブラリ は Unix における . a ファイル に 似 て い ます ; この ファイル に は 、 必要 に 応じ て 取り込ま れる よう な コード が 入っ て い ます 。 インポートライブラリ は 、 基本 的 に は 特定 の 識別子 が 不正 で は なく 、 DLL が ロード さ れ た 時点 で 存在 する こと を 保証 する ため に だけ 使わ れ ます 。 
リンカ は インポートライブラリ から の 情報 を 使っ て ルックアップテーブル を 作成 し 、 DLL に 入っ て い ない 識別子 を 使える よう に し ます 。 
Windows で は 、 A . dll を ビルド する と A . lib も ビルド さ れ ます 。 
B や C の リンク に は A . lib を 渡し ます 。 
A . lib に は コード は 入っ て い ませ ん ; 単に A の コード に アクセス する する ため に 実行 時 に 用い られる 情報 が 入っ て いる だけ です 。 
Windows で は インポートライブラリ の 使用 は " import spam " と する よう な もの です ; この 操作 によって spam の 名前 に アクセス でき ます が 、 コード の コピー を 個別 に 作成 し たり は し ませ ん 。 
Unix で は 、 ライブラリ と の リンク は むしろ " from spam import *" に 似 て い ます ; この 操作 で は 個別 に コード の コピー を 生成 し ます 。 
6 . 27 . 1 ロ ケール の 背景 、 詳細 、 ヒント 、 助言 および 補足 説明 
6 . 27 . 3 メッセージ カタログ へ の アクセス 
拡張 モジュール は 、 現在 の ロ ケール を 調べる 以外 は 、 決して setlocale () を 呼び出し て は なり ませ ん 。 
しかし 、 返さ れる 値 も ロ ケール の 復帰 の ため に 使える だけ な ので 、 さほど 便利 と は いえ ませ ん ( 例外 は おそらく ロ ケール が " C " か どう か 調べる こと でしょ う )。 ロ ケール を 変更 する ため に Python コード で locale モジュール を 使っ た 場合 、 Python を 埋め込ん で いる アプリケーション に も 影響 を 及ぼし ます 。 
Python を 埋め込ん で いる アプリケーション に 影響 が 及ぶ こと を 望ま ない 場合 、 config . c ファイル 内 の 組み込み モジュール の テーブル から _ locale 拡張 モジュール ( ここ で 全て を 行っ て い ます ) を 削除 し 、 共有 ライブラリ から _ locate モジュール に アクセス でき ない よう に し て ください 。 
Python インタプリタ の 埋め込み を 行う 人 ( いわば 拡張 モジュール の 書き手 の 対極 ) が 気 に かけ なけれ ば なら ない 重要 な タスク は 、 Python インタプリタ の 初期 化 処理 ( initialization )、 そして おそらくは 終了 処理 ( finalization ) です 。 
この 関数 は ロード 済み の モジュール から なる テーブル を 作成 し 、 土台 と なる モジュール __ builtin __ 
, および exceptions 
を 作成 し ます 。 また 、 モジュール 検索 パス ( sys . path ) 
の 初期 化 も 行い ます 。 Py _ Initialize () の 中 で は 、 `` スクリプト へ の 引数 リスト ''( script argument list , sys . argv の こと ) を 設定 し ませ ん 。 
この 変数 が 後に 実行 さ れる Python コード 中 で 必要 なら 、 Py _ Initialize () に 続い て PySys _ SetArgv ( argc , argv ) 
を 呼び出し て 明示 的 に 設定 し なけれ ば なり ませ ん 。 ほとんど の システム で は ( 特に Unix と Windows は 、 詳細 が わずか に 異なり は し ます が )、 Py _ Initialize () は 標準 の Python インタプリタ 実行 形式 の 場所 に対する 推定 結果 に 基づい て 、 Python の ライブラリ が Python インタプリタ 実行 形式 から の 相対 パス で 見つかる という 仮定 の 下 に モジュール 検索 パス を 計算 し ます 。 
) ユーザ は PYTHONHOME を 設定 する こと で この 動作 を オーバライド し たり 、 PYTHONPATH を 設定 し て 追加 の ディレクトリ を 標準 モジュール 検索 パス の 前 に 挿入 し たり でき ます 。 埋め 込み を 行う アプリケーション で は 、 Py _ Initialize () を 呼び出す 前 に Py _ SetProgramName ( file ) 
を 呼び出す こと で 、 上記 の 検索 を 操作 でき ます 。 
この 埋め込み アプリケーション で の 設定 は 依然として PYTHONHOME で オーバライド でき 、 標準 の モジュール 検索 パス の 前 に は 以前 として PYTHONPATH が 挿入 さ れる ので 注意 し て ください 。 
アプリケーション で モジュール 検索 パス を 完全 に 制御 し たい の なら 、 独自 に Py _ GetPath () 
, および Py _ GetProgramFullPath () 
の 実装 を 提供 し なけれ ば なり ませ ん ( これら は 全て Modules / getpath . c で 定義 さ れ て い ます )。 たま に 、 Python を `` 初期 化 し ない '' よう に し たい こと が あり ます 。 
Py _ Finalize () を 使う と 、 こうした 処理 を 実現 でき ます 。 また 、 関数 Py _ IsInitialized () 
は 、 Python が 現在 初期 化 済み の 状態 に ある 場合 に 真 を 返し ます 。 
これら の 関数 について の さら なる 情報 は 、 後 の 章 で 説明 し ます 。 
5 . 他 の アプリケーション へ の Python の 埋め込み 
C ++ プログラム 中 に も Python を 埋め込め ます ; 厳密 に 言う と 、 どう やっ て 埋め込む か は 使っ て いる C ++ 処理 系 の 詳細 に 依存 し ます ; 一般 的 に は 、 メイン プログラム を C ++ で 書き 、 C ++ コンパイラ を 使っ て プログラム を コンパイル ・ リンク する 必要 が ある でしょ う 。 
Python 自体 を C ++ で コンパイル し なおす 必要 は あり ませ ん 。 
Python スクリプト 中 の 最初 の 行か 、 二 行 目 に ある コメント が 正規 表現 coding [=:] s *([- w .]+) に マッチ する 場合 、 コメント は エン コード 宣言 ( encoding declaration ) として 処理 さ れ ます ; 表現 に対する 最初 の マッチ グループ が ソース コード ファイル の エン コード を 指定 し ます 。 
エン コード 宣言 式 として 推奨 する 形式 は 、 GNU Emacs が 認識 できる 形式 
または 、 Bram Moolenar による VIM が 認識 できる 形式 
宣言 さ れ た エン コード は 全て の 字句 解析 、 特に 文字 列 の 終端 を 検出 する 際 や Unicode リテラル の 内容 を 翻訳 する 上 で 用い られ ます 。 文字 列 リテラル は 文法 的 な 解析 を 行う ため に Unicode に 変換 さ れ 、 解釈 が 行わ れる 前 に 元 の エン コード に 戻さ れ ます 。 
エン コード 宣言 は 宣言 全体 が 一行 に 収まっ て い なけれ ば なり ませ ん 。 
エンティティ の システム 識別子 を 解決 し 、 文字 列 として 読み込ん だ システム 識別子 あるいは InputSource オブジェクト の いずれ か を 返し ます 。 
デフォルト の 実装 で は systemId を 返し ます 。 
1 . 3 例 に 戻る 
Python インタプリタ 全体 を通して 、 一つ の 重要 な 取り決め が あり ます : それ は 、 関数 が 処理 に 失敗 し た 場合 、 例外 状態 を セット し て 、 エラー を 示す 値 ( 通常 は NULL ポインタ ) を 返さ ね ば なら ない 、 という こと です 。 
例外 は インタプリタ 内 の 静的 な グローバル 変数 に 保存 さ れ ます ; この 値 が NULL の 場合 、 例外 は 何 も 起き て い ない こと に なり ます 。 
第 二 の グローバル 変数 に は 、 例外 の `` 付属 値 ( associated value )''( raise 文 の 第 二 引数 ) が 入り ます 。 
第 三 の 値 に は 、 エラー の 発生 源 が Python コード 内 だっ た 場合 に スタックトレースバック ( stack traceback ) が 入り ます 。 
これら の 三つ の 変数 は 、 それぞれ Python の 変数 sys . exc _ type 、 sys . exc _ value および sys . exc _ traceback と 等価 な C の 変数 です ( 
の sys モジュール に関する 節 を 参照 し て ください 。 
引数 は 例外 オブジェクト と C 文字 列 です 。 
例外 オブジェクト は 通常 、 PyExc _ ZeroDivisionError の よう な 定義 済み の オブジェクト です 。 
もっとも 汎用 的 な 関数 は PyErr _ SetObject () で 、 二つ の オブジェクト 、 例外 と 付属 値 を 引数 に とり ます 。 
これら 関数 に 渡す オブジェクト に は Py _ INCREF () を 使う 必要 は あり ませ ん 。 例外 が セット さ れ て いる か どう か は 、 PyErr _ Occurred () を 使っ て 非破壊 的 に 調べ られ ます 。 
この 関数 は 現在 の 例外 オブジェクト を 返し ます 。 例外 が 発生 し て い ない 場合 に は NULL を 返し ます 。 
以下 同様 に 続き ます -- エラー の 最も 詳しい 原因 は 、 最初 に エラー を 検出 し た 関数 が すでに 報告 し て いる から です 。 
エラー が Python インタプリタ の メイン ループ に 到達 する と 、 現在 実行 中 の Python コード は 一時 停止 し 、 Python プログラマ が 指定 し た 例外 ハンドラ を 探し出そ う と し ます 。 ( モジュール が PyErr _*() 関数 を もう一度 呼び出し て 、 より 詳細 な エラーメッセージ を 提供 する よう な 状況 が あり ます 。 
この よう な 状況 で は そう す べき です 。 と は いえ 、 一般 的 な 規則 として は 、 PyErr _*() を 何 度 も 呼び出す 必要 は なく 、 ともすれば エラー の 原因 に関する 情報 を 失う 結果 に なり がち です : これ により 、 ほとんど の 操作 が 様々 な 理由 から 失敗 する か も しれ ませ ん ) ある 関数 呼び出し で の 処理 の 失敗 によって セット さ れ た 例外 を 無視 する に は 、 PyErr _ Clear () を 呼び出し て 例外 状態 を 明示 的 に 消去 し なく て は なり ませ ん 。 
エラー を インタプリタ に は 渡し たく なく 、 自前 で ( 何 か 他 の 作業 を 行っ たり 、 何 も 起こら なかっ た か の よう に 見せかける よう な ) エラー 処理 を 完全 に 行う 場合 に のみ 、 PyErr _ Clear () を 呼び出す よう に す べき です 。 malloc () の 呼び出し 失敗 は 、 常に 例外 に し なく て は なり ませ ん -- malloc () ( または realloc ()) を 直接 呼び出し て いる コード は 、 PyErr _ NoMemory () を 呼び出し て 、 失敗 を 示す 値 を 返さ ね ば なり ませ ん 。 
PyExc _ ZeroDivisionError の よう に 、 全て の 組み込み の Python 例外 に は 対応 する 宣言 済み の C オブジェクト が あり 、 直接 利用 でき ます 。 もちろん 、 例外 の 選択 は 賢く 行わ ね ば なり ませ ん -- ファイル が 開け なかっ た こと を 表す の に PyExc _ TypeError を 使っ たり は し ない で ください ( この 場合 は おそらく PyExc _ IOError の 方 に す べき でしょ う )。 
引数 リスト に 問題 が ある 場合 に は 、 PyArg _ ParseTuple () は たいてい PyExc _ TypeError を 送出 し ます 。 引数 の 値 が 特定 の 範囲 を 超え て い たり 、 その他 の 満たす べき 条件 を 満たさ なかっ た 場合 に は 、 PyExc _ ValueError が 適切 です 。 
モジュール 固有 の 新た な 例外 も 定義 でき ます 。 定義 する に は 、 通常 は ファイル の 先頭 部分 に 静的 な オブジェクト 変数 の 宣言 を 行い ます : 
そして 、 モジュール の 初期 化 関数 ( initspam ()) の 中 で 、 例外 オブジェクト を 使っ て 初期 化 し ます ( ここ で は エラー チェック を 省略 し て い ます ): 
Python レベル で の 例外 オブジェクト の 名前 は spam . error に なる こと に 注意 し て ください 。 
PyErr _ NewException () 関数 は 、 
の `` 組み込み 例外 '' の 節 に 述べ られ て いる Exception クラス を 基底 クラス に 持つ 例外 クラス も 作成 でき ます ( NULL の 代わり に 他 の クラス を 渡し た 場合 は 別 です )。 SpamError 変数 は 、 新た に 生成 さ れ た 例外 クラス へ の 参照 を 維持 する こと に も 注意 し て ください ; これ は 意図 的 な 仕様 です ! 外部 の コード が 例外 オブジェクト を モジュール から 除去 できる ため 、 モジュール から 新た に 作成 し た 例外 クラス が 見え なく なり 、 SpamError が ぶら下がり ポインタ ( dangling pointer ) に なっ て しまわ ない よう に する ため に 、 クラス に対する 参照 を 所有 し て おか ね ば なり ませ ん 。 
もし SpamError が ぶら下がり ポインタ に なっ て しまう と 、 C コード が 例外 を 送出 しよ う と し た とき に コアダンプ や 意図 し ない 副作用 を 引き起こす こと が あり ます 。 この 例 に ある 、 関数 の 戻り 値 型 に PyMODINIT _ FUNC の 使う 方法 について は 後で 議論 し ます 。 
Python は 、 式 を 左 から 右 へ と 順に 評価 し て ゆき ます 。 
ただし 、 代入 式 を 評価 する 最 に は 、 代入 演算 子 の 右側 項 が 左側 項 より も 先 に 評価 さ れる ので 注意 し て ください 。 
以下 に 示す 実行 文 の 各行 で の 評価 順序 は 、 添え 字 の 数字 順序 と 同じ に なり ます : expr 1 , expr 2 , expr 3 , expr 4 ( expr 1 , expr 2 , expr 3 , expr 4 ){ expr 1 : expr 2 , expr 3 : expr 4 } expr 1 + expr 2 * ( expr 3 - expr 4 ) func ( expr 1 , expr 2 , * expr 3 , ** expr 4 ) expr 3 , expr 4 = expr 1 , expr 2 
7 . 5 . 4 . 1 Semaphore の 例 
wait () メソッド は フラグ が True に なる まで ブロック し ます 。 
クラス Event 
内部 フラグ の 初期 値 は 偽 です 。 
内部 フラグ の 値 が 真 で ある 場合 かつ その 場合 に のみ 真 を 返し ます 。 
フラグ の 値 が 真に なる の を 待っ て いる 全て の スレッド を 起こし ます 。 
一旦 フラグ が 真に なる と 、 スレッド が wait () を 呼び出し て も 全く ブロック し なく なり ます 。 
内部 フラグ の 値 を 偽 に リセット し ます 。 
以降 は 、 set () を 呼び出し て 再び 内部 フラグ の 値 を 真に セット する まで 、 wait () を 呼出し た スレッド は ブロック する よう に なり ます 。 
内部 フラグ の 値 が 真に なる まで ブロック し ます 。 
wait () 処理 に 入っ た 時点 で 内部 フラグ の 値 が 真 で あれ ば 、 直ちに 処理 を 戻し ます 。 
そう で ない 場合 、 他 の スレッド が set () を 呼び出し て フラグ の 値 を 真に セット する か 、 オプション の タイム アウト が 発生 する まで ブロック し ます 。 timeout 引数 を 指定 し て 、 None 以外 の 値 に する 場合 、 タイム アウト を 秒 ( または 端 数 秒 ) を 表す 浮動 小数点 数 で なけれ ば なり ませ ん 。 
次 の 関数 は Python 1 . 4 まで の 標準 import 文 ( 階層 的 な モジュール 名 が ない ) を エミュレート し ます 。 
( この 実装 は その バージョン で は 動作 し ない でしょ う 。 なぜなら 、 find _ module () は 拡張 さ れ て おり 、 また load _ module () が 1 . 4 で 追加 さ れ て いる から です 。 
階層 的 な モジュール 名 を 実装 し 、 reload () 
関数 を 含む より 完全 な 例 は モジュール knee 
に あり ます 。 
knee モジュール は Python の ソースディストリビューション の 中 の Demo / imputil / に あり ます 。 
6 パッケージインデクス に 登録 する 
1 pure Python 配布 物 
この 章 で 説明 する 関数 を 使う と 、 Python の 例外 の 処理 や 送出 が できる よう に なり ます 。 
Python の 例外 処理 の 基本 を いくら か 理解 する こと が 大切 です 。 
例外 は Unix errno 変数 に やや 似 た 機能 を 果たし ます : 発生 し た 中 で 最も 新しい エラー の ( スレッド 毎 の ) グローバル な インジケータ が あり ます 。 
実行 に 成功 し た 場合 に は ほとんど の 関数 が これ を クリア し ませ ん が 、 失敗 し た とき に は エラー の 原因 を 示す ため に 設定 し ます 。 
エラー を 処理 し て 例外 を クリア する か 、 あるいは ( オブジェクト 参照 または メモリ 割り当て の よう な ) それ が 持つ どんな リソース も 取り除い た 後 に 戻る か の どちら か 一方 を 行う 責任 が あり ます 。 エラー を 処理 する 準備 を し て い なけれ ば 、 普通 に 続ける べき で は あり ませ ん 。 
エラー の ため に 戻る 場合 は 、 エラー が 設定 さ れ て いる と 呼び出し 元 に 知らせる こと が 大切 です 。 
エラー が 処理 さ れ て い ない 場合 または 丁寧 に 伝え られ て いる 場合 に は 、 Python / C API の さら なる 呼び出し は 意図 し た 通り に は 動か ない 可能 性 が あり 、 不可解 な 形 で 失敗 する か も しれ ませ ん 。 エラー インジケータ は 
Python 変数 sys . exc _ type , sys . exc _ value および sys . exc _ traceback に 対応 する 三つ の Python オブジェクト から から なり ます 。 
いろいろ な 方法 で エラー インジケータ と やりとり する ため に API 関数 が 存在 し ます 。 
各 スレッド に 別々 の エラー インジケータ が あり ます 。 
sys . stderr へ 標準 トレース バック を プリント し 、 エラー インジケータ を クリア し ます 。 
エラー インジケータ が 設定 さ れ て いる とき に だけ 、 この 関数 を 呼び出し て ください 。 
( それ 以外 の 場合 、 致命 的 な エラー を 引き起こす でしょ う !) 
エラー インジケータ が 設定 さ れ て いる か テスト し ます 。 
設定 さ れ て いる 場合 は 、 例外 の 型 ( PyErr _ Set *() 関数 の 一つ あるいは PyErr _ Restore () へ の 最も 新しい 呼び出し に対する 第 一 引数 ) を 返し ます 。 
設定 さ れ て い ない 場合 は NULL を 返し ます 。 
あなた は 戻り 値 へ の 参照 を 持っ て い ませ ん ので 、 それ に Py _ DECREF () する 必要 は あり ませ ん 。 
注意 : 戻り 値 を 特定 の 例外 と 比較 し ない で ください 。 
" PyErr _ GivenExceptionMatches ( PyErr _ Occurred (), exc )" と 同じ 。 
例外 が 実際 に 設定 さ れ た とき に だけ 、 これ を 呼び 出 だす べき です 。 例外 が 発生 し て い ない なら ば 、 メモリ アクセス 違反 が 起きる でしょ う 。 
given 例外 が exc の 例外 と 一致 する なら 真 を 返し ます 。 
これ は exc が クラス オブジェクト で ある 場合 も 真 を 返し ます 。 これ は given が サブ クラス の インスタンス で ある とき も 真 を 返し ます 。 
exc が タプル なら ば 、 タプル 内 ( と 再帰 的 に サブタプル 内 ) の すべて の 例外 が 一致 する か 調べ られ ます 。 
given が NULL なら ば 、 メモリ アクセス 違反 が 起きる でしょ う 。 
ある 状況 で は 、 以下 の PyErr _ Fetch () が 返す 値 は `` 正規 化 さ れ て い ない '' 可能 性 が あり ます 。 つまり 、 * exc 
は クラス オブジェクト だ が * val 
は 同じ クラス の インスタンス で は ない という 意味 です 。 
この 関数 は その よう な 場合 に その クラス を インスタンス 化 する ため に 使わ れ ます 。 
その 値 が すでに 正規 化 さ れ て いる 場合 は 何 も 起き ませ ん 。 
遅延 正規 化 は パフォーマンス を 改善 する ため に 実装 さ れ て い ます 。 
エラー インジケータ を クリア し ます 。 
エラー インジケータ が 設定 さ れ て い ない なら ば 、 効果 は あり ませ ん 。 
エラー インジケータ を アドレス を 渡す 三つ の 変数 の 中 へ 取り出し ます 。 
エラー インジケータ が 設定 さ れ て い ない 場合 は 、 三つ すべて の 変数 を NULL に 設定 し ます 。 
エラー インジケータ が 設定 さ れ て いる 場合 は クリア さ れ 、 あなた は 取り出さ れ た それぞれ の オブジェクト へ の 参照 を 持つ こと に なり ます 。 
型 オブジェクト が NULL で ない とき で さえ 、 その 値 と トレースバックオブジェクト は NULL かも しれ ませ ん 。 
注意 : 通常 、 この 関数 は 例外 を 扱う 必要 の ある コード あるいは エラー インジケータ を 一時 的 に 保存 し て 元 に 戻す 必要 の ある コード によって のみ 使用 さ れ ます 。 
三つ の オブジェクト から エラー インジケータ を 設定 し ます 。 
エラー インジケータ が すでに 設定 さ れ て いる 場合 は 、 最初 に クリア さ れ ます 。 
オブジェクト が NULL なら ば 、 エラー インジケータ が クリア さ れ ます 。 
NULL の type と 非 NULL の value あるいは traceback を 渡し て は いけ ませ ん 。 
例外 の 型 ( type ) は クラス で ある べき です 。 
無効 な 例外 の 型 ( type ) あるいは 値 ( value ) を 渡し て は いけ ませ ん 。 ( これら の 規則 を 破る と 後で 気付き にくい 問題 の 原因 と なる でしょ う 。 
) この 呼び出し は それぞれ の オブジェクト へ の 参照 を 取り除き ます : あなた は 呼び出し の 前 に それぞれ の オブジェクト へ の 参照 を 持た なけれ ば なら ない の で あり 、 また 呼び出し の 後 に は もはや これら の 参照 を 持っ て い ませ ん 。 
( これ を 理解 し て い ない 場合 は 、 この 関数 を 使っ て は いけ ませ ん 。 
注意 し て おき ます 。 
これ は エラー インジケータ を 設定 する ため の 最も 一般 的 な 方法 です 。 
第 一 引数 は 例外 の 型 を 指定 し ます 。 
通常 は 標準 例外 の 一つ 、 例えば PyExc _ RuntimeError です 。 
その 参照 カウント を 増加 さ せる 必要 は あり ませ ん 。 
第 二 引数 は エラーメッセージ で 、 文字 列 オブジェクト へ 変換 さ れ ます 。 
この 関数 は PyErr _ SetString () に 似 て い ます が 、 例外 の `` 値 ( value )'' として 任意 の Python オブジェクト を 指定 する こと が でき ます 。 
常に NULL . 
書式 化 コード の 前 の 幅 . 精度 ( width . precision ) は 解析 さ れ ます が 、 幅 の 部分 は 無視 さ れ ます 。 
文字 
文字 、 int 引数 として 
10 進数 、 int 引数 として 
16 進数 、 int 引数 として 
文字 列 、 char * 引数 として 
16 進 法 の ポインタ 、 void * 引数 として 
認識 でき ない 書式 化 文字 が ある と 書式 化 文字 列 の 残り すべて が そのまま 結果 の 文字 列 へ コピー さ れ 、 余分 の 引数 は どれ も 捨て られ ます 。 
これ は " PyErr _ SetObject ( type , Py _ None )" を 省略 し た もの です 。 
これ は " PyErr _ SetString ( PyExc _ TypeError , message )" を 省略 し た もの で 、 ここ で message は 組み込み 操作 が 不正 な 引数 で 呼び出さ れ た という こと を 表し て い ます 。 
主 に 内部 で 使用 する ため の もの です 。 
これ は " PyErr _ SetNone ( PyExc _ MemoryError )" を 省略 し た もの で 、 NULL を 返し ます 。 したがって 、 メモリ 不足 に なっ た とき 、 オブジェクト 割り当て 関数 は " return PyErr _ NoMemory ();" と 書く こと が でき ます 。 
C ライブラリ 関数 が エラー を 返し て C 変数 errno を 設定 し た とき に 、 これ は 例外 を 発生 さ せる ため に 便利 な 関数 です 。 
第 一 要素 が 整数 errno 値 で 、 第 二 要素 が ( strerror () から 得 られる ) 対応 する エラーメッセージ で ある タプルオブジェクト を 構成 し ます 。 
それから 、 " PyErr _ SetObject ( type , object )" を 呼び出し ます 。 
Unix で は 、 errno 値 が EINTR で ある とき 、 すなわち 割り込ま れ た システム コール を 表し て いる とき 、 これ は PyErr _ CheckSignals () を 呼び出し 、 それ が エラー インジケータ を 設定 し た 場合 は 設定 さ れ た まま に し て おき ます 。 
関数 は 常に NULL を 返し ます 。 
したがって 、 システム コール が エラー を 返し た とき 、 システム コール の ラッパー 関数 は " return PyErr _ SetFromErrno ( type );" と 書く こと が でき ます 。 PyObject * 
PyErr _ SetFromErrno () に 似 て い て 、 filename が NULL で ない 場合 に 、 それ が type の コンス トラクタ に 第 三 引数 として 渡さ れる という ふるまい が 追加 さ れ て い ます 。 
IOError と OSError の よう な 例外 の 場合 で は 、 これ が 例外 インスタンス の filename 属性 を 定義 する ため に 使わ れ ます 。 
これ は WindowsError を 発生 さ せる ため に 便利 な 関数 です 。 0 の ierr とともに 呼び出さ れ た 場合 、 GetLastError () が 返す エラーコード が 代り に 使わ れ ます 。 
利用 可能 範囲 : Windows 。 PyObject * 
PyErr _ SetFromWindowsErr () に 似 て い て 、 送出 する 例外 の 型 を 指定 する 引数 が 追加 さ れ て い ます 。 
PyErr _ SetFromWindowsErr () に 似 て い て 、 filename が NULL で ない 場合 に は WindowsError の コンス トラクタ へ 第 三 引数 として 渡さ れる という 振る舞い が 追加 さ れ て い ます 。 利用 可能 範囲 : Windows 。 
" PyErr _ SetString ( PyExc _ TypeError , message )" を 省略 し た もの です 。 
ここ で message は 内部 操作 ( 例えば 、 Python / C API 関数 ) が 不正 な 引数 とともに 呼び出さ れ た という こと を 示し て い ます 。 
主 に 内部 で 使用 する ため の もの です 。 
警告 メッセージ を 出し ます 。 
警告 機構 が もつ 問題 の ため に その 関数 が 例外 を 発生 さ せる という こと も 可能 です 。 ( 実装 で は その 厄介 な 仕事 を 行う ため に warnings モジュール を イン ポート し ます )。 
例外 が 発生 さ せ られ なけれ ば 、 戻り 値 は 0 です 。 
警告 コントロール の ため の C API は あり ませ ん 。 
すべて の 警告 の 属性 を 明示 的 に 制御 し た 警告 メッセージ を 出し ます 。 
これ は Python 関数 warnings . warn _ explicit () の 直接的 な ラッパ で 、 さらに 情報 を 得る に は そちら を 参照 し て ください 。 
そこ に 説明 さ れ て いる デフォルト の 効果 を 得る ため に 、 module と registry 引数 は NULL に 設定 する こと が でき ます 。 
この 関数 は Python の シグナル 処理 と やりとり する こと が でき ます 。 
シグナル が その プロセス へ 送ら れ た か どう か チェック し 、 そう なら ば 対応 する シグナル ハンドラ を 呼び出し ます 。 
モジュール が サポート さ れ て いる 場合 は 、 これ は Python で 書か れ た シグナル ハンドラ を 呼び出せ ます 。 
KeyboardInterrupt 例外 を 発生 さ せる こと です 。 
例外 が 発生 し た 場合 、 エラー インジケータ が 設定 さ れ 、 関数 は 1 を 返し ます 。 そう で なけれ ば 、 関数 は 0 を 返し ます 。 
エラー インジケータ が 以前 に 設定 さ れ て いる 場合 は 、 それ が クリア さ れる か どう か わから ない 。 
この 関数 は 廃止 さ れ て い ます 。 
SIGINT シグナル が 到達 し た 影響 を シミュレート し ます -- 次 に PyErr _ CheckSignals () が 呼ば れる とき 、 
KeyboardInterrupt は 送出 さ れる でしょ う 。 
インタプリタ ロック を 保持 する こと なく 呼び出す こと が でき ます 。 
この ユーティリティ 関数 は 新しい 例外 オブジェクト を 作成 し て 返し ます 。 name 引数 は 新しい 例外 の 名前 、 module . class 形式 の C 文字 列 で なけれ ば なら ない 。 
base と dict 引数 は 通常 NULL です 。 
これ は すべて の 例外 の ため の ルート 、 組み込み 名 Exception ( C で は PyExc _ Exception として アクセス 可能 ) から 導出 さ れ た クラス オブジェクト を 作成 し ます 。 新しい クラス の __ module __ 属性 は name 引数 の 前半 部分 ( 最後 の ドット まで ) に 設定 さ れ 、 クラス 名 は 後半 部分 ( 最後 の ドット の 後 ) に 設定 さ れ ます 。 
base 引数 は 代わり の ベース クラス を 指定 する ため に 使え ます 。 dict 引数 は クラス 変数 と メソッド の 辞書 を 指定 する ため に 使え ます 。 
例外 が 設定 さ れ て いる が インタプリタ が 実際 に 例外 を 発生 さ せる こと が でき ない とき に 、 この ユーティリティ 関数 は 警告 メッセージ を sys . stderr へ プリント し ます 。 
例えば 、 例外 が __ del __() メソッド で 発生 し た とき に 使わ れ ます 。 発生 さ せ られ ない 例外 が 生じ た コンテキスト を 特定 する ため の 一つ の 引数 obj とともに 関数 が 呼び出さ れ ます 。 
obj の repr が 警告 メッセージ に プリント さ れる でしょ う 。 
Python / C API の 全て の 関数 は 、 関数 の ドキュメント で 明確 に 説明 が ない 限り 例外 を 発行 する 可能 性 が あり ます 。 
一般 的 な 話 として 、 ある 関数 が 何らかの エラー に 遭遇 する と 、 関数 は 例外 を 送出 し て 、 関数 内 における 参照 の 所有 権 を 全て 放棄 し 、 エラー 指標 ( error indicator ) -- 通常 は NULL または - 1 を 返し ます 。 
いくつ か の 関数 で は ブール 型 で 真 / 偽 を 返し 、 偽 は エラー を 示し ます 。 きわめて 少数 の 関数 で は 明確 な エラー 指標 を 返さ なかっ たり 、 あいまい な 戻り 値 を 返し たり する ので 、 PyErr _ Occurred () 
で 明示 的 に エラー テスト を 行う 必要 が あり ます 。 例外 時 の 状態 情報 ( exception state ) は 、 スレッド 単位 に 用意 さ れ た 記憶 領域 ( per - thread storage ) 内 で 管理 さ れ ます ( この 記憶 領域 は 、 スレッド を 使わ ない アプリケーション で は グローバル な 記憶 領域 と 同じ です )。 
一つ の スレッド は 二つ の 状態 の どちら か : 例外 が 発生 し た か 、 まだ 発生 し て い ない か 、 を とり ます 。 関数 PyErr _ Occurred () を 使う と 、 この 状態 を 調べ られ ます : この 関数 は 例外 が 発生 し た 際 に は その 例外 型 オブジェクト に対する 借用 参照 ( borrowed reference ) を 返し 、 そう で ない とき に は NULL を 返し ます 。 
例外 状態 を 設定 する 関数 は 数多く あり ます : PyErr _ SetString () 
は もっとも よく 知ら れ て いる ( が 、 もっとも 汎用 性 の ない ) 例外 を 設定 する ため の 関数 で 、 PyErr _ Clear () 
は 例外 状態 情報 を 消し 去る 関数 です 。 完全 な 例外 状態 情報 は 、 3 つ の オブジェクト : 例外 の 型 、 例外 の 値 、 そして トレース バック 、 から なり ます ( どの オブジェクト も NULL を 取り 得 ます )。 
これら の 情報 は 、 Python オブジェクト の 
この 関数 は Python コード の 実行 さ れ て いる スレッド における 例外 状態 情報 を 返し ます 。 
また 、 これら の 例外 状態 情報 に対する アクセス 手段 は 、 両方 とも 意味 づけ ( semantics ) が 変更 さ れ 、 ある 関数 が 例外 を 捕捉 する と 、 その 関数 を 実行 し て いる スレッド の 例外 状態 情報 を 保存 し て 、 呼び出し 側 の 呼び出し 側 の 例外 状態 情報 を 維持 する よう に なり まし た 。 
この 変更 によって 、 無害 そう に 見える 関数 が 現在 扱っ て いる 例外 を 上書き する こと で 引き起こさ れる 、 例外 処理 コード で よく おき て い た バグ を 抑止 し て い ます ; また 、 トレース バック 内 の スタック フレーム で 参照 さ れ て いる オブジェクト が しばしば 不 必要 に 寿命 を 永らえ て い た の を なくし て い ます 。 一般 的 な 原理 として 、 ある 関数 が 別 の 関数 を 呼び出し て 何らかの 作業 を さ せる とき 、 呼び出し 先 の 関数 が 例外 を 送出 し て い ない か 調べ なく て は なら ず 、 もし 送出 し て いれ ば 、 その 例外 状態 情報 は 呼び出し 側 に 渡さ れ なけれ ば なり ませ ん 。 
呼び出し 元 の 関数 は オブジェクト 参照 の 所有 権 を すべて 放棄 し 、 エラー 指標 を 返さ なく て は なり ませ ん が 、 余計 に 例外 を 設定 する 必要 は あり ませ ん -- そんな こと を すれ ば 、 たった今 送出 さ れ た ばかり の 例外 を 上書き し て しまい 、 エラー の 原因 そのもの に関する 重要 な 情報 を 失う こと に なり ます 。 
例外 を 検出 し て 渡す 例 は 、 上 の sum _ sequence () で 示し て い ます 。 
偶然 に も 、 この 例 で は エラー を 検出 し た 際 に 何ら 参照 を 放棄 する 必要 が あり ませ ん 。 
以下 の 関数 の 例 で は 、 エラー に対する 後始末 について 示し て い ます 。 
まず 、 どうして Python で 書く の が 好き か 思い出し て もらう ため に 、 等価 な Python コード を 示し ます : 
以下 は 対応 する コード を C で 完璧 に 書い た もの です : 
intincr _ item ( PyObject * dict , PyObject * key ){/* Py _ XDECREF 用 に 全て の オブジェクト を NULL で 初期 化 */ PyObject * item = NULL , * const _ one = NULL , * incremented _ item = NULL ; int rv = - 1 ; /* 戻り 値 の 初期 値 を - 1 ( 失敗 ) に 設定 し て おく */ item = PyObject _ GetItem ( dict , key ); if ( item == NULL ) {/* KeyError だけ を 処理 : */ if (! PyErr _ ExceptionMatches ( PyExc _ KeyError )) goto error ;/* エラー を 無かっ た こと に ( clear ) し て ゼロ を 使う : */ PyErr _ Clear (); item = PyInt _ FromLong ( 0 L ); if ( item == NULL ) goto error ;} const _ one = PyInt _ FromLong ( 1 L ); if ( const _ one == NULL ) goto error ; incremented _ item = PyNumber _ Add ( item , const _ one ); if ( incremented _ item == NULL ) goto error ; if ( PyObject _ SetItem ( dict , key , incremented _ item ) 0 ) goto error ; rv = 0 ; /* うまく いっ た 場合 *//* 後始末 コード に 続く */ error :/* 成功 し て も 失敗 し て も 使わ れる 後始末 コード *//* NULL を 参照 し て いる 場合 は 無視 する ため に Py _ XDECREF () を 使う */ Py _ XDECREF ( item ); Py _ XDECREF ( const _ one ); Py _ XDECREF ( incremented _ item ); return rv ; /* エラー なら - 1 、 成功 なら 0 */} 
なんと この 例 は C で goto 文 を 使う お 勧め の 方法 まで 示し て い ます ね ! この 例 で は 、 特定 の 例外 を 処理 する ため に PyErr _ ExceptionMatches () 
および PyErr _ Clear () 
を どう 使う か を 示し て い ます 。 
また 、 所有 権 を 持っ て いる 参照 で 、 値 が NULL に なる かも しれ ない もの を 捨てる ため に Py _ XDECREF () を どう 使う かも 示し て い ます ( 関数 名 に " X " が 付い て いる こと に 注意 し て ください ; Py _ DECREF () は NULL 参照 に 出くわす と クラッシュ し ます )。 
正しく 動作 さ せる ため に は 、 所有 権 を 持つ 参照 を 保持 する ため の 変数 を NULL で 初期 化 する こと が 重要 です ; 同様 に 、 あらかじめ 戻り 値 を 定義 する 際 に は 値 を - 1 ( 失敗 ) で 初期 化 し て おい て 、 最後 の 関数 呼び出し まで うまく いっ た 場合 に のみ 0 ( 成功 ) に 設定 し ます 。 
7 . 複合 文 ( compound statement ) 
6 . 14 exec 文 
この 文 は 、 Python コード の 動的 な 実行 を サポート し ます 。 
最初 の 式 の 値 評価 結果 は 文字 列 か 、 開か れ た ファイル オブジェクト か 、 コード オブジェクト で なけれ ば なり ませ ん 。 
文字 列 の 場合 、 一連 の Python 実行 文 として 解析 し 、 ( 構文 エラー が 生じ ない 限り ) 実行 し ます 。 
開か れ た ファイル で あれ ば 、 ファイル を EOF まで 読ん で 解析 し 、 実行 し ます 。 
コード オブジェクト なら 、 単に オブジェクト を 実行 し ます 。 いずれ の 場合 でも 、 オプション の 部分 が 省略 さ れる と 、 コード は 現在 の スコープ 内 で 実行 さ れ ます 。 
in の 後ろ に 一つ だけ 式 を 指定 する 場合 、 その 式 は 辞書 で なく て は なら ず 、 グローバル 変数 と ローカル 変数 の 両方 に 使わ れ ます 。 
これら は それぞれ グローバル 変数 と ローカル 変数 として 使わ れ ます 。 locals を 指定 する 場合 は 何らかの マップ 型 オブジェクト に せ ね ば なり ませ ん . バージョン 2 . 4 で 変更 さ れ た 仕様 : 以前 は locals は 辞書 で なけれ ば なり ませ ん でし た 
exec の 副作用 として 実行 さ れる コード で 設定 さ れ た 変数 名 に 対応 する 名前 の 他 に 、 追加 の キー を 辞書 に 追加 する こと が あり ます 。 
例えば 、 現在 の 実装 で は 、 組み込み モジュール __ builtin __ の 辞書 に対する 参照 を 、 __ builtins __ (!) という キー で 追加 する こと が あり ます 。 
プログラマ の ため の ヒント : 式 の 動的 な 評価 は 、 組み込み 関数 eval () で サポート さ れ て い ます 組み込み 関数 globals () および locals () は 、 それぞれ 現在 の グローバル 辞書 と ローカル 辞書 を 返す ので 、 exec に 渡し て 使う と 便利 です 。 
4 . 1 名前 づけ と 束縛 ( naming and binding ) 
内容 モデル は 入れ子 に なっ た タプル を 使っ て 記述 さ れ て い ます 。 
各 タプル に は 4 つ の 値 : 型 、 限定 詞 ( quantifier )、 名前 、 そして 子 の タプル 、 が 収め られ て い ます 。 
子 の タプル は 単に 内容 モデル を 記述 し た もの です 。 最初 の 二つ の フィールド の 値 は xml . parsers . expat モジュール の model オブジェクト で 定義 さ れ て いる 定数 です 。 
これら の 定数 は 二つ の グループ : モデル 型 ( model type ) グループ と 限定 子 ( quantifier ) グループ 、 に 取りまとめ られ ます 。 
以下 に モデル 型 グループ における 定数 を 示し ます : XML _ CTYPE _ ANY 
モデル 名 で 指定 さ れ た 要素 は ANY の 内容 モデル を 持つ と 宣言 さ れ ます 。 
指定 さ れ た エレメント は いくつ か の オプション から 選択 できる よう に なっ て い ます ; ( A | B | C ) の よう な 内容 モデル で 用い られ ます 。 
EMPTY で ある と 宣言 さ れ て いる 要素 は この モデル 型 を 持ち ます 。 
順々 に 続く よう な モデル の 系列 を 表す モデル が この モデル 型 で 表さ れ ます 。 
( A , B , C ) の よう な モデル で 用い られ ます 。 
限定 子 グループ における 定数 を 以下 に 示し ます : 
XML _ CQUANT _ NONE 修飾 子 ( modifier ) が 指定 さ れ て い ませ ん 。 
従って A の よう に 、 厳密 に 一つ だけ です 。 
この モデル は オプション です : A ? の よう に 、 一つ か 全く ない か です 。 
この モデル は ( A + の よう に ) 一つ か それ 以上 あり ます 。 
この モデル は A * の よう に ゼロ 回 以上 あり ます 。 
以下 の 定数 は 
モジュール における errors オブジェクト で 提供 さ れ て い ます 。 
これら の 定数 は 、 エラー が 発生 し た 際 に 送出 さ れる ExpatError 例外 オブジェクト の いくつ か の 属性 を 解釈 する 上 で 便利 です 。 
errors オブジェクト は 以下 の 属性 を 持ち ます : XML _ ERROR _ ASYNC _ ENTITY 
属性 値 中 の エンティティ 参照 が 、 内部 エンティティ で は なく 外部 エンティティ を 参照 し まし た 。 
文字 参照 が 、 XML で は 正しく ない ( illegal ) 文字 を 参照 し まし た ( 例えば 0 や `# 0 ;')。 
エンティティ 参照 が 、 記法 ( notation ) つき で 宣言 さ れ て いる エンティティ を 参照 し た ため 、 解析 でき ませ ん 。 
一つ の 属性 が 一つ の 開始 タグ 内 に 一 度 より 多く 使わ れ て い ます 。 
入力 さ れ た バイト が 文字 に 適切 に 関連付け でき ない 際 に 送出 さ れ ます ; 例えば 、 UTF - 8 入力 ストリーム における NUL バイト ( 値 0 ) など です 。 
空白 以外 の 何 か が ドキュメント 要素 の 後 に あり ます 。 
入力 データ の 先頭 以外 の 場所 に XML 定義 が 見つかり まし た 。 
この ドキュメント に は 要素 が 入っ て い ませ ん ( XML で は 全て の ドキュメント は 確実 に トップ レベル の 要素 を 一つ 持つ よう 要求 し て い ます )。 
Expat が 内部 メモリ を 確保 でき ませ ん でし た 。 
パラメタ エンティティ が 許可 さ れ て い ない 場所 で 見つかり まし た 。 
エンティティ 参照 中 に 、 同じ エンティティ へ の 別 の 参照 が 入っ て い まし た ; おそらく 違う 名前 で 参照 し て いる か 、 間接 的 に 参照 し て い ます 。 
何らかの 仕様 化 さ れ て い ない 構文 エラー に 遭遇 し まし た 。 
終了 タグ が 最も 内側 で 開か れ て いる 開始 タグ に 一致 し ませ ん 。 
何らかの ( 開始 タグ の よう な ) トーク ン が 閉じ られ ない まま 、 ストリーム の 終端 や 次 の トー クン に 遭遇 し まし た 。 
定義 さ れ て い ない エンティティ へ の 参照 が 行わ れ まし た 。 
ドキュメント の エン コード が Expat で サポート さ れ て い ませ ん 。 
CDATA セクション が 閉じ られ て い ませ ん 。 
XML 文書 が `` standalone '' だ と 宣言 さ れ て おり NotStandaloneHandler が 設定 さ れ 0 が 返さ れ て いる に も かかわら ず 、 パーサ は `` standalone '' で は ない と 判別 し まし た 。 
その 操作 を 完了 する に は DTD の サポート が 必要 です が 、 Expat が DTD の サポート を し ない 設定 に なっ て い ます 。 
これ は xml . parsers . expat モジュール の 標準 的 な ビルド で は 報告 さ れ ませ ん 。 
パース が 始まっ た あと で 動作 の 変更 が 要求 さ れ まし た 。 これ は パース が 開始 さ れる 前 に のみ 変更 可能 です 。 
( 現在 の ところ ) UseForeignDTD () によって のみ 送出 さ れ ます 。 
名前 空間 の 処理 を 有効 する と 宣言 さ れ て い ない プレフィックス が 見つかり ます 。 
XML 文書 は プレフィックス に 対応 し た 名前 空間 宣言 を 削除 しよ う と し まし た 。 
パラメータ エンティティ は 不完全 な マーク アップ を 含ん で い ます 。 
XML 文書 中 に 要素 が あり ませ ん 。 
外部 エンティティ 中 の テキスト 宣言 に エラー が あり ます 。 
パブリック ID 中 に 許可 さ れ て い ない 文字 が あり ます 。 
要求 さ れ た 操作 は 一時 停止 さ れ た パーサ で 行わ れ て い ます が 、 許可 さ れ て い ない 操作 です 。 
Python アプリケーション に は 通知 さ れ ませ ん 。 
要求 さ れ た 操作 で 、 パース 対象 と なる 入力 が 完了 し た と 判断 し まし た が 、 入力 は 受理 さ れ ませ ん でし た 。 
この エラー は 追加 の 入力 を 行なお う と し て いる 場合 、 もしくは パーサ が 停止 しよ う と し て いる 場合 に 送出 さ れ ます 。 
以下 の プログラム で は 、 与え られ た 引数 を 出力 する だけ の 三つ の ハンドラ を 定義 し て い ます 。 
この プログラム の 出力 は 以下 の よう に なり ます : 
ExpatError 例外 は いくつ か の 興味深い 属性 を 備え て い ます : 
特定 の エラー における Expat の 内部 エラー 番号 です 。 
この 値 は この モジュール の errors オブジェクト で 定義 さ れ て いる 定数 の いずれ か に 一致 し ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
エラー が 検出 さ れ た 場所 の 行 番号 です 。 
最初 の 行 の 番号 は 1 です 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
エラー が 発生 し た 場所 の 行内 で の オフセット です 。 
最初 の カラム の 番号 は 0 です 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
二つ または それ 以上 の 物理 行 を 論理 行 として つなげる ため に は 、 バックス ラッシュ 文字 () を 使っ て 以下 の よう に し ます : 物理 行 が 文字 列 リテラル や コメント 中 の 文字 で ない バックス ラッシュ で 終わっ て いる 場合 、 後続 する 行 と つなげ て 一つ の 論理 行 を 構成 し 、 バックス ラッシュ および バックス ラッシュ の 後ろ に ある 行末 文字 を 削除 し ます 。 
例えば : 
if 1900 year 2100 and 1 = month = 12 \ and 1 = day = 31 and 0 = hour 24 \ and 0 = minute 60 and 0 = second 60 : # Looks like a valid datereturn 1 と なり ます 。 
バックス ラッシュ で 終わる 行 に は コメント を 入れる こと は でき ませ ん 。 
また 、 バックス ラッシュ を 使っ て コメント を 継続 する こと は でき ませ ん 。 
バックス ラッシュ が 文字 列 リテラル 中 に ある 場合 を 除き 、 バックス ラッシュ の 後ろ に トーク ン を 継続 する こと は でき ませ ん ( すなわち 、 物理 行内 の 文字 列 リテラル 以外 の トーク ン を バックス ラッシュ を 使っ て 分断 する こと は でき ませ ん )。 
上記 以外 の 場所 で は 、 文字 列 リテラル 外 に ある バックス ラッシュ は どこ に あっ て も 不正 と なり ます 。 
8 . 4 式 入力 
A . 歴史 と ライセンス 
式 入力 に は 二つ の 形式 が あり ます 。 
双方 とも 、 先頭 の 空白 を 無視 し ます 。 eval () に対する 文字 列 引数 は 、 以下 の 形式 を とら なけれ ば なり ませ ん : 
input () で 読み込ま れる 入 力行 は 、 以下 の 形式 を とら なけれ ば なり ませ ん : 
注意 : 文 として の 解釈 を 行わ ない ` 生 の ( raw )' 入 力行 を 読み出す ため に は 、 組み込み 関数 raw _ input () や 、 ファイル オブジェクト の readline () メソッド を 使う こと が でき ます 。 
この 章 で は 、 Python の 式 における 個々 の 要素 の 意味 について 解説 し ます 。 
表記 法 に関する 注意 : この 章 と 以降 の 章 で の 拡張 BNF ( extended BNF ) 表記 は 、 字句 解析 規則 で は なく 、 構文 規則 を 記述 する ため に 用い られ て い ます 。 
ある 構文 規則 ( の ある 表現 方法 ) が 、 以下 の 形式 
で 記述 さ れ て い て 、 この 構文 特有 の 意味 付け ( semantics ) が 記述 さ れ て い ない 場合 、 name の 形式 を とる 構文 の 意味 付け は 、 othername の 意味 付け と 同じ に なり ます 。 
少なくとも 一つ の カンマ を 含む 式 の リスト は 、 タプル に なり ます 。 
タプル の 長 さ は 、 リスト 中 の 式 の 数 に 等しく なり ます 。 
リスト 中 の 式 は 左 から 右 へ と 順に 評価 さ れ ます 。 
単一 要素 の タプル ( 別名 単 集合 ( singleton )) を 作り たけれ ば 、 末尾 に カンマ が 必要 です 。 
単一 の 式 だけ で 、 末尾 に カンマ を つけ ない 場合 に は 、 タプル で は なく その 式 の 値 に なり ます ( 空 の タプル を 作り たい なら 、 中身 が 空 の 丸 括弧 ペア : () を 使い ます 。 ) 
式 文 は 、 ( 主 に 対話 的 な 使い方 で は ) 値 を 計算 し て 出力 する ため に 使っ たり 、 ( 通常 は ) プロシジャ ( procedure : 有意 な 結果 を 返さ ない 関数 の こと です ; Python で は 、 プロシジャ は 値 None を 返し ます ) を 呼び出す ため に 使い ます 。 
その他 の 使い方 で も 式 文 を 使う こと が でき ます し 、 有用 な こと も あり ます 。 
式 文 の 構文 は 以下 の 通り です : 
式 文 は 式 の リスト ( 単一 の 式 の こと も あり ます ) を 値 評価 し ます 。 
対話 モード で は 、 値 が None で ない 場合 、 値 を 組み込み 関数 repr () 
で 文字 列 に 変換 し て 、 その 結果 のみ から なる 一行 を 標準 出力 に 書き出し ます ( 6 . 6 節 参照 )。 
( None に なる 式 文 の 値 は 書き出さ れ ない ので 、 プロシジャ 呼び出し を 行っ て も 出力 は 得 られ ませ ん 。 ) 
5 . 5 C ++ による Python の 埋め込み 
ここ まで は 、 埋め込み Python インタプリタ は アプリケーション 本体 の 機能 に アクセス する 手段 が あり ませ ん でし た 。 
Python API を 使う と 、 埋め込み インタプリタ を 拡張 する こと で アプリケーション 本体 へ の アクセス を 可能 に し ます 。 
つまり 、 アプリケーション で 提供 さ れ て いる ルーチン を 使っ て 、 埋め込み インタプリタ を 拡張 する の です 。 複雑 な こと の よう に 思え ます が 、 それほど ひどい わけ で は あり ませ ん 。 
さしあたっ て 、 アプリケーション が Python インタプリタ を 起動 し た という こと を ちょっと 忘れ て み て ください 。 
その 代わり 、 アプリケーション が サブルーチン の 集まり で 、 あたかも 普通 の Python 拡張 モジュール を 書く か の よう に 、 Python から 各 ルーチン に アクセス できる よう に する グルー ( glue , 糊 ) コード を 書く と 考え て ください 。 
例えば 以下 の よう に です : 
static int numargs = 0 ;/* アプリケーション の コマンド ライン 引数 の 個数 を 返す */ static PyObject * emb _ numargs ( PyObject * self , PyObject * args ){ if (! PyArg _ ParseTuple ( args , ": numargs ")) return NULL ; return Py _ BuildValue (" i ", numargs );} static PyMethodDef EmbMethods [] = {{" numargs ", emb _ numargs , METH _ VARARGS ," Return the number of arguments received by the process ."},{ NULL , NULL , 0 , NULL }}; 
上 の コード を main () 関数 の すぐ 上 に 挿入 し ます 。 また 、 以下 の 二つ の 文 を Py _ Initialize () の 直後 に 挿入 し ます : 
これら 二つ の 行 は numargs 変数 を 初期 化 し 、 埋め込み Python インタプリタ から emb . numargs () 関数 に アクセス できる よう に し ます 。 
これら の 拡張 モジュール 関数 を 使う と 、 Python スクリプト は 
import embprint " Number of arguments ", emb . numargs () の よう な こと が でき ます 。 
実際 の アプリケーション で は 、 こうした メソッド で アプリケーション 内 の API を Python に 公開 する こと に なり ます 。 
Distutils は 様々 な 方法 で 拡張 でき ます 。 
ほとんど の 拡張 は 存在 する コマンド を 新しい コマンド で 置換 する 形 で おこなわ れ ます 。 
新しい コマンド は たとえば 存在 する コマンド を 置換 し て 、 その コマンド で パッケージ を どう 処理 する か の 細部 を 変更 する こと で プラットフォーム 特有 の パッケージ 形式 を サポート する ため に 書か れ て いる かも しれ ませ ん ほとんど の distutils の 拡張 は 存在 する コマンド を 変更 し たい setup . py スクリプト 中 で 行わ れ ます 。 ほとんど は パッケージ に コピー さ れる ファイル 拡張 子 を . py の 他 に 、 いくつ か 追加 する もの です 。 
ほとんど の distutils の コマンド 実装 は distutils . cmd 
の Command クラス の サブ クラス として 実装 さ れ て い ます 。 
新しい コマンド は Command を 直接 継承 し 、 置換 する コマンド で は 置換 対象 の コマンド の サブ クラス に する こと で Command を 間接 的 に 継承 し ます 。 
コマンド は Command から 派生 し た もの で ある 必要 が あり ます 。 
Fault オブジェクト は 、 XML - RPC の fault タグ の 内容 を カプセル 化 し て おり 、 以下 の メンバ を 持ち ます : 
失敗 の タイプ を 示す 文字 列 。 
失敗 の 診断 メッセージ を 含む 文字 列 。 
11 . 20 . 1 CookieJar および FileCookieJar 
クッキー の 読み書き の ため に 、 以下 の CookieJar サブ クラス が 提供 さ れ て い ます 。 
これ 以外 の CookieJar サブ クラス は 、 Microsoft Internet Explorer ブラウザ の クッキー を 読み こむ もの も 含め 、 http :// wwwsearch . sf . net / ClientCookie / から 使用 可能 です 。 
クラス MozillaCookieJar 
Mozilla の cookies . txt ファイル 形式 ( この 形式 は また Lynx と Netscape ブラウザ によって も 使わ れ て い ます ) で ディスク に クッキー を 読み書き する ため の FileCookieJar です 。 
注意 : この クラス は RFC 2965 クッキー に関する 情報 を 失い ます 。 また 、 より 新しい か 、 標準 で ない port など の クッキー 属性 について の 情報 も 失い ます 。 
警告 : も し クッキー の 損失 や 欠損 が 望ましく ない 場合 は 、 クッキー を 保存 する 前 に バックアップ を 取っ て おく よう に し て ください ( ファイル へ の 読み込み / 保存 を くり 返す と 微妙 な 変化 が 生じる 場合 が あり ます )。 
また 、 Mozilla の 起動 中 に クッキー を 保存 する と 、 Mozilla によって 内容 が 破壊 さ れ て しまう こと に も 注意 し て ください 。 
クラス LWPCookieJar 
libwww - perl の ライブラリ で ある Set - Cookie 3 ファイル 形式 で ディスク に クッキー を 読み書き する ため の FileCookieJar です 。 
これ は クッキー を 人間 に 可読 な 形式 で 保存 する の に 向い て い ます 。 
ホスト 名 が ない 場合 、 または ホスト 名 が ' localhost ' の 場合 に ファイル を ローカル で オープン し ます 。 
そう で ない 場合 、 プロトコル を ftp に 切り替え 、 parent を 使っ て 再度 オープン を 試み ます 。 
非 対話 的 な ファイル から 読み出さ れ た 入力 は 、 全て 同じ 形式 : 
Download entire grammar as text . を とり ます 。 
この 構文 法 は 、 以下 の 状況 で 用い られ ます : 
( ファイル や 文字 列 内 の ) 完全 な Python プログラム を 構文 解析 する とき ; 
モジュール を 構文 解析 する とき ; 
exec で 渡さ れ た 文字 列 を 構文 解析 する とき ; 
Python の 組み込み ファイル オブジェクト は 、 全て 標準 C ライブラリ の FILE * サポート の 上 に 実装 さ れ て い ます 。 
以下 の 詳細 説明 は 一 実装 に関する もの で 、 将来 の Python の リリース で 変更 さ れる かも しれ ませ ん 。 
この PyObject の サブ タイプ は Python の ファイル 型 オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の ファイル 型 を 表現 し ます 。 この オブジェクト は types . FileType として 
Python プログラム で 公開 さ れ て い ます 。 
引数 が PyFileObject か PyFileObject の サブ タイプ の とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
引数 が PyFileObject 型 で 、 かつ PyFileObject 型 の サブ タイプ で ない とき に 真 を 返し ます 。 
成功 する と 、 filename に 指定 し た 名前 の ファイル を mode に 指定 し た ファイル モード で 開い て 得 た 新た な ファイル オブジェクト を 返し ます 。 mode の セマンティクス は 標準 C ルーチン fopen () 
と 同じ です 。 
失敗 する と NULL を 返し ます 。 
すでに 開か れ て いる 標準 C ファイル ポインタ fp から 新た な PyFileObject を 生成 し ます 。 
この 関数 で 生成 し た ファイル オブジェクト は 、 閉じる 際 に close に 指定 し た 関数 を 呼び出し ます 。 
失敗 する と NULL を 返し ます 。 
p に 関連付け られ た ファイル オブジェクト を FILE * で 返し ます 。 
n が 0 の 場合 、 行 の 長 さ に 関係 なく 正確 に 1 行 だけ 読み出し ます 。 
n が 0 より 大きけれ ば 、 n バイト 以上 の データ は 読み出し ませ ん ; 従っ て 、 行 の 一部 だけ が 返さ れる 場合 が あり ます 。 
どちら の 場合 でも 、 読み出し 後 すぐ に ファイル の 終端 に 到達 し た 場合 に は 空文字 列 を 返し ます 。 
n が 0 より 小さけれ ば 、 長 さ に 関わら ず 1 行 だけ を 読み出し ます が 、 すぐ に ファイル の 終端 に 到達 し た 場合 に は EOFError を 送出 し ます 。 
p に 指定 し た ファイル の 名前 を 文字 列 オブジェクト で 返し ます 。 
setvbuf () が ある システム で のみ 利用 でき ます 。 
この 関数 を 呼び出し て よい の は ファイル オブジェクト の 生成 直後 のみ です 。 
Unicode オブジェクト を ファイル に 出力 する とき に の エン コード 方式 を enc に し ます 。 
成功 する と 1 を 、 失敗 する と 0 を 返し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
この 関数 は インタプリタ の 内部 的 な 利用 の ため に 存在 し ます 。 
この 関数 は p の softspace 
属性 を newflag に 設定 し 、 以前 の 設定 値 を 返し ます 。 
この 関数 を 正しく 動作 さ せる ため に 、 p が ファイル オブジェクト で ある 必然 性 は あり ませ ん ; 任意 の オブジェクト を サポート し ます ( softspace 属性 が 設定 さ れ て いる か どう か のみ が 問題 だ と 思っ て ください )。 
この 関数 は 全て の エラー を 解消 し 、 属性 値 が 存在 し ない 場合 や 属性 値 を 取得 する 際 に エラー が 生じる と 、 0 を 以前 の 値 として 返し ます 。 
この 関数 から は エラー を 検出 でき ませ ん が 、 そもそも そういう 必要 は あり ませ ん 。 
オブジェクト obj を ファイル オブジェクト p に 書き込み ます 。 
flag が サポート する フラグ は Py _ PRINT _ RAW 
だけ です ; この フラグ を 指定 する と 、 オブジェクト に repr () で は なく str () を 適用 し た 結果 を ファイル に 書き出し ます 。 
成功 し た 場合 に は 0 を 返し 、 失敗 する と - 1 を 返し て 適切 な 例外 を セット し ます 。 
文字 列 s を ファイル オブジェクト p に 書き出し ます 。 
成功 し た 場合 に は 0 を 返し 、 失敗 する と - 1 を 返し て 適切 な 例外 を セット し ます 。 
各 フィールド の 詳しい 説明 は Inside Macintosh : Files を 参照 し て ください 。 
ファイル の 4 文字 の クリエータコード です 。 
ファイル の 4 文字 の タイプ コード です 。 
ファイル の ファインダ フラグ で 、 16 ビット の 整数 で 表現 さ れ て い ます 。 
Flags の ビット 値 は 、 標準 モジュール MACFS で 定義 さ れ て い ます 。 
フォルダ 内 で ファイル の アイコ ン が 配置 さ れ て いる 場所 を 示す Point 値 です 。 
ファイル が 入っ て いる フォルダ ( を 整数 で 表し た もの ) です 。 
7 . 2 . 5 浮動 小数点 オブジェクト ( complex number 
この PyObject の サブ タイプ は Python 浮動 小数点 型 オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python 浮動 小数点 型 を 表現 し ます 。 
これ は types . FloatType と 同じ オブジェクト です 。 
引数 が PyFloatObject か PyFloatObject の サブ タイプ の とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
引数 が PyFloatObject 型 で 、 かつ PyFloatObject 型 の サブ タイプ で ない とき に 真 を 返し ます 。 
str の 文字 列 値 を もと に PyFloatObject オブジェクト を 生成 し ます 。 失敗 する と NULL を 返し ます 。 
引数 pend は 無視 さ れ ます 。 
この 引数 は 後方 互換 性 の ため だけ に 残さ れ て い ます 。 
v から PyFloatObject オブジェクト を 生成 し て 返し ます 。 失敗 する と NULL を 返し ます 。 
pyfloat の 指す 値 を 、 C の double 型 表現 で 返し ます 。 
pyfloat の 指す 値 を 、 C の double 型 表現 で 返し ます が 、 エラー チェック を 行い ませ ん 。 
2 . 4 . 4 整数 および 長 整数 リテラル 
浮動 小数点 数 リテラル は 以下 の 字句 定義 で 記述 さ れ ます : 
浮動 小数点 数 における 整数 部 と 指数 部 は 8 進数 の よう に 見える こと も あり ます が 、 10 を 基数 として 解釈 さ れる ので 注意 し て ください 。 
例えば 、 " 077 e 010 " は 正しい 表記 で あり 、 " 77 e 10 " と 同じ 数 を 表し ます 。 浮動 小数点 数 リテラル の 取り うる 値 の 範囲 は 実装 に 依存 し ます 。 
浮動 小数点 数 リテラル の 例 を いくつ か 示し ます : 3 . 14 10 . . 001 1 e 100 3 . 14 e - 10 0 e 0 
数値 リテラル に は 符号 が 含ま れ て い ない こと に 注意 し て ください ; - 1 の よう な 句 は 、 実際 に は 単項 演算 子 ( unary operator ) `-' と リテラル 1 を 組み合わせ た もの です 。 
for 文 は 、 シーケンス ( 文字 列 、 タプル または リスト ) や 、 その他 の 反復 可能 な オブジェクト ( iterable object ) 内 の 要素 に 渡っ て 反復 処理 を 行う ため に 使わ れ ます : 
式 リスト は 一 度 だけ 評価 さ れ ます ; 結果 は イテレーション 可能 オブジェクト に なら ね ば なり ませ ん 。 
expression _ list の 結果 に対して イテレータ を 生成 し 、 その後 、 シーケンス の 各 要素 について インデクス の 小さい 順 に 一 度 だけ スイート を 実行 し ます 。 
この とき シーケンス 内 の 要素 が 通常 の 代入 規則 を 使っ て ターゲット リスト に 代入 さ れ 、 その後 スイート が 実行 さ れ ます 。 
全て の 要素 を 使い切る と ( シーケンス が 空 の 場合 に は すぐ に )、 else 節 が あれ ば それ が 実行 さ れ 、 ループ を 終了 し ます 。 
最初 の スイート 内 で break 文 が 実行 さ れる と 、 else 節 の スイート を 実行 する こと なく ループ を 終了 し ます 。 
continue 文 が 最初 の スイート 内 で 実行 さ れる と 、 スイート 内 に ある 残り の 文 の 実行 を スキップ し て 、 式 の 真偽 評価 に 戻り ます 。 
スイート の 中 で は 、 ターゲット リスト 内 の 変数 に 代入 を 行え ます ; この 代入 によって 、 次に 代入 さ れる 要素 に 影響 を 及ぼす こと は あり ませ ん 。 ループ が 終了 し て も ターゲット リスト は 削除 さ れ ませ ん が 、 シーケンス が 空 の 場合 に は 、 ループ で の 代入 は 全く 行わ れ ませ ん 。 
ヒント : 組み込み 関数 range () は 、 Pascal 言語 における for i := a to b do の 効果 を エミュレート する の に 適し た 数列 を 返し ます ; すなわち 、 range ( 3 ) は リスト [ 0 , 1 , 2 ] を 返し ます 。 
警告 : ループ 中 の シーケンス の 変更 に は 微妙 な 問題 が あり ます ( これ は 変更 可能 な シーケンス 、 すなわち リスト で 起こり ます )。 どの 要素 が 次に 使わ れる か を 追跡 する ため に 、 内部 的 な カウンタ が 使わ れ て おり 、 この カウンタ は 反復 処理 を 行う ごと に 加算 さ れ ます 。 
この カウンタ が シーケンス の 長 さ に 達する と 、 ループ は 終了 し ます 。 
この こと は 、 スイート 中 で シーケンス から 現在 の ( または 以前 の ) 要素 を 除去 する と 、 ( 次 の 要素 の インデクス は 、 すでに 取り扱っ た 要素 の インデクス に なる ため に ) 次 の 要素 が 飛ばさ れる こと を 意味 し ます 。 
20 . 4 . 1 fl モジュール に 定義 さ れ て いる 関数 
フォーム オブジェクト ( 上 で 述べ た make _ form () で 返さ れ ます ) に は 下記 の メソッド が あり ます 。 
各 メソッド は 名前 の 接頭 辞 に " fl _" を 付け た C の 関数 に 対応 し ます ; また 、 最初 の 引数 は フォーム の ポインタ です ; 説明 は FORMS の 公式 文書 を 参照 し て ください 。 全て の add _*() メソッド は 、 FORMS オブジェクト を 示す Python オブジェクト を 返し ます 。 
FORMS オブジェクト の メソッド を 以下 に 記載 し ます 。 
ほとんど の FORMS オブジェクト は 、 その オブジェクト の 種類 ごと に 特有 の メソッド も いくつ か 持っ て い ます 。 
フォーム を 表示 し ます 。 
フォーム を 隠し ます 。 
フォーム を 再 描画 し ます 。 
フォーム の 位置 を 設定 し ます 。 
フォーム を 固定 し ます 。 
固定 し た フォーム の 固定 を 解除 し ます 。 
フォーム を アクティベート し ます 。 
新しい オブジェクト の グループ を 作り ます ; グループ オブジェクト を 返し ます 。 
現在 の オブジェクト の グループ を 終了 し ます 。 
フォーム の 中 の 最初 の オブジェクト を 見つけ ます 。 
フォーム の 中 の 最後 の オブジェクト を 見つけ ます 。 
フォーム に ボックス オブジェクト を 加え ます 。 特別 な 追加 の メソッド は あり ませ ん 。 
フォーム に テキスト オブジェクト を 加え ます 。 特別 な 追加 の メソッド は あり ませ ん 。 
フォーム に クロック オブジェクト を 加え ます 。 
メソッド : get _ clock ()。 
フォーム に ボタン オブジェクト を 加え ます 。 
メソッド : get _ button ()、 set _ button ()。 
フォーム に ライトボタンオブジェクト を 加え ます 。 
フォーム に ラウンドボタンオブジェクト を 加え ます 。 
フォーム に スライダー オブジェクト を 加え ます 。 
メソッド : set _ slider _ value ()、 get _ slider _ value ()、 set _ slider _ bounds ()、 get _ slider _ bounds ()、 set _ slider _ return ()、 set _ slider _ size ()、 set _ slider _ precision ()、 set _ slider _ step ()。 
フォーム に バリュースライダーオブジェクト を 加え ます 。 
フォーム に ダイアル オブジェクト を 加え ます 。 
メソッド : set _ dial _ value ()、 get _ dial _ value ()、 set _ dial _ bounds ()、 get _ dial _ bounds ()。 
フォーム に 2 次元 ポジショナーオブジェクト を 加え ます 。 
メソッド : set _ positioner _ xvalue ()、 set _ positioner _ yvalue ()、 set _ positioner _ xbounds ()、 set _ positioner _ ybounds ()、 get _ positioner _ xvalue ()、 get _ positioner _ yvalue ()、 get _ positioner _ xbounds ()、 get _ positioner _ ybounds ()。 
フォーム に カウンタ オブジェクト を 加え ます 。 
メソッド : set _ counter _ value ()、 get _ counter _ value ()、 set _ counter _ bounds ()、 set _ counter _ step (), set _ counter _ precision ()、 set _ counter _ return ()。 
フォーム に インプット オブジェクト を 加え ます 。 
メソッド : set _ input ()、 get _ input ()、 set _ input _ color ()、 set _ input _ return ()。 
フォーム に メニュー オブジェクト を 加え ます 。 
メソッド : set _ menu ()、 get _ menu ()、 addto _ menu ()。 
フォーム に チョイスオブジェクト を 加え ます 。 
メソッド : set _ choice ()、 get _ choice ()、 clear _ choice ()、 addto _ choice ()、 replace _ choice ()、 delete _ choice ()、 get _ choice _ text ()、 set _ choice _ fontsize ()、 set _ choice _ fontstyle ()。 
フォーム に ブラウザオブジェクト を 加え ます 。 
メソッド : set _ browser _ topline ()、 clear _ browser ()、 add _ browser _ line ()、 addto _ browser ()、 insert _ browser _ line ()、 delete _ browser _ line ()、 replace _ browser _ line ()、 get _ browser _ line ()、 load _ browser ()、 get _ browser _ maxline ()、 select _ browser _ line ()、 deselect _ browser _ line ()、 deselect _ browser ()、 isselected _ browser _ line ()、 get _ browser ()、 set _ browser _ fontsize ()、 set _ browser _ fontstyle ()、 set _ browser _ specialkey ()。 
フォーム に タイマー オブジェクト を 加え ます 。 
メソッド : set _ timer ()、 get _ timer ()。 
フォーム オブジェクト に は 以下 の データ 属性 が あり ます ; FORMS ドキュメント を 参照 し て ください : 
名称 
C の 型 
GL ウィンドウ の id 
フォーム の 幅 
フォーム の 高 さ 
フォーム 左肩 の x 座標 
フォーム 左肩 の y 座標 
フォーム が ディアクティベート さ れ て いる なら 非 ゼロ 
フォーム が 可視 なら 非 ゼロ 
フォーム が 固定 さ れ て いる なら 非 ゼロ 
ダブル バッファリング が オン なら 非 ゼロ 
この モジュール で は 、 formatter オブジェクト に関して 二つ の 実装 を 提供 し て い ます 。 ほとんど の アプリケーション で は これら の クラス を 変更 し たり サブ クラス 化 する こと なく 使う こと が でき ます 。 
クラス NullFormatter 
何 も 行わ ない formatter です 。 
writer を 省略 する と 、 NullWriter インスタンス が 生成 さ れ ます 。 
NullFormatter インスタンス は 、 writer の メソッド を 全く 呼び出し ませ ん 。 
writer へ の インタフェース を 実装 する 場合 に は この クラス の インタフェース を 継承 する 必要 が あり ます が 、 実装 を 継承 する 必要 は 全く あり ませ ん 。 
クラス AbstractFormatter 
標準 の formatter です 。 
この formatter 実装 は 広範 な writer で 適用 できる こと が 実証 さ れ て おり 、 ほとんど の 状況 で 直接 使う こと が でき ます 。 
高 機能 の WWW ブラウザ を 実装 する ため に 使わ れ た こと も あり ます 。 
formatter を 作成 する ため の インタフェース は 、 インスタンス 化 しよ う と する 個々 の formatter クラス に 依存 し ます 。 
以下 で 解説 する の は 、 インスタンス 化 さ れ た 全て の formatter が サポート し なけれ ば なら ない インタフェース です 。 モジュール レベル で は データ 要素 を 一つ 定義 し て い ます : 
後 に 述べる push _ font () メソッド で フォント 指定 を する 時 に 使える 値 です 。 また 、 その他 の push _ property () メソッド の 新しい 値 として 使う こと が でき ます 。 
AS _ IS の 値 を スタック に 置く と 、 どの プロパティ が 変更 さ れ た か の 追跡 を 行わ ず に 、 対応 する pop _ property () メソッド が 呼び出さ れる よう に なり ます 。 
formatter インスタンス オブジェクト に は 以下 の 属性 が 定義 さ れ て い ます : 
formatter と やり取り を 行う writer インスタンス です 。 
開か れ て いる 段落 が あれ ば 閉じ 、 次 の 段落 と の 間 に 少なくとも blanklines が 挿入 さ れる よう に し ます 。 
強制 改行 挿入 し ます 。 
既に 強制 改行 が ある 場合 は 挿入 し ませ ん 。 
論理 的 な 段落 は 中断 し ませ ん 。 
出力 に 水平 罫線 を 挿入 し ます 。 
現在 の 段落 に 何らかの データ が ある 場合 、 強制 改行 が 挿入 さ れ ます が 、 論理 的 な 段落 は 中断 し ませ ん 。 
引数 と キーワード は writer の send _ line _ break () メソッド に 渡さ れ ます 。 
空白 を 折りたたん で 書式 化 し なけれ ば なら ない データ を 提供 し ます 。 空白 の 折りたたみ で は 、 直前 や 直後 の add _ flowing _ data 呼び出し に 入っ て いる 空白 も 考慮 さ れ ます 。 
この メソッド に 渡さ れ た データ は 出力 デバイス で 行末 の 折り返し ( word - wrap ) さ れる もの と 想定 さ れ て い ます 。 
出力 デバイス で の 要求 や フォント 情報 に 応じ て 、 writer オブジェクト で も 何らかの 行末 折り返し が 行わ れ なけれ ば なら ない ので 注意 し て ください 。 
変更 を 加え ず に writer に 渡さ なけれ ば なら ない データ を 提供 し ます 。 改行 および タブ を 含む 空白 を data の 値 に し て も 問題 あり ませ ん 。 
現在 の 左 マージン 位置 の 左側 に 配置 さ れる ラベル を 挿入 し ます 。 
この ラベル は 箇条 書き 、 数字 つき 箇条 書き の 書式 を 構築 する 際 に 使わ れ ます 。 
書式 化 指定 は 文字 列 から なり 、 counter の 値 と 合わせ て ラベル の 値 を 算出 する ため に 使わ れ ます 。 
書式 文字 列 の 各 文字 は ラベル 値 に コピー さ れ ます 。 この とき いくつ か の 文字 は counter 値 を 変換 を 指す もの として 認識 さ れ ます 。 
特に 、 文字 " 1 " は アラビア 数字 の counter 値 を 表し 、 " A " と " a " は それぞれ 大文字 および 小文字 の アルファベット による counter 値 を 表し 、 " I " と " i " は それぞれ 大文字 および 小文字 の ローマ 数字 による counter 値 を 表し ます 。 
アルファベット および ローマ字 数字 へ の 変換 の 際 に は 、 counter の 値 は ゼロ 以上 で ある 必要 が ある ので 注意 し て ください 。 
以前 の add _ flowing _ data () 呼び出し で バッファ さ れ て いる 出力 待ち の 空白 を 、 関連付け られ て いる writer オブジェクト に 送信 し ます 。 
この メソッド は writer オブジェクト に対する あらゆる 直接 操作 の 前 に 呼び出さ なけれ ば なり ませ ん 。 
新た な 字 揃え ( alignment ) 設定 を 字 揃え スタック の 上 に プッシュ し ます 。 
変更 を 行い たく ない 場合 に は AS _ IS に する こと が でき ます 。 
字 揃え 設定 値 が 以前 の 設定 から 変更 さ れ た 場合 、 writer の new _ alignment () メソッド が align の 値 と共に 呼び出さ れ ます 。 
以前 の 字 揃え 設定 を 復元 し ます 。 
writer オブジェクト の フォントプロパティ の うち 、 一部 または 全て を 変更 し ます 。 
AS _ IS に 設定 さ れ て い ない プロパティ は 引数 で 渡さ れ た 値 に 設定 さ れ 、 その他 の 値 は 現在 の 設定 を 維持 し ます 。 
writer の new _ font () メソッド は 完全 に 設定 解決 さ れ た フォント 指定 で 呼び出さ れ ます 。 
以前 の フォント 設定 を 復元 し ます 。 
左 マージン の インデント 数 を 一つ 増やし 、 論理 タグ margin を 新た な インデント に 関連付け ます 。 
マージン レベル の 初期 値 は 0 です 。 
変更 さ れ た 論理 タグ の 値 は 真 値 と なら なけれ ば なり ませ ん ; AS _ IS 以外 の 偽 の 値 は マージン の 変更 として は 不適切 です 。 
以前 の マージン 設定 を 復元 し ます 。 
任意 の スタイル 指定 を スタック に プッシュ し ます 。 
全て の スタイル は スタイル スタック に 順番 に プッシュ さ れ ます 。 
AS _ IS 値 を 含み 、 スタック 全体 を 表す タプル は writer の new _ styles () メソッド に 渡さ れ ます 。 
push _ style () に 渡さ れ た 最新 n 個 の スタイル 指定 を ポップ し ます 。 
AS _ IS 値 を 含み 、 変更 さ れ た スタック を 表す タプル は writer の new _ styles () メソッド に 渡さ れ ます 。 
writer の 割り付け スタイル ( spacing style ) を 設定 し ます 。 
現在 の 段落 に データ が 予期 せ ず 追加 さ れ た こと を formatter に 知らせ ます 。 
この メソッド は writer を 直接 操作 し た 際 に 使わ なけれ ば なり ませ ん 。 
writer 操作 の 結果 、 出力 の 末尾 が 強制 改行 と なっ た 場合 、 オプション の flag 引数 を 偽 に 設定 する こと が でき ます 。 
FORMS オブジェクト の 種類 ごと に 特有 の メソッド の 他 に 、 全て の FORMS オブジェクト は 以下 の メソッド も 持っ て い ます : 
オブジェクト の コール バック 関数 と 引数 を 設定 し ます 。 
オブジェクト が ユーザ から の 応答 を 必要 と する とき に は 、 コール バック 関数 は 2 つ の 引数 、 オブジェクト と コール バック の 引数 とともに 呼び出さ れ ます 。 
( コール バック 関数 の ない FORMS オブジェクト は 、 ユーザ から の 応答 を 必要 と する とき に は fl . do _ forms () あるいは fl . check _ forms () によって 返さ れ ます 。 
) 引数 なし に この メソッド を 呼び出す と 、 コール バック 関数 を 削除 し ます 。 
オブジェクト を 削除 し ます 。 
オブジェクト を 表示 し ます 。 
オブジェクト を 隠し ます 。 
オブジェクト を 再 描画 し ます 。 
固定 し た オブジェクト の 固定 を 解除 し ます 。 
FORMS オブジェクト に は 以下 の データ 属性 が あり ます ; FORMS ドキュメント を 参照 し て ください 。 
オブジェクト クラス 
オブジェクト タイプ 
ボックス タイプ 
左肩 の x 座標 
左肩 の y 座標 
幅 
高 さ 
第 1 の 色 
第 2 の 色 
配置 
ラベル の 色 
ラベル の フォント サイズ 
ラベル の 文字 列 
ラベル の スタイル 
( FORMS ドキュメント 参照 ) 
3 . 4 . 2 制限 と 他 に 考慮 す べき こと 
以下 の 例 は fpectl モジュール の 使用 を 開始 する 方法 と モジュール の テスト 演算 について 示し て い ます 。 
この マニュアル で は 、 拡張 モジュール を 書い たり Python インタプリタ を アプリケーション に 埋め込ん だり し たい C および C ++ プログラマ が 利用 できる API について 述べ て い ます 。 
は 拡張 モジュール を 書く 際 の 一般 的 な 決まり ごと について 記述 し て い ます が 、 API の 詳細 まで は 記述 し て い ない ので 、 この ドキュメント が 手引き に なり ます 。 
警告 : この ドキュメント の 現在 の バージョン は まだ 不完全 です 。 
と は いえ 、 役に立つ だろ う と 思い ます 。 
引き続き ドキュメント の 整備 を 継続 し て 、 Python ソース コード の リリース と は 別に 、 その 時々 で 新た な バージョン を リリース する つもり です 。 
FSSpec オブジェクト の 生 データ です 。 他 の アプリケーション に 渡す といった 場合 に 適し た 形式 です 。 
FSSpec オブジェクト の 表す ファイル の フル パス 名 を 返し ます 。 
FSSpec オブジェクト で 記述 さ れ た ファイル の 情報 を 、 ( wdRefNum , parID , name ) の タプル で 返し ます 。 
この FSSpec で 記述 さ れ た ファイル の エイリアスオブジェクト を 作成 し ます 。 
省略 可能 な file パラメータ を 渡す と 、 エイリアス は その ファイル に対する 相対 指定 で 作成 さ れ 、 その他 の 場合 は 絶対 指定 と なり ます 。 
この ファイル を 指す 最小限 の エイリアス 情報 を 作成 し ます 。 
この ファイル の 4 文字 の クリエータ と タイプ を 返し ます 。 
この ファイル に 4 文字 の クリエータ と タイプ を 設定 し ます 。 
ファイル の ファインダ 情報 を 示す FInfo オブジェクト を 返し ます 。 
ファイル の ファインダ 情報 を finfo ( FInfo オブジェクト ) で 与え た 値 に 設定 し ます 。 
作成 日 、 修正 日 、 バックアップ 日 を 意味 する 3 つ の 浮動 小数点 数 から なる タプル を 返し ます 。 
ファイル の 作成 日 、 修正 日 、 バックアップ 日 を 設定 し ます 。 
各々 の 値 は Python が 時刻 の 表現 に 使っ て いる 標準 の 浮動 小数点 型 です 。 
req で 表さ れる ファイル を FTP 越し に オープン し ます 。 ログイン は 常に 空 の ユーザ ネーム および パスワード で 行わ れ ます 。 
いくつ か の コマンド は 2 つ の タイプ について 実行 し ます : 1 つ は テキストファイル で 、 もう 1 つ は バイナリ ファイル を 扱い ます 。 
これら の メソッド の テキスト バージョン で は " lines "、 バイナリ バージョン で は " binary " の 語 が メソッド 名 の 終わり に つい て い ます 。 
FTP インスタンス に は 以下 の メソッド が あり ます : 
インスタンス の デバッグ レベル を 設定 し ます 。 
この 設定 によって デバッグ 時 に 出力 さ れる 量 を 調節 し ます 。 
デフォルト は 0 で 、 何 も 出力 さ れ ませ ん 。 
1 なら 、 一般 的 に 1 つ の コマンド あたり 1 行 の 適当 な 量 の デバッグ 出力 を 行い ます 。 
2 以上 なら 、 コントロール 接続 で 受信 し た 各行 を 出力 し て 、 最大 の デバッグ 出力 を し ます 。 
指定 さ れ た ホスト と ポート に 接続 し ます 。 
ポート 番号 の デフォルト 値 は FTP プロトコル の 仕様 で 定め られ た 21 です 。 
他 の ポート 番号 を 指定 する 必要 は めったに あり ませ ん 。 
この 関数 は ひとつ の インスタンス に対して 一 度 だけ 実行 す べき です ; インスタンス が 作ら れ た 時 に ホスト 名 が 与え られ て い たら 、 呼び出す べき で は あり ませ ん 。 
これ 以外 の 他 の 全て の メソッド は 接続 さ れ た 後 で 実行 可能 と なり ます 。 
接続 し て 最初 に サーバ から 送ら れ て くる ウェルカムメッセージ を 返し ます 。 
( この メッセージ に は 、 ユーザ にとって 適切 な 注意 書き や ヘルプ 情報 が 含ま れる こと が あり ます 。 ) 
与え られ た user で ログイン し ます 。 
passwd と acct の パラメータ は 省略 可能 で 、 デフォルト で は 空文字 列 です 。 
もし user が 指定 さ れ ない なら 、 デフォルト で ' anonymous ' に なり ます 。 
もし user が ' anonymous ' なら 、 デフォルト の passwd は ' anonymous @' に なり ます 。 
この function は 各 インスタンス について 一 度 だけ 、 接続 が 確立 し た 後 に 呼び出さ なけれ ば なり ませ ん ; インスタンス が 作ら れ た 時 に ホスト 名 と ユーザ 名 が 与え られ て い たら 、 この メソッド を 実行 す べき で は あり ませ ん 。 
ほとんど の FTP コマンド は クライアント が ログイン し た 後 に 実行 可能 に なり ます 。 
実行 中 の ファイル 転送 を 中止 し ます 。 
これ は いつも 機能 する わけ で は あり ませ ん が 、 やっ て みる 価値 は あり ます 。 
シンプル な コマンド 文字 列 を サーバ に 送信 し て 、 受信 し た 文字 列 を 返し ます 。 
バイナリ 転送 モード で ファイル を 受信 し ます 。 
command は 適切 な " RETR " コマンド :' RETR filename ' で なけれ ば なり ませ ん 。 
関数 callback は 、 受信 し た データブロック の それぞれ に対して 、 データブロック を 1 つ の 文字 列 の 引数 として 呼び出さ れ ます 。 省略 可能 な 引数 maxblocksize は 、 実際 の 転送 を 行う の に 作ら れ た 低 レベル の ソケット オブジェクト から 読み込む 最大 の チャンクサイズ を 指定 し ます ( これ は callback に 与え られる データブロック の 最大 サイズ に も なり ます )。 
妥当 な デフォルト 値 が 設定 さ れ ます 。 rest は 、 transfercmd () メソッド と 同じ もの です 。 
ASCII 転送 モード で ファイル と ディレクトリ の リスト を 受信 し ます 。 command は 、 適切 な " RETR " コマンド ( retrbinary () を 参照 ) あるいは " LIST " コマンド ( 通常 は 文字 列 ' LIST ') で なけれ ば なり ませ ん 。 
関数 callback は 末尾 の CRLF を 取り除い た 各行 に対して 実行 さ れ ます 。 
デフォルト で は callback は sys . stdout に 各行 を 印字 し ます 。 
boolean が true なら `` パッシブモード '' を オン に し 、 そう で ない なら パッシブモード を オフ に し ます 。 
( Python 2 . 0 以前 で は デフォルト で パッシブモード は オフ に さ れ て い まし た が 、 Python 2 . 1 以後 で は デフォルト で オン に なっ て い ます 。 ) 
バイナリ 転送 モード で ファイル を 転送 し ます 。 
command は 適切 な " STOR " コマンド :" STOR filename " で なけれ ば なり ませ ん 。 file は 開か れ た ファイル オブジェクト で 、 read () メソッド で EOF まで 読み込ま れ 、 ブロック サイズ blocksize で データ が 転送 さ れ ます 。 
引数 blocksize の デフォルト 値 は 8192 です 。 バージョン 2 . 1 で 変更 さ れ た 仕様 : blocksize の デフォルト 値 が 追加 さ れ まし た 
ASCII 転送 モード で ファイル を 転送 し ます 。 command は 適切 な " STOR " コマンド で なけれ ば なり ませ ん ( storbinary () を 参照 )。 
file は 開か れ た ファイル オブジェクト で 、 readline () メソッド で EOF まで 読み込ま れ 、 各行 が データ が 転送 さ れ ます 。 
データ 接続 中 に 転送 を 初期 化 し ます 。 
もし 転送 中 なら 、 " EPRT " あるいは " PORT " コマンド と 、 cmd で 指定 し た コマンド を 送信 し 、 接続 を 続け ます 。 
サーバ が パッシブ なら 、 " EPSV " あるいは " PASV " コマンド を 送信 し て 接続 し 、 転送 コマンド を 開始 し ます 。 
しかし 、 RFC 959 で は rest が 印字 可能 な ASCII コード 33 から 126 の 範囲 の 文字 列 から なる こと を 要求 し て いる こと に 注意 し て 下さい 。 
したがって 、 transfercmd () メソッド は rest を 文字 列 に 変換 し ます が 、 文字 列 の 内容 について チェック し ませ ん 。 
もし " REST " コマンド を サーバ が 認識 し ない なら 、 例外 error _ reply が 発生 し ます 。 
この 例外 が 発生 し たら 、 引数 rest なし に transfercmd () を 実行 し ます 。 
transfercmd () と 同様 です が 、 データ と 予想 さ れる サイズ と の タプル を 返し ます 。 
もし サイズ が 計算 でき ない なら 、 サイズ の 代わり に None が 返さ れ ます 。 cmd と rest は transfercmd () の もの と 同じ です 。 
" NLST " コマンド で 返さ れる ファイル の リスト を 返し ます 。 
省略 可能 な argument は 、 リストアップ する ディレクトリ です ( デフォルト で は サーバ の カレント ディレクトリ です )。 
" NLST " コマンド に 非 標準 で ある 複数 の 引数 を 渡す こと が でき ます 。 
" LIST " コマンド で 返さ れる ディレクトリ 内 の リスト を 作り 、 標準 出力 へ 出力 し ます 。 
省略 可能 な argument は 、 リストアップ する ディレクトリ です ( デフォルト で は サーバ の カレント ディレクトリ です )。 
" LIST " コマンド に 非 標準 で ある 複数 の 引数 を 渡す こと が でき ます 。 
もし 最後 の 引数 が 関数 なら 、 retrlines () の よう に callback として 使わ れ ます ; デフォルト で は sys . stdout に 印字 し ます 。 
この メソッド は None を 返し ます 。 
サーバ 上 の ファイル の ファイル 名 fromname を toname へ 変更 し ます 。 
サーバ から ファイル filename を 削除 し ます 。 
成功 し たら 応答 の テキスト を 返し 、 そう で ない なら パーミッションエラー で は error _ perm を 、 他 の エラー で は error _ reply を 返し ます 。 
サーバ の カレント ディレクトリ を 設定 し ます 。 
サーバ 上 に 新た に ディレクトリ を 作り ます 。 
サーバ 上 の カレント ディレクトリ の パス を 返し ます 。 
サーバ 上 の ディレクトリ dirname を 削除 し ます 。 
サーバ 上 の ファイル filename の サイズ を 尋ね ます 。 
成功 し たら ファイルサイズ が 整数 で 返さ れ 、 そう で ない なら None が 返さ れ ます 。 
" SIZE " コマンド は 標準 化 さ れ て い ませ ん が 、 多く の 普通 の サーバ で 実装 さ れ て いる こと に 注意 し て 下さい 。 
サーバ に " QUIT " コマンド を 送信 し 、 接続 を 閉じ ます 。 
これ は 接続 を 閉じる の に `` 礼儀 正しい '' 方法 です が 、 " QUIT " コマンド に 反応 し て サーバ の 例外 が 発生 する か も しれ ませ ん 。 
この 例外 は 、 close () メソッド によって FTP インスタンス に対する その後 の コマンド 使用 が 不可 に なっ て いる こと を 示し て い ます ( 下記 参照 )。 
接続 を 一方 的 に 閉じ ます 。 
既に 閉じ た 接続 に対して 実行 す べき で は あり ませ ん ( 例えば quit () を 呼び出し て 成功 し た 後 など )。 
この 実行 の 後 、 FTP インスタンス は もう 使用 す べき で は あり ませ ん ( close () あるいは quit () を 呼び出し た 後 で 、 login () メソッド を もう一度 実行 し て 再び 接続 を 開く こと は でき ませ ん )。 
関数 定義 は 、 ユーザ 定義 関数 オブジェクト を 定義 し ます ( 3 . 2 節 参照 ): 
関数 定義 は 実行 可能 な 文 です 。 
関数 定義 を 実行 する と 、 現在 の ローカル な 名前 空間 内 で 関数 名 を 関数 オブジェクト ( 関数 の 実行 可能 コード を くるむ ラッパ ) に 束縛 し ます 。 
この 関数 オブジェクト に は 、 関数 が 呼び出さ れ た 際 に 使わ れる グローバル な 名前 空間 として 、 現在 の グローバル な 名前 空間 へ の 参照 が 入っ て い ます 。 
デコレータ の 返す 値 は 関数 オブジェクト で は なく 、 関数 名 に バインド さ れ ます 。 
複数 の デコレータ を 入れ子 に し て 適用 し て も かまい ませ ん 。 例えば 、 以下 の よう な コード : 
と 同じ です 。 
デフォルト 値 を 伴う パラメタ に対して は 、 関数 呼び出し の 際 に 対応 する パラメタ が 省略 さ れる と 、 パラメタ の 値 は デフォルト 値 で 置き換え られ ます 。 
ある パラメタ が デフォルト 値 を 持つ 場合 、 それ 以後 の パラメタ は 全て デフォルト 値 を 持た なけれ ば なり ませ ん -- これ は 文法 的 に は 表現 さ れ て い ない 構文 上 の 制限 です 。 
デフォルト パラメタ 値 は 関数 定義 を 実行 する 際 に 値 評価 さ れ ます 。 
これ は 、 デフォルト パラメタ の 式 は 関数 を 定義 する とき に ただ 一 度 だけ 評価 さ れ 、 同じ `` 計算 済み の '' 値 が 全て の 呼び出し で 使わ れる こと を 意味 し ます 。 
デフォルト パラメタ 値 が リスト や 辞書 の よう な 変更 可能 な オブジェクト で ある 場合 、 この 使用 を 理解 し て おく こと は 特に 重要 です : 関数 で この オブジェクト を ( 例えば リスト に 要素 を 追加 し て ) 変更 する と 、 実際 の デフォルト 値 が 変更 さ れ て しまい ます 。 
一般 に は 、 これ は 意図 し ない 動作 です 。 
この よう な 動作 を 避ける に は 、 デフォルト 値 に None を 使い 、 この 値 を 関数 本体 の 中 で 明示 的 に テスト し ます 。 例えば 以下 の よう に し ます : 
この 変数 の デフォルト 値 は 空 の タプル です 。 
無名 関数 の 作成 に は 、 5 . 11 節 で 記述 さ れ て いる ラムダ 形式 ( lambda form ) を 使い ます 。 
ラムダ 形式 は 、 単純 化 さ れ た 関数 定義 を 行う ため の 略記 法 に すぎ ませ ん ; `` def '' 文 で 定義 さ れ た 関数 は 、 ラムダ 形式 で 定義 さ れ た 関数 と 全く 同様 に 引渡し たり 、 他 の 名前 に 代入 し たり でき ます 。 
実際 に は 、 `` def '' 形式 は 複数 の 式 を 実行 できる という 点 で より 強力 です 。 
プログラマ の ため の 注釈 : 関数 は 一 級 の ( first - class ) オブジェクト です 。 
関数 定義 内 で `` def '' 形式 を 実行 する と 、 戻り 値 として 返し たり 引き渡し たり できる ローカル な 関数 を 定義 し ます 。 
ネスト さ れ た 関数 内 で 自由 変数 を 使う と 、 def 文 の 入っ て いる 関数 の ローカル 変数 に アクセス する こと が でき ます 。 
詳細 は 4 . 1 節 を 参照 し て ください 。 
この 節 で は 、 Python の 型 オブジェクト と 単 量子 ( singleton ) オブジェクト None について 述べ ます 。 
7 . 1 . 1 型 オブジェクト ( type object ) 
future 文 
は 、 将来 の 特定 の Python の リリース で 利用 可能 に なる よう な 構文 や 意味 付け を 使っ て 、 特定 の モジュール を コンパイル さ せる ため の 、 コンパイラ に対する 指示 句 ( directive ) です 。 
future 文 は 、 言語 仕様 に 非 互換 性 が もたらさ れる よう な 、 将来 の Python の バージョン に 容易 に 移行 できる よう 意図 さ れ て い ます 。 
future 文 によって 、 新た な 機能 が 標準 化 さ れ た リリース が 出さ れる 前 に 、 その 機能 を モジュール 単位 で 使える よう に し ます 。 
future 文 は 、 モジュール の 先頭 周辺 に 書か なけれ ば なり ませ ん 。 
future 文 の 前 に 書い て よい 内容 は : 
です 。 Python 2 . 3 が feature 文 で 新た に 認識 する よう に なっ た 機能 は 、 " generators "、" division "、 および " nested _ scopes " です 。 
" generators " および " nested _ scopes " は Python 2 . 3 で は 常に 有効 に なっ て いる ので 、 冗長 な 機能 名 と いえ ます 。 
future 文 は 、 コンパイル 時 に 特別 な やり方 で 認識 さ れ 、 扱わ れ ます : 言語 の 中核 を なす 構文 構成 ( construct ) に対する 意味 付け が 変更 さ れ て いる 場合 、 変更 部分 は しばしば 異なる コード を 生成 する こと で 実現 さ れ て い ます 。 
以下 の 文 : import __ future __ [ as name ] 
Python 2 . 2 から は 、 この 仕様 を compile () の オプション 引数 で 制御 できる よう に なり まし た -- 詳細 は ライブラリ リファレンス の compile () に関する ドキュメント を 参照 し て ください 。 
対話 的 インタプリタ の プロンプト で タイプ 入力 し た future 文 は 、 その後 の インタプリタ セッション 中 で 有効 に なり ます 。 
インタプリタ を - i オプション で 起動 し て 実行 す べき スクリプト 名 を 渡し 、 スクリプト 中 に future 文 を 入れ て おく と 、 新た な 機能 は スクリプト が 実行 さ れ た 後 に 開始 する 対話 セッション で 有効 に なり ます 。 
9 将来 の 方向 性 Python ドキュメント は 変更 に 次ぐ 変更 の 歴史 を 重ね て き て おり 、 その ほとんど は やや 小規模 の 漸進 的 な もの でし た 。 
マーク アップ 言語 や ドキュメント の 処理 に 使わ れる ツール に関して 非常 に 多く の 話し合い が 行わ れ て き まし た 。 
この 節 で は 、 変更 の さま と 、 将来 の 開発 において 最も ありえ そう な 道筋 について 議論 し ます 。 
7 . 5 . 11 ジェネレータオブジェクト ジェネレータ ( generator ) オブジェクト は 、 Python が ジェネレータ 型 イテレータ を 実装 する ため に 使っ て いる オブジェクト です 。 
ジェネレータオブジェクト は 、 通常 、 PyGen _ New で 明示 的 に 生成 さ れる こと は なく 、 値 を 逐次 生成 する よう な 関数 に対して イテレーション を 行う とき に 生成 さ れ ます 。 
ジェネレータオブジェクト に 使わ れ て いる C 構造 体 です 。 
ジェネレータオブジェクト に 対応 する 型 オブジェクト です 。 
ob が ジェネレータオブジェクト の 場合 に 真 を 返し ます 。 ob が NULL で あっ て は なり ませ ん 。 
ob の 型 が PyGen _ Type の 場合 に 真 を 返し ます 。 
ob が NULL で あっ て は なり ませ ん 。 PyObject * 
frame オブジェクト に 基づい て 新た な ジェネレータオブジェクト を 生成 し て 返し ます 。 パラメタ が NULL で あっ て は なり ませ ん 。 
ジェネレータ 式 ( generator expression ) と は 、 丸 括弧 を 使っ た コンパクト な ジェネレータ 表記 法 です : 
ジェネレータ 式 は 新た な ジェネレータオブジェクト を 生み出し ます 。 
ジェネレータ 式 は 単一 の 式 の 後ろ に 少なくとも 一つ の for 節 と 、 場合 により さらに 複数 の for または if 節 を 続け た もの です 。 
新た な ジェネレータ が 繰り返す 値 は 、 各 for および if 節 を ブロック として 、 左 から 右 へ と ネスト し 、 その 最 内 ブロック の 中 で 式 を 評価 し た 結果 を 出力 し て いる もの と みなせ ます 。 ジェネレータ 式 の 使う 変数 の 評価 は 、 ジェネレータオブジェクト に対して next () メソッド を 呼び出す まで 遅延 さ れ ます 。 
C . 2 翻訳 者 一覧 ( 敬称 略 ) 
エ 
__ builtin __ ( チネ 、 ゜ ケ モジュール ),[ Link ],[ Link ] 
_ ob _ next ( PyObject の メンバ ) 
_ ob _ prev ( PyObject の メンバ ) 
apply () ( 組み込み 関数 ),[ Link ],[ Link ] 
classmethod () ( 組み込み 関数 ) 
cmp () ( 組み込み 関数 ),[ Link ],[ Link ] 
coerce () ( 組み込み 関数 ) 
exceptions ( 組み込み モジュール ) 
exec _ prefix ( 環境 変数 ),[ Link ],[ Link ] 
hash () ( 組み込み 関数 ),[ Link ] 
ihooks ( 標準 モジュール ) 
len () ( 組み込み 関数 ),[ Link ],[ Link ],[ Link ],[ Link ] 
ob _ refcnt ( PyObject の メンバ ) 
ob _ size ( PyVarObject の メンバ ) 
ob _ type ( PyObject の メンバ ) 
PATH ( 環境 変数 ),[ Link ] 
pow () ( 組み込み 関数 ),[ Link ] 
prefix ( 環境 変数 ),[ Link ],[ Link ],[ Link ],[ Link ] 
PYTHONDUMPREFS ( 環境 変数 ) 
PYTHONHOME ( 環境 変数 ),[ Link ] 
PYTHONPATH ( 環境 変数 ),[ Link ] 
reload () ( 組み込み 関数 ) 
repr () ( 組み込み 関数 ),[ Link ] 
rexec ( 標準 モジュール ) 
signal ( 組み込み モジュール ) 
staticmethod () ( 組み込み 関数 ) 
str () ( 組み込み 関数 ) 
sys ( 組み込み モジュール ),[ Link ],[ Link ] 
thread ( 組み込み モジュール ) 
tp _ alloc ( PyTypeObject の メンバ ) 
tp _ allocs ( PyTypeObject の メンバ ) 
tp _ as _ buffer ( PyTypeObject の メンバ ) 
tp _ base ( PyTypeObject の メンバ ) 
tp _ bases ( PyTypeObject の メンバ ) 
tp _ basicsize ( PyTypeObject の メンバ ) 
tp _ cache ( PyTypeObject の メンバ ) 
tp _ call ( PyTypeObject の メンバ ) 
tp _ clear ( PyTypeObject の メンバ ) 
tp _ compare ( PyTypeObject の メンバ ) 
tp _ dealloc ( PyTypeObject の メンバ ) 
tp _ descr _ get ( PyTypeObject の メンバ ) 
tp _ descr _ set ( PyTypeObject の メンバ ) 
tp _ dict ( PyTypeObject の メンバ ) 
tp _ dictoffset ( PyTypeObject の メンバ ) 
tp _ doc ( PyTypeObject の メンバ ) 
tp _ flags ( PyTypeObject の メンバ ) 
tp _ free ( PyTypeObject の メンバ ) 
tp _ frees ( PyTypeObject の メンバ ) 
tp _ getattr ( PyTypeObject の メンバ ) 
tp _ getattro ( PyTypeObject の メンバ ) 
tp _ getset ( PyTypeObject の メンバ ) 
tp _ hash ( PyTypeObject の メンバ ) 
tp _ init ( PyTypeObject の メンバ ) 
tp _ is _ gc ( PyTypeObject の メンバ ) 
tp _ itemsize ( PyTypeObject の メンバ ) 
tp _ iter ( PyTypeObject の メンバ ) 
tp _ iternext ( PyTypeObject の メンバ ) 
tp _ maxalloc ( PyTypeObject の メンバ ) 
tp _ members ( PyTypeObject の メンバ ) 
tp _ methods ( PyTypeObject の メンバ ) 
tp _ mro ( PyTypeObject の メンバ ) 
tp _ name ( PyTypeObject の メンバ ) 
tp _ new ( PyTypeObject の メンバ ) 
tp _ next ( PyTypeObject の メンバ ) 
tp _ print ( PyTypeObject の メンバ ) 
tp _ repr ( PyTypeObject の メンバ ) 
tp _ richcompare ( PyTypeObject の メンバ ) 
tp _ setattr ( PyTypeObject の メンバ ) 
tp _ setattro ( PyTypeObject の メンバ ) 
tp _ str ( PyTypeObject の メンバ ) 
tp _ subclasses ( PyTypeObject の メンバ ) 
tp _ traverse ( PyTypeObject の メンバ ) 
tp _ weaklist ( PyTypeObject の メンバ ) 
tp _ weaklistoffset ( PyTypeObject の メンバ ) 
tuple () ( 組み込み 関数 ),[ Link ] 
unicode () ( 組み込み 関数 ) V 
1 . 1 . 1 Python スクリプト の 実行 方法 
Python 2 . 3 a 2 の 時点 で は 、 自分 の マシン に MacPython - OSX を インストール する に は ソース 配布 物 を 取得 し 、 いわゆる " framework Python " を ビルド する の が 唯一 の 正しい 方法 です 。 ビルド 方法 の 詳細 は Mac / OSX / README に あり ます 。 
この フォルダ の 中 に は 、 PythonIDE 統合 開発 環境 、 ファインダ から ダブル クリック し て Python スクリプト を 起動 する ため の PythonLauncher 、 Package Manager が 入っ て い ます 。 
フレーム ワーク / Library / Frameworks / Python . framework 。 実際 の 処理 に かかわる 部分 です が 、 たいてい の 場合 それ を 気 に する 必要 は あり ませ ん 。 
1 . 2 . 1 対話 型 インタプリタ を 使う 
1 . 2 MacPython - OS 9 の 取得 と インストール 最新 の リリース バージョン や 実験 的 な 最新 版 は 、 Jack Jansen が 運営 し て いる MacPython の ページ : http :// homepages . cwi . nl /~ jack / macpython . html で 探す と よい でしょ う 。 
最新 版 の 説明 は 配布 物 中 の README を 参照 し て ください 。 MacPython - OS 9 は Mac OS X 上 で 正常 に 動作 し 、 クラシック 環境 で は なく ネイティブモード で 動き ます 。 
と は いえ 、 CFM ベース の Python を 使い たい という 特別 な 理由 が ない 限り 、 Mac OS X 上 で は MacPython - OSX を 使い ましょ う 。 
1 . 2 . 4 . 1 エディタ で 作成 する 
1 . 2 . 4 . 2 Python モード 付き の エディタ 
6 . 12 . 1 future 文 ( future 
global 文 は 、 現在 の コード ブロック 全体 で 維持 さ れる 宣言 文 です 。 
global 文 は 、 列挙 し た 識別子 を グローバル 変数 として 解釈 する よう 指定 する こと を 意味 し ます 。 
global を 使わ ず に グローバル 変数 に 代入 を 行う こと は 不可能 です が 、 自由 変数 を 使え ば その 変数 を グローバル で ある と 宣言 せ ず に グローバル 変数 を 参照 する こと が でき ます 。 
プログラマ の ため の 注意 点 : global は パーザ に対する 指示 句 ( directive ) です 。 
この 指示 句 は 、 global 文 と 同時に 読み込ま れ た コード に対して のみ 適用 さ れ ます 。 
特に 、 exec 文 内 に 入っ て いる global 文 は 、 exec 文 を 含ん で いる コード ブロック 内 に 効果 を 及ぼす こと は なく 、 exec 文 内 に 含ま れ て いる コード は 、 exec 文 を 含む コード 内 で の global 文 に 影響 を 受け ませ ん 。 
同様 の こと が 、 関数 eval ()、 execfile () 、 および compile () に も 当てはまり ます 。 
req で 表さ れる gopher 上 の リソース を オープン し ます 。 
6 . 12 文法 における 導出 の 表示 形式 文法 における 導出 ( producution ) を 表示 する ため に 、 特殊 な マーク アップ を 使え ます 。 
マーク アップ は 単純 な もの で 、 BNF ( や その 派生 形 ) の 全て の 側面 を モデル 化 しよ う と は し て い ませ ん が 、 シンボル を 記述 する と その シンボル の 定義 へ の ハイパーリンク に なる よう な 表示 を 文脈 自由 文法 に対して 実現 し て い ます 。 
環境 が 一つ と 、 二つ の マクロ が あり ます : 
この 環境 は 、 ひと まとまり の 導出 規則 を 囲む ため に 使い ます 。 
この 環境 で は マクロ を 二つ だけ 定義 し て い ます 。 
ドキュメント で 二つ 以上 の 言語 について 説明 する 場合 、 オプション の パラメタ language を 使っ て 、 言語 間 で 導出 規則 を 区別 せ ね ば なり ませ ん 。 
パラメタ の 値 は ファイル 名 の 一部 に 使える よう な 短い 名前 に せ ね ば なり ませ ん ; コロン や 、 複数 の プラットフォーム 間 で 同時に ファイル 名 に 使え ない よう な 文字 は 含め て は なり ませ ん 。 
文法 における 導出 規則 です 。 
導出 規則 は 、 name を definition で ある と 定義 し ます 。 name に は マーク アップ を 入れ て は なら ず 、 ハイフン を 使っ た 一つ 以上 の 文法 の サポート は 定義 さ れ て い ませ ん 。 
一つ の production に は 単一 の シンボル だけ を 定義 でき ます -- 複数 シンボル の 定義 を 行っ て は なり ませ ん 。 
production マクロ が 定義 し て いる シンボル の 名前 で 、 シンボル の definition の 中 で 使い ます 。 
シンボル name は 可能 な 場合 に は シンボル 定義 へ の ハイパーリンク に なり ます 。 
必ずしも 文法 全体 を 単一 の productionlist 環境 に 定義 する 必要 は ない ので 注意 し て ください ; 任意 の 数 の グループ を 作っ て 文法 を 記述 し て かまい ませ ん 。 
token を 使う 場合 に は 常に production と 対応付け せ ね ば なり ませ ん 。 以下 は 
から とっ た 例 です : 
Python の 標準 ドキュメント は 、 図 や 画像 を 全く 使っ て い ませ ん ; これ は 意図 的 に そう し て いる の です 。 
ドキュメント の フォーマット を 行う 際 に 利用 する 外部 ツール が 、 まだ 画像 を うまく 扱える ほど で は なかっ た から です 。 
ツール の 進歩 や メンテナ による 改善 に ともなっ て 、 画像 に対する サポート も 改善 さ れ て き まし た 。 mkhowto スクリプト から 起動 さ れる 内部 ツール は 、 画像 を 直接 サポート し て いる わけ で は あり ませ ん が 、 mkhowto が 外部 ツール による グラフィクス の サポート を 妨げる こと は あり ませ ん 。 
こうした ツール と howto や manual ドキュメント クラス を 使っ た グラフィクス の 利用 は まだ 広く 行わ れ て は い ませ ん が 、 うまく 動作 する こと は 知ら れ て い ます 。 
基本 的 に は 、 以下 の よう に アプローチ し ます : 
好き な アプリケーション で 、 画像 や 図版 を 作成 し ます 。 
出力 し たい 形式 に 合わせ て 、 画像 の 形式 を 変換 し ます 。 
HTML または PostScript を 生成 し たけれ ば 、 画像 や 図版 は encapsulated PostScript ( EPS , . eps ファイル ) 形式 に 変換 し ます ; LaTeX 2 HTML は EPS ファイル を . gif ファイル に 変換 でき ます ;. gif ファイル を 直接 指定 し て も かまい ませ ん 。 
PDF を ( pdflatex で ) 生成 し たい なら 、 `` カプセル 化 ( encapsulated )'' PDF ファイル が 必要 です 。 
Linux や Unix 向け に 配布 さ れ て いる teTeX に つい て くる epstopdf を 使え ば 、 EPS ファイル から 変換 でき ます 。 
ドキュメント 内 で 、 グラフィクス を サポート する ため の パッケージ graphicx を `` import '' する ため の 行 を 以下 の よう に し て 追加 し ます : 
図版 や 画像 を 取り込み たい 場所 で 、 以下 の よう な マーク アップ を 行い ます : 
\ begin { figure }\ centering \ includegraphics [ width = 5 in ]{ myimage }\ caption { myimage の 説明 }\ end { figure } 
includegraphics マクロ に は ファイル の 拡張 子 を 指定 し ない ので 注意 し て ください 。 
もし 特定 の 形式 の ドキュメント しか 生成 し たく ない の なら 、 拡張 子 を つけ て も かまい ませ ん が 、 複数 の 形式 を サポート し たけれ ば 拡張 子 を 省略 し て おい た ほう が 楽 です 。 
mkhowto を 通常 通り に 走ら せ ます 。 
make の 機能 を サポート する よう な システム で 作業 を 行っ て いる なら 、 画像 の 変換 の 際 に 生じる 中間 ファイル を 最新 に 保つ よう に でき ます 。 
下 の 例 で は 、 dia で 作成 し た 図 を 取り込ん で いる よう な ドキュメント を フォーマット する ため の Makefile を 示し て い ます : 
6 . 13 グラフィカルインタフェース の 構成 要素 グラフィカルインタフェース の 構成 要素 について マーク アップ を 割り当てる こと に なっ て い ます が 、 その 詳細 は まだ ほとんど 決まっ て い ませ ん 。 
対話 型 ユーザ インタフェース 上 の ラベル は guilabel で マーク し なけれ ば なり ませ ん 。 
curses など の テキスト ベース の ライブラリ を 使っ て 作成 し た テキストベースインタフェース 上 の ラベル も 含み ます 。 
ボタン 、 ラベル 、 ウィンドウ の タイトル 、 フィールド の 名前 、 メニュー や メニュー の 選択肢 、 選択肢 リスト 中 の 値 に 至る まで 、 インタフェース 上 の ラベル を 参照 する 時 に は 、 常に この マクロ を 使い ます 。 
メニュー の 選択肢 は menuselection と sub を 組み合わせ て マーク し ます 。 
この マクロ は 、 サブ メニュー を 選択 し て 特定 の 操作 を 選択 する といった 完全 な 形 の メニュー 選択 手順 や 、 任意 の 部分 的 な 手順 を マーク する ため に 使い ます 。 
個々 の 選択肢 の 名前 は sub を 入れ て 分割 せ ね ば なり ませ ん 。 例えば 、 `` スタート プログラム '' を マーク する に は 、 以下 の コード を 使い ます : 
\ menuselection { スタート \ sub プログラム } 
選択肢 が ダイアログ を 開く よう な コマンド で ある こと を 示す ため に オペレーティングシステム が 使う 省略 記号 の よう に 、 選択肢 の 末尾 に 末尾 に 識別 記号 が 入っ て いる 場合 、 選択肢 名 から は 識別 記号 を 省い て ください 。 menuselection 中 の 個々 の 選択肢 名 は 適切 に マーク アップ さ れる ので 、 guilabel で マーク する 必要 は あり ませ ん 。 
複数 の 階層 から なる メニュー 選択肢 を 分割 する ため の 記号 です 。 
この マクロ は menuselection マクロ の コンテキスト 下 で しか 定義 さ れ て い ませ ん 。 
この オブジェクト は Windows の HKEY オブジェクト を ラップ し 、 オブジェクト が 破壊 さ れ た とき に 自動的 に ハンドル を 閉じ ます 。 
この 場合 、 背後 の Windows ハンドル 値 が 返さ れ ます 、 また 、 Detach () メソッド を 使っ て 整数 の ハンドル 値 を 返さ せる と 同時に 、 ハンドル オブジェクト から Windows ハンドル を 切り離す こと も でき ます 。 
背後 の Windows ハンドル を 閉じ ます 。 ハンドル が すでに 閉じ られ て い て も エラー は 送出 さ れ ませ ん 。 
ハンドル オブジェクト から Windows ハンドル を 切り離し ます 。 
切り離さ れる 以前 に その ハンドル を 保持 し て い た 整数 ( または 64 ビット Windows の 場合 に は 長 整数 ) オブジェクト が 返さ れ ます 。 
ハンドル が すでに 切り離さ れ て い たり 閉じ られ て い たり し た 場合 、 ゼロ が 返さ れ ます 。 この 関数 を 呼び出し た 後 、 ハンドル は 確実 に 無効 化 さ れ ます が 、 閉じ られる わけ で は あり ませ ん 。 
背後 の Win 32 ハンドル が ハンドル オブジェクト より も 長く 維持 さ れる 必要 が ある 場合 に は この 関数 を 呼び出す と よい でしょ う 。 
5 . 2 超 高水準 の 埋め込み から 踏み出す : 概要 
Python の 埋め込み の 最も 簡単 な 形式 は 、 超 高水準 インタフェース の 利用 です 。 
この インタフェース は 、 アプリケーション と やり取り する 必要 が ない Python スクリプト を 実行 する ため の もの です 。 
例えば これ は 、 一つ の ファイル 上 で 何らかの 操作 を 実現 する の に 利用 でき ます 。 
上 の コード で は 、 まず Python インタプリタ を Py _ Initialize () で 起動 し 、 続い て ハード コード さ れ た Python スクリプト で 日付 と 時間 の 出力 を 実行 し ます 。 
その後 、 Py _ Finalize () の 呼び出し で インタプリタ を 終了 し , プログラム の 終了 に 続き ます 。 
実際 の プログラム で は 、 Python スクリプト を 他 の ソース 、 おそらく テキストエディタ ルーチン や ファイル 、 データベース から 取り出し たい と 考える かも しれ ませ ん 。 
Python コード を ファイル から 取り出す に は 、 PyRun _ SimpleFile () 関数 を 使う の が よい でしょ う 。 この 関数 は メモリ を 確保 し て 、 ファイル の 内容 を ロード する 手間 を 省い て くれ ます 。 
これ は Python の `` ベンチマーク '' pystone を 使っ た 例 です 。 
プロファイル ・ オブジェクト は 以下 の メソッド を 持っ て い ます 。 
プロファイル 出力 の 際 、 任意 の ラベル 名 を 追加 し ます 。 
ログ ファイル を 閉じ 、 プロファイラ を 終了 し ます 。 
プロファイラ の ログ ファイル の ファイル ・ ディスクリプタ を 返し ます 。 
スクリプト 環境 で exec 互換 文字 列 の プロファイル を おこない ます 。 
モジュール の グローバル 変数 は 、 スクリプト の グローバル 変数 、 ローカル 変数 の 両方 に 使わ れ ます 。 
指定 し た 環境 で exec 互換 文字 列 の 評価 を おこない ます 。 文字 列 の コンパイル は プロファイル を 開始 する 前 に おこなわ れ ます 。 
プロファイラ を 開始 し ます 。 
プロファイラ を 停止 し ます 。 
タグ メソッド に 加え て 、 HTMLParser クラス で は タグ メソッド で 利用 する ため の いくつ か の メソッド と インスタンス 変数 を 提供 し て い ます 。 
パーザ に 関連付け られ て いる フォーマッタインスタンス です 。 
ブール 値 の フラグ で 、 空白 文字 を 縮 約し たく ない とき に は 真 、 縮 約する とき に は 偽 に し ます 。 
一般 的 に は 、 この 値 を 真に する の は 、 PRE 要素 の 中 の テキスト の よう に 、 文字 列 データ が `` 書式 化 済み の ( preformatted )'' 場合 だけ です 。 
標準 の 値 は 偽 です 。 
この 値 は handle _ data () および save _ end () の 操作 に 影響 し ます 。 
この メソッド は アンカー 領域 の 先頭 で 呼び出さ れ ます 。 
引数 は A タグ の 属性 で 同じ 名前 を 持つ もの に 対応 し ます 。 
標準 の 実装 で は 、 ドキュメント 内 の ハイパーリンク ( A タグ の HREF 属性 ) を 列挙 し た リスト を 維持 し て い ます 。 
ハイパーリンク の リスト は データ 属性 anchorlist で 手 に 入れる こと が でき ます 。 
この メソッド は アンカー 領域 の 末尾 で 呼び出さ れ ます 。 
標準 の 実装 で は 、 テキスト の 注釈 マーカ を 追加 し ます 。 マーカ は anchor _ bgn () で 作ら れ た ハイパーリンクリスト の インデクス 値 です 。 
この メソッド は 画像 を 扱う ため に 呼び出さ れ ます 。 
標準 の 実装 で は 、 単に handle _ data () に alt の 値 を 渡す だけ です 。 
文字 列 データ を フォーマッタオブジェクト に 送ら ず に バッファ に 保存 する 操作 を 開始 し ます 。 
保存 さ れ た データ は save _ end () で 取得 し て ください 。 save _ bgn () / save _ end () の ペア を 入れ子 構造 に する こと は でき ませ ん 。 
文字 列 データ の バッファリング を 終了 し 、 以前 save _ bgn () を 呼び出し た 時点 から 保存 さ れ て いる 全て の データ を 返し ます 。 
nofill フラグ が 偽 の 場合 、 空白 文字 は 全て スペース 文字 一 文字 に 置き換え られ ます 。 
予め save _ bgn () を 呼ば ない で この メソッド を 呼び出す と TypeError 例外 が 送出 さ れ ます 。 
基礎 的 な 例 として 、 HTMLParser クラス を 使い 、 発見 し た タグ を 出力 する 、 非常 に 基礎 的 な HTML パーザ を 以下 に 示し ます 。 
認証 情報 が ある 場合 、 認証 情報 付き で 再度 リクエスト を 試み ます 。 
HTTPCookieProcessor インスタンス は 属性 を ひとつ だけ 持ち ます : 
クッキー の 入っ て いる cookielib . CookieJar オブジェクト です 。 
HTTP エラー レスポンス を 処理 し ます 。 エラーコード 200 の 場合 、 レスポンス オブジェクト を 即座 に 返し ます 。 
200 以外 の エラーコード の 場合 、 OpenerDirector . error () を 介し て protocol _ error _ code () メソッド に 仕事 を 引き渡し ます 。 
最終 的 に どの ハンドラ も エラー を 処理 し なかっ た 場合 、 urllib 2 . HTTPDefaultErrorHandler が HTTPError を 送出 し ます 。 
HTTP リクエスト を 送り ます 。 
req . has _ data () に 応じ て 、 GET または POST の どちら で も 送る こと が でき ます 。 
以下 の メソッド は HTTPPasswordMgr および H T T P P a sswordMgrWithDefaultRealm オブジェクト で 利用 でき ます 。 
uri は 単一 の URI で も 複数 の URI から なる シーケンス でも かまい ませ ん 。 realm 、 user および passwd は 文字 列 で なく て は なり ませ ん 。 
この メソッド によって 、 realm と 与え られ た URI の 上位 URI に対して ( user , passwd ) が 認証 トーク ン として 使わ れる よう に なり ます 。 
与え られ た レルム および URI に対する ユーザ 名 または パスワード が あれ ば それ を 取得 し ます 。 
該当 する ユーザ 名 / パスワード が 存在 し ない 場合 、 この メソッド は ( None , None ) を 返し ます 。 H T T P P a sswordMgrWithDefaultRealm オブジェクト で は 、 与え られ た realm に対して 該当 する ユーザ 名 / パスワード が 存在 し ない 場合 、 レルム None が 検索 さ れ ます 。 
注意 : HTTP リダイレクト によって は 、 この モジュール の クライアントコード 側 で の 処理 を 必要 と し ます 。 
その 場合 、 HTTPError が 送出 さ れ ます 。 
様々 な リダイレクトコード の 厳密 な 意味 に関する 詳細 は RFC 2616 を 参照 し て ください 。 
リダイレクト の 通知 に 応じ て 、 Request または None を 返し ます 。 この メソッド は http _ error _ 30 *() メソッド において 、 リダイレクト の 通知 を サーバ から 受信 し た 際 に 、 デフォルト の 実装 として 呼び出さ れ ます 。 
リダイレクト を 起こす 場合 、 新た な Request を 生成 し て 、 http _ error _ 30 *() が リダイレクト を 実行 できる よう に し ます 。 
そう で ない 場合 、 他 の どの ハンドラ に も この URL を 処理 さ せ たく なけれ ば HTTPError を 送出 し 、 リダイレクト 処理 を 行う こと は でき ない が 他 の ハンドラ なら 可能 かも しれ ない 場合 に は None を 返し ます 。 
注意 : この メソッド の デフォルト の 実装 は 、 RFC 2616 に 厳密 に 従っ た もの で は あり ませ ん 。 RFC 2616 で は 、 POST リクエスト に対する 301 および 302 応答 が 、 ユーザ の 承認 なく 自動的 に リダイレクト さ れ て は なら ない と 述べ て い ます 。 
現実 に は 、 ブラウザ は POST を GET に 変更 する こと で 、 これら の 応答 に対して 自動的 に リダイレクト を 行える よう に し て い ます 。 デフォルト の 実装 で も 、 この 挙動 を 再現 し て い ます 。 
Location : URL に リダイレクト し ます 。 
この メソッド は HTTP における ` moved permanently ' レスポンス を 取得 し た 際 に 親 オブジェクト と なる OpenerDirector によって 呼び出さ れ ます 。 
http _ error _ 301 () と 同じ です が 、 ` found ' レスポンス に対して 呼び出さ れ ます 。 
http _ error _ 301 () と 同じ です が 、 ` see other ' レスポンス に対して 呼び出さ れ ます 。 
http _ error _ 301 () と 同じ です が 、 ` temporary redirect ' レスポンス に対して 呼び出さ れ ます 。 
HTTPConnection インスタンス に は 以下 の メソッド が あり ます : 
この メソッド は 、 HTTP 要求 メソッド method および セレクタ url を 使っ て 、 要求 を サーバ に 送り ます 。 
デバッグ レベル ( 印字 さ れる デバッグ 出力 の 量 ) を 設定 し ます 。 標準 の デバッグ レベル は 0 で 、 デバッグ 出力 を 全く 印字 し ませ ん 。 
オブジェクト を 生成 する とき に 指定 し た サーバ に 接続 し ます 。 
サーバ へ の 接続 を 閉じ ます 。 
サーバ に データ を 送り ます 。 
この メソッド は endheaders () が 呼び出さ れ た 直後 で 、 かつ getreply () が 呼び出さ れる 前 に 使わ なけれ ば なり ませ ん 。 
サーバ へ の 接続 が 確立 し たら 、 最初 に この メソッド を 呼び出さ なく て は なり ませ ん 。 
この メソッド は request 文字 列 、 selector 文字 列 、 そして HTTP バージョン ( HTTP / 1 . 1 ) から なる 一行 を 送信 し ます 。 
Host : や Accept - Encoding : ヘッダ の 自動 送信 を 無効 に し たい 場合 ( 例えば 別 の コンテンツエンコーディング を 受け入れ たい 場合 ) に は 、 skip _ host や skip _ accept _ encoding を 偽 で ない 値 に 設定 し て ください 。 
RFC 822 形式 の ヘッダ を サーバ に 送り ます 。 
この 処理 で は 、 header 、 コロン と スペース 、 そして 最初 の 引数 から なる 1 行 を サーバ に 送り ます 。 
追加 の 引数 を 指定 し た 場合 、 継続 し て 各行 に タブ 一つ と 引数 の 入っ た 引数 行 が 送信 さ れ ます 。 
サーバ に 空 行 を 送り 、 ヘッダ 部 が 終了 し た こと を 通知 し ます 。 
以下 は " GET " リクエスト の 送信 方法 を 示し た 例 です : 
以下 は " POST " リクエスト の 送信 方法 を 示し た 例 です : 
HTTPResponse インスタンス は 以下 の メソッド と 属性 を 持ち ます : 
応答 の 本体 全体 か 、 amt バイト まで 読み出し て 返し ます 。 
ヘッダ name の 内容 を 取得 し て 返す か 、 該当 する ヘッダ が ない 場合 に は default を 返し ます 。 
( header , value ) の タプル から なる リスト を 返し ます 。 
応答 ヘッダ を 含む mimetools . Message インスタンス です 。 
サーバ が 使用 し た HTTP プロトコル バージョン です 。 
10 は HTTP / 1 . 0 を 、 11 は HTTP / 1 . 1 を 表し ます 。 
サーバ から 返さ れる 状態 コード です 。 
サーバ から 返さ れる 応答 の 理由 文 です 。 
HTTPS リクエスト を 送り ます 。 
2 . 3 識別子 ( identifier ) および キーワード 
ある 種 の ( キーワード を 除く ) 識別子 に は 、 特殊 な 意味 が あり ます 。 
これら の 識別 子種 は 、 先頭 や 末尾 に ある アンダー スコア 文字 の パターン で 区別 さ れ ます : 
この 識別子 は " from module import *" で import さ れ ませ ん 。 
対話 インタプリタ で は 、 最も 最近 行わ れ た 値 評価 の 結果 を 記憶 する ため に 特殊 な 識別子 "_" が 使わ れ ます ; この 識別子 は __ builtin __ モジュール 内 に 記憶 さ れ ます 。 
対話 モード で ない 場合 、 "_" に は 特殊 な 意味 は なく 、 定義 さ れ て い ませ ん 。 6 . 12 節 、 `` import 文 '' を 参照 し て ください 。 
注意 : 名前 "_" は 、 しばしば 国際 化 ( internationalization ) と共に 用い られ ます ; この 慣習 について の 詳しい 情報 は 、 
gettext module を 参照 し て ください 。 
システム で 定義 さ れ た ( system - defined ) 名前 です 。 
これら の 名前 は インタプリタ と ( 標準 ライブラリ を 含む ) 実装 上 で 定義 さ れ て い ます ; アプリケーション 側 で は 、 この 名前 規約 を 使っ て 別 の 名前 を 定義 しよ う と す べき で は あり ませ ん 。 
この 種 の 名前 の うち 、 Python で 定義 さ れ て いる 名前 の セット は 、 将来 の バージョン で 拡張 さ れる 可能 性 が あり ます 。 
3 . 3 節 、 `` 特殊 な メソッド 名 '' を 参照 し て ください 。 __* 
クラス プライベート ( class - private ) な 名前 です 。 
この カテゴリ に 属する 名前 は 、 クラス 定義 の コンテキスト 上 で 用い られ た 場合 、 基底 クラス と 導出 クラス の `` プライベート な '' 属性 間 で 名前 衝突 が 起こる の を 防ぐ ため に 書き直さ れ ます 。 5 . 2 . 1 節 、 `` 識別子 ( 名前 )'' を 参照 し て ください 。 
識別子 ( または 名前 ( name )) は 、 以下 の 字句 定義 で 記述 さ れ ます : 
識別子 の 長 さ に は 制限 が あり ませ ん 。 
大 小文字 は 区別 さ れ ます 。 
2 . 3 . 1 キーワード ( keyword ) 
16 . 4 . 1 Pen と RawPen オブジェクト 
16 . Tk を 用い た グラフィカルユーザインターフェイス 
Idle は 
GUI ツール キット を つかっ て 作ら れ た Python IDE です 。 
IDLE は 次 の よう な 特徴 が あり ます : 
GUI ツール キット を 使っ て 、 100 % ピュア Python で コーディング さ れ て い ます 
クロス - プラットホーム : Windows と Unix で 動作 し ます ( Mac OS で は 、 現在 Tcl / Tk に 問題 が あり ます ) 
多段 Undo 、 Python 対応 の 色 づけ や 他 に も たくさん の 機能 ( 例えば 、 自動的 な 字 下げ や 呼び出し 情報 の 表示 ) を もつ マルチ - ウィンドウ ・ テキストエディタ 
Python シェル ウィンドウ ( 別名 、 対話 インタープリタ ) 
デバッガ ( 完全 で はり ませ ん が 、 ブレーク ポイント の 設定 や 値 の 表示 、 ステップ 実行 が でき ます ) 
16 . 5 . 1 . 1 File メニュー 
16 . 5 . 1 . 2 Edit メニュー 
16 . 5 . 1 . 3 Windows メニュー 
16 . 5 . 1 . 4 Debug メニュー ( Python シェル ウィンドウ 内 のみ ) 
16 . 5 . 2 . 1 自動的 な 字 下げ 
16 . 5 . 2 . 2 Python Shell ウィンドウ 
16 . 5 . 3 . 1 コマンド ライン の 使い方 
if 文 は 、 条件 分岐 を 実行 する ため に 使わ れ ます : 
if 文 は 、 式 を 一つ 一つ 評価 し て ゆき 、 真に なる まで 続け て 、 真に なっ た 節 の スイート だけ を 選択 し ます ( 真 : true と 偽 : false の 定義 について は 、 5 . 10 節 を 参照 し て ください ); 次 に 、 選択 し た スイート を 実行 し ます ( または 、 if 文 の 他 の 部分 を 実行 し たり 、 評価 し たり し ます ) 全て の 式 が 偽 に なっ た 場合 、 else 節 が あれ ば 、 その スイート が 実行 さ れ ます 。 
虚数 リテラル は 以下 の よう な 字句 定義 で 記述 さ れ ます : 
虚数 リテラル は 、 実数 部 が 0 . 0 の 複素数 を 表し ます 。 
複素数 は 二つ 組 の 浮動 小数点 型 の 数値 で 表さ れ 、 それぞれ の 数値 は 浮動 小数点 型 と 同じ 定義 域 の 範囲 を 持ち ます 。 
実数 部 が ゼロ で ない 浮動 小数点 を 生成 する に は 、 ( 3 + 4 j ) の よう に 虚数 リテラル に 浮動 小数点 数 を 加算 し ます 。 
以下 に 虚数 リテラル の 例 を いくつ か 示し ます : 
以下 に メイル ボックス を 開き 、 全て の メッセージ を 取得 し て 印刷 する 最小 の ( エラー チェック を し ない ) 使用 例 を 示し ます : 
必要 に 応じ て ( IMAP 4 プロトコル が 感知 対象 と し て いる 文字 が 文字 列 に 入っ て おり 、 かつ 丸 括弧 か 二 重 引用 符 で 囲わ れ て い なかっ た 場合 ) 文字 列 は クオート さ れ ます 。 
各 data は 文字 列 か タプル と なり ます 。 
指定 さ れ た 名前 の メイル ボックス に message を 追加 し ます 。 
認証 命令 です -- 応答 の 処理 が 必要 です 。 
mechanism は 利用 する 認証 メカニズム を 与え ます 。 認証 メカニズム は インスタンス 変数 capabilities の 中 に AUTH = mechanism という 形式 で 現れる 必要 が あり ます 。 
authobject は 呼び出し 可能 な オブジェクト で ある 必要 が あり ます 。 
サーバ 上 の メイル ボックス に チェックポイント を 設定 し ます 。 
現在 選択 さ れ て いる メイル ボックス を 閉じ ます 。 
削除 さ れ た メッセージ は 書き込み 可能 メイル ボックス から 除去 さ れ ます 。 
" LOGOUT " 前 に 実行 する こと を 勧め ます 。 
message _ set で 指定 し た メッセージ 群 を new _ mailbox の 末尾 に コピー し ます 。 
mailbox と 名づけ られ た 新た な メイル ボックス を 生成 し ます 。 
mailbox と 名づけ られ た 古い メイル ボックス を 削除 し ます 。 
mailbox における who について の ACL を 削除 ( 権限 を 削除 ) し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
選択 さ れ た メイル ボックス から 削除 さ れ た 要素 を 永久 に 除去 し ます 。 
各々 の 削除 さ れ た メッセージ に対して 、 " EXPUNGE " 応答 を 生成 し ます 。 
返さ れる データ に は " EXPUNGE " メッセージ 番号 を 受信 し た 順番 に 並べ た リスト が 入っ て い ます 。 
メッセージ ( の 一部 ) を 取り よせ ます 。 
message _ parts は メッセージ パート の 名前 を 表す 文字 列 を 丸 括弧 で 囲っ た もの で 、 例えば : ""( UID BODY [ TEXT ])"" の よう に なり ます 。 
返さ れる データ は メッセージ パート の エンベロープ 情報 と データ から なる タプル です 。 
mailbox に対する " ACL " を 取得 し ます 。 この メソッド は 非 標準 です が 、 " Cyrus " サーバ で サポート さ れ て い ます 。 
pattern に マッチ する directory メイル ボックス 名 を 列挙 し ます 。 directory の 標準 の 設定 値 は 最上 レベル の メイルフォルダ で 、 pattern は 標準 の 設定 で は 全て に マッチ し ます 。 
返さ れる データ に は " LIST " 応答 の リスト が 入っ て い ます 。 
平文 パスワード を 使っ て クライアント を 照合 し ます 。 
password は クオート さ れ ます 。 login _ cram _ md 5 
パスワード の 保護 の ため 、 クライアント 認証 時 に " CRAM - MD 5 " だけ を 使用 し ます 。 
これ は 、 " CAPABILITY " レスポンス に " AUTH = CRAM - MD 5 " が 含ま れる 場合 のみ 有効 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
サーバ へ の 接続 を 遮断 し ます 。 
サーバ から の " BYE " 応答 を 返し ます 。 
RFC 2342 で 定義 さ れる IMAP 名前 空間 を 返し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
サーバ に " NOOP " を 送信 し ます 。 
メッセージ の 後略 さ れ た 部分 を 取り寄せ ます 。 
返さ れる データ は メッセージパートエンベロープ 情報 と データ から なる タプル です 。 
user として 認証 さ れ た もの と し ます 。 
遠隔 の サーバ から size バイト 読み出し ます 。 この メソッド は オーバライド する こと が でき ます 。 
遠隔 の サーバ から 一 行 読み出し ます 。 この メソッド は オーバライド する こと が でき ます 。 
サーバ に 更新 を 促し ます 。 
新た な メッセージ が ない 場合 応答 は None に なり 、 そう で ない 場合 " RECENT " 応答 の 値 に なり ます 。 
oldmailbox という 名前 の メイル ボックス を newmailbox に 名称 変更 し ます 。 
応答 code を 受信 し て いれ ば 、 その データ を 返し 、 そう で なけれ ば None を 返し ます 。 
通常 の 形式 ( usual type ) で は なく 指定 し た コード を 返し ます 。 
条件 に 合致 する メッセージ を メイル ボックス から 検索 し ます 。 
返さ れる データ に は 合致 し た メッセージ 番号 を スペース で 分割 し た リスト が 入っ て い ます 。 charset は None で も よく 、 この 場合 に は サーバ へ の 要求 内 に " CHARSET " は 指定 さ れ ませ ん 。 
IMAP プロトコル は 少なくとも 一つ の 条件 ( criterion ) が 指定 さ れる よう 要求 し て い ます ; サーバ が エラー を 返し た 場合 、 例外 が 送出 さ れ ます 。 
例 : # M is a connected IMAP 4 instance ... msgnums = M . search ( None , ' FROM ', '" LDJ "')# or : msgnums = M . search ( None , '( FROM " LDJ ")') 
メイル ボックス を 選択 し ます 。 
返さ れる データ は mailbox 内 の メッセージ 数 (" EXISTS " 応答 ) です 。 
標準 の 設定 で は mailbox は ' INBOX ' です 。 
readonly が 設定 さ れ た 場合 、 メイル ボックス に対する 変更 は でき ませ ん 。 
遠隔 の サーバ に data を 送信 し ます 。 この メソッド は オーバライド する こと が でき ます 。 
" ACL " を mailbox に 設定 し ます 。 この メソッド は 非 標準 です が 、 " Cyrus " サーバ で サポート さ れ て い ます 。 
open で 確立 さ れ た 接続 を 閉じ ます 。 この メソッド は オーバライド する こと が でき ます 。 
サーバ へ の 接続 に 使わ れ て いる ソケット インスタンス を 返し ます 。 
sort 命令 は search に 結果 の 並べ 替え ( sort ) 機能 を つけ た 変種 です 。 
返さ れる データ に は 、 条件 に 合致 する メッセージ 番号 を スペース で 分割 し た リスト が 入っ て い ます 。 sort 命令 は search _ criterium の 前 に 二つ の 引数 を 持ち ます ; sort _ criteria の リスト を 丸 括弧 で 囲っ た もの と 、 検索 時 の charset です 。 
search と 違っ て 、 検索 時 の charset は 必須 です 。 
uid sort 命令 も あり 、 search に対する uid search と 同じ よう に sort 命令 に 対応 し ます 。 
sort 命令 は まず 、 charset 引数 の 指定 に従って searching criteria の 文字 列 を 解釈 し 、 メイル ボックス から 与え られ た 検索 条件 に 合致 する メッセージ を 探し ます 。 
次に 、 合致 し た メッセージ の 数 を 返し ます 。 " IMAP 4 rev 1 " 拡張 命令 です 。 
mailbox の 指定 ステータス 名 の 状態 情報 を 要求 し ます 。 
メイル ボックス 内 の メッセージ 群 の フラグ 設定 を 変更 し ます 。 
新た な メイル ボックス を 購読 ( subscribe ) し ます 。 
thread コマンド は search に スレッド の 概念 を 加え た 変形 版 で ス 。 
返さ れる データ は 空白 で 区切ら れ た スレッドメンバ の リスト を 含ん で い ます 。 各 スレッドメンバ は 0 以上 の メッセージ 番号 から なり 、 空白 で 区切ら れ て おり 、 親子 関係 を 示し て い ます 。 
thread コマンド は search _ criterion 引数 の 前 に 2 つ の 引数 を 持っ て い ます 。 threading _ algorithm と charset です 。 
search コマンド と は 違い 、 charset は 必須 です 。 search に対する uid search と 同様 に 、 thread に も uid thread が あり ます 。 
thread コマンド は まず メールボックス 中 の メッセージ を 、 charset を 用い た 検索 条件 で 検索 し ます 。 
その後 マッチ し た メッセージ を 指定 さ れ た スレッドアルゴリズム で スレッド 化 し て 返し ます . これ は " IMAP 4 rev 1 " の 拡張 コマンド です 。 
command args を 、 メッセージ 番号 で は なく UID で 指定 さ れ た メッセージ 群 に対して 実行 し ます 。 
命令 内容 に 応じ た 応答 を 返し ます 。 
少なくとも 一つ の 引数 を 与え なく て は なり ませ ん ; 何 も 与え ない 場合 、 サーバ は エラー を 返し 、 例外 が 送出 さ れ ます 。 
古い メイル ボックス の 購読 を 解除 ( unsubscribe ) し ます 。 
サーバ から " CAPABILITY " 応答 で 通知 さ れ た 単純 な 拡張 命令 を 許容 ( allow ) し ます 。 
IMAP 4 _ SSL の インスタンス は 追加 の メソッド を 一つ だけ 持ち ます : 
サーバ へ の 安全 な 接続 に 使わ れる SSLObject インスタンス を 返し ます 。 
以下 の 属性 が IMAP 4 の インスタンス 上 で 定義 さ れ て い ます : 
サーバ から 返さ れ た " CAPABILITY " 応答 に ある 、 サポート さ れ て いる 最新 の プロトコル です 。 
デバッグ 出力 を 制御 する ため の 整数 値 です 。 
初期 値 は モジュール 変数 Debug から 取ら れ ます 。 
3 以上 の 値 に する と 各 命令 を トレース し ます 。 
集合 は 変更 不可能 な 要素 だけ を 含む こと でき ます 。 
もし 出来 なけれ ば -__ hash __(),__ eq __(),__ ne __() の ため の 一時 的 な メソッド を 備え た クラス によって ラップ さ れ た 要素 を 返す メソッド -__ as _ temporarily _ immutable __() メソッド を チェック し ます 。 代理 メカニズム は 、 オリジナル の 可変 オブジェクト から 分かれ た コピー を 組み上げる 手間 を 助け て くれ ます 。 
言い かえれ ば 、 変更 可能 な 集合 の 集合 は スレッドセーフ で は あり ませ ん 。 
丸 括弧 ( parentheses )、 角 括弧 ( square bracket ) 、 および 波 括弧 ( curly brace ) 内 の 式 は 、 バックス ラッシュ を 使わ ず に 一行 以上 の 物理 行 に 分割 する こと が でき ます 。 
例えば : month _ names = [' Januari ', ' Februari ', ' Maart ', # These are the ' April ', ' Mei ', ' Juni ', # Dutch names ' Juli ', ' Augustus ', ' September ', # for the months ' Oktober ', ' November ', ' December '] # of the year 
非 明示 的 に 継続 さ れ た 行 に は コメント を 含める こと が でき ます 。 
継続 行 の インデント は 重要 で は あり ませ ん 。 
空 の 継続 行 を 書く こと が でき ます 。 
非 明示 的 な 継続 行 中 に は 、 NEWLINE トー クン は 存在 し ませ ん 。 
非 明示 的 な 行 の 継続 は 、 三重 クオート さ れ た 文字 列 ( 下記 参照 ) で も 発生 し ます ; この 場合 に は 、 コメント を 含める こと が でき ませ ん 。 
import 文 は 、 ( 1 ) モジュール を 探し 、 必要 なら 初期 化 ( initialize ) する ;( import 文 の ある スコープ における ) ローカル な 名前 空間 で 名前 を 定義 する 、 の 二つ の 段階 を 踏ん で 初期 化 さ れ ます 。 第 一 形式 ( from の ない 形式 ) は 、 上記 の 段階 を リスト 中 に ある 各 識別子 に対して 繰り返し 実行 し て いき ます 。 
この テーブル は sys . modules から アクセス でき ます 。 
モジュール 名 が この テーブル 内 に ある なら 、 段階 ( 1 ) は 完了 し て い ます 。 
そう で なけれ ば 、 処理 系 は モジュール 定義 の 検索 を 開始 し ます 。 
モジュール が 見つかっ た 場合 、 モジュール を 読み込み ( load ) ます 。 
モジュール 検索 や 読み込み プロセス の 詳細 は 、 実装 や プラットフォーム に 依存 し ます 。 
一般 的 に は 、 ある 名前 の モジュール を 検索 する 際 、 まず 同名 の `` 組み込み ( built - in )'' モジュール を 探し 、 次に sys . path で 列挙 さ れ て いる 場所 を 探し ます 。 
組み込み モジュール が 見つかっ た 場合 
、 組み込み の 初期 化 コード が 実行 さ れ 、 段階 ( 1 ) を 完結 し ます 。 
合致 する ファイル が 見つから なかっ た 場合 、 ImportError 
が 送出 さ れ ます 。 
ファイル が 見つかっ た 場合 、 ファイル を 構文 解析 し て 実行 可能 な コード ブロック に し ます 。 
構文 エラー が 起き た 場合 、 SyntaxError 
が 送出 さ れ ます 。 それ 以外 の 場合 、 まず 指定 さ れ た 名前 を もつ 空 の モジュール を 作成 し 、 モジュール テーブル に 挿入 し ます 。 
次に 、 この モジュール の 実行 コンテキスト 下 で コード ブロック を 実行 し ます 。 
モジュール 名 の 後ろ に as が ある 場合 、 as の 後ろ の 名前 は モジュール の ローカル な 名前 として 使わ れ ます 。 
from 形式 は 、 モジュール 名 の 束縛 を 行い ませ ん : from 形式 で は 、 段階 ( 1 ) で 見つかっ た モジュール 内 から 、 識別子 リスト の 各 名前 を 順に 検索 し 、 見つかっ た オブジェクト を 識別子 の 名前 で ローカル な 名前 空間 において 束縛 し ます 。 
import の 第 一 形式 と 同じ よう に 、 " as localname " で 別名 を 与える こと が でき ます 。 
指定 さ れ た 名前 が 見つから ない 場合 、 ImportError が 送出 さ れ ます 。 
識別子 の リスト を 星 印 ("*") で 置き換える と 、 モジュール で 公開 さ れ て いる 名前 ( public name ) 全て を import 文 の ある 場所 の ローカル な 名前 空間 に 束縛 し ます 。 
__ all __ 内 に ある 名前 は 、 全て 公開 さ れ た 名前 で あり 、 実在 する もの と みなさ れ ます 。 
__ all __ が 定義 さ れ て い ない 場合 、 モジュール の 名前 空間 に 見つかっ た 名前 で 、 アンダー スコア 文字 ("_") で 始まっ て い ない 全て の 名前 が 公開 さ れ た 名前 に なり ます 。 __ all __ に は 、 公開 さ れ て いる API 全て を 入れ なけれ ば なり ませ ん 。 
__ all __ に は 、 ( モジュール 内 で import さ れ て 使わ れ て いる ライブラリ モジュール の よう に ) API を 構成 し ない 要素 を 意 に 反し て 公開 し て しまう の を 避ける という 意図 が あり ます 。 
"*" を 使っ た from 形式 は 、 モジュール の スコープ 内 だけ に 作用 し ます 。 
関数 内 で ワイルドカード の import 文 --" import *" -- を 使い 、 関数 が 自由 変数 を 伴う ネスト さ れ た ブロック で あっ たり 、 ブロック を 含ん で いる 場合 、 コンパイラ は SyntaxError を 送出 し ます 。 
階層 的 な モジュール 名 : 
モジュール 名 に 一つ または それ 以上 の ドット が 入っ て いる 場合 、 モジュール 検索 パス は 違っ た 扱わ れ 方 を し ます 。 
最後 の ドット まで の 各 識別子 から なる 列 は 、 `` パッケージ ( package )'' 
を 見つける ため に 使わ れ ます ; 次 に 、 パッケージ 内 から 各 識別子 が 検索 さ れ ます 。 
パッケージ と は 、 一般 に は sys . path 上 の ディレクトリ の サブ ディレクトリ で 、 __ init __. py . 
ファイル を 持つ もの です 。 [ XXX この 説明 について は 、 ここ で は 今 の ところ これ 以上 詳しく 書け ませ ん ; 詳細 や 、 パッケージ 内 モジュール の 検索 が どの よう に 行わ れる か は 、 http :// www . python . org / doc / essays / packages . html を 参照 し て ください ] どの モジュール が ロード さ れる べき か を 動的 に 決め たい アプリケーション の ため に 、 組み込み 関数 __ import __() が 提供 さ れ て い ます ; 詳細 は 、 
の 組み込み 関数 を 参照 し て ください 。 
この 関数 は 下 で 述べる PyImport _ ImportModuleEx () を 単純 化 し た インタフェース で 、 globals および locals 引数 を NULL の まま に し た もの です 。 
name 引数 に ドット が 含ま れる 場合 ( ある パッケージ の サブ モジュール を 指定 し て いる 場合 )、 fromlist 引数 が リスト ['*'] に 追加 さ れ 、 戻り 値 が モジュール を 含む トップ レベル パッケージ で は なく 名前 つき モジュール ( named module ) に なる よう に し ます 。 
( 残念 ながら この やり方 に は 、 name が 実際 に は サブ モジュール で なく サブ パッケージ を 指定 し て いる 場合 、 パッケージ の __ all __ 
変数 に 指定 さ れ て いる サブ モジュール が ロード さ れ て しまう という 副作用 が あり ます 。 
) import さ れ た モジュール へ の 新た な 参照 を 返し ます 。 失敗 し た 場合 に は 例外 を セット し 、 NULL を 返し ます 。 
Python 2 . 4 以前 で は 、 失敗 し た 場合 でも モジュール は 生成 さ れ て いる こと が あり ます -- sys . modules を 使っ て 調べ て ください 。 
Python 2 . 4 以降 で は 、 import に 失敗 し た モジュール は sys . modules に 残り ませ ん 。 バージョン 2 . 4 で 変更 さ れ た 仕様 : import に 失敗 し た 場合 、 不完全 な モジュール を 除去 する よう に なり まし た 
モジュール を import し ます 。 
モジュール の import について は 組み込み の Python 関数 __ import __() を 読む と よく 分かり ます 。 
というのも 、 標準 の __ import __() は この 関数 を 直接 呼び出し て いる から です 。 戻り 値 は import さ れ た モジュール か トップ レベル パッケージ へ の 新た な 参照 に なり ます 。 
失敗 し た 場合 に は 例外 を セット し 、 NULL を 返し ます ( Python 2 . 4 より も 前 の バージョン で は 、 モジュール は 生成 さ れ て いる 場合 が あり ます )__ import __() と 同じく 、 パッケージ に対して サブ モジュール を 要求 し た 場合 の 戻り 値 は 通常 、 空 で ない fromlist を 指定 し ない 限り トップ レベル パッケージ に なり ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : import に 失敗 し た 場合 、 不完全 な モジュール を 除去 する よう に なり まし た PyObject * 
現在 の `` import フック 関数 '' を 呼び出す ため の 高水準 の インタフェース です 。 
この 関数 は 現在 の グローバル 変数 辞書 内 の __ builtins __ から __ import __() 関数 を 呼び出し ます 。 
すなわち 、 現在 の 環境 に インストール さ れ て いる import フック 、 例えば rexec 
や ihooks 
を 使っ て import を 行い ます 。 
モジュール を 再 ロード ( reload ) し ます 。 
モジュール の 再 ロード について は 組み込み の Python 関数 reload () を 読む と よく 分かり ます 。 
というのも 、 標準 の reload は この 関数 を 直接 呼び出し て いる から です 。 
戻り 値 は 再 ロード し た モジュール か トップ レベル パッケージ へ の 新た な 参照 に なり ます 。 
失敗 し た 場合 に は 例外 を セット し 、 NULL を 返し ます ( その 場合 でも 、 モジュール は 生成 さ れ て いる 場合 が あり ます ) PyObject * 
モジュール 名 に 対応 する モジュール オブジェクト を 返し ます 。 
注意 : この 関数 は モジュール の import や ロード を 行い ませ ん ; モジュール が まだ ロード さ れ て い なけれ ば 、 空 の モジュール オブジェクト を 得る こと に なり ます 。 PyImport _ ImportModule () や その 別 形式 を 使っ て モジュール を import し て ください 。 
ドット 名 表記 で 指定 し た name が 存在 し ない 場合 、 パッケージ 構造 は 作成 さ れ ませ ん 。 
モジュール 名 ( package . module 形式 でも かまい ませ ん ) および Python の バイト コード ファイル や 組み込み 関数 compile () 
で 得 られ た コード オブジェクト を 元 に モジュール を ロード し ます 。 
モジュール オブジェクト へ の 新た な 参照 を 返し ます 。 失敗 し た 場合 に は 例外 を セット し 、 NULL を 返し ます 。 
Python 2 . 4 以前 で は 、 失敗 し た 場合 でも モジュール は 生成 さ れ て いる こと が あり まし た 。 
Python 2 . 4 以降 で は 、 たとえ PyImport _ ExecCodeModule () の 処理 に 入っ た 時 に name が sys . modules に 入っ て い た として も 、 import に 失敗 し た モジュール は sys . modules に 残り ませ ん 。 
初期 化 の 不完全 な モジュール を sys . modules に 残す の は 危険 で あり 、 その よう な モジュール を import する コード にとって は 、 モジュール の 状態 が わから ない ( モジュール 作者 の 意図 から 外れ た 壊れ た 状態 かも しれ ない ) から です 。 この 関数 は 、 すでに import さ れ て いる モジュール の 場合 に は 再 ロード を 行い ます 。 
意図 的 に モジュール の 再 ロード を 行う 方法 は PyImport _ ReloadModule () を 参照 し て ください 。 name が package . module 形式 の ドット 名 表記 で あっ た 場合 、 まだ 作成 さ れ て い ない パッケージ 構造 は その 作成 さ れ ない まま に なり ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : エラー が 発生 し た 場合 に name を sys . modules から 除去 する よう に なり まし た 
Python バイト コード ファイル ( いわゆる . pyc および . pyo ファイル ) の マジックナンバ を 返し ます 。 
マジック ナンバ は バイト コード ファイル の 先頭 4 バイト に リトルエンディアン 整列 で 配置 さ れ て い ます 。 
モジュール 管理 の ため の 辞書 ( いわゆる sys . modules ) を 返し ます 。 
この 辞書 は インタプリタ ごと に 一つ だけ ある 変数 な ので 注意 し て ください 。 
import 機構 を 初期 化 し ます 。 
内部 使用 だけ の ため の 関数 です 。 
モジュール テーブル を 空 に し ます 。 
import 機構 を 終了 処理 し ます 。 
name という 名前 の フリーズ ( freeze ) さ れ た モジュール を ロード し ます 。 
成功 する と 1 を 、 モジュール が 見つから なかっ た 場合 に は 0 を 、 初期 化 が 失敗 し た 場合 に は 例外 を セット し て - 1 を 返し ます 。 
ロード に 成功 し た モジュール に アクセス する に は PyImport _ ImportModule () を 使っ て ください 。 
( Note この 関数 名 は いささか 誤 称 めい て い ます -- この 関数 は すでに import 済み の モジュール を リロード し て しまい ます 。 ) 
freeze ユーティリティ が 生成 する よう な フリーズ 化 モジュール デスクリプタ の 構造 体型 定義 です 。 
( Python ソース 配布 物 の Tools / freeze / を 参照 し て ください ) この 構造 体 の 定義 は Include / import . h に あり 、 以下 の よう に なっ て い ます : 
この ポインタ は struct _ frozen の レコード から なり 、 終端 の 要素 の メンバ が NULL か ゼロ に なっ て いる よう な 配列 を 指す よう 初期 化 さ れ ます 。 
フリーズ さ れ た モジュール を import する とき 、 この テーブル を 検索 し ます 。 
サード パーティ 製 の コード から この ポインタ に 仕掛け を 講じ て 、 動的 に 生成 さ れ た フリーズ 化 モジュール の 集合 を 提供 する よう に でき ます 。 
既存 の 組み込み モジュール テーブル に 単一 の モジュール を 追加 し ます 。 
この 関数 は 利便 性 を 目的 と し た PyImport _ ExtendInittab () の ラッパ 関数 で 、 テーブル が 拡張 でき ない とき に は - 1 を 返し ます 。 
新た な モジュール は name で import でき 、 最初 に import を 試み た 際 に 呼び出さ れる 関数 として initfunc を 使い ます 。 
Py _ Initialize () より も 前 に 呼び出さ ね ば なり ませ ん 。 
組み込み モジュール リスト 内 の 一つ の エントリ を 記述 し て いる 構造 体 です 。 
リスト 内 の 各 構造 体 に は 、 インタプリタ 内 に 組み込ま れ て いる モジュール の 名前 と 初期 化 関数 が 指定 さ れ て い ます 。 
Python を 埋め込む よう な プログラム は 、 この 構造 体 の 配列 と PyImport _ ExtendInittab () を 組み合わせ て 、 追加 の 組み込み モジュール を 提供 でき ます 。 
構造 体 は Include / import . h で 以下 の よう に 定義 さ れ て い ます : 
組み込み モジュール の テーブル に 一 群 の モジュール を 追加 し ます 。 
配列 newtab は name フィールド が NULL に なっ て いる センチ ネル ( sentinel ) エントリ で 終端 さ れ て い なけれ ば なり ませ ん ; センチ ネル 値 を 与え られ なかっ た 場合 に は メモリ 違反 に なる かも しれ ませ ん 。 
成功 する と 0 を 、 内部 テーブル を 拡張 する の に 十分 な メモリ を 確保 でき なかっ た 場合 に は - 1 を 返し ます 。 
操作 が 失敗 し た 場合 、 モジュール は 一切 内部 テーブル に 追加 さ れ ませ ん 。 
Py _ Initialize () より も 前 に 呼び出さ ね ば なり ませ ん 。 
1 . 1 インクルードファイル 
1 . 2 オブジェクト 、 型 および 参照 カウント 
Python / C API を 使う ため に 必要 な 、 関数 、 型 および マクロ の 全て の 定義 を インクルード する に は 、 以下 の 行 : 
を ソース コード に 記述 し ます 。 この 行 を 記述 する と 、 標準 ヘッダ : stdio . h , string . h , errno . h , limits . h , and stdlib . h を ( あれ ば ) インクルード し ます 。 
システム によって は 、 Python の 定義 し て いる プリプロセッサ 定義 が 標準 ヘッダ に 影響 を およぼす 可能 性 が ある ので 、 Python . h は 他 の 標準 ヘッダ ファイル より も 前 に インクルード し て ください 。 
Python . h で 定義 さ れ て いる 、 ユーザ から 見える 名前 全て ( Python . h が インクルード し て いる 標準 ヘッダ の 名前 は 除き ます ) に は 、 接頭 文字 列 " Py " または "_ Py " が 付き ます 。 
"_ Py " で 始まる 名前 は Python 実装 で 内部 使用 する ため の 名前 で 、 拡張 モジュール の 作者 は 使っ て は なり ませ ん 。 構造 体 の メンバ に は 予約 済み の 接頭 文字 列 は あり ませ ん 。 
重要 : API の ユーザ は 、 " Py " や "_ Py " で 始まる 名前 を 定義 する よう な コード を 絶対 に 書い て は なり ませ ん 。 
後 から コード を 読む 人 を 混乱 さ せ たり 、 将来 の Python の バージョン で 同じ 名前 が 定義 さ れ て 、 ユーザ の 書い た コード の 可 搬性 を 危うく する 可能 性 が あり ます 。 ヘッダ ファイル 群 は 通常 Python と共に インストール さ れ ます 。 
Unix で は 
prefix / include / pythonversion / および 
exec _ prefix / include / pythonversion / に 置か れ ます 。 prefix と exec _ prefix は Python を ビルド する 際 の configure スクリプト に 与え た パラメタ に 対応 し 、 version は sys . version [: 3 ] に 対応 し ます 。 
Windows で は 、 ヘッダ は 
親 ディレクトリ を サーチ パス に 入れ て 、 "# include python 2 . 4 / Python . h " の よう に し て は なり ませ ん ; prefix 内 の プラットフォーム に 依存 し ない ヘッダ は 、 exec _ prefix から プラットフォーム 依存 の ヘッダ を インクルード し て いる ので 、 この よう な 操作 を 行う と 複数 の プラットフォーム で の ビルド が でき なく なり ます 。 API は すべて C 言語 を 使っ て 定義 し て い ます が 、 ヘッダ ファイル は エントリ ポイント を extern " C " で 適切 に 宣言 し て いる ので 、 C ++ ユーザ は 、 なん の 問題 も なく C ++ から API を 利用 できる こと に 気づく はず です 。 
6 . 11 索引 生成 の ため の マーク アップ 技術 文書 における 索引 の 効果 的 な 作成 は 、 とりわけ 作者 が ある 事柄 に は 詳しく て も 索引 の 生成 に は 不慣れ な 場合 に は 非常 に 困難 です 。 
ドキュメント の 困難 さ の ほとんど は 技術 用語 の 範囲 から き て い ます : ある 概念 を 説明 する 際 に 、 熟練 者 が 使う よう な 用語 を 入れる だけ で は 不十分 です 。 
ドキュメント の 作者 は 普通 、 自分 の 書い て いる ドキュメント の 領域 において は 熟練 者 で あり 、 初心者 が 立ち止まっ て しまう よう な 用語 を 見つけ出す の は かなり 難しい の です 。 索引 生成 の 本当に 困難 な 側面 は 、 ドキュメント 作成 ツール で 補助 できる よう な 領域 の こと が ら で は あり ませ ん 。 
と は いえ 、 ひとたび 用語 の 内容 を 決め たら 、 索引 の 作成 を 簡単 に する の は ツール の 役割 です 。 
様々 な 種類 の 索引 を 最小限 の 努力 で 生成 できる よう に する ため に ドキュメント 生成 ソフトウェア が 利用 できる よう な マーク アップ が 提供 さ れ て い ます 。 
ドキュメント で 多く の モジュール に対する 参照 が 入っ た `` モジュール 索引 '' が 必要 な 場合 、 プリアンブル 内 で 使い ます 。 
この マクロ は 一連 の declaremodule マクロ から データファイル libjobname . idx を 生成 し ます 。 
この ファイル は makeindex プログラム で 使わ れ 、 モジュール 索引 を 入れ たい 場所 に input を 使っ て 取り込める よう な ファイル を 生成 し ます 。 
様々 な 概念 について 索引 エントリ を 追加 する 上 で 便利 な マクロ が あり ます 。 これら の 多く は プログラミング 言語 や 、 Python に 特有 の 概念 です 。 
name という 名前 の 組み込み 関数 に対する 索引 エントリ を 追加 し ます ; name の 後ろ に 丸 括弧 を 入れ て は なり ませ ん 。 
exception という 名前 の 例外 に対する 索引 エントリ を 追加 し ます 。 
例外 は クラス ベース の 例外 で なけれ ば なり ませ ん 。 
言語 における 予約 語 ( keyword 、 関数 や メソッド 呼び出し における キーワード 引数 と は 違い ます ) に対する 索引 エントリ を 追加 し ます 。 
組み込み オブジェクト 型 に対する 索引 エントリ を 追加 し ます 。 
"+" の よう な 演算 子 に対する 索引 エントリ を 追加 し ます 。 
モジュール module に対する 索引 エントリ を 追加 し ます ; module に アンダー スコア が 入っ て いる 場合 、 オプション の パラメタ key に は 、 module から アンダー スコア を 除去 し た 名前 を 指定 せ ね ば なり ませ ん 。 
索引 エントリ `` module ( module )'' を 生成 し ます 。 
Python で 書か れ た 非 標準 モジュール で 使う ため の もの です 。 
refmodindex の よう な もの です が 、 索引 エントリ は `` module ( extension module )'' に なり ます 。 この マクロ は Python 以外 で 書か れ た 非 標準 モジュール で 使う ため の もの です 。 
refmodindex の よう な もの です が 、 索引 エントリ は `` module ( built - in module )'' に なり ます 。 この マクロ は Python 以外 で 書か れ た 標準 モジュール で 使う ため の もの です 。 
refmodindex の よう な もの です が 、 索引 エントリ は `` module ( standard module )'' に なり ます 。 この マクロ は Python で 書か れ た 標準 モジュール で 使う ため の もの です 。 
print や try / finally の よう な 、 構文 型 に対する 索引 エントリ を 追加 し ます 。 
総合 索引 を 簡単 に 作成 する 上 で 便利 な マクロ が 提供 さ れ て い ます 。 索引 エントリ は 、 索引 の 様々 な 場所 で 語順 を 入れ替え て 表示 し なけれ ば なり ませ ん 。 
これら の マクロ は 単に index を 使っ て 複数 の 索引 エントリ を 作成 する よう な 単純 な マクロ です 。 
こうした マクロ を 使っ て 構築 さ れ た 索引 エントリ に は 、 一 次 および 二 次 の 索引 テキスト が 入り ます 。 
二つ の 索引 語 から なる 索引 エントリ を 構築 し ます 。 
index { word 1 ! word 2 } と index { word 2 ! word 1 } を 組み合わせ て 使う の と 同じ です 。 
三つ の 索引 語 から なる 索引 エントリ を 構築 し ます 。 
index { word 1 ! word 2 word 3 }、 index { word 2 ! word 3 , word 1 }、 および index { word 3 ! word 1 word 2 } を 組み合わせ て 使う の と 同じ です 。 
四つ の 索引 語 から なる 索引 エントリ を 構築 し ます 。 
index { word 1 ! word 2 word 3 word 4 }、 index { word 2 ! word 3 word 4 , word 1 }、 index { word 3 ! word 4 , word 1 word 2 }、 および index { word 4 ! word 1 word 2 word 3 } を 組み合わせ て 使う の と 同じ です 。 
6 . 3 情報 単位 モジュール が 提供 し て いる 特定 の 機能 を 説明 する ため に 使う マクロ が 数多く あり ます 。 
これら の 各 環境 に は 、 環境 を 使っ て 何 を 説明 しよ う と し て いる か を 表す 基本 的 な 情報 を パラメタ に 指定 する 必要 が あり ます 。 
説明 内容 自体 は 環境 の 中 に 書き ます 。 こうした 環境 の ほとんど は ( ドキュメント が 総合 索引 を 生成 する 際 に ) 総合 索引 上 の エントリ に なり ます ; 索引 エントリ が 必要 ない 場合 、 それぞれ 索引 を 生成 し ない 変化 形 の 環境 が あり ます 。 
環境 は 
featuredesc という 形式 の 名前 に なり 、 索引 を 生成 し ない 変化 形 は 
featuredescni という 形式 の 名前 に なり ます 。 
該当 する 機能 が クラス インスタンス の 属性 で ある 場合 、 type name を 与える 必要 が ある の は 、 クラス が その モジュール の 説明 で 最後 に 説明 し た クラス で ない 場合 だけ です ; それ 以外 の 場合 、 最後 に 説明 し た classdesc の name を 適用 し ます 。 組み込み 型 や 拡張 型 の 機能 について は 、 type name を 常に 与え ね ば なり ませ ん 。 
もう 一つ 特殊 な ケース として 、 formatter モジュール における formatter や writer の よう な 、 汎用 の `` プロトコル '' の メソッド や メンバ が あり ます : これら は 特定 の 実装 クラス なし に ドキュメント を 書く こと が あり 、 常に type name パラメタ を 指定 する 必要 が あり ます 。 
C 関数 を 解説 する とき に 使う 環境 です 。 
type は typedef さ れ て いる 型名 か 、 struct tag 
か 、 基本 型 の 名前 で なけれ ば なり ませ ん 。 
ポインタ 型 の 場合 、 後続 する アスタリスク の 前 に スペース を 入れ て は なり ませ ん 。 name は 関数 ( または 関数 に 似 た 形式 を とる プリプロセッサ マクロ ) の 名前 で なく て は なら ず 、 args に は パラメタ の 型 と 名前 を 与え ね ば なり ませ ん 。 
名前 は 説明 文 内 で も 使える 形式 で 書か ね ば なり ませ ん 。 
構造 体 メンバ を 説明 する とき に 使う 環境 です 。 container に は 、 typedef さ れ て いる 名前 なら それ を 使い 、 そう で なけれ ば " struct tag 
" と 指定 せ ね ば なり ませ ん 。 
メンバ の 型 は type に 指定 し 、 メンバ 名 は name に 指定 し ます 。 
説明 文中 に は 変数 の 許容 範囲 、 値 が どの よう に 解釈 さ れる か 、 そして 値 が 変更 可能 か を 記述 せ ね ば なり ませ ん 。 
本 文中 で 構造 体 メンバ を 参照 する 場合 に は 、 member マクロ を 使い ます 。 
`` 単純 '' マクロ を 説明 する とき に 使う 環境 です 。 
単純 マクロ は 、 引数 を 取ら ない ため 関数 で 記述 でき ない よう な コード を 展開 する 際 に 使い ます 。 
この 環境 は 単純 な 定数 定義 に は 用い ませ ん 。 
Python ドキュメント 内 で の この マクロ の 用例 として は 、 PyObject _ HEAD や Py _ BEGIN _ ALLOW _ THREADS が あり ます 。 
C の 型 を 説明 する とき に 使う 環境 です 。 
name パラメタ は typedef さ れ た 名前 で なけれ ば なり ませ ん 。 
typedef が なく 、 struct で 定義 さ れ て いる 型 の 場合 、 name は struct tag 
グローバル な C の 変数 を 説明 する とき に 使う 環境 です 。 type は typedef さ れ て いる 型名 か 、 struct tag 
か 、 基本 型 の 名前 で なけれ ば なり ませ ん 。 
ポインタ 型 の 場合 、 後続 する アスタリスク の 前 に スペース を 入れ て は なり ませ ん 。 
datadesc に 似 て い ます が 、 索引 エントリ を 作成 し ませ ん 。 
クラス として 定義 さ れ て いる 例外 を 説明 する ため に 使い ます 。 constructor parameters に は 、 self や コンス トラクタ 呼び出し 構文 で 使う 丸 括弧 を 含め て は なり ませ ん 。 
コンス トラクタ に 与える パラメタ の 説明 が ない よう な 例外 クラス を 説明 する 場合 に は 、 excdesc 環境 を 使用 し て ください 。 
例外 を 説明 する ため の 環境 です 。 
クラス 例外 の 場合 に は 、 コンス トラクタ の パラメタ が 記述 さ れ ませ ん : 例外 クラス と コンス トラクタ を 説明 する 場合 に は 、 excclassdesc を 使っ て ください 。 
モジュール レベル の 関数 を 説明 する ため の 環境 です 。 parameters に は 、 呼び出し の 際 に 使う 丸 括弧 を 含め て は なり ませ ん 。 
オブジェクト メソッド の 説明 に は この 環境 を 使い ませ ん 。 
モジュール の 公開 インタフェース の 一部 として モジュール の 名前 空間 内 に 置か れ て いる 束縛 さ れ た オブジェクト メソッド ( bound object method ) は 、 ほとんど の 用途 で モジュール レベル 関数 と 同じ な ので 、 この 環境 を 使い ます 。 説明 に は 、 必要 な パラメタ と 、 パラメタ が どう 処理 さ れる か ( とりわけ 、 パラメタ として 渡し た 変更 可能 な オブジェクト が 変更 さ れる か 否 か ) 、 副作用 、 送出 さ れ うる 例外 について の 情報 を 含め ね ば なり ませ ん 。 
小さな 例題 を 提供 し て かまい ませ ん 。 
funcdesc に 似 て い ます が 、 索引 エントリ を 作成 し ませ ん 。 
クラス と その コンス トラクタ を 説明 する ため の 環境 です 。 constructor parameters に は 、 self や コンス トラクタ 呼び出し 構文 で 使う 丸 括弧 を 含め て は なり ませ ん 。 
コンス トラクタ の 説明 を 伴わ ない クラス を 説明 する ため の 環境 です 。 
属性 を コンテナ 化 する こと が ほとんど なかっ たり 、 ユーザ コード から インスタンス 化 や サブ クラス 化 を 行わ ない よう な クラス を 記述 する 際 に 利用 でき ます 。 
オブジェクト の データ 属性 を 説明 する ため の 環境 です 。 
説明 に は 、 想定 さ れ て いる データ 型 や 、 データ が 直接 変更 可能 か について の 情報 が なけれ ば なり ませ ん 。 
memberdesc に 似 て い ます が 、 索引 エントリ を 作成 し ませ ん 。 
オブジェクト メソッド を 説明 する ため の 環境 です 。 parameters に は 、 self パラメタ や 呼び出し 構文 で 使う 丸 括弧 を 含め て は なり ませ ん 。 
説明 に は 、 funcdesc 内 で 説明 する の と 同じ よう な 情報 が 入っ て い なけれ ば なり ませ ん 。 
methoddesc に 似 て い ます が 、 索引 エントリ を 作成 し ませ ん 。 
6 . 4 コード の 例示 ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
6 . 5 インラインマークアップ この節 で 説明 する マクロ は 、 単に ドキュメント テキスト 中 の 興味深い 内容 を マーク する ため に 使わ れ ます 。 
これら の マクロ は 、 本文 だけ で は なく 、 表題 に 利用 し て も かまい ませ ん ( と は いえ 、 ハイパーリンク を 含む もの は 除か ね ば なり ませ ん )。 
code に 似 て い ます が 、 ボールド 書体 に し ます 。 
C 言語 における 変数 の 名前 です 。 
} C 言語 における 関数 の 名前 です 。 
name に は 関数 名 と その 後ろ の 丸 括弧 を 含め ね ば なり ませ ん 。 
1 バイト の 文字 列 値 で は なく 、 単一 の 文字 について 議論 する 場合 の 文字 です 。 
文字 は samp と 同じ よう に タイプ セット さ れ ます 。 
参照 し て いる 出版 物 の タイトル です 。 
url を 指定 する と 、 タイトル 部分 は HTML 形式 に フォーマット し た 際 に ハイパーリンク に なり ます 。 
クラス 名 です ; ドット 名 表記 を 使用 でき ます 。 
短い コード 断片 や 定数 リテラル 。 
引用 符 で 囲わ ない ので 、 スペース を 入れ て は なり ませ ん 。 
`` 定義 済み の '' 定数 名 です 。 
C 言語 における # define や 、 変更 さ れ ない こと に なっ て いる Python の 変数 の 場合 が あり ます 。 
`` 単純 '' マクロ の 名前 です 。 
単純 マクロ は 、 引数 を 取ら ない ため 関数 で 記述 でき ない よう な コード の 展開 に 使わ れ ます 。 
C の typedef や 構造 体 の 名前 です 。 
型 が typedef を 伴わ ず に 定義 さ れ て いる 構造 体 の 場合 は 、 ctype { struct struct _ tag } を 使っ て 、 struct が 必須 で ある こと を 明示 し て ください 。 
説明 し て いる 内容 が リリース version 以降 で 撤廃 さ れ て いる こと を 宣言 し ます 。 
what to do に 指定 し た テキスト で は 、 撤廃 さ れ た ものの 代わり に 利用 す べき もの を 推奨 せ ね ば なり ませ ん 。 
テキスト は 完全 な 文 に せ ね ば なり ませ ん 。 
文章 全体 に対して 撤廃 を 注釈 する 場合 、 別個 の 段落 に し て 表示 せ ね ば なり ませ ん ; この 場合 、 撤廃 さ れる 機能 の 説明 の 前 か 後ろ の どちら か に 置き ます 。 
テキスト における term の インスタンス の 定義 を マーク し ます 。 
( 索引 エントリ を 生成 し ませ ん 。 
バックス ラッシュ を 生成 し ます 。 
code 、 file や 類似 の マクロ 、 および alltt 環境 の 内容 を 記述 する 場合 に 便利 で 、 そうした マーク アップ 内 だけ 定義 さ れ て い ます 。 
( citetitle マクロ の 中身 の よう な ) 通常 の 文章 で バックス ラッシュ を 生成 する 場合 に は 、 標準 の textbackslash マクロ を 使っ て ください 。 
電子 メールアドレス です 。 
出力 形式 が 何 で あれ 、 ハイパーリンク は 行わ れ ない ので 注意 し て ください 。 
アドレス の ドメイン ネーム 部分 は 小文字 で なけれ ば なり ませ ん 。 
強調 テキスト です 。 イタリック フォント で 表示 さ れ ます 。 
環境 変数 です 。 
索引 エントリ を 生成 し ます 。 
例外 の 名前 です 。 
ドット 名 表記 を 使え ます 。 
ファイル や ディレクトリ の 名前 です 。 
PDF と PostScript 形式 の 出力 で は ファイル 名 を 表現 する の に 単 引用 符 で 囲っ て フォント を 変更 し ます が 、 HTML 出力 で は 引用 符 囲い を 行い ませ ん 。 
警告 : 処理 上 の 制約 により 、 file マクロ は セクション タイトル 内 の 内容 に は 使え ませ ん 。 
file に 似 て い ます が 、 単 引用 符 を 使い ませ ん 。 
テーブル と 組み合わせる 際 に 、 カラム に ファイル や ディレクトリ 名 だけ が 入る よう な 場合 に 使え ます 。 
警告 : 処理 上 の 制約 により 、 filenq マクロ は セクション タイトル 内 の 内容 に は 使え ませ ん 。 
Python 関数 の 名前 です ; ドット 名 表記 を 使え ます 。 
数学 的 な 無限 大 を 表す シンボル : です 。 
この シンボル の HTML 表現 を 適切 に 描画 でき ない ブラウザ も あり ます が 、 サポート は 拡大 し て い ます 。 
キー シーケンス を マーク し ます 。 
key sequence が どんな 形式 に なる か は プラットフォーム や アプリケーション 固有 の 取り決め に 依存 し ます 。 
適当 な 取り決め が ない 場合 に は 、 初心者 や 別 の システム を 利用 し て いる 人 たち が 分かり やすい よう に 、 モディファイアキー 名 を 書き下さ ね ば なり ませ ん 。 
例えば 、 xemacs の キー シーケンス は kbd { C - x C - f } の よう に マーク でき ます が 、 特定 の アプリケーション や プラットフォーム に対する 参照 を 行わ ない 場合 に は 、 kbd { Control - x Control - f } と マーク せ ね ば なり ませ ん 。 
プログラミング 言語 における 予約 語 ( keyword ) の 名前 です 。 
RFC 822 形式 の メイル ヘッダ 名 です 。 
この マーク アップ は 、 その ヘッダ が 電子 メイル メッセージ 中 で 使わ れ て いる こと を 示す の で は なく 、 同じ `` スタイル '' の ヘッダ を 表す の に 使える 名前 で ある こと を 示し ます 。 様々 な MIME 仕様 が 定義 し て いる ヘッダ に対して も 使い ます 。 
ヘッダ 名 の 表現 方法 は 、 実際 に 通常 使わ れ て いる の と 同じ 方法 で 入力 し なく て は なり ませ ん 。 また 、 複数 の 用法 が あり 、 いずれ も 広く 使わ れ て いる 場合 に は 、 キャメル 形式 ( camel - casting ) を 優先 し ます 。 
ヘッダ 名 の 後ろ に 続く コロン は 含め て は なり ませ ん 。 例 : mailheader { Content - Type }。 
make における 変数 名 です 。 
Unix マニュアル ページ へ の 参照 です 。 
オブジェクト の データ 属性 名 です 。 
} オブジェクト の メソッド 名 です 。 
name に は メソッド 名 と その 後ろ に 続く 丸 括弧 を 入れ ね ば なり ませ ん 。 
ドット 名 表記 を 使え ます 。 
MIME タイプ の 名前 か 、 MIME タイプ の 要素 ( メジャー タイプ は マイナー タイプ の いずれ か ) の 名前 です 。 
モジュール の 名前 です : ドット 名 表記 を 使え ます 。 
パッケージ 名 に も これ を 使い ます 。 
Usenet の ニュース グループ 名 です 。 
ある API について 、 ユーザ が その API を 一部 でも 利用 する 場合 に は 知っ て おか ね ば なら ない よう な 特に 重要 な 情報 です 。 
この マクロ は 注釈 が 終了 する 場所 を 視覚 的 に マーク し ない ので 、 段落 の 末尾 の 内容 に せ ね ば なり ませ ん 。 
text の 内容 は 完全 な 文 で 書き 、 適切 な 区切り を 入れ ね ば なり ませ ん 。 
Python Enhancement Proposal へ の 参照 です 。 
この マクロ は 索引 エントリ を 生成 し ます 。 
" という 出力 を 生成 し ます ; HTML 出力 の 場合 、 テキスト は 指定 さ れ た PEP の オンライン コピー に対する ハイパーリンク に なり ます 。 
ある 値 が 、 指定 し た 量 に対して 正負 の 値 を とる こと を 示す シンボル で 、 通常 は マイナス 記号 の 上 に プラス 記号 を 置い て 表し ます 。 
例 : plusminus 3 % 
実行 可能 形式 の プログラム 名 です 。 
プラットフォーム によって は 、 実行 可能 形式 の ファイル 名 と は 異なる 場合 が あり ます 。 
特に 、 Windows プログラム で は . exe ( や その他 の ) 拡張 子 を 省略 し ます 。 
実行 可能 プログラム の コマンドラインオプション です 。 
`` 短い '' オプション だけ に 使い 、 先頭 に ハイフン を 入れ て ください 。 
実行 可能 プログラム の 長い コマンドラインオプション です 。 
この マクロ は 二つ の ハイフン から 始まる 長い オプション 名 だけ に 使い ます ; ハイフン を option に 入れ て は なり ませ ん 。 
module に 似 て い ます が 、 指定 し た モジュール に対する ハイパーリンク を 生成 し ます 。 
この マクロ に 対応 する declaremodule は 同じ ドキュメント 内 に 入っ て い なけれ ば なり ませ ん 。 
declaremodule が モジュール 名 と は 異なる モジュール キー を 定義 し て いる 場合 、 refmodule マクロ 内 で も key として 指定 せ ね ば なり ませ ん 。 
正規 表現 を マーク し ます 。 
Internet Request for Commments へ の 参照 です 。 
適切 な 索引 エントリ を 生成 し ます 。 
テキスト " RFC number 
" を 生成 し ます ; HTML 出力 で は 、 テキスト は 指定 し た RFC の オンライン コピー に対する ハイパーリンク に なり ます 。 
短い コード 例 で 、 code で 指定 する に は 長 すぎる 場合 に 使い ます 。 
引用 符 記号 を 追加 する ので 、 テキスト に スペース を 入れ て も かまい ませ ん 。 
プリアンブル の setshortversion マクロ に 指定 さ れ て いる よう な 、 ドキュメント の 対象 と なっ て いる ソフトウェア の `` 短い '' バージョン 番号 です 。 
Python の 場合 、 ある リリース に対する 短い バージョン 番号 と は 。 sys . version 値 の 最初 の 三 文字 です 。 
例えば 、 バージョン 2 . 0 b 1 と 2 . 0 . 1 の 短い バージョン 番号 は いずれ も 2 . 0 に なり ます 。 
全て の パッケージ に これ が 当てはまる わけ で は あり ませ ん ; setshortversion を 使わ なけれ ば 、 この マクロ は 空文字 に 展開 さ れ ます 。 
version マクロ も 参照 し て ください 。 
強く 強調 さ れ た テキスト です ; ボールド フォント で 表現 さ れ ます 。 
URL で 指定 し た ターゲット を 指す ハイパーテキストリンク に なり ます が 、 リンク テキスト を ドキュメント リソース 中 の タイトル に し て は なり ませ ん 。 
名前 を 使っ て リソース を 参照 する 場合 に は 、 citetitle マクロ を 使っ て ください 。 
全て の 形式 の 出力 が 任意 の ハイパーテキストリンク を サポート し て いる わけ で は あり ませ ん 。 
LaTeX 特有 の 多く の 文字 や 、 この マクロ 特有 の 文字 を 使っ た 場合 、 たいてい 正しい 出力 に なり ませ ん 。 
特に 、 チルダ 文字 ("~") は 誤っ て 処理 さ れ ます ; hex 形式 の 配列 に エン コード すれ ば うまく いく ので 、 チルダ の 代わり に は "% 7 e " を 使っ て ください 。 
URL ( または URN ) です 。 
URL は テキスト で 与え ます 。 
HTML や PDF の 出力 形式 で は 、 URL 文字 列 自体 も ハイパーリンク に なり ます 。 この マクロ は 、 特定 の タイトル を 持た ない 外部 リソース を 参照 する 際 に 利用 でき ます ; タイトル の ある リソース へ の 参照 は citetitle マクロ を 使っ て マーク し て ください 。 
特殊 文字 に関する 特別 な 扱い について は 、 ulink マクロ の 記述 中 の コメント を 参照 し て ください 。 
テキスト 中 で 変数 や 仮 引数 の 名前 です 。 
プリアンブル の release マクロ に 指定 さ れ て いる よう な 、 ドキュメント の 対象 と なっ て いる ソフトウェア の バージョン 番号 です 。 
shortversion マクロ も 参照 し て ください 。 
ある API について 、 ユーザ が その API を 一部 でも 利用 する 場合 に は 警告 し て おか ね ば なら ない よう な 重要 な 情報 です 。 
この マクロ は 注釈 が 終了 する 場所 を 視覚 的 に マーク し ない ので 、 段落 の 末尾 の 内容 に せ ね ば なり ませ ん 。 
text の 内容 は 完全 な 文 で 書き 、 適切 な 区切り を 入れ ね ば なり ませ ん 。 
note と の 違い は 、 セキュリティ に関する 情報 の 場合 い は 、 warning の 方 が 推奨 さ れ て いる という 点 です 。 
以下 の 二つ の マクロ は 、 ある リリース から 別 の リリース へ の 変更 点 に関する 情報 を 説明 する とき に 使い ます 。 
段落 一つ 程度 で 説明 さ れ て いる よう な 内容 に対して 注釈 を 入れる 場合 に は 、 その 段落 の 末尾 に 一行 空け て 記述 し ます 。 
複数 の 段落 から なる 場合 に は 、 説明 全体 の 末尾 に 一行 空け て 記述 し ます 。 
versionadded と versionchanged の 両方 を 書か ね ば なら ない 場合 に は 、 versionadded を 先 に し て ください 。 バージョン 番号 は 、 リリース さ れ た 順番 に 並ん で い なけれ ば なり ませ ん 。 
また 、 これら の マクロ は 利用 できる 環境 について の 説明 より も 前 に 置か ね ば なり ませ ん 。 
実際 に マクロ を 書く 場所 は 、 説明 として わかり やすい よう に し なけれ ば なり ませ ん から 、 必要 に 応じ て 調整 し て も かまい ませ ん 。 
文章 中 で 説明 し て いる 機能 が 変更 さ れ た ( 新た な パラメタ の 追加 、 副作用 の 変化 、 など ) 時 の Python の バージョン 番号 を 示す ため に 使い ます 。 explanation は 変更 内容 の 短い 説明 で 、 大文字 から 始まる 短い 文章 に し ます ; 末尾 の ピリオド は フォーマット 処理 時 に 追加 さ れ ます 。 
通常 、 この マクロ を モジュール 全体 に 適用 する こと は あり ませ ん 。 
IncrementalParser の インスタンス は 次 の 追加 メソッド を 提供 し ます 。 : 
data の チャンク を 処理 し ます 。 
ドキュメント の 終わり を 決定 し ます 。 
終わり に 達し た 時点 で ドキュメント が 整形 式 で ある か どう か を 判別 、 ハンドラ を 起動 後 、 パース 時 に 使用 し た 資源 を 解放 し ます 。 
この メソッド は close が 呼び出さ れ た 後 、 次 の ドキュメント を パース 可能 に する ため 、 パーサ の リセット する の に 呼び出さ れ ます 。 
close 後 、 reset を 呼び出さ ず に parse や feed を 呼び出し た 場合 の 戻り 値 は 未定義 です 。 
論理 行 の 行頭 に ある 、 先頭 の 空白 ( スペース および タブ ) の 連なり は 、 その 行 の インデント レベル を 計算 する ため に 使わ れ ます 。 インデント レベル は 、 実 行文 の グループ 化 方法 を 決定 する ため に 用い られ ます 。 
まず 、 タブ は ( 左 から 右 の 方向 に ) 1 つ から 8 つ の スペース で 置き換え られ 、 置き換え 後 の 文字 列 の 終わり の 位置 まで の 文字数 が 8 の 倍数 に なる よう に 調整 さ れ ます ( Unix で 使わ れ て いる 規則 と 同じ に なる よう 意図 さ れ て い ます )。 
次に 、 空白 文字 で ない 最初 の 文字 まで の スペース の 総数 から 、 その 行 の インデント を 決定 し ます 。 
バックス ラッシュ を 使っ て インデント を 複数 の 物理 行 に 分割 する こと は でき ませ ん ; 最初 の バックス ラッシュ まで の 空白 が インデント を 決定 し ます 。 
プラットフォーム 間 の 互換 性 に関する 注意 : 非 UNIX プラットフォーム における テキストエディタ の 性質 上 、 一つ の ソース ファイル 内 で タブ と インデント を 混在 さ せ て 使う の は 賢明 で は あり ませ ん 。 
また 、 プラットフォーム によって は 、 最大 インデント レベル を 明示 的 に 制限 し て いる かも しれ ませ ん 。 フォーム フィード 文字 が 行 の 先頭 に あっ て も 構い ませ ん ; フォーム フィード 文字 は 上 の インデント レベル 計算 時 に は 無視 さ れ ます 。 
スタック の 先頭 に 積ま れ て ゆく 数字 は 、 常に スタック の 末尾 から 先頭 にかけて 厳密 に 増加 する よう に なっ て い ます 。 
各 論理 行 の 開始 位置 において 、 その 行 の インデント レベル 値 が スタック の 先頭 の 値 と 比較 さ れ ます 。 
値 が 等しけれ ば 何 も し ませ ん 。 インデント レベル 値 が スタック 上 の 値 より も 大きけれ ば 、 インデント レベル 値 は スタック に 積ま れ 、 INDENT トーク ン が 一つ 生成 さ れ ます 。 
インデント レベル 値 が スタック 上 の 値 より も 小さい 場合 、 その 値 は スタック 内 の いずれ か の 値 と 等しく なけれ ば なり ませ ん ; スタック 上 の インデント レベル 値 より も 大きい 値 は すべて 除去 さ れ 、 値 が 一つ 除去 さ れる ごと に DEDENT トーク ン が 一つ 生成 さ れ ます 。 
ファイル の 末尾 で は 、 スタック に 残っ て いる ゼロ より 大きい 値 は 全て 除去 さ れ 、 値 が 一つ 除去 さ れる ごと に DEDENT トーク ン が 一つ 生成 さ れ ます 。 以下 の 例 に 正しく ( しか し 当惑 さ せる よう に ) インデント さ れ た Python コード の 一部 を 示し ます : 
以下 の 例 は 、 様々 な インデント エラー に なり ます : 
( 実際 は 、 最初 の 3 つ の エラー は パーザ によって 検出 さ れ ます ; 最後 の エラー のみ が 字句 解析 器 で 見つかり ます -- return r の インデント は 、 スタック から 逐次 除去 さ れ て いく どの インデント レベル 値 と も 一致 し ませ ん ) 
8 . 1 スレッド 状態 ( thread state ) 
8 . 初期 化 ( initialization )、 終了 処理 ( finalization )、 スレッド 
Python インタプリタ を 初期 化 し ます 。 
Python の 埋め込み を 行う アプリケーション で は 、 他 の あらゆる Python / C API を 使用 する より も 前 に この 関数 を 呼び出さ ね ば なり ませ ん ; ただし 、 Py _ SetProgramName () 
, および PyEval _ AcquireLock () 
は 例外 です 。 
を 生成 し ます 。 
( sys . path ) も 初期 化 し ます 。 
sys . argv の 設定 は 行い ませ ん ; 設定 する に は 、 PySys _ SetArgv () 
を 使っ て ください 。 
この 関数 を ( Py _ Finalize () 
を 呼ば ず に ) 再度 呼び出し て も 何 も 行い ませ ん 。 
戻り 値 は あり ませ ん ; 初期 化 が 失敗 すれ ば 、 それ は 致命 的 な エラー です 。 
initsigs に 1 を 指定 すれ ば Py _ Initialize () と 同じ 処理 を 実行 し ます が 、 Python 埋め込み アプリケーション で は initsigs を 0 として 初期 化 時 に シグナル ハンドラ の 登録 を スキップ する こと が でき ます 。 
Python インタプリタ が すでに 初期 化 済み の 場合 に 真 ( 非 ゼロ ) を 返し 、 そう で ない 場合 に は 偽 ( ゼロ ) を 返し ます 。 
Py _ Finalize () を 呼び出す と 、 次に Py _ Initialize () を 呼び出す まで この 関数 は 偽 を 返し ます 。 
Py _ Initialize () と それ 以後 の Python / C API 関数 で 行っ た 全て の 初期 化 処理 を 取り消し 、 最後 の Py _ Initialize () 呼び出し 以後 に Python インタプリタ が 生成 し た 全て の サブ インタプリタ ( sub - interpreter , 下記 の Py _ NewInterpreter () を 参照 ) を 消去 し ます 。 
理想 的 な 状況 で は 、 この 関数 によって Python インタプリタ が 確保 し た メモリ は 全て 解放 さ れ ます 。 
この 関数 を ( Py _ Initialize () を 呼ば ず に ) 再度 呼び出し て も 何 も 行い ませ ん 。 
戻り 値 は あり ませ ん ; 終了 処理 中 の エラー は 無視 さ れ ます 。 この 関数 が 提供 さ れ て いる 理由 は いくつ か あり ます 。 
Python の 埋め込み を 行っ て いる アプリケーション で は 、 アプリケーション を 再 起動 する こと なく Python を 再 起動 し たい こと が あり ます 。 
また 、 動的 ロード 可能 イブラリ ( あるいは DLL ) から Python インタプリタ を ロード する アプリケーション で は 、 DLL を アンロード する 前 に Python が 確保 し た メモリ を 解放 し たい と 考える かも しれ ませ ん 。 
アプリケーション 内 で 起き て いる メモリ リーク を 追跡 する 際 に 、 開発 者 は Python が 確保 し た メモリ を アプリケーション の 終了 前 に 解放 さ せ たい と 思う 場合 も あり ます 。 
バグ および 注意 事項 : モジュール や モジュール 内 の オブジェクト は ランダム な 順番 で 削除 さ れ ます ; この ため 、 他 の オブジェクト ( 関数 オブジェクト も 含み ます ) や モジュール に 依存 する デストラクタ (__ del __() メソッド ) が 失敗 し て しまう こと が あり ます 。 
動的 に ロード さ れる よう に なっ て いる 拡張 モジュール が Python によって ロード さ れ て い た 場合 、 アンロード さ れ ませ ん 。 
Python が 確保 し た メモリ が わずか ながら 解放 さ れ ない かも しれ ませ ん ( メモリ リーク を 発見 し たら 、 どう か 報告 し て ください )。 
オブジェクト 間 の 循環 参照 に 捕捉 さ れ て いる メモリ は 解放 さ れ ない こと が あり ます 。 
拡張 モジュール が 確保 し た メモリ は 解放 さ れ ない こと が あり ます 。 
拡張 モジュール によって は 、 初期 化 ルーチン を 2 度 以上 呼び出す と 正しく 動作 し ない こと が あり ます ; こうした 状況 は 、 Py _ Initialize () や Py _ Finalize () を 2 度 以上 呼び出す と 起こり 得 ます 。 
新しい サブ インタプリタ ( sub - interpreter ) を 生成 し ます 。 
サブ インタプリタ と は 、 ( ほぼ 完全 に ) 個別 に 分割 さ れ た Python コード の 実行 環境 です 。 
特に 、 新しい サブ インタプリタ は 、 import さ れる モジュール 全て について 個別 の バージョン を 持ち 、 これ に は 基盤 と なる モジュール __ builtin __ 
および sys 
も 含ま れ ます 。 
ロード 済み の モジュール から なる テーブル ( sys . modules ) および モジュール 検索 パス ( sys . path ) も サブ インタプリタ 毎 に 別個 の もの に なり ます 。 
新た な サブ インタプリタ 環境 に は sys . argv 変数 が あり ませ ん 。 
また 、 サブ インタプリタ は 新た な 標準 I / O ストリーム sys . stdin , sys . stdout および sys . stderr を 持ち ます ( と は いえ 、 これら の ストリーム は 根底 に ある C ライブラリ の 同じ FILE 構造 体 を 参照 し て い ます )。 
戻り 値 は 、 新た な サブ インタプリタ が 生成 し た スレッド 状態 ( thread state ) オブジェクト の うち 、 最初 の もの を 指し て い ます 。 
この スレッド 状態 が 現在 の スレッド 状態 ( current thread state ) に なり ます 。 
実際 の スレッド が 生成 さ れる わけ で は ない ので 注意 し て ください ; 下記 の スレッド 状態 に関する 議論 を 参照 し て ください 。 
新た な インタプリタ の 生成 に 失敗 する と 、 NULL を 返し ます ; 例外 状態 は セット さ れ ませ ん が 、 これ は 例外 状態 が 現在 の スレッド 状態 に 保存 さ れる こと に なっ て い て 、 現在 の スレッド 状態 なる もの が 存在 し ない こと が ある から です 。 
( 他 の Python / C API 関数 の よう に 、 この 関数 を 呼び出す 前 に は グローバル インタプリタ ロック ( global interpreter lock ) が 保持 さ れ て い なけれ ば なら ず 、 関数 が 処理 を 戻し た 際 に も 保持 さ れ た まま に なり ます ; しか し 、 他 の Python / C API 関数 と は 違い 、 関数 から 戻っ た とき の 現在 の スレッド 状態 が 関数 に 入る とき と 同じ と は 限ら ない ので 注意 し て ください )。 拡張 モジュール は 以下 の よう な 形 で ( サブ ) インタプリタ 間 で 共有 さ れ ます : ある 特定 の 拡張 モジュール を 最初 に import する と 、 モジュール を 通常 通り に 初期 化 し 、 その モジュール の 辞書 の ( 浅い ) コピー を しまい 込ん で おき ます 。 
は 再度 呼び出さ れ ます 。 
バグ と 注意 事項 : サブ インタプリタ ( と メイン インタプリタ ) は 同じ プロセス の 一部分 な ので 、 インタプリタ 間 の 絶縁 性 は 完璧 で は あり ませ ん -- 例えば 、 
os . close () の よう な 低 レベル の ファイル 操作 を 使う と 、 ( 偶然 なり 故意 なり に ) 互い の インタプリタ 下 に ある 開か れ た ファイル に 影響 を 及ぼせ て しまい ます 。 
拡張 モジュール を ( サブ ) インタプリタ 間 で 共有 する 方法 の ため に 、 拡張 モジュール によって は 正しく 動作 し ない かも しれ ませ ん ; 拡張 モジュール が ( 静的 な ) グローバル 変数 を 利用 し て いる 場合 や 、 拡張 モジュール が 初期 化 後 に 自身 の モジュール 辞書 を 操作 する 場合 に は 特に そう です 。 
一つ の サブ インタプリタ で 生成 さ れ た オブジェクト は 他 の サブ インタプリタ の 名前 空間 へ の 挿入 が 可能 です ; ユーザ 定義 関数 、 メソッド 、 インスタンス および クラス を サブ インタプリタ を サブ インタプリタ 間 で 共有 し ない よう に 十分 注意 し て ください 。 
という の は 、 これら の 共有 オブジェクト が 実行 し た import 文 は 間違っ た ( サブ ) インタプリタ の ロード 済み モジュール 辞書 に 影響 を 及ぼす 場合 が ある から です ( XXX この 問題 は 修正 が 難しい バグ で 、 将来 の リリース で 解決 さ れる 予定 です ) 
指定 さ れ た スレッド 状態 tstate で 表現 さ れる ( サブ ) インタプリタ を 抹消 し ます 。 tstate は 現在 の スレッド 状態 で なけれ ば なり ませ ん 。 
下記 の スレッド 状態 に関する 議論 を 参照 し て ください 。 
関数 呼び出し が 戻っ た とき 、 現在 の スレッド 状態 は NULL に なっ て い ます 。 
この インタプリタ に 関連付け られ た 全て の スレッド 状態 は 抹消 さ れ ます 。 
( この 関数 を 呼び出す 前 に は グローバル インタプリタ ロック を 保持 し て おか ね ば なら ず 、 ロック は 関数 が 戻っ た とき も 保持 さ れ て い ます 。 
は 、 その 時点 で 明示 的 に 抹消 さ れ て い ない 全て の サブ インタプリタ を 抹消 し ます 。 
この 関数 を 呼び出す なら 、 最初 に Py _ Initialize () 
を 呼び出す より も 前 に 呼び出さ ね ば なり ませ ん 。 
この 引数 値 は 、 Py _ GetPath () 
や 、 以下 に 示す その他 の 関数 が 、 インタプリタ の 実行 可能 形式 から Python ランタイムライブラリ へ の 相対 パス を 取得 する ため に 使わ れ ます 。 
デフォルト の 値 は ' python ' です 。 
引数 は ゼロ 終端 さ れ た キャラクタ 文字 列 で 、 静的 な 記憶 領域 に 入っ て い なけれ ば なら ず 、 その 内容 は プログラム の 実行 中 に 変更 し て は なり ませ ん 。 
Python インタプリタ 内 の コード で 、 この 記憶 領域 の 内容 を 変更 する もの は 一切 あり ませ ん 。 
で 設定 さ れ た プログラム 名 か 、 デフォルト の プログラム 名 を 返し ます 。 
関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
プラットフォーム 非 依存 の ファイル 群 が インストール さ れ て いる 場所 で ある prefix を 返し ます 。 
この 値 は Py _ SetProgramName () で セット さ れ た プログラム 名 や いくつ か の 環境 変数 を もと に 、 数々 の 複雑 な 規則 から 導出 さ れ ます ; 例えば 、 プログラム 名 が '/ usr / local / bin / python ' の 場合 、 prefix は '/ usr / local ' に なり ます 。 関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
この 値 は トップ レベル の Makefile に 指定 さ れ て いる 変数 prefix や 、 ビルド 値 に configure スクリプト に 指定 し た -- prefix 引数 に 対応 し て い ます 。 
この 値 は Python コード から は sys . prefix として 利用 でき ます 。 
Unix でも 有用 です 。 
次に 説明 する 関数 も 参照 し て ください 。 
プラットフォーム 依存 の ファイル が インストール さ れ て いる 場所 で ある exec - prefix を 返し ます 。 
この 値 は Py _ SetProgramName () で セット さ れ た プログラム 名 や いくつ か の 環境 変数 を もと に 、 数々 の 複雑 な 規則 から 導出 さ れ ます ; 例えば 、 プログラム 名 が '/ usr / local / bin / python ' の 場合 、 exec - prefix は '/ usr / local ' に なり ます 。 
関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
この 値 は トップ レベル の Makefile に 指定 さ れ て いる 変数 exec _ prefix や 、 ビルド 値 に configure スクリプト に 指定 し た -- exec - prefix 引数 に 対応 し て い ます 。 
この 値 は Python コード から は sys . exec _ prefix として 利用 でき ます 。 
Unix のみ で 有用 です 。 背景 : プラットフォーム 依存 の ファイル ( 実行 形式 や 共有 ライブラリ ) が 、 別個 の ディレクトリ ツリー 内 に インストール さ れ て いる 場合 、 exec - prefix は prefix と 異なり ます 。 
典型 的 な インストール 形態 で は 、 プラットフォーム 非 依存 の ファイル が / usr / local に 収め られる 一方 、 プラットフォーム 依存 の ファイル は / usr / local / plat サブ ツリー に 収め られ ます 。 概して 、 プラットフォーム と は 、 ハードウェア と ソフトウェア ファミリ の 組み合わせ を 指し ます 。 
例えば 、 Solaris 2 . x を 動作 さ せ て いる Sparc マシン は 全て 同じ プラットフォーム で ある と みなし ます が 、 Solaris 2 . x を 動作 さ せ て いる Intel マシン は 違う プラットフォーム に なり ます し 、 同じ Intel マシン で も Linux を 動作 さ せ て いる なら また 別 の プラットフォーム です 。 
一般 的 に は 、 同じ オペレーティングシステム で も 、 メジャーリビジョン の 違う もの は 異なる プラットフォーム です 。 
Python 実行 可能 形式 の 完全 な プログラム 名 を 返し ます ; この 値 は デフォルト の モジュール 検索 パス を ( 前述 の Py _ SetProgramName () で 設定 さ れ た ) プログラム 名 から 導出 する 際 に 副作用 的 に 計算 さ れ ます 。 
関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
この 値 は Python コード から は sys . executable として 利用 でき ます 。 
Unix のみ で 有用 です 。 char * 
デフォルト モジュール 検索 パス を 返し ます ; パス は ( 上 の Py _ SetProgramName () で 設定 さ れ た ) プログラム 名 と 、 いくつ か の 環境 変数 から 計算 さ れ ます 。 
戻り 値 と なる 文字 列 は 、 プラットフォーム 依存 の パスデリミタ 文字 で 分割 さ れ た 一連 の ディレクトリ 名 から なり ます 。 
デリミタ 文字 は Unix で は ":"、 Windows で は ";" 、 Macintosh で は " n " ( ASCII 改行 文字 ) です 。 
この 値 は Python コード から は リスト sys . path として 利用 でき ます 。 
この リスト は 、 値 を 修正 し て 将来 モジュール を ロード する 際 に 使う 検索 パス を 変更 でき ます 。 
Python インタプリタ の バージョン を 返し ます 。 
バージョン は 、 
" 1 . 5 (# 67 , Dec 31 1997 , 22 : 34 : 28 ) [ GCC 2 . 7 . 2 . 2 ]" よう な 形式 の 文字 列 です 。 
第 一 ワード ( 最初 の スペース 文字 まで ) は 、 現在 の Python の バージョン です ; 最初 の 三 文字 は 、 メジャー バージョン と マイナー バージョン 、 そして それ を 分割 し て いる ピリオド です 。 
この 値 は Python コード から は sys . version として 利用 でき ます 。 
現在 の プラットフォーム の プラットフォーム 識別 文字 列 を 返し ます 。 
Unix で は 、 オペレーティングシステム の `` 公式 の '' 名前 を 小文字 に 変換 し 、 後ろ に メジャーリビジョン 番号 を 付け た 構成 に なっ て い ます ; 例えば Solaris 2 . x は 、 SunOS 5 . x , として も 知ら れ て い ます が 、 ' sunos 5 ' に なり ます 。 
Macintosh で は ' mac ' です 。 
Windows で は ' win ' です 。 
関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
この 値 は Python コード から は sys . platform として 利用 でき ます 。 
現在 の Python バージョン に対する 公式 の 著作 権 表示 文字 列 、 例えば ' Copyright 1991 - 1995 Stichting Mathematisch Centrum , Amsterdam ' を 返し ます 。 
関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
この 値 は Python コード から は sys . copyright として 利用 でき ます 。 
現在 使っ て いる バージョン の Python を ビルド する 際 に 用い た コンパイラ を 示す 文字 列 を 、 各 括弧 で 囲っ た 文字 列 を 返し ます 。 例えば : 
"[ GCC 2 . 7 . 2 . 2 ]" に なり ます 。 
この 値 は Python コード から は sys . version の 一部 として 取り出せ ます 。 
現在 使っ て いる Python インタプリタ インスタンス の 、 シーケンス 番号 と ビルド 日時 に関する 情報 を 返し ます 。 例えば 
に なり ます 。 関数 が 返す 文字 列 ポインタ は 静的 な 記憶 領域 を 返し ます ; 関数 の 呼び出し 側 は この 値 を 変更 でき ませ ん 。 
argc および argv に 基づい て sys . argv を 設定 し ます 。 
この パラメタ は プログラム の main () 
に 渡し た パラメタ に 似 て い ます が 、 最初 の 要素 が Python インタプリタ の 宿主 と なっ て いる 実行 形式 の 名前 で は なく 、 実行 さ れる スクリプト 名 を 参照 し なけれ ば なら ない 点 が 違い ます 。 
実行 する スクリプト が ない 場合 、 argv の 最初 の 要素 は 空文字 列 に し て も かまい ませ ん 。 
8 . 1 スレッド 状態 ( thread state ) と グローバル インタプリタ ロック ( global interpreter lock ) 
8 . 1 スレッド 状態 ( thread state ) 
この InputSource の 公開 識別子 を セット し ます 。 
この InputSource の 公開 識別子 を 返し ます 。 
この InputSource の システム 識別子 を セット し ます 。 
この InputSource の システム 識別子 を 返し ます 。 
この InputSource の 文字 エン コーディング を 取得 し ます 。 
この 入力 ソース の バイト ストリーム を 取得 し ます 。 
getEncoding メソッド は 、 この バイト ・ ストリーム の 文字 エン コーディング を 返し ます 。 認識 でき ない とき は None を 返し ます 。 
この 入力 ソース の 文字 ストリーム を セット し ます ( ストリーム は Python 1 . 6 の Unicode - wrapped な ファイル 風 オブジェクト で 、 ユニ コード 文字 列 へ の 変換 を サポート し て い なけれ ば なり ませ ん )。 
なお 、 文字 ストリーム が 指定 さ れ て も SAX パーサ は 無視 、 システム 識別子 と みなし 、 バイト ・ ストリーム を 使っ て URI に 接続 しよ う と し ます 。 
この 入力 ソース の 文字 ストリーム を 取得 し ます 。 
リスト で 指定 し た クラス の 継承 関係 から 、 ネスト し た リスト を 作成 し ます 。 
ネスト し た リスト に は 、 直前 の 要素 から 派生 し た クラス が 格納 さ れ ます 。 
各 要素 は 長 さ 2 の タプル で 、 クラス と 基底 クラス の タプル を 格納 し て い ます 。 
unique が 真 の 場合 、 各 クラス は 戻り 値 の リスト 内 に 一つ だけ しか 格納 さ れ ませ ん 。 
真 で なけれ ば 、 多重 継承 を 利用 し た クラス と その 派生 クラス は 複数 回 格納 さ れる 場合 が あり ます 。 
func ) 関数 の 引数 名 と デフォルト 値 を 取得 し ます 。 
getargspec () で 取得 し た 4 つ の 値 を 読み やすく 整形 し ます 。 
残り の 4 つ の 引数 は オプション で 、 名前 と 値 を 文字 列 に 変換 する 整形 関数 を 指定 する 事 が でき ます 。 
getargvalues () で 取得 し た 4 つ の 値 を 読み やすく 整形 し ます 。 
cls クラス の 基底 クラス ( cls 自身 も 含む ) を 、 メソッド の 優先 順位 順 に 並べ た タプル を 返し ます 。 結果 の リスト 内 で 各 クラス は 一 度 だけ 格納 さ れ ます 。 
メソッド の 優先 順位 は クラス の 型 によって 異なり ます 。 
非常 に 特殊 な ユーザ 定義 の メタ クラス を 使用 し て い ない 限り 、 cls が 戻り 値 の 先頭 要素 と なり ます 。 
オブジェクト の ドキュメンテーション 文字 列 を 取得 し ます 。 タブ は スペース に 展開 さ れ ます 。 
コード ブロック に 合わせ て インデント さ れ て いる docstring を 整形 する ため 、 2 行 目 以降 で は 行頭 の 空白 は 削除 さ れ ます 。 
オブジェクト が クラス ・ 関数 ・ メソッド の 何れ か の 場合 は 、 オブジェクト の ソース コード の 直後 に ある コメント 行 ( 複数 行 ) を 、 単一 の 文字 列 として 返し ます 。 オブジェクト が モジュール の 場合 、 ソース ファイル の 先頭 に ある コメント を 返し ます 。 
オブジェクト を 定義 し て いる ( テキスト または バイナリ の ) ファイル の 名前 を 返し ます 。 
オブジェクト が 組み込み モジュール ・ クラス ・ 関数 の 場合 は TypeError 例外 が 発生 し ます 。 
オブジェクト を 定義 し て いる モジュール を 推測 し ます 。 
オブジェクト を 定義 し て いる Python ソース ファイル の 名前 を 返し ます 。 
オブジェクト が 組み込み の モジュール 、 クラス 、 関数 の 場合 に は 、 TypeError 例外 が 発生 し ます 。 
オブジェクト の ソース 行 の リスト と 開始 行 番号 を 返し ます 。 引数 に は モジュール ・ クラス ・ メソッド ・ 関数 ・ トレースバック・フレーム・コードオブジェクト を 指定 する 事 が でき ます 。 
戻り 値 は 指定 し た オブジェクト に 対応 する ソース コード の ソース 行 リスト と 元 の ソース ファイル 上 で の 開始 行 と なり ます 。 
ソース コード を 取得 でき ない 場合 は IOError が 発生 し ます 。 
オブジェクト の ソース コード を 返し ます 。 引数 に は モジュール ・ クラス ・ メソッド ・ 関数 ・ トレースバック・フレーム・コードオブジェクト を 指定 する 事 が でき ます 。 
ソース コード は 単一 の 文字 列 で 返し ます 。 
以下 の 関数 に は 、 戻り 値 として `` フレーム レコード '' を 返す 関数 が あり ます 。 `` フレーム レコード '' は 長 さ 6 の タプル で 、 以下 の 値 を 格納 し て い ます : フレーム オブジェクト ・ ファイル 名 ・ 実行 中 の 行 番号 ・ 関数 名 ・ コンテキスト の ソース 行 の リスト ・ ソース 行 リスト の 実行 中 行 の インデックス 。 
警告 : フレーム レコード の 最初 の 要素 など の フレーム オブジェクト へ の 参照 を 保存 する と 、 循環 参照 に なっ て しまう 場合 が あり ます 。 
循環 参照 が できる と 、 Python の 循環 参照 検出 機能 を 有効 に し て い た として も 関連 する オブジェクト が 参照 し て いる すべて の オブジェクト が 解放 さ れ にくく なり 、 明示 的 に 参照 を 削除 し ない と メモリ 消費 量 が 増大 する 恐れ が あり ます 。 
参照 の 削除 を Python の 循環 参照 検出 機能 に まかせる 事 も でき ます が 、 finally 節 で 循環 参照 を 解除 すれ ば 確実 に フレーム ( と その ローカル 変数 ) は 削除 さ れ ます 。 
また 、 循環 参照 検出 機能 は Python の コンパイル オプション や 
. disable () で 無効 と さ れ て いる 場合 が あり ます ので 注意 が 必要 です 。 
例 : 
以下 の 関数 で オプション 引数 context に は 、 戻り 値 の ソース 行 リスト に 何 行 分 の ソース を 含める か を 指定 し ます 。 ソース 行 リスト に は 、 実行 中 の 行 を 中心 として 指定 さ れ た 行 数 分の リスト を 返し ます 。 
フレーム 又は トレースバックオブジェクト の 情報 を 取得 し ます 。 
フレーム レコード の 先頭 要素 を 除い た 、 長 さ 5 の タプル を 返し ます 。 
指定 し た フレーム と 、 その 外側 の 全 フレーム の フレーム レコード を 返し ます 。 
外側 の フレーム と は frame が 生成 さ れる まで の すべて の 関数 呼び出し を 示し ます 。 戻り 値 の リスト の 先頭 は frame の フレーム レコード で 、 末尾 の 要素 は frame の スタック に ある もっとも 外側 の フレーム の フレーム レコード と なり ます 。 
指定 し た フレーム と 、 その 内側 の 全 フレーム の フレーム レコード を 返し ます 。 
内 の フレーム と は frame から 続く 一連 の 関数 呼び出し を 示し ます 。 
戻り 値 の リスト の 先頭 は traceback の フレーム レコード で 、 末尾 の 要素 は 例外 が 発生 し た 位置 を 示し ます 。 
呼び出し 元 の フレーム オブジェクト を 返し ます 。 
呼び出し 元 スタック の フレーム レコード の リスト を 返し ます 。 
最初 の 要素 は 呼び出し 元 の フレーム レコード で 、 末尾 の 要素 は スタック に ある もっとも 外側 の フレーム の フレーム レコード と なり ます 。 
実行 中 の フレーム と 処理 中 の 例外 が 発生 し た フレーム の 間 の フレーム レコード の リスト を 返し ます 。 
最初 の 要素 は 呼び出し 元 の フレーム レコード で 、 末尾 の 要素 は 例外 が 発生 し た 位置 を 示し ます 。 
install コマンド は 最初 に ビルドコマンド を 実行 済み に し て おい て から 、 サブ コマンド install _ lib を 実行 し ます 。 
この コマンド は 配布 物 中 に 提供 さ れ て いる 全て の データファイル を インストール し ます 。 
この コマンド は 配布 物 中 の 全て の ( Python ) スクリプト を インストール し ます 。 
インスタンス オブジェクト 固有 の 関数 は きわめて わずか です 。 
クラス インスタンス の 型 オブジェクト です 。 
obj が インスタンス の 場合 に 真 を 返し ます 。 
特定 クラス の 新た な インスタンス を 生成 し ます 。 
パラメタ arg および kw は それぞれ オブジェクト の コンス トラクタ に 渡す 実 引数 および キーワード パラメタ として 使わ れ ます 。 
特定 クラス の 新た な インスタンス を 生成 し ます 。 class は 新た に 作成 する オブジェクト の クラス です 。 
dict パラメタ は オブジェクト の __ dict __ に 使わ れ ます ; dict が NULL なら 、 インスタンス 用 に 新た な 辞書 が 作成 さ れ ます 。 
この PyObject の サブ タイプ は Python の 整数 型 オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の ( 長 整数 で ない ) 整数 型 を 表現 し ます 。 
これ は types . IntType と 同じ オブジェクト です 。 
o が PyInt _ Type 型 か PyInt _ Type 型 の サブ タイプ で ある とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
o が PyInt _ Type 型 で 、 かつ PyInt _ Type 型 の サブ タイプ で ない とき に 真 を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
str の 文字 列 値 に 基づい て 、 新た な PyIntObject または PyLongObject を 返し ます 。 この とき base を 基数 として 文字 列 を 解釈 し ます 。 
pend が NULL で なけれ ば 、 * pend 
は str 中 で 数 が 表現 さ れ て いる 部分 以後 の 先頭 の 文字 の アドレス を 指し て い ます 。 
base が 0 なら ば 、 str の 先頭 の 文字 列 に 基づい て 基数 を 決定 し ます : も し str が ' 0 x ' または ' 0 X ' で 始まっ て いれ ば 、 基数 に 16 を 使い ます ; str が ' 0 ' で 始まっ て いれ ば 、 基数 に 8 を 使い ます ; その他 の 場合 に は 基数 に 10 を 使い ます 。 
base が 0 で なけれ ば 、 base は 2 以上 36 以下 の 数 で なけれ ば なり ませ ん 。 
先頭 に 空白 が ある 場合 は 無視 さ れ ます 。 
数字 が 全く ない 場合 、 ValueError が 送出 さ れ ます 。 
使用 し て いる マシン の long int 型 で 表現 し 切れ ない くらい 大きな 数 が 文字 列 に 入っ て おり 、 オーバフロー 警告 が 抑制 さ れ て いれ ば 、 PyLongObject を 返し ます 。 
オーバフロー 警告 が 抑制 さ れ て い なけれ ば 、 NULL を 返し ます 。 
ival の 値 を 使っ て 新た な 整数 オブジェクト を 生成 し ます 。 現在 の 実装 で は 、 - 1 から 100 まで の 全て の 整数 に対する 整数 オブジェクト の 配列 を 保持 する よう に し て おり 、 この 範囲 の 数 を 生成 する と 、 実際 に は 既存 の オブジェクト に対する 参照 が 返る よう に なっ て い ます 。 
従って 、 1 の 値 を 変える こと すら 可能 です 。 
変え て しまっ た 場合 の Python の 挙動 は 未定義 です :-) 
オブジェクト が まだ PyIntObject で なけれ ば まず 型 キャスト を 試み 、 次に その 値 を 返し ます 。 
オブジェクト io の 値 を 返し ます 。 
エラー チェック を 行い ませ ん 。 
オブジェクト が まだ PyIntObject または PyLongObject で なけれ ば まず 型 キャスト を 試み 、 次に その 値 を unsigned long 型 で 返し ます 。 
この 関数 は オーバフロー を チェック し ませ ん 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
整数 および 長 整数 リテラル は 以下 の 字句 定義 で 記述 さ れ ます : 
長 整数 を 表す 末尾 の 文字 は 小文字 の " l " で も 大文字 の " L " でも かまい ませ ん が 、 " l " は " 1 " に 良く 似 て いる ので 、 常に " L " を 使う よう 強く 勧め ます 。 整数 で 表現 できる 最大 の 値 より も 大きい 整数 の リテラル ( 例えば 32 - bit 整数 を 使っ て いる 場合 に は 2147483647 ) は 、 長 整数 として 表現 できる 値 で あれ ば 受理 さ れ ます 。 
2 . 1 値 が メモリ 上 に 収まる か どう か という 問題 を 除け ば 、 長 整数 リテラル に は 値域 の 制限 が あり ませ ん 。 
整数 リテラル ( 最初 の 行 ) と 長 整数 リテラル ( 二 行 目 および 三 行 目 ) の 例 を 以下 に 示し ます : 
... 長 整数 として 表現 できる 値 で あれ ば 受理 さ れ ます 。 
バージョン 2 . 4 以前 の Python で は , 8 進 および 16 進 の リテラル の うち , 通常 の 整数 型 として 表現 可能 な 値 より 大きく , かつ 符号 無し の 32 - bit ( 32 - bit 演算 を 使う 計算 機 の 場合 ) 整数 で 表現 できる 最大 値 , すなわち 4294967296 より も 小さな 数 は , リテラル を 符号 無し 整数 として 表現 し た 値 から 4294967296 を 引い て 得 られる 負 の 整数 として 扱っ て い まし た . 
対話 モード で の 入力 は 、 以下 の 文法 の 下 に 構文 解析 さ れ ます : interactive _ input 
対話 モード で は 、 ( トップ レベル の ) 複合 文 の 最後 に 空白 行 を 入れ なく て は なら ない こと に 注意 し て ください ; これ は 、 複合 文 の 終端 を パーザ が 検出 する ため の 手がかり として 必要 です 。 
11 . インターネット プロトコル と その 支援 
この 章 で 記述 さ れる モジュール は 、 インターネット プロトコル と 関連 技術 の 支援 を 実装 し ます 。 
それら は 全て Python で 実装 さ れ て い ます 。 これら の モジュール の 大 部分 は 、 システム 依存 の モジュール 
が 存在 する こと が 必要 です が 、 これ は 現在 で は ほとんど の 一般 的 な プラットフォーム 上 で サポート さ れ て い ます 。 
ここ に 概観 を 示し ます 。 
ウェウブブラウザー の ため の 使い 易い コントローラー 
サーバ 側 で 動作 する スクリプト が フォーム の 内容 を 解釈 する ため に 使う ゲートウェイインタフェース 規格 の サポート 。 
設定 可能 な 、 CGI スクリプト の トレース バック 処理 機構 です 。 
URL による 任意 の ネットワーク リソース へ の アクセス ( socket が 必要 です )。 
様々 な プロトコル で URL を 開く ため の 拡張 可能 な ライブラリ 
HTTP および HTTPS プロトコル の クライアント ( ソケット を 必要 と し ます ) 。 
FTP プロトコルクライアント ( ソケット を 必要 と し ます )。 
gopher プロトコル の クライアント ( ソケット を 必要 と し ます )。 
POP 3 プロトコルクライアント ( sockets を 必要 と する ) 
NNTP プロトコルクライアント ( ソケット を 必要 と し ます )。 
SMTP プロトコル クライアント ( ソケット が 必要 です )。 
柔軟 性 の ある SMTP サーバ の 実装 
Telnet クライアントクラス 
URL を 解析 し て 構成 要素 に し ます 。 
ネットワーク サーバ 構築 の ため の フレーム ワーク 。 
基本 的 な 機能 を 持つ HTTP サーバ ( SimpleHTTPServer および CGIHTTPServer の 基底 クラス )。 
この モジュール は HTTP サーバ に 基本 的 な リクエスト ハンドラ を 提供 し ます 。 
CGI スクリプト の 実行 機能 を 持つ HTTP サーバ の ため の リクエスト 処理 機構 を 提供 し ます 。 
HTTP クライアント 用 の Cookie 処理 
HTTP 状態 管理 ( cookies ) の サポート 。 
基本 的 な XML - RPC サーバー の 実装 。 
セルフ - ドキュメンティング XML - RPC サーバ の 実装 。 
非同期 な ソケット 制御 サービス の ため の ベース クラス 
非同期 コマンド / レスポンス プロトコル の 開発 サポート 
ある いくつ か の こと が 起きる 可能 性 が あり ます : 
入力 は が 正しく ない 。 compile _ command () が 例外 ( SyntaxError か OverflowError ) を 起こし た 場合 。 
showsyntaxerror () メソッド の 呼び 出 によって 、 構文 トレース バック が 表示 さ れる でしょ う 。 runsource () は False を 返し ます 。 
入力 が 完全 。 
compile _ command () が コード オブジェクト を 返し た 場合 。 ( SystemExit を 除く 実行 時 例外 も 処理 する ) runcode () を 呼び出す こと によって 、 コード は 実行 さ れ ます 。 
runsource () は False を 返し ます 。 
次 の 行 を 要求 する ため に sys . ps 1 か sys . ps 2 の どちら を 使う か を 決定 する ため に 、 戻り 値 を 利用 でき ます 。 
コード オブジェクト を 実行 し ます 。 例外 が 生じ た とき は 、 トレース バック を 表示 する ため に showtraceback () が 呼び出さ れ ます 。 
呼び出し 側 は それ を 処理 する ため に 準備 し て おく べき です 。 
起き た ばかり の 構文 エラー を 表示 し ます 。 
起き た ばかり の 例外 を 表示 し ます 。 
文字 列 を 標準 エラー ストリーム ( sys . stderr ) へ 書き込み ます 。 必要 に 応じ て 適切 な 出力 処理 を 提供 する ため に 、 導出 クラス は これ を オーバーライド す べき です 。 
起動 する と 、 バージョン 情報 と "" プロンプト が 表示 さ れ ます 。 
標準 ドキュメント に 書か れ て いる インタプリタ と まったく 同じ よう に 使え ます 。 
Python / C API リファレンス マニュアル 
Python の アプリケーション プログラマ 用 インタフェース ( Application Programmer ' s Interface , API ) は 、 Python インタプリタ に対する 様々 な レベル で の アクセス 手段 を C や C ++ の プログラマ に 提供 し て い ます 。 
この API は 通常 C ++ から も 全く 同じ よう に 利用 できる の です が 、 簡潔 な 呼び名 に する ため に Python / C API と 名づけ られ て い ます 。 
根本 的 に 異なる 二つ の 目的 から 、 Python / C API が 用い られ ます 。 
第 一 は 、 特定 用途 の 拡張 モジュール ( extention module )、 すなわち Python インタプリタ を 拡張 する C で 書か れ た モジュール を 記述 する 、 という 目的 です 。 
第 二 は 、 より 大 規模 な アプリケーション 内 で Python を 構成 要素 ( component ) として 利用 する という 目的 です ; この テクニック は 、 一般 的 に は アプリケーション へ の Python の 埋め込み ( embedding ) と 呼び ます 。 
拡張 モジュール の 作成 は 比較的 わかり やすい プロセス で 、 `` 手引 書 ( cookbook )'' 的 な アプローチ で うまく 実現 でき ます 。 
作業 を ある程度 まで 自動 化 し て くれる ツール も いくつ か あり ます 。 
一方 、 他 の アプリケーション へ の Python の 埋め込み は 、 Python が でき て から 早い 時期 から 行わ れ て き まし た が 、 拡張 モジュール の 作成 に 比べる と やや 難解 です 。 
多く の API 関数 は 、 Python の 埋め込み で ある か 拡張 で ある か に 関わら ず 役立ち ます ; と は いえ 、 Python を 埋め込ん で いる ほとんど の アプリケーション は 、 同時に 自作 の 拡張 モジュール も 提供 する 必要 が 生じる こと に なる でしょ う から 、 Python を 実際 に アプリケーション に 埋め込ん で みる 前 に 拡張 モジュール の 書き方 に 詳しく なっ て おく の は よい 考え だ と 思い ます 。 
1 . 2 . 1 . 1 参照 カウント の 詳細 
1 . 導入 この リファレンス マニュアル は 、 Python プログラミング 言語 自体 に関する 記述 です 。 
チュートリアル として 書か れ た もの で は あり ませ ん 。 
私 は 本 マニュアル を できるだけ 正確 に 書こ う と する 一方 で 、 文法 や 字句 解析 以外 の 全て について 、 形式 化 さ れ た 仕様 記述 で は なく 英語 を 使う こと に し まし た 。 
一方 、 広く 使わ れ て いる Python 実装 は 現在 の ところ 唯一 ( 今や 第 二 の 実装 が 存在 し ます が !) な ので 、 特定 の クセ について は 、 特に 実装 によって 何らかの 制限 が 加え られ て いる 場合 に は 、 触れ て おく 価値 が あり ます 。 
従って 、 この テキスト 全体 にわたって 短い `` 実装 に関する 注釈 ( imprementation notes )'' が ちりばめ られ て い ます 。 Python 実装 は いずれ も 、 数々 の 組み込み モジュール と 標準 モジュール が 付属 し ます 。 
これら は ここ で は ドキュメント 化 さ れ て い ませ ん が 、 
で ドキュメント 化 さ れ て い ます 。 
いくつ か の 組み込み モジュール について は 、 言語 定義 と 重要 な かかわり を もっ て いる とき について 触れ て い ます 。 
1 . 1 本 マニュアル における 表記 法 
Python で は 二 種類 の イテレータオブジェクト を 提供 し て い ます 。 
一つ 目 は シーケンスイテレータ で 、 __ getitem __() メソッド を サポート する 任意 の シーケンス を 取り扱い ます 。 
二つ 目 は 呼び出し 可能 オブジェクト と センチ ネル 値 ( sentinel value ) を 扱い 、 シーケンス 内 の 要素 ごと に 呼び出し 可能 オブジェクト を 呼び出し て 、 センチ ネル 値 が 返さ れ た とき に 反復 処理 を 終了 し ます 。 
PySeqIter _ New () や 、 組み込み シーケンス 型 に対して 1 引数 形式 の 組み込み 関数 iter () を 呼び出し た とき に 返さ れる 、 イテレータオブジェクト の 型 オブジェクト です 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
PySeqIter _ Type の 型 が op の とき に 真 を 返し ます 。 
一般 的 な シーケンス オブジェクト seq を 扱う イテレータ を 返し ます 。 
反復 処理 は 、 シーケンス が 添字 指定 操作 の 際 に IndexError を 返し た とき に 終了 し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
PyCallIter _ New () や 、 組み込み 関数 iter () の 2 引数 形式 が 返す イテレータオブジェクト の 型 オブジェクト です 。 iter () built - in function . バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
PyCallIter _ Type の 型 が op の とき に 真 を 返し ます 。 
新た な イテレータ を 返し ます 。 
最初 の パラメタ callable は 引数 なし で 呼び出せる Python の 呼び出し 可能 オブジェクト なら なん でも かまい ませ ん ; callable は 、 呼び出さ れる たび に 次 の 反復 処理 対象 オブジェクト を 返さ なけれ ば なり ませ ん 。 
生成 さ れ た イテレータ は 、 callable が sentinel に 等しい 値 を 返す と 反復 処理 を 終了 し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
イテレータ を 扱う ため の 固有 の 関数 は 二つ しか あり ませ ん 。 
o が イテレータプロトコル を サポート する 場合 に 真 を 返し ます 。 
反復 処理 o における 次 の 値 を 返し ます 。 
オブジェクト が イテレータ の 場合 、 この 関数 は 反復 処理 における 次 の 値 を 取り出し ます 。 要素 が 何 も 残っ て い ない 場合 に は 例外 が セット さ れ て い ない 状態 で NULL を 返し ます 。 
オブジェクト が イテレータ で ない 場合 に は TypeError を 送出 し ます 。 要素 を 取り出す 際 に エラー が 生じる と NULL を 返し 、 発生 し た 例外 を 送出 し ます 。 
イテレータ の 返す 要素 にわたって 反復 処理 を 行う ループ を 書く と 、 C の コード は 以下 の よう に なる はず です : 
PyObject * iterator = PyObject _ GetIter ( obj ); PyObject * item ; if ( iterator == NULL ) {/* エラー の 伝播 処理 を ここ に 書く */} while ( item = PyIter _ Next ( iterator )) {/* 取り出し た 要素 で 何らかの 処理 を 行う */.../* 終わっ たら 参照 を 放棄 する */ Py _ DECREF ( item );} Py _ DECREF ( iterator ); if ( PyErr _ Occurred ()) {/* エラー の 伝播 処理 を ここ に 書く */} else {/* 別 の 処理 を 続ける */} 
以下 に 各 ツール の 一般 的 な 使い方 と 、 ツール の 組み合わせ の 例 を 示し ます 。 
以下 の 関数 は 全て 、 イテレータ を 作成 し て 返し ます 。 無限 長 の ストリーム の イテレータ を 返す 関数 も あり 、 この 場合 に は ストリーム を 中断 する よう な 関数 か ループ 処理 から 使用 し なけれ ば なり ませ ん 。 
先頭 の iterable の 全 要素 を 返し 、 次に 2 番目 の iterable の 全 要素 … と 全 iterable の 要素 を 返す イテレータ を 作成 し ます 。 
連続 し た シーケンス を 、 一つ の シーケンス として 扱う 場合 に 使用 し ます 。 
この 関数 は 以下 の スクリプト と 同等 です : 
n で 始まる 、 連続 し た 整数 を 返す イテレータ を 作成 し ます 。 n を 指定 し なかっ た 場合 、 デフォルト 値 は ゼロ です 。 
現在 、 Python の 長 整数 は サポート し て い ませ ん 。 
imap () で 連続 し た データ を 生成 する 場合 や izip () で シーケンス に 番号 を 追加 する 場合 など に 引数 として 使用 する こと が でき ます 。 
count () は オーバー フロー の チェック を 行い ませ ん 。 この ため 、 sys . maxint を 超える と 負 の 値 を 返し ます 。 
この 動作 は 将来 変更 さ れ ます 。 
iterable から 要素 を 取得 し 、 同時に その コピー を 保存 する イテレータ を 作成 し ます 。 
iterable の 全 要素 を 返す と 、 セーブ さ れ た コピー から 要素 を 返し 、 これ を 無限 に 繰り返し ます 。 
predicate が 真 で ある 限り は 要素 を 無視 し 、 その後 は 全て の 要素 を 返す イテレータ を 作成 し ます 。 
この イテレータ は 、 predicate が 真 の 間 は 全く 要素 を 返さ ない ため 、 最初 の 要素 を 返す まで に 長い 時間 が かかる 場合 が あり ます 。 
同じ キー を もつ よう な 要素 から なる iterable 中 の グループ に対して 、 キー と グループ を 返す よう な イテレータ を 作成 し ます 。 
key は 各 要素 に対する キー 値 を 計算 する 関数 です 。 
キー を 指定 し ない 場合 や None に し た 場合 、 デフォルト は オブジェクト の アイデンティティ 関数 を に なり 、 要素 を そのまま 返し ます 。 
通常 、 iterable は 同じ キー 関数 で 並べ 替え 済み で なけれ ば なり ませ ん 。 
返さ れる グループ は それ 自体 が イテレータ で 、 groupby () と iterable を 共有 し て い ます 。 
predicate が True と なる 要素 だけ を 返す イテレータ を 作成 し ます 。 predicate が None の 場合 、 値 が 真 で ある アイテム だけ を 返し ます 。 
この 関数 は 以下 の スクリプト と 同等 です : def ifilter ( predicate , iterable ): if predicate is None : predicate = boolfor x in iterable : if predicate ( x ): yield x 
predicate が False と なる 要素 だけ を 返す イテレータ を 作成 し ます 。 predicate が None の 場合 、 値 が 偽 で ある アイテム だけ を 返し ます 。 
この 関数 は 以下 の スクリプト と 同等 です : def ifilterfalse ( predicate , iterable ): if predicate is None : predicate = boolfor x in iterable : if not predicate ( x ): yield x 
iterables の 要素 を 引数 として funtion を 呼び出す イテレータ を 作成 し ます 。 
function が None の 場合 、 引数 の タプル を 返し ます 。 
map () と 似 て い ます が 、 最短 の iterable の 末尾 まで 到達 し た 後 は None を 補っ て 処理 を 続行 する の で は なく 、 終了 し ます 。 
これ は 、 map () に 無限 長 の イテレータ を 指定 する の は 多く の 場合 誤り です が ( 全 出力 が 評価 さ れ て しまう ため )、 imap () の 場合 に は 一般 的 で 役に立つ 方法 で ある ため です 。 
この 関数 は 以下 の スクリプト と 同等 です : def imap ( function , * iterables ): iterables = map ( iter , iterables ) while True : args = [ i . next () for i in iterables ] if function is None : yield tuple ( args ) else : yield function (* args ) 
iterable から 要素 を 選択 し て 返す イテレータ を 作成 し ます 。 start が 0 以外 で あれ ば 、 iterable の 先頭 要素 は start に 達する まで スキップ し ます 。 
以降 、 step が 1 以下 なら 連続 し た 要素 を 返し 、 1 以上 なら 指定 さ れ た 値 分 の 要素 を スキップ し ます 。 
stop が None で あれ ば 、 無限 に 、 もしくは iterable の 全 要素 を 返す まで 値 を 返し ます 。 None 以外 なら イテレータ は 指定 さ れ た 要素 位置 で 停止 し ます 。 
通常 の スライス と 異なり 、 start 、 stop 、 step に 負 の 値 を 指定 する 事 は でき ませ ん 。 
シーケンス 化 さ れ た データ から 関連 する データ を 取得 する 場合 ( 複数 行 から なる レポート で 、 三行 ごと に 名前 が 指定 さ れ て いる 場合 など ) に 使用 し ます 。 
各 iterable の 要素 を まとめる イテレータ を 作成 し ます 。 zip () に 似 て い ます が 、 リスト で は なく イテレータ を 返し ます 。 
複数 の イテレート 可能 オブジェクト に対して 、 同じ 繰り返し 処理 を 同時に 行う 場合 に 使用 し ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : イテレート 可能 オブジェクト を 指定 し ない 場合 、 TypeError 例外 を 送出 する 代わり に 長 さ ゼロ の イテレータ を 返し ます 。 
times を 指定 し ない 場合 、 無限 に 値 を 返し 続け ます 。 
imap () で 常に 同じ オブジェクト を 関数 の 引数 として 指定 する 場合 に 使用 し ます 。 
また 、 izip () で 作成 する タプル の 全 要素 に 常に 同じ オブジェクト を 指定 する 場合 に も 使用 する こと も でき ます 。 
iterables の 要素 を 引数 として funtion を 呼び出す イテレータ を 作成 し ます 。 
function の 引数 が 単一 の iterable に タプル として 格納 さ れ て いる 場合 (`` zip 済み '')、 imap () の 代わり に 使用 し ます 。 
imap () と starmap () で は function の 呼び出し 方法 が 異なり 、 imap () は function ( a , b )、 starmap () で は function (* c ) の よう に 呼び出し ます 。 この 関数 は 以下 の スクリプト と 同等 です : 
predicate が 真 で ある 限り iterable から 要素 を 返す イテレータ を 作成 し ます 。 
一つ の iterable から n 個 の 独立 し た イテレータ を 生成 し て 返し ます 。 
n == 2 の 場合 は 、 以下 の コード と 等価 に なり ます : def tee ( iterable ): def gen ( next , data ={}, cnt =[ 0 ]): for i in count (): if i == cnt [ 0 ]: item = data [ i ] = next () cnt [ 0 ] += 1 else : item = data . pop ( i ) yield itemit = iter ( iterable ) return ( gen ( it . next ), gen ( it . next )) 
この 節 で は 、 既存 の itertools を ビルディング ブロック として ツール セット を 拡張 する ため の レシピ を 示し ます 。 
iterable 全体 を を 一 度 に メモリ 上 に 置く より も 、 要素 を 一つ づつ 処理 する 方 が メモリ 効率 上 の 有利 さ を 保て ます 。 関数 形式 の まま ツール を リンク し て ゆく と 、 コード の サイズ を 減らし 、 一時 変数 を 減らす 助け に なり ます 。 
インタプリタ の オーバヘッド を もたらす for ループ や ジェネレータ を 使わ ず に 、 `` ベクトル 化 さ れ た '' ビルディング ブロック を 使う と 、 高速 な 処理 を 実現 でき ます 。 
2 . 3 . 2 予約 済み の 識別 子種 ( reserved classes 
以下 の 識別子 は 、 予約 語 、 または Python 言語 における キーワード ( keyword ) として 使わ れ 、 通常 の 識別子 として 使う こと は でき ませ ん 。 
キーワード は 厳密 に 下記 の 通り に 綴ら なけれ ば なり ませ ん : 
識別子 as は import 文 における 構文 の 一部 として 使わ れる こと が あり ます が 、 現在 の ところ 予約 語 で は あり ませ ん 。 将来 の Python の バージョン で は 、 識別子 as と None は ともに キーワード に なる 予定 です 。 
ラムダ 形式 ( lambda form , ラムダ 式 ( lambda expression )) は 、 構文 法的 に は 式 と 同じ 位置付け に なり ます 。 
ラムダ は 、 無名 関数 を 作成 できる 省略 記法 です ; 式 lambda arguments : expression 
は 、 関数 オブジェクト に なり ます 。 
ラムダ が 表す 無名 オブジェクト は 、 以下 の コード 
で 定義 さ れ た 関数 と 同様 に 動作 し ます 。 引数 リスト の 構文 法 について は 、 7 . 5 節 を 参照 し て ください 。 
ラムダ 形式 で 作成 さ れ た 関数 は 、 実 行文 ( statement ) を 含む こと が でき ない ので 注意 し て ください 。 
18 . Python 言語 サービス 
Python に は Python 言語 を 使っ て 作業 する とき に 役に立つ モジュール が たくさん 提供 さ れ て い ます 。 
これら の モジュール は トー クン の 切り出し 、 パース 、 構文 解析 、 バイト コード の ディス アセンブリ および その他 の さまざま な 機能 を サポート し て い ます 。 これら の モジュール に は 、 次 の もの が 含ま れ て い ます : 
Python ソース コード に対する 解析 木 へ の アクセス 。 
文字 列 が Python の キーワード か 否 か を 調べ ます 。 
Python ソース コード の ため の 字句 解析 器 。 
ディレクトリ ツリー 内 の Python の ソース ファイル で 問題 と なる 空白 を 検出 する ツール 。 
Python クラス デスクリプタ の 情報 抽出 サポート 
Python ソース ファイル を バイト コード ファイル へ コンパイル 。 
ディレクトリ に 含ま れる Python ソース ファイル を 、 一括 し て バイト コンパイル し ます 。 
現在 インストール さ れ て いる Python に 追加 する ため の モジュール 構築 、 および 実際 の インストール を 支援 する 。 
LaTeX は 、 次 の 節 で 紹介 する Python 固有 の ドキュメント クラス で 提供 し て いる マーク アップ の 他 に も 、 様々 な 環境 を 提供 し て い ます 。 
以下 に 挙げる 環境 は 、 Python の 標準 ドキュメント 内 で 使っ て いる 標準 の LaTeX の 環境 の 一部 です ; 詳しい 説明 は 今後 追加 し て ゆく 予定 です 。 
4 LaTeX 入門 この 節 で は 、 LaTeX の 概念 と 構文 法 について 簡単 に 紹介 し 、 ドキュメント の 作者 が `` TeXnician '' に なら なく て も ドキュメント を 十分 生産 的 に 書ける よう な 情報 を 提供 し ます 。 
この 節 を 読ん だ から と いっ て 、 LaTeX で ドキュメント を 書く 上 で 必要 な 全て は 学べ ませ ん ; LaTeX が 提供 し て いる 標準 の `` 環境 ( environment )'' について は 、 ここ で は 説明 し ませ ん 。 おそらく 、 Python ドキュメント の マーク アップ において 心 に 留め て おく べき 最も 重要 な 概念 は 、 TeX が 非 体系 的 な の に対して 、 LaTeX は TeX の 上 の レイヤ として 設計 さ れ て い て 、 本質 的 に は 構造 化 マーク アップ を サポート し て いる という こと です 。 
Python 特有 の マーク アップ は 、 標準 の LaTeX ドキュメント クラス で 提供 さ れ て いる 構造 を 拡張 し 、 Python 特有 の 情報 を 書ける よう サポート する ため の もの です 。 
LaTeX ドキュメント に は 、 二つ の 構成 要素 : プリアンブル と 本体 が 入っ て い ます 。 プリアンブル は 、 タイトル 、 著者 の リスト 、 日付 、 ドキュメント が 属する クラス といった 、 ドキュメント 自体 に関する メタデータ を 指定 する ため に 使い ます 。 
その他 の 情報 で 、 インデクス の 生成 や 参考 文献 データベース の 使用 を 制御 する もの も プリアンブル 内 に 置け ます 。 
ほとんど の 著者 にとって は 、 既存 の ドキュメント から プリアンブル を コピー し 、 いくつ か の 情報 を 修正 する だけ で 、 簡単 に プリアンブル を 作成 でき ます 。 ドキュメント の クラス は 、 ドキュメント を ある 広範 な カテゴリ に 分類 し 、 その カテゴリ で 共通 の 基本 的 な フォーマットプロパティ を 設定 する ため に 使い ます 。 
Python ドキュメント の 場合 、 二つ の クラス : manual クラス と howto クラス を 使い ます 。 
これら の クラス で は また 、 Python における 概念 や データ 構造 を 説明 する 際 に 使う マークアップ も 定義 し て い ます 。 
これら の クラス に関する 詳しい 説明 は 、 後述 の 5 節 、 `` ドキュメント クラス '' に あり ます 。 
ドキュメント クラス の 宣言 は プリアンブル の 先頭 に あり ます 。 クラス 宣言 の 後ろ に は 数多く の マクロ が あり 、 ドキュメント に関する 詳細 情報 を 宣言 し たり 、 追加 の マーク アップ を 設定 し て い ます 。 
プリアンブル から は 何 も 出力 生成 さ れ ませ ん ; 自由 文 ( free text ) は 出力 生成 に つながる ため 、 プリアンブル に 自由 文 を おく と エラー に なり ます 。 ドキュメント 本体 は プリアンブル の 後 に 続け ます 。 
本体 に は 、 出力 す べき ドキュメント の 構成 要素 を 構造 的 に マーク アップ し て 入れ ます 。 
一般 的 な LaTeX の 構造 に は 、 階層 化 さ れ た 章節 、 番号 付け リスト や 箇条 書き リスト 、 そして ドキュメント の 概要 や 索引 といった 特殊 な 構造 が あり ます 。 
LaTeX は 、 章 、 セクション 、 サブ セクション 、 付録 など といった 、 伝統 的 な 階層 化 による ドキュメント の 整理 を 想定 し て い ます 。 
これら の 各 階層 は 環境 で は なく マクロ で マーク し ます が 、 おそらく これ は ある 章 構造 と レベル が 同じ か より 高い 章 構造 が 続く と 、 その 章 が そこ で 終わっ た と 考え て 差し支え ない から でしょ う 。 Python ドキュメント が 使っ て いる クラス に は 6 段階 の 章節 分け の `` レベル '' が あり 、 そのうち 最も 深い 2 レベル 
は 使い ませ ん 。 
レベル 
マクロ 名 
5 節 、 `` ドキュメント クラス '' で 述べ た よう に 、 manual ドキュメント だけ で 使い ます 。 
テキスト の 段落 と は 違い ます ; この レベル は 誰 も 使っ て い ない よう です 。 
... レベル 
表 中 で は 、 深い レベル ほど 番号 が 大きく なり ます 。 
4 . 1 構文 法 Python ドキュメント の 作者 は 、 LaTeX の 構文 法 について いくつ か 知っ て おか ね ば なら ない こと が あり ます 。 
コメント は 、 `` パーセント '' 文字 ("%") から 始まり 、 行末 まで 、 または 次 の 行 の 先頭 に ある 空白 文字 まで 続き ます 。 
これ は 著者 の 知っ て いる どの プログラミング 言語 とも 少し 違っ て い ます 。 そこで 、 順序 立て て 例 を 挙げ ます : 
最初 の 行 の コメント の 以降 で 、 コメント で ない と みなさ れる 最初 の 文字 は 、 二 行 目 の " T " に なり ます ; 二 行 目 の 先頭 に ある 空白 文字 は 、 最初 の 行 の コメント の 一部 として 消費 し て しまい ます 。 
グループ は 入れ子 構造 に し て 階層 化 でき ます 。 
フォーマット 処理 の コンテキスト は 、 フォント や 、 追加 の マクロ 定義 ( または グループ 外部 で 定義 さ れ て いる マクロ に対する オーバライド ) を 含み ます 。 
構文 法的 に は 、 グループ は 波 括弧 で 囲い ます : 
マクロ や 環境 における パラメタ を マーク する 場合 を 除き 、 Python ドキュメント で は グループ 自体 は 控えめ に 使い ます 。 マクロ は 通常 は 単純 な 構成 要素 で 、 マクロ 名 で 識別 さ れ 、 いくつ か の パラメタ を 取る こと が あり ます 。 
通常 の LaTeX の 使用 法 で は 、 パラメタ の うち の 一つ が オプション に なっ て いる こと が あり ます 。 
マーク アップ は バックス ラッシュ 文字 ("") から 始め 、 マクロ 名 は アルファベット 文字 ( 数字 、 ハイフン 、 アンダー スコア 以外 ) で 与え ます 。 
必須 パラメタ は グループ として マーク し 、 オプション の パラメタ は グループ の 代用 構文 で マーク せ ね ば なり ませ ん 。 例えば 、 単一 の パラメタ を とる マクロ は 以下 の よう に なり ます : 
オプション の パラメタ を とる マクロ で 、 パラメタ を 指定 する とき に は 以下 の よう に 入力 し ます : 
オプション と 必須 パラメタ の 両方 が 必要 な 場合 に は 、 以下 の よう に なり ます : 
マクロ 名 の 後ろ に は 空白 や 改行 を 入れ て も かまい ませ ん ; この 場合 、 マクロ 名 と パラメタ 間 の 空白 は 取り去ら れ て しまい ます 。 しかし 、 Python ドキュメント で は こうした 使い方 を 実践 し ませ ん 。 
空白 は マクロ に パラメタ が ない 場合 に も 取り去ら れ ます が 、 この 場合 に は 空 の グループ ({}) や 、 空白 の 明示 的 表現 (" ") を マクロ 名 の 直後 に 続ける と 、 マクロ 展開 が 後続 の 文字 に 及ぶ の を 避ける 手助け に なり ます 。 
パラメタ を 取ら ない が 、 後ろ に 空白 を 続け たく ない マクロ の 場合 に は 、 ドキュメント ソース 中 で 名前 の 後ろ に 名前 に 使わ ない 文字 ( 区切り 文字 など ) が 入っ て いれ ば 、 特別 扱い する 必要 は あり ませ ん 。 例題 中 の 各行 は 、 パラメタ を とら ない マクロ が 入っ た 文章 を 書く ため の 適切 な 方法 を 示し て い ます 。 
環境 は マクロ より も 大きな 構文 要素 です 。 環境 は 、 マクロ の 引数 に 入れる に は 内容 が やや 大き すぎ て 便利 さ を 欠く 場合 に 使え ます 。 
主 に 、 本文 の 大きな 断片 の 前後 で フォーマット パラメタ を 変更 する 必要 が あり 、 かつ 本文 を 十分 柔軟 に 書き たい 場合 に 使い ます 。 
これら の マクロ は いずれ も 環境 の 名前 を パラメタ に とり ます 。 
以下 の 例 は 、 ドキュメント の 概要 を マーク する ため に 使う 環境 です : 
環境 は 、 環境 自体 の 必須 パラメタ や オプション パラメタ を 持つ こと も あり ます 。 
これら の パラメタ は begin マクロ の パラメタ の 後ろ に 続け ます 。 以下 に 単一 の 必須 パラメタ を とる 環境 の 例 を 示し ます : 
ASCII に 含ま れ ない 文字 、 特殊 文字 と さ れ て いる 文字 、 TeX や LaTeX で アクティブ ( active ) な 文字 を 入力 する ため の 、 あまり 使わ れ ない マーク アップ が あり ます 。 
これら の マーク アップ は よく 他 の 文字 に 隣接 し て 使わ れる ので 、 適切 な 文字 を 生成 する ため に は 、 マーク アップ の 後ろ に スペース や 空 の グループ を 置く 必要 が ある かも しれ ませ ん 。 あるいは 、 マーク アップ を グループ 内 に 囲っ て も かまい ませ ん 。 
Python ドキュメント で 使わ れる よう な マーク アップ を 以下 に いくつ か 示し ます : 
キャラクタ 文字 
マーク アップ 
以下 の テスト コード が あっ た 場合 : 
テストケース インスタンス は 次 の よう に 作成 し ます : 
初期 設定 、 終了 処理 が 必要 な 場合 は 、 次 の よう に 指定 し ます : 
注意 : PyUnit は AssertionError による テスト の 失敗 検出 も サポート し て い ます が 、 推奨 さ れ ませ ん 。 
将来 の バージョン で は 、 AssertionError は 別 の 目的 に 使用 さ れる 可能 性 が 有り ます 。 
Python で 書か れ た プログラム は パーザ ( parser ) に 読み込ま れ ます 。 
パーザ へ の 入力 は 、 字句 解析 器 ( lexical analyzer ) によって 生成 さ れ た 一連 の トー クン ( token ) から なり ます 。 
将来 の バージョン と の 互換 性 に関する 注意 : 8 - bit 文字 に対する 文字 セット を ISO Latin - 1 ( ラテン語 系 アルファベット を 用いる ほとんど の 西欧 言語 を カバー する ASCII の 上位 セット ) と みなし たい 気 に も なる かも しれ ませ ん 。 しかし 、 おそらく Unicode を 編集 できる テキストエディタ が 将来 一般 的 に なる はず です 。 
こうした エディタ で は 一般 的 に UTF - 8 エン コード を 使い ます が 、 UTF - 8 エン コード は ASCII の 上位 セット で は ある ものの 、 文字 序 数 ( ordinal ) 128 - 255 の 扱い が 非常 に 異なり ます 。 
この 問題 に関して は まだ 合意 が 得 られ て い ませ ん が 、 Latin - 1 と UTF - 8 の どちら か と みなす の は 、 たとえ 現在 の 実装 が Latin - 1 びいき の よう に 思え た として も 賢明 と は いえ ませ ん 。 
これ は ソース コード 文字 セット と 実行 時 の 文字 セット の どちら に も 該当 し ます 。 
6 . 8 ライブラリ レベル の マーク アップ この マーク アップ は 、 一 そろい の モジュール について 説明 する 際 に 使い ます 。 
例えば 、 
Macintosh ライブラリ モジュール 
ドキュメント で は 、 モジュール の 集まり を 概観 できる よう に する ため に この マクロ を 役立て て い ます 。 また 、 
も 同様 の 目的 に この マクロ を 利用 し て い ます 。 
現在 の 章 ( howto ドキュメント の 場合 は ドキュメント 全体 ) に対して . syn ファイル が 存在 する 場合 に は 、 . syn ファイル から 読み出し た 内容 で synopsistable を 作成 し ます 。 
Python プログラム は 多数 の 論理 行 ( logical lines ) に 分割 さ れ ます 。 
2 . 1 . 1 論理 行 ( logical line ) 
Python ソース と 一緒 に つい て くる configure スクリプト は 動的 に リンク さ れる 拡張 モジュール が 必要 と する シンボル を 公開 する よう ただしく Python を ビルド し ます が 、 この 機能 は Python ライブラリ を 静的 に 埋め込む よう な アプリケーション に は 継承 さ れ ませ ん 。 少なくとも Unix で は そう です 。 
これ は 、 アプリケーション が 静的 な 実行 時 ライブラリ ( libpython . a ) に リンク さ れ て い て 、 かつ (. so ファイル として 実装 さ れ て いる ) 動的 ロード さ れる よう な 拡張 モジュール を ロード する 必要 が ある 場合 に 起きる 問題 です 。 問題 に なる の は 、 拡張 モジュール が 使う ある エントリ ポイント が Python ラン タイム だけ で 定義 さ れ て いる という 状況 です 。 
埋め 込み を 行う アプリケーション 側 が こうした エントリ ポイント を 全く 使わ ない 場合 、 リンカ によって は エントリ ポイント を 最終 的 に 生成 さ れる 実行 可能 形式 の シンボル テーブル 内 に 含め ませ ん 。 
こうした 場合 、 リンカ に 追加 の オプション を 与え て 、 これら の シンボル を 除去 し ない よう 教える 必要 が あり ます 。 プラットフォーム ごと に 正しい オプション を 決める の は かなり 困難 です 、 と は いえ 、 幸運 な こと に 、 オプション は Python の ビルド 設定 内 に すでに あり ます 。 
インストール 済み の Python インタプリタ から オプション を 取り出す に は 、 対話 インタプリタ を 起動 し て 、 以下 の よう な 短い セッション を 実行 し ます : 
表示 さ れ た 文字 列 の 内容 が 、 ビルド 時 に 使う べき オプション です 。 
文字 列 が 空 で あれ ば 、 特に 追加 す べき オプション は あり ませ ん 。 
LINKFORSHARED の 定義 内容 は 、 Python の トップ レベル Makefile 内 の 同名 の 変数 に 対応 し て い ます 。 
この PyObject の サブ タイプ は Python の リスト オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の タプル 型 を 表現 し ます 。 
これ は Python レイヤ における types . ListType と 同じ オブジェクト です 。 
サイズ が len 新た な リスト オブジェクト を 返し ます 。 失敗 する と NULL を 返し ます 。 
リスト オブジェクト list の 長 さ を 返し ます ; リスト オブジェクト における " len ( list )" と 同じ です 。 
マクロ 形式 で でき た PyList _ Size () で 、 エラー チェック を し ませ ん 。 
p の 指す リスト オブジェクト 内 の 、 位置 pos に ある オブジェクト を 返し ます 。 
pos が 範囲 を 超え て いる 場合 、 NULL を 返し て IndexError 例外 を セット し ます 。 
マクロ 形式 で でき た PyList _ GetItem () で 、 エラー チェック を し ませ ん 。 
リスト オブジェクト 内 の 位置 index に 、 オブジェクト item を 挿入 し ます 。 
成功 し た 場合 に は 0 を 返し 、 失敗 する と - 1 を 返し ます 。 
注意 : この 関数 は item へ の 参照 を `` 盗み 取り '' ます 。 また 、 変更 先 の インデクス に すでに 別 の 要素 が 入っ て いる 場合 、 その 要素 に対する 参照 を 放棄 し ます 。 
PyList _ SetItem () を マクロ による 実装 で 、 エラー チェック を 行い ませ ん 。 この 関数 は 、 新た な リスト の まだ 要素 を 入れ た こと の ない 位置 に 要素 を 入れる とき に のみ 使い ます 。 
注意 : この 関数 は item へ の 参照 を `` 盗み 取り '' ます 。 また 、 PyList _ SetItem () と 違っ て 、 要素 の 置き換え が 生じ て も 置き換え られる オブジェクト へ の 参照 を 放棄 し ませ ん ; その 結果 、 list 中 の 位置 i で 参照 さ れ て い た オブジェクト が メモリ リーク を 引き起こし ます 。 
要素 item を インデクス index の 前 に 挿入 し ます 。 
成功 する と 0 を 返し ます 。 失敗 する と - 1 を 返し 、 例外 を 送出 し ます 。 
list . insert ( index , item ) に 類似 し た 機能 です 。 
オブジェクト item を list の 末尾 に 追加 し ます 。 成功 する と 0 を 返し ます ; 失敗 する と - 1 を 返し 、 例外 を セット し ます 。 
list . append ( item ) に 類似 し た 機能 です 。 
list 内 の 、 low から high の 間 の オブジェクト から なる リスト を 返し ます 。 
失敗 する と NULL を 返し 、 例外 を セット し ます 。 
list [ low : high ] に 類似 し た 機能 です 。 
list 内 の 、 low から high の 間 の オブジェクト を 、 itemlist の 内容 に し ます 。 
itemlist は NULL で も よく 、 空 リスト の 代入 ( 指定 スライス の 削除 ) に なり ます 。 成功 し た 場合 に は 0 を 、 失敗 し た 場合 に は - 1 を 返し ます 。 
list の 内容 を インプレース で ソート し ます 。 
成功 し た 場合 に は 0 を 、 失敗 し た 場合 に は - 1 を 返し ます 。 
list の 要素 を インプレース で 反転 し ます 。 
" list . reverse ()" と 同じ です 。 
list の 内容 が 入っ た 新た な タプルオブジェクト を 返し ます ;" tuple ( list )". と 同じ です 。 
小さな モジュール 配布 物 の 場合 、 パッケージ を 列挙 する より も 、 全て の モジュール を 列挙 する ほう が よい と 思う かも しれ ませ ん -- 特に 、 単一 の モジュール が `` ルート パッケージ '' に インストール さ れる ( すなわち 、 パッケージ は 全く ない ) よう な 場合 が そう です 。 
この 最も 単純 な ケース は 2 で 示し まし た ; ここ で は もう ちょっと 入り組ん だ 例 を 示し ます : 
ここ で は 二つ の モジュール について 述べ て い て 、 一方 は `` ルート '' パッケージ に 入り 、 他方 は pkg パッケージ に 入り ます 。 
ここ でも 、 デフォルト の パッケージ / ディレクトリ の レイアウト は 、 二つ の モジュール が mod 1 . py と pkg / mod 2 . py に あり 、 pkg /__ init __. py が 存在 する こと を 暗示 し て い ます 。 また 、 パッケージ / ディレクトリ の 対応 関係 は package _ dir オプション で も 上書き でき ます 。 
packages オプション は 、 packages リスト 中 で 指定 さ れ て いる 各々 の パッケージ について 、 パッケージ 内 に 見つかっ た 全て の pure Python モジュール を 処理 ( ビルド 、 配布 、 インストール 、 等 ) する よう Distutils に 指示 し ます 。 
この オプション を 指定 する ため に は 、 当然 の こと ながら 各 パッケージ 名 は ファイル システム 上 の ディレクトリ 名 と 何らかの 対応 付け が でき なけれ ば なり ませ ん 。 
デフォルト で 使わ れる 対応 関係 は きわめて はっきり し た もの です 。 すなわち 、 パッケージ distutils が 配布 物 ルート ディレクトリ から の 相対 パス distutils で 表さ れる ディレクトリ 中 に ある という もの です 。 
つまり 、 setup スクリプト 中 で packages = [' foo '] と 指定 し たら 、 スクリプト の 置か れ た ディレクトリ から の 相対 パス で foo /__ init __. py を 探し出せる と Distutils に 確約 し た こと に なり ます 。 
この 約束 を 裏切る と Distutils は 警告 を 出し ます が 、 そのまま 壊れ た パッケージ の 処理 を 継続 し ます 。 ソースコードディレクトリ の 配置 について 違っ た 規約 を 使っ て い て も 、 まったく 問題 は あり ませ ん : 単に package _ dir オプション を 指定 し て 、 Distutils に 自分 の 規約 を 教えれ ば よい の です 。 
例えば 、 全て の Python ソース コード を lib 下 に 置い て 、 `` ルート パッケージ '' 内 の モジュール ( つまり 、 どの パッケージ に も 入っ て い ない モジュール ) を lib 内 に 入れ 、 foo パッケージ を lib / foo に 入れる 、 といった 具合 に し たい の なら 、 
を setup スクリプト 内 に 入れ ます 。 
辞書 内 の キー は パッケージ 名 で 、 空 の パッケージ 名 は ルート パッケージ を 表し ます 。 
キー に 対応 する 値 は ルート パッケージ から の 相対 ディレクトリ 名 です 、 この 場合 、 packages = [' foo '] を 指定 すれ ば 、 lib / foo /__ init __. py が 存在 する と Distutils に 確約 し た こと に なり ます 。 
もう 一つ の 規約 の あり方 は foo パッケージ を lib に 置き換え 、 foo . bar パッケージ が lib / bar に ある 、 など と する もの です 。 
この よう な 規約 は 、 setup スクリプト で は 
の よう に 書き ます 。 package _ dir 辞書 に 
の よう な エントリ が ある と 、 package の 下 に ある 全て の パッケージ に対して この 規則 が 暗黙 の うち に 適用 さ れ 、 その 結果 foo . bar の 場合 が 自動的 に 処理 さ れ ます 。 
この 例 で は 、 packages = [' foo ', ' foo . bar '] は 、 Distutils に lib /__ init __. py と lib / bar /__ init __. py を 探す よう に 指示 し ます 。 
( package _ dir は 再帰 的 に 適用 さ れ ます が 、 この 場合 packages の 下 に ある 全て の パッケージ を 明示 的 に 指定 し なけれ ば なら ない こと を 心 に 留め て おい て ください : Distutils は __ init __. py を 持つ ディレクトリ を ソース ツリー から 再帰 的 に さがし たり は し ませ ん 。 ) 
リスト 表現 は 、 角 括弧 で 囲わ れ た 式 の 系列 です 。 系列 は 空 の 系列 で あっ て も かまい ませ ん : 
リスト 表現 は 、 新 に 作成 さ れ た リスト オブジェクト を 表し ます 。 
新た な リスト の 内容 は 、 式 の リスト を 与える か 、 リスト の 内包 表記 ( list comprehension ) で 指定 し ます 。 
カンマ で 区切ら れ た 式 の リスト を 与え た 場合 、 リスト の 各 要素 は 左 から 右 へ と 順に 評価 さ れ 、 評価 さ れ た 順番 に リスト 内 に 配置 さ れ ます 。 
リスト の 内包 表記 を 与える 場合 、 内包 表記 は まず 単一 の 式 、 続い て 少なくとも 一つ の for 節 、 続い て ゼロ 個 以上 の for 節 か 、 if 節 に なり ます 。 
この 場合 、 新た に 作成 さ れる リスト の 各 要素 は 、 各々 の for や if 節 を 左 から 右 の 順 に ネスト し た ブロック と みなし て 実行 し 、 ネスト の 最 内 ブロック に 到達 する 度 に 式 を 評価 し た 値 と なり ます 。 
... ネスト の 最 内 ブロック に 到達 する 度 に 式 を 評価 し た 値 と なり ます 。 
Python 2 . 3 で は 、 リスト 内包 が " for " の 中 で 使う 制御 変数 を 内包 表記 を 書い た スコープ に 「 漏らし て 」 しまう 仕様 に なっ て い まし た 。 
この 挙動 は 撤廃 さ れ た ので 、 将来 の バージョン で バグ が 修正 さ れれ ば 、 この 挙動 に 依存 し た コード は 動作 し なく なり ます 。 
リテラル ( literal ) と は 、 いくつ か の 組み込み 型 の 定数 を 表記 し た もの です 。 
2 . 4 . 1 文字 列 リテラル 
6 . 27 . 2 Python 拡張 の 作者 と 、 Python を 埋め込む よう な プログラム に関して 
C ライブラリ の gettext インタフェース が 提供 さ れ て いる システム で は 、 locake モジュール で その インタフェース を 公開 し て い ます 。 
この インタフェース は 関数 gettext ()、 dgettext ()、 dcgettext ()、 textdomain ()、 bindtextdomain ()、 および bind _ textdomain _ codeset () から なり ます 。 
これら は 
モジュール の 同名 の 関数 に 似 て い ます が 、 メッセージ カタログ として C ライブラリ の バイナリ フォーマット を 使い 、 メッセージ カタログ を 探す ため に C ライブラリ の サーチ アルゴリズム を 使い ます 。 
Python アプリケーション で は 、 通常 これら の 関数 を 呼び出す 必要 は ない はず で 、 代わり に 
こうした アプリケーション で は 、 ライブラリ が 正しい メッセージ カタログ を 探せる よう に テキスト ドメイン 名 を 指定 する 必要 が あり ます 。 
Locator の インスタンス は 次 の メソッド を 提供 し ます 。 : 
現在 の イベント が 終了 する 列 番号 を 返し ます 。 
現在 の イベント が 終了 する 行 番号 を 返し ます 。 
現在 の 文書 イベント の 公開 識別子 を 返し ます 。 
現在 の イベント の システム 識別子 を 返し ます 。 
7 . 5 . 1 Lock オブジェクト プリミティブロック と は 、 ロック が 生じ た 際 に 特定 の スレッド によって 所有 さ れ ない 同期 プリミティブ です 。 
Python で は 現在 の ところ 拡張 モジュール 
ロック に は 基本 と なる 二つ の メソッド 、 acquire () と release () が あり ます 。 
ロック の 状態 が アン ロック で ある 場合 、 acquire () は 状態 を ロック に 変更 し て 即座 に 処理 を 戻し ます 。 
状態 が ロック の 場合 、 acquire () は 他 の スレッド が release () を 呼出し て ロック の 状態 を アンロック に 変更 する まで ブロック し ます 。 
その後 、 状態 を ロック に 再度 設定 し て から 処理 を 戻し ます 。 release () メソッド を 呼び出す の は ロック 状態 の とき で なけれ ば なり ませ ん ; この メソッド は ロック の 状態 を アンロック に 変更 し 、 即座 に 処理 を 戻し ます 。 
引数 blocking の 値 を 真に し て 呼び出し た 場合 、 引数 なし で 呼び出し た とき と 同じ こと を 行ない 、 True を 返し ます 。 
引数 blocking の 値 を 偽 に し て 呼び出す と ブロック し ませ ん 。 
引数 なし で 呼び出し た 場合 に ブロック する よう な 状況 で あっ た 場合 に は 直ちに 偽 を 返し ます 。 
それ 以外 の 場合 に は 、 引数 なし で 呼び出し た とき と 同じ 処理 を 行い 真 を 返し ます 。 
ロック を 解放 し ます 。 ロック の 状態 が ロック の とき 、 状態 を アンロック に リセット し て 処理 を 戻し ます 。 
6 . 29 . 10 環境 設定 
6 . 29 . 10 . 1 環境 設定 の ため の 関数 
6 . 29 . 9 スレッド 安全 性 
6 . 29 . 10 . 1 環境 設定 の ため の 関数 
6 . 29 . 10 . 2 環境 設定 ファイル の 書式 
6 . 29 . 10 . 1 環境 設定 の ため の 関数 
fileConfig () が 解釈 できる 環境 設定 ファイル の 形式 は 、 ConfigParser の 機能 に 基づい て い ます 。 
ファイル に は 、 [ loggers ]、 [ handlers ]、 および [ formatters ] といった セクション が 入っ て い なけれ ば なら ず 、 各 セクション で は ファイル 中 で 定義 さ れ て いる 各 タイプ の エンティティ を 名前 で 指定 し て い ます 。 
こうした エンティティ の 各々 について 、 その エンティティ を どう 設定 する か を 示し た 個別 の セクション が あり ます 。 
すなわち 、 log 01 という 名前 の [ loggers ] セクション に ある ロガー に対して は 、 対応 する 詳細 設定 が セクション [ logger _ log 01 ] に 収め られ て い ます 。 
同様 に 、 hand 01 という 名前 の [ handlers ] セクション に ある ハンドラ は [ handler _ hand 01 ] と 呼ば れる セクション に 設定 を もつ こと に なり 、 [ formatters ] セクション に ある form 01 は [ formatter _ form 01 ] という セクション で 設定 が 指定 さ れ て い ます 。 
ルート ロガー の 設定 は [ logger _ root ] と 呼ば れる セクション で 指定 さ れ て い なけれ ば なり ませ ん 。 ファイル における これら の セクション の 例 を 以下 に 示し ます 。 
ルート ロガー で は 、 レベル と ハンドラ の リスト を 指定 し なけれ ば なり ませ ん 。 
ルート ロガー の セクション の 例 を 以下 に 示し ます 。 
level エントリ は DEBUG , INFO , WARNING , ERROR , CRITICAL の うち の 一つ か 、 NOTSET に なり ます 。 
ルート ロガー の 場合 に のみ 、 NOTSET は 全て の メッセージ が ログ 記録 さ れる こと を 意味 し ます 。 
レベル 値 は logging パッケージ の 名前 空間 の コンテキスト において eval () さ れ ます 。 handlers エントリ は コンマ で 区切ら れ た ハンドラ 名 から なる リスト で 、 [ handlers ] セクション に なく て は なり ませ ん 。 
また 、 これら の 各 ハンドラ の 名前 に 対応 する セクション が 設定 ファイル に 存在 し なけれ ば なり ませ ん 。 ルート ロガー 以外 の ロガー で は 、 いくつ か 追加 の 情報 が 必要 に なり ます 。 
これ は 以下 の 例 の よう に 表さ れ ます 。 
level および handlers エントリ は ルート ロガー の エントリ と 同様 に 解釈 さ れ ます が 、 非 ルート ロガー の レベル が NOTSET に 指定 さ れ た 場合 、 ログ 記録 システム は ロガー 階層 の より 上位 の ロガー に ロガー の 実効 レベル を 問い合わせる ところ が 違い ます 。 
propagate エントリ は 、 メッセージ を ロガー 階層 における この ロガー の 上位 の ハンドラ に 伝播 さ せる こと を 示す 1 に 設定 さ れる か 、 メッセージ を 階層 の 上位 に 伝播 し ない こと を 示す 0 に 設定 さ れ ます 。 
qualname エントリ は ロガー の チャネル 名 を 階層 的 に 表し た もの 、 すなわち アプリケーション が この ロガー を 取得 する 際 に 使う 名前 に なり ます 。 ハンドラ の 環境 設定 を 指定 し て いる セクション は 以下 の 例 の よう に なり ます 。 
class エントリ は ハンドラ の クラス ( logging パッケージ の 名前 空間 において eval () で 決定 さ れ ます ) を 示し ます 。 
level は ロガー の 場合 と 同じ よう に 解釈 さ れ 、 NOTSET は " 全て を 記録 する ( log everything )" と 解釈 さ れ ます 。 formatter エントリ は この ハンドラ の フォーマッタ に対する キー 名 を 表し ます 。 
空文字 列 の 場合 、 デフォルト の フォーマッタ ( logging ._ defaultFormatter ) が 使わ れ ます 。 
名前 が 指定 さ れ て いる 場合 、 その 名前 は [ formatters ] セクション に なく て は なら ず 、 対応 する セクション が 設定 ファイル 中 に なけれ ば なり ませ ん 。 args エントリ は 、 logging パッケージ の 名前 空間 の コンテキスト で eval () さ れる 際 、 ハンドラ クラス の コンス トラクタ に対する 引数 から なる リスト に なり ます 。 
典型 的 な エントリ が どう やっ て 作成 さ れる か について は 、 対応 する ハンドラ の コンス トラクタ か 、 以下 の 例 を 参照 し て ください 。 
フォーマッタ の 環境 設定 を 指定 し て いる セクション は 以下 の よう な 形式 です 。 
format エントリ は 全体 を 書式 化 する 文字 列 で 、 datefmt エントリ は strftime () 互換 の 日付 / 時刻 書式 化 文字 列 です 。 
空文字 列 の 場合 、 パッケージ によって ISO 8601 形式 の 日付 / 時刻 に 置き換え られ 、 日付 書式 化 文字 列 " ISO 8601 形式 で は ミリ 秒 も 指定 し て おり 、 上 の 書式 化 文字 列 の 結果 に カンマ で 区切っ て 追加 さ れ ます 。 
ISO 8601 形式 の 時刻 の 例 は 2003 - 01 - 23 00 : 29 : 50 , 411 です 。 
論理 行 の 終端 は 、 トー クン NEWLINE で 表さ れ ます 。 
構文 上 許さ れ て いる 場合 ( 複合 文 : compound statement 中 の 実 行文 : statement ) を 除い て 、 実 行文 は 論理 行間 に またがる こと は でき ませ ん 。 論理 行 は 一行 または それ 以上 の 物理 行 ( physical line ) から なり 、 物理 行 の 末尾 に は 明示 的 または 非 明示 的 な 行 連結 ( line joining ) 規則 が 続き ます 。 
この PyObject の サブ タイプ は 長 整数 型 を 表現 し ます 。 
この PyTypeObject の インスタンス は Python 長 整数 型 を 表現 し ます 。 
これ は types . LongType と 同じ オブジェクト です 。 
引数 が PyLongObject か PyLongObject の サブ タイプ の とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
引数 が PyLongObject 型 で 、 かつ PyLongObject 型 の サブ タイプ で ない とき に 真 を 返し ます 。 
v から 新た な PyLongObject オブジェクト を 生成 し て 返し ます 。 失敗 の とき に は NULL を 返し ます 。 
C の unsigned long 型 から 新た な PyLongObject オブジェクト を 生成 し て 返し ます 。 失敗 の とき に は NULL を 返し ます 。 
C の long long 型 から 新た な PyLongObject オブジェクト を 生成 し て 返し ます 。 失敗 の とき に は NULL を 返し ます 。 
C の unsigned long long 型 から 新た な PyLongObject オブジェクト を 生成 し て 返し ます 。 失敗 の とき に は NULL を 返し ます 。 
v の 整数 部 から 新た な PyLongObject オブジェクト を 生成 し て 返し ます 。 失敗 の とき に は NULL を 返し ます 。 
str の 文字 列 値 に 基づい て 、 新た な PyLongObject を 返し ます 。 この とき base を 基数 として 文字 列 を 解釈 し ます 。 
は str 中 で 数 が 表現 さ れ て いる 部分 以後 の 先頭 の 文字 の アドレス を 指し て い ます 。 
base が 0 なら ば 、 str の 先頭 の 文字 列 に 基づい て 基数 を 決定 し ます : も し str が ' 0 x ' または ' 0 X ' で 始まっ て いれ ば 、 基数 に 16 を 使い ます ; str が ' 0 ' で 始まっ て いれ ば 、 基数 に 8 を 使い ます ; その他 の 場合 に は 基数 に 10 を 使い ます 。 
base が 0 で なけれ ば 、 base は 2 以上 36 以下 の 数 で なけれ ば なり ませ ん 。 
先頭 に 空白 が ある 場合 は 無視 さ れ ます 。 
数字 が 全く ない 場合 、 ValueError が 送出 さ れ ます 。 
Unicode の 数字 配列 を Python の 長 整数 型 に 変換 し ます 。 
最初 の パラメタ u は 、 Unicode 文字 列 の 最初 の 文字 を 指し 、 length に は 文字数 を 指定 し 、 base に は 変換 時 の 基数 を 指定 し ます 。 
基数 は 範囲 [ 2 , 36 ] に なけれ ば なり ませ ん ; 範囲 外 の 基数 を 指定 する と 、 ValueError を 送出 し ます 。 
バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 PyObject * 
pylong の 指す 長 整 数値 を 、 C の long 型 表現 で 返し ます 。 
pylong の 指す 長 整 数値 を 、 C の unsigned long 型 表現 で 返し ます 。 
pylong の 指す 長 整 数値 を 、 C の long long 型 表現 で 返し ます 。 
pylong が long long で 表せ ない 場合 、 OverflowError を 送出 し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
Python 長 整数 値 を 、 オーバフロー チェック を 行わ ず に C の unsigned long 型 表現 で 返し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
Python 長 整数 値 を 、 オーバフロー チェック を 行わ ず に C の unsigned long long 型 表現 で 返し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
pylong の 指す 値 を 、 C の double 型 表現 で 返し ます 。 
pylong が double を 使っ て 近似 表現 でき ない 場合 、 OverflowError 例外 を 送出 し て - 1 . 0 を 返し ます 。 
Python の 整数 型 か 長 整数 型 を 指す pylong を 、 C の void ポインタ に 変換 し ます 。 
pylong を 変換 でき なけれ ば 、 OverflowError を 送出 し ます 。 
この 関数 は PyLong _ FromVoidPtr () で 値 を 生成 する とき に 使う よう な void ポインタ 型 を 生成 できる だけ です 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
高水準 インタフェース は 、 断片 的 な Python コード を アプリケーション から 実行 できる よう に し て くれ ます が 、 アプリケーション と Python コード の 間 で の データ の やり取り は 、 控えめ に 言っ て も 煩わしい もの です 。 
データ の やり取り を し たい なら 、 より 低 水準 の インタフェース 呼び出し を 利用 し なく て は なり ませ ん 。 
より 多く C コード を 書か ね ば なら ない 代わり に 、 ほぼ 何 でも できる よう に なり ます 。 Python の 拡張 と 埋め込み は 、 趣旨 こそ 違え 、 同じ 作業 で ある という こと に 注意 せ ね ば なり ませ ん 。 
これ まで の 章 で 議論 し て き た トピック の ほとんど が 埋め 込み で も あてはまり ます 。 
これ を 示す ため に 、 Python から C へ の 拡張 を 行う コード が 実際 に は 何 を する か 考え て み ましょ う : 
データ 値 を Python から C に 変換 する 。 
変換 さ れ た 値 を 使っ て C ルーチン の 関数 呼び出し を 行い 、 
呼び出し で 得 られ た データ 値 C から Python に 変換 する 。 
Python を 埋め込む 場合 に は 、 インタフェース コード が 行う 作業 は 以下 の よう に なり ます : 
データ 値 を C から Python に 変換 する 。 
変換 さ れ た 値 を 使っ て Python インタフェース ルーチン の 関数 呼び出し を 行い 、 
呼び出し で 得 られ た データ 値 Python から C に 変換 する 。 
一見 し て 分かる よう に 、 データ 変換 の ステップ は 、 言語 間 で データ を 転送 する 方向 が 変わっ た の に 合わせ て 単に 入れ替え た だけ です 。 唯一 の 相違 点 は 、 データ 変換 の 間 に ある ルーチン です 。 
拡張 を 行う 際 に は C ルーチン を 呼び出し ます が 、 埋め 込み の 際 に は Python ルーチン を 呼び出し ます 。 この 章 で は 、 Python から C へ 、 そして その 逆 へ と データ を 変換 する 方法 について は 議論 し ませ ん 。 
また 、 正しい 参照 の 使い方 や エラー の 扱い 方 について すでに 理解 し て いる もの と 仮定 し ます 。 
これら の 側面 について は インタプリタ の 拡張 と 何ら 変わる ところ が ない ので 、 必要 な 情報 について は 以前 の 章 を 参照 でき ます 。 
この ドキュメント で 記述 さ れ て いる 次 の モジュール は 、 いずれ も Macintosh で のみ 利用 可能 です 。 
os モジュール の 実装 
MacOS の パス 操作 関数 
FSSpec 、 エイリアスマネージャ 、 finder エイリアス 、 標準 ファイル パッケージ の サポート 。 
インターネット 設定 へ の アクセス 。 
Mac OS 固有 の インタープリタ 機能 へ の アクセス 。 
ファイル 操作 を 便利 に する ルーチン 集 。 
finder の Apple Events インターフェース の ラッパ 。 
基本 的 な Macintosh ダイアログ 。 
対話 型 アプリケーション ・ フレーム ワーク 
イベント ループ 中 の グローバル インタープリタ の 取り扱い 
メイルボックスオブジェクト の 実装 は すべて 反復 可能 な オブジェクト で あり 、 外部 に 公開 さ れ て いる メソッド を 一つ もっ て い ます 。 
この メソッド は メイルボックスオブジェクト から 生成 さ れる イテレータ によって 使わ れ 、 直接 利用 する こと も でき ます 。 
メイルボックスオブジェクト の コンス トラクタ に 渡さ れ た 、 オプション の factory 引数 を 使っ て 、 メイル ボックス 中 の 次 の メッセージ を 生成 し て 返し ます 。 
標準 の 設定 で は 、 factory は rfc 822 . Message オブジェクト です ( rfc 822 
モジュール を 参照 し て ください )。 
メイル ボックス の 実装 により 、 この オブジェクト の fp 属性 は 真 の ファイル オブジェクト かも しれ ない し 、 複数 の メイル メッセージ が 単一 の ファイル に 収め られ て いる など の 場合 に 、 メッセージ 間 の 境界 を 注意深く 扱う ため に ファイル オブジェクト を シミュレート する クラス の インスタンス で ある かも しれ ませ ん 。 
次 の メッセージ が ない 場合 、 この メソッド は None を 返し ます 。 
1 配布 する ファイル を 指定 する 
4 ソース コード 配布 物 を 作成 する 
2 マニフェスト ( manifest ) 関連 の オプション 
sdist コマンド が 通常 行う 処理 の 流れ は 、 以下 の よう に なっ て い ます : 
マニフェスト ファイル MANIFEST が 存在 し なけれ ば 、 MANIFEST . in を 読み込ん で マニフェスト ファイル を 作成 し ます 
MANIFEST も MANIFEST . in も なけれ ば 、 デフォルト の ファイル セット だけ で でき た マニフェスト ファイル を 作成 し ます 
MANIFEST . in または ( setup . py ) が MANIFEST より 新しけれ ば 、 MANIFEST . in を 読み込ん で MANIFEST を 生成 し ます 
( 生成 さ れ た か 、 読み出さ れ た ) MANIFEST 内 に ある ファイル の リスト を 使っ て ソース 配布 物 アーカイブ を 作成 し ます 
上 の 動作 は 二 種類 の オプション を 使っ て 修正 でき ます 。 
まず 、 標準 の `` include '' および `` exclude '' セット を 無効 化 する に は -- no - defaults および -- no - prune を 使い ます 第 二 に 、 マニフェスト ファイル の 再 生成 を 強制 でき ます -- 例えば 、 現在 マニフェスト テンプレート 内 に 指定 し て いる パターン に マッチ する ファイル や ディレクトリ を 追加 し たり 削除 し たり する と 、 マニフェスト を 再 生成 し なく て は なり ませ ん : 
また 、 単に マニフェスト を ( 再 ) 生成 し たい だけ で 、 ソース 配布 物 は 作成 し たく ない 場合 が ある かも しれ ませ ん : 
-- manifest - only を 行う と 、 -- force - manifest を 呼び出し ます 。 - o は -- manifest - only の ショートカット 、 - f は -- force - manifest の ショートカット です 。 
リリース 2 . 4 , 平成 18 年 6 月 27 日 更新 ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
7 . 4 . 1 辞書 オブジェクト ( dictionary object ) 
10 . 5 数値 オブジェクト 構造 体 ( number object 
拡張 型 で マップ 型 プロトコル を 実装 する ため に 使わ れる 関数 群 へ の ポインタ を 保持 する ため に 使わ れる 構造 体 です 。 
オブジェクト が マップ 型 プロトコル を 提供 し て いる 場合 に 1 を 返し 、 そう で ない とき に は 0 を 返し ます 。 
この 関数 呼び出し は 常に 成功 し ます 。 
成功 する と オブジェクト o 中 の キー の 数 を 返し 、 失敗 する と - 1 を 返し ます 。 
マップ 型 プロトコル を 提供 し て い ない オブジェクト に対して は 、 Python の 式 " len ( o )" と 同じ に なり ます 。 
オブジェクト o から key に関する 対応 付け を 削除 し ます 。 失敗 する と - 1 を 返し ます 。 
Python の 文 " del o [ key ]" と 同じ です 。 
オブジェクト o から key に対する 対応 付け を 削除 し ます 。 失敗 する と - 1 を 返し ます 。 
成功 する と 、 マップ 型 オブジェクト が キー key を 持つ 場合 に 1 を 返し 、 そう で ない とき に は 0 を 返し ます 。 
この 関数 呼び出し は 常に 成功 し ます 。 
マップ 型 オブジェクト が キー key を 持つ 場合 に 1 を 返し 、 そう で ない とき に は 0 を 返し ます 。 
Python の 式 " 
o . has _ key ( key )" と 同じ です 。 
成功 する と オブジェクト o の キー から なる リスト を 返し ます 。 
失敗 する と NULL を 返し ます 。 
o . keys ()" と 同じ です 。 
成功 する と オブジェクト o の キー に 対応 する 値 から なる リスト を 返し ます 。 
o . values ()" と 同じ です 。 
成功 する と オブジェクト o の 要素 対 、 すなわち キー と 値 の ペア が 入っ た タプル から なる リスト を 返し ます 。 
失敗 する と NULL を 返し ます 。 
o . items ()" と 同じ です 。 
オブジェクト key に 対応 する o の 要素 を 返し ます 。 失敗 する と NULL を 返し ます 。 
Python の 式 " 
o [ key ]" と 同じ です 。 
オブジェクト o で key を 値 v に 対応付け ます 。 失敗 する と - 1 を 返し ます 。 
Python の 文 " 
" と 同じ です 。 
13 . 構造 化 マークアップツール 
Python は 様々 な 構造 化 データマークアップ 形式 を 扱う ため の 、 様々 な モジュール を サポート し て い ます 。 
HTML と XHTML を 扱える シンプル な パーザ 。 
HTML を 解析 する の に 必要 な 機能 だけ を 備え た SGML パーザ 。 
HTML 文書 の 解析 器 。 
HTML 一般 エンティティ の 定義 。 
Expat による 、 検証 を 行わ ない XML パーザ へ の インタフェース 
Python の ため の 文書 オブジェクト モデル API 。 
軽量 な 文書 オブジェクト モデル の 実装 。 
SAX イベント から の 部分 的 な DOM ツリー 構築 の サポート 。 
SAX 2 基底 クラス と 有用 な 関数 の パッケージ 
SAX イベント ・ ハンドラ の 基底 クラス 
SAX とともに 使う 有用 な 関数 と クラス です 。 
SAX 準拠 の XML パーサ が 実装 す べき インターフェース です 。 
XML ドキュメント の パーサ 。 
Python / XML ライブラリ 
Python に バンドル さ れ て くる xml パッケージ へ の 拡張 で ある PyXML パッケージ の ホームページ です 。 
以下 の ルーチン 群 は 、 marshal モジュール と 同じ 形式 を 使っ た 整列 化 オブジェクト を C コード から 使える よう に し ます 。 
整列 化 形式 で データ を 書き出す 関数 に 加え て 、 データ を 読み 戻す 関数 も あり ます 。 
PY _ MARSHAL _ VERSION は 現在 の バージョン ( バージョン 1 ) を 示し ます 。 
long 型 の 整数 値 value を file へ 整列 化 し ます 。 
この 関数 は value の 下 桁 32 ビット を 書き込む だけ です ; ネイティブ の long 型 サイズ に は 関知 し ませ ん 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : ファイル 形式 を 示す version が 追加 さ れ まし た 
Python オブジェクト value を file へ 整列 化 し ます 。 
value の 整列 化 表現 が 入っ た 文字 列 オブジェクト を 返し ます 。 
読み出し 用 に 開か れ た FILE * 内 の データ ストリーム から 、 C の long 型 データ を 読み出し て 返し ます 。 
この 関数 は 、 ネイティブ の long の サイズ に 関係 なく 、 32 ビット の 値 だけ を 読み 出せ ます 。 
読み出し 用 に 開か れ た FILE * 内 の データ ストリーム から 、 C の short 型 データ を 読み出し て 返し ます 。 
この 関数 は 、 ネイティブ の short の サイズ に 関係 なく 、 16 ビット の 値 だけ を 読み 出せ ます 。 
読み出し 用 に 開か れ た FILE * 内 の データ ストリーム から 、 Python オブジェクト を 読み出し て 返し ます 。 
エラー が 生じ た 場合 、 適切 な 例外 ( EOFError または TypeError ) を 送出 し て NULL を 返し ます 。 
PyMarshal _ ReadObjectFromFile () と 違い 、 この 関数 は ファイル 中 に 後続 の オブジェクト が 存在 し ない と 仮定 し 、 ファイル から メモリ 上 に ファイル データ を 一気に メモリ に ロード し て 、 逆 整列 化 機構 が ファイル から 一 バイト づつ 読み出す 代わり に メモリ 上 の データ を 操作 できる よう に し ます 。 
対象 の ファイル から 他 に 何 も 読み出さ ない と 分かっ て いる 場合 に のみ 、 この 関数 を 使っ て ください 。 
エラー が 生じ た 場合 、 適切 な 例外 ( EOFError または TypeError ) を 送出 し て NULL を 返し ます 。 
string が 指し て いる len バイト の 文字 列 バッファ に 納め られ た データ ストリーム から Python オブジェクト を 読み出し て 返し ます 。 
エラー が 生じ た 場合 、 適切 な 例外 ( EOFError または TypeError ) を 送出 し て NULL を 返し ます 。 
MatchObject インスタンス は 以下 の メソッド と 属性 を サポート し ます : 
テンプレート 文字 列 template に 、 sub () メソッド が する よう な バックス ラッシュ 置換 を し て 得 られる 文字 列 を 返し ます 。 " n " の よう な エスケープ は 適当 な 文字 に 変換 さ れ 、 数値 の 後方 参照 (" 1 "、 " 2 ") と 名前 付き の 後方 参照 (" g 1 "、 " gname ") は 、 対応 する グループ の 内容 で 置き換え られ ます 。 
マッチ し た 1 個 以上 の サブ グループ を 返し ます 。 
もし 引数 で 一つ で あれ ば 、 その 結果 は 一つ の 文字 列 です ; 複数 の 引数 が あれ ば 、 その 結果 は 、 引数 ごと に 一 項目 を 持つ タプル です 。 引数 が なけれ ば 、 group 1 は デフォールト で ゼロ です ( マッチ し た もの すべて が 返さ れ ます )。 
もし groupN 引数 が ゼロ で あれ ば 、 対応 する 戻り 値 は 、 マッチ する 文字 列 全体 です ; もし それ が 範囲 [ 1 .. 99 ] 内 で あれ ば 、 それ は 、 対応 する 丸 括弧 つき グループ と マッチ する 文字 列 です 。 
もし グループ 番号 が 負 で ある か 、 あるいは パターン で 定義 さ れ た グループ の 数 より 大きけれ ば 、 IndexError 例外 が 発生 し ます 。 もし グループ が マッチ し なかっ た パターン の 一部 に 含ま れ て いれ ば 、 対応 する 結果 は None です 。 
もし グループ が 、 複数 回 マッチ し た パターン の 一部 に 含ま れ て いれ ば 、 最後 の マッチ が 返さ れ ます 。 もし 正規 表現 が (? Pname ...) シンタクス を 使う なら ば 、 groupN 引数 は 、 それら の グループ 名 によって グループ を 識別 する 文字 列 で あっ て も 構い ませ ん 。 
もし 文字 列 引数 が パターン の グループ 名 として 使わ れ て い ない もの で あれ ば 、 IndexError 例外 が 発生 し ます 。 適度 に 複雑 な 例題 : 
この マッチ を 実行 し た あと で は 、 m . group ( 1 ) は m . group (' int ') と 同じく 、 ' 3 ' で あり 、 そして m . group ( 2 ) は ' 14 ' です 。 
1 から どれ だけ 多く で あろ う が パターン 内 に ある グループ 数 まで の 、 マッチ の 、 すべて の サブ グループ を 含む タプル を 返し ます 。 
default 引数 は 、 マッチ に 加わら なかっ た グループ 用 に 使わ れ ます ; それ は デフォールト で は None です 。 
( 非 互換 性 ノート : オリジナル の Python 1 . 5 リリース で は 、 たとえ タプル が 一 要素 長 で あっ て も 、 その 代わり に 文字 列 を 返す こと は あり ませ ん 。 
( 1 . 5 . 1 以降 の ) 後 の バージョン で は 、 その よう な 場合 に は 、 シングルトンタプル が 返さ れ ます 。 ) 
すべて の 名前 つき の サブ グループ を 含む 、 マッチ の 、 サブ グループ 名 で キー 付け さ れ た 辞書 を 返し ます 。 
default 引数 は マッチ に 加わら なかっ た グループ 用 に 使わ れ ます ; それ は デフォールト で は None です 。 
group と マッチ し た サブ 文字 列 の 先頭 と 末尾 の インデックス を 返し ます ; group は 、 デフォールト で は ( マッチ し た サブ 文字 列 全体 を 意味 する ) ゼロ です 。 
group が 存在 し て も マッチ に 寄与 し なかっ た 場合 は 、 - 1 を 返し ます 。 
です 。 
もし group が ヌル 文字 列 と マッチ すれ ば 、 m . start ( group ) が m . end ( group ) と 等しく なろ こと に 注意 し て 下さい 。 
例えば 、 
m = re . search (' b ( c ?)', ' cba ') の 後 で は 、 
m . start ( 0 ) は 1 で 、 
m . end ( 0 ) は 2 で あり 、 
m . start ( 1 ) と 
m . end ( 1 ) は ともに 2 で あり 、 
m . start ( 2 ) は IndexError 例外 を 発生 し ます 。 
MatchObject m について は 、 2 - タプル ( m . start ( group )、 m . end ( group )) を 返し ます 。 もし group が マッチ に 寄与 し なかっ たら 、 これ は (- 1 , - 1 ) です 。 
また group は デフォールト で ゼロ です 。 
RegexObject の search () あるいは match () メソッド に 渡さ れ た pos の 値 です 。 
これ は RE エンジン が マッチ を 探し 始める 位置 の 文字 列 の インデックス です 。 
RegexObject の search () あるいは match () メソッド に 渡さ れ た endpos の 値 です 。 
これ は RE エンジン が それ 以上 は 進ま ない 位置 の 文字 列 の インデックス です 。 
最後 に マッチ し た 取り込み グループ の 整数 インデックス です 。 
もし どの グループ も 全く マッチ し なけれ ば None です 。 
最後 に マッチ し た 取り込み グループ の 名前 です 。 もし グループ に 名前 が ない か 、 あるいは どの グループ も 全く マッチ し なけれ ば None です 。 
その match () あるいは search () メソッド が 、 この MatchObject インスタンス を 生成 し た 正規 表現 オブジェクト です 。 
match () あるいは search () に 渡さ れ た 文字 列 です 。 
Python は 、 正規 表現 に 基づく 、 2 つ の 異なる プリミティブ な 操作 を 提供 し て い ます : マッチ と 検索 です 。 
もし あなた が Perl の 記号 に 慣れ て いる の で あれ ば 、 検索 操作 が あなた の 求める もの です 。 
search () 関数 と 、 コンパイル さ れ た 正規 表現 オブジェクト で の 対応 する メソッド を 見 て 下さい 。 マッチ は 、 "^" で 始まる 正規 表現 を 使う と 、 検索 と は 異なる かも しれ ない こと に 注意 し て 下さい :"^" は 文字 列 の 先頭 で のみ 、 あるいは MULTILINE モード で は 改行 の 直後 とも マッチ し ます 。 
`` マッチ '' 操作 は 、 もし その パターン が 、 モード に 拘ら ず 文字 列 の 先頭 と マッチ する か 、 あるいは 改行 が その 前 に ある か どう か に 拘ら ず 、 省略 可能 な pos 引数 によって 与え られる 先頭 位置 で マッチ する 場合 のみ 成功 し ます 。 
re . compile (" a "). match (" ba ", 1 ) # 成功 re . compile ("^ a "). search (" ba ", 1 ) # 失敗 ; ' a ' は 先頭 に ない re . compile ("^ a "). search ("\ na ", 1 ) # 失敗 ; ' a ' は 先頭 に ない re . compile ("^ a ", re . M ). search ("\ na ", 1 ) # 成功 re . compile ("^ a ", re . M ). search (" ba ", 1 ) # 失敗 ; \ n が 前 に ない 
8 . 3 高度 な デバッガ サポート ( advanced debugger 
9 . 1 概要 
9 . メモリ 管理 
9 . 1 概要 
最初 に 述べ た 関数 セット を 使っ て 、 9 . 1 節 の 例 を Python ヒープ に I / O バッファ を メモリ 確保 する よう に 書き換え た もの を 以下 に 示し ます : 
同じ コード を 型 対象 の 関数 セット で 書い た もの を 以下 に 示し ます : 
上 の 二つ の 例 で は 、 バッファ を 常に 同じ 関数 セット に 属する 関数 で 操作 し て いる こと に 注意 し て ください 。 
実際 、 ある メモリ ブロック に対する 操作 は 、 異なる メモリ 操作 機構 を 混用 する 危険 を 減らす ため に 、 同じ メモリ API ファミリ を 使っ て 行う こと が 必要 です 。 
以下 の コード に は 二つ の エラー が あり 、 その うち の 一つ に は 異なる ヒープ を 操作 する 別 の メモリ 操作 関数 を 混用 し て いる ので 致命 的 ( Fatal ) と ラベル づけ を し て い ます 。 
素 の メモリ ブロック を Python ヒープ 上 で 操作 する 関数 に 加え 、 PyObject _ New ()、 PyObject _ NewVar ()、 および PyObject _ Del () を 使う と 、 Python における オブジェクト を メモリ 確保 し たり 解放 し たり でき ます 。 
また これら の 関数 に は マクロ PyObject _ NEW ()、 PyObject _ NEW _ VAR ()、 および PyObject _ DEL () が 対応 し ます 。 
これら の 関数 について は 、 次 章 の C による 新しい オブジェクト 型 の 定義 や 実装 に関する 記述 の 中 で 説明 し ます 。 
Python ヒープ に対して メモリ を 確保 し たり 解放 し たり する ため に 、 以下 の 関数 セット が 利用 でき ます 。 これら の 関数 は ANSI C 標準 に従って モデル 化 さ れ て い ます が 、 0 バイト の 領域 を 要求 し た 際 の 動作 について も 定義 し て い ます : 
n バイト を メモリ 確保 し 、 確保 さ れ た メモリ を 指す void * 型 の ポインタ を 返し ます 。 
確保 要求 に 失敗 し た 場合 に は NULL を 返し ます 。 
0 バイト を リクエスト する と 、 可能 なら ば 独立 し た 非 NULL の ポインタ を 返し ます 。 この ポインタ は PyMem _ Malloc ( 1 ) を 代わり に 呼ん だ とき の よう な メモリ 領域 を 指し て い ます 。 
p が NULL なら ば 、 この 関数 は PyMem _ Malloc ( n ) と 等価 に なり ます ; それ 以外 の 場合 で 、 n が ゼロ に 等しけれ ば 、 メモリ ブロック は サイズ 変更 さ れ ます が 、 解放 さ れ ず 、 非 NULL の ポインタ を 返し ます 。 
p の 値 を NULL に し ない の なら 、 以前 呼び出し た PyMem _ Malloc () や PyMem _ Realloc () の 返し た 値 で なけれ ば なり ませ ん 。 
p が 指す メモリ ブロック を 解放 し ます 。 p は 以前 呼び出し た PyMem _ Malloc () や PyMem _ Realloc () の 返し た 値 で なけれ ば なり ませ ん 。 
それ 以外 の 場合 や 、 すでに PyMem _ Free ( p ) を 呼び出し た 後 だっ た 場合 、 未 定義 の 動作 に なり ます 。 
p が NULL なら 、 何 も 行い ませ ん 。 
以下 に 挙げる 型 対象 の マクロ は 利便 性 の ため に 提供 さ れ て いる もの です 。 
TYPE * に 型 キャスト さ れ た ポインタ を 返し ます 。 
メモリ に は 何 の 初期 化 も 行わ れ て い ませ ん 。 
PyMem _ Realloc () と 同じ です が 、 ( n * sizeof ( TYPE )) バイト に サイズ 変更 さ れ た メモリ を 確保 し ます 。 
TYPE * に 型 キャスト さ れ た ポインタ を 返し ます 。 
PyMem _ Free () と 同じ です 。 
上記 に 加え て 、 C API 関数 を 介する こと なく Python メモリ 操作 関数 を 直接 呼び出す ため の 以下 の マクロ セット が 提供 さ れ て い ます 。 
ただし 、 これら の マクロ は Python バージョン 間 で の バイナリ 互換 性 を 保て ず 、 それ ゆえ に 拡張 モジュール で は 撤廃 さ れ て いる ので 注意 し て ください 。 
PyMem _ MALLOC ()、 PyMem _ REALLOC ()、 PyMem _ FREE ()。 
PyMem _ NEW ()、 PyMem _ RESIZE ()、 PyMem _ DEL ()。 
Python における メモリ 管理 に は 、 全て の Python オブジェクト と データ 構造 が 入っ た プライベート ヒープ ( private heap ) が 必須 です 。 
プライベート ヒープ の 管理 は 、 内部 的 に は Python メモリ マネージャ ( Python memory manager ) が 確実 に 行い ます 。 
これら は 同じ ヒープ を 操作 し 、 各 オブジェクト 型 固有 の 事情 に 合っ た メモリ 管理 ポリ シ を 実装 し て い ます 。 
例えば 、 整数 オブジェクト は 文字 列 や タプル 、 辞書 と は 違っ た やり方 で ヒープ 内 で 管理 さ れ ます 。 というのも 、 整数 に は 値 を 記憶 する 上 で 特別 な 要件 が あり 、 速度 / 容量 の トレードオフ が 存在 する から です 。 
この よう に 、 Python メモリマネジャ は 作業 の いくつ か を オブジェクト 固有 の メモリ 操作 関数 に 委譲 し ます が 、 これら の 関数 が プライベート ヒープ から はみ出し て メモリ 管理 を 行わ ない よう に し て い ます 。 重要 な の は 、 たとえ ユーザ が いつも ヒープ 内 の メモリ ブロック を 指す よう な オブジェクト ポインタ を 操作 し て いる として も 、 Python 用 ヒープ の 管理 は インタプリタ 自体 が 行う もの で 、 ユーザ が それ を 制御 する 余地 は ない と 理解 する こと です 。 
Python オブジェクト や 内部 使用 さ れる バッファ を 入れる ため の ヒープ 空間 の メモリ 確保 は 、 必要 に 応じ て 、 Python メモリ マネージャ が この ドキュメント 内 で 列挙 し て いる Python / C API 関数 群 を 介し て 行い ます 。 メモリ 管理 の 崩壊 を 避ける ため 、 拡張 モジュール の 作者 は 決して Python オブジェクト を C ライブラリ が 公開 し て いる 関数 : malloc () 
、 calloc () 
、 realloc () 
および free () で 操作 しよ う として は なり ませ ん 。 
こうした 関数 を 使う と 、 C の メモリ 操作 関数 と Python メモリ マネージャ と の 間 で 関数 呼び出し が 交錯 し ます 。 
C の メモリ 操作 関数 と Python メモリ マネージャ は 異なる アルゴリズム で 実装 さ れ て い て 、 異なる ヒープ を 操作 する ため 、 呼び出し の 交錯 は 致命 的 な 結果 を 招き ます 。 
と は いえ 、 個別 の 目的 の ため なら 、 C ライブラリ の メモリ 操作 関数 を 使っ て 安全 に メモリ を 確保 し たり 解放 し たり でき ます 。 例えば 、 以下 が その よう な 例 です : 
この 例 で は 、 I / O バッファ に対する メモリ 要求 は C ライブラリ の メモリ 操作 関数 を 使っ て い ます 。 
その 結果 、 特定 の 状況 で は 、 Python メモリ マネージャ が ガベージコレクション や メモリ の コンパクト 化 、 その他 何らかの 予防 措置 といった 、 適切 な 動作 を トリガ できる こと が あり ます 。 
上 の 例 で 示し た よう に C ライブラリ の メモリ 操作 関数 を 使う と 、 I / O バッファ 用 に 確保 し た メモリ は Python メモリ マネージャ の 管理 から 完全 に 外れる こと に 注意 し て ください 。 
Message インスタンス は 以下 の メソッド を 持っ て い ます : 
メッセージ 本体 の 先頭 を seek し ます 。 
この メソッド は ファイル オブジェクト が seek 可能 で ある 場合 に のみ 動作 し ます 。 
ある 行 が 正しい RFC 2822 ヘッダ で ある 場合 、 その 行 の 正規 化 さ れ た フィールド 名 ( インデクス 指定 の 際 に 使わ れる 辞書 キー ) を 返し ます ; そう で ない 場合 None を 返し ます ( 解析 を ここ で 一度 中断 し 、 行 データ を 入力 ストリーム に 押し戻す こと を 意味 し ます )。 
この メソッド を サブ クラス で 上書き する と 便利 な こと が あり ます 。 
与え られ た line が Message の 区切り と なる デリミタ で あっ た 場合 に 真 を 返し ます 。 
この デリミタ 行 は 消費 さ れ 、 ファイル オブジェクト の 読み 位置 は その 直後 に なり ます 。 
標準 で は この メソッド は 単に その 行 が 空 行か どう か を チェック し ます が 、 サブ クラス で 上書き する こと も でき ます 。 
与え られ た 行 全体 を 無視 し 、 単に 読み 飛ばす とき に 真 を 返し ます 。 標準 で は 、 これ は 控え メソッド ( stub ) で あり 、 常に False を 返し ます が 、 サブ クラス で 上書き する こと も でき ます 。 
name に 一致 する ヘッダ から なる 行 の リスト が あれ ば 、 それら を 全て 返し ます 。 
各 物理 行 は 連続 し た 行内 容 で ある か 否 か に 関わら ず 別々 の リスト 要素 に なり ます 。 
name に 一致 する ヘッダ が ない 場合 、 空 の リスト を 返し ます 。 
name に 一致 する 最初 の ヘッダ と 、 その 行 に 連続 する ( 複数 ) 行 から なる 行 データ の リスト を 返し ます 。 
name に 一致 する ヘッダ が ない 場合 None を 返し ます 。 
name に 一致 する 最初 の ヘッダ における コロン 以降 の テキスト が 入っ た 単一 の 文字 列 を 返し ます 。 
この テキスト に は 、 先頭 の 空白 、 末尾 の 改行 、 また 後続 の 行 が ある 場合 に は 途中 の 改行 と 空白 が 含ま れ ます 。 
name に 一致 する ヘッダ が 存在 し ない 場合 に は None を 返し ます 。 
getrawheader ( name ) に 似 て い ます が 、 先頭 および 末尾 の 空白 を 剥ぎ 取り ます 。 
途中 に ある 空白 は 剥ぎ 取ら れ ませ ん 。 
オプション の default 引数 は 、 name に 一致 する ヘッダ が 存在 し ない 場合 に 、 別 の デフォルト 値 を 返す よう に 指定 する ため に 使わ れ ます 。 
正規 の 辞書 と の 互換 性 を より 高める ため の getheader () の 別名 ( alias ) です 。 
getheader ( name ) が 返し た 文字 列 を 解析 し て 、 ( full name , email address ) から なる ペア を 返し ます 。 
getaddr ( list ) に 似 て い ます が 、 複数 の メイル アドレス から なる リスト が 入っ た ヘッダ ( 例えば To : ヘッダ ) を 解析 し 、 ( full name , email address ) の ペア から なる リスト を ( たとえ ヘッダ に は 一つ しか アドレス が 入っ て い なかっ た として も ) 返し ます 。 
getheader () を 使っ て ヘッダ を 取得 し て 解析 し 、 time . mktime () と 互換 な 9 要素 の タプル に し ます ; フィールド 6 、 7 、 および 8 は 有用 な 値 で は ない ので 注意 し て 下さい 。 
name に 一致 する ヘッダ が 存在 し なかっ たり 、 ヘッダ が 解析 不能 で あっ た 場合 、 None を 返し ます 。 日付 の 解析 は 妖術 の よう な もの で あり 、 全て の ヘッダ が 標準 に 従っ て いる と は 限り ませ ん 。 
この メソッド は 多く の 発信 源 から 集め られ た 膨大 な 数 の 電子 メール で テスト さ れ て おり 、 正しく 動作 する こと が 分かっ て い ます が 、 間違っ た 結果 を 出力 し て しまう 可能 性 は まだ あり ます 。 
getheader () を 使っ て ヘッダ を 取得 し て 解析 し 、 10 要素 の タプル に し ます ; 最初 の 9 要素 は time . mktime () と 互換 性 の ある タプル を 形成 し 、 10 番目 の 要素 は その 日 における タイム ゾーン の UTC から の オフセット を 与える 数字 に なり ます 。 
getdate () と 同様 に 、 name に 一致 する ヘッダ が なかっ たり 、 解析 不能 で あっ た 場合 、 None を 返し ます 。 
Message インスタンス は また 、 限定 的 な マップ 型 の インタフェース を 持っ て い ます 。 すなわち : 
m [ name ] は 
m . getheader ( name ) に 似 て い ます が 、 一致 する ヘッダ が ない 場合 KeyError を 送出 し ます ; len ( m )、 
])、 
m . keys ()、 
m . items ()、 および 
]) は 期待 通り に 動作 し ます 。 ただし setdefault () は 標準 の 設定 値 として 空文字 列 を とり ます 。 
Message インスタンス は また 、 マップ 型 へ の 書き込み を 行える インタフェース 
m [ name ] = value および del m [ name ] を サポート し て い ます 。 
Message オブジェクト で は 、 clear ()、 copy ()、 popitem ()、 あるいは update () といった マップ 型 インタフェース の メソッド は サポート し て い ませ ん 。 
( get () および setdefault () の サポート は Python 2 . 2 で しか 追加 さ れ て い ませ ん 。 ) 最後 に 、 Message インスタンス は いくつ か の public な インスタンス 変数 を 持っ て い ます : 
ヘッダ 行 の セット 全体 が 、 ( setitem を 呼び出し て 変更 さ れ ない 限り ) 読み出さ れ た 順番 に 入れ られ た リスト です 。 
各行 は 末尾 の 改行 を 含ん で い ます 。 
ヘッダ を 終端 する 空 行 は リスト に 含ま れ ませ ん 。 
インスタンス 化 の 際 に 渡さ れ た ファイル または ファイル 類似 オブジェクト です 。 
この 値 は メッセージ 本体 を 読み出す ため に 使う こと が でき ます 。 
メッセージ に Unix " From " 行 が ある 場合 は その 行 、 そう で なけれ ば 空文字 列 に なり ます 。 
この 値 は 例えば mbox 形式 の メイルボックスファイル の よう な 、 ある コンテキスト 中 の メッセージ を 再 生成 する ため に 必要 です 。 
8 setup スクリプト を デバッグ する 
setup スクリプト に は 、 名前 や バージョン に とどまら ず 、 その他 の メタデータ を 含め られ ます 。 
以下 の よう な 情報 を 含め られ ます : 
メタデータ 
パッケージ の 名前 
短い 文字 列 
リリース の バージョン 
パッケージ 作者 の 名前 
パッケージ 作者 の 電子 メールアドレス 
電子 メールアドレス 
パッケージ メンテナンス 担当 者 の 名前 
パッケージ メンテナンス 担当 者 の 電子 メールアドレス 
パッケージ の ホームページ 
パッケージ について の 簡潔 な 概要 説明 
パッケージ について の 詳細 な 説明 
長い 文字 列 
パッケージ を ダウンロード できる 場所 
Trove 分類 語 
文字 列 から なる リスト 
必須 の フィールド です 。 
バージョン 番号 は major . minor [. patch [. sub ] 
の 形式 を とる よう 奨め ます 。 
作者 か メンテナ の どちら か は 必ず 区別 し て ください 。 
これら の フィールド は 、 2 . 2 . 3 および 2 . 3 より 以前 の バージョン の Python で も 互換 性 を 持た せ たい 場合 に は 指定 し て は なり ませ ん 。 
リスト は PyPI ウェブサイト に あり ます 。 
「 短い 文字 列 」 
200 文字 以内 の 一行 の テキスト 。 
「 長い 文字 列 」 
複数 行 から なり 、 ReStructuredText 形式 で 書か れ た プレーンテキスト ( http :// docutils . sf . net / を 参照 し て ください )。 
「 文字 列 の リスト 」 
下記 を 参照 し て ください 。 
これら の 文字 列 は いずれ も Unicode で あっ て は なり ませ ん 。 バージョン 情報 の コード 化 は 、 それ 自体 が 一つ の アート です 。 
Python の パッケージ は 一般 的 に 、 major . minor [. patch ] 
という バージョン 表記 に 従い ます 。 
メジャー ( major ) 番号 は 最初 は 0 で 、 これ は ソフトウェア が 実験 的 リリース に ある こと を 示し ます 。 
メジャー 番号 は 、 パッケージ が 主要 な 開発 目標 を 達成 し た とき 、 それ を 示す ため に 加算 さ れ て ゆき ます 。 
マイナー ( minor ) 番号 は 、 パッケージ に 重要 な 新 機能 が 追加 さ れ た とき に 加算 さ れ て ゆき ます 。 
パッチ ( patch ) 番号 は 、 バグフィクス 版 の リリース が 作成 さ れ た とき に 加算 さ れ ます 。 
末尾 に バージョン 情報 が 追加 さ れ 、 サブ リリース を 示す こと も あり ます 。 
これ は " a 1 , a 2 ,..., aN " ( アルファ リリース の 場合 で 、 機能 や API が 変更 さ れ て いる とき )、 " b 1 , b 2 ,..., bN " ( ベータ リリース の 場合 で 、 バグフィクス のみ の とき ) 、 そして " pr 1 , pr 2 ,..., prN " ( プレリリース の 最終 段階 で 、 リリース テスト の とき ) に なり ます 。 
以下 に 例 を 示し ます : 
パッケージ の 最初 の 実験 的 な リリース 
1 . 0 の 最初 の パッチ バージョン に対する 、 2 回 目 の アルファ リリース 
classifiers は 、 Python の リスト 型 で 指定 し ます : 
setup . py に classifiers を 入れ て おき 、 なおかつ 2 . 2 . 3 より も 以前 の バージョン の Python と 後方 互換 性 を 保ち たい なら 、 setup . py 中 で setup () を 呼び出す 前 に 、 以下 の コード を 入れ ます 。 
6 . 1 プリアンブル 用 の マーク アップ 
アドレス の ドメイン ネーム 部分 は 小文字 に し なけれ ば なり ませ ん 。 この マーク アップ を 行っ て も 著者 紹介 は 生成 さ れ ませ ん が 、 だれ が ドキュメント に 貢献 し た か を 追跡 する 上 で の 補助 として 用い ます 。 
クラス が 生成 さ れる 前 に クラス 辞書 を 変更 する 
他 の クラス の インスタンス を 返す - 本質 的 に は ファクトリ 関数 の 役割 を 果たす 
といった 、 クラス 生成 の プロセス を 監視 し たり 置き換え たり する クラス や 関数 を 書く こと が でき ます 。 __ metaclass __ 
この 変数 は name 、 bases 、 および dict を 引数 として 取る よう な 任意 の 呼び出し 可能 オブジェクト に でき ます 。 
クラス 生成 の 際 、 組み込み の type () の 代わり に 、 指定 さ れ た 呼び出し オブジェクト が 呼び出さ れ ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
以下 に 優先 順 で 並ん だ 規則 によって 、 適切 な メタ クラス が 決定 さ れ ます : 
dict ['__ metaclass __'] が あれ ば それ を 使い ます 。 
それ 以外 の 場合 で 、 最低 で も 一つ 基底 クラス を 持っ て いる なら 、 基底 クラス の メタ クラス (__ class __ 属性 を 探し 、 なけれ ば 基底 クラス の 型 ) を 使い ます 。 
それ 以外 の 場合 で 、 __ metaclass __ という 名前 の グローバル 変数 が あれ ば 、 それ を つかい ます 。 
それ 以外 の 場合 に は 、 旧 形式 の メタ クラス ( types . ClassType ) を 使い ます 。 
メタ クラス は 限り ない 潜在 的 利用 価値 を 持っ て い ます 。 
これ まで 試さ れ て き た アイデア に は 、 ログ 記録 、 インタフェース の チェック 、 自動 デリゲーション 、 自動 プロパティ 生成 、 プロ キシ 、 フレーム ワーク 、 そして 自動 リソース ロック / 同期 といった もの が あり ます 。 
メソッド オブジェクト を 操作 する 上 で 便利 な 関数 が いくつ か あり ます 。 
この PyTypeObject の インスタンス は Python の メソッド オブジェクト 型 を 表現 し ます 。 この オブジェクト は 、 types . MethodType 
として Python プログラム に 公開 さ れ て い ます 。 
o が メソッド オブジェクト ( PyMethod _ Type 型 で ある ) 場合 に 真 を 返し ます 。 
パラメタ は NULL に でき ませ ん 。 
任意 の 呼び出し 可能 オブジェクト func を 使っ た 新た な メソッド オブジェクト を 返し ます ; 関数 func は 、 メソッド が 呼び出さ れ た 時 に 呼び出さ れる オブジェクト です 。 
この メソッド を インスタンス に 束縛 ( bind ) し たい 場合 、 self を インスタンス 自体 に し て 、 class を self の クラス に し なけれ ば なり ませ ん 。 
それ 以外 の 場合 は self を NULL に 、 class を 非 束縛 メソッド を 提供 し て いる クラス に し なけれ ば なり ませ ん 。 PyObject * 
メソッド オブジェクト meth を 生成 し た クラス オブジェクト を 返し ます ; インスタンス が メソッド オブジェクト を 生成 し た 場合 、 戻り 値 は インスタンス の クラス に なり ます 。 
PyMethod _ Class () を マクロ で 実装 し た バージョン で 、 エラー チェック を 行い ませ ん 。 
meth に 関連付け られ て いる 関数 オブジェクト を 返し ます 。 
PyMethod _ Function () の マクロ 版 で 、 エラー チェック を 行い ませ ん 。 
meth が 束縛 メソッド の 場合 に は 、 メソッド に 関連付け られ て いる インスタンス を 返し ます 。 それ 以外 の 場合 に は NULL を 返し ます 。 
PyMethod _ Self () の マクロ 版 で 、 エラー チェック を 行い ませ ん 。 
さて 、 前 に 約束 し た よう に 、 spam _ system () Python プログラム から どう やっ て 呼び出す か を これから 示し ます 。 
まずは 、 関数 名 と アドレス を `` メソッド テーブル ( method table )'' に 列挙 する 必要 が あり ます : 
リスト 要素 の 三つ 目 の エントリ (" METH _ VARARGS ") に 注意 し て ください 。 
この エントリ は 、 C 関数 が 使う 呼び出し 規約 を インタプリタ に 教える ため の フラグ です 。 
この 場合 、 C 関数 は 第 三 引数 に " PyObject *" を 受理 する よう に せ ね ば なり ませ ん 。 この オブジェクト は 、 キーワード 引数 の 辞書 に なり ます 。 
こうした 関数 で 引数 を 解釈 する に は 、 PyArg _ ParseTupleAndKeywords () を 使っ て ください 。 メソッド テーブル は 、 モジュール の 初期 化 関数 内 で インタプリタ に 渡さ ね ば なり ませ ん 。 
初期 化 関数 は モジュール の 名前 を name と し た とき に initname () という 名前 で なけれ ば なら ず 、 モジュール ファイル 内 で 定義 さ れ て いる もの の うち 、 唯一 の 非 static 要素 で なけれ ば なり ませ ん : 
PyMODINIT _ FUNC は 関数 の 戻り 値 を void に なる よう に 宣言 し 、 プラットフォーム 毎 に 必要 と さ れる 、 特有 の リンク 宣言 ( linkage declaration ) を 定義 する こと 、 さらに C ++ の 場合 に は 関数 を extern " C " に 宣言 する こと に 注意 し て ください 。 Python プログラム が モジュール spam を 初めて import する とき 、 initspam () が 呼び出さ れ ます 。 
( Python の 埋め込み に関する コメント は 下記 を 参照 し て ください 。 
) initspam () は Py _ InitModule () を 呼び出し て `` モジュール オブジェクト '' を 生成 し ( オブジェクト は " spam " を キー として 辞書 sys . modules に 挿入 さ れ ます )、 第 二 引数 として 与え た メソッド テーブル ( PyMethodDef 構造 体 の 配列 ) の 情報 に 基づい て 、 組み込み 関数 オブジェクト を 新た な モジュール に 挿入 し て いき ます 。 Py _ InitModule () は 、 自ら が 生成 し た ( この 段階 で は まだ 未 使用 の ) モジュール オブジェクト へ の ポインタ を 返し ます 。 
Py _ InitModule () は 、 モジュール を 満足 に 初期 化 でき なかっ た 場合 、 致命 的 エラー で 中断 する ため 、 この 関数 の 呼び出し 側 が エラー を チェック する 必要 は あり ませ ん 。 Python を 埋め込む 場合 に は 、 _ PyImport _ Inittab テーブル の エントリ 内 に initspam () が ない 限り 、 initspam () は 自動的 に は 呼び出さ れ ませ ん 。 
この 問題 を 解決 する 最も 簡単 な 方法 は 、 Py _ Initialize () や PyMac _ Initialize () を 呼び出し た 後 に initspam () を 直接 呼び出し 、 静的 に リンク し て おい た モジュール を 静的 に 初期 化 し て しまう という もの です : 
intmain ( int argc , char * argv []){/* Python インタプリタ に argv [ 0 ] を 渡す */ Py _ SetProgramName ( argv [ 0 ]);/* Python インタプリタ を 初期 化 する 。 
必ず 必要 。 
*/ Py _ Initialize ();/* 静的 モジュール を 追加 する */ initspam (); 
Python ソース 配布 物 中 の Demo / embed / demo . c ファイル 内 に 例 が あり ます 。 
より 実質 的 な モジュール 例 は 、 Python ソース 配布 物 に Modules / xxmodule . c という 名前 で 入っ て い ます 。 
この ファイル は テンプレート として も 利用 でき ます し 、 単に 例 として も 読め ます 。 
ソース 配布 物 や Windows に インストール さ れ た Python に 入っ て いる modulator . py で は 、 拡張 モジュール で 実装 し なけれ ば なら ない 関数 や オブジェクト を 宣言 し 、 実装 部分 を 埋め て 作成 する ため の テンプレート を 生成 できる よう な 、 簡単 な グラフィカルユーザインタフェース を 提供 し て い ます 。 
この スクリプト は Tools / modulator / ディレクトリ に あり ます ; 詳しく は ディレクトリ 内 の README ファイル を 参照 し て ください 。 
Folder インスタンス は 開か れ た フォルダ を 表現 し 、 以下 の メソッド を 持っ て い ます : 
エラーメッセージ を 出力 し ます - 上書き する こと が でき ます 。 
フォルダ の 完全 な パス 名 を 返し ます 。 
フォルダ 内 の シーケンス ファイル の 完全 な パス 名 を 返し ます 。 
フォルダ 内 の メッセージ n の 完全 な パス 名 を 返し ます 。 
フォルダ 内 の メッセージ の ( 番号 の ) リスト を 返し ます 。 
現在 の メッセージ 番号 を 返し ます 。 
現在 の メッセージ 番号 を n に 設定 し ます 。 
msgs 文 を 解釈 し て 、 メッセージ の リスト に し ます 。 
最新 の メッセージ を 取得 し ます 。 メッセージ が フォルダ に ない 場合 に は 0 を 返し ます 。 
最新 の メッセージ を 設定 し ます ( 内部 使用 のみ )。 
フォルダ 内 の シーケンス から なる 辞書 を 返し ます 。 
シーケンス 名 が キー として 使わ れ 、 値 は シーケンス に 含ま れる メッセージ 番号 の リスト に なり ます 。 
フォルダ 内 の シーケンス から なる 辞書 name : list を 返し ます 。 
リスト 中 の メッセージ を フォルダ から 削除 し ます 。 
リスト 中 の メッセージ を 他 の フォルダ に 移動 し ます 。 
一つ の メッセージ を 他 の フォルダ の 指定 先 に 移動 し ます 。 
一つ の メッセージ を 他 の フォルダ の 指定 先 に コピー し ます 。 
Message クラス は mimetools . Message の メソッド に 加え 、 一つ メソッド を 持っ て い ます : 
新た な 開か れ た メッセージ オブジェクト を 返し ます ( ファイル 記述 子 を 一つ 消費 し ます )。 
MH インスタンス は 以下 の メソッド を 持っ て い ます : 
プロファイル エントリ ( 設定 さ れ て い なけれ ば None ) を 返し ます 。 
メイル ボックス の パス 名 を 返し ます 。 
現在 の フォルダ 名 を 返し ます 。 
現在 の フォルダ 名 を 設定 し ます 。 
トップレベルフォルダ の リスト を 返し ます 。 
全て の フォルダ を 列挙 し ます 。 
指定 し た フォルダ の 直下 に ある サブフォルダ の リスト を 返し ます 。 
指定 し た フォルダ の 下 に ある 全て の サブフォルダ の リスト を 返し ます 。 
新しい フォルダ を 生成 し ます 。 
フォルダ を 削除 し ます - サブフォルダ が 入っ て い て は いけ ませ ん 。 
新た な 開か れ た フォルダオブジェクト を 返し ます 。 
Message クラス は 、 rfc 822 . Message メソッド に 加え て 、 以下 の メソッド を 定義 し て い ます : 
Content - Type : ヘッダ の パラメータ リスト を 返し ます 。 
これ は 文字 列 の リスト です 。 
" の 形 の パラメータ に対して は 、 key は 小文字 に 変換 さ れ ます が 、 value は 変換 さ れ ませ ん 。 
たとえば 、 もし メッセージ に 、 ヘッダ " Content - type : text / html ; spam = 1 ; Spam = 2 ; Spam " が 含ま れ て いれ ば 、 getplist () は 、 Python リスト [' spam = 1 ',' spam = 2 ', ' Spam '] を 返す でしょ う 。 
Content - Transfer - Encoding : メッセージ ヘッダ で 指定 さ れ た 符号 化 方式 を 返し ます 。 
もし その よう な ヘッダ が 存在 し なけれ ば 、 ' 7 bit ' を 返し ます 。 
符号 化 方式 文字 列 は 小文字 に 変換 さ れ ます 。 
Content - Type : ヘッダ で 指定 さ れ た (" 
" の 形 で の ) メッセージ 型 を 返し ます 。 
もし その よう な ヘッダ が 存在 し なけれ ば 、 ' text / plain ' を 返し ます 。 
型 文字 列 は 小文字 に 変換 さ れ ます 。 
Content - Type : ヘッダ で 指定 さ れ た 主要 型 を 返し ます 。 
もし その よう な ヘッダ が 存在 し なけれ ば 、 ' text ' を 返し ます 。 
主要 型 文字 列 は 小文字 に 変換 さ れ ます 。 
Content - Type : ヘッダ で 指定 さ れ た 下位 型 を 返し ます 。 
もし その よう な ヘッダ が 存在 し なけれ ば 、 ' plain ' を 返し ます 。 
下位 型 文字 列 は 小文字 に 変換 さ れ ます 。 
MimeTypes インスタンス は 、 
モジュール の それ と 非常 に よく 似 た インターフェース を 提供 し ます 。 
サフィックス を サフィックス に マップ する 辞書 。 
これ は 、 符号 化 方式 と 型 が 同 一 拡張 子 で 示さ れる よう な 符号 化 ファイル が 認識 できる よう に 使用 さ れ ます 。 
例えば 、 . tgz 拡張 子 は 、 符号 化 方式 と 型 が 別個 に 認識 できる よう に . tar . gz に 対応 づけ られ ます 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な suffix _ map の コピー です 。 
ファイル 名 拡張 子 を 符号 化 型 に マッピング する 辞書 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な encodings _ map の コピー です 。 
ファイル 名 拡張 子 を MIME 型 に マッピング す るる 辞書 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な types _ map の コピー です 。 
ファイル 名 拡張 子 を 非 標準 で は ある が 、 一般 に 使わ れ て いる MIME 型 に マップ する 辞書 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な common _ types の コピー です 。 
guess _ extension () 関数 と 同様 に 、 オブジェクト の 一部 として 保存 さ れ た テーブル を 使用 し ます 。 
guess _ type () 関数 と 同様 に 、 オブジェクト の 一部 として 保存 さ れ た テーブル を 使用 し ます 。 
MIME 情報 を 、 path という 名 の ファイル から ロード し ます 。 
これ は ファイル を 解析 する のに readfp () を 使用 し ます 。 
MIME 型 情報 を 、 オープン し た ファイル から ロード し ます 。 
ファイル は 、 標準 の mime . types ファイル の 形式 で なけれ ば なり ませ ん 。 
モジュール は 、 本質 的 に は DOM 1 . 0 互換 の DOM に 、 いくつ か の DOM 2 機能 ( 主 に 名前 空間 機能 ) を 追加 し た もの です 。 Python における DOM インタフェース は 率直 な もの です 。 
以下 の 対応 付け 規則 が 適用 さ れ ます : 
インタフェース は インスタンス オブジェクト を 介し て アクセス さ れ ます 。 
アプリケーション 自身 から 、 クラス を インスタンス 化 し て は なり ませ ん ; Document オブジェクト 上 で 利用 可能 な 生成 関数 ( creator function ) を 使わ なけれ ば なり ませ ん 。 導出 インタフェース で は 基底 インタフェース の 全て の 演算 ( および 属性 ) に 加え 、 新た な 演算 を サポート し ます 。 
演算 は メソッド として 使わ れ ます 。 
DOM で は in パラメタ のみ を 使う ので 、 引数 は 通常 の 順番 ( 左 から 右 へ ) で 渡さ れ ます 。 オプション 引数 は あり ませ ん 。 
void 演算 は None を 返し ます 。 
IDL 属性 は インスタンス 属性 に 対応付け られ ます 。 
OMG IDL 言語 における Python へ の 対応 付け と の 互換 性 の ため に 、 属性 foo は アクセサメソッド _ get _ foo () および _ set _ foo () で も アクセス でき ます 。 readonly 属性 は 変更 し て は なり ませ ん ; と は いえ 、 これ は 実行 時 に は 強制 さ れ ませ ん 。 
short int 、 unsigned int 、 unsignedlong long 、 および boolean 型 は 、 全て Python 整数 オブジェクト に 対応付け られ ます 。 
DOMString 型 は Python 文字 列 型 に 対応付け られ ます 。 
では バイト 文字 列 ( byte string ) および Unicode 文字 列 の どちら か に 対応 づけ られ ます が 、 通常 Unicode 文字 列 を 生成 し ます 。 
DOMString 型 の 値 は 、 W 3 C の DOM 仕様 で 、 IDLnull 値 に なっ て も よい と さ れ て いる 場所 で は None に なる こと も あり ます 。 
const 宣言 を 行う と 、 ( xml . dom . minidom . Node . PROCESSING _ INSTRUCTION _ NODE の よう に ) 対応 する スコープ 内 の 変数 に 対応 付け を 行い ます ; これら は 変更 し て は なり ませ ん 。 
DOMException は 現状 で は 
で サポート さ れ て い ませ ん 。 
その 代わり 、 
は 、 TypeError や AttributeError といった 標準 の Python 例外 を 使い ます 。 
NodeList オブジェクト は Python の 組み込み リスト 型 を 使っ て 実装 さ れ て い ます 。 
Python 2 . 2 から は 、 これら の オブジェクト は DOM 仕様 で 定義 さ れ た インタフェース を 提供 し て い ます が 、 それ 以前 の バージョン の Python で は 、 公式 の API を サポート し て い ませ ん 。 
しかしながら 、 これら の API は W 3 C 勧告 で 定義 さ れ た インタフェース より も `` Python 的 な '' もの に なっ て い ます 。 
以下 の インタフェース は 
では 全く 実装 さ れ て い ませ ん : 
これら の 大 部分 は 、 ほとんど の DOM の ユーザ にとって 一般 的 な 用途 として 有用 と は なら ない よう な XML 文書 内 の 情報 を 反映 し て い ます 。 
6 . 29 . 3 複数 の 出力 先 に ログ を 出力 する 
logging パッケージ に は 高い 柔軟 性 が あり 、 その 設定 に たじろぐ こと も ある でしょ う 。 
そこで この 節 で は 、 logging パッケージ を 簡単 に 使う 方法 も ある こと を 示し ます 。 
以下 の 最も 単純 な 例 で は 、 コンソール に ログ を 表示 し ます : 
上 の スクリプト を 実行 する と 、 以下 の よう な メッセージ を 目 に する でしょ う : 
ここ で は ロガー を 特定 し なかっ た ので 、 システム は ルート ロガー を 使っ て い ます 。 デバッグ メッセージ や 情報 メッセージ は 表示 さ れ ませ ん が 、 これ は デフォルト の ルート ロガー が WARNING 以上 の 重要 度 を 持つ メッセージ しか 処理 し ない よう に 設定 さ れ て いる から です 。 
メッセージ の 書式 も デフォルト の 設定 に 従っ て い ます 。 出力 先 は sys . stderr で 、 これ も デフォルト の 設定 です 。 
重要 度 レベル や メッセージ の 形式 、 ログ の 出力 先 は 、 以下 の 例 の よう に 簡単 に 変更 でき ます : 
ここ で は 、 basicConfig () メソッド を 使っ て 、 以下 の よう な 出力 例 に なる ( そして / tmp / myapp . log に 書き込ま れる ) よう に 、 デフォルト 設定 を 変更 し て い ます : 
書式 化 文字 列 は 、 以下 の 指定 子 ( specifier ) を 常に とり ます 。 
指定 子 の 完全 な リスト について は Formatter の ドキュメント を 参照 し て ください 。 
書式 
ロガー の 名前 ( ログ チャネル ) の 名前 です 。 
メッセージ の ログ レベル (' DEBUG ', ' INFO ',' WARNING ', ' ERROR ',' CRITICAL ') です 。 
LogRecord が 生成 さ れ た 際 の 時刻 を 、 人間 が 読み取れる 形式 に し た もの です 。 
デフォルト で は 、 `` 2003 - 07 - 08 16 : 49 : 45 , 896 '' の よう な 形式 ( コンマ の 後ろ は ミリ 秒 ) です 。 
ログ メッセージ です 。 
以下 の よう に 、 追加 の キーワード パラメタ datefmt を 渡す と 日付 や 時刻 の 書式 を 変更 でき ます : 
出力 は 以下 の よう に なり ます : 
日付 を 書式 化 する 文字 列 は 、 strftime () の 要求 に 従い ます - 
モジュール を 参照 し て ください 。 コンソール や ファイル で は なく 、 別個 に 作成 し て おい た ファイル 類似 オブジェクト に ログ を 出力 し たい 場合 に は 、 basicConfig () に stream キーワード 引数 で 渡し ます 。 
stream と filename の 両方 の 引数 を 指定 し た 場合 、 stream は 無視 さ れる ので 注意 し て ください 。 状況 に 応じ て 変化 する 情報 も もちろん ログ 出力 でき ます 。 
以下 の よう に 、 単に メッセージ を 書式 化 文字 列 に し て 、 その 後ろ に 可変 情報 の 引数 を 渡す だけ です : 
出力 は 以下 の よう に なり ます : 
6 . 6 雑多 な テキストマークアップ インラインマークアップ に 加え て 、 `` ブロック '' マーク アップ が いくつ か 定義 さ れ て い て 、 様々 な テキスト 断片 に対して 読者 の 注意 を 引か せ やすく し て い ます 。 
この 節 で 述べ て いる マーク アップ は 、 こうした 目的 の 他 に 、 ( verbatim 環境 の よう に ) 一つ 以上 の 段落 や 、 他 の ブロック 構造 を マーク する 際 に 使う ため の もの です 。 
読者 が さらに 注意 を 払う べき 段落 を ラベル し ます 。 
どの 種 の 注意 を 求め て いる か は 、 type に 指定 し ます 。 
type 用 に 定義 さ れ て いる 値 は note と warning です ; これら は 、 同名 の インラインマークアップ と 同じ 目的 に 使い ます 。 types を 省略 する と 、 note を 使い ます 。 
type が 撮り うる 値 は 将来 新た に 追加 さ れる かも しれ ませ ん 。 
6 . 7 モジュール 特有 の マーク アップ ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
5 . 各種 サービス 
この 章 で は 、 Python の すべて の バージョン で 利用 可能 な 各種 サービス について 説明 し ます 。 
以下 に 概要 を 示し ます 。 
ドキュメント 生成 と オンラインヘルプシステム 
対話 モード を 使っ た 使用 例 の 内容 を 検証 する ため の フレーム ワーク 。 
単体テスト フレーム ワーク 
Python 用 テストスイート を 含む 回帰 テスト パッケージ 。 
Python 回帰 テスト の サポート 
汎用 10 進数 算術 仕様 ( General Decimal Arithmetic Specification ) の 実装 。 
数学 関数 ( sin () など )。 
複素数 の ため の 数学 関数 です 。 
よく 知ら れ て いる 様々 な 分布 を もつ 擬似 乱数 を 生成 する 。 
浮動 小数点 数 の 擬似 乱数 生成 器 。 
バイナリ サーチ 用 の 配列 二 分 法 アルゴリズム 。 
ヒープ キュー ( 別 名優 先度 キュー ) アルゴリズム 。 
一様 な 型 を 持つ 数値 から なる 効率 の よい アレイ 。 
ユニーク な 要素 の 集合 の 実装 
効率 的 な ループ 実行 の ため の イテレータ 生成 関数 。 
Perl の よう な 複数 の 入力 ストリーム を またい だ 行 の 繰り返し 処理 を サポート する ( その 場 で 保存 する 機能 つき )。 
Unix の cal プログラム 相当 の 機能 を 含ん だ カレンダー に関する 関数 群 
行 指向 の コマンド インタープリタ を 構築 
Unix シェル 類似 の 言語 に対する 単純 な 字句 解析 。 
ミキサオブジェクト に は 、 2 つ の ファイル 類似 メソッド が あり ます : 
すでに 開か れ て いる ミキサデバイスファイル を 閉じ ます 。 
ファイル を 閉じ た 後 で ミキサ を 使お う と する と 、 IOError を 送出 し ます 。 
開か れ て いる ミキサデバイスファイル の ファイルハンドルナンバ を 返し ます 。 
以下 は オーディオ ミキシング 固有 の メソッド です 。 
この メソッド は 、 利用 可能 な ミキサコントロール ( SOUND _ MIXER _ PCM や SOUND _ MIXER _ SYNTH の よう に 、 ミキシング を 行える チャネル ) を 指定 する ビット マスク を 返し ます 。 
この ビット マスク は 利用 可能 な 全て の ミキサコントロール の サブ セット です -- 定数 SOUND _ MIXER _* は モジュール レベル で 定義 さ れ て い ます 。 
例えば 、 もし 現在 の ミキサオブジェクト が PCM ミキサ を サポート し て いる か 調べる に は 、 以下 の Python コード を 実行 し ます : 
ほとんど の 用途 に は 、 SOUND _ MIXER _ VOLUME ( マスタ ボリューム ) と SOUND _ MIXER _ PCM コントロール が あれ ば 十分 でしょ う -- と は いえ 、 ミキサ を 使う コード を 書く とき に は 、 コントロール を 選ぶ 時 に 柔軟 性 を 持た せる べき です 。 
例えば Gravis Ultrasound に は SOUND _ MIXER _ VOLUME が あり ませ ん 。 
ステレオミキサコントロール を 示す ビット マスク を 返し ます 。 
ビット が 立っ て いる コントロール は ステレオ で ある こと を 示し 、 立っ て い ない コントロール は モノラル か 、 ミキサ が サポート し て い ない コントロール で ある ( どちら の 理由 か は controls () と 組み合わせ て 使う こと で 判別 でき ます ) こと を 示し ます 。 ビット マスク から 情報 を 得る 例 は 関数 controls () の コード 例 を 参照 し て ください 。 
録音 に 使用 できる ミキサコントロール を 特定 する ビット マスク を 返し ます 。 
ビット マスク から 情報 を 得る 例 は 関数 controls () の コード 例 を 参照 し て ください 。 
指定 し た ミキサコントロール の ボリューム を 返し ます 。 
2 要素 の タプル ( left _ volume , right _ volume ) を 返し ます 。 
ボリューム の 値 は 0 ( 無音 ) から 100 ( 最大 ) で 示さ れ ます 。 
指定 し た ミキサコントロール の ボリューム を ( left , right ) に 設定 し ます 。 left と right は 整数 で 、 0 ( 無音 ) から 100 ( 最大 ) の 間 で 指定 せ ね ば なり ませ ん 。 
呼び出し に 成功 する と 新しい ボリューム 値 を 2 要素 の タプル で 返し ます 。 サウンド カード によって は 、 ミキサ の 分解能 上 の 制限 から 、 指定 し た ボリューム と 厳密 に 同じ に は なら ない 場合 が あり ます 。 
不正 な コントロール を 指定 し た 場合 や 、 指定 し た ボリューム 値 が 範囲 外 で あっ た 場合 、 IOError を 送出 し ます 。 get _ recsrc 
現在 録音 の ソース に 使わ れ て いる コントロール を 示す ビット マスク を 返し ます 。 
録音 の ソース を 指定 に は この 関数 を 使っ て ください 。 
呼び出し に 成功 する と 、 新た な 録音 の ( 場合 によって は 複数 の ) ソース を 示す ビット マスク を 返し ます ; 不正 な ソース を 指定 する と IOError を 送出 し ます 。 
現在 の 録音 の ソース として マイク 入力 を 設定 する に は 、 以下 の よう に し ます : 
この 章 で 記述 さ れ て いる モジュール は 、 主 に マルチメディア アプリケーション に 役立つ さまざま な アルゴリズム または インター フェイス を 実装 し て い ます 。 
これら の モジュール は インストール 時 の 自由 裁量 に 応じ て 利用 でき ます 。 
生 の 音声 データ を 操作 する 
生 の 画像 データ を 操作 する 。 
AIFF あるいは AIFC フォーマット の オーディオ ファイル の 読み書き 
Sun AU サウンド フォーマット へ の インターフェース 
WAV サウンド フォーマット へ の インター フェイス 
IFF チャンクデータ の 読み込み 。 
RGB 他 の 色 体系 間 の 変換 。 
`` SGI RGB '' 形式 の 画像 ファイル を 読み書き し ます ( と は いえ 、 この モジュール は SGI 特有 の もの で は あり ませ ん !)。 
ファイル や バイト ストリーム に 含ま れる 画像 の 形式 を 決定 する 。 
サウンド ファイル の 識別 
OSS 互換 オーディオ デバイス へ の アクセス 。 
46 新しい Distutils コマンド の 作成 
22 . MS Windows 特有 の サービス 
Windows プラットフォーム で 利用 でき ます 。 
これら の 関数 は Windows レジストリ API を Python で 使える よう に し ます 。 
他 の 計算 機上 に ある 既定 の レジストリハンドル 接続 を 確立 し 、 ハンドル オブジェクト ( handle object ) を 返し ます 。 
computer _ name は リモート コンピュータ の 名前 で 、 r " computername " の 形式 を とり ます 。 
None の 場合 、 ローカル の 計算 機 が 使わ れ ます 。 
特定 の キー を 生成 する か 開き 、 ハンドル オブジェクト を 返し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ です 。 
特定 の キー を 削除 し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ です 。 
sub _ key は 文字 列 で 、 key パラメタ によって 特定 さ れ た キー の サブ キー で なけれ ば なり ませ ん 。 
この 値 は None で あっ て は なら ず 、 キー は サブ キー を 持っ て い て は なり ませ ん 。 
この メソッド は サブ キー を もつ キー を 削除 する こと は でき ませ ん 。 
この メソッド の 実行 が 成功 する と 、 キー 全体 が 、 その 値 すべて を 含め て 削除 さ れ ます 。 
この メソッド が 失敗 し た 場合 、 EnvironmentError 例外 が 送出 さ れ ます 。 
レジストリキー から 指定 さ れ た 名前 つき の 値 を 削除 し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ で なけれ ば なり ませ ん 。 
value は 削除 し たい 値 を 指定 する ため の 文字 列 です 。 
開か れ て いる レジストリキー の サブ キー を 列挙 し 、 文字 列 で 返し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ で なけれ ば なり ませ ん 。 
index は 整数 値 で 、 取得 する キー の インデクス を 特定 し ます 。 この 関数 は 呼び出さ れる たび に 一つ の サブ キー の 名前 を 取得 し ます 。 
この 関数 は 通常 、 これ 以上 サブ キー が ない こと を 示す EnvironmentError 例外 が 送出 さ れる まで 繰り返し 呼び出さ れ ます 。 
開か れ て いる レジストリキー の 値 を 列挙 し 、 タプル で 返し ます 。 
index は 整数 値 で 、 取得 する 値 の インデクス を 特定 し ます 。 この 関数 は 呼び出さ れる たび に 一つ の 値 の 名前 を 取得 し ます 。 
この 関数 は 通常 、 これ 以上 値 が ない こと を 示す EnvironmentError 例外 が 送出 さ れる まで 繰り返し 呼び出さ れ ます 。 結果 は 3 要素 の タプル に なり ます : 
値 の 名前 を 特定 する 文字 列 
値 の データ を 保持 する ため の オブジェクト で 、 その 型 は 背後 の レジストリ 型 に 依存 し ます 
値 の データ 型 を 特定 する 整数 です 
キー の すべて の 属性 を レジストリ に 書き込み ます 。 
また 、 システム の 遮断 時 に も ディスク に フラッシュ さ れ ます 。 
CloseKey () と 違っ て 、 FlushKey () メソッド は レジストリ に 全て の データ を 書き 終え た とき に のみ 返り ます 。 アプリケーション は 、 レジストリ へ の 変更 を 絶対 に 確実 に ディスク 上 に 反映 さ せる 必要 が ある 場合 に のみ 、 FlushKey () を 呼ぶ べき です 。 
FlushKey () を 呼び出す 必要 が ある か どう か 分から ない 場合 、 おそらく その 必要 は あり ませ ん 。 
指定 さ れ た キー の 下 に サブ キー を 生成 し 、 サブ キー に 指定 さ れ た ファイル の レジストリ 情報 を 記録 し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ です 。 
sub _ key は 記録 先 の サブ キー を 指定 する 文字 列 です 。 file _ name は レジストリデータ を 読み出す ため の ファイル 名 です 。 
指定 さ れ た キー を 開き 、 ハンドル オブジェクト を 返し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ です 。 
sub _ key は 開き たい サブ キー を 特定 する 文字 列 です 。 
res 予約 さ れ て いる 整数 値 で 、 ゼロ で なく て は なり ませ ん 。 
標準 の 値 は ゼロ です 。 
sam は 必要 な キー へ の セキュリティ アクセス を 記述 する 、 アクセス マスク を 指定 する 整数 です 。 
標準 の 値 は KEY _ READ です 。 
指定 さ れ た キー へ の 新しい ハンドル が 返さ れ ます 。 この 関数 が 失敗 する と 、 EnvironmentError が 送出 さ れ ます 。 
OpenKeyEx () の 機能 は OpenKey () を 標準 の 引数 で 使う こと で 提供 さ れ て い ます 。 
キー に 関数 情報 を タプル として 返し ます 。 
key は すでに 開か れ た キー か 、 既定 の HKEY _* 定数 の うち の 一つ です 。 結果 は 以下 の 3 要素 から なる タプル です : 
インデクス 
この キー が 持つ サブ キー の 数 を 表す 整数 。 
この キー が 持つ 値 の 数 を 表す 整数 。 
最後 の キー の 変更 が ( あれ ば ) いつ だっ た か を 表す 長 整数 で 、 1600 年 1 月 1 日 から の 100 ナノ 秒 単位 で 数え た もの 。 
キー に対する 、 名前 付け られ て い ない 値 を 文字 列 で 取得 し ます 。 
sub _ key は 値 が 関連付け られ て いる サブ キー の 名前 を 保持 する 文字 列 です 。 
この 引数 が None または 空文字 列 の 場合 、 この 関数 は key で 特定 さ れる キー に対して SetValue () メソッド で 設定 さ れ た 値 を 取得 し ます 。 レジストリ 中 の 値 は 名前 、 型 、 および データ から 構成 さ れ て い ます 。 
開か れ た レジストリキー に 関連付け られ て いる 、 指定 し た 名前 の 値 に対して 、 型 および データ を 取得 し ます 。 
value _ name は 要求 する 値 を 指定 する 文字 列 です 。 結果 は 2 つ の 要素 から なる タプル です : 
レジストリ 要素 の 名前 。 
この 値 の レジストリ 型 を 表す 整数 。 
指定 さ れ た キー と 、 その サブ キー 全て を 指定 し た ファイル に 保存 し ます 。 
file _ name は レジストリデータ を 保存 する ファイル の 名前 です 、 この ファイル は すでに 存在 し て い て は いけ ませ ん 。 
この 特権 は ファイルパーミッション と は 異なり ます - 詳細 は Win 32 ドキュメンテーション を 参照 し て ください 。 この 関数 は security _ attributes を NULL に し て API に 渡し ます 。 
値 を 指定 し た キー に 関連付け ます 。 
sub _ key は 値 が 関連付け られ て いる サブ キー の 名前 を 表す 文字 列 です 。 
type は データ の 型 を 指定 する 整数 です 。 現状 で は 、 この 値 は REG _ SZ で なけれ ば なら ず 、 これ は 文字 列 だけ が サポート さ れ て いる こと を 示し ます 。 
他 の データ 型 を サポート する に は SetValueEx () を 使っ て ください 。 
( 2048 バイト 以上 の ) 長い 値 は ファイル に 保存 し て 、 その ファイル 名 を 設定 レジストリ に 保存 する べき です 。 
そう すれ ば レジストリ を 効率 的 に 動作 さ せる 役に立ち ます 。 key 引数 に 指定 さ れ た キー は KEY _ SET _ VALUE アクセス で 開か れ て い なけれ ば なり ませ ん 。 
開か れ た レジストリキー の 値 フィールド に データ を 記録 し ます 。 
type は データ の 型 を 指定 する 整数 です 。 
値 は この モジュール で 定義 さ れ て いる 以下 の 定数 の うち の 一つ で なけれ ば なり ませ ん : 
何らかの 形式 の バイナリ データ 。 
32 ビット の 数 。 
32 ビット の リトルエンディアン 形式 の 数 。 
32 ビット の ビッグエンディアン 形式 の 数 。 
環境 変数 を 参照 し て いる 、 ヌル 文字 で 終端 さ れ た 文字 列 。 
("% PATH %")。 
REG _ LINK Unicode の シンボリックリンク 。 
ヌル 文字 で 終端 さ れ た 文字 列 から なり 、 二つ の ヌル 文字 で 終端 さ れ て いる 配列 ( Python は この 終端 の 処理 を 自動的 に 行い ます )。 
定義 さ れ て い ない 値 の 形式 。 
デバイスドライバリソース の リスト 。 REG _ SZ 
ヌル で 終端 さ れ た 文字 列 。 
reserved は 何 も し ませ ん - API に は 常に ゼロ が 渡さ れ ます 。 
value は 新た な 値 を 指定 する 文字 列 です 。 この メソッド で は また 、 指定 さ れ た キー に対して 、 さらに 別 の 値 や 型 情報 を 設定 する こと が でき ます 。 
そう すれ ば レジストリ を 効率 的 に 動作 さ せる 役に立ち ます 。 
22 . 2 . 1 レジストリハンドルオブジェクト 
11 . インターネット プロトコル と その 支援 
この モジュール で は 、 HTTP サーバ ( Web サーバ ) を 実装 する ため の 二つ の の クラス を 定義 し て い ます 。 
通常 、 この モジュール が 直接 使用 さ れる こと は なく 、 特定 の 機能 を 持つ Web サーバ を 構築 する ため に 使わ れ ます 。 
モジュール を 参照 し て ください 。 最初 の クラス 、 HTTPServer は SocketServer . TCPServer の サブ クラス です 。 
HTTPServer は HTTP ソケット を 生成 し て リクエスト 待ち ( listen ) を 行い 、 リクエスト を ハンドラ に 渡し ます 。 
サーバ を 作成 し て 動作 さ せる ため の コード は 以下 の よう に なり ます : 
クラス HTTPServer 
この クラス は TCPServer 型 の クラス の 上 に 構築 さ れ て おり 、 サーバ の アドレス を インスタンス 変数 server _ name および server _ port に 記憶 し ます 。 
サーバ は ハンドラ から アクセス 可能 で 、 通常 server インスタンス 変数 で アクセス し ます 。 
クラス BaseHTTPRequestHandler 
この クラス は サーバ に 到着 し た リクエスト を 処理 し ます 。 
この メソッド 自体 で は 、 実際 の リクエスト に 応答 する こと は でき ませ ん ; ( GET や POST の よう な ) 各 リクエスト メソッド を 処理 する ため に は サブ クラス 化 し なけれ ば なり ませ ん 。 
BaseHTTPRequestHandler で は 、 サブ クラス で 使う ため の クラス や インスタンス 変数 、 メソッド 群 を 数多く 提供 し て い ます 。 この ハンドラ は リクエスト を 解釈 し 、 次いで リクエスト 形式 ごと に 固有 の メソッド を 呼び出し ます 。 
メソッド 名 は リクエスト の 名称 から 構成 さ れ ます 。 
例えば 、 リクエスト メソッド " SPAM " に対して は 、 do _ SPAM () メソッド が 引数 なし で 呼び出さ れ ます 。 
リクエスト に 関連 する 情報 は 全て 、 ハンドラ の インスタンス 変数 に 記憶 さ れ て い ます 。 
サブ クラス で は __ init __() メソッド を 上書き し たり 拡張 し たり する 必要 は あり ませ ん 。 
BaseHTTPRequestHandler は 以下 の インスタンス 変数 を 持っ て い ます : 
HTTP クライアント の アドレス を 参照 し て いる 、 ( host , port ) の 形式 を とる タプル が 入っ て い ます 。 
HTTP 命令 ( リクエスト 形式 ) が 入っ て い ます 。 
例えば ' GET ' です 。 
リクエスト さ れ た パス が 入っ て い ます 。 
リクエスト の バージョン 文字 列 が 入っ て い ます 。 
例えば ' HTTP / 1 . 0 ' です 。 
MessageClass クラス 変数 で 指定 さ れ た クラス の インスタンス を 保持 し て い ます 。 
この インスタンス は HTTP リクエスト の ヘッダ を 解釈 し 、 管理 し て い ます 。 
入力 ストリーム が 入っ て おり 、 その ファイル ポインタ は オプション 入力 データ 部 の 先頭 を 指し て い ます 。 
クライアント に 返送 する 応答 を 書き込む ため の 出力 ストリーム が 入っ て い ます 。 この ストリーム に 書き込む 際 に は 、 HTTP プロトコル に 従っ た 形式 を とら なけれ ば なり ませ ん 。 
BaseHTTPRequestHandler は 以下 の クラス 変数 を 持っ て い ます : 
サーバ の ソフトウェア バージョン を 指定 し ます 。 
この 値 は 上書き する 必要 が 生じる かも しれ ませ ん 。 書式 は 複数 の 文字 列 を 空白 で 分割 し た もの で 、 各 文字 列 は ソフトウェア 名 [/ バージョン ] の 形式 を とり ます 。 
例えば 、 ' BaseHTTP / 0 . 2 ' です 。 sys _ version 
Python 処理 系 の バージョン が 、 version _ string メソッド や server _ version クラス 変数 で 利用 可能 な 形式 で 入っ て い ます 。 
例えば ' Python / 1 . 4 ' です 。 
クライアント に 返す エラー 応答 を 構築 する ため の 書式 化 文字 列 を 指定 し ます 。 
この 文字 列 は 丸 括弧 で 囲っ た キー 文字 列 で 指定 する 形式 を 使う ので 、 書式 化 の 対象 と なる 値 は 辞書 で なけれ ば なり ませ ん 。 
message および explain の 標準 の 値 は response クラス 変数 で みつける こと が でき ます 。 
この 値 に は 応答 に 使わ れる HTTP プロトコル の バージョン を 指定 し ます 。 
' HTTP / 1 . 1 ' に 設定 さ れる と 、 サーバ は 持続 的 HTTP 接続 を 許可 し ます ; しか し その 場合 、 サーバ は 全て の クライアント に対する 応答 に 、 正確 な 値 を 持つ Content - Length ヘッダ を ( send _ header () を 使っ て ) 含め なけれ ば なり ませ ん 。 
以前 の バージョン と の 互換 性 を 保つ ため 、 標準 の 設定 値 は ' HTTP / 1 . 0 ' です 。 
HTTP ヘッダ を 解釈 する ため の rfc 822 . Message 類似 の クラス を 指定 し ます 。 
通常 この 値 が 上書き さ れる こと は なく 、 標準 の 値 mimetools . Message に なっ て い ます 。 
この 変数 は エラーコード を 表す 整数 を 二つ の 要素 を もつ タプル に 対応付け ます 。 タプル に は 短い メッセージ と 長い メッセージ が 入っ て い ます 。 
例えば 、 { code : ( shortmessage , longmessage )} といった よう に なり ます 。 
shortmessage は 通常 、 エラー 応答 における message キー の 値 として 使わ れ 、 longmessage は explain キー の 値 として 使わ れ ます ( error _ message _ format クラス 変数 を 参照 し て ください ) 。 
BaseHTTPRequestHandler インスタンス は 以下 の メソッド を 持っ て い ます : 
handle _ one _ request () を 一 度 だけ ( 持続 的 接続 が 有効 に なっ て いる 場合 に は 複数 回 ) 呼び出し て 、 HTTP リクエスト を 処理 し ます 。 この メソッド を 上書き する 必要 は まったく あり ませ ん ; そう する 代わり に 適切 な do _*() を 実装 し て ください 。 
この メソッド は リクエスト を 解釈 し 、 適切 な do _*() メソッド に 転送 し ます 。 
この メソッド を 上書き する 必要 は まったく あり ませ ん 。 
完全 な エラー 応答 を クライアント に 送信 し 、 ログ 記録 し ます 。 
code は 数値 型 で 、 HTTP エラーコード を 指定 し ます 。 message は オプション で 、 より 詳細 な メッセージ テキスト です 。 
完全 な ヘッダ の セット が 送信 さ れ た 後 、 error _ message _ format クラス 変数 を 使っ て 組み立て られ た テキスト が 送ら れ ます 。 
応答 ヘッダ を 送信 し 、 受理 し た リクエスト を ログ 記録 し ます 。 
HTTP 応答 行 が 送ら れ た 後 、 Server および Date ヘッダ が 送ら れ ます 。 
これら 二つ の ヘッダ は それぞれ version _ string () および date _ time _ string () メソッド で 取り出し ます 。 
出力 ストリーム に 特定 の HTTP ヘッダ を 書き込み ます 。 
keyword は ヘッダ の キーワード を 指定 し 、 value に は その 値 を 指定 し ます 。 
応答 中 の HTTP ヘッダ の 終了 を 示す 空 行 を 送信 し ます 。 
受理 さ れ た ( 成功 し た ) リクエスト を ログ に 記録 し ます 。 code に は この 応答 に 関連付け られ た HTTP コード 番号 を 指定 し ます 。 
応答 メッセージ の 大き さ を 知る こと が できる 場合 、 size パラメタ に 渡す と よい でしょ う 。 
リクエスト を 遂行 でき なかっ た 際 に 、 エラー を ログ に 記録 し ます 。 
標準 で は 、 メッセージ を log _ message () に 渡し ます 。 従って 同じ 引数 ( format と 追加 の 値 ) を 取り ます 。 
任意 の メッセージ を sys . stderr に ログ 記録 し ます 。 
この メソッド は 通常 、 カスタム の エラー ログ 記録 機構 を 作成 する ため に 上書き さ れ ます 。 
format 引数 は 標準 の printf 形式 の 書式 化 文字 列 で 、 log _ message () に 渡さ れ た 追加 の 引数 は 書式 化 の 入力 として 適用 さ れ ます 。 
ログ 記録 さ れる 全て の メッセージ に は 、 クライアント の アドレス および 現在 の 日付 、 時刻 が 先頭 に 付け られ ます 。 
サーバ ソフトウェア の バージョン 文字 列 を 返し ます 。 
この 文字 列 は クラス 変数 server _ version および sys _ version を 組み合わせ た もの です 。 
メッセージ ヘッダ 向け に 書式 化 さ れ た 、 現在 の 日付 および 時刻 を 返し ます 。 
ログ 記録 向け に 書式 化 さ れ た 、 現在 の 日付 および 時刻 を 返し ます 。 
ログ 記録 向け に 書式 化 さ れ た 、 クライアント の アドレス を 返し ます 。 
この とき クライアント の IP アドレス に対する 名前 解決 を 行い ます 。 
参考 : 
: モジュール 
CGI スクリプト を サポート する よう に 拡張 さ れ た リクエスト ハンドラ 。 
ドキュメント ルート の 下 に ある ファイル に対する 要求 へ の 応答 のみ に 制限 し た 基本 リクエスト ハンドラ 。 . 
バージョン 2 . 3 で 変更 さ れ た 仕様 : Disabled module 
警告 : この ドキュメント は 、 Bastion モジュール を 使用 し て いる 古い コード を 読む 際 の 参照 用 として 残さ れ て い ます 。 
辞書 に よる と 、 バスティアン ( bastion 、 要塞 ) と は 、 `` 防衛 さ れ た 領域 や 地点 ''、 または `` 最後 の 砦 と 考え られ て いる もの '' で あり 、 オブジェクト の 特定 の 属性 へ の アクセス を 禁じる 方法 を 提供 する この モジュール に ふさわしい 名前 です 。 
制限 モード 下 の プログラム に対して 、 ある オブジェクト における 特定 の 安全 な 属性 へ の アクセス を 許可 し 、 かつ その他 の 安全 で ない 属性 へ の アクセス を 拒否 する に は 、 要塞 オブジェクト は 常に 
モジュール と共に 使わ れ なけれ ば なり ませ ん 。 
オブジェクト object を 保護 し 、 オブジェクト に対する 要塞 オブジェクト を 返し ます 。 
オブジェクト の 属性 に対する アクセス の 試み は 全て 、 filter 関数 によって 認可 さ れ なけれ ば なり ませ ん ; アクセス が 拒否 さ れ た 場合 AttributeError 例外 が 送出 さ れ ます 。 filter が 存在 する 場合 、 この 関数 は 属性 名 を 含む 文字 列 を 受理 し 、 その 属性 に対する アクセス が 許可 さ れる 場合 に は 真 を 返さ なけれ ば なり ませ ん ; filter が 偽 を 返す 場合 、 アクセス は 拒否 さ れ ます 。 
標準 の フィルタ は 、 アンダー スコア ("_") で 始まる 全て の 関数 に対する アクセス を 拒否 し ます 。 
name の 値 が 与え られ た 場合 、 要塞 オブジェクト の 文字 列 表現 は " Bastion for name " に なり ます ; そう で ない 場合 、 " repr ( object )" が 使わ れ ます 。 
class が 存在 する 場合 、 BastionClass の サブ クラス で なく て は なり ませ ん ; 詳細 は bastion . py の コード を 参照 し て ください 。 
稀 に BastionClass の 標準 設定 を 上書き する 必要 ほとんど ない はず です 。 
クラス BastionClass 
実際 に 要塞 オブジェクト を 実装 し て いる クラス です 。 
この クラス は Bastion () によって 使わ れる 標準 の クラス です 。 
getfunc 引数 は 関数 で 、 唯一 の 引数 で ある 属性 の 名前 を 与え て 呼び出し た 際 、 制限 さ れ た 実行 環境 に対して 、 開示 す べき 属性 の 値 を 返し ます 。 name は BastionClass インスタンス の repr () を 構築 する ため に 使わ れ ます 。 
CGIHTTPServer モジュール で は 、 BaseHTTPServer . BaseHTTPRequestHandler 互換 の インタフェース を 持ち 、 SimpleHTTPServer . SimpleHTTPRequestHandler の 動作 を 継承 し て い ます が CGI スクリプト を 動作 する こと も できる 、 HTTP 要求 処理 機構 クラス を 定義 し て い ます 。 
注意 : この モジュール は CGI スクリプト を Unix および Windows システム 上 で 実行 さ せる こと が でき ます ; Mac OS 上 で は 、 自分 と 同じ プロセス 内 で Python スクリプト を 実行 する こと しか でき ない はず です 。 
CGIHTTPServer モジュール で は 、 以下 の クラス を 定義 し て い ます : 
クラス CGIHTTPRequestHandler 
この クラス は 、 現在 の ディレクトリ か その 下 の ディレクトリ において 、 ファイル か CGI スクリプト 出力 を 提供 する ため に 使わ れ ます 。 
HTTP 階層 構造 から ローカル な ディレクトリ 構造 へ の 対応 付け は SimpleHTTPServer . SimpleHTTPRequestHandler と 全く 同じ な ので 注意 し て ください 。 この クラス で は 、 ファイル が CGI スクリプト で ある と 推測 さ れ た 場合 、 これ を ファイル し て 提供 する 代わり に スクリプト を 実行 し ます 。 
他 の 一般 的 な サーバ 設定 は 特殊 な 拡張 子 を 使っ て CGI スクリプト で ある こと を 示す の に対し 、 ディレクトリ ベース の CGI だけ が 使わ れ ます 。 do _ GET () および do _ HEAD () 関数 は 、 HTTP 要求 が cgi _ directories パス 以下 の どこ か を 指し て いる 場合 、 ファイル を 提供 する の で は なく 、 CGI スクリプト を 実行 し て その 出力 を 提供 する よう に 変更 さ れ て い ます 。 
CGIHTTPRequestHandler で は 以下 の データ メンバ を 定義 し て い ます : 
この 値 は 標準 で ['/ cgi - bin ', '/ htbin '] で あり 、 CGI スクリプト を 含ん で いる こと を 示す ディレクトリ を 記述 し ます 。 
CGIHTTPRequestHandler で は 以下 の メソッド を 定義 し て い ます : 
この メソッド は 、 CGI スクリプト で のみ 許さ れ て いる ' POST ' 型 の HTTP 要求 に対する サービス を 行い ます 。 
CGI で ない url に対して POST を 試み た 場合 、 出力 は Error 501 , " Can only POST to CGI scripts " に なり ます 。 
セキュリティ 上 の 理由 から 、 CGI スクリプト は ユーザ nobody の UID で 動作 する ので 注意 し て ください 。 
CGI スクリプト が 原因 で 発生 し た 問題 は 、 Error 403 に 変換 さ れ ます 。 
使用 例 について は 、 test () 関数 の 実装 を 参照 し て ください 。 
参考 : 
Web サーバ と リクエスト 処理 機構 を 実装 し た 基底 クラス です 。 . 
Macintosh プラットフォーム で 利用 でき ます 。 
CFBase , CFArray , CFData , CFDictionary , CFString と CFURL オブジェクト が いくらか 部分 的 に サポート さ れ て い ます 。 
ColorPicker モジュール は 標準 色 選択 ダイアログ へ の アクセス を 提供 し ます 。 
標準 色 選択 ダイアログ を 表示 し 、 ユーザ が 色 を 選択 する こと を 可能 に し ます 。 
この モジュール で は , ConfigParser クラス を 定義 し て い ます 。 
ConfigParser クラス は , Microsoft Windows の INI ファイル に 見 られる よう な 構造 を もつ , 基礎 的 な 設定 ファイル を 実装 し て い ます . この モジュール を 使っ て , エンド ユーザー が 簡単 に カスタマイズ できる よう な Python プログラム を 書く こと が でき ます 。 
警告 : この ライブラリ で は 、 Windows の レジストリ 用 に 拡張 さ れ た INI 文法 は サポート し て い ませ ん 。 
設定 ファイル は 1 つ 以上 の セクション から なり 、 セクション は "[ section ]" ヘッダ と それ に 続く RFC 822 形式 の " name : value " エントリ から なっ て い ます 。 
例 : 
この 場合 "%( dir ) s " は 変数 " dir " ( この 場合 は " frob ") に 展開 さ れ ます 。 
参照 の 展開 は 必要 に 応じ て 実行 さ れ ます 。 デフォルト 値 は ConfigParser の コンス トラクタ に 辞書 として 渡す こと で 設定 でき ます 。 
追加 の ( 他 の 値 を オーバーライド する ) デフォルト 値 は get () メソッド に 渡す こと が でき ます 。 
クラス RawConfigParser 
基本 的 な 設定 オブジェクト です 。 
defaults が 与え られ た 場合 、 オブジェクト に 固有 の デフォルト 値 が その 値 で 初期 化 さ れ ます 。 
この クラス は 値 の 置換 を サポート し ませ ん 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
クラス ConfigParser 
RawConfigParser の 派生 クラス で 値 の 置換 を 実装 し て おり 、 get () メソッド と items () メソッド に 省略 可能 な 引数 を 追加 し て い ます 。 
defaults に 含ま れる 値 は "%() s " による 値 の 置換 に 適当 な もの で ある 必要 が あり ます 。 
__ name __ は 組み込み の デフォルト 値 で 、 セクション 名 が 含ま れる ので defaults で 設定 し て も オーバーライド さ れ ます 。 置換 で 使わ れる すべて の オプション 名 は 、 ほか の オプション 名 へ の 参照 と 同様 に optionxform () メソッド を 介し て 渡さ れ ます 。 
たとえば 、 optionxform () の デフォルト 実装 ( これ は オプション 名 を 小文字 に 変換 し ます ) を 使う と 、 値 " foo %( bar ) s " および " foo %( BAR ) s " は 同一 に なり ます 。 
クラス SafeConfigParser 
ConfigParser の 派生 クラス で より 安全 な 値 の 置換 を 実装 し て い ます 。 
指定 し た セクション が 見つから なかっ た 時 に 起きる 例外 です 。 
すでに 存在 する セクション 名 に対して add _ section () が 呼び出さ れ た 際 に 起きる 例外 です 。 
指定 し た オプション が 指定 し た セクション に 存在 し なかっ た 時 に 起きる 例外 です 。 
文字 列 の 置換 中 に 問題 が 起き た 時 に 発生 する 例外 の 基底 クラス です 。 
InterpolationError の 派生 クラス で 、 文字 列 の 置換 回数 が MAX _ INTERPOLATION _ DEPTH を 越え た ため に 完了 し なかっ た 場合 に 発生 する 例外 です 。 
InterpolationError の 派生 クラス で 、 値 が 参照 し て いる オプション が 見つから ない 場合 に 発生 する 例外 です 。 
InterpolationError の 派生 クラス で 、 指定 さ れ た 構文 で 値 を 置換 する こと が でき なかっ た 場合 に 発生 する 例外 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
セクション ヘッダ を 持た ない ファイル を 構文 解析 しよ う と し た 時 に 起きる 例外 です 。 
ファイル の 構文 解析 中 に エラー が 起き た 場合 に 発生 する 例外 です 。 
ConfigParser クラス だけ に 関係 し ます 。 
Unix の シェル に 似 た , アプリケーション の 設定 ファイル 用 フォーマット として 使える もう 一つ の 小型 言語 です .. 
Cookie モジュール は HTTP の 状態 管理 機能 で ある cookie の 概念 を 抽象 化 、 定義 し て いる クラス です 。 
単純 な 文字 列 のみ で 構成 さ れる cookie の ほか 、 シリアル 化 可能 な あらゆる データ 型 で クッキー の 値 を 保持 する ため の 機能 も 備え て い ます 。 この モジュール は 元々 RFC 2109 と RFC 2068 に 定義 さ れ て いる 構文 解析 の 規則 を 厳密 に 守っ て い まし た 。 
しかし 、 MSIE 3 . 0 x が これら の RFC で 定義 さ れ た 文字 の 規則 に 従っ て い ない こと が 判明 し た ため 、 結局 、 やや 厳密 さ を 欠く 構文 解析 規則 に せ ざる を 得 ませ ん でし た 。 
属性 や Set - Cookie : ヘッダ が 正しく ない など 、 RFC 2109 に 合致 し て い ない とき に 発生 する 例外 です 。 
クラス BaseCookie 
この クラス は キー が 文字 列 、 値 が Morsel インスタンス で 構成 さ れる 辞書 風 オブジェクト です 。 
値 に対する キー を 設定 する とき は 、 値 が キー と 値 を 含む Morsel に 変換 さ れる こと に 注意 し て ください 。 input が 与え られ た とき は 、 そのまま load () メソッド へ 渡さ れ ます 。 
クラス SimpleCookie 
この クラス は BaseCookie の 派生 クラス で 、 value _ decode () は 与え られ た 値 の 正当 性 を 確認 する よう に 、 value _ encode () は str () で 文字 列 化 する よう に それぞれ オーバライド し ます 。 
クラス SerialCookie 
この クラス は BaseCookie の 派生 クラス で 、 value _ decode () と value _ encode () を それぞれ pickle . loads () と pickle . dumps () を 実行 する よう に オーバーライド し ます 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 この クラス を 使っ て は いけ ませ ん ! 信頼 でき ない cookie の データ から pickle 化 さ れ た 値 を 読み込む こと は 、 あなた の サーバ 上 で 任意 の コード を 実行 する ため に pickle 化 し た 文字 列 の 作成 が 可能 で ある こと を 意味 し 、 重大 な セキュリティ ホール と なり ます 。 
クラス SmartCookie 
この クラス は BaseCookie の 派生 クラス で 、 value _ decode () を 、 値 が pickle 化 さ れ た データ として 正当 な とき は pickle . loads () を 実行 、 そう で ない とき は その 値 自体 を 返す よう に オーバーライド し ます 。 
また value _ encode () を 、 値 が 文字 列 以外 の とき は pickle . dumps () を 実行 、 文字 列 の とき は その 値 自体 を 返す よう に オーバーライド し ます 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 SerialCookie と 同じ セキュリティ 上 の 注意 が 当てはまり ます 。 
関連 し て 、 さらなる セキュリティ 上 の 注意 が あり ます 。 
後方 互換 性 の ため 、 Cookie モジュール は Cookie という クラス 名 を SmartCookie の エイリアス として エクスポート し て い ます 。 
これ は ほぼ 確実 に 誤っ た 措置 で あり 、 将来 の バージョン で は 削除 する こと が 適当 と 思わ れ ます 。 
アプリケーション において SerialCookie クラス を 使う べき で ない の と 同じ 理由 で Cookie クラス を 使う べき で は あり ませ ん 。 
Web クライアント 向け の HTTP クッキー 処理 です 。 
cookielib と Cookie は 互いに 独立 し て い ます 。 . 
この モジュール が 実装 し て いる HTTP の 状態 管理 に関する 規格 です 。 
20 . SGI IRIX 特有 の サービス 
IRIX プラットフォーム で 利用 でき ます 。 
この モジュール に は 、 Silicon Graphics の Graphics Library で 使わ れる 定数 が 定義 さ れ て い ます 。 これら は C の プログラマー が ヘッダーファイル gl / device . h の 中 から 使っ て いる もの です 。 
詳しく は モジュール の ソース ファイル を ご覧 ください 。 
DocXMLRPCServer モジュール は SimpleXMLRPCServer クラス を 拡張 し 、 HTTP GET リクエスト に対し HTML ドキュメント を 返し ます 。 
サーバ は DocXMLRPCServer を 使っ た スタンドアロン 環境 、 D ocCGIXMLRPCRequestHandler を 使っ た CGI 環境 の 2 つ が あり ます 。 
クラス DocXMLRPCServer 
当 た な サーバ ・ インスタンス を 生成 し ます 。 
各 パラメータ の 内容 は SimpleXMLRPCServer . SimpleXMLRPCServer の もの と 同じ です が 、 requestHandler の デフォルト は DocXMLRPCRequestHandler に なっ て い ます 。 
クラス D ocCGIXMLRPCRequestHandler 
CGI 環境 に XMR - RPC リクエスト ・ ハンドラ の 新た な インスタンス を 生成 し ます 。 
クラス DocXMLRPCRequestHandler 
リクエスト ・ ハンドラ の 新た な インスタンス を 生成 し ます 。 
この リクエスト ・ ハンドラ は XML - RPC POST リクエスト 、 ドキュメント の GET 、 そして DocXMLRPCServer コンス トラクタ に 与え られ た logRequests パラメータ 設定 を 優先 する ため 、 ロギング の 変更 を サポート し ます 。 
EasyDialogs モジュール に は 、 Macintosh で 単純 な ダイアログ 操作 を 行う ため の ルーチン が 入っ て い ます 。 
EasyDialogs モジュール で は 以下 の 関数 を 定義 し て い ます 。 
メッセージ テキスト str 付き の モーダルダイアログ を 表示 し ます 。 テキスト の 長 さ は 最大 255 文字 です 。 
ボタン の テキスト は デフォルト で は `` OK '' です が 、 文字 列 の 引数 ok を 指定 し て 変更 でき ます 。 
ユーザ が `` OK '' ボタン を クリック する と 処理 を 戻し ます 。 
ユーザ に 文字 列 値 の 入力 を 促す モーダルダイアログ を 表示 し ます 。 
prompt は プロンプトメッセージ で 、 オプション の default 引数 は 入力 文字 列 の 初期 値 です ( 指定 し なけれ ば "" を 使い ます )。 
`` OK '' と `` Cancel '' ボタン の 文字 列 は ok と cancel の 引数 で 変更 でき ます 。 
文字 列 の 長 さ は 全て 最大 255 文字 です 。 入力 さ れ た 文字 列 か 、 ユーザ が キャンセル し た 場合 に は None を 返し ます 。 
ユーザ に 文字 列 値 の 入力 を 促す モーダルダイアログ を 表示 し ます 。 
AskString () に 似 て い ます が 、 ユーザ の 入力 し た テキスト は 点 で 表示 さ れ ます 。 
引数 は AskString () の もの と 同じ 意味 です 。 
プロンプト question と `` Yes ''、`` No ''、`` Cancel '' という ラベル の 3 つ ボタン が 付い た ダイアログ を 表示 し ます 。 
ユーザ が `` Yes '' を 押し た 場合 に は 1 を 、 `` No '' なら ば 0 を 、 `` Cancel '' なら ば - 1 を 返し ます 。 
RETURN キー を 押し た 場合 は default の 値 ( default を 指定 し ない 場合 は 0 ) を 返し ます 。 
ボタン の テキスト は それぞれ 引数 yes 、 no 、 cancel で 変更 でき ます 。 ボタン を 表示 し たく なけれ ば 引数 に "" を 指定 し ます 。 
プログレスバー 付き の モードレスダイアログ を 表示 し ます 。 
コマンド ライン 引数 リスト の 作成 を 補助 する ため の ダイアログ を 表示 し ます 。 
これら の 引数 が 真 の 場合 、 それぞれ 実在 の ファイル 、 まだ ( おそらく ) 存在 し ない ファイル 、 フォルダ へ の パス を コマンド ライン の パス として 設定 でき ます 。 ( 注意 : getopt . getopt () が ファイル や フォルダ 引数 を 認識 できる よう に する ため に は 、 オブ ション の 引数 が それら より 前 に 現れる よう に し なけれ ば なり ませ ん 。 
) 空白 を 含む 引数 は 、 空白 を シングル クォート あるいは ダブル クォート で 囲ん で 指定 でき ます 。 
ユーザ が `` Cancel '' ボタン を 押し た 場合 、 SystemExit 例外 を 送出 し ます 。 
optionlist に は 、 ポップアップ メニュー で 選べる 選択肢 を 定義 し た リスト を 指定 し ます 。 
ポップアップ メニュー の 要素 に は 、 次 の 2 つ の 形式 、 optstr または ( optstr , descr ) が あり ます 。 
descr に 短い 説明 文字 列 を 指定 する と 、 該当 の 選択肢 を ポップアップ メニュー で 選択 し いる 間 その 文字 列 を ダイアログ に 表示 し ます 。 
optstr と コマンド ライン 引数 の 対応 を 以下 に 示し ます : 
- x ( 短い オプション ) 
x : あるいは x = 
- x ( 値 を 持つ 短い オプション ) 
-- xyz ( 長い オプション ) 
xyz : あるいは xyz = 
-- xyz ( 値 を 持つ 長い オプション ) 
commandlist は cmdstr あるいは ( cmdstr , descr ) の 形 の アイテム から なる リスト です 。 descr は 上 と 同じ です 。 
cmdstr は ポップアップ メニュー に 表示 さ れ ます 。 
メニュー を 選択 する と cmdstr は コマンド ライン に 追加 さ れ ます が 、 それ に 続く ":" や "=" は ( 存在 し て いれ ば ) 取り除か れ ます 。 
どの ファイル を 開く か を ユーザ に 尋ねる ダイアログ を 表示 し 、 ユーザ が 選択 し た ファイル を 返し ます 。 
ユーザ が ダイアログ を キャンセル し た 場合 に は None を 返し ます 。 
その他 の 引数 の 説明 について は Apple Navigation Services の ドキュメント と EasyDialogs の ソース コード を 参照 し て ください 。 
保存 先 の ファイル を ユーザ に 尋ねる ダイアログ を 表示 し て 、 ユーザ が 選択 し た ファイル を 返し ます 。 
ユーザ が ダイアログ を キャンセル し た 場合 に は None を 返し ます 。 
savedFileName は 保存 先 の ファイル 名 ( 戻り 値 ) の デフォルト 値 です 。 
その他 の 引数 の 説明 について は AskFileForOpen () を 参照 し て ください 。 
フォルダ の 選択 を ユーザ に 促す ダイアログ を 表示 し て 、 ユーザ が 選択 し た フォルダ を 返し ます 。 
ユーザ が ダイアログ を キャンセル し た 場合 に は None を 返し ます 。 
Programmer ' s reference documentation の Carbon framework の Navigation Services の 項 。 
2 . 8 . 1 プログレスバーオブジェクト 
FrameWork モジュール は 、 対話 型 Macintosh アプリケーション の クラス で 、 同時に フレーム ワーク を 提供 し ます 。 
プログラマ は 、 サブ クラス を 作っ て 基底 クラス の 様々 な メソッド を オーバーライド し 、 必要 な 機能 を 実装 する こと で アプリケーション を 組み立て られ ます 。 
ソース か 例題 を 詳しく 見 て ください 。 
次に あげる の は 、 MacPython ニュース グループ に ポスト さ れ た コメント で 、 FrameWork の 強力 さ と 限界 について 述べ て い ます 。 
FrameWork の 最大 の 強み は 、 制御 の 流れ を たくさん の 異なる 部分 に 分割 できる こと です 。 
例えば W 
を 使っ て 、 いろいろ な 方法 で メニュー を オン / オフ し たり 、 残り を いじら ず に うまく プラグ イン さ せる こと が でき ます 。 
FrameWork の 弱点 は 、 コマンド インタフェース が 抽象 化 さ れ て い ない こと ( と いっ て も 難しい わけ で は ない です が )、 ダイアログサポート が 最低限 しか ない こと 、 それから コントロール / ツールバーサポート が 全く ない こと です 。 
FrameWork モジュール は 次 の 関数 を 定義 し て い ます 。 
アプリケーション 全体 を 表現 し て いる オブジェクト 。 
メソッド について の 詳細 は 以下 の 記述 を 参照 し て ください 。 
デフォルト __ init __() ルーチン は 、 空 の ウィンドウ 辞書 と アップル メニュー つき の メニュー バー を を 作成 し ます 。 
メニュー バー を 表現 する オブジェクト 。 
この オブジェクト は 普通 は ユーザ は 作成 し ませ ん 。 
メニュー を 表現 する オブジェクト 。 
生成 時 に は 、 メニュー が 現われる MenuBar と 、 title 文字 列 、 メニュー が 表示 さ れる べき ( 1 から 始まる ) 位置 after ( デフォルト は 末尾 ) を 渡し ます 。 
メニューアイテムオブジェクト を 作成 し ます 。 
引数 は 作成 する メニュー と 、 アイテム の タイトル 文字 列 、 オプション の キーボード ショートカット 、 コール バック ルーチン です 。 
コール バック は 、 メニュー ID 、 メニュー 内 の アイテム 番号 ( 1 から 数える )、 現在 の フロント ウィンドウ 、 イベント レコード を 引数 に 呼ば れ ます 。 呼び出し 可能 な オブジェクト の かわり に 、 コール バック は 文字 列 で も 良い です 。 
この 場合 、 メニュー の 選択 は 、 最前 面 の ウィンドウ と アプリケーション の 中 で メソッド 探索 を 引き起こし ます 。 
メソッド 名 は 、 コール バック 文字 列 の 前 に ' domenu _' を 付け た もの です 。 MenuBar の fixmenudimstate () メソッド を 呼び だす と 、 現在 の フロント ウィンドウ に もとづい て 、 適切 な ディム 化 を 全て の メニュー アイテム に対して ほどこし ます 。 
メニュー の 最後 に セパレータ を 追加 し ます 。 
label の 名前 の サブ メニュー を 、 メニュー menu の 下 に 作成 し ます 。 
メニュー オブジェクト が 返さ れ ます 。 
( モード レス ) ウィンドウ を 作成 し ます 。 
Parent は 、 ウィンドウ が 属する アプリケーション オブジェクト です 。 
作成 さ れ た ウィンドウ は まだ 表示 さ れ ませ ん 。 
モードレスダイアログウィンドウ を 作成 し ます 。 
与え た 幅 と 高 さ の ウィンドウ を 作成 する の に 必要 な 、 ( left , top , right , bottom ) から なる タプル を 返し ます 。 
ウィンドウ は 以前 の ウィンドウ に対して 位置 を ずらし て 作成 さ れ 、 全体 の ウィンドウ が 画面 から なるべく 外れ ない よう に し ます 。 
しかし 、 ウィンドウ は いつ でも 全く 同じ サイズ で 、 その ため 一部 は 画面 から 隠れる 場合 も あり ます 。 
マウス カーソル を 時計 型 に 設定 し ます 。 
マウス カーソル を 矢印 型 に 設定 し ます 。 
2 . 9 . 1 アプリケーション オブジェクト 
13 . 構造 化 マークアップツール 
13 . 1 . 1 HTML パーザ アプリケーション の 例 
この モジュール で は HTMLParser クラス を 定義 し ます 。 この クラス は HTML 
( ハイパーテキスト 記述 言語 、 HyperText Mark - up Language ) および XHTML 
で 書式 化 さ れ て いる テキストファイル を 解釈 する ため の 基礎 と なり ます 。 
に ある パーザ と 違っ て 、 この パーザ は 
の SGML パーザ に 基づい て は い ませ ん 。 
クラス HTMLParser 
HTMLParser クラス は 引数 なし で インスタンス 化 し ます 。 
HTMLParser インスタンス に HTML データ が 入力 さ れる と 、 タグ が 開始 し た とき 、 及び 終了 し た とき に 関数 を 呼び出し ます 。 
HTMLParser クラス は 、 ユーザ が 行い たい 動作 を 提供 する ため に 上書き できる よう に なっ て い ます 。 
の パーザ と 違い 、 この パーザ は 終了 タグ が 開始 タグ と 一致 し て いる か 調べ たり 、 外側 の タグ 要素 が 閉じる とき に 内側 で 明示 的 に 閉じ られ て い ない タグ 要素 の タグ 終了 ハンドラ を 呼び出し たり は し ませ ん 。 
例外 も 定義 さ れ て い ます : 
パーズ 中 に エラー に 遭遇 し た 場合 に HTMLParser クラス が 送出 する 例外 です 。 
この 例外 は 三つ の 属性 を 提供 し て い ます : msg は エラー の 内容 を 説明 する 簡単 な メッセージ 、 lineno は 壊れ た マーク アップ 構造 を 検出 し た 場所 の 行 番号 、 offset は 問題 の マーク アップ 構造 の 行内 で の 開始 位置 を 示す 文字数 です 。 
HTMLParser インスタンス は 以下 の メソッド を 提供 し ます : 
インスタンス を リセット し ます 。 
未 処理 の データ は 全て 失わ れ ます 。 
インスタンス 化 の 際 に 非 明示 的 に 呼び出さ れ ます 。 
パーザ に テキスト を 入力 し ます 。 
入力 が 完全 な タグ 要素 で 構成 さ れ て いる 場合 に 限り 処理 が 行わ れ ます ; 不完全 な データ で あっ た 場合 、 新た に データ が 入力 さ れる か 、 close () が 呼び出さ れる まで バッファ さ れ ます 。 
全て の バッファ さ れ て いる データ について 、 その後 に ファイル 終了 マーク が 続い て いる と みなし て 強制 的 に 処理 を 行い ます 。 
この メソッド は 入力 データ の 終端 で 行う べき 追加 処理 を 定義 する ため に 導出 クラス で 上書き する こと が でき ます が 、 再 定義 を 行っ た クラス で は 常に 、 HTMLParser 基底 クラス の メソッド close () を 呼び出さ なく て は なり ませ ん 。 
現在 の 行 番号 および オフセット 値 を 返し ます 。 
最も 最近 開か れ た 開始 タグ の テキスト 部分 を 返し ます 。 
この テキスト は 必ずしも 元 データ を 構造 化 する 上 で 必須 で は あり ませ ん が 、 `` 広く 知ら れ て いる ( as deployed )'' HTML を 扱っ たり 、 入力 を 最小限 の 変更 で 再 生成 ( 属性 間 の 空白 を そのまま に する 、 など ) し たり する 場合 に 便利 な こと が あり ます 。 
この メソッド は タグ の 開始 部分 を 処理 する ため に 呼び出さ れ ます 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
tag 引数 は タグ の 名前 で 、 小文字 に 変換 さ れ て い ます 。 
attrs 引数 は ( name , value ) の ペア から なる リスト で 、 タグ の 括弧 内 に ある 属性 が 収め られ て い ます 。 
name は 小文字 に 変換 さ れ 、 value 内 の エンティティ 参照 は 変換 さ れ ます 。 二 重 引用 符 や バックス ラッシュ は 変換 し ませ ん 。 
例えば 、 タグ A HREF =" http :// www . cwi . nl /" を 処理 する 場合 、 この メソッド は " handle _ starttag (' a ', [(' href ', ' http :// www . cwi . nl /')])" として 呼び出さ れ ます 。 
handle _ starttag () と 似 て い ます が 、 パーザ が XHTML 形式 の 空 タグ ( a .../) に 遭遇 し た 場合 に 呼び出さ れ ます 。 
この 特定 の 語彙 情報 ( lexical information ) が 必要 な 場合 、 この メソッド を サブ クラス で 上書き する こと が でき ます ; 標準 の 実装 で は 、 単に handle _ starttag () および handle _ endtag () を 呼ぶ だけ です 。 
この メソッド は ある タグ 要素 の 終了 タグ を 処理 する ため に 呼び出さ れ ます 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
tag 引数 は タグ の 名前 で 、 小文字 に 変換 さ れ て い ます 。 
この メソッド は 、 他 の メソッド に 当てはまら ない 任意 の データ を 処理 する ため に 呼び出さ れ ます 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
この メソッド は タグ 外 の "# ref ;" 形式 の 文字 参照 ( character reference ) を 処理 する ため に 呼び出さ れ ます 。 ref に は 、 先頭 の "#" および 末尾 の ";" は 含ま れ ませ ん 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
この メソッド は タグ 外 の " name ;" 形式 の 一般 の エンティティ 参照 ( entity reference ) name を 処理 する ため に 呼び出さ れ ます 。 name に は 、 先頭 の "" および 末尾 の ";" は 含ま れ ませ ん 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
この メソッド は コメント に 遭遇 し た 場合 に 呼び出さ れ ます 。 
comment 引数 は 文字 列 で 、 "-" および "-" デリミタ 間 の 、 デリミタ 自体 を 除い た テキスト が 収め られ て い ます 。 
例えば 、 コメント "!- text -" が ある と 、 この メソッド は 引数 ' text ' で 呼び出さ れ ます 。 
パーザ が SGML 宣言 を 読み出し た 際 に 呼び出さ れる メソッド です 。 
decl パラメタ は !... 記述 内 の 宣言 内容 全体 に なり ます 。 導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
処理 指令 に 遭遇 し た 場合 に 呼び出さ れ ます 。 
data に は 、 処理 指令 全体 が 含ま れ 、 例えば ? proc color =' red ' という 処理 指令 の 場合 、 handle _ pi (" proc color =' red '") の よう に 呼び出さ れ ます 。 
この メソッド は 導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
注意 : The HTMLParser クラス で は 、 処理 指令 に SGML の 構文 を 使用 し ます 。 
末尾 に "?" が XHTML の 処理 指令 で は 、 "?" が data に 含ま れ ます 。 
この モジュール は 、 Python インタプリタ 内 の MacOS 固有 の 機能 に対する アクセス を 提供 し ます 。 例えば 、 インタプリタ の イベント ループ 関数 など です 。 
' carbon ' か ' macho ' の いずれ か です 。 
現在 利用 し て いる Python が Mac OS X および Mac OS 9 互換 性 を もつ CarbonLib 形式 、 あるいは Mac OS X のみ の Mach - O 形式 を の どちら で ある か 判断 でき ます 。 
Python の 初期 の バージョン で は 、 値 が さらに 古い Mac OS 8 ランタイムモデル 用 の ' ppc ' で ある 事 が あり ます 。 
インタープリタ が どの よう な 方法 で リンク さ れ て いる か を 返し ます 。 
拡張 モジュール が リンク モデル 間 で 非 互換 性 かも しれ ない 場合 、 パッケージ は より 多く の 適切 な エラーメッセージ を 伝える ため に この 情報 を 使用 する こと が でき ます 。 
値 は 静的 リンク し た Python は ' static '、 Mac OS X framework で 構築 し た Python は ' framework '、 標準 の unix 共有 ライブラリ ( shared library ) で 構築 さ れ た Python は ' shared '、 Mac OS 9 互換 Python で は ' cfm ' と なり ます 。 
MacOS で エラー が ある と 、 この モジュール の 関数 か 、 Mac 固有 な ツールボックスインターフェースモジュール から 、 この 例外 が 生成 さ れ ます 。 
引数 は 、 整数 エラーコード ( OSErr 値 ) と テキスト で 記述 さ れ た エラーコード です 。 分かっ て いる 全て の エラーコード の シンボル 名 は 、 標準 モジュール 
で 定義 さ れ て い ます 。 
内部 の インタプリタ ループ で は 、 ScheduleParams () で 止め ない かぎり 、 Python は 時々 イベント を チェック し ます 。 
イベント が ある 場合 は 、 この 関数 を 使う と 、 Python イベント ハンドラ 関数 を 渡せ ます 。 
既に イベント ハンドラ が セット さ れ て いる のに 、 さらに セット しよ う と する と エラー に なり ます 。 有効 性 : MacPython - OS 9 
これ は インタプリタ の 内部 ループイベントハンドラ に 影響 を 与え ます 。 
Interval は 、 インタプリタ が どれ だけ の 頻度 ( 浮動 小数点 数 の 秒 で 表わさ れる ) で イベント 処理 コード に 入る か を 指定 し ます 。 
真 なら doint は 割り込み ( コマンド ドット ) チェック が 行わ れ ます 。 evtmask は インタプリタ に 、 イベント を マスク し て ( 再 描画 、 他 の アプリケーション に 切り替わる マウス クリック など ) イベント 処理 する よう 指示 し ます 。 
besocial フラグ は 、 他 の プロセス が 動作 する チャンス を 与え ます 。 
Python が 最前 面 で 動い て いる 時 は 、 最小限 の 実行 時間 が 割り当て られ 、 Python が 背景 に ある 場合 は 、 interval 当り に bgyield 秒 が 与え られ ます 。 全て の パラメータ は オプション で 、 現在 の 値 が デフォルト 値 と なり ます 。 
イベント レコード ev を Python の イベント ループ に 渡す 、 と いう より は 、 sys . stdout ウィンドウ ( Python を ビルド し た コンパイラ に もとづい て ) の ハンドラ に 渡さ れる こと に なり ます 。 
MacOS の エラーコード errno の テキスト 表現 を 返し ます 。 
この 関数 は 、 resid で 与え た DLOG リソース の 内容 で 、 スプラッシュ ウィンドウ を 画面 に 表示 し ます 。 
引数 なし で 呼び だす と 、 スプラッシュ 画面 を 取り除き ます 。 
拡張 モジュール を たくさん ロード さ せる 前 に 、 初期 化 の タイミング で アプレット に スプラッシュ 画面 を 表示 さ せ たい とき に 、 この 関数 が 便利 でしょ う 。 有効 性 : MacPython - OS 9 
Mac OS 9 上 で は 、 メッセージ message を 出し て ローレベル デバッガ に 入り ます 。 
オプション の object 引数 は 使わ れ ませ ん が 、 デバッガ から 内容 を 容易 に 検査 する こと が でき ます 。 
この 関数 は 主 に Python 拡張 モジュール の 開発 者 の ため に 用意 さ れ て い ます 。 
ベル を 鳴らし ます 。 
システム 起動 時 から の チック 数 ( clock ticks 、 1 / 60 秒 ) を 得 ます 。 
2 つ の 4 文字 の 文字 列 として ファイルクリエータ および ファイル タイプ を 返し ます 。 file 引数 は パス もしくは 、 FSSpec 、 FSRef オブジェクト を 与える 事 が でき ます 。 
ファイル の リソース フォーク を 開き ます 。 
引数 は 組み込み 関数 open () と 同じ です 。 
返さ れ た オブジェクト は ファイル の よう に 見える かも しれ ませ ん が 、 これ は Python の ファイル オブジェクト で は あり ませ ん ので 扱い に 微妙 な 違い が あり ます 。 
現在 の プロセス が 動作 し て いる ウィンドウ マネージャ に アクセス し ます 。 例えば 、 Mac OS X サーバー 上 、 あるいは SSH で ログイン し て いる 、 もしくは 現在 の インタープリタ が フルブローンアプリケーションバンドル ( fullblownapplication bundle ) から 起動 さ れ て い ない 場合 など の よう な 、 ウィンドウ マネージャ が 存在 し ない 場合 は False を 返し ます 。 
Mac OS 9 上 で は この 関数 は つねに True を 返し ます 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 
パッケージ を 、 MimeWriter モジュール より も 優先 し て 使用 す べき です 。 
この モジュール は 、 下位 互換 性 維持 の ため だけ に 存在 し ます 。 
この モジュール は 、 クラス MimeWriter を 定義 し ます 。 
この MimeWriter クラス は 、 MIME マルチパートファイル を 作成 する ため の 基本 的 な フォーマッタ を 実装 し ます 。 
これ は 出力 ファイル 内 を あちこち 移動 する こと も 、 大量 の バッファ スペース を 使う こと も あり ませ ん 。 
あなた は 、 最終 の ファイル に 現れる で あろ う 順番 に 、 パート を 書か なけれ ば なり ませ ん 。 
MimeWriter は 、 あなた が 追加 する ヘッダ を バッファ し て 、 それら の 順番 を 並び 替える こと が できる よう に し ます 。 
クラス MimeWriter 
MimeWriter クラス の 新しい インスタンス を 返し ます 。 
渡さ れる 唯一 の 引数 fp は 、 書く ため に 使用 する ファイル オブジェクト です 。 
StringIO オブジェクト を 使う こと も できる こと に 注意 し て 下さい 。 
12 . 8 . 1 MimeWriter オブジェクト 
MiniAEFrame モジュール は 、 アプリケーション に オープンスクリプティングアーキテクチャ 
( OSA ) サーバ 機能 を 持た せる ため の フレーム ワーク を 提供 し ます 。 
つまり 、 AppleEvents 
の 受信 と 処理 を 行わ せ ます 。 
と 連携 さ せ て も 良い し 、 単独 で も 使え ます 。 
実例 として 、 この モジュール は PythonCGISlave の 中 で 使わ れ て い ます 。 MiniAEFrame に は 以下 の クラス が 定義 さ れ て い ます 。 
クラス AEServer 
AppleEvent の 分岐 を 処理 する クラス 。 
作成 する アプリケーション は この クラス と 、 MiniApplication あるいは FrameWork . Application の サブ クラス で なけれ ば なり ませ ん 。 
サブ クラス 化 し た クラス で は __ init __() メソッド で 、 継承 し た 両方 の クラス の __ init __() メソッド を 呼び ださ なけれ ば なり ませ ん 。 
クラス MiniApplication 
FrameWork . Application と ある程度 互換 な クラス です が 、 機能 は 少ない です 。 
3 . 5 . 1 AEServer オブジェクト 
Navigation Services の 低 レベル インターフェース 。 
PixMapWrapper は PixMap オブジェクト を Python オブジェクト で ラップ し た もの で 、 各 フィールド に対し 名前 で アクセス できる よう に なり ます 。 
PIL 画像 と の 相互 の 変換 を する メソッド も 用意 さ れ て い ます 。 
7 . オプション の オペレーティングシステム サービス 
Queue モジュール は 、 多 生産 者 - 多 消費 者 FIFO キュー を 実装 し ます 。 
これ は 、 複数 の スレッド の 間 で 情報 を 安全 に 交換 し なけれ ば なら ない とき の スレッドプログラミング で 特に 有益 です 。 
この モジュール の Queue クラス は 、 必要 な すべて の ロックセマンティクス を 実装 し て い ます 。 
これ は Python の スレッドサポート の 状況 に 依存 し ます 。 Queue モジュール は 以下 の クラス と 例外 を 定義 し ます : 
クラス Queue 
クラス の コンス トラクタ です 。 maxsize は キュー に 置く こと の できる 要素 数 の 上限 を 設定 する 整数 です 。 
いったん この 大き さ に 達し たら 、 挿入 は キュー の 要素 が 消費 さ れる まで ブロック さ れ ます 。 
もし maxsize が 0 以下 で ある なら ば 、 キュー の 大き さ は 無限 です 。 
空 な Queue オブジェクト で 、 非 ブロック メソッド として get ()( または get _ nowait ()) が 呼ば れ た とき 、 送出 さ れる 例外 です 。 
満杯 な Queue オブジェクト で 、 非 ブロック メソッド として put ()( または put _ nowait ()) が 呼ば れ た とき 、 送出 さ れる 例外 です 。 
Tk プラットフォーム で 利用 でき ます 。 
ScrolledText モジュール は `` 正しい 動作 '' を する よう に 設定 さ れ た 垂直 スクロール バー を もつ 基本 的 な テキストウィジェット を 実装 する 同じ 名前 の クラス を 提供 し ます 。 ScrolledText クラス を 使う こと は 、 テキストウィジェット と スクロールバー を 直接 設定 する より 簡単 です 。 
コンス トラクタ は Tkinter . Text クラス の もの を 同じ です 。 テキストウィジェット と スクロールバー は Frame の 中 に 一緒 に pack さ れ 、 Grid と Pack ジオメトリマネジャ の メソッド は Frame オブジェクト から 得 られ ます 。 
これ によって 、 もっとも 標準 的 な ジオメトリマネジャ の 振る舞い に する ため に 、 直接 ScrolledText ウィジェット を 使える よう に なり ます 。 特定 の 制御 が 必要 なら ば 、 以下 の 属性 が 利用 でき ます : 
テキスト と スクロールバーウィジェット を 取り囲む フレーム 。 
スクロールバーウィジェット 。 
クラス SimpleHTTPRequestHandler 
この クラス は 、 現在 の ディレクトリ 以下 に ある ファイル を 、 HTTP リクエスト における ディレクトリ 構造 に 直接 対応付け て 提供 する ため に 利用 さ れ ます 。 
リクエスト の 解釈 の よう な 、 多く の 作業 は 基底 クラス BaseHTTPServer . BaseHTTPRequestHandler で 行わ れ ます 。 この クラス は 関数 do _ GET () および do _ HEAD () を 実装 し て い ます 。 
SimpleHTTPRequestHandler で は 以下 の メンバ 変数 を 定義 し て い ます : 
server _ version この 値 は " SimpleHTTP /" + __ version __ に なり ます 。 
__ version __ は この モジュール で 定義 さ れ て いる 値 です 。 
extensions _ map 拡張 子 を MIME 型 指定 子 に 対応付ける 辞書 です 。 
標準 の 型 指定 は 空文字 列 で 表さ れ 、 この 値 は application / octet - stream と 見なさ れ ます 。 対応 付け は 大 小文字 の 区別 を する ので 、 小文字 の キー のみ を 入れる べき です 。 
SimpleHTTPRequestHandler で は 以下 の メソッド を 定義 し て い ます : 
この メソッド は ' HEAD ' 型 の リクエスト 処理 を 実行 し ます : すなわち 、 GET リクエスト の 時 に 送信 さ れる もの と 同じ ヘッダ を 送信 し ます 。 
送信 さ れる 可能 性 の ある ヘッダ について の 完全 な 説明 は do _ GET () メソッド を 参照 し て ください 。 
この メソッド は os . listdir () を ディレクトリ の スキャン に 用い て おり 、 listdir () が 失敗 し た 場合 に は 404 応答 が 返さ れ ます 。 リクエスト が ファイル に 対応付け られ た 場合 、 その ファイル を 開い て 内容 を 返し ます 。 
要求 さ れ た ファイル を 開く 際 に 何らかの IOError 例外 が 送出 さ れ た 場合 、 リクエスト は 404 、' File not found ' エラー に 対応 づけ られ ます 。 
そう で ない 場合 、 コンテントタイプ が extensions _ map 変数 を 用い て 推測 さ れ ます 。 出力 は ' Content - type :' と 推測 さ れ た コンテントタイプ で 、 その後 に ヘッダ の 終了 を 示す 空白 行 が 続き 、 さらに その後 に ファイル の 内容 が 続き ます 。 
この ファイル は コンテントタイプ が text / で 始まっ て いる 場合 は テキスト モード で 、 そう で なけれ ば バイナリ モード で 開か れ ます 。 
使用 例 について は 関数 test () の 実装 を 参照 し て ください 。 
Web サーバ および 要求 ハンドラ の 基底 クラス 実装 。 . 
11 . 22 . 9 クライアント の サンプル 
SimpleXMLRPCServer モジュール は Python で 記述 さ れ た 基本 的 な XML - RPC サーバーフレームワーク を 提供 し ます 。 
サーバー は スタンドアロン で ある か 、 SimpleXMLRPCServer を 使う か 、 CGIXMLRPCRequestHandler を 使っ て CGI 環境 に 組み込ま れる か の 、 いずれ か です 。 
クラス SimpleXMLRPCServer 
新しく サーバー インスタンス を 作成 し ます 。 
引数 requestHandler に は 、 リクエストハンドラーインスタンス の ファクトリー を 設定 し ます 。 デフォルト は S impleXMLRPCRequestHandler です 。 
引数 addr と requestHandler は 
. TCPServer の コンス トラクター に 引き渡さ れ ます 。 
もし 引数 logRequests が 真 ( true ) で あれ ば 、 ( それ が デフォルト です が 、 ) リクエスト は ログ に 記録 さ れ ます 。 偽 ( false ) で ある 場合 に は ログ は 記録 さ れ ませ ん 。 
この クラス は XML - RPC プロトコル で 呼ば れる 関数 の 登録 の ため の メソッド を 提供 し ます 。 
クラス CGIXMLRPCRequestHandler 
CGI 環境 における XML - RPC リクエストハンドラー を 、 新た に 作成 し ます 。 
クラス S impleXMLRPCRequestHandler 
新しく リクエストハンドラーインスタンス を 作成 し ます 。 
この リクエストハンドラー は POST リクエスト を 受け持ち 、 SimpleXMLRPCServer の コンス トラクター の 引数 logRequests に 従っ た ログ 出力 を 行い ます 。 
SocketServer モジュール は ネットワーク サーバ を 実装 する タスク を 単純 化 し ます 。 この モジュール に は 4 つ の サーバ クラス が あり ます : TCPServer は 、 クライアント と サーバ 間 に 継続 的 な データ 流 路 を 提供 する 、 インターネット TCP プロトコル を 使い ます 。 
UDPServer は 、 順序 通り に 到着 し なかっ たり 、 転送 中 に 喪失 し て しまっ て も かまわ ない 情報 の 断続 的 な パケット で ある 、 データグラム を 使い ます 。 
UnixStreamServer および UnixDatagramServer クラス も 同様 です が 、 Unix ドメイン ソケット を 使い ます ; 従っ て 非 Unix プラットフォーム で は 利用 でき ませ ん 。 
ネットワーク プログラミング について の 詳細 は 、 W . Richard Steven 著 UNIX Network Programming や 、 Ralph Davis 著 Win 32 Network Programming の よう な 書籍 を 参照 し て ください 。 これら の 4 つ の クラス は 要求 を 同期 的 に ( synchronously ) 処理 し ます ; 各 要求 は 次 の 要求 を 開始 する 前 に 完結 し て い なけれ ば なり ませ ん 。 
同期 的 な 処理 は 、 サーバ で 大量 の 計算 を 必要 と する 、 あるいは クライアント が 処理 する に は 時間 が かかり すぎる よう な 大量 の データ を 返す 、 といった 理由 によって リクエスト に 長い 時間 が かかる 状況 に は 向い て い ませ ん 。 
こうした 状況 の 解決 方法 は 別 の プロセス を 生成 する か 、 個々 の 要求 を 扱う スレッド を 生成 する こと です ; ForkingMixIn および ThreadingMixIn 配合 クラス ( mix - in classes ) を 使え ば 、 非同期 的 な 動作 を サポート でき ます 。 サーバ の 作成 に は いくつ か の ステップ が あり ます 。 
最初 に 、 BaseRequestHandler クラス を サブ クラス 化 し て 要求 処理 クラス ( request hander class ) を 生成 し 、 その handle () メソッド を 上書き し なけれ ば なり ませ ん ; この メソッド で 入力 さ れる 要求 を 処理 し ます 。 
次に 、 サーバ クラス の うち 一つ を インスタンス 化 し て 、 サーバ の アドレス と 要求 処理 クラス を 渡さ なけれ ば なり ませ ん 。 
最後 に 、 サーバ オブジェクト の handle _ request () または serve _ forever () メソッド を 呼び出し て 、 単一 または 多数 の 要求 を 処理 し ます 。 ThreadingMixIn から 継承 し て スレッド を 利用 し た 接続 を 行う 場合 、 突発 的 な 通信 切断 時 の 処理 を 明示 的 に 指定 する 必要 が あり ます 。 
ThreadingMixIn クラス に は daemon _ threads 属性 が あり 、 サーバ が スレッド の 終了 を 待ち合わせる か どう か を 指定 する 事 が でき ます 。 
サーバ が 要求 待ち を 行っ て いる ソケット の ファイル 記述 子 を 整数 で 返し ます 。 
この 関数 は 一般 的 に 、 同じ プロセス 中 の 複数 の サーバ を 監視 できる よう に する ため に 、 select . select () に 渡さ れ ます 。 
単一 の 要求 を 処理 し ます 。 
この 関数 は 以下 の メソッド : get _ request ()、 verify _ request ()、 および process _ request () を 順番 に 呼び出し ます 。 
ハンドラ 中 で ユーザ によって 提供 さ れ た handle () が 例外 を 送出 し た 場合 、 サーバ の handle _ error () メソッド が 呼び出さ れ ます 。 
無限 個 の 要求 を 処理 し ます 。 
この 関数 は 単に 無限 ループ 内 で handle _ request () を 呼び出し ます 。 
address _ family サーバ の ソケット が 属し て いる プロトコル ファミリ です 。 
取り える 値 は socket . AF _ INET および socket . AF _ UNIX です 。 
ユーザ が 提供 する 要求 処理 クラス です ; 要求 ごと に この クラス の インスタンス が 生成 さ れ ます 。 
インターネット プロトコル で は 、 この 値 は 例えば (' 127 . 0 . 0 . 1 ', 80 ) の よう に アドレス を 与える 文字 列 と 整数 の ポート 番号 を 含む タプル です 。 
サーバ が 入力 の 要求 待ち を 行う ため の ソケット オブジェクト です 。 
サーバ クラス は 以下 の クラス 変数 を サポート し ます : 
サーバ が アドレス の 再 使用 を 許す か どう か を 示す 値 です 。 
この 値 は 標準 で False で 、 サブ クラス で 再 使用 ポリ シ を 変更 する ため に 設定 する こと が でき ます 。 
要求 待ち 行列 ( queue ) の サイズ です 。 単一 の 要求 を 処理 する の に 長時間 かかる 場合 に は 、 サーバ が 処理 中 に 届い た 要求 は 最大 request _ queue _ size 個 まで 待ち 行列 に 置か れ ます 。 
待ち 行列 が 一 杯 に なる と 、 それ 以降 の クライアント から の 要求 は `` 接続 拒否 ( Connection denied )'' エラー に なり ます 。 
標準 の 値 は 通常 5 です が 、 この 値 は サブ クラス で 上書き する こと が でき ます 。 
サーバ が 使う ソケット の 型 です ; 取り える 値 は 2 つ で 、 socket . SOCK _ STREAM と socket . SOCK _ DGRAM です 。 
TCPServer の よう な 基底 クラス の サブ クラス で 上書き できる サーバ メソッド は 多数 あり ます ; これら の メソッド は サーバ オブジェクト の 外部 の ユーザ にとって は 役 に たた ない もの です 。 
RequestHandlerClass を インスタンス 化 し 、 handle () メソッド を 呼び出し て 、 実際 に 要求 を 処理 し ます 。 
ソケット から 要求 を 受理 し て 、 クライアント と の 通信 に 使わ れる 新しい ソケット オブジェクト 、 および クライアント の アドレス から なる 、 2 要素 の タプル を 返し ます 。 
この 関数 は RequestHandlerClass の handle () メソッド が 例外 を 送出 し た 際 に 呼び出さ れ ます 。 
必要 なら 、 この 関数 から 新た な プロセス か スレッド を 生成 し て 要求 を 処理 する こと が でき ます ; その 処理 は ForkingMixIn または ThreadingMixIn クラス が 行い ます 。 
サーバ の コンス トラクタ によって 呼び出さ れ 、 サーバ を 活動 状態 に し ます 。 
この メソッド は 上書き でき ます 。 
要求 処理 クラス で は 、 新た な handle () メソッド を 定義 し なく て は なら ず 、 また 以下 の メソッド の いずれ か を 上書き する こと が でき ます 。 
各 要求 ごと に 新た な インスタンス が 生成 さ れ ます 。 
handle () メソッド が 呼び出さ れ た 後 、 何らかの 後始末 を 行う ため に 呼び出さ れ ます 。 
標準 の 実装 で は 何 も 行い ませ ん 。 
setup () または handle () が 例外 を 送出 し た 場合 に は 、 この 関数 は 呼び出さ れ ませ ん 。 
この 関数 で は 、 クライアント から の 要求 を 実現 する ため に 必要 な 全て の 作業 を 行わ なけれ ば なり ませ ん 。 
self . request の 型 は サービス が データグラム 型 か ストリーム 型 か で 異なり ます 。 
ストリーム 型 で は 、 self . request は ソケット オブジェクト です ; データグラムサービス で は 、 self . request は 文字 列 に なり ます 。 
しかし 、 この 違い は 要求 処理 配合 クラス の StreamRequestHandler や DatagramRequestHandler を 使う こと で 隠蔽 する こと が でき ます 。 
これら の クラス で は setup () および finish () メソッド を 上書き し て おり 、 self . rfile および self . wfile 属性 を 提供 し て い ます 。 
self . rfile および self . wfile は 、 要求 データ を 取得 し たり クライアント に データ を 返す ため に 、 それぞれ 読み出し 、 書き込み を 行う こと が でき ます 。 
handle () メソッド より 前 に 呼び出さ れ 、 何らかの 必要 な 初期 化 処理 を 行い ます 。 
標準 の 実装 で は 何 も 行い ませ ん 。 
この モジュール は 、 ( メモリ ファイル として も 知ら れ て いる ) 文字 列 の バッファ に対して 読み書き を 行う ファイル の よう な クラス 、 StringIO 、 を 実装 し て い ます 。 
操作 方法 について は ファイル オブジェクト の 説明 を 参照 し て ください ( セクション 2 . 3 . 9 )。 
クラス StringIO 
StringIO オブジェクト を 作る 際 に 、 コンス トラクター に 文字 列 を 渡す こと で 初期 化 する こと が でき ます 。 
文字 列 を 渡さ ない 場合 、 最初 は StringIO は カラ です 。 StringIO オブジェクト は ユニ コード も 8 - bit の 文字 列 も 受け付け ます が 、 この 2 つ を 混ぜる こと に は 少し 注意 が 必要 です 。 
この 2 つ が 一緒 に 使わ れる と 、 getvalue () が 呼ば れ た とき に 、 ( 8 th ビット を 使っ て いる ) 7 - bit ASCII に 解釈 でき ない 8 - bit の 文字 列 は 、 UnicodeError を 引き起こし ます 。 
次に あげる StringIO オブジェクト の メソッド に は 特別 な 説明 が 必要 です : 
StringIO オブジェクト の close () メソッド が 呼ば れる 前 なら いつ でも 、 `` file '' の 中身 全体 を 返し ます 。 
ユニ コード と 8 - bit の 文字 列 を 混ぜる こと の 説明 は 、 上 の 注意 を 参照 し て ください 。 この 2 つ の 文字 コード を 混ぜる と 、 この メソッド は UnicodeError を 引き起こす かも しれ ませ ん 。 
メモリ バッファ を 解放 し ます 。 
16 . 1 . 6 . 9 画像 
Tix ( Tk Interface Extension ) モジュール は 豊富 な 追加 ウィジェット を 提供 し ます 。 
標準 Tk ライブラリ に は 多く の 有用 な ウィジェット が あり ます が 、 完全 で は 決して あり ませ ん 。 
Tix ライブラリ は 標準 Tk に 欠け て いる 一般 的 に 必要 と さ れる ウィジェット の 大 部分 を 提供 し ます : HList 、 ComboBox 、 Control ( 別名 SpinBox ) および 各種 の スクロール 可能 な ウィジェット 。 
アプリケーション と ユーザ に 特有 の 要求 に 合う よう に 、 大 部分 の アプリケーションウィジェット を 選ぶ こと によって 、 アプリケーション を 設計 でき ます 。 
Tix の ホームページ 。 
ここ に は 追加 ドキュメント と ダウンロード へ の リンク が あり ます 。 
man ページ と 参考 資料 の オンライン 版 。 
プログラマ 用 参考 資料 の オンライン 版 。 
Tix と Tkinter プログラム の 開発 の ため の Tix アプリケーション 。 Tide アプリケーション は Tk または Tkinter に 基づい て 動作 し ます 。 
また 、 リモート で Tix / Tk / Tkinter アプリケーション を 変更 や デバグ する ため の インスペクタ TixInspect が 含ま れ ます 。 
16 . 2 . 2 . 1 基本 ウィジェット 
16 . 2 . 2 . 2 ファイル セレクタ 
16 . 2 . 2 . 3 ハイアラキカルリストボックス 
16 . 2 . 2 . 4 タビュラーリストボックス 
16 . 2 . 2 . 5 管理 ウィジェット 
16 . 2 . 2 . 6 画像 タイプ 
16 . 2 . 2 . 7 その他 の ウィジェット 
16 . 2 . 2 . 8 ジオメトリマネジャ を 作る 
Tkinter モジュール (`` Tk インタフェース '') は 、 Tk GUI ツール キット に対する 標準 の Python インタフェース です 。 
Tk と Tkinter は ほとんど の Unix プラットフォーム の 他 、 Windows や Macintosh システム 上 でも 利用 でき ます 。 
( Tk 自体 は Python の 一部 で は あり ませ ん 。 Tk は ActiveState で 保守 さ れ て い ます 。 
) 参考 : 
Python Tkinter Topic Guide で は 、 Tk を Python から 利用 する 上 で の 情報 と 、 その他 の Tk にまつわる 情報 源 を 数多く 提供 し て い ます 。 
Fredrik Lundh の オンライン リファレンス 資料 です 。 
オンライン リファレンス 資料 です 。 
Jython から Tkinter へ の インタフェース です 。 
John Grayson による 解説 書 ( ISBN 1 - 884777 - 81 - 3 ) です 。 
16 . 1 . 2 Tkinter お 助け 手帳 ( life preserver ) 
16 . 1 . 2 . 1 この節 の 使い方 
16 . 1 . 2 . 2 簡単 な Hello World プログラム 
16 . 1 . 3 Tcl / Tk を ( 本当に 少し だけ ) 見渡し て みる 
16 . 1 . 6 . 1 オプション の 設定 
16 . 1 . 6 . 3 Packer の オプション 
16 . 1 . 6 . 4 ウィジェット 変数 を 関連付ける 
16 . 1 . 6 . 5 ウィンドウマネジャ 
16 . 1 . 6 . 6 Tk オプション データ 型 
16 . 1 . 6 . 7 バインド と イベント 
16 . 1 . 6 . 8 index パラメータ 
注意 : この モジュール は 後方 互換 性 の ため だけ に 残さ れ て い ます 。 
Python 2 . 2 より 前 の バージョン の Python で 動作 する 必要 の ない コード を 書い て いる の なら ば 、 組み込み dict 型 から 直接 サブ クラス 化 する こと を 検討 し て ください 。 
この モジュール は 辞書 オブジェクト の ラッパー として 働く クラス を 定義 し ます 。 
独自 の 辞書 に 似 た クラス の ため に 役に立つ 基底 クラス で 、 これ を 継承 し 既存 の メソッド を オーバーライド し たり 、 あるいは 、 新しい もの を 追加 し たり する こと が でき ます 。 
この よう な 方法 で 、 辞書 に 新しい 振る舞い を 追加 でき ます 。 最小限 の マッピングインターフェイス を すでに 持っ て いる クラス の ため に 、 モジュール は すべて の 辞書 メソッド を 定義 し て いる mixin も 定義 し て い ます 。 
これ によって 、 shelve モジュール の よう な 辞書 の 代わり を する 必要 が ある クラス を 書く こと が 非常 に 簡単 に なり ます 。 UserDict モジュール は UserDict クラス と DictMixin を 定義 し て い ます : 
クラス UserDict 
辞書 を シミュレート する クラス 。 
インスタンス の 内容 は 通常 の 辞書 に 保存 さ れ 、 UserDict インスタンス の data 属性 を通して アクセス でき ます 。 
initialdata が 与え られれ ば 、 data は その 内容 で 初期 化 さ れ ます 。 他 の 目的 の ため に 使える よう に 、 initialdata へ の 参照 が 保存 さ れ ない こと が ある という こと に 注意 し て ください 。 
マッピング の メソッド と 演算 ( 節 2 . 3 . 8 を 参照 ) に 加え て 、 UserDict インスタンス は 次 の 属性 を 提供 し ます : 
UserDict クラス の 内容 を 保存 する ため に 使わ れる 実際 の 辞書 。 
クラス DictMixin 
__ getitem __、__ setitem __、__ delitem __ および keys といった 最小 の 辞書 インタフェース を 既に 持っ て いる クラス の ため に 、 全て の 辞書 メソッド を 定義 する mixin です 。 この mixin は スーパー クラス として 使わ れる べき です 。 
上 の それぞれ の メソッド を 追加 する こと で 、 より 多く の 機能 が だんだん 追加 さ れ ます 。 
Python 2 . 2 より 前 の バージョン の Python で 動作 する 必要 の ない コード を 書い て いる の なら ば 、 組み込み list 型 から 直接 サブ クラス 化 する こと を 検討 し て ください 。 
この モジュール は リスト オブジェクト の ラッパー として 働く クラス を 定義 し ます 。 
独自 の リスト に 似 た クラス の ため に 役に立つ 基底 クラス で 、 これ を 継承 し 既存 の メソッド を オーバーライド し たり 、 あるいは 、 新しい もの を 追加 し たり する こと が でき ます 。 
この よう な 方法 で 、 リスト に 新しい 振る舞い を 追加 でき ます 。 UserList モジュール は UserList クラス を 定義 し て い ます : 
クラス UserList 
リスト を シミュレート する クラス 。 
インスタンス の 内容 は 通常 の リスト に 保存 さ れ 、 UserList インスタンス の data 属性 を通して アクセス でき ます 。 
インスタンス の 内容 は 最初 に list の コピー に 設定 さ れ ます が 、 デフォルト で は 空 リスト [] です 。 list は 通常 の Python リスト か 、 UserList ( または サブ クラス ) の インスタンス の どちら か です 。 
変更 可能 シーケンス の メソッド と 演算 ( 節 2 . 3 . 6 を 参照 ) に 加え て 、 UserList インスタンス は 次 の 属性 を 提供 し ます : 
UserList クラス の 内容 を 保存 する ため に 使わ れる 実際 の Python リスト オブジェクト 。 
サブ クラス 化 の 要件 : UserList の サブ クラス は 引数 なし か 、 あるいは 一つ の 引数 の どちら か とともに 呼び出せる コンス トラクタ を 提供 する こと が 期待 さ れ ます 。 
新しい シーケンス を 返す リスト 演算 は 現在 の 実装 クラス の インスタンス を 作成 しよ う と し ます 。 
バージョン 2 . 0 で 変更 さ れ た 仕様 : Python バージョン 1 . 5 . 2 と 1 . 6 で は 、 コンス トラクタ が 引数 なし で 呼び出し 可能 で ある こと と 変更 可能 な data 属性 を 提供 する という こと も 要求 さ れ ます 。 
Python の 初期 の バージョン で は 、 導出 クラス の インスタンス を 作成 しよ う と は し ませ ん 。 
注意 : この モジュール の UserString クラス は 後方 互換 性 の ため だけ に 残さ れ て い ます 。 
Python 2 . 2 より 前 の バージョン の Python で 動作 する 必要 の ない コード を 書い て いる の なら ば 、 UserString を 使う 代わり に 組み込み str 型 から 直接 サブ クラス 化 する こと を 検討 し て ください ( 組み込み の MutableString と 等価 な もの は あり ませ ん )。 
この モジュール は 文字 列 オブジェクト の ラッパー として 働く クラス を 定義 し ます 。 
独自 の 文字 列 に 似 た クラス の ため に 役に立つ 基底 クラス で 、 これ を 継承 し 既存 の メソッド を オーバーライド し たり 、 あるいは 、 新しい もの を 追加 し たり する こと が でき ます 。 
クラス UserString 
文字 列 または ユニ コード 文字 列 オブジェクト を シミュレート する クラス 。 
インスタンス の 内容 は 通常 の 文字 列 または ユニ コード 文字 列 オブジェクト に 保存 さ れ 、 UserString インスタンス の data 属性 を通して アクセス でき ます 。 
インスタンス の 内容 は 最初 に sequence の コピー に 設定 さ れ ます 。 sequence は 通常 の Python 文字 列 または ユニ コード 文字 列 、 UserString ( または サブ クラス ) の インスタンス 、 あるいは 組み込み str () 関数 を 使っ て 文字 列 に 変換 できる 任意 の シーケンス の いずれ か です 。 
クラス MutableString 
この クラス は 上 の UserString から 導出 さ れ 、 変更 可能 に なる よう に 文字 列 を 再 定義 し ます 。 
変更 可能 な 文字 列 は 辞書 の キー として 使う こと が でき ませ ん 。 なぜなら 、 辞書 は キー として 変更 不能 な オブジェクト を 要求 する から です 。 
この クラス の 主 な 目的 は 、 辞書 の キー として 変更 可能 な オブジェクト を 使う という 試み を 捕捉 する ため に 、 継承 と __ hash __() メソッド を 取り除く ( オーバーライド する ) 必要 が ある こと を 示す 教育 的 な 例 を 提供 する こと です 。 そう し なけれ ば 、 非常 に エラー に なり やすく 、 突き止める こと が 困難 でしょ う 。 
文字 列 と ユニ コード オブジェクト の メソッド と 演算 ( 節 2 . 3 . 6 、`` 文字 列 メソッド '' を 参照 ) に 加え て 、 UserString インスタンス は 次 の 属性 を 提供 し ます : 
UserString クラス の 内容 を 保存 する ため に 使わ れる 実際 の Python 文字 列 または ユニコードオブジェクト 。 
W ウィジェット は 、 IDE で 頻繁 に 使わ れ て い ます 。 
aepack モジュール は 、 Python 変数 から AppleEvent ディスクリプタ へ の 変換 ( パック ) と 、 その 逆 に 変換 ( アンパック ) する 関数 を 定義 し て い ます 。 Python 内 で は AppleEvent ディスクリプタ は 、 組み込み 型 で ある AEDesc の Python オブジェクト として 扱わ れ ます 。 
aepack モジュール は 次 の 関数 を 定義 し て い ます 。 
Python 値 x を 変換 し た 値 を 保持 する AEDesc オブジェクト を 返し ます 。 
forcetype が 与える こと で 、 結果 の ディスクリプタ 型 を 指定 でき ます 。 
それ 以外 で は 、 Python 型 から Apple Event ディスクリプタ 型 へ の デフォルト の マッピング が 使わ れ ます 。 マッピング は 次 の 通り と なり ます 。 
x が Python インスタンス なら 、 この 関数 は __ aepack __() メソッド を 呼び だそ う と し ます 。 
この メソッド は AEDesc オブジェクト を 返し ます 。 x の 変換 が 上 で 定義 さ れ て い ない 場合 は 、 この 関数 は 、 テキスト ディスクリプタ として エン コード さ れ た 、 値 の ( repr () 関数 による ) Python 文字 列 表現 が 返さ れ ます 。 
x は AEDesc タイプ の オブジェクト で なけれ ば いけ ませ ん 。 
この 関数 は 、 Apple Event ディスクリプタ x の データ の Python オブジェクト 表現 を 返し ます 。 
単純 な AppleEvent データ 型 ( 整数 、 テキスト 、 浮動 少数 点数 ) の 、 対応 する Python 型 が 返さ れ ます 。 Apple Event リスト は Python リスト として 返さ れ 、 リスト の 要素 は 再帰 的 に アンパック さ れ ます 。 
formodulename の 指定 が ない 場合 、 オブジェクト 参照 ( 例 : line 3 of document 1 ) が 、 aetypes . ObjectSpecifier の インスタンス として 返さ れ ます 。 
ディスクリプタ 型 が typeFSS で ある AppleEvent ディスクリプタ が 、 FSSpec オブジェクト として 返さ れ ます 。 
AppleEvent レコード ディスクリプタ が 、 再帰 的 に アンパック さ れ た 、 型 の 4 文字 キー と 要素 を 持つ Python 辞書 として 返さ れ ます 。 オプション の formodulename 引数 は gensuitemodule より 作成 さ れる スタブ パッケージ により 利用 さ れ 、 オブジェクト 指定 子 の ため の OSA クラス を モジュール の 中 で 見つけ られる こと を 保証 し ます 。 
これ は 、 例えば 、 ファインダ が ウィンドウ に対して オブジェクト 指定 子 を 返す 場合 、 Finder . Window の インスタンス が 得 られ 、 aetypes . Window が 得 られ ない こと を 保証 し ます 。 
前者 は 、 ファインダ 上 の ウィンドウ が 持っ て いる 、 すべて の 特性 および 要素 の こと を 知っ て い ます 。 一方 、 後者 の もの は それら の こと を 知り ませ ん 。 
参考 : Carbon . AE 
: モジュール 
Apple Event ディスクリプタ 型 として コード さ れ た Python 定義 . 
Macintosh 上 で の プロセス 間 通信 に関する 情報 
aetools モジュール は Python で AppleScript クライアント として の 機能 を サポート する アプリケーション を 構築 する ため の 基本 的 な 機能 を 含ん で い ます 。 
さらに 、 この モジュール は 、 aetypes および aepack モジュール の 中核 機能 を イン ポート し 再 エクスポート し ます 。 
gensuitemodule によって 生成 さ れ た スタブ パッケージ は aetools の かなり 適切 な 部分 を イン ポート する ので 、 通常 は それ を 明示 的 に イン ポート する 必要 は あり ませ ん 。 
生成 さ れ た パッケージ 群 を 使用 する こと が でき ない 場合 と 、 スクリプト 対応 の ため に より 低い レベル の アクセス を 必要 と し て いる 場合 、 例外 が 発生 し ます 。 aetools モジュール は それ 自身 、 Carbon . AE モジュール によって 提供 さ れる AppleEvent サポート を 利用 し ます 。 
この モジュール に は ウィンドウ マネージャ へ の アクセス を 必要 と する という 1 つ の 欠点 が あり ます 。 詳細 は 第 1 . 1 . 2 章 を 見 て ください 。 
この 制限 は 将来 の リリース で 撤廃 さ れる かも しれ ませ ん 。 aetools モジュール は 下記 の 関数 を 定義 し て い ます 。 
あらかじめ 作成 さ れ た Carbon . AE . AEDesc オブジェクト 中 の パラメーター および 属性 を 保存 し ます 。 parameters と attributes は Python オブジェクト の 4 文字 の OSA パラメータ の キー を 写像 し た 辞書 です 。 
この オブジェクト を パック する に は aepack . pack () を 使い ます 。 
再帰 的 に 、 Carbon . AE . AEDesc イベント を Python オブジェクト へ アンパック し ます 。 
関数 は 引数 の 辞書 および 属性 の 辞書 を 返し ます 。 formodulename 引数 は AppleScript クラス を どこ に 捜し に 行く か 制御 する ため に 、 生成 さ れ た スタブ パッケージ により 使用 さ れ ます 。 
Python キーワード 引数 辞書 arguments を 、 写像 による 4 文字 の OSA キー として keydict の 中 で 指定 さ れ た Python 識別子 で ある キー の 交換 により packevent によって 要求 さ れる フォーマット へ 変換 し ます 。 
生成 さ れ た パッケージ 群 によって 使用 さ れ ます 。 
aetools モジュール は 次 の クラス を 定義 し て い ます 。 
クラス TalkTo 
timeout を 明示 的 に 設定 する 事 で 、 AppleEvent の 返答 を 待つ デフォルト の タイム アウト 時間 を 変更 する 事 が でき ます 。 _ start 
アプリケーション が 起動 し て い てる か 確認 し 、 起動 し て い なけれ ば 起動 しよ う と し ます 。 
OSA 指示 子 code , subcode ( いずれ も 通常 4 文字 の 文字 列 です ) を 持っ た 変数 の ため に 、 parameters を パック し 、 attributes に 戻し 、 目標 アプリケーション に それ を 送っ て 、 返答 を 待ち 、 unpackevent を 含ん だ 返答 を アンパック し 、 AppleEvent の 返答 を 返し 、 辞書 として アンパック し た 値 と 属性 を 返し て 、 AppleEvent Carbon . AE . AEDesc を 作成 し ます 。 
aetypes で は 、 Apple Event データ デスクリプタ ( data descriptor ) や Apple Event オブジェクト 指定 子 ( object specifier ) を 表現 する クラス を 定義 し て い ます 。 Apple Event データ は デスクリプタ に 含ま れ て い て 、 これら の デスクリプタ は 片付け さ れ て い ます 。 
多く の デスクリプタ は 、 単に 対応 する Python の 型 で 表現 さ れ て い ます 。 例えば 、 OSA 中 の typeText は Python 文字 列 型 で 、 typeFloat は 浮動 小数点 型 に なる 、 といった 具合 です 。 
この モジュール で は 、 OSA の 型 の うち 、 直接的 に 対応 する Python の 型 が ない もの の ため に クラス を 定義 し て い ます 。 
その よう な クラス の インスタンス に対する パック や アンパック 操作 は 、 aepack モジュール 自動的 に 処理 し ます 。 オブジェクト 指定 子 は 、 本質 的 に は Apple Event サーバ 中 に 実装 さ れ て いる オブジェクト へ の アドレス です 。 
クラス Unknown 
aepack や aetypes が サポート し て い ない OSA の デスクリプタ データ 、 すなわち 、 この モジュール で 扱っ て いる 他 の クラス や 、 Python の 組み込み 型 の 値 で 表現 さ れ て い ない よう な データ を 表現 する クラス です 。 
クラス Enum 
列挙 値 ( enumeration value ) を 表す クラス です 。 値 は 4 文字 の 文字 列 型 に なり ます 。 
クラス InsertionLoc 
オブジェクト of の 中 の pos の 位置 を 表す クラス です 。 
クラス Boolean 
ブール 値 ( 真偽 値 ) を 表す クラス です 。 
クラス StyledText 
スタイル 情報 ( フォント 、 タイプ フェイス など ) つき の テキスト を 表す クラス です 。 
クラス AEText 
スクリプト システム ( script system ) および スタイル 情報 の 入っ た テキスト を 表す クラス です 。 
クラス IntlText 
スクリプト システム と 言語 情報 ( language information ) の 入っ た テキスト を 表す クラス です 。 
クラス IntlWritingCode 
スクリプト システム と 言語 情報 を 表す クラス です 。 
クラス QDPoint 
QuickDraw の 点 を 表す クラス です 。 
クラス QDRectangle 
QuickDraw の 矩形 を 表す クラス です 。 
クラス RGBColor 
色 を 表す クラス です 。 
クラス Type 
OSA の 型 ( type value ) を 表す クラス です 。 4 文字 から なる 名前 を 値 に 持ち ます 。 
クラス Keyword 
OSA の キーワード です 。 
4 文字 から なる 名前 を 値 に 持ち ます 。 クラス Range 
範囲 を 表す クラス です 。 
クラス Ordinal 
先頭 を 表す " firs " や 中央 を 表す " midd " の よう に 、 数値 で ない 絶対 位置 指定 子 を 表す クラス です 。 
クラス Logical 
演算 子 logc を term に 適用 し た とき の 論理 式 を 表す クラス です 。 
クラス Comparison 
obj 1 と obj 2 の relo による 比較 を 表す クラス です 。 
以下 の クラス は 、 生成 さ れ た スタブ パッケージ が 、 AppleScript の クラス や プロパティ を Python で 表現 する 上 で 基底 クラス として 利用 し ます 。 
クラス ComponentItem 
OSA クラス 用 の 抽象 基底 クラス です 。 
サブ クラス で は 、 クラス 属性 want を 4 文字 の OSA クラス コード に 設定 せ ね ば なり ませ ん 。 
この クラス の サブ クラス の インスタンス は AppleScript オブジェクト 指定 子 と 同じ に なり ます 。 
インスタンス 化 を 行う 最 に は 、 which に セレクタ を 渡さ ね ば なり ませ ん 。 また 、 任意 で 親 オブジェクト を fr に 渡せ ます 。 
クラス NProperty 
OSA プロパティ 用 の 抽象 基底 クラス です 。 
サブ クラス で は 、 クラス 属性 want と which を 設定 し て 、 どの プロパティ を 表し て いる か を 指定 せ ね ば なり ませ ん 。 
この クラス の サブ クラス の インスタンス は オブジェクト 指定 子 と 同じ に なり ます 。 
クラス ObjectSpecifier 
ComponentItem と NProperty の 基底 クラス で 、 汎用 の OSA オブジェクト 指定 子 を 表し ます 。 
パラメタ の 説明 は Apple Open Scripting Architecture の ドキュメント を 参照 し て ください 。 
この クラス は 抽象 クラス で は ない ので 注意 し て ください 。 
この モジュール は AIFF と AIFF - C ファイル の 読み書き を サポート し ます 。 
AIFF ( Audio Interchange File Format ) は デジタルオーディオサンプル を ファイル に 保存 する ため の フォーマット です 。 
AIFF - C は AIFF の 新しい バージョン で 、 オーディオ データ の 圧縮 に 対応 し て い ます 。 
チャンネル 数 は 、 モノラル 、 ステレオ 、 4 チャンネル か どう か を 示し ます 。 
フレーム は それぞれ 、 チャンネル ごと に 一つ の サンプル から なり ます 。 
サンプル サイズ は 、 一つ の サンプル の 大き さ を バイト 数 で 示し た もの です 。 
したがって 、 一つ の フレーム は nchannels * samplesize バイト から なり 、 1 秒間 で は nchannels * samplesize * framerate バイト で 構成 さ れ ます 。 例えば 、 CD 品質 の オーディオ は 2 バイト ( 16 ビット ) の サンプル サイズ を 持っ て い て 、 2 チャンネル ( ステレオ ) で あり 、 44 , 100 フレーム / 秒 の フレーム レート を 持っ て い ます 。 
その ため 、 フレーム サイズ は 4 バイト ( 2 * 2 ) で 、 1 秒間 で は 2 * 2 * 44100 バイト ( 176 , 400 バイト ) に なり ます 。 aifc モジュール は 以下 の 関数 を 定義 し て い ます : 
AIFF あるいは AIFF - C ファイル を 開き 、 後述 する メソッド を 持つ インスタンス を 返し ます 。 
引数 file は ファイル を 示す 文字 列 か 、 ファイル オブジェクト の いずれ か です 。 mode は 、 読み込み 用 に 開く とき に は ' r ' か ' rb ' の どちら か で 、 書き込み 用 に 開く とき に は ' w ' か ' wb ' の どちら か で なけれ ば なり ませ ん 。 
もし 省略 さ れ たら 、 
file . mode が 存在 すれ ば それ が 使用 さ れ 、 なけれ ば ' rb ' が 使わ れ ます 。 
書き込み 用 に この メソッド を 使用 する とき に は 、 これから 全部 で どれ だけ の サンプル 数 を 書き込む の か 分から なかっ たり 、 writeframesraw () と setnframes () を 使わ ない なら 、 ファイル オブジェクト は シーク 可能 で なけれ ば なり ませ ん 。 
ファイル が open () によって 読み込み 用 に 開か れ た とき に 返さ れる オブジェクト に は 、 以下 の メソッド が あり ます : 
オーディオ チャンネル 数 ( モノラル なら 1 、 ステレオ なら 2 ) を 返し ます 。 
サンプル サイズ を バイト 数 で 返し ます 。 
サンプリング レート ( 1 秒 あたり の オーディオ フレーム 数 ) を 返し ます 。 
ファイル の 中 の オーディオ フレーム 数 を 返し ます 。 
オーディオ ファイル で 使用 さ れ て いる 圧縮 形式 を 示す 4 文字 の 文字 列 を 返し ます 。 
AIFF ファイル で は ' NONE ' が 返さ れ ます 。 
オーディオ ファイル の 圧縮 形式 を 人 に 判読 可能 な 形 に し た もの を 返し ます 。 
AIFF ファイル で は ' not compressed ' が 返さ れ ます 。 
以上 の 全て の 値 を 上 の 順 に 並べ た タプル を 返し ます 。 
オーディオ ファイル の マーカー の リスト を 返し ます 。 
一つ の マーカー は 三つ の 要素 の タプル です 。 
要素 の 1 番目 は マーク ID ( 整数 )、 2 番目 は マーク 位置 の フレーム 数 を データ の 始め から 数え た 値 ( 整数 )、 3 番目 は マーク の 名称 ( 文字 列 ) です 。 
与え られ た id の マーク の 要素 を getmarkers () で 述べ た タプル で 返し ます 。 
オーディオ ファイル の 次 の nframes 個 の フレーム を 読み込ん で 返し ます 。 
返さ れる データ は 、 全 チャンネル の 圧縮 さ れ て い ない サンプル を フレーム ごと に 文字 列 に し た もの です 。 
読み込む ポインタ を データ の 始め に 巻き 戻し ます 。 
次に readframes () を 使用 する と 、 データ の 始め から 読み込み ます 。 
指定 し た フレーム 数 の 位置 に ポインタ を 設定 し ます 。 
現在 の ポインタ の フレーム 位置 を 返し ます 。 
AIFF ファイル を 閉じ ます 。 
この メソッド を 呼び出し た あと で は 、 オブジェクト は もう 使用 でき ませ ん 。 
ファイル が open () によって 書き込み 用 に 開か れ た とき に 返さ れる オブジェクト に は 、 readframes () と setpos () を 除く 上述 の 全て の メソッド が あり ます 。 
さらに 以下 の メソッド が 定義 さ れ て い ます 。 
get *() メソッド は 、 対応 する set *() を 呼び出し た あと で のみ 呼び出し 可能 です 。 
最初 に writeframes () あるいは writeframesraw () を 呼び出す 前 に 、 フレーム 数 を 除く 全て の パラメータ が 設定 さ れ て い なけれ ば なり ませ ん 。 
AIFF ファイル を 作り ます 。 
デフォルト で は AIFF - C ファイル が 作ら れ ます が 、 ファイル 名 が '. aiff ' で 終わっ て いれ ば AIFF ファイル が 作ら れ ます 。 
AIFF - C ファイル を 作り ます 。 
オーディオ ファイル の チャンネル 数 を 設定 し ます 。 
オーディオ の サンプル サイズ を バイト 数 で 設定 し ます 。 
サンプリング レート を 1 秒 あたり の フレーム 数 で 設定 し ます 。 
オーディオ ファイル に 書き込ま れる フレーム 数 を 設定 し ます 。 もし この パラメータ が 設定 さ れ て い なかっ たり 正しく なかっ たら 、 ファイル は シーク に 対応 し て い なけれ ば なり ませ ん 。 
圧縮 形式 を 設定 し ます 。 
もし 設定 し なけれ ば 、 オーディオ データ は 圧縮 さ れ ませ ん 。 
AIFF ファイル は 圧縮 でき ませ ん 。 
変数 name は 圧縮 形式 を 人 に 判読 可能 に し た もの で 、 変数 type は 4 文字 の 文字 列 で なけれ ば なり ませ ん 。 
現在 の ところ 、 以下 の 圧縮 形式 が サポート さ れ て い ます : NONE , ULAW , ALAW , G 722 。 
上 の 全 パラメータ を 一 度 に 設定 し ます 。 
引数 は それぞれ の パラメータ から なる タプル です 。 
つまり 、 setparams () の 引数 として 、 getparams () を 呼び出し た 結果 を 使う こと が でき ます 。 
指定 し た ID ( 1 以上 )、 位置 、 名称 で マーク を 加え ます 。 
この メソッド は 、 close () の 前 なら いつ でも 呼び出す こと が でき ます 。 
出力 ファイル の 現在 の 書き込み 位置 を 返し ます 。 
setmark () と の 組み合わせ で 使う と 便利 です 。 
出力 ファイル に データ を 書き込み ます 。 
この メソッド は 、 オーディオ ファイル の パラメータ を 設定 し た あと で のみ 呼び出し 可能 です 。 
オーディオ ファイル の ヘッダ 情報 が 更新 さ れ ない こと を 除い て 、 writeframes () と 同じ です 。 
ファイル の ヘッダ 情報 は 、 オーディオ データ の 実際 の サイズ を 反映 し て 更新 さ れ ます 。 
この メソッド を 呼び出し た あと で は 、 オブジェクト は もう 使用 でき ませ ん 。 
この モジュール に は 、 組み込み モジュール 
( 上記 参照 ) を 使用 する の に 必要 と さ れる シンボリック 定数 が 定義 さ れ て い ます 。 定数 の 名前 は C の include ファイル audioio . h で 接頭 辞 " AL _" を 除い た もの と 同じ です 。 
定義 さ れ て いる 名前 の 完全 な リスト について は モジュール の ソース を 参照 し て ください 。 
お 勧め の 使い方 は 以下 の 通り です : 
この モジュール を 使う と 、 SGI Indy と Indigo ワークステーション の オーディオ 装置 に アクセス でき ます 。 
詳しく は IRIX の man ページ の セクション 3 A を 参照 し て ください 。 
ここ に 書か れ た 関数 が 何 を する か を 理解 する に は 、 man ページ を 読む 必要 が あり ます ! IRIX の リリース 4 . 0 . 5 より 前 の もの で は 使え ない 関数 も あり ます 。 
お 使い の プラットフォーム で 特定 の 関数 が 使える か どう か 、 マニュアル で 確認 し て ください 。 
この モジュール で 定義 さ れ た 関数 と メソッド は 全て 、 名前 に " AL " の 接頭 辞 を 付け た C の 関数 と 同義 です 。 C の ヘッダーファイル audio . h の シンボル 定数 は 標準 モジュール 
に 定義 さ れ て い ます 。 下記 を 参照 し て ください 。 
警告 : オーディオ ライブラリ の 現在 の バージョン は 、 不正 な 引数 が 渡さ れる と エラーステイタス が 返る の で は なく 、 core を 吐き出す こと が あり ます 。 
この モジュール に は 、 以下 の 関数 が 定義 さ れ て い ます : 
引数 name と direction は 文字 列 です 。 
省略 可能 な 引数 config は 、 newconfig () で 返さ れる コンフィギュレーションオブジェクト です 。 
返り 値 は audio port object です ; オーディオポートオブジェクト の メソッド は 下 に 書か れ て い ます 。 
返り 値 は 新しい audio configuration object です ; オーディオコンフィギュレーションオブジェクト の メソッド は 下 に 書か れ て い ます 。 
引数 device は 整数 です 。 
返り 値 は ALqueryparams () で 返さ れる データ を 含む 整数 の リスト です 。 
引数 list は queryparams () で 返さ れる よう な リスト です ; queryparams () を 適切 に (!) 修正 し て 使う こと が でき ます 。 
引数 list は queryparams () で 返さ れる よう な リスト です 。 
20 . 1 . 1 コンフィギュレーションオブジェクト 
、 および 
-- へ の 汎用 インタフェース です 。 
これら の モジュール が どれ も インストール さ れ て い ない 場合 、 
モジュール の 低速 で 単純 な DBM 実装 が 使わ れ ます 。 
データベース ファイル filename を 開き 、 対応 する オブジェクト を 返し ます 。 データベース ファイル が すでに 存在 する 場合 、 
オプション の mode 引数 は 、 新た に データベース を 作成 し なけれ ば なら ない 場合 に 使わ れる Unix の ファイル モード です 。 
標準 の 値 は 8 進数 の 0666 です ( この 値 は 現在 有効 な umask で 修飾 さ れ ます )。 
サポート さ れ て いる モジュール の どれ か によって 送出 さ れ うる 例外 が 収め られる タプル で 、 先頭 の 要素 は anydbm . error に なっ て い ます -- anydbm . error が 送出 さ れ た 場合 、 後者 が 使わ れ ます 。 
open () によって 返さ れ た オブジェクト は 辞書 と ほとんど 同じ 同じ 機能 を サポート し ます ; キー と それ に 対応付け られ た 値 を 記憶 し 、 引き出し 、 削除 する こと が でき 、 has _ key () および keys () メソッド を 使う こと が でき ます 。 
キー および 値 は 常に 文字 列 です 。 
BSD db データベース インタフェース 。 
標準 の Unix データベース インタフェース 。 
dbm インタフェース の 移植 性 の ある 実装 。 
dbm インタフェース に 基づい た GNU データベース インタフェース 。 
Python dbm インタフェース 上 に 構築 さ れ た 汎用 オブジェクト 永続 化 機構 。 
既存 の データベース が どの 形式 の データベース か 判定 する ユーティリティ モジュール 。 . 
この モジュール で は 、 基本 的 な 値 ( 文字 、 整数 、 浮動 小数点 数 ) の アレイ ( array 、 配列 ) を 効率 よく 表現 できる オブジェクト 型 を 定義 し て い ます 。 
アレイ 
は シーケンス ( sequence ) 型 で あり 、 中 に 入れる オブジェクト の 型 に 制限 が ある こと を 除け ば 、 リスト と まったく 同じ よう に 振る舞い ます 。 
オブジェクト 生成 時 に 一文字 の 型 コード を 用い て 型 を 指定 し ます 。 
次 の 型 コード が 定義 さ れ て い ます : 
型 コード 
C の 型 
Python の 型 
最小 サイズ ( バイト 単位 ) 
文字 ( str 型 ) 
int 型 
Unicode 文字 ( unicode 型 ) 
long 型 
float 型 
値 の 実際 の 表現 は マシン アーキテクチャ ( 厳密 に 言う と C の 実装 ) によって 決まり ます 。 
値 の 実際 の サイズ は itemsize 属性 から 得 られ ます 。 
Python の 通常 の 整数 型 で は C の unsigned ( long ) 整数 の 最大 範囲 を 表せ ない ため 、 ' L ' と ' I ' で 表現 さ れ て いる 要素 に 入る 値 は Python で は 長 整数 として 表さ れ ます 。 この モジュール で は 次 の 型 を 定義 し て い ます : 
それ 以外 の 場合 に は 、 イテレーション 可能 オブジェクト initializer は 新た に 作成 さ れ た オブジェクト の extend () メソッド に 渡さ れ ます 。 
array の 別名 です 。 
撤廃 さ れ まし た 。 アレイ オブジェクト で は 、 インデクス 指定 、 スライス 、 連結 および 反復 といった 、 通常 の シーケンス の 演算 を サポート し て い ます 。 
アレイ を 作る とき に 使う 型 コード 文字 です 。 
アレイ の 要素 1 つ の 内部 表現 に 使わ れる バイト 長 です 。 
値 x の 新た な 要素 を アレイ の 末尾 に 追加 し ます 。 
アレイ の 内容 を 記憶 する ため に 使っ て いる バッファ の 、 現在 の メモリ アドレス と 要素 数 の 入っ た タプル ( address , length ) を 返し ます 。 
バイト 単位 で 表し た メモリ バッファ の 大き さ は 
array . buffer _ info ()[ 1 ] * array . itemsize で 計算 でき ます 。 
例えば ioctl () 操作 の よう な 、 メモリ アドレス を 必要 と する 低 レベル な ( そして 、 本質 的 に 危険 な ) I / O インタフェース を 使っ て 作業 する 場合 に 、 ときどき 便利 です 。 
アレイ 自体 が 存在 し 、 長 さ を 変える よう な 演算 を 適用 し ない 限り 、 有効 な 値 を 返し ます 。 
注意 : C や C ++ で 書い た コード から アレイ オブジェクト を 使う 場合 ( buffer _ info の 情報 を 使う 意味 の ある 唯一 の 方法 です ) は 、 アレイ オブジェクト で サポート し て いる バッファ インタフェース を 使う 方 が より 理 に かなっ て い ます 。 
この メソッド は 後方 互換 性 の ため に 保守 さ れ て おり 、 新しい コード で の 使用 は 避ける べき です 。 
バッファ インタフェース の 説明 は 
Python / C API リファレンス マニュアル 
アレイ の すべて の 要素 に対して 「 バイト スワップ 」 ( リトルエンディアン と ビッグエンディアン の 変換 ) を 行い ます 。 
この メソッド は 大き さ が 1 、 2 、 4 および 8 バイト の 値 に のみ を サポート し て い ます 。 他 の 型 の 値 に 使う と RuntimeError を 送出 し ます 。 
異なる バイト オーダ を もつ 計算 機 で 書か れ た ファイル から データ を 読み込む とき に 役に立ち ます 。 
シーケンス 中 の x の 出現 回数 を 返し ます 。 
iterable から 要素 を 取り出し 、 アレイ の 末尾 に 要素 を 追加 し ます 。 
iterable が 別 の アレイ 型 で ある 場合 、 二つ の アレイ は 全く 同じ 型 コード を で なけれ ば なり ませ ん 。 それ 以外 の 場合 に は TypeError を 送出 し ます 。 
iterable が アレイ で ない 場合 、 アレイ に 値 を 追加 できる よう な 正しい 型 の 要素 から なる イテレーション 可能 オブジェクト で なけれ ば なり ませ ん 。 バージョン 2 . 4 で 変更 さ れ た 仕様 : 以前 は 他 の アレイ 型 しか 引数 に 指定 でき ませ ん でし た 。 
ファイル オブジェクト f から ( マシン 依存 の データ 形式 そのまま で ) n 個 の 要素 を 読み出し 、 アレイ の 末尾 に 要素 を 追加 し ます 。 
n 個 の 要素 を 読め なかっ た とき は EOFError を 送出 し ます が 、 それ まで に 読み 出せ た 値 は アレイ に 追加 さ れ て い ます 。 
f は 本当 の 組み込み ファイル オブジェクト で なけれ ば なり ませ ん 。 read () メソッド を もつ 他 の 型 で は 動作 し ませ ん 。 
リスト から 要素 を 追加 し ます 。 
型 に関する エラー が 発生 し た 場合 に アレイ が 変更 さ れ ない こと を 除き 、 " for x in list : a . append ( x )" と 同じ です 。 
文字 列 から 要素 を 追加 し ます 。 
文字 列 は 、 ( ファイル から fromfile () メソッド を 使っ て 値 を 読み込ん だ とき の よう に ) マシン 依存 の データ 形式 で 表さ れ た 値 の 配列 として 解釈 さ れ ます 。 
指定 し た Unicode 文字 列 の データ を 使っ て アレイ を 拡張 し ます 。 
アレイ 中 で x が 出現 する インデクス の うち 最小 の 値 i を 返し ます 。 
アレイ 中 の 位置 i の 前 に 値 x を もつ 新しい 要素 を 挿入 し ます 。 
i の 値 が 負 の 場合 、 アレイ の 末尾 から の 相対 位置 として 扱い ます 。 
アレイ から インデクス が i の 要素 を 取り除い て 返し ます 。 
オプション の 引数 は デフォルト で - 1 に なっ て い て 、 最後 の 要素 を 取り除い て 返す よう に なっ て い ます 。 
リリース 1 . 5 . 1 で 撤廃 さ れ まし た 。 
fromfile () メソッド を 使っ て ください 。 
アレイ 中 の x の うち 、 最初 に 現れ た もの を 取り除き ます 。 
アレイ の 要素 の 順番 を 逆 に し ます 。 
アレイ の すべて の 要素 を ファイル オブジェクト f に ( マシン 依存 の データ 形式 そのまま で ) 書き込み ます 。 
アレイ を 同じ 要素 を 持つ 普通 の リスト に 変換 し ます 。 
アレイ を マシン 依存 の データ アレイ に 変換 し 、 文字 列 表現 ( tofile () メソッド によって ファイル に 書き込ま れる もの と 同じ バイト 列 ) を 返し ます 。 
アレイ を Unicode 文字 列 に 変換 し ます 。 
アレイ の 型 コード は ' u ' で なけれ ば なり ませ ん 。 それ 以外 の 場合 に は ValueError を 送出 し ます 。 
他 の 型 の アレイ から Unicode 文字 列 を 得る に は 、 " array . tostring (). decode ( enc )" を 使っ て ください 。 
リリース 1 . 5 . 1 で 撤廃 さ れ まし た 。 
tofile () メソッド を 使っ て ください 。 
ファイル オブジェクト f に 、 全て の 要素 を ( マシン 依存 の データ 形式 そのまま で ) 書き込み ます 。 
アレイ オブジェクト を 表示 し たり 文字 列 に 変換 し たり する と 、 array ( typecode , initializer ) という 形式 で 表現 さ れ ます 。 
アレイ が 空 の 場合 、 initializer の 表示 を 省略 し ます 。 アレイ が 空 で なけれ ば 、 typecode が ' c ' の 場合 に は 文字 列 に 、 それ 以外 の 場合 に は 数値 の リスト に なり ます 。 
関数 array () を from array import array で import し て いる 限り 、 変換 後 の 文字 列 に 逆 クォーテーション (``) を 用いる と 元 の アレイ オブジェクト と 同じ データ 型 と 値 を 持つ アレイ に 逆 変換 できる こと が 保証 さ れ て い ます 。 
文字 列 表現 の 例 を 以下 に 示し ます : 
異なる 種類 の バイナリ データ の パック および アンパック 。 
遠隔 手続き 呼び出し システム で 使わ れる 外部 データ 表現 仕様 ( External DataRepresentation , XDR ) の データ の パック および アンパック 。 . 
Numeric Python 拡張 モジュール ( NumPy ) で は 、 別 の 方法 で シーケンス 型 を 定義 し て い ます 。 
Numerical Python に関する 詳しい 情報 は http :// numpy . sourceforge . net / を 参照 し て ください 。 ( NumPy マニュアル の PDF バージョン は http :// numpy . sourceforge . net / numdoc / numdoc . pdf で 手 に 入り ます 。 
11 . 25 . 1 asyncore の 例 : 簡単 な HTTP クライアント 
asynchat を 使う と 、 
は 同じ 非同期 ループ を 使用 し て おり 、 asyncore . dispatcher も asynchat . async _ chat も 同じ チャネル マップ に 登録 する 事 が でき ます 。 
通常 、 asyncore . dispatcher は サーバ チャネル として 使用 し 、 リクエスト の 受け付け 時 に asynchat . async _ chat オブジェクト を 生成 し ます 。 
クラス async _ chat 
この クラス は 、 asyncore . dispatcher から 継承 し た 抽象 クラス です 。 
使用 する 際 に は async _ chat の サブ クラス を 作成 し 、 collect _ incoming _ data () と found _ terminator () を 定義 し なけれ ば なり ませ ん 。 
asyncore . dispatcher の メソッド を 使用 する 事 も でき ます が 、 メッセージ / レスポンス 処理 を 中心 に 行う 場合 に は 使え ない メソッド も あり ます 。 
asyncore . dispatcher と 同様 に 、 async _ chat も select () 呼出し 後 の ソケット の 状態 から イベント を 生成 し ます 。 
ポーリング ループ 開始 後 、 イベント 処理 フレーム ワーク が 自動的 に async _ chat の メソッド を 呼び出し ます ので 、 プログラマ が 処理 を 記述 する 必要 は あり ませ ん 。 
asyncore . dispatcher と 違い 、 async _ chat で は プロデューサ の first - in - first - out キュー ( fifo ) を 作成 する 事 が でき ます 。 
プロデューサ は more () メソッド を 必ず 持ち 、 この メソッド で チャネル 上 に 送出 する データ を 返し ます 。 
プロデューサ が 枯渇 状態 ( i . e . これ 以上 の データ を 持た ない 状態 ) に ある 場合 、 more () は 空文字 列 を 返し ます 。 
この 時 、 async _ chat は 枯渇 状態 に ある プロデューサ を fifo から 除去 し 、 次 の プロデューサ が 存在 すれ ば その プロデューサ を 使用 し ます 。 
fifo に プロデューサ が 存在 し ない 場合 、 handle _ write () は 何 も し ませ ん 。 
リモート 端点 から の 入力 の 終了 や 重要 な 中断 点 を 検出 する 場合 は 、 set _ terminator () に 記述 し ます 。 async _ chat の サブ クラス で は 、 入力 メソッド collect _ incoming _ data () と found _ terminator () を 定義 し 、 チャネル が 非同期 に 受信 する データ を 処理 し ます 。 
以下 に メソッド の 解説 を 示し ます 。 
プロデューサ fifo の トップ に None を プッシュ し ます 。 
この プロデューサ が ポップ さ れる と 、 チャネル が クローズ し ます 。 
チャネル が 受信 し た 不定 長 の データ を data に 指定 し て 呼び出さ れ ます 。 この メソッド は 必ず オーバライド する 必要 が あり 、 デフォルト の 実装 で は 、 NotImplementedError 例外 を 送出 し ます 。 
非 常用 の メソッド で 、 全て の 入出力 バッファ と プロデューサ fifo を 廃棄 し ます 。 
入力 データ ストリーム が 、 set _ terminator で 指定 し た 終了 条件 と 一致 し た 場合 に 呼び出さ れ ます 。 
この メソッド は 必ず オーバライド する 必要 が あり 、 デフォルト の 実装 で は 、 NotImplementedError 例外 を 送出 し ます 。 
入力 データ を 参照 する 必要 が ある 場合 でも 引数 として は 与え られ ない ため 、 入力 バッファ を インスタンス 属性 として 参照 し なけれ ば なり ませ ん 。 
現在 の チャネル の 終了 条件 を 返し ます 。 
チャネル 閉じ た 時 に 呼び出さ れ ます 。 
デフォルト の 実装 で は 単に チャネル の ソケット を クローズ し ます 。 
チャネル の 非同期 ループ で read イベント が 発生 し た 時 に 呼び出さ れ 、 デフォルト の 実装 で は 、 set _ terminator () で 設定 さ れ た 終了 条件 を チェック し ます 。 
終了 条件 として 、 特定 の 文字 列 か 受信 文字数 を 指定 する 事 が でき ます 。 
終了 条件 が 満たさ れ て いる 場合 、 handle _ read は 終了 条件 が 成立 する より も 前 の データ を 引数 として collect _ incoming _ data () を 呼び出し 、 その後 found _ terminator () を 呼び出し ます 。 
アプリケーション が データ を 出力 する 時 に 呼び出さ れ 、 デフォルト の 実装 で は initiate _ send () を 呼び出し ます 。 
initiate _ send () で は refill _ buffer () を 呼び出し 、 チャネル の プロデューサ fifo から データ を 取得 し ます 。 
data を 持つ simple _ producer ( 後述 ) オブジェクト を 生成 し 、 チャネル の producer _ fifo に プッシュ し て 転送 し ます 。 
データ を チャネル に 書き出す ため に 必要 な の は これ だけ です が 、 データ の 暗号 化 や チャンク 化 など を 行う 場合 に は 独自 の プロデューサ を 使用 する 事 も でき ます 。 push _ with _ producer 
指定 し た プロデューサ オブジェクト を チャネル の fifo に 追加 し ます 。 
これ より 前 に push さ れ た プロデューサ が 全て 枯渇 し た 後 、 チャネル は この プロデューサ から more () メソッド で データ を 取得 し 、 リモート 端点 に 送信 し ます 。 
select () ループ で この チャネル の 読み込み 可能 チェック を 行う 場合 に は 、 True を 返し ます 。 
fifo の 先頭 に ある プロデューサ の more () メソッド を 呼び出し 、 出力 バッファ を 補充 し ます 。 
先頭 の プロデューサ が 枯渇 状態 の 場合 に は fifo から ポップ さ れ 、 その 次 の プロデューサ が アクティブ に なり ます 。 アクティブ な プロデューサ が None に なる と 、 チャネル は クローズ さ れ ます 。 
チャネル で 検出 する 終了 条件 を 設定 し ます 。 term は 入力 プロトコル データ の 処理 方式 によって 以下 の 3 つ の 型 の 何れ か を 指定 し ます 。 
入力 ストリーム 中 で string が 検出 さ れ た 時 、 found _ terminator () を 呼び出し ます 。 
指定 さ れ た 文字数 が 読み込ま れ た 時 、 found _ terminator () を 呼び出し ます 。 
永久 に データ を 読み込み ます 。 
終了 条件 が 成立 し て も 、 その後 に 続く データ は 、 found _ terminator () の 呼出し 後 に 再び チャネル を 読み込め ば 取得 する 事 が でき ます 。 
Should return True as long as items remain on the producer fifo , or the channel is connected and the channel ' s output buffer is non - empty . プロデューサ fifo が 空 で は ない か 、 チャネル が 接続 中 で 出力 バッファ が 空 で ない 場合 、 True を 返し ます 。 
この モジュール は 、 非同期 ソケット サービス の クライアント・サーバ を 開発 する ため の 基盤 として 使わ れ ます 。 
CPU が 一つ しか ない 場合 、 プログラム が `` 二つ の こと を 同時に '' 実行 する 方法 は 二つ しか あり ませ ん 。 
もっとも 簡単 で 一般 的 な の は マルチスレッド を 利用 する 方法 です が 、 これ と は まったく 異なる テクニック で 、 一つ の スレッド だけ で マルチスレッド と 同じ よう な 効果 を 得 られる テクニック が あり ます 。 この テクニック は I / O 処理 が 中心 で ある 場合 に のみ 有効 で 、 CPU 負荷 の 高い プログラム で は 効果 が 無く 、 この 場合 に は プリエンプティブ な スケジューリング が 可能 な スレッド が 有効 でしょ う 。 
asyncore は 多く の 複雑 な 問題 を 解決 済み な ので 、 洗練 さ れ 、 パフォーマンス に も 優れ た ネットワーク サーバ と クライアント を 簡単 に 開発 する こと が でき ます 。 
とくに 、 
の よう な 、 対話 型 の アプリケーション や プロトコル に は 非常 に 有効 でしょ う 。 基本 的 に は 、 この 二つ の モジュール を 使う 場合 は 一つ 以上 の ネットワーク チャネル を asyncore . dispatcher クラス 、 または asynchat . async _ chat の インスタンス として 作成 し ます 。 
作成 さ れ た チャネル は グローバル マップ に 登録 さ れ 、 loop () 関数 で 参照 さ れ ます 。 loop () に は 、 専用 の マップ を 渡す 事 も 可能 です 。 
チャネル を 生成 後 、 loop () を 呼び出す と チャネル 処理 が 開始 し 、 最後 の チャネル ( 非同期 処理 中 に マップ に 追加 さ れ た チャネル を 含む ) が 閉じる まで 継続 し ます 。 
ポーリング ループ を 開始 し 、 count 回 が 過ぎる か 、 全て の オープン 済み チャネル が クローズ さ れ た 場合 のみ 終了 し ます 。 
全て の 引数 は オプション です 。 
引数 count の デフォルト 値 は None で 、 ループ は 全て の チャネル が クローズ さ れ た 場合 のみ 終了 し ます 。 
引数 map に は 、 監視 する チャネル を アイテム として 格納 し た 辞書 を 指定 し ます 。 
map が 省略 さ れ た 場合 、 グローバル な マップ が 使用 さ れる 。 
グローバル な マップ は 、 チャネル クラス の __ init __() メソッド が 呼び出さ れ た とき に 自動的 に 更新 さ れ ます 。 - この 仕組み を 利用 する の で あれ ば 、 チャネル クラス の __ init __() は オーバライド する の で は なく 、 拡張 し なけれ ば なり ませ ん 。 
クラス dispatcher 
dispatcher クラス は 、 低 レベルソケットオブジェクト の 薄い ラッパー です 。 便宜上 、 非同期 ループ から 呼び出さ れる イベント 処理 メソッド を 追加 し て い ます が 、 これ 以外 の 点 で は 、 non - blocking な ソケット と 同様 です 。 
dispatcher クラス に は 二つ の クラス 属性 が あり 、 パフォーマンス 向上 や メモリ の 削減 の ため に 更新 する 事 が でき ます 。 
非同期 入力 バッファ の サイズ ( デフォルト 4096 ) 
非同期 出力 バッファ の サイズ ( デフォルト 4096 ) 
非同期 ループ 内 で 低 レベル イベント が 発生 し た 場合 、 発生 の タイミング や コネクション の 状態 から 特定 の 高 レベル イベント へ と 置き換える こと が でき ます 。 
例えば ソケット を 他 の ホスト に 接続 する 場合 、 最初 の 書き込み 可能 イベント が 発生 すれ ば 接続 が 完了 し た 事 が 分かり ます ( この 時点 で 、 ソケット へ の 書き込み は 成功 する と 考え られる )。 
この よう に 判定 できる 高 レベル イベント を 以下 に 示し ます : 
イベント 
解説 
最初 に write イベント が 発生 し た 時 
読み込み 可能 な データ なし で read イベント が 発生 し た 時 
listen 中 の ソケット で read イベント が 発生 し た 時 
非同期 処理 中 、 マップ に 登録 さ れ た チャネル の readable () メソッド と writable () メソッド が 呼び出さ れ 、 select () か poll () で read / write イベント を 検出 する リスト に 登録 する か 否 か を 判定 し ます 。 
この よう に し て 、 チャネル で は 低 レベル な ソケット イベント の 種類 より 多く の 種類 の イベント を 検出 する 事 が でき ます 。 
以下 に あげる イベント は 、 サブ クラス で オーバライド する こと が 可能 です : handle _ read 
非同期 ループ で 、 チャネル の ソケット の read () メソッド の 呼び出し が 成功 し た 時 に 呼び出さ れ ます 。 
非同期 ループ で 、 書き込み 可能 ソケット が 実際 に 書き込み 可能 に なっ た 時 に 呼び出さ れる 。 
この メソッド は 、 パフォーマンス の 向上 の ため バッファリング を 行う 場合 など に 利用 でき ます 。 
out of band ( OOB ) データ が 検出 さ れ た 時 に 呼び出さ れ ます 。 
OOB は あまり サポート さ れ て おら ず 、 また 滅多 に 使わ れ ない ので 、 handle _ expt () が 呼び出さ れる こと は ほとんど あり ませ ん 。 
ソケット の 接続 が 確立 し た 時 に 呼び出さ れ ます 。 `` welcome '' バナー の 送信 、 プロトコルネゴシエーション の 初期 化 など を 行い ます 。 
ソケット が 閉じ た 時 に 呼び出さ れ ます 。 
捕捉 さ れ ない 例外 が 発生 し た 時 に 呼び出さ れ ます 。 
デフォルト で は 、 短縮 し た トレース バック 情報 が 出力 さ れ ます 。 
listen 中 の チャネル が リモート ホスト から の connect () で 接続 さ れ 、 接続 が 確立 し た 時 に 呼び出さ れ ます 。 
非同期 ループ 中 に 呼び出さ れ 、 read イベント の 監視 リスト に 加える か 否 か を 決定 し ます 。 
デフォルト の メソッド で は True を 返し 、 read イベント の 発生 を 監視 し ます 。 
非同期 ループ 中 に 呼び出さ れ 、 write イベント の 監視 リスト に 加える か 否 か を 決定 し ます 。 
デフォルト の メソッド で は True を 返し 、 write イベント の 発生 を 監視 し ます 。 
さらに 、 チャネル に は ソケット の メソッド と ほぼ 同じ メソッド が あり 、 チャネル は ソケット の メソッド の 多く を 委譲 ・ 拡張 し て おり 、 ソケット と ほぼ 同じ メソッド を 持っ て い ます 。 
引数 も 含め 、 通常 の ソケット 生成 と 同じ 。 
モジュール を 参照 の こと 。 
通常 の ソケット オブジェクト と 同様 、 address に は 一 番目 の 値 が 接続 先 ホスト 、 2 番目 の 値 が ポート 番号 で ある タプル を 指定 し ます 。 
リモート 側 の 端点 に data を 送出 し ます 。 
リモート 側 の 端点 より 、 最大 buffer _ size バイト の データ を 読み込み ます 。 長 さ 0 の 文字 列 が 返っ て き た 場合 、 チャネル は リモート から 切断 さ れ た 事 を 示し ます 。 
ソケット へ の 接続 を 待つ 。 
引数 backlog は 、 キューイング できる コネクション の 最大 数 を 指定 し ます ( 1 以上 )。 最大 数 は システム に 依存 でし ます ( 通常 は 5 ) 
ソケット を address に バインド し ます 。 
ソケット は バインド 済み で あっ て は なり ませ ん 。 
接続 を 受け入れ ます 。 
ソケット は アドレス に バインド 済み で あり 、 listen () で 接続 待ち 状態 で なけれ ば なり ませ ん 。 
戻り 値 は ( conn , address ) の ペア で 、 conn は データ の 送受信 を 行う ソケット オブジェクト 、 address は 接続 先 ソケット が バインド さ れ て いる アドレス です 。 
ソケット を クローズ し ます 。 
以降 の 全て の 操作 は 失敗 し ます 。 
リモート 端点 で は 、 キュー に 溜まっ た データ 以外 、 これ 以降 の データ 受信 は 行え ませ ん 。 
ソケット は ガベージコレクト 時 に 自動的 に クローズ さ れ ます 。 
11 . 25 . 1 asyncore の 例 : 簡単 な HTTP クライアント 
atexit モジュール で は 、 後始末 関数 を 登録 する ため の 関数 を 一つ だけ 定義 し て い ます 。 
注意 : sys . exitfunc を 設定 する 他 の コード とともに 使用 し た 場合 に は 、 この モジュール は 正しく 動作 し ない でしょ う 。 
特に 、 他 の コア Python モジュール で は 、 プログラマ の 意図 を 知ら なく て も atexit を 自由 に 使え ます 。 
sys . exitfunc を 使っ て いる 人 は 、 代わり に atexit を 使う コード に 変換 し て ください 。 
sys . exitfunc を 設定 する コード を 変換 する に は 、 atexit を import し 、 sys . exitfunc へ 束縛 さ れ て い た 関数 を 登録 する の が 最も 簡単 です 。 
終了 時 に 実行 さ れる 関数 として func を 登録 し ます 。 
すべて の func へ 渡す オプション の 引数 を 、 register () へ 引数 として わたさ なけれ ば なり ませ ん 。 通常 の プログラム の 終了 時 、 例えば sys . exit () が 呼び出さ れる とき 、 あるいは 、 メイン モジュール の 実行 が 完了 し た とき に 、 登録 さ れ た 全て の 関数 を 、 最後 に 登録 さ れ た もの から 順に 呼び出し ます 。 
通常 、 より 低 レベル の モジュール は より 高 レベル の モジュール より 前 に import さ れる ので 、 後で 後始末 が 行わ れる という 仮定 に 基づい て い ます 。 終了 ハンドラ の 実行 中 に 例外 が 発生 する と 、 ( SystemExit 以外 の 場合 は ) トレース バック を 表示 し て 、 例外 の 情報 を 保存 し ます 。 
全て の 終了 ハンドラ に 動作 する チャンス を 与え た 後 に 、 最後 に 送出 さ れ た 例外 を 再 送出 し ます 。 
: モジュール 
ヒストリ ファイル を 読み書き する ため の atexit の 有用 な 例 です 。 
audioop モジュール は 音声 データ を 操作 する 関数 を 収録 し て い ます 。 
この モジュール は 、 Python 文字 列 型 中 に 入っ て いる 8 , 16 , 32 ビット の 符号 付き 整数 で でき た 音声 データ 、 すなわち 
で 使わ れ て いる の と 同じ 形式 の 音声 データ を 操作 し ます 。 
特に 指定 の 無い かぎり 、 スカラ 量 を 表す 要素 は すべて 整数 型 に なっ て い ます 。 この モジュール は u - LAW と Intel / DVI ADPCM エン コード を サポート し て い ます 。 
複雑 な 操作 の うち いくつ か は サンプル 幅 が 16 ビット の データ に対して のみ 働き ます が 、 それ 以外 は 常に サンプル 幅 を 操作 の パラメタ として ( バイト 単位 で ) 渡し ます 。 この モジュール で は 以下 の 変数 と 関数 を 定義 し て い ます : 
この 例外 は 、 未知 の サンプル 当たり の バイト 数 を 指定 し た 時 など 、 全般 的 な エラー に対して 送出 さ れ ます 。 
パラメタ に 渡し た 2 つ の データ を 加算 し た 結果 を 返し ます 。 width は サンプル 幅 を バイト で 表し た もの で 、 1 、 2 、 4 の うち いずれ か です 。 
2 つ の データ は 同じ サンプル 幅 で なけれ ば なり ませ ん 。 
Intel / DVI ADPCM 形式 の データ を リニア ( linear ) 形式 に デコード し ます 。 
ADPCM 符号 化 方式 の 詳細 について は lin 2 adpcm () の 説明 を 参照 し て 下さい 。 ( sample , newstate ) から なる タプル を 返し 、 サンプル は width に 指定 し た 幅 に なり ます 。 
3 ビット 符号 を 使う 別 の ADPCM で 符号 化 さ れ て いる データ を デコード し ます 。 
詳しく は lin 2 adpcm 3 () を 参照 し て 下さい 。 
データ 中 の 全 サンプル の 平均 値 を 返し ます 。 
データ 中 の 全 サンプル の 平均 peak - peak 振幅 を 返し ます 。 フィルタ リング を 行っ て い ない 場合 、 この ルーチン の 有用 性 は 疑問 です 。 
元 データ の 各 サンプル に バイアス を 加え た データ を 返し ます 。 
引数 に 渡し た データ 中 の ゼロ 交差 回数 を 返し ます 。 
rms ( add ( fragment , mul ( reference , - F ))) を 最小 に する よう な 係数 F 、 すなわち 、 reference に 乗算 し た とき に もっとも fragment に 近く なる よう な 値 を 返し ます 。 fragment と reference の サンプル 幅 は いずれ も 2 バイト で なけれ ば なり ませ ん 。 
この ルーチン の 実行 に 要する 時間 は len ( fragment ) に 比例 し ます 。 
reference を 可能 な 限り fragment に 一致 さ せよ う と し ます ( fragment は reference より 長く なけれ ば なり ませ ん )。 
この 処理 は ( 概念的 に は ) fragment から スライス を いくつ か 取り出し 、 それぞれ について findfactor () を 使っ て 最良 な 一致 を 計算 し 、 誤差 が 最小 の 結果 を 選ぶ こと で 実現 し ます 。 
fragment と reference の サンプル 幅 は 両方 とも 2 バイト で なけれ ば なり ませ ん 。 
( offset , factor ) から なる タプル を 返し ます 。 offset は 最適 な 一致 箇所 が 始まる fragment の オフセット 値 ( 整数 ) で 、 factor は findfactor () の 返す 係数 ( 浮動 小数点 数 ) です 。 
fragment から 、 長 さ が length サンプル ( バイト で は あり ませ ん !) で 最大 の エネルギー を 持つ スライス 、 すなわち 、 rms ( fragment [ i * 2 :( i + length )* 2 ]) を 最大 に する よう な スライス を 探し 、 i を 返し ます 。 データ の は サンプル 幅 は 2 バイト で なけれ ば なり ませ ん 。 
この ルーチン の 実行 に 要する 時間 は len ( fragment ) に 比例 し ます 。 
データ 中 の index サンプル 目 の 値 を 返し ます 。 
サンプル 幅 を 1 、 2 、 4 バイト 形式 の 間 で 変換 し ます 。 
データ を 4 ビット の Intel / DVI ADPCM 符号 化 方式 に 変換 し ます 。 
ADPCM 符号 化 方式 と は 適応 符号 化 方式 の 一つ で 、 ある サンプル と ( 可変 の ) ステップ だけ 離れ た その 次 の サンプル と の 差 を 4 ビット の 整数 で 表現 する 方式 です 。 
Intel / DVI ADPCM アルゴリズム は IMA ( 国際 MIDI 協会 ) に 採用 さ れ て いる ので 、 おそらく 標準 に なる はず です 。 
state は エンコーダ の 内部 状態 が 入っ た タプル です 。 
エンコーダ は ( adpcmfrag , newstate ) の タプル を 返し 、 次に lin 2 adpcm () を 呼び出す 時 に newstate を 渡さ ね ば なり ませ ん 。 
最初 に 呼び出す 時 に は state に None を 渡し て も かまい ませ ん 。 adpcmfrag は ADPCM で 符号 化 さ れ た データ で 、 バイト 当たり 2 つ の 4 ビット 値 が パック さ れ て い ます 。 
サンプル 当たり 3 ビット だけ しか 使わ ない 別 の ADPCM 符号 化 方式 の エンコーダ です 。 Intel / DVI ADPCM 形式 と の 互換 性 は なく 、 ( 作者 の 怠慢 から ) 出力 は パック さ れ て い ませ ん 。 
この エンコーダ の 使用 は 推奨 し ませ ん 。 
音声 データ の 各 サンプル を u - LAW 符号 で エン コード し 、 Python 文字 列 として 返し ます 。 
u - LAW と は 音声 符号 化 方式 の 一つ で 、 約 14 ビット に 相当 する ダイナミック レンジ を わずか 8 ビット で 実現 でき ます 。 
Sun や その他 の 音声 ハードウェア で 使わ れ て い ます 。 
音声 データ 全 サンプル 中 における 最小 値 と 最大 値 から なる タプル を 返し ます 。 
音声 データ 全 サンプル の 絶対 値 の 最大 値 を 返し ます 。 
音声 データ の 最大 peak - peak 振幅 を 返し ます 。 
元 の データ の 全 サンプル に 浮動 小数点 数 factor を 掛け た データ を 返し ます 。 
オーバフロー が 起き て も 例外 を 送出 せ ず 無視 し ます 。 
入力 し た データ の フレーム レート を 変換 し ます 。 
state は 変換 ルーチン の 内部 状態 を 入れ た タプル です 。 
変換 ルーチン は ( newfragment , newstate ) を 返し 、 次に ratecv () を 呼び出す 時 に は newstate を 渡さ な ね ば なり ませ ん 。 
最初 の 呼び出し で は None を 渡し ます 。 引数 weightA と weightB は 単純 な デジタル フィルタ の パラメタ で 、 デフォルト 値 は それぞれ 1 と 0 です 。 
データ 内 の サンプル の 順序 を 逆転 し 、 変更 さ れ た データ を 返し ます 。 
データ の 自乗 平均 根 ( root - mean - square ) 、 すなわち を 返し ます 。 
これ は オーディオ 信号 の 強度 ( power ) を 測る 一つ の 目安 です 。 
ステレオ 音声 データ を モノラル 音声 データ に 変換 し ます 。 
左 チャネル の データ に lfactor 、 右 チャネル の データ に rfactor を 掛け た 後 、 二つ の チャネル の 値 を 加算 し て 単一 チャネル の 信号 を 生成 し ます 。 
モノラル 音声 データ を ステレオ 音声 データ に 変換 し ます 。 
ステレオ 音声 データ の 各 サンプル 対 は 、 モノラル 音声 データ の 各 サンプル を それぞれ 左 チャネル は lfactor 倍 、 右 チャネル は rfactor 倍 し て 生成 し ます 。 
u - LAW で 符号 化 さ れ て いる 音声 データ を 線形 に 符号 化 さ れ た 音声 データ に 変換 し ます 。 
u - LAW 符号 化 は 常に サンプル 当たり 8 ビット を 使う ため 、 width は 出力 音声 データ の サンプル 幅 に しか 使わ れ ませ ん 。 
mul () や max () といった 操作 は モノラル と ステレオ を 区別 し ない 、 すなわち 全て の データ を 平等 に 扱う という こと に 注意 し て ください 。 
この 仕様 が 問題 に なる よう なら 、 あらかじめ ステレオ 音声 データ を 二つ の モノラル 音声 データ に 分割 し て おき 、 操作 後 に 再度 統合 し て ください 。 
その よう な 例 を 以下 に 示し ます : 
ADPCM エンコーダ を 使っ て 音声 データ の 入っ た ネットワーク パケット を 構築 する 際 、 自分 の プロトコル を ( パケット ロス に 耐え られる よう に ) ステート レス ( stateless ) に し たい なら 、 データ だけ で なく 状態 変数 ( state ) も 伝送 せ ね ば なり ませ ん 。 
この とき 、 伝送 する の は エン コード 後 状態 ( エンコーダ の 返す 値 ) で は なく 、 エンコーダ の 初期 状態 ( lin 2 adpcm () に 渡し た 値 ) initial な ので 注意 し て ください 。 
struct . struct () を 使っ て 状態 変数 を バイナリ 形式 で 保存 し たい なら 、 最初 の 要素 ( 予測 値 ) は 16 ビット で 、 次 の 値 ( デルタ 係数 : delta index ) は 8 ビット で 符号 化 でき ます 。 この モジュール の ADPCM 符号 の テスト は 自分 自身 に対して のみ 行っ て おり 、 他 の ADPCM 符号 と の 間 で は 行っ て い ませ ん 。 
エコー 除去 を 十分 高速 に 行う に は 、 出力 サンプル 中 から 最も 大きな エネルギー を 持っ た 部分 を 取り出し 、 この 部分 が 入力 サンプル 中 の どこ に ある か を 調べ 、 入力 サンプル から 出力 サンプル 自体 を 減算 し ます : 
def echocancel ( outputdata , inputdata ): pos = audioop . findmax ( outputdata , 800 ) # 1 / 10 秒 out _ test = outputdata [ pos * 2 :] in _ test = inputdata [ pos * 2 :] ipos , factor = audioop . findfit ( in _ test , out _ test )# Optional ( for better cancellation ):# factor = audioop . findfactor ( in _ test [ ipos * 2 : ipos * 2 + len ( out _ test )], # out _ test ) prefill = '\ 0 '*( pos + ipos )* 2 postfill = '\ 0 '*( len ( inputdata )- len ( prefill )- len ( outputdata )) outputdata = prefill + audioop . mul ( outputdata , 2 ,- factor ) + postfillreturn audioop . add ( inputdata , outputdata , 2 ) 
autoGIL モジュール は 、 自動的 に イベント ループ を 実行 する 場合 、 Python の グローバル インタープリタ を ロック し たり 、 ロック の 解除 を し たり する ため の 関数 installAutoGIL を 提供 し ます 。 
例えば 現在 の スレッド が ループ し て い ない など 、 オブザーバ に コール バック が でき ない 場合 に 発生 し ます 。 
現在 の スレッド の イベント ループ ( CFRunLoop ) 中 の オブザーバ に コール バック を 行ない 、 適切 な 時 に グローバル インタープリタ ロック ( GIL ) を 、 イベント ループ が 使用 さ れ て い ない 間 、 他 の Python スレッド の 起動 が できる よう に ロック し たり 、 ロック の 解除 を し たり し ます 。 有効 性 : OSX 10 . 1 以降 
この モジュール は 、 RFC 3548 で 定め られ た 仕様 による データ の 符号 化 ( エン コード 、 encoding ) および 復元 ( デコード 、 decoding ) を 提供 し ます 。 
この RFC 標準 で は Base 16 , Base 32 および Base 64 が 定義 さ れ て おり 、 これ は バイナリ 文字 列 と テキスト 文字 列 と を エン コード あるいは デコード する ため の アルゴリズム です 。 変換 さ れ た テキスト 文字 列 は email で 確実 に 送信 し たり 、 URL の 一部 として 使用 し たり 、 HTTP POST リクエスト の 一部 に 含める こと が でき ます 。 
これら の 符号 化 アルゴリズム は uuencode で 使わ れ て いる もの と は 別物 です 。 この モジュール で は 2 つ の インター フェイス が 提供 さ れ て い ます 。 
現代 的 な インター フェイス は 、 これら 3 種類 の アルファベット 集合 を 使っ た 文字 列 オブジェクト の エン コード および デコード を すべて サポート し ます 。 
一方 、 レガシー な インター フェイス は 、 文字 列 とともに ファイル 風 の オブジェクト に対する エン コード / デコード を 提供 し ます が 、 Base 64 標準 の アルファベット 集合 しか 使い ませ ん 。 
現代 的 な インター フェイス は 以下 の もの を 提供 し ます : b 64 encode 
Base 64 を つかっ て 、 文字 列 を エン コード ( 符号 化 ) し ます 。 
s は エン コード する 文字 列 です 。 
オプション 引数 altchars は 最低 で も 2 の 長 さ を もつ 文字 列 で ( これ 以降 の 文字 は 無視 さ れ ます )、 これ は + と / の 代わり に 使わ れる 代替 アルファベット を 指定 し ます 。 
これ により 、 アプリケーション は たとえば URL や ファイル システム の 影響 を うけ ない Base 64 文字 列 を 生成 する こと が でき ます 。 
デフォルト の 値 は None で 、 これ は 標準 の Base 64 アルファベット 集合 が 使わ れる こと を 意味 し ます 。 エン コード さ れ た 文字 列 が 返さ れ ます 。 
Base 64 文字 列 を デコード ( 復元 ) し ます 。 
s に は デコード する 文字 列 を 渡し ます 。 
オプション 引数 の altchars は 最低 で も 2 の 長 さ を もつ 文字 列 で ( これ 以降 の 文字 は 無視 さ れ ます )、 これ は + と / の 代わり に 使わ れる 代替 アルファベット を 指定 し ます 。 
デコード さ れ た 文字 列 が 返さ れ ます 。 s が 正しく パディング さ れ て い なかっ たり 、 規定 の アルファベット 以外 の 文字 が 含ま れ て い た 場合 に は TypeError が 発生 し ます 。 
標準 の Base 64 アルファベット 集合 を もちい て 文字 列 s を エン コード ( 符号 化 ) し ます 。 
標準 の Base 64 アルファベット 集合 を もちい て 文字 列 s を デコード ( 復元 ) し ます 。 
URL 用 に 安全 な アルファベット 集合 を もちい て 文字 列 s を エン コード ( 符号 化 ) し ます 。 
これ は 、 標準 の Base 64 アルファベット 集合 に ある + の かわり に - を 使い 、 / の かわり に _ を 使用 し ます 。 urlsafe _ b 64 decode 
URL 用 に 安全 な アルファベット 集合 を もちい て 文字 列 s を デコード ( 復元 ) し ます 。 
これ は 、 標準 の Base 64 アルファベット 集合 に ある + の かわり に - を 使い 、 / の かわり に _ を 使用 し ます 。 b 32 encode 
Base 32 を つかっ て 、 文字 列 を エン コード ( 符号 化 ) し ます 。 
s に は エン コード する 文字 列 を 渡し 、 エン コード さ れ た 文字 列 が 返さ れ ます 。 
Base 32 を つかっ て 、 文字 列 を デコード ( 復元 ) し ます 。 
s に は エン コード する 文字 列 を 渡し ます 。 
オプション 引数 casefold は 小文字 の アルファベット を 受けつける か どう か を 指定 し ます 。 
セキュリティ 上 の 理由 により 、 デフォルト で は これ は False に なっ て い ます 。 
RFC 3548 は 付加 的 な マッピング として 、 数字 の 0 ( 零 ) を アルファベット の O ( オー ) に 、 数字 の 1 ( 壱 ) を アルファベット の I ( アイ ) または L ( エル ) に 対応 さ せる こと を 許し て い ます 。 
オプション 引数 は map 01 は 、 None で ない とき は 、 数字 の 1 を どの 文字 に 対応 づける か を 指定 し ます ( map 01 が None で ない とき 、 数字 の 0 は つねに アルファベット の O ( オー ) に 対応 づけ られ ます )。 
セキュリティ 上 の 理由 により 、 これ は デフォルト で は None に なっ て いる ため 、 0 および 1 は 入力 として 許可 さ れ て い ませ ん 。 デコード さ れ た 文字 列 が 返さ れ ます 。 
s に は エン コード する 文字 列 を 渡し 、 エン コード さ れ た 文字 列 が 返さ れ ます 。 
Base 16 を つかっ て 、 文字 列 を デコード ( 復元 ) し ます 。 
セキュリティ 上 の 理由 により 、 デフォルト で は これ は False に なっ て い ます 。 デコード さ れ た 文字 列 が 返さ れ ます 。 
s が 正しく パディング さ れ て い なかっ たり 、 規定 の アルファベット 以外 の 文字 が 含ま れ て い た 場合 に は TypeError が 発生 し ます 。 
レガシー な インター フェイス は 以下 の もの を 提供 し ます : 
input . read () が 空文字 列 を 返す まで 読ま れ ます 。 
文字 列 s を デコード し て 結果 の バイナリ データ を 返し ます 。 s に は 一行 以上 の base 64 形式 で エン コード さ れ た データ が 含ま れ て いる 必要 が あり ます 。 
input の 中身 を base 64 形式 で エン コード し た 結果 を output に 出力 し ます 。 input 、 output とも に ファイル オブジェクト か 、 ファイル オブジェクト と 同じ インターフェース を 持っ た オブジェクト で ある 必要 が あり ます 。 
文字 列 s ( 任意 の バイナリ データ を 含む こと が でき ます ) を base 64 形式 で エン コード し た 結果 の ( 1 行 以上 の 文字 列 ) データ を 返し ます 。 
encodestring () は エン コード さ れ た 一行 以上 の データ と 改行 文字 (' n ') を 出力 し ます 。 
ASCII から バイナリ へ 、 バイナリ から ASCII へ の 変換 を サポート する モジュール 。 
binascii モジュール に は バイナリ と ASCII コード 化 さ れ た バイナリ 表現 と の 間 の 変換 を 行う ため の 多数 の メソッド が 含ま れ て い ます 。 
通常 、 これら の 関数 を 直接 使う 必要 は なく 、 
や 
uuencode さ れ た 1 行 の データ を バイナリ に 変換 し 、 変換 後 の バイナリ データ を 返し ます 。 
最後 の 行 を 除い て 、 通常 1 行 に は ( バイナリ データ で ) 45 バイト が 含ま れ ます 。 
入力 データ の 先頭 に は 空白 文字 が 連続 し て い て も かまい ませ ん 。 
バイナリ データ を uuencode し て 1 行 の ASCII 文字 列 に 変換 し ます 。 戻り 値 は 変換 後 の 1 行 の 文字 列 で 、 改行 を 含み ます 。 
data の 長 さ は 45 バイト 以下 で なけれ ば なり ませ ん 。 
base 64 で エン コード さ れ た データ の ブロック を バイナリ に 変換 し 、 変換 後 の バイナリ データ を 返し ます 。 
一 度 に 1 行 以上 の データ を 与え て も かまい ませ ん 。 
バイナリ データ を base 64 で エン コード し て 1 行 の ASCII 文字 列 に 変換 し ます 。 戻り 値 は 変換 後 の 1 行 の 文字 列 で 、 改行 文字 を 含み ます 。 
base 64 標準 を 遵守 する ため に は 、 data の 長 さ は 57 バイト 以下 で なく て は なり ませ ん 。 a 2 b _ qp 
quoted - printable 形式 の データ を バイナリ に 変換 し 、 バイナリ データ を 返し ます 。 一 度 に 1 行 以上 の データ を 渡す こと が でき ます 。 
オプション 引数 header が 与え られ て おり 、 かつ その 値 が 真 で あれ ば 、 アンダー スコア は 空白 文字 に デコード さ れ ます 。 
バイナリ データ を quoted - printable 形式 で エン コード し て 1 行 から 複数 行 の ASCII 文字 列 に 変換 し ます 。 
変換 後 の 文字 列 を 返し ます 。 オプション 引数 quptetabs が 存在 し 、 かつ その 値 が 真 で あれ ば 、 全て の タブ および 空白 文字 も エン コード さ れ ます 。 
binhex 4 形式 の ASCII 文字 列 データ を RLE 展開 を 行わ ない で バイナリ に 変換 し ます 。 
文字 列 は バイナリ の バイト データ を 完全 に 含む よう な 長 さ か 、 または ( binhex 4 データ の 最後 の 部分 の 場合 ) 余白 の ビット が ゼロ に なっ て い なけれ ば なり ませ ん 。 
data に対し 、 binhex 4 標準 に従って RLE 展開 を 行い ます 。 
この アルゴリズム で は 、 ある バイト の 後ろ に 0 x 90 が き た 場合 、 その バイト の 反復 を 指示 し て おり 、 さらに その 後ろ に 反復 カウント が 続き ます 。 
カウント が 0 の 場合 0 x 90 自体 を 示し ます 。 
この ルーチン は 入力 データ の 末端 における 反復 指定 が 不完全 で ない かぎり 解凍 さ れ た データ を 返し ます が 、 不完全 な 場合 、 例外 Incomplete が 送出 さ れ ます 。 
binhex 4 方式 の RLE 圧縮 を data に対して 行い 、 その 結果 を 返し ます 。 
バイナリ を hexbin 4 エン コード し て ASCII 文字 列 に 変換 し 、 変換 後 の 文字 列 を 返し ます 。 
引数 の data は すでに RLE エン コード さ れ て い なけれ ば なら ず 、 その 長 さ は ( 最後 の フラグメント を 除い て ) 3 で 割り切れ なけれ ば なり ませ ん 。 
data の binhex 4 CRC 値 を 計算 し ます 。 
初期 値 は crc で 、 計算 結果 を 返し ます 。 crc 32 
32 ビットチェックサム で ある CRC - 32 を data に対して 計算 し ます 。 初期 値 は crc です 。 
これ は ZIP ファイル の チェックサム と 同じ です 。 
この アルゴリズム は チェックサムアルゴリズム として 設計 さ れ た もの で 、 一般 的 な ハッシュ アルゴリズム に は 向き ませ ん 。 
以下 の よう に し て 使い ます : 
バイナリ データ data の 16 進数 表現 を 返し ます 。 
data の 各 バイト は 対応 する 2 桁 の 16 進数 表現 に 変換 さ れ ます 。 
従って 、 変換 結果 の 文字 列 は data の 2 倍 の 長 さ に なり ます 。 
16 進数 表記 の 文字 列 hexstr の 表す バイナリ データ を 返し ます 。 
エラー が 発生 し た 際 に 送出 さ れる 例外 です 。 
通常 は プログラム の エラー です 。 
変換 する データ が 不完全 な 場合 に 送出 さ れる 例外 です 。 
通常 は プログラム の エラー で は なく 、 多少 追加 読み込み を 行っ て 再度 変換 を 試みる こと で 対処 でき ます 。 
参考 : base 64 
Machintosh で 使わ れる binhex フォーマット の サポート 。 
Unix で 使わ れる UU エン コード の サポート 。 
MIME 電子 メール メッセージ で 使わ れる quoted - printable エン コード の サポート 。 
この モジュール は binhex 4 形式 の ファイル に対する エン コード や デコード を 行い ます 。 binhex 4 は Macintosh の ファイル を ASCII で 表現 できる よう に し た もの です 。 
ファイル 名 input の バイナリ ファイル を ファイル 名 output の binhex 形式 ファイル に 変換 し ます 。 
output パラメタ は ファイル 名 で も ( write () および close () メソッド を サポート する よう な ) ファイル 様 オブジェクト でも かまい ませ ん 。 
以下 の 例外 も 定義 さ れ て い ます : 
binhex 形式 を 使っ て エン コード でき なかっ た 場合 ( 例えば 、 ファイル 名 が filename フィールド に 収まら ない くらい 長かっ た 場合 など ) や 、 入力 が 正しく エン コード さ れ た binhex 形式 の データ で なかっ た 場合 に 送出 さ れる 例外 です 。 
ASCII から バイナリ 、 および バイナリ から ASCII へ の 変換 を サポート する モジュール 。 
この モジュール は 、 挿入 の 度 に リスト を ソート する こと なく 、 リスト を ソート さ れ た 順序 に 保つ こと を サポート し ます 。 
大量 の 比較 操作 を 伴う よう な 、 アイテム が たくさん ある リスト で は 、 より 一般 的 な アプローチ に 比べ て 、 パフォーマンス が 向上 し ます 。 
動作 に 基本 的 な 二分 法 アルゴリズム を 使っ て いる ので 、 bisect と 呼ば れ て い ます 。 
ソース コード は この アルゴリズム の 実例 として 一番 役に立つ かも しれ ませ ん ( 境界 条件 は すでに 正しい です !)。 次 の 関数 が 用意 さ れ て い ます 。 
ソート さ れ た 順序 を 保っ た まま item を list に 挿入 する の に 適し た 挿入 点 を 探し当て ます 。 
リスト の 中 から 検索 する 部分 集合 を 指定 する に は 、 パラメーター の lo と hi を 使い ます 。 デフォルト で は 、 リスト 全体 が 使わ れ ます 。 
item が すでに list に 含ま れ て いる 場合 、 挿入 点 は どの エントリー より も 前 ( 左 ) に なり ます 。 
戻り 値 は 、 
list . insert () の 第 一 引数 として 使う の に 適し て い ます 。 list は すでに ソート さ れ て いる もの と し ます 。 
バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
bisect _ right () の エイリアス 。 
item を list に ソート さ れ た 順序 で ( ソート さ れ た まま ) 挿入 し ます 。 
これ は 、 
list . insert ( bisect . bisect _ left ( list , item , lo , hi ), item ) と 同等 です 。 
list は すでに ソート さ れ て いる もの と し ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
insort _ left () と 似 て い ます が 、 list に 含ま れる item の うち 、 どの エントリー より も 後ろ に item を 挿入 し ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
insort _ right () の エイリアス 。 
7 . 13 . 1 ハッシュ 、 BTree 、 および レコード オブジェクト 
Unix , Windows プラットフォーム で 利用 でき ます 。 
bsddb モジュール は Berkeley DB ライブラリ へ の インタフェース を 提供 し ます 。 
ユーザ は 適当 な open 呼び出し を 使う こと で 、 ハッシュ 、 B - Tree 、 または レコード に 基づく データベース ファイル を 生成 する こと が でき ます 。 
bsddb オブジェクト は 辞書 と 大体 同じ よう に 振る舞い ます 。 
新しい Berkeley DB インターフェース の ドキュメント が あり ます 。 新しい インターフェース は 、 BerkeleyDB 3 と 4 で sleepycat が 提供 し て いる オブジェクト 指向 インターフェース と ほぼ 同じ インターフェース と なっ て い ます 。 
Sleepycat Software は 、 最新 の Berkeley DB ライブラリ を 開発 し て い ます 。 
以下 で は 、 従来 の bsddb モジュール と 互換 性 の ある 、 古い インターフェース を 解説 し て い ます 。 
現在 の 、 Db と DbEnv による オブジェクト 指向 的 インターフェース について は 上記 pybsddb の URL を 参照 し て ください 。 bsddb モジュール で は 、 適切 な 形式 の Berkeley DB ファイル に アクセス する オブジェクト を 生成 する 以下 の 関数 を 定義 し て い ます 。 
各 関数 の 最初 の 二つ の 引数 は 同じ です 。 
可 搬性 の ため に 、 ほとんど の インスタンス で は 最初 の 二つ の 引数 だけ が 使わ れ て いる はず です 。 
filename と 名づけ られ た ハッシュ 形式 の ファイル を 開き ます 。 
filename に None を 指定 する こと で 、 ディスク に 保存 する つもり が ない ファイル を 生成 する こと も でき ます 。 
オプション の flag に は 、 ファイル を 開く ため の モード を 指定 し ます 。 
この モード は " r " ( 読み出し 専用 ), " w " ( 読み書き 可能 )、" c " ( 読み書き 可能 - 必要 なら ファイル を 生成 … これ が デフォルト です ) または " n " ( 読み書き 可能 - ファイル 長 を 0 に 切り詰め )、 に する こと が でき ます 。 
他 の 引数 は ほとんど 使わ れる こと は なく 、 下位 レベル の dbopen () 関数 に 渡さ れる だけ です 。 
他 の 引数 の 使い方 および その 解釈 について は Berkeley DB の ドキュメント を 読ん で 下さい 。 
filename と 名づけ られ た B - Tree 形式 の ファイル を 開き ます 。 
filename に None を 指定 する こと で 、 ディスク に 保存 する つもり が ない ファイル を 生成 する こと も でき ます 。 
この モード は " r " ( 読み出し 専用 )、 " w " ( 読み書き 可能 )、" c " ( 読み書き 可能 - 必要 なら ファイル を 生成 … これ が デフォルト です )、 または " n " ( 読み書き 可能 - ファイル 長 を 0 に 切り詰め )、 に する こと が でき ます 。 
他 の 引数 は ほとんど 使わ れる こと は なく 、 下位 レベル の dbopen () 関数 に 渡さ れる だけ です 。 
他 の 引数 の 使い方 および その 解釈 について は Berkeley DB の ドキュメント を 読ん で 下さい 。 
他 の 引数 は ほとんど 使わ れる こと は なく 、 下位 レベル の dbopen () 関数 に 渡さ れる だけ です 、 他 の 引数 の 使い方 および その 解釈 について は Berkeley DB の ドキュメント を 読ん で 下さい 。 
注意 : 2 . 3 以降 の Unix 版 Python に は 、 bsddb 185 モジュール が 存在 する 場合 が あり ます 。 
この モジュール は 古い Berkeley DB 1 . 85 データベース ライブラリ を 持つ システム を サポート する ため だけ に 存在 し て い ます 。 
新規 に 開発 する コード で は 、 bsddb 185 を 直接 使用 し ない で 下さい 。 
bsddb へ の DBM 形式 の インタフェース . 
7 . 13 . 1 ハッシュ 、 BTree 、 および レコード オブジェクト 
この モジュール は Python の 全て の 「 組み込み 」 識別子 を 直接 アクセス する ため の もの です 。 
例えば __ builtin __. open は open () 関数 の ため の 全て の 組み込み 関数 を 表示 し ます 。 
第 2 . 1 節 , `` 組み込み 関数 '' も 参照 し て ください 。 
BZ 2 File クラス は 、 readline (), readlines (), writelines (), seek () 等 を 含む 、 完全 な ファイル インタフェース を 実装 し ます 。 
BZ 2 File クラス は seek () を エミュレーション で サポート し ます 。 
BZ 2 File クラス は 広範囲 の 改行 文字 バリエーション を サポート し ます 。 
BZ 2 File クラス は ファイル オブジェクト で 言う ところ の 先読み アルゴリズム を 用い た 行 単位 の イテレーション 機能 を 提供 し ます 。 
BZ 2 Compressor および BZ 2 Decompressor クラス で は 逐次 的 圧縮 ( 解凍 ) を サポート し て い ます 。 
compress () および decompress () で は 一括 圧縮 ( 解凍 ) を 関数 サポート し て い ます 。 
個別 の ロック メカニズム によって スレッド 安全 性 を 持っ て い ます 。 
埋め込み ドキュメント が 完備 し て い ます 。 
7 . 17 . 1 ファイル の 圧縮 ( 解凍 ) 
cPickle モジュール は Python オブジェクト の 直列 化 および 非 直列 化 を サポート し 、 
モジュール と ほとんど 同じ インタフェース と 機能 を 提供 し ます 。 
つまり 、 pickle 化 や unpickle 化 を 行う カスタム の サブ クラス を 導出 する こと が でき ない という こと です 。 
多く の アプリケーション で は この 機能 は 不要 な ので 、 cPickle モジュール による 大きな パフォーマンス 向上 の 恩恵 を 受け られる はず です 。 pickle と cPickle で 作ら れ た pickle データ 列 は 同じ な ので 、 既存 の pickle データ に対して pickle と cPickle を 互換 に 使用 する こと が でき ます 
3 . 11 。 
cPickle と pickle の API 間 に は 他 に も 些細 な 相違 が あり ます が 、 ほとんど の アプリケーション で 互換 性 が あり ます 。 
... を 互換 に 使用 する こと が でき ます 3 . 11 
pickle データ 形式 は 実際 に は 小規模 な スタック 指向 の プログラム 言語 で あり 、 また ある オブジェクト を エン コード する 際 に 多少 の 自由 度 が ある ため 、 二つ の モジュール が 同じ 入力 オブジェクト に対して 異なる データ 列 を 生成 する こと も あり ます 。 
しかし 、 常に 互いに 他 の データ 列 を 読み 出せる こと が 保証 さ れ て い ます 。 
cStringIO モジュール は 
モジュール と 同様 の インターフェース を 提供 し て い ます 。 
StringIO . StringIO オブジェクト を 酷使 する 場合 、 この モジュール に ある StringIO () 関数 を かわり に 使う と 効果 的 です 。 この モジュール は 、 ビルト イン 型 の オブジェクト を 返す ファクトリー 関数 を 提供 し て いる ので 、 サブ クラス 化 し て 自分 用 の 物 を 作る こと は でき ませ ん 。 
そうした 場合 に は 、 オリジナル の 
モジュール を 使っ て ください 。 
モジュール で 実装 さ れ て いる メモリ ファイル と は 異なり 、 この モジュール で 提供 さ れ て いる もの は 、 プレイン ASCII 文字 列 に エン コード でき ない ユニ コード を 受け付ける こと が でき ませ ん 。 
また 、 引数 に 文字 列 を 指定 し て StringIO () 呼び出す と 読み出し 専用 の オブジェクト が 生成 さ れ ます が 、 この 場合 cStringIO . StringIO () で は write () メソッド を 持た ない オブジェクト を 生成 し ます 。 
これら の オブジェクト は 普段 は 見え ませ ん 。 
トレース バック に StringI と StringO として 表示 さ れ ます 。 次に あげる データ オブジェクト も 提供 さ れ て い ます : 
文字 列 を パラメーター に 渡し て StringIO を 呼ん だ とき に 作ら れる オブジェクト の オブジェクト 型 。 
パラメーター を 渡さ す に StringIO を 呼ん だ とき に 返さ れる オブジェクト の オブジェクト 型 。 
この モジュール に は C API も あり ます 。 詳しく は この モジュール の ソース を 参照 し て ください 。 
この モジュール は Unix の cal プログラム の よう な カレンダー 出力 を 行い 、 それ に 加え て カレンダー に関する 有益 な 関数 群 を 提供 し ます 。 
標準 で は これら の カレンダー は ( ヨーロッパ の 慣例 に従って ) 月曜日 を 週 の 始まり と し 、 日曜日 を 最後 の 日 と し て い ます 。 
setfirstweekday () を 用いる こと で 、 日曜日 ( 6 ) や 他 の 曜日 を 週 の 始まり に 設定 する こと が でき ます 。 
日付 を 表す 引数 は 整数 値 で 与え ます 。 この モジュール で 提供 する 関数 の ほとんど は datetime に 依存 し て おり 、 過去 も 未来 も 現代 の グレゴリオ 暦 を 利用 し ます 。 
この 方式 は Dershowitz と Reingold の 書籍 「 Calendrical Calculations 」 に ある proleptic Gregorian 暦 に 一致 し て おり 、 同書 で は 全て の 計算 の 基礎 と なる 暦 と し て い ます 。 
週 の 最初 の 曜日 ( 0 は 月曜日 , 6 は 日曜日 ) を 設定 し ます 。 
定数 MONDAY , TUESDAY , WEDNESDAY , THURSDAY , FRIDAY , SATURDAY 及び SUNDAY は 便宜上 提供 さ れ て い ます 。 
例えば 、 日曜日 を 週 の 開始 日 に 設定 する とき : 
現在 設定 さ れ て いる 週 の 最初 の 曜日 を 返し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
year が 閏年 なら True を 、 そう で なけれ ば False を 返し ます 。 
ここ で y 1 や y 2 は 年 を 表し ます 。 
バージョン 2 . 0 で 変更 さ れ た 仕様 : Python 1 . 5 . 2 で は 、 この 関数 は 世紀 を またがっ た 範囲 で は 動作 し ませ ん 。 
year ( 1970 -...), month ( 1 - 12 ), day ( 1 - 31 ) で 与え られ た 日 の 曜日 ( 0 は 月曜日 ) を 返し ます 。 
year と month で 指定 さ れ た 月 の 一 日 の 曜日 と 日数 を 返し ます 。 
月 の カレンダー を 行列 で 返し ます 。 
各行 が 週 を 表し 、 月 の 範囲 外 の 日 は 0 に なり ます 。 それぞれ の 週 は setfirstweekday () で 設定 を し て い ない 限り 月曜日 から 始まり ます 。 
month () 関数 によって 返さ れる 月 の カレンダー を 出力 し ます 。 
月 の カレンダー を 複数 行 の 文字 列 で 返し ます 。 
w により 日 の 列 幅 を 変える こと が でき 、 それら は センタリング さ れ ます 。 
l により 各週 の 表示 さ れる 行 数 を 変える こと が でき ます 。 
週 の 最初 の 曜日 は setfirstweekday () 関数 の 設定 に 依存 し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
calendar () 関数 で 返さ れる 一 年間 の カレンダー を 出力 し ます 。 
3 列 から なる 一 年間 の カレンダー を 複数 行 の 文字 列 で 返し ます 。 任意 の 引数 w , l , 及び c は それぞれ 、 日付 列 の 表示 幅 、 各週 の 行 数 及び 月 と 月 の 間 の スペース の 数 を 変更 する ため の もの です 。 
週 の 最初 の 曜日 は setfirstweekday () 関数 の 設定 に 依存 し ます 。 
出力 さ れる カレンダー の 起点 と なる 年 は プラットフォーム に 依存 し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
関連 は あり ませ ん が 便利 な 関数 で 、 
モジュール の gmtime () 関数 の 戻 値 の よう な 時間 の タプル を 受け取り 、 1970 年 を 起点 と し 、 POSIX 規格 の エン コード による Unix の タイム スタンプ に 相当 する 値 を 返し ます 。 
実際 、 time . gmtime () と timegm () は 反対 の 動作 を し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
: モジュール 
モジュール と 似 た 機能 を 持っ た 日付 と 時間 用 の オブジェクト 指向 インタフェース 。 
低 レベル の 時間 に 関連 し た 関数 群 。 . 
CD - ROM デバイス を open () で 開き 、 createparser () で CD から データ を パース する ため の パーザ を 作り ます 。 
open () で 返さ れる オブジェクト は CD から データ を 読み込む の に 使わ れ ます が 、 CD - ROM デバイス の ステータス 情報 や 、 CD の 情報 、 たとえば 目次 など を 得る の に も 使わ れ ます 。 
CD から 得 た データ は パーザ に 渡さ れ 、 パーザ は フレーム を パース し 、 あらかじめ 加え られ た コール バック 関数 を 呼び出し ます 。 オーディオ CD は トラック tracks あるいは プログラム programs ( 同じ 意味 で 、 どちら か の 用語 が 使わ れ ます ) に 分け られ ます 。 
トラック は さらに インデックス indices に 分け られ ます 。 
オーディオ CD は 、 CD 上 の 各 トラック の スタート 位置 を 示す 目次 table of contents を 持っ て い ます 。 
インデックス 0 は 普通 、 トラック の 始まり の 前 の ポーズ です 。 
目次 から 得 られる トラック の スタート 位置 は 通常 、 インデックス 1 の スタート 位置 です 。 CD 上 の 位置 は 2 通り の 方法 で 得る こと が でき ます 。 
それ は フレーム ナンバー と 、 分 、 秒 、 フレーム の 3 つ の 値 から なる タプル の 2 つ です 。 
ほとんど の 関数 は 後者 を 使い ます 。 
位置 は CD の 開始 位置 と トラック の 開始 位置 の 両方 に 相対 的 に なり ます 。 モジュール cd は 、 以下 の 関数 と 定数 を 定義 し て い ます : 
不透明 な パーザ オブジェクト を 作っ て 返し ます 。 
パーザ オブジェクト の メソッド は 下 に 記載 さ れ て い ます 。 
絶対 的 な タイム コード で ある ( minutes , seconds , frames ) の 3 つ 組 の 表現 を 、 相当 する CD の フレーム ナンバー に 変換 し ます 。 
CD - ROM デバイス を 開き ます 。 
不透明 な プレーヤー オブジェクト を 返し ます ; プレーヤー オブジェクト の メソッド は 下 に 記載 さ れ て い ます 。 
デバイス device は SCSI デバイス ファイル の 名前 で 、 例えば '/ dev / scsi / sc 0 d 4 l 0 ' あるいは None です 。 
もし 省略 し たり 、 None なら 、 ハード ウエア が 検索 さ れ て CD - ROM デバイス を 割り当て ます 。 
mode は 、 省略 し ない なら ' r ' に す べき です 。 
この モジュール で は 以下 の 変数 を 定義 し て い ます : 
様々 な エラー について 発生 する 例外 です 。 
オーディオ データ の 1 フレーム の サイズ です 。 
これ は audio タイプ の コール バック へ 渡さ れる オーディオ データ の サイズ です 。 
オーディオ データ が 読み取ら れ て い ない フレーム 1 つ の サイズ です 。 
以下 の 変数 は getstatus () で 返さ れる ステータス 情報 です : 
オーディオ CD が ロード さ れ て 、 ドライブ が 操作 可能 で ある こと を 示し ます 。 
ドライブ に CD が ロード さ れ て い ない こと を 示し ます 。 
ドライブ に CD - ROM が ロード さ れ て いる こと を 示し ます 。 
続い て play あるいは read の 操作 を する と 、 I / O エラー を 返し ます 。 
ディスク や 目次 を 読み込も う と し て いる とき に 起こる エラー 。 
ドライブ が オーディオ CD を CD プレーヤー モード で オーディオ 端子 から 再生 し て いる こと を 示し ます 。 
ドライブ が CD プレーヤー モード で 、 再生 を 一時 停止 し て いる こと を 示し ます 。 
PAUSED と 同じ です が 、 古い モデル ( non 3301 ) で ある Toshiba CD - ROM ドライブ の もの です 。 
この ドライブ は もう SGI から 出荷 さ れ て い ませ ん 。 
cfmfile は 、 コードフラグメント と 関連 する `` cfrg '' リソース を 処理 する モジュール です 。 
この モジュール で コードフラグメント を 分解 や マージ でき て 、 全て の プラグインモジュール を まとめ て 、 一つ の 実行 可能 ファイル に する ため 、 BuildApplication によって 利用 さ れ ます 。 
ゲートウェイインタフェース 規格 ( CGI ) に 準拠 し た スクリプト を サポート する ため の モジュール です 。 
この モジュール で は 、 Python で CGI スクリプト を 書く 際 に 使える 様々 な ユーティリティ を 定義 し て い ます 。 
11 . 2 . 1 はじめ に 
11 . 2 . 10 よく ある 問題 と 解決 法 
cgitb モジュール で は 、 Python スクリプト の ため の 特殊 な 例外 処理 を 提供 し ます 。 
( 実は この 説明 は 少し 的外れ です 。 
この モジュール は もともと 徹底的 な トレース バック 情報 を CGI スクリプト で 生成 し た HTML 内 に 表示 する ため の 設計 さ れ まし た 。 
その後 この 情報 を 平文 テキスト で も 表示 できる よう に 一般 化 さ れ て い ます 。 
) この モジュール の 有効 化 後 に 捕捉 さ れ ない 例外 が 生じ た 場合 、 詳細 で 書式 化 さ れ た 報告 が Web ブラウザ に 送信 さ れ ます 。 
この 報告 に は 各 レベル における ソース コード の 抜粋 が 示さ れ た トレース バック と 、 現在 動作 し て いる 関数 の 引数 や ローカル な 変数 が 収め られ て おり 、 問題 の デバッグ を 助け ます 。 
オプション として 、 この 情報 を ブラウザ に 送信 する 代わり に ファイル に 保存 する こと も でき ます 。 この 機能 を 有効 化 する ため に は 、 単に 自作 の CGI スクリプト の 最初 に 以下 の 一行 を 追加 し ます : 
enable () 関数 の オプション は 、 報告 を ブラウザ に 表示 する か どう か と 、 後で 解析 する ため に ファイル に 報告 を ログ 記録 する か どう か を 制御 し ます 。 
この 関数 は 、 
. excepthook を 設定 する こと で 、 インタプリタ の 標準 の 例外 処理 を cgitb モジュール に 肩代わり さ せる よう に し ます 。 
オプション の 引数 display は 標準 で 1 に なっ て おり 、 この 値 は 0 に し て トレース バック を ブラウザ に 送ら ない よう に 抑制 する こと も でき ます 。 
その他 の 値 を 指定 する と 平文 テキスト の 出力 を 強制 し ます 。 
デフォルト の 値 は " html " です 。 
この 関数 は 標準 の 設定 ( ブラウザ に 報告 を 表示 し ます が ファイル に は ログ を 書き込み ませ ん ) を 使っ て 例外 を 処理 し ます 。 この 関数 は 、 例外 を 捕捉 し た 際 に cgitb を 使っ て 報告 し たい 場合 に 使う こと が でき ます 。 
オプション の info 引数 は 、 例外 の 型 、 例外 の 値 、 トレースバックオブジェクト から なる 3 要素 の タプル で なけれ ば なり ませ ん 。 これ は 
. exc _ info () によって 返さ れる 値 と 全く 同じ です 。 
info 引数 が 与え られ て い ない 場合 、 現在 の 例外 は 
. exc _ info () から 取得 さ れ ます 。 
この モジュール は EA IFF 85 チャンク を 使用 し て いる ファイル の 読み込み の ため の インターフェース を 提供 し ます 。 
この フォーマット は 少なくとも 、 Audio 
Interchange File Format ( AIFF / AIFF - C ) と Real 
( RMFF ) で 使わ れ て い ます 。 
WAVE オーディオファイルフォーマット も 厳密 に 対応 し て いる ので 、 この モジュール で 読み込み でき ます 。 チャンク は 以下 の 構造 を 持っ て い ます : 
Offset 値 
長 さ 
チャンク ID 
big - endian で 示し た チャンク の サイズ で 、 ヘッダ は 含み ませ ん 
バイト データ で 、 n は これ より 先 の フィールド の サイズ 
n が 奇数 なら チャンク の 整頓 の ため に 埋め られる バイト 
この モジュール で 定義 さ れる Chunk クラス の 使い方 として 提案 し て いる の は 、 それぞれ の チャンク の 始め に インスタンス を 作り 、 終わり に 達する まで その インスタンス から 読み取り 、 その後 で 新しい インスタンス を 作る という こと です 。 ファイル の 終わり で 新しい インスタンス を 作ろ う と する と 、 EOFError の 例外 が 発生 し て 失敗 し ます 。 
クラス Chunk 
チャンク を 表現 する クラス 。 
引数 file は ファイル の よう な オブジェクト で ある こと が 想定 さ れ て い ます 。 
この クラス の インスタンス は 特別 に その よう に 認め られ て い ます 。 
必要 と さ れる メソッド は read () だけ です 。 
もし seek () と tell () メソッド が 呼び出さ れ て 例外 を 発生 さ せ なかっ たら 、 これら の メソッド も 動作 し ます 。 
これら の メソッド が 呼び出さ れ て 例外 を 発生 さ せ て も 、 オブジェクト を 変化 さ せ ない よう に なっ て い ます 。 
省略 可能 な 引数 align が true なら 、 チャンクデータ が 偶数 個 で 2 バイト ごと に 整頓 さ れ て いる と 想定 し ます 。 
もし align が false なら 、 チャンクデータ が 奇 数 個 に なっ て いる と 想定 し ます 。 
デフォルト 値 は true です 。 
もし 省略 可能 な 引数 bigendian が false なら 、 チャンクサイズ は little - endian で ある と 想定 し ます 。 
この 引数 の 設定 は WAVE オーディオ ファイル で 必要 です 。 デフォルト 値 は true です 。 
もし 省略 可能 な 引数 inclheader が true なら 、 チャンク の ヘッダ から 得 られる サイズ は ヘッダ の サイズ を 含ん で いる と 想定 し ます 。 
デフォルト 値 は false です 。 
Chunk オブジェクト に は 以下 の メソッド が 定義 さ れ て い ます : 
チャンク の 名前 ( ID ) を 返し ます 。 
これ は チャンク の 始め の 4 バイト です 。 
チャンク の サイズ を 返し ます 。 
オブジェクト を 閉じ て 、 チャンク の 終わり まで 飛び ます 。 
これ は 元 の ファイル 自体 は 閉じ ませ ん 。 
残り の 以下 の メソッド は 、 close () メソッド を 呼び出し た 後 に 呼び出す と 例外 IOError を 発生 し ます 。 
False を 返し ます 。 
チャンク の 現在 位置 を 設定 し ます 。 
引数 whence は 省略 可能 で 、 デフォルト 値 は 0 ( ファイル の 絶対 位置 ) です ; 他 に 1 ( 現在 位置 から 相対 的 に シーク し ます ) と 2 ( ファイル の 末尾 から 相対 的 に シーク し ます ) の 値 を 取り ます 。 何 も 値 は 返し ませ ん 。 
もし 元 の ファイル が シーク に 対応 し て い なけれ ば 、 前方 へ の シーク のみ が 可能 です 。 
チャンク 内 の 現在 位置 を 返し ます 。 
チャンク から 最大 で size バイト ( size バイト を 読み込む まで 、 少なくとも チャンク の 最後 に 行き着く まで ) 読み込み ます 。 
もし 引数 size が 負 か 省略 さ れ たら 、 チャンク の 最後 まで 全て の データ を 読み込み ます 。 
バイト 値 は 文字 列 の オブジェクト として 返さ れ ます 。 
チャンク の 最後 に 行き着い たら 、 空文字 列 を 返し ます 。 
チャンク の 最後 まで 飛び ます 。 
さらに チャンク の read () を 呼び出す と 、 '' が 返さ れ ます 。 
もし チャンク の 内容 に 興味 が ない なら 、 この メソッド を 呼び出し て ファイル ポインタ を 次 の チャンク の 始め に 設定 し ます 。 
... の インターフェース を 提供 し ます 。 
この モジュール は 常に 利用 でき ます 。 
この モジュール で は 、 複素数 を 扱う 数学 関数 へ の アクセス 手段 を 提供 し て い ます 。 
提供 し て いる 関数 を 以下 に 示し ます : 
x の 逆 双曲線 余弦 を 返し ます 。 branch cut が 一つ あり 、 1 の 左側 に 実数 軸 に 沿っ て - へ と 延び て い て 、 上 から 連続 し て い ます 。 
x の 逆 正弦 を 返し ます 。 acos () と 同じ branch cut を 持ち ます 。 
x の 余弦 を 返し ます 。 
x の 双曲線 余弦 を 返し ます 。 
base を 底 と する x の 対数 を 返し ます 。 
もし base が 指定 さ れ て い ない 場合 に は 、 x の 自然 対数 を 返し ます 。 
branch cut を 一つ もち 、 0 から 負 の 実数 軸 に 沿っ て - に 延び て おり 、 上 で 連続 し て い ます 。 バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 base が 追加 さ れ まし た 。 
x の 底 10 対数 を 返し ます 。 
log () と 同じ branch cut を 持ち ます 。 
x の 正弦 を 返し ます 。 
x の 双曲線 正弦 を 返し ます 。 
x の 平方根 を 返し ます 。 
log () と 同じ branch cut を 持ち ます 。 
x の 正接 を 返し ます 。 
x の 双曲線 正接 を 返し ます 。 
この モジュール で は また 、 以下 の 数学 定数 も 定義 し て い ます : 
数学 上 の 定数 pi で 、 実数 です 。 
数学 上 の 定数 e で 、 実数 です 。 
と 同じ よう な 関数 が 選ば れ て い ます が 、 全く 同じ で は ない ので 注意 し て ください 。 
機能 を 二つ の モジュール に 分け て いる の は 、 複素数 に 興味 が なかっ たり 、 もしか する と 複素数 と は 何 か すら 知ら ない よう な ユーザ が いる から です 。 
これら は 多く の 複素 関数 における 必然 的 な 特性 です 。 
複素 関数 を 計算 する 必要 が ある 場合 、 これら の branch cut に関して 理解 し て いる もの と 仮定 し て い ます 。 
悟り に 至る ため に 何らかの ( 到底 基礎 的 と は いえ ない ) 複素数 に関する 書 を ひもとい て ください 。 
数値 計算 を 目的 と し た branch cut の 正しい 選択 方法 について の 情報 として は 、 以下 が よい 参考 文献 と なり ます : 
Cmd クラス で は 、 行 指向 の コマンド インタープリタ を 書く ため の 簡単 な フレーム ワーク を 提供 し ます 。 
テスト 用 の 仕掛け や 管理 ツール 、 そして 、 後 により 洗練 さ れ た インター フェイス で ラップ する プロトタイプ として 、 こうした インタープリタ は よく 役に立ち ます 。 
クラス Cmd 
Cmd インスタンス 、 あるいは サブ クラス の インスタンス は 、 行 指向 の インタープリタ ・ フレーム ワーク です 。 
名 です 。 デフォルト は Tab です 。 
completekey が None で なく 、 readline が 利用 できる なら ば 、 コマンド 補完 は 自動的 に 行わ れ ます 。 
オプション 引数 stdin と stdout に は 、 Cmd または その サブ クラス の インスタンス が 入出力 に 使用 する ファイル オブジェクト を 指定 し ます 。 
省略 時 に は sys . stdin と sys . stdout が 使用 さ れ ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 引数 stdin と stdout を 追加 
code モジュール は read - eval - print ( 読み込み - 評価 - 表示 ) ループ を Python で 実装 する ため の 機能 を 提供 し ます 。 
対話 的 な インタプリタプロンプト を 提供 する アプリケーション を 作る ため に 使える 二つ の クラス と 便利 な 関数 が 含ま れ て い ます 。 
クラス InteractiveInterpreter 
この クラス は 構文 解析 と インタプリタ 状態 ( ユーザ の 名前 空間 ) を 取り扱い ます 。 
入力 バッファリング や プロンプト 出力 、 または 入力 ファイル 指定 を 扱い ませ ん ( ファイル 名 は 常に 明示 的 に 渡さ れ ます )。 オプション の locals 引数 は その 中 で コード が 実行 さ れる 辞書 を 指定 し ます 。 
その 初期 値 は 、 キー '__ name __' が '__ console __' に 設定 さ れ 、 キー '__ doc __' が None に 設定 さ れ た 新しく 作ら れ た 辞書 です 。 クラス InteractiveConsole 
対話 的 な Python インタプリタ の 振る舞い を 厳密 に エミュレート し ます 。 
この クラス は InteractiveInterpreter を 元 に 作ら れ て い て 、 通常 の sys . ps 1 と sys . ps 2 を つかっ た プロンプト 出力 と 入力 バッファリング が 追加 さ れ て い ます 。 
read - eval - print ループ を 実行 する ため の 便利 な 関数 。 
これ は InteractiveConsole の 新しい インスタンス を 作り 、 readfunc が 与え られ た 場合 は raw _ input () メソッド として 使わ れる よう に 設定 し ます 。 
local が 与え られ た 場合 は 、 インタプリタ ループ の デフォルト 名前 空間 として 使う ため に InteractiveConsole コンス トラクタ へ 渡さ れ ます 。 
そして 、 インスタンス の interact () メソッド は 見出し として 使う ため に 渡さ れる banner を 受け取り 実行 さ れ ます 。 
コンソール オブジェクト は 使わ れ た 後 捨て られ ます 。 
この 関数 は Python の インタプリタメインループ ( 別名 、 read - eval - print ループ ) を エミュレート しよ う と する プログラム にとって 役に立ち ます 。 
扱い にくい 部分 は 、 ユーザ が ( 完全 な コマンド や 構文 エラー で は なく ) さらに テキスト を 入力 すれ ば 完全 に なり うる 不完全 な コマンド を 入力 し た とき を 決定 する こと です 。 
この 関数 は ほとんど の 場合 に 実際 の インタプリタメインループ と 同じ 決定 を 行い ます 。 
コマンド が 完全 で 構文 エラー を 含む 場合 は 、 SyntaxError を 発生 さ せ ます 。 または 、 コマンド が 無効 な リテラル を 含む 場合 は 、 OverflowError もしくは ValueError を 発生 さ せ ます 。 
codec 検索 関数 を 登録 し ます 。 
検索 関数 は 第 1 引数 に アルファベット の 小文字 から 成る エン コーディング 名 を 取り 、 関数 の タプル ( encoder , decoder , stream _ reader , stream _ writer ) を 返す こと に なっ て い ます 。 戻り 値 の 関数 が 取る 引数 は 以下 の 通り です 。 
encoder と decoder : これら の 引数 は 、 Codec インスタンス の encode () と decode () ( Codec Interface 参照 ) と 同じ インタフェース を 持つ 関数 、 または メソッド で なけれ ば なり ませ ん 。 
これら の 関数 ・ メソッド は 内部 状態 を 持た ず に 動作 する ( stateless mode ) と 想定 さ れ て い ます 。 
stream _ reader と stream _ writer : これら の 引数 は 、 次 の よう な インタフェース を 持つ ファクトリ 関数 で なけれ ば なり ませ ん : 
ファクトリ 関数 は 、 基底 クラス の StreamWriter や StreamReader が 定義 し て いる インタフェース を 提供 する オブジェクト を 返さ ね ば なり ませ ん 。 
Python codec レジストリ から codec の タプル を 探し 、 上 で 定義 し た よう な 関数 の タプル を 返し ます 。 encoding の 検索 は 、 まず に レジストリ の キャッシュ から 行い ます 。 
見つから なけれ ば 、 登録 さ れ て いる 検索 関数 の リスト から 探し ます 。 
見つから なけれ ば 、 LookupError を 送出 し 、 見つかれ ば codec の タプル を キャッシュ に 保存 し て 、 見つかっ た エン コーディング を 呼び出し 側 に 返し ます 。 
さまざま な codec へ の アクセス を 簡便 化 する ため に 、 この モジュール は 以下 の よう な 関数 を 提供 し て い ます 。 これら の 関数 は 、 codec の 検索 に lookup () を 使い ます 。 
encoding に 指定 し た codec を 検索 し 、 エンコーダ 関数 を 返し ます 。 encoding が 見つから なけれ ば LookupError を 送出 し ます 。 
encoding に 指定 し た codec を 検索 し 、 デコーダ 関数 を 返し ます 。 encoding が 見つから なけれ ば LookupError を 送出 し ます 。 
encoding に 指定 し た codec を 検索 し 、 StreamReader クラス 、 または ファクトリ 関数 を 返し ます 。 encoding が 見つから なけれ ば LookupError を 送出 し ます 。 
encoding に 指定 し た codec を 検索 し 、 StreamWriter クラス 、 または ファクトリ 関数 を 返し ます 。 encoding が 見つから なけれ ば LookupError を 送出 し ます 。 
エラー 処理 関数 は この 例外 を 送出 する か 、 別 の 例外 を 送出 する か 、 または 入力 の エン コード が でき なかっ た 部分 の 代替 文字 列 と エン コード を 再開 する 場所 の 指定 が 入っ た タプル を 返す か し なけれ ば なり ませ ん 。 
最後 の 場合 、 エンコーダ は 代替 文字 列 を エン コード し 、 元 の 入力 中 の 指定 位置 から エン コード を 再開 し ます 。 
位置 を 負 の 値 に する と 、 入力 文字 列 の 末端 から の 相対 位置 として 扱わ れ ます 。 
境界 の 外側 に ある 位置 を 返し た 場合 に は IndexError が 送出 さ れ ます 。 デコード と 翻訳 は 同様 に 働き ます が 、 エラー 処理 関数 に 渡さ れる の が UnicodeDecodeError か UnicodeTranslateError で ある 点 と 、 エラー 処理 関数 の 置換 し た 内容 が 直接 出力 に なる 点 が 異なり ます 。 
名前 name で 登録 済み の エラー 処理 関数 を 返し ます 。 
エラー 処理 関数 が 見つから なけれ ば LookupError を 送出 し ます 。 strict _ errors 
strict エラー 処理 の 実装 です 。 
replace エラー 処理 の 実装 です 。 
ignore エラー 処理 の 実装 です 。 
xmlcharrefreplace エラー 処理 の 実装 です 。 
backslashreplace エラー 処理 の 実装 です 。 
エン コード さ れ た ファイル や ストリーム の 処理 を 簡便 化 する ため 、 , この モジュール は 次 の よう な ユーティリティ 関数 を 定義 し て い ます 。 
mode で エン コード さ れ た ファイル を 開き 、 透過 的 に エン コード ・ デコード を 行う よう に ラップ し た ファイル オブジェクト を 返し ます 。 
注意 : ラップ 版 の ファイル オブジェクト を 操作 する 関数 は 、 該当 する codec が 定義 し て いる 形式 の オブジェクト だけ を 受け付け ます 。 
多く の 組み込み codec で は Unicode オブジェクト です 。 
関数 の 戻り 値 も codec に 依存 し 、 通常 は Unicode オブジェクト です 。 
encoding に は ファイル の エン コーディング を 指定 し ます 。 
errors を 指定 し て 、 エラー 処理 を 定義 する こと も でき ます 。 
デフォルト で は ' strict ' で 、 エン コード 時 に エラー が あれ ば ValueError を 送出 し ます 。 
buffering は 、 組み込み 関数 open () と 同じ です 。 
デフォルト で は 行 バッファリング です 。 
ラップ し た ファイル オブジェクト を 返し ます 。 
この オブジェクト は 透過 な エン コード 変換 を 提供 し ます 。 
ラップ さ れ た ファイル に 書か れ た 文字 列 は 、 input に 指定 し た エン コーディング に従って 変換 さ れ 、 output に 指定 し た エン コーディング を 使っ て string 型 に 変換 さ れ 、 ファイル に 書き込ま れ ます 。 
中間 エン コーディング は 指定 さ れ た codecs に 依存 し ます が 、 普通 は Unicode です 。 output が 与え られ なけれ ば 、 input が デフォルト に なり ます 。 
errors を 与え て 、 エラー 処理 を 定義 する こと も でき ます 。 
デフォルト で は ' strict ' で 、 エン コード 時 に エラー が あれ ば ValueError を 送出 し ます 。 
この モジュール は 以下 の よう な 定数 を 定義 し て い ます 。 プラットフォーム 依存 な ファイル を 読み書き する の に 役立ち ます 。 
ここ で 定義 さ れ た 定数 は 、 様々 な エンコーディング の Unicode の バイトオーダマーカ ( BOM ) で 、 UTF - 16 と UTF - 32 における データ ストリーム や ファイル ストリーム の バイト オーダ を 指定 し たり 、 UTF - 8 における Unicode signature として 使わ れ ます 。 
4 . 9 . 1 . 3 StreamReader オブジェクト 
4 . 9 . 1 . 4 StreamReaderWriter オブジェクト 
4 . 9 . 1 . 5 StreamRecoder オブジェクト 
3 . 24 codeop -- Python コード を コンパイル する 
モジュール で 行わ れ て いる よう な Python の read - eval - print ループ を エミュレート する ユーティリティ を codeop モジュール は 提供 し ます 。 
結果 的 に 、 直接 モジュール を 使い たい と は 思わ ない かも しれ ませ ん 。 あなた の プログラム に この よう な ループ を 含め たい 場合 は 、 代わり に 
モジュール を 使う こと を おそらく 望む でしょ う 。 この 仕事 に は 二つ の 部分 が あり ます : 
入力 の 一行 が Python の 文 として 完全 で ある か どう か を 見分け られる こと : 簡単 に 言え ば 、 次 が `' か 、 あるいは `...' か どう か を 見分け ます 。 
どの future 文 を ユーザ が 入力 し た の か を 覚え て いる こと 。 
Python コード の 文字 列 で ある べき source を コンパイル し て み て 、 source が 有効 な Python コード の 場合 は コード オブジェクト を 返し ます 。 
この よう な 場合 、 コード オブジェクト の ファイル 名 属性 は 、 デフォルト で ' input ' で ある filename でしょ う 。 
source が 有効 な Python コード で は ない が 、 有効 な Python コード の 接頭 語 で ある 場合 に は 、 None を 返し ます 。 
他 の どんな 値 も ValueError を 発生 さ せる 原因 と なり ます 。 
警告 : ソース の 終わり に 達する 前 に 、 成功 し た 結果 をもって パーサ は 構文 解析 を 止める こと が ( でき そう で は なく ) でき ます 。 この よう な 場合 、 後ろ に 続く 記号 は エラー と なら ず に 無視 さ れ ます 。 
例えば 、 改行 が 後ろ に 付く バックス ラッシュ に は 不定 の ゴミ が 付い て いる かも しれ ませ ん 。 
パーサ の API が より 良く なれ ば すぐ に 、 これ は 修正 さ れる でしょ う 。 
クラス Compile 
この クラス の インスタンス は 組み込み 関数 compile () と シグネチャ が 一致 する __ call __() メソッド を 持っ て い ます が 、 インスタンス が __ future __ 文 を 含む プログラム テキスト を コンパイル する 場合 は 、 インスタンス は 有効 な その 文 とともに 続く すべて の プログラム テキスト を ' 覚え て い て ' コンパイル する という 違い が あり ます 。 
クラス CommandCompiler ( 
この クラス の インスタンス は compile _ command () と シグネチャ が 一致 する __ call __() メソッド を 持っ て い ます 。 
インスタンス が __ future __ 文 を 含む プログラム テキスト を コンパイル する 場合 に 、 インスタンス は 有効 な その 文 とともに それ に 続く すべて の プログラム テキスト を ' 覚え て い て ' コンパイル する という 違い が あり ます 。 
バージョン 間 の 互換 性 について の 注意 : Compile と CommandCompiler は Python 2 . 2 で 導入 さ れ まし た 。 
2 . 2 の future - tracking 機能 を 有効 に する だけ で なく 、 2 . 1 と Python の より 以前 の バージョン と の 互換 性 も 保ち たい 場合 は 、 次 の よう に かく こと が でき ます 
これ は 影響 の 小さい 変更 です が 、 あなた の プログラム に おそらく 望ま れ ない グローバル 状態 を 導入 し ます 。 または 、 次 の よう に 書く こと も でき ます : 
そして 、 新た な コンパイラ オブジェクト が 必要 と なる たび に CommandCompiler を 呼び出し ます 。 
この モジュール で は 高性能 な コンテナ ・ データ 型 を 実装 し て い ます 。 
現在 の ところ 、 実装 さ れ て いる 型 は deque のみ です 。 
将来 的 に B - tree と Fibonacci heap が ふくま れる かも しれ ませ ん 。 
iterable で 与え られる データ から 、 新しい deque オブジェクト を ( append () を つかっ て ) 左 → 右 に 初期 化 し 、 返し ます 。 
iterable が 指定 さ れ ない 場合 、 新しい deque オブジェクト は 空 に なり ます 。 Deque と は 、 スタック と キュー を 一般 化 し た もの です ( この 名前 は 「 デック 」 と 発音 さ れ 、 これ は 「 double - ended queue 」 の 省略 形 です )。 
Deque オブジェクト は 以下 の よう な メソッド を サポート し て い ます : 
x を deque の 右側 に つけ加え ます 。 
x を deque の 左側 に つけ加え ます 。 
Deque から すべて の 要素 を 削除 し 、 長 さ を 0 に し ます 。 
イテレータ 化 可能 な 引数 iterable から 得 られる 要素 を deque の 右側 に 追加 し 拡張 し ます 。 
イテレータ 化 可能 な 引数 iterable から 得 られる 要素 を deque の 左側 に 追加 し 拡張 し ます 。 
注意 : 左 から 追加 し た 結果 は 、 イテレータ 引数 の 順序 と は 逆 に なり ます 。 
Deque の 右側 から 要素 を ひとつ 削除 し 、 その 要素 を 返し ます 。 要素 が ひとつ も 存在 し ない 場合 は IndexError を 発生 さ せ ます 。 
Deque の 左側 から 要素 を ひとつ 削除 し 、 その 要素 を 返し ます 。 要素 が ひとつ も 存在 し ない 場合 は IndexError を 発生 さ せ ます 。 
Deque の 要素 を 全体 で n ステップ だけ 右 に ローテート し ます 。 
n が 負 の 値 の 場合 は 、 左 に ローテート し ます 。 
Deque を ひとつ 右 に ローテート する こと は " d . appendleft ( d . pop ())" と 同じ です 。 
colorsys モジュール は 、 計算 機 の ディスプレイ モニタ で 使わ れ て いる RGB ( Red Green Blue ) 色 空間 で 表さ れ た 色 と 、 他 の 3 種類 の 色 座標 系 : YIQ , HLS ( Hue Lightness Saturation : 色相 、 彩 度 、 飽和 ) および HSV ( Hue Saturation Value : 色相 、 彩 度 、 明度 ) と の 間 の 双方向 の 色 値 変換 を 定義 し ます 。 
これら の 色 空間 における 色 座標 系 は 全て 浮動 小数点 数 で 表さ れ ます 。 
YIQ 空間 で は 、 Y 軸 は 0 から 1 です が 、 I および Q 軸 は 正 の 値 も 負 の 値 も とり 得 ます 。 
RGB から YIQ に 変換 し ます 。 
YIQ から RGB に 変換 し ます 。 
RGB から HLS に 変換 し ます 。 
HLS から RGB に 変換 し ます 。 
RGB から HSV に 変換 し ます 。 
HSV から RGB に 変換 し ます 。 
サンプル コード : 
Unix プラットフォーム で 利用 でき ます 。 
文字 列 cmd を os . popen () を 使い シェル 上 で 実行 し 、 タプル ( status , output ) を 返し ます 。 
実際 に は { cmd ; } 21 と 実行 さ れる ため 、 標準 出力 と エラー 出力 が 混合 さ れ ます 。 
また 、 出力 の 最後 の 改行 文字 は 取り除か れ ます 。 
コマンド の 終了 ステータス は C 言語 関数 の wait () の 規則 に従って 解釈 する こと が でき ます 。 
getstatusoutput () に 似 て い ます が 、 終了 ステータス は 無視 さ れ 、 コマンド の 出力 のみ を 返し ます 。 
" ls - ld file " の 出力 を 文字 列 で 返し ます 。 
例 : 
この モジュール は 、 指定 し た ディレクトリ に 含ま れる Python ソース を コンパイル する 関数 を 定義 し て い ます 。 
dir で 指定 さ れ た ディレクトリ を 再帰 的 に 下降 し 、 見つかっ た . py を 全て コンパイル し ます 。 
maxlevels は 、 下降 する 最大 の 深 さ ( デフォルト は 10 ) を 指定 し ます 。 
ddir に は 、 エラーメッセージ で 使用 さ れる ファイル 名 の 、 親 ディレクトリ 名 を 指定 する 事 が でき ます 。 
force が 真 の 場合 、 モジュール は ファイル の 更新 日 付 に 関わり なく 再 コンパイル さ れ ます 。 
rx に は 、 検索 対象 から 除外 する ファイル 名 の 正規 表現 式 を 指定 し ます 。 
sys . path に 含ま れる 、 全て の . py ファイル を バイト コンパイル し ます 。 
skip _ curdir が 真 ( デフォルト ) の 時 、 カレント ディレクトリ は 検索 さ れ ませ ん 。 
maxlevels と force は デフォルト で は 0 で 、 compile _ dir () に 渡さ れ ます 。 
参考 : py _ compile 
compiler . ast モジュール は 、 各 ノード の タイプ と その 要素 を 記述 し た テキストファイル から つくら れ ます 。 
各 ノード の タイプ は クラス として 表現 さ れ 、 その クラス は 抽象 基底 クラス compiler . ast . Node を 継承 し 子 ノード の 名前 属性 を 定義 し て い ます 。 
クラス Node 
Node インスタンス は パーザジェネレータ によって 自動的 に 作成 さ れ ます 。 
ある 特定 の Node インスタンス に対する 推奨 さ れる インター フェイス と は 、 子 ノード に アクセス する ため に public な ( 訳注 : 公開 さ れ た ) 属性 を 使う こと です 。 
public な 属性 は 単一 の ノード 、 あるいは 一連 の ノード の シーケンス に 束縛 さ れ て いる ( 訳注 : バインド さ れ て いる ) かも しれ ませ ん が 、 これ は Node の タイプ によって 違い ます 。 
たとえば Class ノード の bases 属性 は 基底 クラス の ノード の リスト に 束縛 さ れ て おり 、 doc 属性 は 単一 の ノード のみ に 束縛 さ れ て いる 、 といった 具合 です 。 各 Node インスタンス は lineno 属性 を もっ て おり 、 これ は None かも しれ ませ ん 。 
XXX どう いっ た ノード が 使用 可能 な lineno を もっ て いる か の 規則 は 定か で は ない 。 
Node オブジェクト は すべて 以下 の メソッド を もっ て い ます : 
子 ノード と 子 オブジェクト を 、 これら が 出 て き た 順 で 、 平ら な リスト 形式 に し て 返し ます 。 
とくに ノード の 順序 は 、 Python 文法 中 に 現れる もの と 同じ に なっ て い ます 。 
すべて の 子 が Node インスタンス な わけ で は あり ませ ん 。 
たとえば 関数 名 や クラス 名 といった もの は 、 ただ の 文字 列 として 表さ れ ます 。 
子 ノード を これら が 出 て き た 順 で 平ら な リスト 形式 に し て 返し ます 。 
この メソッド は getChildren () に 似 て い ます が 、 Node インスタンス しか 返さ ない という 点 で 異なっ て い ます 。 
Node クラス の 一般 的 な 構造 を 説明 する ため 、 以下 に 2 つ の 例 を 示し ます 。 
while 文 は 以下 の よう な 文法 規則 により 定義 さ れ て い ます : 
While ノード は 3 つ の 属性 を もっ て い ます : test 、 body 、 および else _ です 。 
( ある 属性 に ふさわしい 名前 が Python の 予約 語 として すでに 使わ れ て いる とき 、 その 名前 を 属性 名 に する こと は でき ませ ん 。 
If ノード で は 、 tests および else _ の 2 つ だけ の 属性 が 定義 さ れ て い ます 。 
tests 属性 に は 条件 式 と その後 の 動作 の タプル が リスト 形式 で 入っ て い ます 。 
おのおの の if / elif 節 ごと に 1 タプル です 。 
各 タプル の 最初 の 要素 は 条件 式 で 、 2 番目 の 要素 は もし その 式 が 真 なら ば 実行 さ れる コード を ふくん だ Stmt ノード に なっ て い ます 。 
If の getChildren () メソッド は 、 子 ノード の 平ら な リスト を 返し ます 。 
if / elif 節 が 3 つ あっ て else 節 が ない 場合 なら 、 getChildren () は 6 要素 の リスト を 返す でしょ う : 最初 の 条件 式 、 最初 の Stmt 、 2 番目 の 条件 式 … といった 具合 です 。 以下 の 表 は compiler . ast で 定義 さ れ て いる Node サブ クラス と 、 それら の インスタンス に対して 使用 可能 な パブリック な 属性 です 。 
ほとんど の 属性 の 値 じたい は Node インスタンス か 、 インスタンス の リスト です 。 
この 値 が インスタンス 型 以外 の 場合 、 その 型 は 備考 の 中 で 記さ れ て い ます 。 
これら 属性 の 順序 は 、 getChildren () および getChildNodes () が 返す 順 です 。 
ノード の 型 
左側 の 項 
右側 の 項 
項 の リスト 
代入 先 を あらわす 属性 
ドット (.) の 左側 の 式 
属性 名 を あらわす 文字 列 
代入 先 の リスト 要素 の リスト 
代入 先 の 名前 
代入 先 の タプル 要素 の リスト 
検査 さ れる 条件 式 
AssertionError の 値 
代入 先 の リスト 、 代入 記号 (=) ごと に ひとつ 
代入 する 値 
呼ば れる 側 を あらわす 式 
引数 の リスト 
*- arg 拡張 引数 の 値 
**- arg 拡張 引数 の 値 
クラス 名 を あらわす 文字 列 
基底 クラス の リスト 
doc string 、 文字 列 あるいは None 
クラス 文 の 本体 
関数 の デコレータ 表現 の リスト 
Decorators か None 
引数 を あわら す 文字 列 の リスト 
デフォルト 値 の リスト 
関数 の 本体 
モジュール 本体 、 Stmt インスタンス 
文 の リスト 
この パッケージ の トップ レベル で は 4 つ の 関数 が 定義 さ れ て い ます 。 
compiler モジュール を import する と 、 これら の 関数 および この パッケージ に 含ま れ て いる 一連 の モジュール が 使用 可能 に なり ます 。 
buf 中 の Python ソース コード から 得 られ た 抽象 構文 木 AST を 返し ます 。 ソース コード 中 に エラー が ある 場合 、 この 関数 は SyntaxError を 発生 さ せ ます 。 
返り 値 は compiler . ast . Module インスタンス で あり 、 この 中 に 構文 木 が 格納 さ れ て い ます 。 
path で 指定 さ れ た ファイル 中 の Python ソース コード から 得 られ た 抽象 構文 木 AST を 返し ます 。 
これ は parse ( open ( path ). read ()) と 等価 な 働き を し ます 。 
ast に 格納 さ れ た 抽象 構文 木 の 各 ノード を 先行 順序 ( pre - order ) で たどっ て いき ます 。 
各 ノード ごと に visitor インスタンス の 該当 する メソッド が 呼ば れ ます 。 
文字 列 source 、 Python モジュール 、 文 あるいは 式 を exec 文 あるいは eval () 関数 で 実行 可能 な バイトコードオブジェクト に コンパイル し ます 。 
ファイル source を コンパイル し 、 . pyc ファイル を 生成 し ます 。 
compiler パッケージ は 以下 の モジュール を 含ん で い ます : 
、 consts ,、 future 、 misc 、 pyassem 、 pycodegen 、 symbols 、 transformer 、 そして 
。 
visitor パターン は ... 
パッケージ は 、 Python の イントロスペクション 機能 を 利用 し て visitor の ため に 必要 な 大 部分 の インフラ を 省略 し た 、 visitor パターン の 変種 を 使っ て い ます 。 visit さ れる クラス は 、 visitor を 受け入れる よう に プログラム さ れ て いる 必要 は あり ませ ん 。 
visitor が 必要 な の は ただ それ が とくに 興味 ある クラス に対して visit メソッド を 定義 する こと だけ です 。 それ 以外 は デフォルト の visit メソッド が 処理 し ます 。 
クラス ASTVisitor 
ASTVisitor は 構文 木 を 正しい 順序 で わたり 歩く よう に し ます 。 
それぞれ の ノード は まず preorder () の 呼び出し で はじまり ます 。 
もし その メソッド が 存在 し て いる 場合 、 それ は その ノード を 第 一 引数 として 呼び出さ れ ます 。 ある 特定 の ノード 型 に対する visitor メソッド で は 、 その 子 ノード を どの よう にわたり 歩く か が 制御 でき ます 。 
ASTVisitor は visitor に visit メソッド を 追加 する こと で 、 その visitor 引数 を 修正 し ます 。 
特定 の ノード 型 に対する visitor が 存在 し ない 場合 、 default () メソッド が 呼び出さ れ ます 。 
ASTVisitor オブジェクト に は 以下 の よう な メソッド が あり ます : XXX 追加 の 引数 を 記述 
cookielib モジュール は HTTP クッキー の 自動 処理 を おこなう クラス を 定義 し ます 。 
RFC 2109 の クッキー は Netscape クッキー として 解析 さ れ 、 のち に RFC 2965 として 処理 さ れ ます 。 
cookielib は デファクトスタンダード の Netscape クッキー プロトコル ( これ は 元々 Netscape が 策定 し た 仕様 と は かなり 異なっ て い ます ) に 従う よう に なっ て おり 、 RFC 2109 で 導入 さ れ た max - age や port など の クッキー 属性 に も 注意 を 払い ます 。 
この 例外 は FileCookieJar インスタンス が ファイル から クッキー を 読み込む の に 失敗 し た 場合 に 発生 し ます 。 
以下 の クラス が 提供 さ れ て い ます : 
クラス CookieJar ( 
policy は CookiePolicy インター フェイス を 実装 する オブジェクト です 。 
CookieJar クラス に は HTTP クッキー を 保管 し ます 。 
これ は HTTP リクエスト に 応じ て クッキー を 取り出し 、 それ を HTTP レスポンス の 中 で 返し ます 。 必要 に 応じ て 、 CookieJar インスタンス は 保管 さ れ て いる クッキー を 自動的 に 破棄 し ます 。 
この サブ クラス は 、 クッキー を ファイル や データベース に 格納 し たり 取り出し たり する 操作 を おこなう 役割 を 負っ て い ます 。 
クラス FileCookieJar 
policy は CookiePolicy インター フェイス を 実装 する オブジェクト です 。 
これ 以外 の 引数 について は 、 該当 する 属性 の 説明 を 参照 し て ください 。 FileCookieJar は ディスク 上 の ファイル から の クッキー の 読み込み 、 もしくは 書き込み を サポート し ます 。 
実際 に は 、 load () または revert () の どちら か の メソッド が 呼ば れる まで クッキー は 指定 さ れ た ファイル から は ロード さ れ ませ ん 。 この クラス の サブ クラス は 11 . 20 . 2 節 で 説明 し ます 。 
クラス CookiePolicy 
この クラス は 、 ある クッキー を サーバ から 受け入れる べき か 、 そして サーバ に 返す べき か を 決定 する 役割 を 負っ て い ます 。 
クラス DefaultCookiePolicy 
コンス トラクタ は キーワード 引数 しか 取り ませ ん 。 
blocked _ domains は ドメイン 名 から なる シーケンス で 、 ここ から は 決して クッキー を 受けとら ない し 、 この ドメイン に クッキー を 返す こと も あり ませ ん 。 allowed _ domains が None で ない 場合 、 これ は この ドメイン のみ から クッキー を 受けとり 、 返す という 指定 に なり ます 。 
これ 以外 の 引数 について は CookiePolicy および DefaultCookiePolicy オブジェクト の 説明 を ごらん ください 。 
DefaultCookiePolicy は Netscape および RFC 2965 クッキー の 標準 的 な 許可 / 拒絶 の ルール を 実装 し て い ます 。 
RFC 2109 の クッキー ( Set - Cookie : の version クッキー 属性 が 1 で 受けとら れる もの ) は RFC 2965 の ルール で 扱わ れ ます 。 
また DefaultCookiePolicy に は いくつ か の 細かい ポリシー 設定 を おこなう パラメータ が 用意 さ れ て い ます 。 
クラス Cookie 
この クラス は Netscape クッキー 、 RFC 2109 の クッキー 、 および RFC 2965 の クッキー を 表現 し ます 。 
cookielib の ユーザ が 自分 で Cookie インスタンス を 作成 する こと は 想定 さ れ て い ませ ん 。 
かわり に 、 必要 に 応じ て CookieJar インスタンス の make _ cookies () を 呼ぶ こと に なっ て い ます 。 
参考 : urllib 2 
HTTP の クッキー クラス で 、 基本 的 に は サーバ サイド の コード で 有用 です 。 
cookielib および Cookie モジュール は 互いに 依存 し て は い ませ ん 。 
この モジュール の 拡張 で 、 Windows 上 の Microsoft Internet Explorer クッキー を 読み こむ クラス が 含ま れ て い ます 。 
元祖 Netscape の クッキー プロトコル の 仕様 です 。 
今 でも これ が 主流 の プロトコル です が 、 現在 の メジャー な ブラウザ ( と cookielib ) が 実装 し て いる 「 Netscape クッキー プロトコル 」 は cookie _ spec . html で 述べ られ て いる もの と おおまか に しか 似 て い ませ ん 。 
RFC 2965 によって 過去 の 遺物 に なり まし た 。 Set - Cookie : の version = 1 で 使い ます 。 
Netscape プロトコル の バグ を 修正 し た もの です 。 
Set - Cookie : の かわり に Set - Cookie 2 : を 使い ます が 、 普及 し て は い ませ ん 。 
RFC 2965 に対する 未完 の 正誤 表 です 。 
11 . 20 . 1 CookieJar および FileCookieJar オブジェクト 
この モジュール で は 汎用 の ( 浅い / 深い ) コピー 操作 を 提供 し て い ます 。 
以下 に インタフェース を まとめ ます : 
この モジュール 固有 の エラー に対して は 、 copy . error が 送出 さ れ ます 。 浅い ( shallow ) コピー と 深い ( deep ) コピー の 違い が 関係 する の は 、 複合 オブジェクト ( リスト や クラス インスタンス の よう な 他 の オブジェクト を 含む オブジェクト ) だけ です : 
浅い コピー ( shallow copy ) は 新た な 複合 オブジェクト を 作成 し 、 その後 ( 可能 な 限り ) 元 の オブジェクト 中 に 見つかっ た オブジェクト に対する 参照 を 挿入 し ます 。 
深い コピー ( deep copy ) は 新た な 複合 オブジェクト を 作成 し 、 その後 元 の オブジェクト 中 に 見つかっ た オブジェクト の コピー を 挿入 し ます 。 
深い コピー 操作 に は 、 しばしば 浅い コピー 操作 の 時 に は 存在 し ない 2 つ の 問題 が ついてまわり ます : 
再帰 的 な オブジェクト ( 直接 、 間接 に 関わら ず 、 自分 自身 に対する 参照 を 持つ 複合 オブジェクト ) は 再帰 ループ を 引き起こし ます 。 
深い コピー で は 、 何もかも を コピー する ため 、 例えば 複数 の コピー 間 で 共有 さ れる べき 管理 データ 構造 まで も 、 余分 に コピー し て しまい ます 。 
deepcopy () 関数 で は 、 これら の 問題 を 以下 の よう に し て 回避 し て い ます : 
現在 の コピー 過程 で すでに コピー さ れ た オブジェクト から なる 、 `` メモ '' 辞書 を 保持 し ます ; かつ 
ユーザ 定義 の クラス で コピー 操作 や コピー さ れる 内容 の 集合 を 上書き できる よう に し ます 。 
現在 の バージョン で は 、 モジュール 、 クラス 、 関数 、 メソッド 、 スタック 追跡 、 スタック 構造 、 ファイル 、 ソケット 、 ウィンドウ 、 アレイ 、 その他 これら に 類似 の 型 を コピー し ませ ん 。 クラス で は 、 pickle 化 を 制御 する ため の インタフェース と 同じ インタフェース を コピー の 制御 に 使う こと が でき ます 。 
これら の メソッド に関する 情報 は 
モジュール の 記述 を 参照 し て ください 。 
copy モジュール は pickle 用 関数 登録 モジュール 
copy _ reg を 使い ませ ん 。 
クラス 独自 の コピー 実装 を 定義 する ため に 、 特殊 メソッド __ copy __() および __ deepcopy __() を 定義 する こと が でき ます 。 
前者 は 浅い コピー 操作 を 実装 する ため に 使わ れ ます ; 追加 の 引数 は あり ませ ん 。 
後者 は 深い コピー 操作 を 実現 する ため に 呼び出さ れ ます ; この 関数 に は 単一 の 引数 として メモ 辞書 が 渡さ れ ます 。 
__ deepcopy __() の 実装 で 、 内容 の オブジェクト に対して 深い コピー を 生成 する 必要 が ある 場合 、 deepcopy () を 呼び出し 、 最初 の 引数 に その オブジェクト を 、 メモ 辞書 を 二つ 目 の 引数 に 与え なけれ ば なり ませ ん 。 
オブジェクト 状態 の 取得 と 復元 を サポート する ため に 使わ れる 特殊 メソッド について 議論 さ れ て い ます 。 . 
copy _ reg モジュール は 
と 
モジュール に対する サポート を 提供 し ます 。 
その 上 、 
モジュール は 将来 これ を つかう 可能 性 が 高い です 。 
クラス で ない オブジェクトコンストラクタ について の 設定 情報 を 提供 し ます 。 
この よう な コンス トラクタ は ファクトリ 関数 か 、 または クラス インスタンス でしょ う 。 
object を 有効 な コンス トラクタ で ある と 宣言 し ます 。 
object が 呼び出し 可能 で なけれ ば ( そして 、 それ ゆえ コンス トラクタ として 有効 で ない なら ば )、 TypeError を 発生 し ます 。 
function が 型 type の オブジェクト に対する `` リダクション '' 関数 として 使う こと を 宣言 し ます 。 
type は `` 標準 的 な '' クラス オブジェクト で あっ て は いけ ませ ん 。 
( 標準 的 な クラス は 異なっ た 扱わ れ 方 を し ます 。 詳細 は 、 
object が クラス で ある か 、 または constructor が 呼び出し 可能 で ない 場合 に 、 TypeError を 発生 し ます 。 function と constructor の 求め られる インター フェイス について の 詳細 は 、 
モジュール を 参照 し て ください 。 
この モジュール は DES アルゴリズム に 基づい た 一方 向 ハッシュ 関数 で ある 
ルーチン を 実装 し て い ます 。 
詳細 について は Unix マニュアル ページ を 参照 し て ください 。 
この モジュール は 、 Python スクリプト が ユーザ から 入力 さ れ た パスワード を 受理 できる よう に し たり 、 Unix パスワード に ( 脆弱 性 検査 の ため の ) 辞書 攻撃 を 試みる の に 使え ます 。 この モジュール は 実行 環境 の 
の 実装 に 依存 し て い ます 。 
その ため 、 現在 の 実装 で 利用 可能 な 拡張 を 、 この モジュール で も そのまま 利用 でき ます 。 
word は 通常 は ユーザ の パスワード で 、 プロンプト や グラフィカルインタフェース から タイプ 入力 さ れ ます 。 salt は 通常 ランダム な 2 文字 から なる 文字 列 で 、 DES アルゴリズム に 4096 通り の うち 1 つ の 方法 で 外乱 を 与える ため に 使わ れ ます 。 
salt に 使う 文字 は 集合 [./ a - zA - Z 0 - 9 ] の 要素 で なけれ ば なり ませ ん 。 
ハッシュ さ れ た パスワード を 文字 列 として 返し ます 。 パスワード 文字 列 は salt と 同じ 文字 集合 に 含ま れる 文字 から なり ます ( 最初 の 2 文字 は salt 自体 です ). いくつ か の 拡張 さ れ た 
は 異なる 値 と salt の 長 さ を 許し て いる ので 、 パスワード を チェック する 際 に は crypt さ れ た パスワード 文字 列 全体 を salt として 渡す よう 勧め ます 。 
典型 的 な 使用 例 の サンプル コード : 
CSV ( Comma Separated Values 、 カンマ 区切り 値 列 ) と 呼ば れる 形式 は 、 スプレッドシート や データベース 間 で の データ の イン ポート や エクスポート における 最も 一般 的 な 形式 です 。 
`` CSV 標準 '' は 存在 し ない ため 、 CSV 形式 は データ を 読み書き する 多く の アプリケーション 上 の 操作 に 応じ て 定義 さ れ て いる に すぎ ませ ん 。 
標準 が ない という こと は 、 異なる アプリケーション によって 生成 さ れ たり 取り込ま れ たり する データ 間 で は 、 しばしば 微妙 な 違い が 発生 する という こと を 意味 し ます 。 
こうした 違い の ため に 、 複数 の データ 源 から 得 られ た CSV ファイル を 処理 する 作業 が 鬱陶しい もの に なる こと が あり ます 。 
と は いえ 、 デリミタ ( delimiter ) や クオート 文字 の 相違 は あっ て も 、 全体 的 な 形式 は 十分 似通っ て いる ため 、 こうした データ を 効率 的 に 操作 し 、 データ の 読み書き における 細々 と し た こと を プログラマ から 隠蔽 する よう な 単一 の モジュール を 書く こと は 可能 です 。 csv モジュール で は 、 CSV 形式 で 書か れ た テーブル 状 の データ を 読み書き する ため の クラス を 実装 し て い ます 。 
この モジュール を 使う こと で 、 プログラマ は Excel で 使わ れ て いる CSV 形式 に関して 詳しい 知識 を もっ て い なく て も 、 `` この データ を Excel で 推奨 さ れ て いる 形式 で 書い て ください '' とか 、 `` データ を Excel で 作成 さ れ た この ファイル から 読み出し て ください '' と 言う こと が でき ます 。 
プログラマ は また 、 他 の アプリケーション が 解釈 できる CSV 形式 を 記述 し たり 、 独自 の 特殊 な 目的 を もっ た CSV 形式 を 定義 する こと が でき ます 。 csv モジュール の reader および writer オブジェクト は シーケンス 型 を 読み書き し ます 。 
プログラマ は DictReader や DictWriter クラス を 使う こと で 、 データ を 辞書 形式 で 読み書き する こと も でき ます 。 
注意 : この バージョン の csv モジュール は Unicode 入力 を サポート し て い ませ ん 。 
また 、 現在 の ところ 、 ASCII NUL 文字 に 関連 し た いくつ か の 問題 が あり ます 。 
従って 、 安全 を 期す に は 、 全て の 入力 を 一般 的 に は 印字 可能 な ASCII に し なけれ ば なり ませ ん 。 
これら の 制限 は 将来 取り去ら れる こと に なっ て い ます 。 
Python へ の この モジュール の 追加 を 提案 し て いる Python 改良 案 ( PEP : Python Enhancement Proposal ) 
6 . 18 curses . ascii -- ASCII 文字 に関する ユーティリティ 
6 . 汎用 オペレーティングシステム サービス 
6 . 18 curses . ascii -- ASCII 文字 に関する ユーティリティ 
バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
curses . ascii モジュール で は 、 ASCII 文字 を 指す 名前 定数 と 、 様々 な ASCII 文字 区分 について ある 文字 が 帰属 する か どう か を 調べる 関数 を 提供 し ます 。 
この モジュール で 提供 さ れ て いる 定数 は 以下 の 制御 文字 の 名前 です : 
NUL 空 
ヘディング 開始 、 コンソール 割り込み 
テキスト 開始 
テキスト 終了 
テキスト 伝送 終了 
問い合わせ 、 ACK フロー 制御 時 に 使用 
肯定 応答 
ベル 
一文字 後退 
タブ 
TAB の 別名 : `` 水平 タブ '' 
改行 
LF の 別名 : `` 改行 '' 
垂直 タブ 
改 頁 
復帰 
シフトアウト 、 他 の 文字 セット の 開始 
シフトイン 、 標準 の 文字 セット に 復帰 
データリンク で の エスケープ 
装置 制御 1 、 フロー 制御 の ため の XON 
装置 制御 2 、 ブロックモードフロー 制御 
装置 制御 3 、 フロー 制御 の ため の XOFF 
装置 制御 4 
否定 応答 
同期 信号 
ブロック 転送 終了 
キャンセル 
媒体 終端 
代入 文字 
エスケープ 文字 
ファイル 区切り 文字 
グループ 区切り 文字 
レコード 区切り 文字 、 ブロック モード 終了 子 
単位 区切り 文字 
空白 文字 
削除 
これら の 大 部分 は 、 最近 は 実際 に 定数 の 意味 通り に 使わ れる こと が ほとんど ない ので 注意 し て ください 。 
これら の ニーモニック 符号 は デジタル 計算 機 より 前 の テレプリンタ における 慣習 から 付け られ た もの です 。 この モジュール で は 、 標準 C ライブラリ の 関数 を 雛 型 と する 以下 の 関数 を サポート し て い ます : 
ASCII 英 数 文字 か どう か を 調べ ます ; " isalpha ( c ) or isdigit ( c )" と 等価 です 。 
ASCII アルファベット 文字 か どう か を 調べ ます ; " isupper ( c ) or islower ( c )" と 等価 です 。 
文字 が 7 ビット ASCII 文字 に 合致 する か どう か を 調べ ます 。 
ASCII 余白 文字 か どう か を 調べ ます 。 
ASCII 制御 文字 ( 0 x 00 から 0 x 1 f の 範囲 ) か どう か を 調べ ます 。 
ASCII 10 進 数字 、 すなわち " 0 " から " 9 " まで の 文字 か どう か を 調べ ます 。 
c in string . digits " と 等価 です 。 
空白 以外 の ASCII 印字 可能 文字 か どう か を 調べ ます 。 
ASCII 小文字 か どう か を 調べ ます 。 
空白 文字 を 含め 、 ASCII 印字 可能 文字 か どう か を 調べ ます 。 
空白 または 英数字 以外 の ASCII 印字 可能 文字 か どう か を 調べ ます 。 
ASCII 余白 文字 、 すなわち 空白 、 改行 、 復帰 、 改 頁 、 水平 タブ 、 垂直 タブ か どう か を 調べ ます 。 
ASCII 大文字 か どう か を 調べ ます 。 
ASCII 16 進 数字 か どう か を 調べ ます 。 
c in string . hexdigits " と 等価 です 。 
ASCII 制御 文字 ( 0 から 31 まで の 値 ) か どう か を 調べ ます 。 
非 ASCII 文字 ( 0 x 80 または それ 以上 の 値 ) か どう か を 調べ ます 。 
これら の 関数 は 数字 も 文字 列 も 使え ます ; 引数 を 文字 列 に し た 場合 、 組み込み 関数 ord () を 使っ て 変換 さ れ ます 。 これら の 関数 は 全て 、 関数 に 渡し た 文字 列 の 最初 の 文字 から 得 られ た ビット 値 を 調べる ので 注意 し て ください ; 関数 は ホスト 計算 機 で 使わ れ て いる 文字 列 エン コーディング について 何ら 関知 し ませ ん 。 
文字 列 エン コーディング について 関知 する ( そして 国際 化 に関する プロパティ を 正しく 扱う ) 関数 について は 、 モジュール 
を 参照 し て ください 。 以下 の 2 つ の 関数 は 、 引数 として 1 文字 の 文字 列 または 整数 で 表し た バイト 値 の どちら でも とり 得 ます ; これら の 関数 は 引数 と 同じ 型 で 値 を 返し ます 。 
ASCII 値 を 返し ます 。 c の 下位 7 ビット に 対応 し ます 。 
与え た 文字 に 対応 する 制御 文字 を 返し ます ( 0 x 1 f と ビット 単位 で 論理 積 を 取り ます ) 。 
与え た 文字 に 対応 する 8 ビット 文字 を 返し ます ( 0 x 80 と ビット 単位 で 論理 和 を 取り ます ) 。 
以下 の 関数 は 1 文字 から なる 文字 列 値 または 整数 値 を 引数 に 取り 、 文字 列 を 返し ます 。 
ASCII 文字 c の 文字 列 表現 を 返し ます 。 
もし c が 印字 可能 文字 で あれ ば 、 返さ れる 文字 列 は c そのもの に なり ます 。 
もし c が 制御 文字 ( 0 x 00 - 0 x 1 f ) で あれ ば 、 キャレット ("^") と 、 その 後ろ に 続く c に 対応 し た 大文字 から なる 文字 列 に なり ます 。 c が ASCII 削除 文字 ( 0 x 7 f ) で あれ ば 、 文字 列 は '^?' に なり ます 。 
c の メタ ビット ( 0 x 80 ) が セット さ れ て いれ ば 、 メタ ビット は 取り去ら れ 、 前述 の ルール が 適用 さ れ 、 "!" が 前 に つけ られ ます 。 
0 ( NUL ) から 0 x 1 f ( US ) まで の 32 の ASCII 制御 文字 と 、 空白 文字 " SP " の ニーモニック 符号 名 から なる 33 要素 の 文字 列 による シーケンス です 。 
バージョン 1 . 6 で 変更 さ れ た 仕様 : ncurses ライブラリ の サポート を 追加 し 、 パッケージ に 変換 し まし た 
curses モジュール は 、 可 搬性 の ある 端末 操作 を 行う ため の デファクトスタンダード で ある 、 curses ライブラリ へ の インタフェース を 提供 し ます 。 Unix 環境 で は curses は 非常 に 広く 用い られ て い ます が 、 DOS 、 OS 2 、 そして おそらく 他 の システム の バージョン も 利用 する こと が でき ます 。 
この 拡張 モジュール は Linux および BSD 系 の Unix で 動作 する オープン ソース の curses ライブラリ で ある ncurses の API に 合致 する よう に 設計 さ れ て い ます 。 
ロ ケール 設定 に 関わら ず ASCII 文字 を 扱う ため の ユーティリティ 。 
curses ウィンドウ に デプス 機能 を 追加 する パネル スタック 拡張 。 
Emacs ライク な キー バインディング を サポート する 編集 可能 な curses 用 テキストウィジェット 。 
アプリケーション の 起動 時 および 終了 時 に 適切 な 端末 の セットアップ と リセット を 確実 に 行う ため の 関数 。 . 
Andrew Kuchling および Eric Raymond によって 書か れ た 、 curses を Python で 使う ため の チュートリアル です 。 Python Web サイト で 入手 でき ます 。 
Python ソース コード の Demo / curses / ディレクトリ に は 、 この モジュール で 提供 さ れ て いる curses バインディング を 使っ た プログラム 例 が いくつ か 収め られ て い ます 。 
6 . 19 curses . panel -- curses の ため の パネル スタック 拡張 
6 . 19 . 1 関数 
パネル は 深 さ ( depth ) の 機能 が 追加 さ れ た ウィンドウ です 。 これ により 、 ウィンドウ を お互い に 重ね合わ せる こと が でき 、 各 ウィンドウ の 可視 部分 だけ が 表示 さ れ ます 。 
パネル は スタック 中 に 追加 し たり 、 スタック 内 で 上下 移動 さ せ たり 、 スタック から 除去 する こと が でき ます 。 
6 . 16 curses . textpad -- curses プログラム の ため の テキスト 入力 ウィジェット 
6 . 16 curses . textpad -- curses プログラム の ため の テキスト 入力 ウィジェット 
curses . textpad モジュール で は 、 curses ウィンドウ 内 で の 基本 的 な テキスト 編集 を 処理 し 、 Emacs に 似 た ( すなわち Netscape Navigator , BBedit 6 . x , FrameMaker , その他 諸々 の プログラム と も 似 た ) キーバインド を サポート し て いる Textbox クラス を 提供 し ます 。 
この モジュール で は また 、 テキスト ボックス を 枠 で 囲む など の 目的 の ため に 有用 な 、 矩形 描画 関数 を 提供 し て い ます 。 
curses . textpad モジュール で は 以下 の 関数 を 定義 し て い ます : 
矩形 を 描画 し ます 。 
最初 の 引数 は ウィンドウ オブジェクト で なけれ ば なり ませ ん ; 残り の 引数 は その ウィンドウ から の 相対 座標 に なり ます 。 
2 番目 および 3 番目 の 引数 は 描画 す べき 矩形 の 左上 角 の y および x 座標 です ; 4 番目 および 5 番目 の 引数 は 右 下角 の y および x 座標 です 。 矩形 は 、 VT 100 / IBM PC における フォーム 文字 を 利用 できる 端末 ( xterm や その他 の ほとんど の ソフトウェア 端末 エミュレータ を 含む ) で は それ を 使っ て 描画 さ れ ます 。 
そう で なけれ ば ASCII 文字 の ダッシュ 、 垂直 バー 、 および プラス 記号 で 描画 さ れ ます 。 
6 . 17 curses . wrapper -- curses プログラム の ため の 端末 ハンドラ 
6 . 17 curses . wrapper -- curses プログラム の ため の 端末 ハンドラ 
この モジュール で は 関数 wrapper () 一つ を 提供 し て い ます 。 これ は curses 使用 アプリケーション の 残り の 部分 と なる もう 一つ の 関数 です 。 
アプリケーション が 例外 を 送出 し た 場合 、 wrapper () は 例外 を 再 送出 し て トレース バック を 生成 する 前 に 端末 を 正常 な 状態 に 復元 し ます 。 
フック 関数 を 呼び出す 前 に 、 wrapper () は cbreak モード を オン 、 エコー を オフ に し 、 端末 キー パッド を 有効 に し ます 。 端末 が カラー を サポート し て いる 場合 に は カラー を 初期 化 し ます 。 
( 通常 終了 も 例外 による 終了 も ) 終了 時 に は cooked モード に 復元 し 、 エコー を オン に し 、 端末 キー パッド を 無効 化 し ます 。 
datetime モジュール で は 、 日付 や 時間 データ を 簡単 な 方法 と 複雑 な 方法 の 両方 で 操作 する ため の クラス を 提供 し て い ます 。 
特定 の 数字 が メートル か 、 マイル か 、 質量 を 表す か といった こと が プログラム の 問題 で ある よう に 、 naive な datetime オブジェクト が 標準 世界 時 ( UTC : CoordinatedUniversal time ) を 表現 する か 、 ローカル の 時刻 を 表現 する か 、 あり は 他 の いずれ か の タイム ゾーン における 時刻 を 表現 する か は 純粋 に プログラム の 問題 と なり ます 。 
tzinfo オブジェクト は UTC 時刻 から の オフセット 、 タイム ゾーン 名 、 夏時間 が 有効 に なっ て いる か どう か 、 といった 情報 を 記憶 し て い ます 。 
datetime モジュール で は 具体 的 な tsinfo クラス を 提供 し て い ない ので 注意 し て ください 。 
必要 な 詳細 仕様 を 備え た タイム ゾーン 機能 を 提供 する の は アプリケーション の 責任 です 。 
世界 各国 における 時刻 の 修正 に関する 法則 は 合理 的 と いう より も 政治 的 な もの で あり 、 全て の アプリケーション に 適し た 標準 という もの が 存在 し ない の です 。 datetime モジュール で は 以下 の 定数 を 公開 し て い ます : 
date や datetime オブジェクト で 許さ れ て いる 、 年 を 表現 する 最小 の 数字 です 。 
MINYEAR は 1 です 。 
date や datetime オブジェクト で 許さ れ て いる 、 年 を 表現 する 最大 の 数字 です 。 
MAXYEAR は 9999 です 。 
汎用 の カレンダー 関連 関数 。 
時刻 へ の アクセス と 変換 。 
dbhash モジュール で は BSD db ライブラリ を 使っ て データベース を 開く ため の 関数 を 提供 し ます 。 
この モジュール は 、 DBM 形式 の データベース へ の アクセス を 提供 する 他 の Python データベース モジュール の インタフェース を そのまま 反映 し て い ます 。 
dbhash を 使う に は 
モジュール が 必要 です 。 この モジュール で は 一つ の 例外 と 一つ の 関数 を 提供 し て い ます : 
KeyError 以外 の データベース の エラー で 送出 さ れ ます 。 
bsddb . error と 同じ 意味 です 。 
データベース db を 開き 、 データベース オブジェクト を 返し ます 。 
オプション の mode 引数 は 、 新た に データベース を 作成 し なけれ ば なら ない とき に データベース ファイル に 設定 す べき Unix ファイル 権限 ビット を 表す ため に 使わ れ ます ; この 値 は プロセス の 現在 の umask 値 で マスク さ れ ます 。 
dbm 形式 の データベース へ の 汎用 インタフェース 。 
BSD db ライブラリ へ の 低 レベル インタフェース 。 
既存 の データベース が どの 形式 の データベース か 判定 する ユーティリティ モジュール 。 
dbm モジュール は Unix ( n ) dbm インタフェース の ライブラリ を 提供 し ます 。 dbm オブジェクト は 、 キー と 値 が 必ず 文字 列 で ある 以外 は 辞書 オブジェクト の よう な ふるまい を し ます 。 
I / O エラー の よう な dbm 特有 の エラー が 起っ た とき に 上げ られる 値 です 。 また 、 正しく ない キー が 与え られ た 場合 に 通常 の マッピング エラー の よう な KeyError が 上げ られ ます 。 
ndbm が 使用 し て いる 実装 ライブラリ 名 です 。 
dbm データベース を 開い て dbm オブジェクト を 返し ます 。 
存在 する データベース を 読取り 専用 で 開き ます 。 
( デフォルト ) ' w ' 
存在 する データベース を 読み書き 可能 な 状態 で 開き ます 。 
データベース を 読み書き 可能 な 状態 で 開き ます 。 
また 、 データベース が 存在 し ない 場合 は 新た に 作成 し ます 。 ' n ' 
デフォルト で は 8 進数 の 0666 です 
dbm スタイル の 一般 的 な インタフェース . 
GNU GDBM ライブラリ の 類似 し た インタフェース . 
存在 し て いる データベース の 形式 を 決める ため の ユーティリティ モジュール . 
decimal モジュール は 10 進 の 浮動 小数点 算術 を サポート し ます 。 
decimal に は 、 float () データ 型 に 比べ て 、 以下 の よう な 利点 が あり ます : 
10 進数 を 正確 に 表現 でき ます 。 
1 . 1 の よう な 数 は 、 2 進数 の 浮動 小数点 型 で は 正しく 表現 でき ませ ん 。 エンド ユーザ は 普通 、 2 進数 における 1 . 1 の 近似 値 が 1 . 1000000000000001 だ から と いっ て 、 その よう に 表示 し て ほしい と は 考え ない もの です 。 
値 の 正確 さ は 算術 に も 及び ます 。 
10 進 の 浮動 小数点 による 計算 で は 、 " 0 . 1 + 0 . 1 + 0 . 1 - 0 . 3 " は 厳密 に ゼロ に 等しく なり ます 。 
2 進 浮動 小数点 で は 5 . 5511151231257827 e - 017 に なっ て しまい ます 。 
decimal モジュール で は 、 有効 桁 数 の 表記 が 取り入れ られ て おり 、 例えば " 1 . 30 + 1 . 20 " は 2 . 50 に なり ます 。 
すなわち 、 末尾 の ゼロ は 有効 数字 を 示す ため に 残さ れ ます 。 
こうした 仕様 は 通貨 計算 を 行う アプリケーション で は 慣例 です 。 
乗算 の 場合 、 「 教科書 的 な 」 アプローチ で は 、 乗算 の 被 演算 子 すべて の 桁 数 を 使い ます 。 
例えば 、 " 1 . 3 * 1 . 2 " は 1 . 56 に なり 、 " 1 . 30 * 1 . 20 " は 1 . 5600 に なり ます 。 
ハードウェア による 2 進 浮動 小数点 表現 と 違い 、 decimal モジュール で は 計算 精度 を ユーザ が 指定 でき ます ( デフォルト で は 28 桁 です )。 この 桁 数 は ほとんど の 問題 解決 に 十分 な 大き さ です : 
2 進 と 10 進 の 浮動 小数点 は 、 いずれ も 広く 公開 さ れ て いる 標準 仕様 の もと に 実装 さ れ て い ます 。 
組み込み の 浮動 小数点 型 で は 、 標準 仕様 で 提唱 さ れ て いる 機能 の ほんの ささやか な 部分 を 利用 できる に すぎ ませ ん が 、 decimal で は 標準 仕様 が 要求 し て いる 全て の 機能 を 利用 でき ます 。 必要 に 応じ て 、 プログラマ は 値 の 丸め や シグナル 処理 を 完全 に 制御 でき ます 。 
この モジュール は 、 10 進数 型 、 算術 コンテキスト ( context for arithmetic )、 そして シグナル ( signal ) という 三つ の 概念 を 中心 に 設計 さ れ て い ます 、 10 進数 型 は 変更 不可能 な 型 です 。 
この 型 に は 符号 部 、 仮数 部 、 そして 指数 部 が あり ます 。 
有効 桁 数 を 残す ため に 、 仮数 部 の 末尾 に ある ゼロ の 切り 詰め は 行わ れ ませ ん 。 
decimal で は 、 Infinity , - Infinity , および NaN といった 特殊 な 値 も 定義 さ れ て い ます 。 
丸め 規則 に は ROUND _ CEILING , ROUND _ DOWN , ROUND _ FLOOR , ROUND _ HALF _ DOWN , ROUND _ HALF _ EVEN , ROUND _ HALF _ UP , および ROUND _ UP が あり ます 。 シグナル と は 、 演算 の 過程 で 生じる 例外 的 条件 です 。 
個々 の シグナル は 、 アプリケーション それぞれ の 要求 に従って 、 無視 さ れ たり 、 単なる 情報 と みなさ れ たり 、 例外 として 扱わ れ たり し ます 。 
decimal モジュール に は 、 Clamped , InvalidOperation , DivisionByZero , Inexact , Rounded , Subnormal , Overflow , および Underflow といった シグナル が あり ます 。 各 シグナル に は 、 フラグ と トラップイネーブラ が あり ます 。 
演算 上 何らかの シグナル に 遭遇 する と 、 フラグ は ゼロ から インクリメント さ れ て ゆき ます 。 この とき 、 もし トラップイネーブラ が 1 に セット さ れ て いれ ば 、 例外 を 送出 し ます 。 
フラグ の 値 は 膠着 型 ( sticky ) な ので 、 演算 による フラグ の 変化 を モニタ し たけれ ば 、 予め フラグ を リセット し て おか ね ば なり ませ ん 。 
IBM による 汎用 10 進 演算 仕様 、 
IEEE 標準 化 仕様 854 - 1987 , 
IEEE 854 に関する 非公式 の テキスト 
。 
柔軟 性 の ある クラス で 、 ハッシュ 化 できる 要素 の 連続 で あれ ば 、 どんな 型 の もの で あっ て も 比較 可能 です 。 
基礎 的 な アルゴリズム は 可塑 的 な もの で あり 、 1980 年代 の 後半 に 発表 さ れ た Ratcliff と Obershelp による アルゴリズム 、 大げさ に 名づけ られ た `` ゲシュタルト パターンマッチング '' より は もう少し 良 さ そう な もの です 。 その 考え方 は 、 `` junk '' 要素 を 含ま ない 最も 長い マッチ 列 を 探す こと です ( Ratcliff と Obershelp の アルゴリズム で は junk を 示し ませ ん )。 
この アイデア は 、 下位 の マッチ 列 から 左 または 右 に 伸びる 列 の 断片 に対して 再帰 的 に あてはまり ます 。 
これ は 小さな 文字 列 に対して 効率 良い もの で は あり ませ ん が 、 人間 の 目 から み て 「 良く 見える 」 よう に マッチ する 傾向 が あり ます 。 
タイミング : 基本 的 な Ratcliff - Obershelp アルゴリズム は 、 予想 の 3 乗 、 最悪 の 場合 でも 2 乗 と なり ます 。 SequenceMatcher オブジェクト は 、 最悪 の ケース に 比べ て 4 倍 、 予想 さ れる 挙動 は 、 シーケンス の 中 に どの くらい の 要素 が ある の か ( 最良 な の は 一 列 の 場合 )、 という ややこしい 状況 に 依存 し て い ます 。 
テキスト 行 から なる シーケンス を 比較 する クラス です 。 
コード 
列 は 文字 列 1 に のみ 存在 する 
列 は 文字 列 2 に のみ 存在 する 
列 は 両方 の 文字 列 で 同一 
列 は 入力 文字 列 の どちら に も 存在 し ない 
'? ' で 始まる 列 は 線 内 の 差異 に 注意 を 向けよ う と し ます 。 その 差異 は 、 入力 さ れ た シーケンス の どちら に も 存在 し ませ ん 。 
シーケンス が タブ 文字 を 含む とき 、 これら の ライン は 判別 し づらい もの に なる こと が あり ます 。 
この クラス は 、 二つ の テキスト を 左右 に 並べ て 比較 表示 し 、 行間 あるいは 行内 の 変更 点 を 強調 表示 する よう な HTML テーブル ( または テーブル の 入っ た 完全 な HTML ファイル ) を 生成 する ため に 使い ます 。 
テーブル は 完全 差分 モード 、 コンテキスト 差分 モード の いずれ でも 生成 でき ます 。 この クラス の コンス トラクタ は 以下 の よう に なっ て い ます : 
HtmlDiff の インスタンス を 初期 化 し ます 。 
tabsize は オプション の キーワード 引数 で 、 タブ ストップ 幅 を 指定 し ます 。 デフォルト は 8 です 。 
wrapcolumn は オプション の キーワード 引数 で 、 テキスト を 折り返す カラム 幅 を 指定 し ます 。 デフォルト は None で 折り返し を 行い ませ ん 。 
linejunk および charjunk は オプション の キーワード 引数 で 、 ndiff () ( HtmlDiff は この 関数 を 使っ て 左右 の テキスト の 差分 を HTML で 生成 し ます ) に 渡さ れ ます 。 
それぞれ の 引数 の デフォルト 値 および 説明 は ndiff () の ドキュメント を 参照 し て ください 。 
以下 の メソッド が public に なっ て い ます : 
fromlines と tolines ( いずれ も 文字 列 の リスト ) を 比較 し 、 行間 または 行内 の 変更 点 が 強調 表示 さ れ た 行 差分 の 入っ た 表 を 持つ 完全 な HTML ファイル を 文字 列 で 返し ます 。 
fromdesc および todesc は オプション の キーワード 引数 で 、 差分 表示 テーブル における それぞれ 差分 元 、 差分 先 ファイル の カラム の ヘッダ に なる 文字 列 を 指定 し ます ( いずれ も デフォルト 値 は 空文字 列 です )。 
context および numlines は ともに オプション の キーワード 引数 です 。 contest を True に する と コンテキスト 差分 を 表示 し 、 デフォルト の False に する と 完全 な ファイル 差分 を 表示 し ます 。 
context が False の 場合 、 numlines は " next " と 書か れ た ハイパーリンク を たどっ た 時 に 到達 する 場所 が 次 の 変更 部分 より 何 行 前 に ある か を 制御 し ます ( 値 を ゼロ に し た 場合 、 " next " ハイパーリンク を 辿る と 変更 部分 の 強調 表示 が ブラウザ の 最 上部 に 表示 さ れる よう に なり ます )。 
fromlines と tolines ( いずれ も 文字 列 の リスト ) を 比較 し 、 行間 または 行内 の 変更 点 が 強調 表示 さ れ た 行 差分 の 入っ た 完全 な HTML テーブル を 文字 列 で 返し ます 。 この メソッド の 引数 は 、 make _ file () メソッド の 引数 と 同じ です 。 
Tools / scripts / diff . py は この クラス へ の コマンドラインフロントエンド で 、 使い方 を 学ぶ 上 で 格好 の 例題 が 入っ て い ます 。 
a と b ( 文字 列 の リスト ) を 比較 し 、 差異 ( 差異 の ある 行 を 生成 する ジェネレータ ) を 、 diff の コンテクスト 形式 で 返し ます 。 コンテクスト 形式 は 、 変更 が あっ た 行 に 前後 数行 を 加え て ある 、 コンパクト な 表現 方法 です 。 
変更 箇所 は 、 変更 前 / 変更 後 に 分け て 表し ます 。 
行末 に 改行 文字 を 持た ない 入力 に対して は 、 出力 で も 改行 文字 を 付加 し ない よう に lineterm 引数 に "" を 渡し て ください 。 diff コンテクスト 形式 は 、 通常 、 ヘッダ に ファイル 名 と 変更 時刻 を 持っ て い ます 。 
この 情報 は 、 文字 列 fromfile 、 tofile 、 fromfiledate 、 tofiledate で 指定 でき ます 。 変更 時刻 の 書式 は 、 通常 、 time . ctime () の 戻り 値 と 同じ もの を 使い ます 。 
指定 し なかっ た 場合 の デフォルト 値 は 、 空文字 列 です 。 
Tools / scripts / diff . py は 、 この 関数 の コマンド ライン の フロント エンド ( インター フェイス ) に なっ て い ます 。 
possibilities は word に マッチ さ せる ( 一般 的 に は 文字 列 ) シーケンス の リスト です 。 
可能 性 の ある 、 ( 少なくとも n に 比べ て ) 最も よい マッチ は リスト によって 返さ れ 、 同一 性 を 表す 数値 に 応じ て 最も 近い もの から 順に 格納 さ れ ます 。 
a と b ( 文字 列 から なる リスト ) を 比較 し 、 Differ オブジェクト 形式 の 差異 ( 解析 器 は 差異 の ある 列 ) を 返し ます 。 オプション の パラメータ linejunk と charjunk は 、 filter 機能 の ため の キーワード です ( 使わ ない とき は 空 に する )。 
linejunk : string 型 の 引数 ひとつ を 受け取る 関数 で 、 文字 列 が junk か 否 か によって true を ( 違う とき に は true を ) 返し ます 。 Python 2 . 3 以降 、 デフォルト で は ( None ) に なり ます 。 
charjunk : 長 さ 1 の 文字 を 受け取る 関数 です 。 デフォルト で は 、 モジュール レ べ ル の 関数 IS _ CHARACTER _ JUNK () で あり 、 これ は 空白 文字 列 ( 空白 または タブ 、 注 : 改行 文字 を これ に 含める の は 悪い アイデア !) を フィルタ リング し ます 。 
Tools / scripts / ndiff . py は 、 この 関数 の コマンド ライン の フロント エンド ( インター フェイス ) です 。 
差異 を 生成 し た シーケンス の ひとつ を 返し ます 。 
与え られる sequence は Differ . compare () または ndiff () によって 生成 さ れ 、 ファイル 1 または 2 ( 引数 which で 指定 さ れる ) によって 元 の 列 に 復元 さ れ 、 行頭 の プレフィクス が 取り のぞか れ ます 。 
例 : diff = ndiff (' one \ ntwo \ nthree \ n '. splitlines ( 1 ),... ' ore \ ntree \ nemu \ n '. splitlines ( 1 )) diff = list ( diff ) # materialize the generated delta into a list print ''. join ( restore ( diff , 1 )), onetwothree print ''. join ( restore ( diff , 2 )), oretreeemu 
a と b ( 共 に 文字 列 の リスト ) を 比較 し 、 diff の unified 形式 で 、 差異 ( 差分 行 を 生成 する ジェネレータ ) を 返し ます 。 unified 形式 は 変更 が あっ た 行 に 前後 数行 を 加え た 、 コンパクト な 表現 方法 です 。 
変更 箇所 は ( 変更 前 / 変更 後 を 分離 し た ブロック で は なく ) インライン ・ スタイル で 表さ れ ます 。 
行末 に 改行 文字 を 持た ない 入力 に は 、 出力 も 同じ よう に 改行 なし に なる よう に 、 lineterm 引数 を "" に セット し て ください diff コンテクスト 形式 は 、 通常 、 ヘッダ に ファイル 名 と 変更 時刻 を 持っ て い ます 。 
Tools / scripts / diff . py は 、 この 関数 の コマンド ライン の フロント エンド ( インター フェイス ) です 。 
無視 できる 列 の とき true を 返し ます 。 
列 line が 空白 、 または "#"" ひとつ の とき に は 無視 でき ます 。 それ 以外 の 時 に は 無視 でき ませ ん 。 
ndiff () の 引数 linkjunk として デフォルト で 使用 さ れ ます 。 ndiff () の linejunk は Python 2 . 3 以前 の もの です 。 
無視 できる 文字 の とき true を 返し ます 。 
文字 ch が 空白 、 または タブ 文字 の とき に は 無視 でき ます 。 それ 以外 の 時 に は 無視 でき ませ ん 。 
ndiff () の 引数 charjunk として デフォルト で 使用 さ れ ます 。 
Pattern Matching : The Gestalt Approach ( パターンマッチング : 全体 アプローチ ) 
John W . Ratcliff と D . E . Metzener による 同一 性 アルゴリズム に関する 議論 。 
1988 年 7 月 号 掲載 。 
os . listdir () によって 得 た path の ディレクトリ 一覧 を 返し ます 。 
path を 変え ない 限り 、 以降 の listdir () を 呼び出し て も ディレクトリ 構造 を 読み込み なおす こと は し ない ので 注意 し て ください 。 
返さ れる リスト は 読み出し 専用 で ある と 見なさ れる ので 注意 し て ください ( おそらく 将来 の バージョン で は タプル を 返す よう に 変更 さ れる はず ? です )。 
listdir () と 同じ です 。 
以前 の バージョン と の 互換 性 の ため に 定義 さ れ て い ます 。 
list を head の 相対 パス から なる リスト として 、 各 パス が ディレクトリ を 指す 場合 に は "/" を パス 名 の 後ろ に 追加 し た もの に 置き換え ます 。 
18 . 10 . 1 Python バイト コード 命令 
dis モジュール は Python バイト コード を 逆 アセンブル し て バイト コード の 解析 を 助け ます 。 
Python アセンブラ が ない ため 、 この モジュール が Python アセンブリ 言語 を 定義 し て い ます 。 
この モジュール が 入力 として 受け取る Python バイト コード は ファイル Include / opcode . h に 定義 さ れ て おり 、 コンパイラ と インタプリタ が 使用 し て い ます 。 例 : 関数 myfunc を 考える と : 
次 の コマンド を myfunc () の 逆 アセンブリ を 得る ため に 使う こと が でき ます : 
(`` 2 '' は 行 番号 です )。 dis モジュール は 次 の 関数 と 定数 を 定義 し ます : 
bytesource オブジェクト を 逆 アセンブル し ます 。 
bytesource は モジュール 、 クラス 、 関数 、 あるいは コード オブジェクト の いずれ か を 示し ます 。 
モジュール に対して は 、 すべて の 関数 を 逆 アセンブル し ます 。 
クラス に対して は 、 すべて の メソッド を 逆 アセンブル し ます 。 
単一 の コード シーケンス に対して は 、 バイト コード 命令 ごと に 一行 を プリント し ます 。 
オブジェクト が 与え られ ない 場合 は 、 最後 の トレース バック を 逆 アセンブル し ます 。 
トレース バック の スタック の 先頭 の 関数 を 逆 アセンブル し ます 。 None が 渡さ れ た 場合 は 最後 の トレース バック を 使い ます 。 
例外 を 引き起こし た 命令 が 表示 さ れ ます 。 
コード オブジェクト を 逆 アセンブル し ます 。 lasti が 与え られ た 場合 は 、 最後 の 命令 を 示し ます 。 
出力 は 次 の よう な カラム に 分割 さ れ ます : 
各行 の 最初 の 命令 に対する 行 番号 。 
現在 の 命令 。 "-" として 示さ れ ます 。 
命令 の アドレス 。 
演算 コード 名 。 
演算 パラメータ 。 
括弧 の 中 の パラメータ の インタプリテーション 。 
パラメータインタープリテーション は ローカル および グルーバル 変数 名 、 定数 値 、 分岐 目標 、 そして 比較 演算 子 を 認識 し ます 。 
disassemble の 別名 。 
より タイプ し やすく 、 以前 の Python リリース と 互換 性 が あり ます 。 
演算 名 。 一連 の バイト コード を 使っ て インデキシング でき ます 。 
すべて の 比較 演算 名 。 
定数 腹 メータ を 持つ 一連 の バイト コード 。 
自由 変数 に アクセス する 一連 の バイト コード 。 
名前 によって 属性 に アクセス する 一連 の バイト コード 。 
相対 ジャンプ ターゲット を もつ 一連 の バイト コード 。 
絶対 ジャンプ ターゲット を もつ 一連 の バイト コード 。 
ローカル 変数 に アクセス する 一連 の バイト コード 。 
ブール 演算 の 一連 の バイト コード 。 
18 . 10 . 1 Python バイト コード 命令 
この モジュール は アーカイブ ファイル ( tar や zip ) を 作成 する 関数 を 提供 し ます 。 
アーカイブ ファイル ( 例 : zip や tar ) を 作成 し ます 。 
base _ name は 作成 する ファイル 名 から フォーマット の 拡張 子 を 除い た もの です 。 format は アーカイブ の フォーマット で zip 、 tar 、 ztar 、 gztar の いずれ か です 。 
アーカイブ ファイル 名 を 返し ます 。 
警告 : この 関数 は bz 2 ファイル を 扱える よう に 変更 さ れる べき です 
base _ dir 以下 の 全 ファイル から 、 tar ファイル を 作成 ( オプション で 圧縮 ) し ます 。 compress は ' gzip '、' compress '、' bzip 2 '、 または None で ある 必要 が あり ます 。 
' tar ' と 圧縮 ユーティリティ ' compress ' に は パス が 通っ て いる 必要 が ある ので 、 これ は おそらく Unix だけ で 有効 です 。 
出力 tar ファイル は 
base _ dir . tar という 名前 に なり 、 圧縮 によって 拡張 子 が つき ます (. gz 、 . bz 2 または . Z )。 
出力 ファイル 名 が 返り ます 。 
警告 : これ は tarfile モジュール の 呼び出し に 置換 さ れる べき です 。 
base _ dir 以下 の 全 ファイル から 、 zip ファイル を 作成 し ます 。 
出力 さ れる zip ファイル は base _ dir + . zip という 名前 に なり ます 。 
zipfilePython モジュール ( 利用 可能 なら ) または InfoZIP zip ユーティリティ ( インストール さ れ て い て パス が 通っ て いる なら ) を 使い ます 。 
もし どちら も 利用 でき なけれ ば 、 DistutilsExecError が 起き ます 。 
出力 zip ファイル 名 が 返り ます 。 
この モジュール は BorlandCCompiler クラス を 提供 し ます 。 抽象 クラス CCompiler の 具象 クラス で Borland C ++ コンパイラ 向け です 。 
この モジュール は CCompiler クラス の 抽象 ベース クラス を 提供 し ます 。 
CCompiler の インスタンス は プロジェクト における 全て の コンパイル および リンク に 使わ れ ます 。 
コンパイラ の オプション を 設定 する ため の メソッド が 提供 さ れ ます -- マクロ 定義 、 include ディレクトリ 、 リンク パス 、 ライブラリ など 。 この モジュール は 以下 の 関数 を 提供 し ます 。 
ライブラリ を 探索 する ディレクトリ 、 特定 の ライブラリ と の リンク を する ため の リンカ オプション を 生成 し ます 。 libraries と library _ dirs は それぞれ ライブラリ 名 ( ファイル 名 で は あり ませ ん !) の リスト と 、 探索 ディレクトリ の リスト です 。 
compiler で 利用 できる コマンドラインオプション の リスト ( 指定 さ れ た フォーマット 文字 列 に 依存 し ます ) を 返し ます 。 
Unix の コンパイラ と 、 Visual C ++ で 利用 できる コマンドラインオプション の リスト を 返し ます 。 
指定 さ れ た プラットフォーム の デフォルト コンパイラ を 返し ます 。 
問い合わせ の osname は Python 標準 の OS 名 ( os . name で 返さ れる もの ) の ひとつ で ある べき で 、 platform は sys . platform で 返さ れる 共通 の 値 です 。 
パラメータ が 指定 さ れ て い ない 場合 の デフォルト 値 は os . name と sys . platform です 。 
指定 さ れ た プラットフォーム / コンパイラ の 組み合わせ 向け に 、 CCompiler サブ クラス の インスタンス を 生成 する ファクトリ 関数 です 。 
plat の デフォルト 値 は os . name ( 例 : ' posix ', ' nt '), compiler )、 compiler の デフォルト 値 は プラトフォーム の デフォルト コンパイラ です 。 
現在 は ' posix ' と ' nt ' だけ が サポート さ れ て い ます 、 デフォルト の コンパイラ は `` traditional Unix interface ''( UnixCCompiler クラス ) と 、 Visual C ++( MSVCCompiler クラス ) です 。 
Windows で Unix コンパイラ オブジェクト を 要求 する こと も 、 Unix で Microsoft コンパイラ オブジェクト を 要求 する こと も 可能 です 。 compiler 引数 を 与える と plat は 無視 さ れ ます 。 
利用 可能 な コンパイラ の リスト を 表示 し ます ( build , build _ ext , build _ clib の 、 -- help - compiler オプション で 使わ れ ます 。 
) クラス CCompiler 
抽象 ベース クラス CCompiler は 実際 の コンパイラ クラス で 実装 さ れる 必要 の ある インタフェース を 定義 し て い ます 。 
この クラス は コンパイラ クラス で 利用 さ れる ユーティリティ メソッド も 定義 し て い ます 。 コンパイラ 抽象 クラス の 基本 的 な 前提 は 、 各 インスタンス は ある プロジェクト を ビルド する とき の 全 コンパイル / リンク で 利用 できる という こと です 。 
そこで 、 コンパイル と リンク ステップ で 共通 する 属性 -- インクルードディレクトリ 、 マクロ 定義 、 リンク する ライブラリ など -- は コンパイラ インスタンス の 属性 に なり ます 。 
フラグ は verbose ( 冗長 な 出力 を 表示 し ます )、 dry _ run ( 実際 に は その ステップ を 実行 し ませ ん )、 そして force ( 依存 関係 を 無視 し て 全て 再 ビルド し ます ) です 。 
これら の フラグ は 全て デフォルト 値 が 0 ( 無効 ) に なっ て い ます 。 
CCompiler または サブ クラス を 直接 インスタンス 化 し たく ない 場合 に は 、 かわり に distutils . CCompiler . new _ compiler () ファクトリ 関数 を 利用 し て ください 。 以下 の メソッド で 、 Compiler クラス の インスタンス が 使う コンパイラ オプション を 手動 で 変更 でき ます 。 
dir を ヘッダ ファイル 探索 ディレクトリ の リスト に 追加 し ます 。 
コンパイラ は add _ include _ dir () を 呼び出し た 順 に ディレクトリ を 探索 する よう 指定 さ れ ます 。 
探索 さ れる ディレクトリ の リスト を dirs ( 文字 列 の リスト ) に 設定 し ます 。 
先 に 実行 さ れ た add _ include _ dir () は 上書き さ れ ます 。 後で 実行 する add _ include _ dir () は set _ include _ dirs () の リスト に ディレクトリ を 追加 し ます 。 
これ は コンパイラ が デフォルト で 探索 する 標準 インクルードディレクトリ に は 影響 し ませ ん 。 
libname を コンパイラ オブジェクト による リンク 時 に 使わ れる ライブラリ の リスト に 追加 し ます 。 
libname は ライブラリ を 含む ファイル 名 で は なく 、 ライブラリ そのもの の 名前 です : 実際 の ファイル 名 は リンカ 、 コンパイラ 、 または コンパイラ クラス ( プラットフォーム に 依存 し ます ) から 推測 さ れ ます 。 リンカ は add _ library () と set _ library () で 渡さ れ た 順 に ライブラリ を リンク しよ う と し ます 。 
ライブラリ 名 が 重なる こと は 問題 あり ませ ん 。 リンカ は 指定 さ れ た 回数 だけ ライブラリ と リンク しよ う と し ます 。 
コンパイラ オブジェクト による リンク 時 に 使わ れる ライブラリ の リスト を libnames ( 文字 列 の リスト ) に 設定 し ます 。 
これ は リンカ が デフォルト で リンク する 標準 の システム ライブラリ に は 影響 し ませ ん 。 
add _ library () と set _ libraries () で 指定 さ れ た ライブラリ を 探索 する ディレクトリ の リスト に dir を 追加 し ます 。 
リンカ は add _ library _ dir () と set _ library _ dirs () で 指定 さ れ た 順 に ディレクトリ を 探索 さ れ ます 。 
ライブラリ を 探索 する ディレクトリ を dirs ( 文字 列 の リスト ) に 設定 し ます 。 
これ は リンカ が デフォルト で 探索 する 標準 ライブラリ 探索 パス に は 影響 し ませ ん 。 
実行 時 に 共有 ライブラリ を 探索 する ディレクトリ の リスト に dir を 追加 し ます 。 
実行 時 に 共有 ライブラリ を 探索 する ディレクトリ の リスト を dir に 設定 し ます 。 
これ は ランタイムリンカ が デフォルト で 利用 する 標準 探索 パス に は 影響 し ませ ん 。 
この コンパイラ オブジェクト で 実行 さ れる 全て の コンパイル で 利用 さ れる プリプロセッサ の マクロ を 定義 し ます 。 
この コンパイラ オブジェクト で 実行 さ れる 全て の コンパイル で 利用 さ れる プリプロセッサ の マクロ 定義 を 消し ます 。 
同じ マクロ を define _ macro () で 定義 し 、 undefine _ macro () で 定義 を 削除 し た 場合 、 後で 呼び出さ れ た もの が 優先 さ れる ( 複数 の 再 定義 と 削除 を 含み ます )。 
もし コンパイル ごと ( すなわち compile () の 呼び出し ごと ) に マクロ が 再 定義 / 削除 さ れる 場合 も 後で 呼び出さ れ た もの が 優先 さ れ ます 。 
この コンパイラ オブジェクト による 全て の リンク で 利用 さ れる オブジェクト ファイル ( または 類似 の ライブラリ ファイル や `` リソース コンパイラ '' の 出力 ) の リスト に object を 追加 し ます 。 
この コンパイラ オブジェクト による 全て の リンク で 利用 さ れる オブジェクト ファイル ( または 類似 の もの ) の リスト を objects に 設定 し ます 。 
これ は リンカ が デフォルト 利用 する 標準 オブジェクト ファイル ( システム ライブラリ など ) に は 影響 し ませ ん 。 
以下 の メソッド は コンパイラ オプション の 自動 検出 を 実装 し て おり 、 GNU autoconf に 似 た いくつ か の 機能 を 提供 し ます 。 
与え られ た ファイル または ファイル の リスト の 言語 を 検出 し ます 。 
インスタンス 属性 language _ map ( 辞書 ) と 、 language _ order ( リスト ) を 仕事 に 使い ます 。 
指定 さ れ た ディレクトリ の リスト から 、 スタティック または 共有 ライブラリ ファイル lib を 探し 、 その ファイル の フル パス を 返し ます 。 
もし debug が 真 なら 、 ( 現在 の プラットフォーム で 意味 が あれ ば ) デバッグ 版 を 探し ます 。 
指定 さ れ た どの ディレクトリ で も lib が 見つから なけれ ば None を 返し ます 。 
funcname が 現在 の プラットフォーム で サポート さ れ て いる か どう か を ブール 値 で 返し ます 。 
省略 可能 引数 は 追加 の インクルードファイル や パス 、 ライブラリ や パス を 与える こと で コンパイル 環境 を 指定 し ます 。 
dir を ライブラリ 探索 ディレクトリ に 追加 する コンパイラ オプション を 返し ます 。 
共有 ライブラリ または 実行 ファイル に リンク さ れる ライブラリ 一覧 に lib を 追加 する コンパイラ オプション を 返し ます 。 
ランタイムライブラリ を 検索 する ディレクトリ の リスト に dir を 追加 する コンパイラ オプション を 返し ます 。 
コンパイル の いろいろ な ステージ で 実行 さ れる 実行 ファイル ( と その 引数 ) を 定義 し ます 。 
コンパイラ クラス ( の ' executables ' 属性 ) によって 実行 ファイル の セット は 変わる 可能 性 が あり ます が 、 ほとんど は 以下 の もの を 持っ て い ます : 
C / C ++ コンパイラ 
シェアードオブジェクト 、 ライブラリ を 作る ため に 使う リンカ 
バイナリ 実行 可能 ファイル を 作る ため に 使う リンカ 
静的 ライブラリ を 作る アーカイバ 
コマンド ライン を もつ プラットフォーム ( Unix , DOS / Windows ) で は 、 それぞれ の 文字 列 は 実行 ファイル 名 と ( 省略 可能 な ) 引数 リスト に 分割 さ れ ます 。 
( 文字 列 の 分割 は Unix の シェル が 行う もの に 似 て い ます : 単語 は スペース で 区切ら れ ます が 、 クォート と バックス ラッシュ で オーバーライド でき ます 。 
distutils . util . split _ quoted () を ごらん ください 。 ) 
以下 の メソッド は ビルドプロセス の ステージ を 呼び出し ます 。 
1 つ 以上 の ソース ファイル を コンパイル し ます 。 
オブジェクト ファイル を 生成 ( たとえば . c ファイル を . o ファイル に 変換 ) し ます 。 
sources は ファイル 名 の リスト で ある 必要 が あり ます 。 
おそらく C / C ++ ファイル です が 、 実際 に は コンパイラ と コンパイラ クラス で 扱える もの ( 例 : MSVCCompiler は リソース ファイル を sources に とる こと が でき ます ) なら 何でも 指定 でき ます 。 
sources の ソース ファイル ひとつ ずつ に 対応 する オブジェクト ファイル 名 の リスト を 返し ます 。 
前者 は マクロ を 定義 し ます 。 
もし value が None で あれ ば 、 マクロ は 特定 の 値 を もた ない で 定義 さ れ ます 。 
1 要素 の タプル は マクロ 定義 を 削除 し ます 。 
後で 実行 さ れ た 定義 / 再 定義 / 削除 が 優先 さ れ ます 。 
もし 真 なら 、 コンパイラ は デバッグ シンボル を オブジェクト ファイル に ( または 別 ファイル に ) 出力 し ます 。 
extra _ postargs と extra _ postargs は 実装 依存 です 。 
コマンド ライン を もっ て いる プラットフォーム ( 例 Unix , DOS / Windows ) で は 、 おそらく 文字 列 の リスト : コンパイラ の コマンド ライン 引数 の 前 / 後 に 追加 する コマンド ライン 引数 です 。 
他 の プラットフォーム で は 、 実装 クラス の ドキュメント を 参照 し て ください 。 
どの 場合 でも 、 これら の 引数 は 抽象 コンパイラフレームワーク が 期待 に 沿わ ない 時 の 脱出 口 として 意図 さ れ て い ます 。 
depends は ( も し 指定 さ れ て いれ ば ) ターゲット が 依存 し て いる ファイル 名 の リスト です 。 
ソース ファイル が 依存 し て いる ファイル の どれ か より 古けれ ば 、 ソース ファイル は 再 コンパイル さ れ ます 。 
これ は 依存 関係 の トラッキング を サポート し て い ます が 、 荒い 粒 度 で しか 行わ れ ませ ん 。 失敗 する と CompileError を 起こし ます 。 
静的 ライブラリ ファイル を 作る ため に 元 ファイル 群 を リンク し ます 。 
「 元 ファイル 群 」 は objects で 指定 さ れ た オブジェクト ファイル の リスト を 基礎 に し て い ます 。 
output _ dir は ライブラリ ファイル が 起 かれる ディレクトリ です 。 
debug は ブール 値 です 。 
真 なら 、 デバッグ 情報 が ライブラリ に 含ま れ ます ( ほとんど の プラットフォーム で は コンパイル ステップ で 意味 を もち ます : debug フラグ は 一貫 性 の ため に ここ に も あり ます 。 )。 
target _ lang は オブジェクト が コンパイル さ れる 対象 に なる 言語 です 。 
これ は その 言語 特有 の リンク 時 の 処理 を 可能 に し ます 。 失敗 する と LibError を 起こし ます 。 
もし output _ dir が 指定 さ れ て いれ ば 、 それ に対する 相対 パス として output _ filename は 扱わ れ ます ( 必要 なら ば output _ filename は ディレクトリ 名 を 含む こと が でき ます 。 )。 
libraries は リンク する ライブラリ の リスト です 。 
ただし これら は ディレクトリ 名 を 含む こと が でき 、 その 場合 は リンカ は 通常 の 場所 全体 を 探す の で は なく 特定 の ディレクトリ を 参照 し ます 。 
library _ dirs は もし 指定 さ れる なら ば 、 修飾 さ れ て い ない ( ディレクトリ 名 を 含ん で い ない ) ライブラリ 名 で 指定 さ れ た ライブラリ を 探索 する ディレクトリ の リスト です 。 
)。 export _ symbols は 共有 ライブラリ が エクスポート する シンボル の リスト です 。 
( これ は Windows だけ で 意味 が ある よう です 。 
) debug は compile () や create _ static _ lib () と 同じ です が 、 少し だけ 違い が あり 、 ( create _ static _ lib () で は debug フラグ は 形式 を あわせる ため に 存在 し て い た の に対して ) ほとんど の プラットフォーム で 意識 さ れ ます 。 
extra _ preargs と extra _ postargs は compile () と 同じ です が 、 コンパイラ で は なく リンカ へ の 引数 として 扱わ れ ます 。 
target _ lang は 指定 さ れ た オブジェクト が コンパイル さ れ た 対象 言語 です 。 
リンク 時 に 言語 特有 の 処理 を 行える よう に し ます 。 失敗 する と LinkError が 起き ます 。 
実行 ファイル を リンク し ます 。 
output _ progname は 実行 ファイル の 名前 です 。 
objects は リンク さ れる オブジェクト の ファイル 名 の リスト です 。 
他 の 引数 は link メソッド と 同じ です 。 
共有 ライブラリ を リンク し ます 。 
output _ libname は 出力 先 の ライブラリ 名 です 。 objects は リンク さ れる オブジェクト の ファイル 名 の リスト です 。 
共有 オブジェクト を リンク し ます 。 
objects は リンク さ れる オブジェクト の ファイル 名 の リスト です 。 
source で 指定 さ れ た ひとつ の C / C ++ ソース ファイル を プリプロセス し ます 。 
以下 の ユーティリティ メソッド は 具体 的 な サブ クラス で 使う ため に 、 CCompiler クラス で 定義 さ れ て い ます 。 
basename で 指定 さ れ た 実行 ファイル の ファイル 名 を 返し ます 。 
Windows 以外 の 典型 的 な プラットフォーム で は basename そのまま が 、 Windows で は . exe が 追加 さ れ た もの が 返り ます 。 
現在 の プラットフォーム で の ライブラリ ファイル 名 を 返し ます 。 Unix で lib _ type が ' static ' の 場合 、 liblibname . a の 形式 を 返し 、 lib _ type が ' dynamic ' の 場合 は liblibname . so の 形式 を 返し ます 。 
指定 さ れ た ソース ファイル に 対応 する オブジェクト ファイル 名 を 返し ます 。 
source _ filenames は ファイル 名 の リスト です 。 shared _ object _ filename 
basename に 対応 する 共有 オブジェクト ファイル の ファイル 名 を 返し ます 。 
distutils . util . execute () を 呼び だし ます 。 
この メソッド は ログ を 取り 、 dry _ run フラグ を 考慮 に いれ て 、 Python 関数 func に 引数 args を 与え て 呼び だし ます 。 
distutils . util . spawn () を 呼び出し ます 。 
これ は 指定 し た コマンド を 実行 する 外部 プロセス を 呼び出し ます 。 
distutils . dir _ util . mkpath () を 呼び出し ます 。 
これ は 親 ディレクトリ 込み で ディレクトリ を 作成 し ます 。 
distutils . file _ util . move _ file () を 呼び出し ます 。 
src を dst に リネーム し ます 。 
distutils . log . debug () 関数 を 使っ て メッセージ を 書き出し ます 。 
警告 メッセージ msg を 標準 エラー 出力 に 書き出し ます 。 
もし この CCompiler インスタンス で debug フラグ が 指定 さ れ て いれ ば msg を 標準 出力 に 出力 し 、 そう で なけれ ば 何 も 出力 し ませ ん 。 
この モジュール は 抽象 ベース クラス Command を 提供 し ます 。 
クラス Command 
コマンド クラス を 定義 する ため の 抽象 ベース クラス -- distutils の 「 働きバチ 」 -- です 。 
コマンド クラス は options と よば れる ローカル 変数 を 持っ た サブルーチン と 考える こと が でき ます 。 
オプション は initialize _ options () で 宣言 さ れ 、 finalize _ options () で 定義 さ ( 最終 的 な 値 を 与え ら ) れ ます 。 どちら も 全て の コマンド クラス で 実装 する 必要 が あり ます 。 
サブルーチン の 本体 は 全て の 処理 を オプション の 値 に もとづい て 行う run () メソッド で 、 これ も 全て の コマンド クラス で 実装 さ れる 必要 が あり ます 。 クラス の コンス トラクタ は Distribution の インスタンス で ある 単一 の 引数 dist を とり ます 。 
29 distutils . command . bdist _ dumb -- `` ダム '' インストー ラ を 構築 
30 distutils . command . bdist _ rpm -- Redhat RPM と SRPM 形式 の バイナリディストリビューション を 構築 
31 distutils . command . bdist _ wininst -- Windows インストー ラ の 構築 
33 distutils . command . build -- パッケージ 中 の 全 ファイル を 構築 
40 distutils . command . install -- パッケージ の インストー ル 
41 distutils . command . install _ data -- パッケージ 中 の データファイル を インストール 
42 distutils . command . install _ headers -- パッケージ から C / C ++ ヘッダ ファイル を インストール 
43 distutils . command . install _ lib -- パッケージ から ライブラリ ファイル を インストール 
44 distutils . command . install _ scripts -- パッケージ から スクリプト ファイル を インストール 
45 distutils . command . register -- モジュール を Python Package Index に 登録 する 
register コマンド は パッケージ を Python Package Index に 登録 し ます 。 
この 詳細 は PEP 301 に 記述 さ れ て い ます 。 
Distutils を 使う ため に インストール する 必要 が ある 唯一 の モジュール が distutils . core モジュール です 。 
setup () 関数 ( セットアップ スクリプト から 呼び出さ れ ます ) を 提供 し ます 。 
間接 的 に distutils . dist . Distribution クラス と distutils . cmd . Command クラス を 提供 し ます 。 
全て を 実行 する 基本 的 な 関数 で 、 Distutils で できる ほとんど の こと を 実行 し ます 。 
XXXX を 参照 し て ください 。 setup 関数 は たくさん の 引数 を とり ます 。 
以下 の テーブル に まとめ ます 。 
パッケージ の 名前 
文字 列 
パッケージ の バージョン 番号 
1 行 で 書い た パッケージ 解説 
パッケージ の 長い 解説 
パッケージ 作者 の 名前 
パッケージ 作者 の email アドレス 
現在 の メンテナ の 名前 ( パッケージ 作者 と 異なる 場合 ) 
文字 列 
maintainer _ email 現在 の メンテナ の email アドレス ( パッケージ 作者 と 異なる 場合 ) 
パッケージ の URL ( ホームページ ) 
パッケージ ダウンロード 用 URL 
distutils が 操作 する Python パッケージ の リスト 
文字 列 の リスト 
distutils が 操作 する Python モジュール の リスト 
ビルド および インストール する 単体 スクリプト ファイル の リスト 
ビルド する 拡張 モジュール 
distutils . core . Extension インスタンス の リスト 
パッケージ の Trove カテゴリ の リスト 
XXX もっと 良い 定義 へ の リンク 
使用 する Distribution クラス 
distutils . core . Distribution の サブ クラス 
setup . py スクリプト の 名前 - デフォルト で は sys . argv [ 0 ] 
セットアップ スクリプト の 引数 
セットアップ スクリプト の デフォルト 引数 
パッケージ の ライセンス 
説明 用 メタデータ 。 
PEP 314 を 参照 し て ください 
コマンド 名 から Command サブ クラス へ の マッピング 
辞書 
制御 さ れ た 環境 で セットアップ スクリプト を 実行 し 、 いろいろ な もの を 操作 する distutils . dist . Distribution クラス の インスタンス を 返し ます 。 
これ は ディストリビューション の メタデータ ( キーワード 引数 script として 関数 setup () に 渡さ れる ) を 参照 し たり 、 設定 ファイル や コマンド ライン の 内容 を 調べる 時 に 便利 です 。 
script _ name は execfile () で 実行 さ れる ファイル です 。 
stop _ after は い つ 動作 を 停止 する か 関数 setup () に 伝え ます 。 とり うる 値 は : 
値 
説明 
Distribution インスタンス を 作成 し 、 キーワード 引数 を setup () に 渡し た あと に 停止 する 。 
設定 ファイル を パーズ し た あと 停止 する ( そして その データ は Distribution インスタンス に 保存 さ れる )。 
コマンド ライン ( sys . argv [ 1 :] または script _ args ) が パーズ さ れ た あと に 停止 する ( そして その データ は Distribution インスタンス に 保存 さ れる )。 
全て の コマンド を 実行 し た あと に 停止 する ( 関数 setup () を 通常 の 方法 で 呼び出し た 場合 と 同じ )。 
デフォルト 値 。 
これ に 加え て 、 distutils . core モジュール は 他 の モジュール に ある いくつ か の クラス を 公開 し て い ます 。 
Extension は 
distutils . extension から 。 
Command は 
distutils . cmd から 。 
Distribution は 
完全 な 説明 について は それぞれ の モジュール を ごらん ください 。 
Extension クラス は 、 セットアップ スクリプト 中 で C または C ++ 拡張 モジュール を 表し ます 。 
コンス トラクタ で 以下 の キーワード 引数 を とり ます 。 
拡張 の フルネーム ( パッケージ を 含む ) -- ファイル 名 や パス 名 で は なく 、 Python の ピリオド 区切り の 名前 
ソース ファイル 名 の リスト 。 配布 物 ルート ディレクトリ ( setup スクリプト の ある 場所 ) から の 相対 パス 、 プラットフォーム 独立 の ため Unix 形式 ( スラッシュ で 区切る ) で 記述 し ます 。 
ソース ファイル は C , C ++, SWIG (. i )、 特定 プラットフォーム 用 の リソース ファイル 、 その他 build _ ext コマンド が ソース ファイル だ と 認識 する どの 形式 で も あり え ます 。 
C / C ++ ヘッダ ファイル を 検索 する ディレクトリ の リスト ( プラットフォーム 独立 の ため Unix 形式 で 記述 する ) 
定義 する マクロ の リスト ; それぞれ の マクロ は 2 要素 の タプル で 定義 さ れ ます 。 ' 値 ' に は 定義 しよ う と し て いる 文字 列 、 または 内容 なし で 定義 する 場合 は None ( ソース コード 中 で # define FOO と 書く 、 または Unix C コンパイラ の コマンド ライン で - DFOO を 指定 する の と 等価 です ) を 指定 し ます 。 
( string , string ) または ( name , None ) の タプル 
定義 を 消す マクロ の リスト 
リンク 時 に C / C ++ ライブラリ を 検索 する ディレクトリ の リスト 
リンク する ライブラリ 名 の リスト ( ファイル 名 や パス で は ない ) 
実行 時 ( shared extension で は 、 拡張 が 読み込ま れる 時 ) に C / C ++ ライブラリ を 探索 する ディレクトリ の リスト 
追加 で リンク する ファイル (' sources ' に 対応 する コード が 含ま れ て い ない ファイル 、 バイナリ 形式 の リソース ファイル など ) の リスト 
' sources ' の ソース を コンパイル する 時 に 追加 する プラットフォーム 特有 または コンパイラ 特有 の 情報 コマンド ライン を 利用 できる プラットホーム と コンパイラ で は 、 これ は 通常 コマンド ライン 引数 の リスト です が 、 他 の プラットホーム で も 、 それ は 何 か に 使え ます 。 
オブジェクト ファイル を リンク し て 拡張 ( または 新しい Python インタプリタ ) を 作る 時 に 追加 する プラットフォーム 特有 または コンパイラ 特有 の 情報 ' extra _ compile _ args ' に 似 た 実装 です 。 
shared extension から エクスポート さ れる シンボル の リスト 。 
全て の プラットフォーム で は 使わ れ ず 、 Python 拡張 ( 典型 的 に は init + extension _ name という 1 つ の シンボル だけ エクスポート する ) に 一般 的 に 必要 な もの で も ない 。 
拡張 が 依存 する ファイル の リスト 
拡張 の 言語 ( 例 : ' c ', ' c ++',' objc ')。 
指定 し なけれ ば ソース の 拡張 子 で 検出 さ れる 。 
Distribution は Python ソフトウェア パッケージ を どの よう に ビルド 、 インストール 、 パッケージ する か を 定義 する 。 
Distribution の コンス トラクタ が 取り うる キーワード 引数 の リスト に関して は 、 setup () 関数 を 見 て ください 。 setup () は Distribution の インスタンス を 作り ます 。 
Command クラス ( その サブ クラス の インスタンス ) は distutils の ある コマンド を 実装 し ます 。 
この モジュール は CygwinCCompiler クラス を 提供 し ます 。 UnixCCompiler の サブ クラス で Cygwin に 移植 さ れ た Windows 用 の GNUC コンパイラ 向け です 。 
さらに Mingw 32 CCompiler クラス を 含ん で おり 、 これ は mingw 32 向け に 移植 さ れ た GCC ( cygwin の no - cygwin モード と 同じ ) 向け です 。 
この モジュール は DEBUG フラグ を 提供 し ます 。 
この モジュール は シンプル な タイム スタンプ を 元 に し た ファイル や ファイル 群 の 依存 関係 を 処理 する 関数 を 提供 し ます 。 さらに 、 それら の 依存 関係 解析 を 元 に し た 関数 を 提供 し ます 。 
source が 存在 し て 、 target より 最近 変更 さ れ て いる 、 または source が 存在 し て 、 target が 存在 し て い ない 場合 は 真 を 返し ます 。 両方 が 存在 し て い て 、 target の ほう が source より 新しい か 同じ 場合 に は 偽 を 返し ます 。 
source が 存在 し ない 場合 に は DistutilsFileError を 起こし ます 。 newer _ pairwise 
ふたつ の ファイル 名 リスト を 並列 に 探索 し て 、 それぞれ の ソース が 対応 する ターゲット より 新しい か を テスト し ます 。 
newer () の 意味 で ターゲット より ソース が 新しい ペア の リスト ( sources , targets ) を 返し ます 。 
target が source に リストアップ さ れ た どれ か の ファイル より 古けれ ば 真 を 返し ます 。 
もし ' ignore ' なら 、 単に 存在 し ない ソース ファイル を 無視 し ます 。 もし ' newer ' なら 、 存在 し ない ソース ファイル について は target が 古い と みなし ます ( これ は '' dry - tun '' モード で 便利 です : 入力 が ない ので コマンド は 実行 でき ませ ん が 実際 に 実行 しよ う と し て い ない ので 問題 に なり ませ ん )。 
この モジュール は ディレクトリ と ディレクトリ ツリー を 操作 する 関数 を 提供 し ます 。 
ディレクトリ と 、 必要 な 親 ディレクトリ を 作成 し ます 。 
もし ディレクトリ が 既に 存在 し て いる ( name が 空文字 列 の 場合 、 カレント ディレクトリ を 示す ので もちろん 存在 し て い ます ) 場合 、 何 も し ませ ん 。 
ディレクトリ を 作成 でき なかっ た 場合 ( 例 : ディレクトリ と 同じ 名前 の ファイル が 既に 存在 し て い た )、 DistutilsFileError を 起こし ます 。 
もし verbose が 真 なら 、 それぞれ の mkdir について 1 行 、 標準 出力 に 出力 し ます 。 
実際 に 作成 さ れ た ディレクトリ の リスト を 返し ます 。 create _ tree 
src ディレクトリ ツリー 全体 を dst に コピー し ます 。 
src と dst は どちら も ディレクトリ 名 で ある 必要 が あり ます 。 
もし src が ディレクトリ で なけれ ば 、 DistutilsFileError を 起こし ます 。 
もし dst が 存在 し なけれ ば 、 mkpath () で 作成 さ れ ます 。 
実行 結果 は 、 src 以下 の 全て の ファイル が dst に コピー さ れ 、 src 以下 の 全て の ディレクトリ が dst に 再帰 的 に コピー さ れ ます 。 
コピー さ れ た ( または さ れる はず ) の ファイル の リスト を 返し ます 。 
返り 値 は update または dry _ run に 影響 さ れ ませ ん : src 以下 の 全 ファイル を 単に dst 以下 に 改名 し た リスト が 返さ れ ます 。 
preserve _ mode と preserve _ times は 
の copy _ file と 同じ です : 通常 の ファイル に は 適用 さ れ ます が 、 ディレクトリ に は 適用 さ れ ませ ん 。 
もし preserve _ symlinks が 真 なら 、 シンボリックリンク は ( サポート さ れ て いる システム で は ) シンボリックリンク として コピー さ れ ます 。 
再帰 的 に directory と その 下 の 全 ファイル を 削除 し ます 。 
エラー は 無視 さ れ ます ( verbose が 真 の 時 は stdout に 出力 さ れ ます ) 
この モジュール は Distribution クラス を 提供 し ます 。 これ は 構築 / インストール / 配布 さ れる 配布 物 を あらわし ます 。 
この モジュール は EMXCCompiler クラス を 提供 し ます 。 UnixCCompiler の サブ クラス で GNU C コンパイラ の OS / 2 向け EMX ポート を 扱い ます 。 
distutils の モジュール で 使用 さ れる 例外 を 提供 し ます 。 
16 distutils . debug 15 distutils . extension -- Extension クラス 
この モジュール は Extension クラス を 提供 し ます 。 
C / C ++ 拡張 モジュール を セットアップ スクリプト で 表す ため に 使わ れ ます 。 
18 distutils . fancy _ getopt -- 標準 getopt モジュール の ラッパ 
この モジュール は ファイル システム を 見 て 、 ファイル の リスト を 構築 する ため に 使わ れる FileList クラス を 提供 し ます 。 
この モジュール は それぞれ の ファイル を 操作 する ユーティリティ 関数 を 提供 し ます 。 
ファイル src を dst に コピー し ます 。 
もし dst が ディレクトリ なら 、 src は そこ へ 同じ 名前 で コピー さ れ ます ; そう で なけれ ば 、 ファイル 名 として 扱わ れ ます 。 
( も し ファイル が 存在 する なら 、 上書き さ れ ます 。 
) mosilpreserve _ mode が 真 ( デフォルト ) なら 、 ファイル の モード ( タイプ や パー ミッション 、 その他 プラットフォーム が サポート する もの ) も コピー さ れ ます 。 
もし preserve _ times が 真 ( デフォルト ) なら 、 最終 更新 、 最終 アクセス 時刻 も コピー さ れ ます 。 
もし update が 真 なら 、 src は dst が 存在 し ない 場合 か 、 dst が src より 古い 時 に だけ コピー し ます 。 
link は 値 を ' hard ' または ' sym ' に 設定 する こと で コピー の かわり に ハード リンク ( os . link を 使い ます ) または シンボリックリンク ( os . symlink を 使い ます ) を 許可 し ます 。 
None ( デフォルト ) の 時 に は 、 ファイル は コピー さ れ ます 。 
link を サポート し て い ない システム で 有効 に し ない で ください 。 copy _ file () は ハード リンク 、 シンボリックリンク が 可能 か チェック し て い ませ ん 。 
ファイル の 内容 を コピー する ため に _ copy _ file _ contents () を 利用 し て い ます 。 "( dest _ name , copied )" の タプル を 返し ます : dest _ name は 出力 ファイル の 実際 の 名前 、 copied は ファイル が コピー さ れ た ( dry _ run が 真 の 時 に は コピー さ れる こと に なっ た ) 場合 に は 真 です 。 
ファイル src を dst に 移動 し ます 。 
もし dst が ディレクトリ なら 、 ファイル は その ディレクトリ に 同じ 名前 で 移動 さ れ ます 。 そう で なけれ ば 、 src は dst に 単に リネーム さ れ ます 。 
新しい ファイル の 名前 を 返し ます 。 
警告 : Unix で は デバイス を またがる 移動 は copy _ file () を 利用 し て 扱っ て い ます 。 
他 の システム で は どう なっ て いる ??? 
filename を 作成 し 、 contents ( 行末 文字 が ない 文字 列 の シーケンス ) を 書き込み ます 。 
18 . 10 . 1 Python バイト コード 命令 
distutils パッケージ は 、 現在 インストール さ れ て いる Python に 追加 する ため の モジュール 構築 、 および 実際 の インストール を 支援 し ます 。 
新規 の モジュール は 100 %- pure Python で も 、 C で 書か れ た 拡張 モジュール で も 、 あるいは Python と C 両方 の コード が 入っ て いる モジュール から なる Python パッケージ でも かまい ませ ん 。 この パッケージ は 、 Python ドキュメンテーション パッケージ に 含ま れ て いる これ と は 別 の 2 つ の ドキュメント で 詳しく 説明 さ れ て い ます 。 
distutils の 機能 を 使っ て 新しい モジュール を 配布 する 方法 は 、 
Python モジュール を 配布 する 
に 書か れ て い ます 。 この ドキュメント に は distutils を 拡張 する 方法 も 含ま れ て い ます 。 
Python モジュール を インストール する 方法 は 、 モジュール の 作者 が distutils パッケージ を 使っ て いる 場合 でも い ない 場合 でも 、 
Python モジュール を インストール する 
に 書か れ て い ます 。 
この マニュアル は Python モジュール の 開発 者 および パッケージ 担当 に 向け た もの です 。 
ここ で は 、 現在 インストール さ れ て いる Python に 簡単 に 追加 できる distutils ベース の パッケージ を どう やっ て 用意 する か について 説明 し て い ます 。 
現在 インストール さ れ て いる Python に モジュール を 追加 する ため の 情報 が 書か れ た `` 管理 者 '' 向け の マニュアル です 。 この 文書 を 読む の に Python プログラマ で ある 必要 は あり ませ ん 。 
20 distutils . log -- シンプル な PEP 282 スタイル の ロギ ング 
警告 : 標準 の logging モジュール に 置き換え られる べき 
この モジュール は MSVCCompiler クラス を 提供 し ます 。 抽象 クラス CCompiler の 具象 クラス で Microsoft Visual Studio 向け の もの です 。 
. Net SDK の 一部 として 無償 で 入手 できる コンパイラ を 扱う こと も でき ます 。 
8 distutils . mwerkscompiler -- Metrowerks CodeWarrior サポート 
MWerksCompiler クラス を 提供 し ます 。 抽象 クラス CCompiler の 具象 クラス で Macintosh の MetroWerks CodeWarrior 向け です 。 
CW on Windows を サポート する に は 作業 が 必要 です 。 
22 distutils . sysconfig -- システム 設定 情報 
distutils . sysconfig モジュール で は 、 Python の 低 水準 の 設定 情報 へ の アクセス 手段 を 提供 し て い ます 。 
どの 設定 情報 変数 に アクセス できる か は 、 プラットフォーム と 設定 自体 に 大きく 左右 さ れ ます 。 また 、 特定 の 変数 は 、 使っ て いる Python の バージョン に対する ビルドプロセス に 左右 さ れ ます ; こうした 変数 は 、 Unix システム で は 、 Makefile や Python と 一緒 に インストール さ れる 設定 ヘッダ から 探し出さ れ ます 。 
設定 ファイル の ヘッダ は 、 2 . 2 以降 の バージョン で は pyconfig . h 、 それ 以前 の バージョン で は config . h です 。 他 に も 、 distutils パッケージ の 別 の 部分 を 操作 する 上 で 便利 な 関数 が いくつ か 提供 さ れ て い ます 。 
os . path . normpath ( sys . prefix ) の 結果 です 。 
os . path . normpath ( sys . exec _ prefix ) の 結果 です 。 
ある 一つ の 設定 変数 に対する 値 を 返し ます 。 
get _ config _ vars (). get ( name ) と 同じ です 。 
定義 さ れ て いる 変数 の セット を 返し ます 。 
引数 を 指定 し なけれ ば 、 設定 変数 名 を 変数 の 値 に 対応付ける マップ 型 を 返し ます 。 
引数 を 指定 する 場合 、 引数 の 各 値 は 文字 列 で なけれ ば なら ず 、 戻り 値 は 引数 に 関連付け られ た 各 設定 変数 の 値 から なる シーケンス に なり ます 。 
引数 に 指定 し た 名前 の 設定 変数 に 値 が ない 場合 、 その 変数 値 に は None が 入り ます 。 get _ config _ h _ filename 
設定 ヘッダ の フル パス 名 を 返し ます 。 
Unix の 場合 、 この ヘッダ ファイル は configure スクリプト によって 生成 さ れる ヘッダ ファイル 名 です ; 他 の プラットフォーム で は 、 ヘッダ は Python ソース 配布 物 中 で 直接 与え られ て い ます 。 
ファイル は プラットフォーム 固有 の テキストファイル です 。 
Python を ビルド する 際 に 用いる Makefile の フル パス を 返し ます 。 
Unix の 場合 、 この ファイル は configure スクリプト によって 生成 さ れ ます ; 他 の プラットフォーム で は 、 この 関数 の 返す 値 の 意味 は 様々 です 。 有意 な ファイル 名 を 返す 場合 、 ファイル は プラットフォーム 固有 の テキストファイル 形式 です 。 
この 関数 は POSIX プラットフォーム で のみ 有用 です 。 
C インクルードファイルディレクトリ について 、 一般 的 な ディレクトリ 名 か 、 プラットフォーム 依存 の ディレクトリ 名 の いずれ か を 返し ます 。 
plat _ specific が 真 で あれ ば 、 プラットフォーム 依存 の インクルードディレクトリ 名 を 返し ます ; plat _ specific が 偽 か 、 省略 さ れ た 場合 に は 、 プラットフォーム に 依存 し ない ディレクトリ を 返し ます 。 
prefix が 指定 さ れ て いれ ば 、 PREFIX の 代わり に 用い られ ます 。 
また 、 plat _ specific が 真 の 場合 、 EXEC _ PREFIX の 代わり に 用い られ ます 。 get _ python _ lib 
ライブラリ ディレクトリ について 、 一般 的 な ディレクトリ 名 か 、 プラットフォーム 依存 の ディレクトリ 名 の いずれ か を 返し ます 。 
plat _ specific が 真 で あれ ば 、 プラットフォーム 依存 の ライブラリ ディレクトリ 名 を 返し ます ; plat _ specific が 偽 か 、 省略 さ れ た 場合 に は 、 プラットフォーム に 依存 し ない ディレクトリ を 返し ます 。 prefix が 指定 さ れ て いれ ば 、 PREFIX の 代わり に 用い られ ます 。 
また 、 plat _ specific が 真 の 場合 、 EXEC _ PREFIX の 代わり に 用い られ ます 。 
standard _ lib が 真 で あれ ば 、 サード パーティ 製 の 拡張 モジュール を インストール する ディレクトリ の 代わり に 、 標準 ライブラリ の ディレクトリ を 返し ます 。 
以下 の 関数 は 、 distutils パッケージ 内 の 使用 だけ を 前提 に し て い ます 。 
distutils . ccompiler . CCompiler インスタンス に対して 、 プラットフォーム 固有 の カスタマイズ を 行い ます 。 この 関数 は 現在 の ところ 、 Unix だけ で 必要 です が 、 将来 の 互換 性 を 考慮 し て 一貫 し て 常に 呼び出さ れ ます 。 
この 関数 は 様々 な Unix の 変種 ごと に 異なる 情報 や 、 Python の Makefile に 書か れ た 情報 を インスタンス に 挿入 し ます 。 
この 情報 に は 、 選択 さ れ た コンパイラ や コンパイラ / リンカ の オプション 、 そして 共有 オブジェクト を 扱う ため に リンカ に 指定 する 拡張 子 が 含ま れ ます 。 
この 関数 は もっと 特殊 用途 向け で 、 Python 自体 の ビルドプロセス で しか 使わ れ ませ ん 。 set _ python _ build 
distutils . sysconfig モジュール に 、 モジュール が Python の ビルドプロセス の 一部 として 使わ れる こと を 知らせ ます 。 
これ によって 、 ファイル コピー 先 を 示す 相対 位置 が 大幅 に 変更 さ れ 、 インストール 済み の Python で は なく 、 ビルド 作業 領域 に ファイル が 置か れる よう に なり ます 。 
24 distutils . version 23 distutils . text _ file -- TextFile クラス 
この モジュール は TextFile クラス を 提供 し ます 。 
これ は テキストファイル へ の インタフェース を 提供 し 、 コメント の 削除 、 空 行 の 無視 、 バックス ラッシュ で の 行 の 連結 を 任意 に 行え ます 。 クラス TextFile 
この クラス は ファイル の よう な オブジェクト を 提供 し ます 。 これ は 行 指向 の テキストファイル を 処理 する 時 に 共通 し て 必要 と なる 処理 を 行い ます : (# が コメント 文字 なら ) コメント の 削除 、 空 行 の スキップ 、 ( 行末 の バックス ラッシュ で の ) 改行 の エスケープ による 行 の 連結 、 先頭 / 末尾 の 空白 文字 の 削除 。 
また unreadline () メソッド が 一行 先読み を 実装 する ため に 提供 さ れ て い ます 。 
TextFile の インスタンス は filename 、 file 、 または その 両方 を とっ て 作成 さ れ ます 。 
両方 が None の 場合 RuntimeError が 起き ます 。 filename は 文字 列 、 file は ファイル オブジェクト ( または readline () と close () の メソッド を 提供 する 何 か ) で ある 必要 が あり ます 。 
TextFile が 生成 する 警告 メッセージ に 含める こと が できる ので 、 filename を 与える こと が 推奨 さ れ ます 、 もし file が 提供 さ れ なけれ ば 、 TextFile は 組み込み の open () を 利用 し て 自分 で 作成 し ます 。 
オプション は 全て 真偽 値 で 、 readline () で 返さ れる 値 に 影響 し ます 。 
オプション 名 
デフォルト 値 
行 を 返す 前 に 先頭 の 空白 文字 の 並び を 削除 し ます 。 
行 を 返す 前 に 行末 の 空白 文字 ( 改行 文字 を 含み ます !) の 並び を 削除 し ます 。 
コメント と 空白 を 除い た * あと で * 内容 が ない 行 を スキップ し ます 。 
もし コメント と 空白 文字 を 削除 し た あと で 、 バックス ラッシュ が 最後 の 改行 文字 で ない 文字 なら 、 次 の 行 を 接続 し て 一つ の 論理 行 と し ます : N 行 の 連続 し た 行 が バックス ラッシュ で 終わる 場合 、 N + 1 行 の 物理 行 が 1 行 の 論理 行 として 扱わ れ ます 。 
前 の 行 と 接続 する とき 、 行頭 の 空白 文字 を 削除 し ます 。 "( join _ linesand not lstrip _ ws )" の 時 だけ 意味 を もち ます 。 
rstrip _ ws は 行末 の 改行 を 削除 する ので 、 readline () の セマンティクス が 組み込み ファイル オブジェクト の readline () メソッド と は 変わっ て しまい ます ! 特に 、 rstrip _ ws が 真 で skip _ blanks が 偽 の とき 、 readline () は ファイル の 終端 で None を 返し 、 空文字 列 を 返し た とき は 空 行 ( または 全て 空白 文字 の 行 ) です 。 
新しい ファイル filename を 開き ます 。 
これ は コンス トラクタ 引数 の file と filename を 上書き し ます 。 
現在 の ファイル を 閉じ 、 ( ファイル 名 や 現在 の 行 番号 を 含め ) 現在 の ファイル について の 情報 を 全て 消し ます 。 
標準 エラー 出力 に 現在 の ファイル の 論理 行 に 結びつい た 警告 メッセージ を 出力 し ます 。 
もし 現在 の 論理 行 が 複数 の 物理 行 に 対応 する なら 、 警告 メッセージ は 以下 の よう に 全体 を 参照 し ます : "" lines 3 - 5 ""。 
もし line が 与え られ て いれ ば 、 現在 の 行 番号 を 上書き し ます ; 物理 行 の レンジ を あらわす リスト または タプル 、 もしくは ある 物理 行 を あらわす 整数 の どれ でも 与え られ ます 。 
現在 の ファイル ( または unreadline () で '' unread '' を 直前 に 行っ て いれ ば バッファ ) から 論理 行 を 1 行 読み込ん で 返し ます 。 
もし join _ lines オプション が 真 なら 、 この メソッド は 複数 の 物理 行 を 読み込ん で 接続 し た 文字 列 を 返し ます 。 
現在 の 行 番号 を 更新 し ます 。 その ため readline () の あと に warn () を 呼ぶ と 丁度 読ん だ 行 について の 警告 を 出し ます 。 
rstrip _ ws が 真 で 、 strip _ blanks が 偽 の とき 空文字 列 が 返る ので 、 ファイル の 終端 で は None を 返し ます 。 
現在 の ファイル で 残っ て いる 全て の 論理 行 の リスト を 読み込ん で 返し ます 。 行 番号 を 、 ファイル の 最後 の 行 に 更新 し ます 。 
line ( 文字 列 ) を 次 の readline () 用 に 、 内部 バッファ に push し ます 。 
行 の 先読み を 必要 と する パーサ を 実装 する 時 に 便利 です 。 
unreadline で `` unread '' さ れ た 行 は readline で 読み込む 際 に 再度 処理 ( 空白 の 除去 など ) さ れ ませ ん 。 
もし unreadlinee を 、 readline を 呼ぶ 前 に 複数 回 実行 する と 、 最後 に unread し た 行 から 返さ れ ます 。 
この モジュール は UnixCCompiler クラス を 提供 し ます 。 CCompiler クラス の サブ クラス で 、 典型 的 な Unix スタイル の コマンド ライン C コンパイラ を 扱い ます : 
マクロ は - Dname 
で 定義 さ れ ます 。 マクロ は - Uname 
ライブラリ は - llib で 指定 さ れ ます 。 
ライブラリ の 探索 ディレクトリ は - Ldir で 指定 さ れ ます 。 
コンパイル は cc ( または それ に 似 た ) 実行 ファイル に 、 - c オプション を つけ て 実行 し ます : . c を . o に コンパイル し ます 。 
静的 ライブラリ は ar コマンド で 処理 さ れ ます ( ranlib を 使う かも しれ ませ ん ) 
共有 ライブラリ の リンク は cc - shared で 処理 さ れ ます 。 
この モジュール は 他 の ユーティリティ モジュール に あわ ない もの を 提供 し て い ます 。 
現在 の プラットフォーム を 示す 文字 列 を 返し ます 。 
これ は プラットフォーム 依存 の ビルドディレクトリ や プラットフォーム 依存 の 配布 物 を 区別 する ため に 使わ れ ます 。 
POSIX で ない プラットフォーム で は 、 今 の ところ 単に sys . platform が 返さ れ ます 。 
' pathname ' を ファイル システム で 利用 できる 名前 に し て 返し ます 。 すなわち 、 '/' で 分割 し 、 現在 の ディレクトリセパレータ で 接続 し なおし ます 。 
セットアップ スクリプト 中 の ファイル 名 は Unix スタイル で 提供 さ れ 、 実際 に 利用 する 前 に 変換 する 必要 が ある ため 、 この 関数 が 必要 に なり ます 。 
もし pathname の 最初 または 最後 が スラッシュ の 場合 、 Unix 的 で ない システム で は ValueError が 起き ます 。 
pathname の 前 に new _ root を 追加 し た もの を 返し ます 。 
' os . environ ' に 、 ユーザ が config ファイル 、 コマンドラインオプション など で 利用 できる こと を 保証 し て いる 環境 変数 が ある こと を 確認 し ます 。 
現在 は 以下 の もの が 含ま れ て い ます : 
HOME - ユーザ の ホーム ディレクトリ ( Unix のみ ) 
PLAT - ハードウェア と OS を 含む 現在 の プラットフォーム の 説明 。 
( get _ platform () を 参照 ) subst _ vars 
shell / Perl スタイル の 変数 置換 を s について 行い ます 。 
全て の $ に 名前 が 続い た もの は 変数 と みなさ れ 、 辞書 local _ vars で みつかっ た 値 に 置換 さ れ ます 。 local _ vars で 見つから なかっ た 場合 に は os . environ で 置換 さ れ ます 。 
os . environ は 最初 に ある 値 を 含ん で いる こと を チェック さ れ ます : check _ environ () を 参照 。 
local _ vars or os . environ の どちら に も 値 が 見つから なかっ た 場合 、 ValueError を 起こし ます 。 
これ は 完全 な 文字 列 挿入 関数 で は ない こと に 注意 し て ください 。 
$ variable の 名前 に は 大小 英字 、 数字 、 アンダー バー だけ を 含む こと が でき ます 。 
{ } や 
を 使っ た 引用 形式 は 利用 でき ませ ん 。 
例外 オブジェクト EnvironmentError ( IOError または OSError ) から 、 エラーメッセージ を 生成 し ます 。 
Python 1 . 5 . 1 または それ 以降 の 形式 を 扱い 、 ファイル 名 を 含ん で い ない 例外 オブジェクト も 扱い ます 。 この よう な 状況 は エラー が 2 つ の ファイル に 関係 する 操作 、 たとえば rename () や link () で 発生 し ます 。 
prefix を プレフィクス に 持つ エラーメッセージ を 返し ます 。 
文字 列 を Unix の シェル の よう な ルール ( 引用 符 や バックス ラッシュ の 扱い ) で 分割 し ます 。 
2 文字 で の エスケープ シーケンス に 使わ れ て いる バックス ラッシュ は 削除 さ れ 、 エスケープ さ れ て い た 文字 だけ が 残り ます 。 
引用 符 は 文字 列 から 削除 さ れ ます 。 
語 の リスト が 返り ます 。 
外部 に 影響 する いくつ か の アクション ( たとえば 、 ファイル システム へ の 書き込み ) を 実行 し ます 。 
その よう な アクション は dry _ run フラグ で 無効 に する 必要 が ある ので 特別 です 。 
この 関数 は その 繁雑 な 処理 を 行い ます 。 関数 と 引数 の タプル 、 ( 実行 する 「 アクション 」 を はっきり さ せる ため の ) 表示 に 使わ れる 任意 の メッセージ を 渡し て ください 。 
val が 上 の どれ で も ない 時 は ValueError を 起こし ます 。 
0 - 最適 化 し ない (. pyc ファイル を 作成 し ます ) 
1 - 通常 の 最適 化 (" python - O " の よう に ) 
2 - さらに 最適 化 (" python - OO " の よう に ) 
通常 は byte _ compile () に 直接 か そう で ない か を まかせ ます ( 詳細 について は ソース を ごらん ください )。 
direct フラグ は 関節 モード で 作成 さ れ た スクリプト で 使用 さ れ ます 。 何 を やっ て いる か 理解 し て い ない 時 は None の まま に し て おい て ください 。 
dl モジュール は dlopen () 関数 へ の インターフェース を 定義 し ます 。 これ は ダイナミック ライブラリ に ハンドル する ため の Unix プラットフォーム 上 の 最も 一般 的 な インターフェース です 。 
その ライブラリ の 任意 の 関数 を 呼ぶ プログラム を 与え ます 。 
注意 : この モジュール は sizeof ( int ) == sizeof ( long ) == sizeof ( char *) で なけれ ば 働き ませ ん 。 
そう で なけれ ば import する とき に SystemError が 送出 さ れる でしょ う 。 
dl モジュール は 次 の 関数 を 定義 し ます : 
共有 オブジェクト ファイル を 開い て 、 ハンドル を 返し ます 。 
モード は 遅延 結合 ( RTLD _ LAZY ) または 即時 結合 ( RTLD _ NOW ) を 表し ます 。 
デフォルト は RTLD _ LAZY です 。 
いくつ か の システム は RTLD _ NOW を サポート し て い ない こと に 注意 し て ください 。 返り 値 は dlobject です 。 
dl モジュール は 次 の 定数 を 定義 し ます : 
open () の 引数 として 使い ます 。 
即時 結合 を サポート し ない システム で は 、 この 定数 が モジュール に 現われ ない こと に 注意 し て ください 。 
最大 の ポータビリティ を 求める なら ば 、 システム が 即時 結合 を サポート する か どう か を 決定 する ため に hasattr () を 使用 し て ください 。 
dl モジュール は 次 の 例外 を 定義 し ます : 
動的 な ロード や リンク ルーチン の 内部 で エラー が 生じ た とき に 送出 さ れる 例外 です 。 
例 : 
この 例 は Debian GNU / Linux システム 上 で 行なっ た もの で 、 この モジュール の 使用 は たいてい 悪い 選択肢 で ある という 事実 の よい 例 です 。 
5 . 2 doctest -- 対話 モード を 使っ た 使用 例 の 内容 を テスト する 
モジュール は 、 対話 的 Python セッション の よう に 見える テキスト を 探し出し 、 セッション の 内容 を 実行 し て 、 そこ に 書か れ て いる 通り に 振舞う か を 調べ ます 。 
doctest は 以下 の よう な 用途 に よく 使わ れ て い ます : 
モジュール の docstring ( ドキュメンテーション 文字 列 ) 中 に ある 対話 モード で の 使用 例 全て が 書か れ て いる 通り に 動作 する か を 検証 する こと で 、 docstring の 内容 が 最新 の もの に なる よう 保ち ます 。 
テスト ファイル や テスト オブジェクト 中 の 対話 モード における 使用 例 が 期待 通り に 動作 する か を 検証 する こと で 、 回帰 テスト を 実現 し ます 。 
入出力 例 を ふんだんに 使っ た パッケージ の チュートリアル ドキュメント を 書け ます 。 
入出力 例 と 解説 文 の どちら に 注目 する か によって 、 ドキュメント は 「 読める テスト 」 に も 「 実行 できる ドキュメント 」 に も なり ます 。 
以下 に ちょっとした 、 それでいて 完全 な 例 を 示し ます : 
doctest モジュール は 、 モジュール の docstring から 、 これら の セッション を 実際 に 実行 し て 、 そこ に 書か れ て いる 通り に 動作 する か 検証 し ます 。 
example . py を コマンド ライン から 直接 実行 する と 、 
は その 魔法 を 働かせ ます : 
出力 は 何 も あり ませ ん ! しかし これ が 正常 で 、 全て の 例 が 正しく 動作 する こと を 意味 し て い ます 。 
スクリプト に - v を 与える と 、 
は 何 を 行お う と し て いる の か を 記録 し た 詳細 な ログ を 出力 し 、 最後 に まとめ を 出力 し ます : 
といった 具合 で 、 最後 に は : 
詳細 な 事柄 は 後続 の 各 節 で 全て 説明 し て い ます 。 
doctest の 例 は 、 標準 の Python テストスイート や ライブラリ 中 に 沢山 あり ます 。 
標準 の テスト ファイル Lib / test / test _ doctest . py に は 、 特に 便利 な 例題 が あり ます 。 
doctest . py 内 の docstring に は doctest の 全て の 側面 について の 詳細 な 情報 が 入っ て おり 、 ここ で は より 重要 な 点 を カバー する だけ に し ます 。 
5 . 2 . 5 実行 コンテキスト と は 何 か ? 
注意 : dumbdbm モジュール は 、 
が 安定 な モジュール を 他 に 見つける こと が でき なかっ た 際 の 最後 の 手段 と さ れ て い ます 。 dumbdbm モジュール は 速度 を 重視 し て 書か れ て いる わけ で は なく 、 他 の データベース モジュール の よう に 重い 使い方 を する ため の もの で は あり ませ ん 。 
dumbdbm モジュール は 永続 性 辞書 に 類似 し た インタフェース を 提供 し 、 全て Python で 書か れ て い ます 。 
や 
といった モジュール と 異なり 、 外部 ライブラリ は 必要 あり ませ ん 。 
他 の 永続 性 マップ 型 の よう に 、 キー および 値 は 常に 文字 列 で なけれ ば なり ませ ん 。 この モジュール で は 以下 の 内容 を 定義 し て し ます : 
I / O エラー の よう な dumbdbm 特有 の エラー の 際 に 送出 さ れ ます 。 
不正 な キー を 指定 し た とき の よう な 、 一般 的 な 対応 付け エラー の 際 に は KeyError が 送出 さ れ ます 。 
dumbdbm データベース を 開き 、 dubmdbm オブジェクト を 返し ます 。 
filename 引数 は データベース ファイル 名 の 雛 型 ( 特定 の 拡張 子 を もた ない もの ) です 。 
デフォルト で は 8 進 コード の 0666 に なっ て い ます ( umask によって 修正 を 受け ます )。 バージョン 2 . 2 で 変更 さ れ た 仕様 : mode 引数 は 以前 の バージョン で は 無視 さ れ ます 
dbm 形式 の データベース に対する 汎用 インタフェース 。 
DBM / NDBM ライブラリ に対する 同様 の インタフェース 。 
GNU GDBM ライブラリ に対する 同様 の インタフェース 。 
非 文字 列 データ を 記録 する 永続 化 モジュール 。 
既存 の データベース の 形式 を 判定 する ため に 使わ れる ユーティリティ モジュール 。 
この モジュール は 
モジュール の インターフェース を そっくり まねる もの です 。 
モジュール が サポート さ れ て い ない プラットフォーム で import する こと を 意図 し て 作ら れ た もの です 。 使用 例 : 
生成 する スレッド が 、 他 の ブロック し た スレッド を 待ち 、 デッドロック 発生 の 可能 性 が ある 場合 に は 、 この モジュール を 使わ ない よう に し て ください 。 
ブロッキング I / O を 使っ て いる 場合 に よく 起き ます 。 
モジュール の インターフェース を そっくり まねる もの です 。 
使用 例 : 
この モジュール は 文字 セット を 表現 する Charset クラス と 電子 メール メッセージ に ふくま れる 文字 セット 間 の 変換 、 および 文字 セット の レジストリ と この レジストリ を 操作 する ため の いくつ か の 便宜 的 な メソッド を 提供 し ます 。 
Charset インスタンス は email パッケージ 中 に ある ほか の いくつ か の モジュール で 使用 さ れ ます 。 
バージョン 2 . 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
クラス Charset ( 
文字 セット を email の プロパティ に 写像 する 。 
Map character sets to their email properties . この クラス は ある 特定 の 文字 セット に対し 、 電子 メール に 課さ れる 制約 の 情報 を 提供 し ます 。 
また 、 与え られ た 適用 可能 な codec を つかっ て 、 文字 セット 間 の 変換 を おこなう 便宜 的 な ルーチン も 提供 し ます 。 
この 値 は つねに 小文字 に 強制 的 に 変換 さ れ ます 。 
そして 文字 セット の 別名 が 正規 化 さ れ た あと 、 この 値 は 文字 セット の レジストリ 内 を 検索 し 、 ヘッダ の エン コーディング と メッセージ 本体 の エン コーディング 、 および 出力 時 の 変換 に 使わ れる codec を みつける の に 使わ れ ます 。 
たとえば input _ charset が iso - 8859 - 1 の 場合 、 ヘッダ および メッセージ 本体 は quoted - printable で エン コード さ れ 、 出力 時 の 変換 用 codec は 必要 あり ませ ん 。 
もし input _ charset が euc - jp なら ば 、 ヘッダ は base 64 で エン コード さ れ 、 メッセージ 本体 は エン コード さ れ ませ ん が 、 出力 さ れる テキスト は euc - jp 文字 セット から iso - 2022 - jp 文字 セット に 変換 さ れ ます 。 
Charset インスタンス は 以下 の よう な データ 属性 を もっ て い ます : 
最初 に 指定 さ れる 文字 セット です 。 
一般 に 通用 し て いる 別名 は 、 正式 な 電子 メール 用 の 名前 に 変換 さ れ ます ( たとえば 、 latin _ 1 は iso - 8859 - 1 に 変換 さ れ ます )。 
デフォルト は 7 - bit の us - ascii です 。 
この 文字 セット が 電子 メール ヘッダ に 使わ れる 前 に エン コード さ れる 必要 が ある 場合 、 この 属性 は Charset . QP ( quoted - printable エン コーディング )、 Charset . BASE 64 ( base 64 エン コーディング )、 あるいは 最短 の QP または BASE 64 エン コーディング で ある Charset . SHORTEST に 設定 さ れ ます 。 そう で ない 場合 、 この 値 は None に なり ます 。 
header _ encoding と 同じ です が 、 この 値 は メッセージ 本体 の ため の エン コーディング を 記述 し ます 。 これ は ヘッダ 用 の エン コーディング と は 違う かも しれ ませ ん 。 
body _ encoding で は 、 Charset . SHORTEST を 使う こと は でき ませ ん 。 
文字 セット によって は 、 電子 メール の ヘッダ あるいは メッセージ 本体 に 使う 前 に それ を 変換 する 必要 が あり ます 。 
もし input _ charset が それら の 文字 セット の どれ か を さし て い たら 、 この output _ charset 属性 は それ が 出力 時 に 変換 さ れる 文字 セット の 名前 を あらわし て い ます 。 
それ 以外 の 場合 、 この 値 は None に なり ます 。 
input _ charset を Unicode に 変換 する ため の Python 用 codec 名 です 。 
変換 用 の codec が 必要 ない とき は 、 この 値 は None に なり ます 。 
Unicode を output _ charset に 変換 する ため の Python 用 codec 名 です 。 
変換 用 の codec が 必要 ない とき は 、 この 値 は None に なり ます 。 この 属性 は input _ codec と 同じ 値 を もつ こと に なる でしょ う 。 
Charset インスタンス は 、 以下 の メソッド も 持っ て い ます : 
文字 列 s を input _ codec から output _ codec に 変換 し ます 。 
おそらく マルチ バイト の 文字 列 を 、 安全 に split できる 形式 に 変換 し ます 。 
split できる 文字 列 を エン コード さ れ た 文字 列 に 変換 し なおし ます 。 
ustr は `` 逆 split '' する ため の Unicode 文字 列 です 。 
この メソッド で は 、 文字 列 を Unicode から べつ の エン コード 形式 に 変換 する ため に 適切 な codec を 使用 し ます 。 
to _ output が False の 場合 、 これ は input _ codec を 使用 し ます 。 
出力 用 の 文字 セット を 返し ます 。 これ は output _ charset 属性 が None で なけれ ば その 値 に なり ます 。 
それ 以外 の 場合 、 この 値 は input _ charset と 同じ です 。 encoded _ header _ len 
エン コード さ れ た ヘッダ 文字 列 の 長 さ を 返し ます 。 
これ は quoted - printable エン コーディング あるいは base 64 エン コーディング に対して も 正しく 計算 さ れ ます 。 header _ encode 
文字 列 s を ヘッダ 用 に エン コード し ます 。 
convert が True の 場合 、 文字 列 は 入力 用 文字 セット から 出力 用 文字 セット に 自動的 に 変換 さ れ ます 。 
これ は 行 の 長 さ 問題 の ある マルチ バイト の 文字 セット に対して は 役に立ち ませ ん ( マルチ バイト 文字 は バイト 境界 で は なく 、 文字 ごと の 境界 で split する 必要 が あり ます )。 これら の 問題 を 扱う に は 、 高水準 の クラス で ある Header クラス を 使っ て ください ( 
email . Header を 参照 )。 
convert の 値 は デフォルト で は False です 。 エン コーディング の 形式 ( base 64 または quoted - printable ) は 、 header _ encoding 属性 に 基づき ます 。 
文字 列 s を メッセージ 本体 用 に エン コード し ます 。 
Charset クラス に は 、 標準 的 な 演算 と 組み込み 関数 を サポート する いくつ か の メソッド が あり ます 。 
input _ charset を 小文字 に 変換 さ れ た 文字 列 型 として 返し ます 。 __ repr __() は 、 __ str __() の 別名 と なっ て い ます 。 
この メソッド は 、 2 つ の Charset インスタンス が 同じ か どう か を チェック する の に 使い ます 。 
この メソッド は 、 2 つ の Charset インスタンス が 異なる か どう か を チェック する の に 使い ます 。 
また 、 email . Charset モジュール に は 、 グローバル な 文字 セット 、 文字 セット の 別名 ( エイリアス ) および codec 用 の レジストリ に 新しい エントリ を 追加 する 以下 の 関数 も ふくま れ て い ます : add _ charset 
文字 の 属性 を グローバル な レジストリ に 追加 し ます 。 
デフォルト の 値 は エン コーディング なし の None に なっ て い ます 。 オプション 引数 output _ charset に は 出力 用 の 文字 セット が 入り ます 。 
Charset . convert () が 呼ば れ た とき の 変換 は まず 入力 用 の 文字 セット を Unicode に 変換 し 、 それから 出力 用 の 文字 セット に 変換 さ れ ます 。 
デフォルト で は 、 出力 は 入力 と 同じ 文字 セット に なっ て い ます 。 
モジュール の 文書 を 参照 し て ください 。 グローバル な 文字 セット 用 の レジストリ は 、 モジュール の global 辞書 CHARSETS 内 に 保持 さ れ て い ます 。 
与え られ た 文字 セット の 文字 と Unicode と の 変換 を おこなう codec を 追加 し ます 。 
charset は ある 文字 セット の 正式 名称 で 、 codecname は Python 用 codec の 名前 です 。 これ は 組み込み 関数 unicode () の 第 2 引数 か 、 あるいは Unicode 文字 列 型 の encode () メソッド に 適し た 形式 に なっ て い なけれ ば なり ませ ん 。 
12 . 2 . 8 例外 および 障害 クラス 
実際 に は これら の エンコーダ は MIMEAudio および MIMEImage クラス の コンス トラクタ で デフォルト エンコーダ として 使わ れ て い ます 。 
すべて の エン コーディング 関数 は 、 エン コード する メッセージ オブジェクト ひとつ だけ を 引数 に とり ます 。 
これら は ふつう ペイ ロード を 取りだし 、 それ を エン コード し て 、 ペイ ロード を エン コード さ れ た もの に セット し なおし ます 。 
これら は また Content - Transfer - Encoding : ヘッダ を 適切 な 値 に 設定 し ます 。 
提供 さ れ て いる エン コーディング 関数 は 以下 の とおり です : encode _ quopri 
これ は その ペイ ロード の ほとんど が 通常 の 印刷 可能 な 文字 から なっ て いる が 、 印刷 不可能 な 文字 が すこし だけ ある とき の エン コード 方法 として 適し て い ます 。 
ペイ ロード を base 64 形式 で エン コード し 、 Content - Transfer - Encoding : ヘッダ を base 64 に 変更 し ます 。 
これ は ペイ ロード 中 の データ の ほとんど が 印刷 不可能 な 文字 で ある 場合 に 適し て い ます 。 quoted - printable 形式 より も 結果 として は コンパクト な サイズ に なる から です 。 
base 64 形式 の 欠点 は 、 これ が 人間 に は まったく 読め ない テキスト に なっ て しまう こと です 。 
これ は 実際 に は ペイ ロード を 変更 は し ませ ん が 、 ペイ ロード の 形式 に 応じ て Content - Transfer - Encoding : ヘッダ を 7 bit あるいは 8 bit に 適し た 形 に 設定 し ます 。 
これ は 何 も し ない エンコーダ です 。 Content - Transfer - Encoding : ヘッダ を 設定 さえ し ませ ん 。 
注意 : encode _ quopri () を 使っ て エン コード する と 、 データ 中 の タブ 文字 や 空白 文字 も エン コード さ れ ます 。 
email . Errors モジュール で は 、 以下 の 例外 クラス が 定義 さ れ て い ます : 
例外 MessageError 
これ は email パッケージ が 発生 し うる すべて の 例外 の 基底 クラス です 。 
これ は 標準 の Exception クラス から 派生 し て おり 、 追加 の メソッド は まったく 定義 さ れ て い ませ ん 。 
例外 MessageParseError 
これ は Parser クラス が 発生 し うる 例外 の 基底 クラス です 。 
MessageError から 派生 し て い ます 。 
例外 HeaderParseError 
メッセージ の RFC 2822 ヘッダ を 解析 し て いる 途中 に ある 条件 で エラー が おこる と 発生 し ます 。 これ は MessageParseError から 派生 し て い ます 。 
メッセージ の RFC 2822 ヘッダ を 解析 し て いる 途中 に ある 条件 で エラー が おこる と 発生 し ます 。 これ は MessageParseError から 派生 し て い ます 。 
この 例外 は 、 Message オブジェクト に add _ payload () メソッド を 使っ て ペイ ロード を 追加 する とき 、 その ペイ ロード が すでに 単一 の 値 で ある ( 訳注 : リスト で ない ) に も かかわら ず 、 その メッセージ の Content - Type : ヘッダ の メイン タイプ が すでに 設定 さ れ て い て 、 それ が multipart 以外 に なっ て しまっ て いる 場合 に この 例外 が 発生 し ます 。 
MultipartConversionError は MessageError と 組み込み の TypeError を 両方 継承 し て い ます 。 Message . add _ payload () は もはや 推奨 さ れ ない メソッド の ため 、 この 例外 は ふつう めったに 発生 し ませ ん 。 
しかし この 例外 は attach () メソッド が MIMENonMultipart から 派生 し た クラス の インスタンス ( 例 : MIMEImage など ) に対して 呼ば れ た とき に も 発生 する こと が あり ます 。 
以下 は FeedParser が メッセージ の 解析 中 に 検出 する 障害 ( defect ) の 一覧 です 。 
注意 : これら の 障害 は 、 問題 が 見つかっ た メッセージ に 追加 さ れる ため 、 たとえば multipart / alternative 内 に ある ネスト し た メッセージ が 異常 な ヘッダ を もっ て い た 場合 に は 、 その ネスト し た メッセージ が 障害 を 持っ て いる が 、 その 親 メッセージ に は 障害 は ない と みなさ れ ます 。 すべて の 障害 クラス は email . Errors . MessageDefect の サブ クラス です が 、 これ は 例外 と は 違い ます ので 注意 し て ください 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 : All the defect classes were added 
N o BoundaryInMultipartDefect - メッセージ が multipart だ と 宣言 さ れ て いる のに 、 boundary パラメータ が ない 。 
S t artBoundaryNotFoundDefect - Content - Type : ヘッダ で 宣言 さ れ た 開始 境界 が ない 。 
F i r s t H e a d e rLineIsContinuationDefect - メッセージ の 最初 の ヘッダ が 継続 行 から 始まっ て いる 。 
M i s p lacedEnvelopeHeaderDefect - ヘッダ ブロック の 途中 に `` Unix From '' ヘッダ が ある 。 
MalformedHeaderDefect - コロン の ない ヘッダ が ある 、 あるいは それ 以外 の 異常 な ヘッダ で ある 。 
M u l t i p a r tInvariantViolationDefect - メッセージ が multipart だ と 宣言 さ れ て いる のに 、 サブ パート が 存在 し ない 。 
注意 : メッセージ が この 障害 を 持っ て いる とき 、 is _ multipart () メソッド は たとえ その content - type が multipart で あっ て も false を 返す こと が あり ます 。 
12 . 2 . 2 . 3 追加 事項 
よく ある 作業 の ひとつ は 、 メッセージ オブジェクト 構造 から フラット な 電子 メール テキスト を 生成 する こと です 。 
この 作業 は 
や 
モジュール を 使っ て メッセージ を 送信 し たり 、 メッセージ を コンソール に 出力 し たり する とき に 必要 に なり ます 。 
ある メッセージ オブジェクト 構造 を とっ て き て 、 そこ から フラット な テキスト 文書 を 生成 する の は Generator クラス の 仕事 です 。 
繰り返し に なり ます が 、 email . Parser 
モジュール と 同じく 、 この 機能 は 既存 の Generator だけ に 限ら れる わけ で は あり ませ ん 。 
Generator クラス で 公開 さ れ て いる メソッド に は 、 以下 の よう な もの が あり ます : クラス Generator 
これ は 、 この よう な 行 が Unix の mailbox 形式 の エンペローブヘッダ 区切り 文字 列 として 誤 認識 さ れる の を 防ぐ ため の 、 移植 性 ある 唯一 の 方法 です ( 詳しく は WHY THE CONTENT - LENGTH FORMAT IS BAD ( なぜ Content - Length 形式 が 有害 か ) を 参照 し て ください )。 
デフォルト で は mangle _ from _ は True に なっ て い ます が 、 Unix の mailbox 形式 ファイル に 出力 し ない の なら ば これ は False に 設定 し て も かまい ませ ん 。 オプション 引数 maxheaderlen は 連続 し て い ない ヘッダ の 最大 長 を 指定 し ます 。 
ひとつ の ヘッダ 行 が maxheaderlen ( これ は 文字数 です 、 tab は 空白 8 文字 に 展開 さ れ ます ) より も 長い 場合 、 ヘッダ は email . Header クラス で 定義 さ れ て いる よう に 途中 で 折り返さ れ 、 間 に は セミコロン が 挿入 さ れ ます 。 もし セミコロン が 見つから ない 場合 、 その ヘッダ は 放置 さ れ ます 。 
ヘッダ の 折り返し を 禁止 する に は この 値 に ゼロ を 指定 し て ください 。 
デフォルト は 78 文字 で 、 RFC 2822 で 推奨 さ れ て いる ( です が 強制 で は あり ませ ん ) 値 です 。 
これ 以外 の パブリック な Generator メソッド は 以下 の とおり です : 
msg を 基点 と する メッセージ オブジェクト 構造 体 の 文字 表現 を 出力 し ます 。 出力 先 の ファイル に は この Generator インスタンス が 作成 さ れ た とき に 指定 さ れ た もの が 使わ れ ます 。 
各 subpart は 深 さ 優先 順序 ( depth - first ) で 出力 さ れ 、 得 られる テキスト は 適切 に MIME エン コード さ れ た もの に なっ て い ます 。 オプション 引数 unixfrom は 、 基点 と なる メッセージ オブジェクト の 最初 の RFC 2822 ヘッダ が 現れる 前 に 、 エンペローブヘッダ 区切り 文字 列 を 出力 する こと を 強制 する フラグ です 。 
その メッセージ オブジェクト が エンペローブヘッダ を もた ない 場合 、 標準 的 な エンペローブヘッダ が 自動的 に 作成 さ れ ます 。 
デフォルト で は この 値 は False に 設定 さ れ て おり 、 エンペローブヘッダ 区切り 文字 列 は 出力 さ れ ませ ん 。 注意 : 各 subpart に関して は 、 エンペローブヘッダ は 出力 さ れ ませ ん 。 
この Generator インスタンス の 独立 し た クローン を 生成 し 返し ます 。 オプション は すべて 同一 に なっ て い ます 。 
文字 列 s を 既定 の ファイル に 出力 し ます 。 
ここ で いう 出力 先 は Generator コンス トラクタ に 渡し た outfp の こと を さし ます 。 
この 関数 は ただ 単に 拡張 print 文 で 使わ れる Generator インスタンス に対して ファイル 操作 風 の API を 提供 する ため だけ の もの です 。 
ユーザ の 便宜 を はかる ため 、 メソッド Message . as _ string () と str ( aMessage ) ( つまり Message .__ str __() の こと です ) を つかえ ば メッセージ オブジェクト を 特定 の 書式 で フォーマット さ れ た 文字 列 に 簡単 に 変換 する こと が でき ます 。 
詳細 は 
これ は DecodedGenerator と 呼ば れる もの で 、 Generator 基底 クラス と 似 て い ます が 、 非 text 型 の subpart を 特定 の 書式 で フォーマット さ れ た 表現 形式 で 置きかえる ところ が 違っ て い ます 。 
クラス DecodedGenerator 
この クラス は Generator から 派生 し た もの で 、 メッセージ の subpart を すべて 渡り歩き ます 。 
type - 非 text 型 subpart の MIME 形式 
maintype - 非 text 型 subpart の MIME 主 形式 ( maintype ) 
subtype - 非 text 型 subpart の MIME 副 形式 ( subtype ) 
filename - 非 text 型 subpart の ファイル 名 
description - 非 text 型 subpart に つけ られ た 説明 文字 列 
encoding - 非 text 型 subpart の Content - transfer - encoding 
fmt の デフォルト 値 は None です 。 
こう する と 以下 の 形式 で 出力 し ます : [ Non - text (%( type ) s ) part of message omitted , filename %( filename ) s ] 
訳注 : file - like object 12 . 2 . 3 . 1 Deprecated methods 
12 . 2 . 4 電子 メール および MIME オブジェクト を ゼロ から 作成 する 
RFC 2822 は 電子 メール メッセージ の 形式 を 規定 する 基本 規格 です 。 
これ は ほとんど の 電子 メール が ASCII 文字 のみ で 構成 さ れ て い た ころ 普及 し た RFC 822 標準 から 発展 し た もの です 。 
Message オブジェクト の 該当 フィールド に 文字 列 で は なく 、 Header インスタンス を 値 として 使う の です 。 たとえば : 
from email . Message import Message from email . Header import Header msg = Message () h = Header (' p \ xf 6 stal ', ' iso - 8859 - 1 ') msg [' Subject '] = h print msg . as _ string () Subject : ptal 
Subject : フィールド に 非 ASCII 文字 を ふくめ て いる こと に 注目 し て ください 。 
ここ で は 、 含め たい バイト 列 が エン コード さ れ て いる 文字 セット を 指定 し て Header インスタンス を 作成 する こと によって 実現 し て い ます 。 
のち に この Message インスタンス から フラット な テキスト を 生成 する さい に 、 この Subject : フィールド は RFC 2047 準拠 の 適切 な 形式 に エン コード さ れ ます 。 
MIME 機能 の つい て いる メーラ なら 、 この ヘッダ に 埋め こま れ た ISO - 8859 - 1 文字 を ただしく 表示 する でしょ う 。 
以下 は Header クラス の 説明 です : 
クラス Header 
別 の 文字 セット の 文字 列 を ふくむ MIME 準拠 な ヘッダ を 作成 し ます 。 
オプション 引数 s は ヘッダ の 値 の 初期 値 です 。 
これ が None の 場合 ( デフォルト )、 ヘッダ の 初期 値 は 設定 さ れ ませ ん 。 
もう ひとつ の 目的 は 、 これ 以降 charset 引数 を 省略 し た append () メソッド 呼び出し すべて における 、 デフォルト 文字 セット を 決定 する もの です 。 
コンス トラクタ に charset が 与え られ ない 場合 ( デフォルト )、 初期 値 の s および 以後 の append () 呼び出し における 文字 セット として us - ascii が 使わ れ ます 。 行 の 最大 長 は maxlinelen によって 明示 的 に 指定 でき ます 。 
最初 の 行 を ( Subject : など の s に 含ま れ ない フィールド ヘッダ の 責任 を とる ため ) 短く 切りとる 場合 、 header _ name に その フィールド 名 を 指定 し て ください 。 
ここ で 指定 さ れ た 文字 は 複数 にわたる 行 の 行頭 に 挿入 さ れ ます 。 オプション 引数 errors は 、 append () メソッド に そのまま 渡さ れ ます 。 
この MIME ヘッダ に 文字 列 s を 追加 し ます 。 オプション 引数 charset が もし 与え られ た 場合 、 これ は Charset インスタンス ( 
email . Charset を 参照 ) か 、 あるいは 文字 セット の 名前 で なけれ ば なり ませ ん 。 
この 場合 は Charset インスタンス に 変換 さ れ ます 。 
この 値 が None の 場合 ( デフォルト )、 コンス トラクタ で 与え られ た charset が 使わ れ ます 。 
s は バイト 文字 列 か 、 Unicode 文字 列 です 。 
これ ば バイト 文字 列 ( isinstance ( s , str ) が 真 ) の 場合 、 charset は その 文字 列 の エン コーディング で あり 、 これ が 与え られ た 文字 セット で うまく デコード でき ない とき は UnicodeError が 発生 し ます 。 いっぽう s が Unicode 文字 列 の 場合 、 charset は その 文字 列 の 文字 セット を 決定 する ため の ヒント として 使わ れ ます 。 
この 場合 、 RFC 2822 準拠 の ヘッダ は RFC 2047 の 規則 を もちい て 作成 さ れ 、 Unicode 文字 列 は 以下 の 文字 セット を ( この 優先 順位 で ) 適用 し て エン コード さ れ ます : us - ascii 、 charset で 与え られ た ヒント 、 それ も なけれ ば utf - 8 。 
最初 の 文字 セット は UnicodeError を なるべく ふせぐ ため に 使わ れ ます 。 オプション 引数 errors は unicode () 又は ustr . encode () の 呼び出し 時 に 使用 し 、 デフォルト 値 は `` strict '' です 。 
メッセージ ヘッダ を RFC に 沿っ た やり方 で エン コード し ます 。 おそらく 長い 行 は 折り返さ れ 、 非 ASCII 部分 は base 64 または quoted - printable エン コーディング で 包含 さ れる でしょ う 。 
オプション 引数 splitchars に は 長い ASCII 行 を 分割 する 文字 の 文字 列 を 指定 し 、 RFC 2822 の highest level syntactic breaks の 大まか な サポート の 為 に 使用 し ます 。 
この 引数 は RFC 2047 で エン コード さ れ た 行 に は 影響 し ませ ん 。 
Header クラス は 、 標準 の 演算 子 や 組み込み 関数 を サポート する ため の メソッド も いくつ か 提供 し て い ます 。 
Header . encode () と 同じ です 。 
str ( aHeader ) など と する と 有用 でしょ う 。 
組み込み の unicode () 関数 の 補助 です 。 
ヘッダ を Unicode 文字 列 として 返し ます 。 
この メソッド は 、 ふたつ の Header インスタンス どうし が 等しい か どう か 判定 する の に 使え ます 。 
この メソッド は 、 ふたつ の Header インスタンス どうし が 異なっ て いる か どう か を 判定 する の に 使え ます 。 
さらに 、 email . Header モジュール は 以下 の よう な 便宜 的 な 関数 も 提供 し て い ます 。 
decode _ header () によって 返さ れる 2 要素 タプル の リスト から Header インスタンス を 作成 し ます 。 
decode _ header () は ヘッダ の 値 を とっ て き て 、 ( decoded _ string , charset ) という 形式 の 2 要素 タプル から なる リスト を 返し ます 。 
ここ で decoded _ string は デコード さ れ た 文字 列 、 charset は その 文字 セット です 。 この 関数 は これら の リスト の 項目 から 、 Header インスタンス を 返し ます 。 
オプション 引数 maxlinelen 、 header _ name および continuation _ ws は Header コンス トラクタ に 与える もの と 同じ です 。 
Message . walk () メソッド を 使う と 、 簡単 に メッセージオブジェクトツリー 内 を 次 から 次 へ と たどる ( iteration ) こと が でき ます 。 
email . Iterators モジュール は この ため の 高水準 イテレータ を いくつ か 提供 し ます 。 
この イテレータ は msg 中 の すべて の サブ パート に 含ま れる ペイ ロード を すべて 順 に たどっ て いき 、 ペイ ロード 内 の 文字 列 を 1 行 ずつ 返し ます 。 
サブ パート の ヘッダ は すべて 無視 さ れ 、 Python 文字 列 で ない ペイ ロード から なる サブ パート も 無視 さ れ ます 。 
これ は readline () を 使っ て 、 ファイル から メッセージ を ( ヘッダ だけ とばし て ) フラット な テキスト として 読む の に いくぶん 似 て いる かも しれ ませ ん 。 
オプション 引数 decode は 、 Message . get _ payload () に そのまま 渡さ れ ます 。 typed _ subpart _ iterator 
以下 の 関数 は 役に立つ デバッグ 用 ツール として 追加 さ れ た もの で 、 パッケージ として 公式 な サポート の ある インター フェイス で は あり ませ ん 。 
その メッセージ オブジェクト 構造 の content - type を インデント つき で 表示 し ます 。 
たとえば : 
12 . 2 . 1 . 1 推奨 さ れ ない メソッド 
Message クラス は 、 email パッケージ の 中心 と なる クラス です 。 これ は email オブジェクト モデル の 基底 クラス に なっ て い ます 。 
Message は ヘッダ フィールド を 検索 し たり メッセージ 本体 に アクセス する ため の 核 と なる 機能 を 提供 し ます 。 概念的 に は 、 Message オブジェクト に は ヘッダ と ペイ ロード が 格納 さ れ て い ます 。 
ヘッダ は 、 RFC 2822 形式 の フィールド 名 および フィールド 値 が コロン で 区切ら れ た もの です 。 
コロン は フィールド 名 または フィールド 値 の どちら に も 含ま れ ませ ん 。 ヘッダ は 大文字 小文字 を 区別 し た 形式 で 保存 さ れ ます が 、 ヘッダ 名 が 一致 する か どう か の 検査 は 大文字 小文字 を 区別 せ ず に おこなう こと が でき ます 。 
Unix - From ヘッダ または From _ ヘッダ として 知ら れる エンベロープ ヘッダ が ひとつ 存在 する こと も あり ます 。 
ペイ ロード は 、 単純 な メッセージ オブジェクト の 場合 は 単なる 文字 列 です が 、 MIME コンテナ 文書 ( multipart /* または message / rfc 822 など ) の 場合 は Message オブジェクト の リスト に なっ て い ます 。 
Message オブジェクト は 、 メッセージ ヘッダ に アクセス する ため の マップ ( 辞書 ) 形式 の インタフェイス と 、 ヘッダ および ペイ ロード の 両方 に アクセス する ため の 明示 的 な インタフェイス を 提供 し ます 。 
これ に は メッセージオブジェクトツリー から フラット な テキスト 文書 を 生成 し たり 、 一般 的 に 使わ れる ヘッダ の パラメータ に アクセス し たり 、 また オブジェクト ツリー を 再帰 的 に たどっ たり する ため の 便利 な メソッド を 含み ます 。 
Message クラス の メソッド は 以下 の とおり です : クラス Message 
コンス トラクタ は 引数 を とり ませ ん 。 
メッセージ 全体 を フラット な 文字 列 として 返し ます 。 
たとえば 、 これ は デフォルト で は From で 始まる 行 を 変更 し て しまい ます 。 
以下 の 例 の よう に Generator の インスタンス を 生成 し て flatten () メソッド を 直接 呼び出せ ば より 柔軟 な 処理 を 行う 事 が でき ます 。 
as _ string ( unixfrom = True ) と 同じ です 。 
メッセージ の ペイ ロード が 子 Message オブジェクト から なる リスト で あれ ば True を 返し 、 そう で なけれ ば False を 返し ます 。 
is _ multipart () が False を 返し た 場合 は 、 ペイ ロード は 文字 列 オブジェクト で ある 必要 が あり ます 。 
メッセージ の エンベロープ ヘッダ を unixfrom に 設定 し ます 。 
これ は 文字 列 で ある 必要 が あり ます 。 get _ unixfrom 
メッセージ の エンベロープ ヘッダ を 返し ます 。 
エンベロープ ヘッダ が 設定 さ れ て い ない 場合 は None が 返さ れ ます 。 
ペイ ロード に スカラー オブジェクト ( 文字 列 など ) を 格納 し たい 場合 は 、 かわり に set _ payload () を 使っ て ください 。 
現在 の ペイ ロード へ の 参照 を 返し ます 。 これ は is _ multipart () が True の 場合 Message オブジェクト の リスト に なり 、 is _ multipart () が False の 場合 は 文字 列 に なり ます 。 
ペイ ロード が リスト の 場合 、 リスト を 変更 する こと は その メッセージ の ペイ ロード を 変更 する こと に なり ます 。 オプション 引数 の i が ある 場合 、 is _ multipart () が True なら ば get _ payload () は ペイ ロード 中 で 0 から 数え て i 番目 の 要素 を 返し ます 。 
i が 0 より 小さい 場合 、 あるいは ペイ ロード の 個数 以上 の 場合 は IndexError が 発生 し ます 。 
これ 以外 の エン コーディング が 使わ れ て いる 場合 、 Content - Transfer - Encoding : ヘッダ が ない 場合 、 あるいは 曖昧 な base 64 データ が 含ま れる 場合 は 、 ペイ ロード は そのまま ( デコード さ れ ず に ) 返さ れ ます 。 
もし メッセージ が multipart で decode フラグ が True の 場合 は None が 返さ れ ます 。 
decode の デフォルト 値 は False です 。 
メッセージ 全体 の オブジェクト の ペイ ロード を payload に 設定 し ます 。 
ペイ ロード の 形式 を ととのえる の は 呼び出し 側 の 責任 です 。 
オプション の charset は メッセージ の デフォルト 文字 セット を 設定 し ます 。 詳しく は set _ charset () を 参照 し て ください 。 
バージョン 2 . 2 . 2 で 変更 さ れ た 仕様 : charset 引数 の 追加 
ペイ ロード の 文字 セット を charset に 変更 し ます 。 ここ に は Charset インスタンス ( 
参照 )、 文字 セット 名 を あらわす 文字 列 、 あるいは None の いずれ か が 指定 でき ます 。 
文字 列 を 指定 し た 場合 、 これ は Charset インスタンス に 変換 さ れ ます 。 
charset が None の 場合 、 charset パラメータ は Content - Type : ヘッダ から 除去 さ れ ます 。 
これ 以外 の もの を 文字 セット として 指定 し た 場合 、 TypeError が 発生 し ます 。 ここ で いう メッセージ と は 、 charset . input _ charset で エン コード さ れ た text /* 形式 の もの を 仮定 し て い ます 。 
これ は 、 もし 必要 と あら ば プレーンテキスト 形式 を 変換 する さい に charset . output _ charset の エン コード に 変換 さ れ ます 。 
MIME ヘッダ ( MIME - Version :, Content - Type :, Content - Transfer - Encoding :) は 必要 に 応じ て 追加 さ れ ます 。 
その メッセージ 中 の ペイ ロード の Charset インスタンス を 返し ます 。 バージョン 2 . 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
以下 の メソッド は 、 メッセージ の RFC 2822 ヘッダ に アクセス する ため の マップ ( 辞書 ) 形式 の インタフェイス を 実装 し た もの です 。 
これら の メソッド と 、 通常 の マップ ( 辞書 ) 型 は まったく 同じ 意味 を もつ わけ で は ない こと に 注意 し て ください 。 
たとえば 辞書 型 で は 、 同じ キー が 複数 ある こと は 許さ れ て い ませ ん が 、 ここ で は 同じ メッセージ ヘッダ が 複数 ある 場合 が あり ます 。 
また 、 辞書 型 で は keys () で 返さ れる キー の 順序 は 保証 さ れ て い ませ ん が 、 Message オブジェクト 内 の ヘッダ は つねに 元 の メッセージ 中 に 現れ た 順序 、 あるいは その あと に 追加 さ れ た 順序 で 返さ れ ます 。 
複製 さ れ た もの も ふくめ て ヘッダ 数 の 合計 を 返し ます 。 
この メソッド は 以下 の よう に in 演算 子 で 使わ れ ます : 
指定 さ れ た 名前 の ヘッダ フィールド の 値 を 返し ます 。 name は 最後 に コロン を ふくん で い て は いけ ませ ん 。 
その ヘッダ が ない 場合 は None が 返さ れ 、 KeyError 例外 は 発生 し ませ ん 。 注意 : 指定 さ れ た 名前 の フィールド が メッセージ の ヘッダ に 2 回 以上 現れ て いる 場合 、 どちら の 値 が 返さ れる か は 未定義 です 。 
ヘッダ に 存在 する フィールド の 値 を すべて 取り出し たい 場合 は get _ all () メソッド を 使っ て ください 。 
メッセージ ヘッダ に name という 名前 の val という 値 を もつ フィールド を あらた に 追加 し ます 。 
この フィールド は 現在 メッセージ に 存在 する フィールド の いちばん 後 に 追加 さ れ ます 。 
注意 : この メソッド で は 、 すでに 同一 の 名前 で 存在 する フィールド は 上書き さ れ ませ ん 。 もし メッセージ が 名前 name を もつ フィールド を ひとつ しか 持た ない よう に し たけれ ば 、 最初 に それ を 除去 し て ください 。 
たとえば : del msg [' subject '] msg [' subject '] = ' PythonPythonPython !' 
メッセージ の ヘッダ から 、 name という 名前 を もつ フィールド を すべて 除去 し ます 。 
たとえ この 名前 を もつ ヘッダ が 存在 し て い なく て も 例外 は 発生 し ませ ん 。 
メッセージ が name という 名前 を もつ ヘッダ フィールド を 持っ て いれ ば 真 を 、 そう で なけれ ば 偽 を 返し ます 。 
メッセージ 中 に ある すべて の ヘッダ の フィールド 名 の リスト を 返し ます 。 
メッセージ 中 に ある すべて の フィールド の 値 の リスト を 返し ます 。 
メッセージ 中 に ある すべて の ヘッダ の フィールド 名 と その 値 を 2 - タプル の リスト として 返し ます 。 
指定 さ れ た 名前 を もつ フィールド の 値 を 返し ます 。 
これ は 指定 さ れ た 名前 が ない とき に オプション 引数 の failobj ( デフォルト で は None ) を 返す こと を のぞけ ば 、 __ getitem __() と 同じ です 。 
役に立つ メソッド を いくつ か 紹介 し ます : 
name の 名前 を もつ フィールド の すべて の 値 から なる リスト を 返し ます 。 
該当 する 名前 の ヘッダ が メッセージ 中 に 含ま れ て い ない 場合 は failobj ( デフォルト で は None ) が 返さ れ ます 。 
拡張 ヘッダ 設定 。 
この メソッド は __ setitem __() と 似 て い ます が 、 追加 の ヘッダ ・ パラメータ を キーワード 引数 で 指定 できる ところ が 違っ て い ます 。 
パラメータ の 値 が None の とき は キー のみ が 追加 さ れ ます 。 例 を 示し ましょ う : 
こう する と ヘッダ に は 以下 の よう に 追加 さ れ ます 。 
ヘッダ の 置換 。 
_ name と 一致 する ヘッダ で 最初 に 見つかっ た もの を 置き換え ます 。 この とき ヘッダ の 順序 と フィールド 名 の 大文字 小文字 は 保存 さ れ ます 。 
一致 する ヘッダ が ない 場合 、 KeyError が 発生 し ます 。 
その メッセージ の content - type を 返し ます 。 
返さ れ た 文字 列 は 強制 的 に 小文字 で maintype / subtype の 形式 に 変換 さ れ ます 。 
メッセージ 中 に Content - Type : ヘッダ が ない 場合 、 デフォルト の content - type は get _ default _ type () が 返す 値 によって 与え られ ます 。 
RFC 2045 に よれ ば メッセージ は つねに デフォルト の content - type を もっ て いる ので 、 get _ content _ type () は つねに なんらかの 値 を 返す はず です 。 
RFC 2045 は メッセージ の デフォルト content - type を 、 それ が multipart / digest コンテナ に 現れ て いる とき 以外 は text / plain に 規定 し て い ます 。 ある メッセージ が multipart / digest コンテナ 中 に ある 場合 、 その content - type は message / rfc 822 に なり ます 。 
もし Content - Type : ヘッダ が 適切 で ない content - type 書式 だっ た 場合 、 RFC 2045 は それ の デフォルト を text / plain として 扱う よう 定め て い ます 。 
その メッセージ の 主 content - type を 返し ます 。 
これ は get _ content _ type () によって 返さ れる 文字 列 の maintype 部分 です 。 
その メッセージ の 副 content - type ( sub content - type 、 subtype ) を 返し ます 。 
これ は get _ content _ type () によって 返さ れる 文字 列 の subtype 部分 です 。 
デフォルト の content - type を 返し ます 。 
ほど ん どの メッセージ で は デフォルト の content - type は text / plain です が 、 メッセージ が multipart / digest コンテナ に 含ま れ て いる とき だけ 例外 的 に message / rfc 822 に なり ます 。 
デフォルト の content - type を 設定 し ます 。 ctype は text / plain あるいは message / rfc 822 で ある 必要 が あり ます が 、 強制 で は あり ませ ん 。 
デフォルト の content - type は ヘッダ の Content - Type : に は 格納 さ れ ませ ん 。 
メッセージ の Content - Type : パラメータ を リスト として 返し ます 。 
返さ れる リスト は キー / 値 の 組 から なる 2 要素 タプル が 連なっ た もの で あり 、 これら は "=" 記号 で 分離 さ れ て い ます 。 
"=" の 左側 は キー に なり 、 右側 は 値 に なり ます 。 パラメータ 中 に "=" が なかっ た 場合 、 値 の 部分 は 空文字 列 に なり 、 そう で なけれ ば その 値 は get _ param () で 説明 さ れ て いる 形式 に なり ます 。 
また 、 オプション 引数 unquote が True ( デフォルト ) で ある 場合 、 この 値 は unquote さ れ ます 。 オプション 引数 failobj は 、 Content - Type : ヘッダ が 存在 し なかっ た 場合 に 返す オブジェクト です 。 
オプション 引数 header に は Content - Type : の かわり に 検索 す べき ヘッダ を 指定 し ます 。 
バージョン 2 . 2 . 2 で 変更 さ れ た 仕様 : unquote が 追加 さ れ まし た 
メッセージ の Content - Type : ヘッダ 中 の パラメータ param を 文字 列 として 返し ます 。 
返り 値 は 文字 列 か 3 要素 の タプル で 、 タプル に なる の は パラメータ が RFC 2231 エン コード さ れ て いる 場合 です 。 
3 要素 タプル の 場合 、 各 要素 の 値 は ( CHARSET , LANGUAGE , VALUE ) の 形式 に なっ て い ます 。 
CHARSET と LAGUAGE は None に なる こと が あり 、 その 場合 VALUE は us - ascii 文字 セット で エン コード さ れ て いる と みなさ ね ば なら ない ので 注意 し て ください 。 
普段 は LANGUAGE を 無視 でき ます 。 この 関数 を 使う アプリケーション が 、 パラメータ が RFC 2231 形式 で エン コード さ れ て いる か どう か を 気 に し ない の で あれ ば 、 email . Utils . collapse _ rfc 2231 _ value () に get _ param () の 返り 値 を 渡し て 呼び出す こと で 、 この パラメータ を ひとつ に まとめる こと が でき ます 。 
この 値 が タプル なら ば この 関数 は 適切 に デコード さ れ た Unicode 文字 列 を 返し 、 そう で ない 場合 は unquote さ れ た 元 の 文字 列 を 返し ます 。 
たとえば : 
いずれ の 場合 も パラメータ の 値 は ( 文字 列 で あれ 3 要素 タプル の VALUE 項目 で あれ ) つねに unquote さ れ ます 。 ただし 、 unquote が False に 指定 さ れ て いる 場合 は unquote さ れ ませ ん 。 
バージョン 2 . 2 . 2 で 変更 さ れ た 仕様 : unquote 引数 の 追加 、 3 要素 タプル が 返り 値 に なる 可能 性 あり 
Content - Type : ヘッダ 中 の パラメータ を 設定 し ます 。 
指定 さ れ た パラメータ が ヘッダ 中 に すでに 存在 する 場合 、 その 値 は value に 置き換え られ ます 。 
オプション 引数 language は RFC 2231 の 言語 を 指定 し ます が 、 デフォルト で は これ は 空文字 列 と なり ます 。 
charset と language は どちら も 文字 列 で ある 必要 が あり ます 。 
指定 さ れ た パラメータ を Content - Type : ヘッダ 中 から 完全 に とりのぞき ます 。 
ヘッダ は その パラメータ と 値 が ない 状態 に 書き換え られ ます 。 
requote が False で ない 限り ( デフォルト で は True です )、 すべて の 値 は 必要 に 応じ て quote さ れ ます 。 
オプション 変数 header が 与え られ た 場合 、 Content - Type : の かわり に その ヘッダ が 使用 さ れ ます 。 
type は maintype / subtype という 形 の 文字 列 で なけれ ば なり ませ ん 。 
それ 以外 の 場合 は ValueError が 発生 し ます 。 この メソッド は Content - Type : ヘッダ を 置き換え ます が 、 すべて の パラメータ は そのまま に し ます 。 
その メッセージ 中 の Content - Disposition : ヘッダ に ある 、 filename パラメータ の 値 を 返し ます 。 目的 の ヘッダ が 欠け て い たり 、 filename パラメータ が ない 場合 に は failobj が 返さ れ ます 。 
返さ れる 文字 列 は つねに Utils . unquote () によって unquote さ れ ます 。 get _ boundary 
その メッセージ 中 の Content - Type : ヘッダ に ある 、 boundary パラメータ の 値 を 返し ます 。 
目的 の ヘッダ が 欠け て い たり 、 boundary パラメータ が ない 場合 に は failobj が 返さ れ ます 。 
返さ れる 文字 列 は つねに Utils . unquote () によって unquote さ れ ます 。 
メッセージ 中 の Content - Type : ヘッダ に ある 、 boundary パラメータ に 値 を 設定 し ます 。 
その メッセージ 中 の Content - Type : ヘッダ に ある 、 charset パラメータ の 値 を 返し ます 。 値 は すべて 小文字 に 変換 さ れ ます 。 
メッセージ 中 に 含ま れる 文字 セット の 名前 を すべて リスト に し て 返し ます 。 
しかし 、 その subpart が Content - Type : を もっ て ない か 、 charset が ない か 、 あるいは MIME maintype が text で ない いずれ か の 場合 に は 、 リスト の 要素 として failobj が 返さ れ ます 。 
walk () メソッド は 多 目的 の ジェネレータ で 、 これ は ある メッセージオブジェクトツリー 中 の すべて の part および subpart を わたり 歩く の に 使え ます 。 
Message オブジェクト は オプション として 2 つ の インスタンス 属性 を とる こと が でき ます 。 これ は ある MIME メッセージ から プレーンテキスト を 生成 する の に 使う こと が でき ます 。 
MIME ドキュメント の 形式 で は 、 ヘッダ 直後 に くる 空 行 と 最初 の multipart 境界 を あらわす 文字 列 の あいだ に いくら か の テキスト ( 訳注 : preamble , 序文 ) を 埋め こむ こと を 許し て い ます 。 この テキスト は 標準 的 な MIME の 範疇 から はみ出し て いる ので 、 MIME 形式 を 認識 する メール ソフト から これら は 通常 まったく 見え ませ ん 。 
しかし メッセージ の テキスト を 生 で 見る 場合 、 あるいは メッセージ を MIME 対応 し て い ない メール ソフト で 見る 場合 、 この テキスト は 目 に 見える こと に なり ます 。 preamble 属性 は MIME ドキュメント に 加える この 最初 の MIME 範囲 外 テキスト を 含ん で い ます 。 
Parser が ある テキスト を ヘッダ 以降 に 発見 し た が 、 それ は まだ 最初 の MIME 境界 文字 列 が 現れる 前 だっ た 場合 、 パーザ は その テキスト を メッセージ の preamble 属性 に 格納 し ます 。 
を 参照 し て ください 。 
epilogue 属性 は メッセージ の 最後 の MIME 境界 文字 列 から メッセージ 末尾 まで の テキスト を 含む もの で 、 それ 以外 は preamble 属性 と 同じ です 。 注意 : multipart メッセージ から フラット な テキスト を 生成 する とき 、 ( 標準 的 な Generator を 使っ た として ) も しそ の メッセージ に epilogue が ない 場合 、 最後 の MIME 境界 文字 列 の あと に は 改行 文字 が 追加 さ れ ませ ん 。 
もし その メッセージ オブジェクト が epilogue を もっ て おり 、 それ が 改行 文字 から 始まっ て い ない 場合 、 改行 文字 が MIME 境界 文字 列 の あと に 追加 さ れ ます 。 
これ は やや ぶかっこう に 見え ます が 、 ほとんど の 場合 は これ で うまく いき ます 。 
要するに 、 もし multipart 境界 の あと に かならず 改行 を 入れる よう に し たけれ ば 、 epilogue に 空文字 列 を 入れ て おけ ば よい の です 。 
12 . 2 . 1 . 1 推奨 さ れ ない メソッド 
この パーザ に 文字 列 あるいは ファイル オブジェクト を 渡せ ば 、 パーザ は その オブジェクト 構造 の 基底 と なる ( root の ) Message インスタンス を 返し ます 。 
簡単 な 非 MIME メッセージ で あれ ば 、 この 基底 オブジェクト の ペイ ロード は たんに メッセージ の テキスト を 格納 する 文字 列 に なる でしょ う 。 
旧式 の Parser API は メッセージ 全体 の テキスト が 文字 列 として すでに メモリ 上 に ある か 、 それ が ローカル な ファイル システム 上 に 存在 し て いる とき に は 問題 あり ませ ん 。 
FeedParser は メッセージ を 読み込む とき に 、 その ストリーム が 入力 待ち の ため に ブロック さ れる よう な 場合 ( ソケット から email メッセージ を 読み込む 時 など ) に 、 より 有効 です 。 
FeedParser は 漸進 的 に メッセージ を 読み込み 、 解析 し ます 。 パーザ を close し た とき に は 根っこ ( root ) の オブジェクト のみ が 返さ れ ます 
12 . 1 。 
この パーザ は 、 ある 制限 さ れ た 方法 で 拡張 でき ます 。 また 、 もちろん 自分 で ご 自分 の パーザ を 完全 に 無から 実装 する こと も でき ます 。 
email パッケージ に つい て いる パーザ と Message クラス の 間 に 隠さ れ た 秘密 の 関係 は なに も あり ませ ん ので 、 ご 自分 で 実装 さ れ た パーザ も 、 それ が 必要 と する やり かた で メッセージオブジェクトツリー を 作成 する こと が でき ます 。 
... 返さ れ ます 12 . 1 
Python 2 . 4 から 導入 さ れ た email パッケージ バージョン 3 . 0 で は 、 旧式 の Parser は FeedParser によって 書き直さ れ まし た 。 
その ため パーザ の 意味 論 と 得 られる 結果 は 2 つ の パーザ で 同一 の もの に なり ます 。 
12 . 2 . 2 . 2 Parser クラス API 
email . Utils モジュール で は いくつ か の 便利 な ユーティリティ を 提供 し て い ます 。 
文字 列 str 内 の バックス ラッシュ を バックス ラッシュ 2 つ に 置換 し た 新しい 文字 列 を 返し ます 。 また 、 ダブル クォート は バックス ラッシュ + ダブル クォート に 置換 さ れ ます 。 
文字 列 str を 逆 クォート し た 新しい 文字 列 を 返し ます 。 もし str の 先頭 あるいは 末尾 が ダブル クォート だっ た 場合 、 これら は 単に 切り おとさ れ ます 。 
同様 に もし str の 先頭 あるいは 末尾 が 角 ブラケット (、) だっ た 場合 も 切り おとさ れ ます 。 
アドレス を パーズ し ます 。 
To : や Cc : の よう な アドレス を ふくん だ フィールド の 値 を 与える と 、 構成 部分 の 実名 と 電子 メールアドレス を 取り出し ます 。 パーズ に 成功 し た 場合 、 これら の 情報 を タプル ( realname , email _ address ) に し て 返し ます 。 
失敗 し た 場合 は 2 要素 の タプル ('', '') を 返し ます 。 
parseaddr () の 逆 で 、 実名 と 電子 メールアドレス から なる 2 要素 の タプル ( realname , email _ address ) を 引数 に とり 、 To : あるいは Cc : ヘッダ に 適し た 形式 の 文字 列 を 返し ます 。 
タプル pair の 第 1 要素 が 偽 で ある 場合 、 第 2 要素 の 値 を そのまま 返し ます 。 
この メソッド は 2 要素 タプル の リスト を parseaddr () と 同じ 形式 で 返し ます 。 fieldvalues は たとえば Message . get _ all () が 返す よう な 、 ヘッダ の フィールド 値 から なる シーケンス です 。 
以下 は ある 電子 メール メッセージ から すべて の 受け取り 人 を 得る 一 例 です : 
日付 の 解析 に 成功 し た 場合 、 parsedate () は 関数 time . mktime () に 直接 渡せる 形式 の 9 要素 から なる タプル を 返し 、 失敗 し た 場合 は None を 返し ます 。 
返さ れる タプル の 6 、 7 、 8 番目 の フィールド は 有効 で は ない ので 注意 し て ください 。 
parsedate () と 同様 の 機能 を 提供 し ます が 、 None または 10 要素 の タプル を 返す ところ が 違い ます 。 
最初 の 9 つ の 要素 は time . mktime () に 直接 渡せる 形式 の もの で あり 、 最後 の 10 番目 の 要素 は 、 その 日付 の 時間 帯 の UTC ( グリニッジ 標準時 の 公式 な 呼び名 です ) に対する オフセット です 
入力 さ れ た 文字 列 に 時間 帯 が 指定 さ れ て い なかっ た 場合 、 10 番目 の 要素 に は None が 入り ます 。 
タプル の 6 、 7 、 8 番目 の フィールド は 有効 で は ない ので 注意 し て ください 。 
parsedate _ tz () が 返す 10 要素 の タプル を UTC の タイム スタンプ に 変換 し ます 。 
与え られ た 時間 帯 が None で ある 場合 、 時間 帯 として 現地 時間 ( localtime ) が 仮定 さ れ ます 。 
マイナー な 欠点 : mktime _ tz () は まず tuple の 最初 の 8 要素 を localtime として 変換 し 、 つぎ に 時間 帯 の 差 を 加味 し て い ます 。 
夏時間 を 使っ て いる 場合 に は 、 これ は 通常 の 使用 に は さしつかえ ない ものの 、 わずか な 誤差 を 生じる かも しれ ませ ん 。 
日付 を RFC 2822 形式 の 文字 列 で 返し ます 。 
例 : Fri , 09 Nov 2001 01 : 08 : 47 - 0000 
オプション として float 型 の 値 を もつ 引数 timeval が 与え られ た 場合 、 これ は time . gmtime () および time . localtime () に 渡さ れ ます 。 
それ 以外 の 場合 、 現在 の 時刻 が 使わ れ ます 。 
これ は ( HTTP など の ) いくつ か の プロトコル で 必要 です 。 
この 機能 は localtime が False の とき のみ 適用 さ れ ます 。 
RFC 2822 準拠 形式 の Message - ID : ヘッダ に 適し た 文字 列 を 返し ます 。 
オプション 引数 idstring が 文字 列 として 与え られ た 場合 、 これ は メッセージ ID の 一意 性 を 高める の に 利用 さ れ ます 。 
RFC 2231 に従って 文字 列 s を デコード し ます 。 
RFC 2231 に従って s を エン コード し ます 。 
オプション 引数 charset および language が 与え られ た 場合 、 これら は 文字 セット 名 と 言語 名 として 使わ れ ます 。 
もし これら の どちら も 与え られ て い ない 場合 、 s は そのまま 返さ れ ます 。 
charset は 与え られ て いる が language が 与え られ て い ない 場合 、 文字 列 s は language の 空文字 列 を 使っ て エン コード さ れ ます 。 
オプション 引数 errors は built - in で ある unicode () 関数 の 引数 errors に 渡さ れ ます 。 この デフォルト 値 は replace と なっ て い ます 。 
オプション 引数 fallback _ charset は 、 もし RFC 2231 ヘッダ の 使用 し て いる 文字 セット が Python の 知っ て いる もの で は なかっ た 場合 の 非 常用 文字 セット として 使わ れ ます 。 デフォルト で は 、 この 値 は us - ascii です 。 
RFC 2231 に従って パラメータ の リスト を デコード し ます 。 params は ( content - type , string - value ) の よう な 形式 の 2 要素 から なる タプル です 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : dump _ address _ pair () 関数 は 撤去 さ れ まし た 。 かわり に formataddr () 関数 を 使っ て ください 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : decode () 関数 は 撤去 さ れ まし た 。 かわり に Header . decode _ header () メソッド を 使っ て ください 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : encode () 関数 は 撤去 さ れ まし た 。 
かわり に Header . encode () メソッド を 使っ て ください 。 
... に対する オフセット です 
注意 : この 時間 帯 の オフセット 値 は time . timezone の 値 と 符合 が 逆 です 。 
これ は time . timezone が POSIX 標準 に 準拠 し て いる の に対して 、 こちら は RFC 2822 に 準拠 し て いる から です 。 
12 . 2 . 1 電子 メール メッセージ の 表現 
email パッケージ は 電子 メール の メッセージ を 管理 する ライブラリ です 。 これ に は MIME や それ 以外 の RFC 2822 ベース の メッセージ 文書 も ふくま れ ます 。 
この パッケージ は いくつ か の 古い 標準 パッケージ 、 
など に ふくま れ て い た 機能 の ほとんど を 持ち 、 くわえ て 標準 で は なかっ た mimecntl など の 機能 も ふくん で い ます 。 
この パッケージ は 、 とくに 電子 メール の メッセージ を SMTP ( RFC 2821 ) サーバ に 送信 する ため に 作ら れ て いる という わけ で は あり ませ ん 。 それ は 
モジュール の 機能 です 。 
email パッケージ は RFC 2822 に 加え て 、 RFC 2045 , RFC 2046 , RFC 2047 および RFC 2231 など MIME 関連 の RFC を サポート し て おり 、 できる かぎり RFC に 準拠 する こと を めざし て い ます 。 email パッケージ の 一番 の 特徴 は 、 電子 メール の 内部 表現 で ある オブジェクト モデル と 、 電子 メール メッセージ の 解析 および 生成 と を 分離 し て いる こと です 。 
email パッケージ を 使う アプリケーション は 基本 的 に は オブジェクト を 処理 する こと が でき ます 。 メッセージ に 子 オブジェクト を 追加 し たり 、 メッセージ から 子 オブジェクト を 削除 し たり 、 内容 を 完全 に 並べかえ たり 、 と いっ た こと が でき ます 。 
フラット な テキスト 文書 から オブジェクト モデル へ の 変換 、 また そこ から フラット な 文書 へ と 戻す 変換 は それぞれ 別々 の 解析 器 ( パーサ ) と 生成 器 ( ジェネレータ ) が 担当 し て い ます 。 
また 、 一般 的 な MIME オブジェクト タイプ の いくつ か について は 手軽 な サブ クラス が 存在 し て おり 、 メッセージ フィールド 値 を 抽出 し たり 解析 し たり 、 RFC 準拠 の 日付 を 生成 し たり など の よく お こわ れる タスク について は いくつ か の 雑用 ユーティリティ も つい て い ます 。 
この 場合 も 上 と 似 た よう な 作業 順序 に なる でしょ う 。 また ここ に は email パッケージ が 提供 する すべて の クラス および モジュール に関する 説明 と 、 email パッケージ を 使っ て いく うえ で 遭遇 する かも しれ ない 例外 クラス 、 いくつ か の 補助 ユーティリティ 、 そして 少々 の サンプル も 含ま れ て い ます 。 
古い mimelib や 前 バージョン の email パッケージ の の ユーザ の ため に 、 現行 バージョン と の 違い と 移植 について の 節 も 設け て あり ます 。 
SMTP プロトコル クライアント . 
12 . 2 . 1 電子 メール メッセージ の 表現 
この モジュール で は RFC 3490 ( アプリケーション における 国際 化 ドメイン 名 , IDNA : Internationalized Domain Names inApplications ) および RFC 3492 ( Nameprep : 国際 化 ドメイン 名 ( IDN ) の ため の stringprep プロファイル ) を 実装 し て い ます 。 
この モジュール は punycode エン コーディング および stringprep の 上 に 構築 さ れ て い ます 。 
これら の RFC は ともに 、 非 ASCII 文字 の 入っ た ドメイン 名 を サポート する ため の プロトコル を 定義 し て い ます 。 
(`` www . Alliancefranaise . nu '' の よう な ) 非 ASCII 文字 を 含む ドメイン 名 は 、 ASCII と 互換 性 の ある エン コーディング ( ACE 、 `` www . xn - alliancefranaise - npb . nu '' の よう な 形式 ) に 変換 さ れ ます 。 
ドメイン 名 の ACE 形式 は 、 DNS クエリ 、 HTTP Host : フィールド など といった 、 プロトコル 中 で 任意 の 文字 を 使え ない よう な 全て の 局面 で 用い られ ます 。 
この 変換 は アプリケーション 内 で 行わ れ ます ; 可能 なら ユーザ から は 不可視 と なり ます : アプリケーション は Unicode ドメイン ラベル を ワイヤ 上 に 載せる 際 に IDNA に 、 ACE ドメイン ラベル を ユーザ に 提供 する 前 に Unicode に 、 それぞれ 透過 的 に 変換 し なけれ ば なり ませ ん 。 
Python で は この 変換 を いくつ か の 方法 で サポート し ます : idnacodec は Unicode と ACE 間 の 変換 を 行い ます 。 
さらに 、 socket モジュール は Unicode ホスト 名 を ACE に 透過 的 に 変換 する ため 、 アプリケーション は ホスト 名 を socket モジュール に 渡す 際 に ホスト 名 の 変換 に 煩わさ れる こと が あり ませ ん 。 
( 逆 引き など によって ) ワイヤ 越し に ホスト 名 を 受信 する 際 、 Unicode へ の 自動 変換 は 行わ れ ませ ん : こうした ホスト 名 を ユーザ に 提供 し たい アプリケーション で は 、 Unicode に デコード し て やる 必要 が あり ます 。 
encodings . idna で は また 、 nameprep 手続き を 実装 し て い ます 。 nameprep は ホスト 名 に対して ある 正規 化 を 行っ て 、 国際 化 ドメイン 名 で 大 小文字 を 区別 し ない よう に する とともに 、 類似 の 文字 を 一元化 し ます 。 
nameprep 関数 は 必要 なら 直接 使う こと も でき ます 。 
label を nameprep し た バージョン を 返し ます 。 
現在 の 実装 で は クエリ 文字 列 を 仮定 し て いる ので 、 AllowUnassigned は 真 です 。 
RFC 3490 仕様 に従って ラベル を ASCII に 変換 し ます 。 UseSTD 3 ASCIIRules は 偽 で ある と 仮定 し ます 。 
RFC 3490 仕様 に従って ラベル を Unicode に 変換 し ます 。 
errno 値 を 背後 の システム における 文字 列 表現 に 対応付ける 辞書 です 。 
例えば 、 errno . errorcode [ errno . EPERM ] は ' EPERM ' に 対応付け られ ます 。 
数値 の エラーコード を エラーメッセージ に 変換 する に は 、 os . strerror () を 使っ て ください 。 
以下 の リスト の 内 、 現在 の プラットフォーム で 使わ れ て い ない シンボル は モジュール 上 で 定義 さ れ て い ませ ん 。 
定義 さ れ て いる シンボル だけ を 挙げ た リスト は errno . errorcode . keys () として 取得 する こと が でき ます 。 
取得 できる シンボル に は 以下 の よう な もの が あり ます : 
許可 さ れ て い ない 操作 です ( Operation not permitted ) 
ファイル または ディレクトリ が あり ませ ん ( No such file or directory ) 
指定 し た プロセス が 存在 し ませ ん ( No such process ) 
割り込み システム コール です ( Interrupted system call ) 
I / O エラー です ( I / O error ) 
その よう な デバイス または アドレス は あり ませ ん ( No such device or address ) 
引数 リスト が 長 すぎ ます ( Arg list too long ) 
実行 形式 に エラー が あり ます ( Exec format error ) 
ファイル 番号 が 間違っ て い ます ( Bad file number ) 
子 プロセス が あり ませ ん ( No child processes ) 
再 試行 し て ください ( Try again ) 
空き メモリ が あり ませ ん ( Out of memory ) 
許可 が あり ませ ん ( Permission denied ) 
不正 な アドレス です ( Bad address ) 
ブロック デバイス が 必要 です ( Block device required ) 
その デバイス または 資源 は 使用 中 です ( Device or resource busy ) 
ファイル が すでに 存在 し ます ( File exists ) 
デバイス 間 の リンク です ( Cross - device link ) 
その よう な デバイス は あり ませ ん ( No such device ) 
ディレクトリ で は あり ませ ん ( Not a directory ) 
ディレクトリ です ( Is a directory ) 
無効 な 引数 です ( Invalid argument ) 
ファイル テーブル が オーバフロー し て い ます ( File table overflow ) 
開か れ た ファイル が 多 すぎ ます ( Too many open files ) 
タイプライタ で は あり ませ ん ( Not a typewriter ) 
テキストファイル が 使用 中 です ( Text file busy ) 
ファイル が 大き すぎ ます ( File too large ) 
デバイス 上 に 空き が あり ませ ん ( No space left on device ) 
不正 な シーク です ( Illegal seek ) 
読み出し 専用 ファイル システム です ( Read - only file system ) 
リンク が 多 すぎ ます ( Too many links ) 
パイプ が 壊れ まし た ( Broken pipe ) 
数学 引数 が 関数 の 定義 域 を 越え て い ます ( Math argument out of domain of func ) 
表現 でき ない 数学 演算 結果 に なり まし た ( Math result not representable ) 
リソース の デッドロック が 起き ます ( Resource deadlock would occur ) 
ファイル 名 が 長 すぎ ます ( File name too long ) 
レコード ロッキング が 利用 でき ませ ん ( No record locks available ) 
実装 さ れ て い ない 機能 です ( Function not implemented ) 
ディレクトリ が 空 で は あり ませ ん ( Directory not empty ) 
これ 以上 シンボリックリンク を 追跡 でき ませ ん ( Too many symbolic links encountered ) 
操作 が ブロック し ます ( Operation would block ) 
指定 さ れ た 型 の メッセージ は あり ませ ん ( No message of desired type ) 
識別子 が 除去 さ れ まし た ( Identifier removed ) 
チャネル 番号 が 範囲 を 超え まし た ( Channel number out of range ) 
レベル 2 で 同期 が とれ て い ませ ん ( Level 2 not synchronized ) 
レベル 3 で 終了 し まし た ( Level 3 halted ) 
レベル 3 で リセット し まし た ( Level 3 reset ) 
リンク 番号 が 範囲 を 超え て い ます ( Link number out of range ) 
プロトコルドライバ が 接続 さ れ て い ませ ん ( Protocol driver not attached ) 
CSI 構造 体 が あり ませ ん ( No CSI structure available ) 
レベル 2 で 終了 し まし た ( Level 2 halted ) 
無効 な 変換 です ( Invalid exchange ) 
無効 な 要求 記述 子 です ( Invalid request descriptor ) 
変換 テーブル が 一 杯 です ( Exchange full ) 
陰極 が あり ませ ん ( No anode ) 
無効 な リクエスト コード です ( Invalid request code ) 
無効 な スロット です ( Invalid slot ) 
ファイル ロック における デッドロック エラー です ( File locking deadlock error ) 
フォント ファイル 形式 が 間違っ て い ます ( Bad font file format ) 
ストリーム 型 で ない デバイス です ( Device not a stream ) 
利用 可能 な データ が あり ませ ん ( No data available ) 
時間切れ です ( Timer expired ) 
streams リソース を 使い切り まし た ( Out of streams resources ) 
計算 機 は ネットワーク 上 に あり ませ ん ( Machine is not on the network ) 
パッケージ が インストール さ れ て い ませ ん ( Package not installed ) 
対象 物 は 遠隔 に あり ます ( Object is remote ) 
リンク が 切ら れ まし た ( Link has been severed ) 
Advertise エラー です ( Advertise error ) 
Srmount エラー です ( Srmount error ) 
送信 時 の 通信 エラー です ( Communication error on send ) 
プロトコル エラー です ( Protocol error ) 
多重 ホップ を 試み まし た ( Multihop attempted ) 
RFS 特有 の エラー です ( RFS specific error ) 
データ メッセージ で は あり ませ ん ( Not a data message ) 
定義 さ れ た データ 型 にとって 大き すぎる 値 です ( Value too large for defined data type ) 
名前 が ネットワーク 上 で 一意 で あり ませ ん ( Name not unique on network ) 
ファイル 記述 子 の 状態 が 不正 です ( File descriptor in bad state ) 
遠隔 の アドレス が 変更 さ れ まし た ( Remote address changed ) 
必要 な 共有 ライブラリ に アクセス でき ませ ん ( Can not access a needed shared library ) 
壊れ た 共有 ライブラリ に アクセス し て い ます ( Accessing a corrupted shared library ) 
a . out の . lib セクション が 壊れ て い ます (. lib section in a . out corrupted ) 
リンク を 試みる 共有 ライブラリ が 多 すぎ ます ( Attempting to link in too many shared libraries ) 
共有 ライブラリ を 直接 実行 する こと が でき ませ ん ( Cannot exec a shared library directly ) 
不正 な バイト 列 です ( Illegal byte sequence ) 
割り込み システム コール を 復帰 し なけれ ば なり ませ ん ( Interrupted system call should be restarted ) 
ストリーム パイプ の エラー です ( Streams pipe error ) 
ユーザ が 多 すぎ ます ( Too many users ) 
非 ソケット に対する ソケット 操作 です ( Socket operation on non - socket ) 
目的 アドレス が 必要 です ( Destination address required ) 
メッセージ が 長 すぎ ます ( Message too long ) 
ソケット に対して 不正 な プロトコル 型 です ( Protocol wrong type for socket ) 
利用 でき ない プロトコル です ( Protocol not available ) 
サポート さ れ て い ない プロトコル です ( Protocol not supported ) 
サポート さ れ て い ない ソケット 型 です ( Socket type not supported ) 
通信 端点 に対して サポート さ れ て い ない 操作 です ( Operation not supported on transport endpoint ) 
サポート さ れ て い ない プロトコル ファミリ です ( Protocol family not supported ) 
プロトコル で サポート さ れ て い ない アドレス ファミリ です ( Address family not supported by protocol ) 
アドレス は 使用 中 です ( Address already in use ) 
要求 さ れ た アドレス を 割り当て でき ませ ん ( Cannot assign requested address ) 
ネットワーク が ダウン し て い ます ( Network is down ) 
ネットワーク に 到達 でき ませ ん ( Network is unreachable ) 
リセット によって ネットワーク 接続 が 切ら れ まし た ( Network dropped connection because of reset ) 
ソフトウェア によって 接続 が 終了 さ れ まし た ( Software caused connection abort ) 
接続 が ピア によって リセット さ れ まし た ( Connection reset by peer ) 
バッファ に 空き が あり ませ ん ( No buffer space available ) 
通信 端点 が すでに 接続 さ れ て い ます ( Transport endpoint is already connected ) 
通信 端点 が 接続 さ れ て い ませ ん ( Transport endpoint is not connected ) 
通信 端点 の シャット ダウン 後 は 送信 でき ませ ん ( Cannot send after transport endpoint shutdown ) 
参照 が 多 すぎ ます : 接続 でき ませ ん ( Too many references : cannot splice ) 
接続 が タイム アウト し まし た ( Connection timed out ) 
接続 を 拒否 さ れ まし た ( Connection refused ) 
ホスト は システム ダウン し て い ます ( Host is down ) 
ホスト へ の 経路 が あり ませ ん ( No route to host ) 
すでに 処理 中 です ( Operation already in progress ) 
現在 処理 中 です ( Operation now in progress ) 
無効 な NFS ファイル ハンドル です ( Stale NFS file handle ) 
XENIX 名前 付き ファイル で は あり ませ ん ( Not a XENIX named type file ) 
XENIX セマフォ は 利用 でき ませ ん ( No XENIX semaphores available ) 
名前 付き ファイル です ( Is a named type file ) 
遠隔 側 の I / O エラー です ( Remote I / O error ) 
ディスククオータ を 超え まし た ( Quota exceeded ) 
例外 は クラス オブジェクト です 。 
例外 は モジュール exceptions で 定義 さ れ て い ます 。 
この モジュール を 明示 的 に イン ポート する 必要 は あり ませ ん : 例外 は exceptions モジュール と 同様 に 組み込み 名前 空間 で 与え られ ます 。 
注意 : 過去 の Python の バージョン で は 、 文字 列 の 例外 が サポート さ れ て い まし た 。 
これ は プログラマ に対して 、 例外 処理 を 指定 する 際 に 、 文字 列 で は なく 例外 名 を 使わ せる ため の 変更 です 。 組み込み 例外 の 文字 列 値 は 全て その 名前 と なり ます が 、 ユーザ 定義 の 例外 や ライブラリ モジュール で 定義 さ れる 例外 について も そう する よう に 要求 し て いる わけ で は あり ませ ん 。 
文 の 中 で 、 except 
節 を 使っ て 特定 の 例外 クラス について 記述 し た 場合 、 その 節 は 指定 し た 例外 クラス から 導出 さ れ た クラス も 扱い ます ( 指定 し た 例外 クラス を 導出 し た 元 の クラス は 含み ませ ん ) サブ クラス 化 の 関係 に ない 例外 クラス が 二つ あっ た 場合 、 それら に 同じ 名前 を 付け た として も 、 等しく なる こと は あり ませ ん 。 
以下 に 列挙 し た 組み込み 例外 は インタプリタ や 組み込み 関数 によって 生成 さ れ ます 。 
文 の 二つ 目 の 引数 です 。 
文字 列 の 例外 の 場合 、 関連 値 自体 は except 節 ( あっ た 場合 ) の 二つ 目 の 引数 として 与え た 名前 を 持つ 変数 に 記憶 さ れ ます 。 
クラス 例外 の 場合 、 この 値 は 例外 クラス の インスタンス です 。 
例外 が 標準 の ルート クラス で ある Exception から 導出 さ れ た 場合 、 関連 値 は 例外 インスタンス の args 属性 中 に 他 の 属性 と 同様 に 置か れ ます 。 ユーザ による コード も 組み込み 例外 を 送出 する こと が でき ます 。 
例外 を 定義 する 上 で の 詳しい 情報 は 、 
の `` ユーザ 定義 の 例外 '' の 項目 に あり ます 。 
以下 の 例外 クラス は 他 の 例外 クラス の 基底 クラス として のみ 使わ れ ます 。 
例外 の ルート クラス です 。 
全て の 組み込み 例外 は この クラス から 導出 さ れ て い ます 。 
全て の ユーザ 定義 例外 は この クラス から 導出 さ れる べき です が 、 ( 今 の ところ まだ ) それ は 強制 で は あり ませ ん 。 
str () を この クラス ( または ほとんど の 導出 クラス ) の インスタンス に 適用 する と 、 引数 を 文字 列 に し た が 返さ れる か 、 インスタンス の コンス トラクタ が 引数 なし の 場合 に は 空 の 文字 列 が 返さ れ ます 。 
インスタンス を シーケンス として 使う と 、 コンス トラクタ に 渡さ れ た 引数 に アクセス する こと が でき ます ( 古い コード と の 互換 性 の ため に 便利 です )。 
引数 は また 、 インスタンス の args 属性 として 、 タプル で 得る こと も でき ます 。 
StopIteration および SystemExit 以外 の 、 全て の 組み込み 例外 の 基底 クラス です 。 StandardError 自体 は ルート クラス Exception から 導出 さ れ て い ます 。 
算術 上 の 様々 な エラー において 送出 さ れる 組み込み 例外 : OverflowError 、 ZeroDivisionError 、 FloatingPointError の 基底 クラス です 。 
マップ 型 または シーケンス 型 に 使っ た キー や インデクス が 無効 な 値 の 場合 に 送出 さ れる 例外 : IndexError 、 KeyError の 基底 クラス です 。 
sys . setdefaultencoding () によって 直接 送出 さ れる こと も あり ます 。 
Python システム の 外部 で 起こっ て いる はず の 例外 : IOError 、 OSError の 基底 クラス です 。 
この 型 の 例外 が 2 つ の 要素 を もつ タプル で 生成 さ れ た 場合 、 最初 の 要素 は インスタンス の errno 属性 で 得る こと が でき ます ( この 値 は エラー 番号 と 見なさ れ ます )。 二 つめ の 要素 は strerror 属性 です ( この 値 は 通常 、 エラー に 関連 する メッセージ です )。 
タプル 自体 は args 属性 から 得る こと も でき ます 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
EnvironmentError 例外 が 3 要素 の タプル で 生成 さ れ た 場合 、 最初 の 2 つ の 要素 は 上 と 同様 に 得る こと が できる 一方 、 3 つ 目 の 要素 は filename 属性 で 得る こと が でき ます 。 
しかしながら 、 以前 の バージョン と の 互換 性 の ため に 、 args 属性 に は コンス トラクタ に 渡し た 最初 の 2 つ の 引数 から なる 2 要素 の タプル しか 含み ませ ん 。 この 例外 が 3 つ 以外 の 引数 で 生成 さ れ た 場合 、 filename 属性 は None に なり ます 。 
この 例外 が 2 または 3 つ 以外 の 引数 で 生成 さ れ た 場合 、 errno および strerror 属性 も None に なり ます 。 
後者 の ケース で は 、 args が コンス トラクタ に 与え た 引数 を そのまま タプル の 形 で 含ん で い ます 。 
以下 の 例外 は 実際 に 送出 さ れる 例外 です 。 
assert 文 が 失敗 し た 場合 に 送出 さ れ ます 。 
属性 の 参照 や 代入 が 失敗 し た 場合 に 送出 さ れ ます 。 
( 対照 の オブジェクト が 属性 の 参照 や 属性 の 代入 を まったく サポート し て い ない 場合 に は TypeError が 送出 さ れ ます 。 ) 
浮動 小数点 演算 が 失敗 し た 場合 に 送出 さ れ ます 。 
この 例外 は どの Python の バージョン で も 常に 定義 さ れ て い ます が 、 Python が -- with - fpectl オプション を つけ た 状態 に 設定 さ れ て いる か 、 pyconfig . h ファイル に シンボル WANT _ SIGFPE _ HANDLER が 定義 さ れ て いる 場合 に のみ 送出 さ れ ます 。 
( print 文 、 組み込み の open () または ファイル オブジェクト に対する メソッド といった ) I / O 操作 が 、 例えば `` ファイル が 存在 し ませ ん '' や `` ディスク の 空き 領域 が あり ませ ん '' といった I / O に 関連 し た 理由 で 失敗 し た 場合 に 送出 さ れ ます 。 この クラス は EnvironmentError から 導出 さ れ て い ます 。 
この 例外 クラス の インスタンス 属性 に関する 情報 は 上記 の EnvironmentError に関する 議論 を 参照 し て ください 。 
import 文 で モジュール 定義 を 見つけ られ なかっ た 場合 や 、 from ... import 文 で 指定 し た 名前 を イン ポート する こと が でき なかっ た 場合 に 送出 さ れ ます 。 
シーケンス の インデクス 指定 が シーケンス の 範囲 を 超え て いる 場合 に 送出 さ れ ます 。 
( スライス の インデクス は シーケンス の 範囲 に 収まる よう に 暗黙 の うち に 調整 さ れ ます ; インデクス が 通常 の 整数 で ない 場合 、 TypeError が 送出 さ れ ます 。 ) 
マップ 型 ( 辞書 型 ) オブジェクト の キー が 、 オブジェクト の キー 集合 内 に 見つから なかっ た 場合 に 送出 さ れ ます 。 
ユーザ が 割り込み キー ( 通常 は Control - C または Delete キー です ) を 押し た 場合 に 送出 さ れ ます 。 
割り込み が 起き た か どう か は インタプリタ の 実行 中 に 定期 的 に 調べ られ ます 。 組み込み 関数 input () や raw _ input () が ユーザ の 入力 を 待っ て いる 間 に 割り込み キー を 押し て も 、 この 例外 が 送出 さ れ ます 。 
ある 操作 中 に メモリ が 不足 し た が 、 その 状況 は ( オブジェクト を いくつ か 消去 する こと で ) まだ 復旧 可能 かも しれ ない 場合 に 送出 さ れ ます 。 
例外 に 関連づけ られ た 値 は 、 どの 種 の ( 内部 ) 操作 が メモリ 不足 に なっ て いる か を 示す 文字 列 です 。 背後 に ある メモリ 管理 アーキテクチャ ( C の malloc () 関数 ) によって は 、 インタプリタ が 常に その 状況 を 完璧 に 復旧 できる と は かぎら ない ので 注意 し て ください ; プログラム の 暴走 が 原因 の 場合 に も 、 やはり 実行 スタック の 追跡 結果 を 出力 できる よう に する ため に 例外 が 送出 さ れ ます 。 
ローカル または グローバル の 名前 が 見つから なかっ た 場合 に 送出 さ れ ます 。 
これ は 非 限定 の 名前 のみ に 適用 さ れ ます 。 
関連付け られ た 値 は 見つから なかっ た 名前 を 含む エラーメッセージ です 。 
この 例外 は RuntimeError から 導出 さ れ て い ます 。 
ユーザ 定義 の 基底 クラス において 、 その クラス の 導出 クラス において オーバライド する こと が 必要 な 抽象 化 メソッド は この 例外 を 送出 し なく て は なり ませ ん 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
この クラス は EnvironmentError から 導出 さ れ て おり 、 主 に 
モジュール の os . error 例外 で 使わ れ て い ます 。 
例外 に 関連付け られる 可能 性 の ある 値 について は 、 上記 の EnvironmentError を 参照 し て ください 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
算術 演算 の 結果 、 表現 する に は 大き すぎる 値 に なっ た 場合 に 送出 さ れ ます 。 
これ は 長 整数 の 演算 で は 起こり ませ ん ( 長 整数 の 演算 で は むしろ MemoryError が 送出 さ れる こと に なる でしょ う )。 
C で は 浮動 小数点 演算 における 例外 処理 の 標準 化 が 行わ れ て い ない ので 、 ほとんど の 浮動 小数点 演算 も チェック さ れ て い ませ ん 。 
通常 の 整数 で は 、 オーバフロー を 起こす 全て の 演算 が チェック さ れ ます 。 例外 は 左 シフト で 、 典型 的 な アプリケーション で は 左 シフト の オーバフロー で は 例外 を 送出 する より も むしろ 、 オーバフロー し た ビット を 捨てる よう に し て い ます 。 
弱 参照 について は 
モジュール を 参照 し て ください 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 : 以前 は 
. ReferenceError 例外 として 知ら れ て い まし た 。 
他 の カテゴリ に 分類 でき ない エラー が 検出 さ れ た 場合 に 送出 さ れ ます 。 
関連付け られ た 値 は 何 が 問題 だっ た の か を より 詳細 に 示す 文字 列 です 。 
( この 例外 は ほとんど 過去 の バージョン の インタプリタ における 遺物 です ; この 例外 は もはや あまり 使わ れる こと は あり ませ ん ) 
パーザ が 構文 エラー に 遭遇 し た 場合 に 送出 さ れ ます 。 
インタプリタ が 内部 エラー を 発見 し た が 、 その 状況 は 全て の 望み を 棄て させる ほど 深刻 で は ない よう に 思わ れる 場合 に 送出 さ れ ます 。 
この 例外 は sys . exit () 関数 によって 送出 さ れ ます 。 
この 例外 が 処理 さ れ なかっ た 場合 、 Python インタプリタ は 終了 し ます ; スタック の トレース バック は 全く 印字 さ れ ませ ん 。 
即座 に 終了 する こと が 真に 強く 必要 で ある とき ( 例えば 、 fork () を 呼ん だ 後 の 子 プロセス 内 ) に は os ._ exit () 関数 を 使う こと が でき ます 。 
組み込み 演算 または 関数 が 適切 で ない 型 の オブジェクト に対して 適用 さ れ た 際 に 送出 さ れ ます 。 
関連付け られる 値 は 型 の 不 整合 に関して 詳細 を 述べ た 文字 列 です 。 
関数 や メソッド 内 の ローカル な 変数 に対して 参照 を 行っ た が 、 その 変数 に は 値 が バインド さ れ て い なかっ た 際 に 送出 さ れ ます 。 
NameError の サブ クラス です 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
Unicode に関する エン コード または デコード の エラー が 発生 し た 際 に 送出 さ れ ます 。 
ValueError の サブ クラス です 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
Unicode 関連 の エラー が エン コード 中 に 発生 し た 際 に 送出 さ れ ます 。 
UnicodeError の サブ クラス です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
Unicode 関連 の エラー が デコード 中 に 発生 し た 際 に 送出 さ れ ます 。 
Unicode 関連 の エラー が コード 翻訳 に 発生 し た 際 に 送出 さ れ ます 。 
組み込み 演算 や 関数 が 、 正しい 型 だ が 適切 で ない 値 を 受け取っ た 場合 、 および IndexError の よう に 、 より 詳細 な 説明 の でき ない 状況 で 送出 さ れ ます 。 
Windows 特有 の エラー か 、 エラー 番号 が errno 値 に 対応 し ない 場合 に 送出 さ れ ます 。 
除算 また モジュロ 演算 における 二つ 目 の 引数 が ゼロ で あっ た 場合 に 送出 さ れ ます 。 
関連付け られ て いる 値 は 文字 列 で 、 その 演算 における 被 演算 子 の 型 を 示し ます 。 
以下 の 例外 は 警告 カテゴリ として 使わ れ ます ; 詳細 について は 
モジュール を 参照 し て ください 。 
警告 カテゴリ の 基底 クラス です 。 
ユーザ コード によって 生成 さ れる 警告 の 基底 クラス です 。 
廃 用 さ れ た 機能 に対する 警告 の 基底 クラス です 。 
将来 廃 用 さ れる こと に なっ て いる 機能 に対する 警告 の 基底 クラス です 。 
曖昧 な 構文 に対する 警告 の 基底 クラス です 。 
あいまい な ラン タイム 挙動 に対する 警告 の 基底 クラス です 。 
将来 意味 構成 が 変わる こと に なっ て いる 文 の 構成 に対する 警告 の 基底 クラス です 。 
組み込み 例外 の クラス 階層 は 以下 の よう に なっ て い ます : 
Exception +-- SystemExit +-- StopIteration +-- StandardError | +-- KeyboardInterrupt | +-- ImportError | +-- EnvironmentError | | +-- IOError | | +-- OSError | | +-- WindowsError | +-- EOFError | +-- RuntimeError | | +-- NotImplementedError | +-- NameError | | +-- UnboundLocalError | +-- AttributeError | +-- SyntaxError | | +-- IndentationError | | +-- TabError | +-- TypeError | +-- AssertionError | +-- LookupError | | +-- IndexError | | +-- KeyError | +-- ArithmeticError | | +-- OverflowError | | +-- ZeroDivisionError | | +-- FloatingPointError | +-- ValueError | | +-- UnicodeError | | +-- UnicodeEncodeError | | +-- UnicodeDecodeError | | +-- UnicodeTranslateError | +-- ReferenceError | +-- SystemError | +-- MemoryError +--- Warning +-- UserWarning +-- DeprecationWarning +-- PendingDeprecationWarning +-- SyntaxWarning +-- OverflowWarning ( 2 . 4 で は 生成 さ れ ませ ん 。 2 . 5 で は 無くなり ます )+-- RuntimeWarning +-- FutureWarning 
この モジュール で は 、 ファイル 記述 子 ( file descriptor ) に 基づい た ファイル 制御 および I / O 制御 を 実現 し ます 。 この モジュール は 、 Unix の ルーチン で ある fcntl () および ioctl () へ の インタフェース です 。 
この モジュール 内 の 全て の 関数 は ファイル 記述 子 fd を 最初 の 引数 に 取り ます 。 
この 値 は sys . stdin . fileno () が 返す よう な 整数 の ファイル 記述 子 で も 、 sys . stdin 自体 の よう な 、 純粋 に ファイル 記述 子 だけ を 返す fileno () メソッド を 提供 し て いる ファイル オブジェクト でも かまい ませ ん 。 この モジュール で は 以下 の 関数 を 定義 し て い ます : 
要求 さ れ た 操作 を ファイル 記述 子 fd ( または fileno () メソッド を 提供 し て いる ファイル オブジェクト ) に対して 実行 し ます 。 操作 は op で 定義 さ れ 、 オペレーティングシステム 依存 です 。 
これら の 操作 コード は fcntl モジュール 内 に も あり ます 。 
引数 arg は オプション で 、 標準 で は 整数 値 0 です 。 
この 引数 を 与える 場合 、 整数 か 文字 列 の 値 を とり ます 。 
引数 が 無い か 整数 値 の 場合 、 この 関数 の 戻り 値 は C 言語 の fcntl () を 呼び出し た 際 の 整数 の 戻り 値 に なり ます 。 
引数 が 文字 列 の 場合 に は 、 
. pack () で 作ら れる よう な バイナリ の 構造 体 を 表し ます 。 
バイナリ データ は バッファ に コピー さ れ 、 その アドレス が C 言語 の fcntl () 呼び出し に 渡さ れ ます 。 
呼び出し が 成功 し た 後 に 戻さ れる 値 は バッファ の 内容 で 、 文字 列 オブジェクト に 変換 さ れ て い ます 。 
返さ れる 文字 列 は arg 引数 と 同じ 長 さ に な ます 。 
この 値 は 1024 バイト に 制限 さ れ て い ます 。 
オペレーティングシステム から バッファ に 返さ れる 情報 の 長 さ が 1024 バイト より も 大きい 場合 、 大抵 は セグメンテーション 違反 と なる か 、 より 不可思議 な データ の 破損 を 引き起こし ます 。 fcntl () が 失敗 し た 場合 、 IOError が 送出 さ れ ます 。 
ファイル 記述 子 fd ( fileno () メソッド を 提供 し て いる ファイル オブジェクト も 含む ) に対して ロック 操作 op を 実行 し ます 。 
詳細 は Unix マニュアル の 
flock ( 3 ) を 参照 し て ください ( システム によって は 、 この 関数 は fcntl () を 使っ て エミュレーション さ れ て い ます )。 
本質 的 に fcntl () による ロッキング の 呼び出し を ラップ し た もの です 。 
fd は ロック または アン ロック する ファイル の ファイル 記述 子 で 、 operation は 以下 の 値 : 
LOCK _ UN - アン ロック 
LOCK _ SH - 共有 ロック を 取得 
LOCK _ EX - 排他 的 ロック を 取得 
の うち いずれ か に なり ます 。 operation が LOCK _ SH または LOCK _ EX の 場合 、 LOCK _ NB と ビット OR に する こと で ロック 取得 時 に ブロック し ない よう に する こと が でき ます 。 
LOCK _ NB が 使わ れ 、 ロック が 取得 でき なかっ た 場合 、 IOError が 送出 さ れ 、 例外 は errno 属性 を 持ち 、 その 値 は EACCESS または EAGAIN に なり ます ( オペレーティングシステム に 依存 し ます ; 可 搬性 の ため 、 両方 の 値 を チェック し て ください )。 
少なくとも いくつ か の システム で は 、 ファイル 記述 子 が 参照 し て いる ファイル が 書き込み の ため に 開か れ て いる 場合 、 LOCK _ EX だけ しか 使う こと が でき ませ ん 。 
length は ロック を 行い たい バイト 数 、 start は ロック 領域 先頭 の whence から の 相対 的 な バイト オフセット 、 whence は fileobj . seek () と 同じ で 、 具体 的 に は : 
0 - ファイル 先頭 から の 相対 位置 ( SEEK _ SET ) 
1 - 現在 の バッファ 位置 から の 相対 位置 ( SEEK _ CUR ) 
2 - ファイル の 末尾 から の 相対 位置 ( SEEK _ END ) 
start の 標準 の 値 は 0 で 、 ファイル の 先頭 から 開始 する こと を 意味 し ます 。 
whence の 標準 の 値 も 0 です 。 
以下 に ( 全て の SVR 4 互換 システム で の ) 例 を 示し ます : 
最初 の 例 で は 、 戻り 値 rv は 整数 値 を 保持 し て い ます ; 二つ 目 の 例 で は 文字 列 値 を 保持 し て い ます 。 
lockdata 変数 の 構造 体 レイアウト は システム 依存 です -- 従っ て flock () を 呼ぶ 方 が ベター です 。 
filecmp モジュール で は 、 ファイル および ディレクトリ を 比較 する ため 、 様々 な 時間 / 正確 性 の トレードオフ に関する オプション を 備え た 関数 を 定義 し て い ます 。 filecmp モジュール で は 以下 の 関数 を 定義 し て い ます : 
名前 が f 1 および f 2 の ファイル を 比較 し 、 二つ の ファイル が 同じ らしけれ ば True を 返し 、 そう で なけれ ば false を 返し ます 。 
shallow が 与え られ て おり かつ 偽 で なけれ ば 、 os . stat () の 返す シグネチャ が 一致 する ファイル は 同じ で ある と 見なさ れ ます 。 バージョン 2 . 3 で 変更 さ れ た 仕様 : use _ statcache は 廃止 さ れ 、 指定 し て も 無視 さ れ ます 。 
の キャッシュ から 古い ファイル stat 値 が 使わ れ ます 。 可 搬性 と 効率 の ため に 、 個 の 関数 は 外部 プログラム を 一切 呼び出さ ない ので 注意 し て ください 。 
ファイル 名 から なる 3 つ の リスト : match 、 mismatch 、 errors を 返し ます 。 
この モジュール は 標準 入力 や ファイル の 並び に またがる ループ を 素早く 書く ため の ヘルパー クラス と 関数 を 提供 し て い ます 。 典型 的 な 使い方 は 以下 の 通り です : 
この プログラム は sys . argv [ 1 :] に 含ま れる 全て の ファイル を またい で 繰り返し ます 。 もし 該当 する もの が なけれ ば 、 sys . stdin が デフォルト として 扱わ れ ます 。 
ファイル 名 として '-' が 与え られ た 場合 も 、 sys . stdin に 置き換え られ ます 。 
別 の ファイル 名 リスト を 使い たい 時 に は 、 input () の 最初 の 引数 に リスト を 与え ます 。 
FileInput クラス の インスタンス を 作り ます 。 
生成 さ れ た インスタンス は 、 この モジュール の 関数 群 が 利用 する グローバル な 状態 として 利用 さ れ ます 。 
この 関数 へ の 引数 は FileInput クラス の コンス トラクタ へ 渡さ れ ます 。 
以下 の 関数 は input () 関数 によって 作ら れ た グローバル な 状態 を 利用 し ます 。 アクティブ な 状態 が 無い 場合 に は 、 RuntimeError が 発生 し ます 。 
現在 読み込み 中 の ファイル 名 を 返し ます 。 
一行 目 が 読み込ま れる 前 は None を 返し ます 。 
最後 に 読み込ま れ た 行 の 、 累積 し た 行 番号 を 返し ます 。 
1 行 目 が 読み込ま れる 前 は 0 を 返し ます 。 
最後 の ファイル の 最終 行 が 読み込ま れ た 後 に は 、 その 行 の 行 番号 を 返し ます 。 
現在 の ファイル 中 で の 行 番号 を 返し ます 。 
1 行 目 が 読み込ま れる 前 は 0 を 返し ます 。 
最後 の ファイル の 最終 行 が 読み込ま れ た 後 に は 、 その 行 の ファイル 中 で の 行 番号 を 返し ます 。 
最後 に 読み込ま れ た 行 が ファイル の 1 行 目 なら True 、 そう で なけれ ば False を 返し ます 。 
最後 に 読み込ま れ た 行 が sys . stdin から 読ま れ て いれ ば True 、 そう で なけれ ば False を 返し ます 。 
ファイル 名 は 次 の ファイル の 最初 の 行 が 読み込ま れる まで 変更 さ れ ませ ん 。 
最初 の 行 の 読み込み が 行わ れる まで は 、 この 関数 は 呼び出さ れ て も 何 も し ませ ん ので 、 最初 の ファイル を スキップ する ため に 利用 する こと は でき ませ ん 。 
最後 の ファイル の 最終 行 が 読み込ま れ た 後 に も 、 この 関数 は 呼び出さ れ て も 何 も し ませ ん 。 
シーケンス を 閉じ ます 。 
この モジュール の シーケンス の 振舞い を 実装 し て いる クラス の サブ クラス を 作る こと も でき ます 。 
クラス FileInput 
FileInput クラス は モジュール の 関数 に 対応 する メソッド filename ()、 lineno ()、 fileline ()、 isfirstline ()、 isstdin ()、 nextfile ()、 close () を 実装 し て い ます 。 
それ に 加え て 、 次 の 入 力行 を 返す readline () メソッド と 、 シーケンス の 振舞い の 実装 を し て いる __ getitem __() メソッド が あり ます 。 
シーケンス は シーケンシャル に 読み込む こと しか でき ませ ん 。 つまり ランダムアクセス と readline () を 混在 さ せる こと は でき ませ ん 。 
その 場 で 保存 する オプション 機能 : キーワード 引数 
inplace = 1 が input () か FileInput クラス の コンス トラクタ に 渡さ れ た 場合 に は 、 入力 ファイル は バックアップファイル に 移動 さ れ 、 標準 出力 が 入力 ファイル に 設定 さ れ ます ( バックアップファイル と 同じ 名前 の ファイル が 既に 存在 し て い た 場合 に は 、 警告 無し に 置き 替え られ ます )。 これ によって 入力 ファイル を その 場 で 書き 替える フィルタ を 書く こと が でき ます 。 
キーワード 引数 
その 場 で 保存 する 機能 は 、 標準 入力 を 読み込ん で いる 間 は 無効 に さ れ ます 。 
警告 : 現在 の 実装 は MS - DOS の 8 + 3 ファイル システム で は 動作 し ませ ん 。 
この モジュール の ルーチン を 使う と 、 Python プログラム から ファインダ が 持つ いくつ か の 機能 へ アクセス でき ます 。 
これら の 機能 は ファインダ へ の AppleEvent 
ファインダ に file を 起動 する よう に 命令 し ます 。 
起動 が 意味 する もの は file に 依存 し ます 。 アプリケーション なら 起動 し ます し 、 フォルダ なら 開か れ 、 文書 なら 適切 な アプリケーション で 開か れ ます 。 
ファインダ に ファイル を 印刷 する よう 命令 し ます 。 
実際 の 動作 は ファイル を 選択 し 、 ファインダ の ファイル メニュー から 印刷 コマンド を 使う の と 同じ です 。 
ファインダ に ファイル か フォルダ で ある file を フォルダ destdir に コピー する よう 命令 し ます 。 
この 関数 は 新しい ファイル を 示す Alias オブジェクト を 返し ます 。 
ファインダ に ファイル か フォルダ で ある file を フォルダ destdir に 移動 する よう に 命令 し ます 。 
マシン が サポート し て いれ ば 、 ファインダ に Macintosh を スリープ さ せる よう 命令 し ます 。 
ファインダ に 、 マシン を 適切 に 再 起動 する よう 命令 し ます 。 
ファインダ に 、 マシン を 適切 に シャット ダウン する よう 命令 し ます 。 
を 使う のに 必要 な シンボル 定数 が 定義 さ れ て い ます ( 上記 参照 ); これら は 名前 の 接頭 辞 " FL _" が 省か れ て いる こと を 除い て 、 C の ヘッダ ファイル forms . h に 定義 さ れ て いる もの と 同じ です 。 
定義 さ れ て いる 名称 の 完全 な リスト について は 、 モジュール の ソース を ご覧 ください 。 
お 勧め する 使い方 は 以下 の 通り です : 
へ の インターフェース を 提供 し ます 。 
FORMS ライブラリ の ソース は anonymous ftp " ftp . cs . ruu . nl " の SGI / FORMS ディレクトリ から 入手 でき ます 。 
最新 の テスト は バージョン 2 . 0 b で 行い まし た 。 ほとんど の 関数 は 接頭 辞 の " fl _" を 取る と 、 対応 する C の 関数 名 に なり ます 。 
ライブラリ で 使わ れる 定数 は 後述 の 
しかし 、 GL イベント ハンドル へ の FORMS インターフェース が 利用 可能 で 、 純粋 な GL ウィンドウ に FORMS を 組み合わせる こと が でき ます 。 
注意 : fl を イン ポート する と 、 GL の 関数 foreground () と FORMS の ルーチン fl _ init () を 呼び出し ます 。 
この モジュール に は 、 FORMS ライブラリ ( 上記 の 
この モジュール は IRIS Font Manager ライブラリ へ の アクセス を 提供 し ます 。 
フォントハンドルオブジェクト を 返し ます 。 fmfindfont ( fontname ) を 呼び出し ます 。 
利用 可能 な フォント 名 の リスト を 返し ます 。 この 関数 は fmenumerate () へ の インターフェース です 。 
現在 の フォント を 使っ て 文字 列 を レンダリング し ます ( 下 の フォントハンドルメソッド setfont () を 参照 )。 fmprstr ( string ) を 呼び出し ます 。 
現在 の フォント 検索 パス を 返し ます 。 
フォントハンドルオブジェクト は 以下 の 操作 を サポート し ます : 
scalefont ( フォントハンドルメソッド )( 
この フォント を 拡大 / 縮小 し た ハンドル を 返し ます 。 fmscalefont ( fh , factor ) を 呼び出し ます 。 
setfont ( フォントハンドルメソッド )( 
getfontname ( フォントハンドルメソッド )( 
この フォント の 名前 を 返し ます 。 fmgetfontname ( fh ) を 呼び出し ます 。 
getcomment ( フォントハンドルメソッド )( 
この フォント に 関連付け られ た コメント 文字 列 を 返し ます 。 
コメント 文字 列 が 何 も なけれ ば 例外 を 返し ます 。 fmgetcomment ( fh ) を 呼び出し ます 。 
getfontinfo ( フォントハンドルメソッド )( 
この フォント に 関連 し た データ を 含む タプル を 返し ます 。 
これ は fmgetfontinfo () へ の インターフェース です 。 以下 の 数値 を 含む タプル を 返し ます :( 
printermatched 、 fixed _ width 、 xorig 、 yorig 、 xsize 、 ysize 、 height 、 nglyphs 
)。 
getstrwidth ( フォントハンドルメソッド )( 
この フォント で string を 描い た とき の 幅 を ピクセル 数 で 返し ます 。 fmgetstrwidth ( fh , string ) を 呼び出し ます 。 
この モジュール は Unix の シェル 形式 の ワイルドカード へ の 対応 を 提供 し ます が 、 ( 
モジュール で ドキュメント 化 さ れ て いる ) 正規 表現 と 同じ で は あり ませ ん 。 
シェル 形式 の ワイルドカード で 使わ れる 特別 な 文字 は 、 
すべて に マッチ し ます 
任意 の 一文字 に マッチ し ます 
seq に ある 任意 の 文字 に マッチ し ます 
seq に ない 任意 の 文字 に マッチ し ます 
ファイル 名 の セパレーター ( Unix で は '/') は この モジュール に 固有 な もの で は ない こと に 注意 し て ください 。 
パス 名 展開 について は 、 
モジュール を 参照 し て ください ( 
は パス 名 の 部分 に マッチ さ せる のに fnmatch () を 使っ て い ます )。 
同様 に 、 ピリオド で 始まる ファイル 名 は この モジュール に 固有 で は なく て 、 * と ? の パターン で マッチ し ます 。 
filename の 文字 列 が pattern の 文字 列 に マッチ する か テスト し て 、 真 、 偽 の いずれ か を 返し ます 。 
オペレーティングシステム が 大文字 、 小文字 を 区別 し ない 場合 、 比較 を 行う 前 に 、 両方 の パラメタ を 全て 大文字 、 または 全て 小文字 に 揃え ます 。 
オペレーティングシステム が 標準 で どう なっ て いる か に 関係 なく 、 大 小文字 を 区別 し て 比較 し たい 場合 に は 、 fnmatchcase () を 代わり に 使っ て ください 。 
filename が pattern に マッチ する か テスト し て 、 真 、 偽 を 返し ます 。 比較 は 大文字 、 小文字 を 区別 し ます 。 
pattern に マッチ する names の リスト の 部分 集合 を 返し ます 。 
[ n for n in names if fnmatch ( n , pattern )] と 同じ です が 、 もっと 効率 よく 実装 し て い ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
Unix シェル 形式 の パス 展開 。 . 
この モジュール で は 、 二つ の インタフェース 定義 を 提供 し て おり 、 それら の 各 インタフェース について 複数 の 実装 を 提供 し て い ます 。 
formatter インタフェース は 
モジュール の HTMLParser クラス で 使わ れ て おり 、 writer インタフェース は formatter インタフェース を 使う 上 で 必要 です 。 
formatter オブジェクト は ある 抽象 化 さ れ た 書式 イベント の 流れ を writer オブジェクト 上 の 特定 の 出力 イベント に 変換 し ます 。 
formatter は いくつ か の スタック 構造 を 管理 する こと で 、 writer オブジェクト の 様々 な 属性 を 変更 し たり 復元 し たり できる よう に し て い ます ; この ため 、 writer は 相対 的 な 変更 や `` 元 に 戻す '' 操作 を 処理 でき なく て も かまい ませ ん 。 
writer の 特定 の プロパティ の うち 、 formatter オブジェクト を 介し て 制御 できる の は 、 水平 方向 の 字 揃え 、 フォント 、 そして 左 マージン の 字 下げ です 。 
任意 の 、 非 排他 的 な スタイル 設定 を writer に 提供 する ため の メカニズム も 提供 さ れ て い ます 。 
さらに 、 段落 分割 の よう に 、 可逆 で ない 書式 化 イベント の 機能 を 提供 する インタフェース も あり ます 。 writer オブジェクト は デバイス インタフェース を カプセル 化 し ます 。 
ファイル 形式 の よう な 抽象 デバイス も 物理 デバイス 同様 に サポート さ れ て い ます 。 
ここ で 提供 さ れ て いる 実装 内容 は すべて 抽象 デバイス 上 で 動作 し ます 。 
デバイス インタフェース は formatter オブジェクト が 管理 し て いる プロパティ を 設定 し 、 データ を 出力 端 に 書き込める よう に し ます 。 
3 . 3 . 3 拡張 型 における 弱 参照 
ほとんど の コンピュータ は いわゆる IEEE - 754 標準 に 準拠 し た 浮動 小数点 演算 
( 上 の 例 は 多く の プラットホーム で 動作 し ます 。 
SIGFPE を 生成 する よう に 切り替え 、 適切 な シグナル ハンドラ を 設定 し ます 。 
浮動 小数点 例外 の デフォルト の 処理 に 再 設定 し ます 。 
turnon _ sigfpe () が 実行 さ れ た 後 に 、 IEEE - 754 例外 で ある Division by Zero 、 Overflow または Invalid operation の 一つ を 発生 する 浮動 小数点 演算 は 、 次に この 標準 Python 例外 を 発生 し ます 。 
注意 : This module is unneeded : everything here couldbe done via the % string interpolation operator . fpformat モジュール は 浮動 小数点 数 の 表示 を 100 % 純粋 に Python だけ で 行う ため の 関数 を 定義 し て い ます 。 
注意 : この モジュール は 必要 あり ませ ん : この モジュール の すべて の こと は 、 % を 使っ て 、 文字 列 の 補間 演算 により 可能 です 。 
fpformat モジュール は 次に あげる 関数 と 例外 を 定義 し て い ます 。 
x を [-] ddd . ddd の 形 に フォーマット し ます 。 小数点 の 後ろ に digs 桁 と 、 小数点 の 前 に 少なくとも 1 桁 です 。 
vardigs = 0 の 場合 、 小数点 以下 は 切り捨て られ ます 。 
x を [-] d . dddE [+-] ddd の 形 に フォーマット し ます 。 小数点 の 後ろ に digs 桁 と 、 小数点 の 前 に 1 桁 だけ です 。 
vardigs = 0 の 場合 、 1 桁 だけ 残さ れ 、 小数点 以下 は 切り捨て られ ます 。 
fix () や sci () に パラメータ として 渡さ れ た 文字 列 x が 数字 として 認識 でき なかっ た 場合 、 例外 が 発生 し ます 。 標準 の 例外 が 文字 列 の 場合 、 この 例外 は ValueError の サブ クラス です 。 
例外 値 は 、 例外 を 発生 さ せ た 不適切 に フォーマット さ れ た 文字 列 です 。 
この モジュール で は FTP クラス と 、 それ に 関連 する いくつ か の 項目 を 定義 し て い ます 。 FTP クラス は 、 FTP プロトコル の クライアント 側 の 機能 を 備え て い ます 。 
モジュール も FTP を 使う URL を 操作 する のに この クラス を 使っ て い ます 。 
FTP ( File Transfer Protocol ) について の 詳しい 情報 は Internet RFC 959 を 参照 し て 下さい 。 ftplib モジュール を 使っ た サンプル を 以下 に 示し ます : 
from ftplib import FTP ftp = FTP (' ftp . cwi . nl ') # ホスト の デフォルト ポート へ 接続 ftp . login () # ユーザ 名 anonymous 、 パスワード anonyumous @ ftp . retrlines (' LIST ') # ディレクトリ の 内容 を リストアップ total 24418 drwxrwsr - x 5 ftp - usr pdmaint 1536 Mar 20 09 : 48 . dr - xr - srwt 105 ftp - usr pdmaint 1536 Mar 21 14 : 32 ..- rw - r -- r -- 1 ftp - usr pdmaint 5305 Mar 20 09 : 48 INDEX ... ftp . retrbinary (' RETR README ', open (' README ', ' wb '). write )' 226 Transfer complete .' ftp . quit () 
この モジュール は 以下 の 項目 を 定義 し て い ます : 
クラス FTP 
FTP クラス の 新しい インスタンス を 返し ます 。 
host が 与え られる と 、 connect ( host ) メソッド が 実行 さ れ ます 。 
user が 与え られる と 、 さらに login ( user , passwd , aracct ) メソッド が 実行 さ れ ます ( この passwd と acct は 指定 さ れ なけれ ば デフォルト で は 空文字 列 です )。 
FTP インスタンス の メソッド の 結果 、 FTP 接続 で ( プログラミング の エラー と 考え られる メソッド の 実行 によって ) 発生 する 全て の 例外 ( タプル 形式 )。 
この 例外 に は 以下 の 4 つ の エラー は もちろん 、 socket . error と IOError も 含ま れ ます 。 
サーバ から 想定 外 の 応答 が あっ た 時 に 発生 する 例外 。 
400 - 499 の 範囲 の エラー 応答 コード を 受け取っ た 時 に 発生 する 例外 。 
500 - 599 の 範囲 の エラー 応答 コード を 受け取っ た 時 に 発生 する 例外 。 
1 - 5 の 数字 で 始まら ない 応答 コード を サーバ から 受け取っ た 時 に 発生 する 例外 。 
. netrc ファイル フォーマット の パーザ 。 
. netrc ファイル は 、 FTP クライアント が ユーザ に プロンプト を 出す 前 に 、 ユーザ 認証 情報 を ロード する のに よく 使わ れ ます 。 . 
Python の ソースディストリビューション の Tools / scripts / ftpmirror . py 
__ future __ は 実際 に モジュール で あり 、 3 つ の 役割 が あり ます 。 
import ステートメント を 解析 する 既存 の ツール を 混乱 さ せる の を 避け 、 その ステートメント が イン ポート しよ う と し て いる モジュール を 見つけ られる よう に する ため 。 
いつ 互換 で ない 変化 が 導入 さ れ 、 い つ 強制 的 に なる - あるいは 、 なっ た - の か 文書 化 する ため 。 
これ は 実行 できる 形式 で 書か れ た ドキュメント で な ので 、 __ future __ を イン ポート し 、 その 中身 を 調べる よう プログラム すれ ば 確かめ られ ます 。 
__ future __. py の 各 ステートメント は 次 の よう な 形 を し て い ます : 
ここ で 、 普通 は 、 OptionalRelease は MandatoryRelease より 小さく 、 2 つ と も sys . version _ info と 同じ フォーマット の 5 つ の タプル から なり ます 。 
CompilerFlag は 動的 に コンパイル さ れる コード で その 機能 を 有効 に する ため に 、 組み込み 関数 compile () の 第 4 引数 に 渡さ れ なけれ ば なら ない ( ビット フィールド ) フラグ です 。 
この フラグ は _ Future インスタンス の compilier _ flag 属性 に 保存 さ れ て い ます 。 __ future __ で 解説 さ れ て いる 機能 の うち 、 削除 さ れ た もの は まだ あり ませ ん 。 
gc モジュール は 、 インタプリタ の ビルドオプション で 循環 ガベージコレクタ を 有効 に し た 場合 のみ 使用 する こと が でき ます ( デフォルト で 有効 )。 
もし 無効 に なっ て いる 場合 に この モジュール を イン ポート する と 、 ImportError が 発生 し ます 。 
この モジュール は 、 循環 ガベージコレクタ の 無効 化 ・ 検出 頻度 の 調整 ・ デバッグオブション の 設定 など を 行う インターフェース を 提供 し ます 。 
また 、 検出 し た 到達 不能 オブジェクト の うち 、 解放 する 事 が でき ない オブジェクト を 参照 する 事 も でき ます 。 
循環 ガベージコレクタ は Pyhon の 参照 カウント を 補う ため の もの です ので 、 もし プログラム 中 で 循環 参照 が 発生 し ない 事 が 明らか な 場合 に は 検出 を する 必要 は あり ませ ん 。 
自動 検出 は 、 gc . disable () で 停止 する 事 が でき ます 。 
メモリ リーク を デバッグ する とき に は 、 gc . set _ debug ( gc . DEBUG _ LEAK ) と し ます 。 gc モジュール は 、 以下 の 関数 を 提供 し て い ます 。 
自動 ガベージコレクション を 有効 に し ます 。 
自動 ガベージコレクション を 無効 に し ます 。 
自動 ガベージコレクション が 有効 なら 真 を 返し ます 。 
全て の 検出 を 行い ます 。 
全て の 世代 を 検査 し 、 検出 し た 到達 不可 オブジェクト の 数 を 返し ます 。 
ガベージコレクション の デバッグ フラグ を 設定 し ます 。 デバッグ 情報 は sys . stderr に 出力 さ れ ます 。 
デバッグ フラグ は 、 下 の 値 の 組み合わせ を 指定 する 事 が でき ます 。 
現在 の デバッグ フラグ を 返し ます 。 
現在 、 追跡 し て いる オブジェクト の リスト を 返し ます 。 
ガベージコレクション の 閾値 ( 検出 頻度 ) を 指定 し ます 。 
threshold 0 を 0 に する と 、 検出 は 行わ れ ませ ん 。 GC は 、 オブジェクト を 、 走査 さ れ た 回数 に従って 3 世代 に 分類 し ます 。 
新しい オブジェクト は 最も 若い ( 0 世代 ) に 分類 さ れ ます 。 
もし 、 その オブジェクト が ガベージコレクション で 削除 さ れ なけれ ば 、 次に 古い 世代 に 分類 さ れ ます 。 
もっとも 古い 世代 は 2 世代 で 、 この 世代 に 属する オブジェクト は 他 の 世代 に 移動 し ませ ん 。 
ガベージコレクタ は 、 最後 に 検出 を 行っ て から 生成 ・ 削除 し た オブジェクト の 数 を カウント し て おり 、 この 数 によって 検出 を 開始 し ます 。 
オブジェクト の 生成 数 - 削除 数 が threshold 0 より 大きく なる と 、 検出 を 開始 し ます 。 
最初 は 0 世代 の オブジェクト のみ が 検査 さ れ ます 。 
0 世代 の 検査 が threshold 1 回 実行 さ れる と 、 1 世代 の オブジェクト の 検査 を 行い ます 。 
同様 に 、 1 世代 が threshold 2 回 検査 さ れる と 、 2 世代 の 検査 を 行い ます 。 
現在 の 検出 閾値 を 、 ( threshold 0 , threshold 1 , threshold 2 ) の タプル で 返し ます 。 
objs で 指定 し た オブジェクト の いずれ か を 参照 し て いる オブジェクト の リスト を 返し ます 。 
有効 な オブジェクト のみ を 取得 する 場合 、 get _ referrers () の 前 に collect () を 呼び出し て ください 。 get _ referrers () から 返さ れる オブジェクト は 作り かけ や 利用 でき ない 状態 で ある 場合 が ある ので 、 利用 する 際 に は 注意 が 必要 です 。 
get _ referrers () を デバッグ 以外 の 目的 で 利用 する の は 避け て ください 。 
引数 で 指定 し た オブジェクト の いずれ か から 参照 さ れ て いる 、 全て の オブジェクト の リスト を 返し ます 。 
参照 先 の オブジェクト は 、 引数 で 指定 し た オブジェクト の C レベル メソッド tp _ traverse で 取得 し 、 全て の オブジェクト が 直接 到達 可能 な 全て の オブジェクト を 返す わけ で は あり ませ ん 。 tp _ traverse は ガベージコレクション を サポート する オブジェクト のみ が 実装 し て おり 、 ここ で 取得 できる オブジェクト は 循環 参照 の 一部 と なる 可能 性 の ある オブジェクト のみ です 。 
従って 、 例えば 整数 オブジェクト が 直接 到達 可能 で あっ て も 、 この オブジェクト は 戻り 値 に は 含ま れ ませ ん 。 
到達 不能 で ある こと が 検出 さ れ た が 、 解放 する 事 が でき ない オブジェクト の リスト ( 回収 不能 オブジェクト )。 
デフォルト で は 、 __ del __() メソッド を 持つ オブジェクト のみ が 格納 さ れ ます 。 
__ del __() メソッド を 持つ オブジェクト が 循環 参照 に 含ま れ て いる 場合 、 その 循環 参照 全体 と 、 循環 参照 から のみ 到達 する 事 が できる オブジェクト は 回収 不能 と なり ます 。 
この よう な 場合 に は 、 Python は 安全 に __ del __() を 呼び出す 順番 を 決定 する 事 が でき ない ため 、 自動的 に 解放 する こと は でき ませ ん 。 
もし 安全 な 解放 順序 が わかる の で あれ ば 、 garbage リスト を 参照 し て 循環 参照 を 破壊 する 事 が でき ます 。 
循環 参照 を 破壊 し た 後 でも 、 その オブジェクト は garbage リスト から 参照 さ れ て いる ため 、 解放 さ れ ませ ん 。 
解放 する ため に は 、 循環 参照 を 破壊 し た 後 、 del gc . garbage [:] の よう に garbage から オブジェクト を 削除 する 必要 が あり ます 。 
一般 的 に は __ del __() を 持つ オブジェクト が 循環 参照 の 一部 と は なら ない よう に 配慮 し 、 garbage は その よう な 循環 参照 が 発生 し て い ない 事 を 確認 する ため に 利用 する 方 が 良い でしょ う 。 DEBUG _ SAVEALL が 設定 さ れ て いる 場合 、 全て の 到達 不能 オブジェクト は 解放 さ れ ず に この リスト に 格納 さ れ ます 。 
以下 は set _ debug () に 指定 する こと の できる 定数 です 。 
検出 中 に 統計 情報 を 出力 し ます 。 
この 情報 は 、 検出 頻度 を 最適 化 する 際 に 有益 です 。 
回収 不能 オブジェクト は 、 garbade リスト に 追加 さ れ ます 。 
DEBUG _ COLLECTABLE か DEBUG _ UNCOLLECTABLE が 設定 さ れ て いる 場合 、 見つかっ た インスタンス オブジェクト の 情報 を 出力 し ます 。 
DEBUG _ COLLECTABLE か DEBUG _ UNCOLLECTABLE が 設定 さ れ て いる 場合 、 見つかっ た インスタンス オブジェクト 以外 の オブジェクト の 情報 を 出力 し ます 。 
設定 さ れ て いる 場合 、 全て の 到達 不能 オブジェクト は 解放 さ れ ず に garbage に 追加 さ れ ます 。 
これ は プログラム の メモリ リーク を デバッグ する とき に 便利 です 。 
... 持つ オブジェクト のみ が 格納 さ れ ます 。 
Python 2 . 2 より 前 の バージョン で は 、 __ del __() メソッド を 持つ オブジェクト だけ で なく 、 全て の 到達 不能 オブジェクト が 格納 さ れ て い た 。 ) 
この モジュール は 
モジュール に よく 似 て い ます が 、 gdbm を 使っ て いくつ か の 追加 機能 を 提供 し て い ます 。 
I / O エラー の よう な gdbm 特有 の エラー で 送出 さ れ ます 。 誤っ た キー の 指定 の よう に 、 一般 的 な マップ 型 の エラー に対して は KeyError が 送出 さ れ ます 。 
gdbm データベース を 開い て gdbm オブジェクト を 返し ます 。 
' f ' -- データベース を 高速 モード で 開き ます 。 
この モード で は データベース へ の 書き込み は ファイル システム と 同期 さ れ ませ ん 。 
' s ' -- 同期 モード で 開き ます 。 
データベース へ の 変更 は ファイル に 即座 い に 書き込ま れ ます 。 
' u ' -- データベース を ロック し ませ ん 。 
全て の バージョン の gdbm で 全て の フラグ が 有効 と は 限り ませ ん 。 
モジュール 定数 open _ flags は サポート さ れ て いる フラグ 文字 から なる 文字 列 です 。 
無効 な フラグ が 指定 さ れ た 場合 、 例外 error が 送出 さ れ ます 。 オプション の mode 引数 は 、 新た に データベース を 作成 し なけれ ば なら ない 場合 に 使わ れる Unix の ファイル モード です 。 
標準 の 値 は 8 進数 の 0666 です 。 
辞書 型 形式 の メソッド に 加え て 、 gdbm オブジェクト に は 以下 の メソッド が あり ます : 
この メソッド と next () メソッド を 使っ て 、 データベース の 全て の キー にわたって ループ 処理 を 行う こと が でき ます 。 
探索 は gdbm の 内部 ハッシュ 値 の 順番 に 行わ れ 、 キー の 値 に 順 に 並ん で いる と は 限り ませ ん 。 
データベース の 順 方向 探索 において 、 key より も 後 に 来る キー を 返し ます 。 
以下 の コード は データベース db について 、 キー 全て を 含む リスト を メモリ 上 に 生成 する こと なく 全て の キー を 出力 し ます : 
大量 の 削除 を 実行 し た 後 、 gdbm ファイル の 占める スペース を 削減 し たい 場合 、 この ルーチン は データベース を 再 組織 化 し ます 。 
この 再 組織 化 を 使う 以外 に gdbm は データベース ファイル の 大き さ を 短く する こと は あり ませ ん ; そう で ない 場合 、 削除 さ れ た 部分 の ファイル スペース は 保持 さ れ 、 新た な ( キー 、 値 の ) ペア が 追加 さ れる 際 に 再 利用 さ れ ます 。 
データベース が 高速 モード で 開か れ て い た 場合 、 この メソッド は ディスク に まだ 書き込ま れ て い ない データ を 全て 書き込ま せ ます 。 
gensuitemodule モジュール は AppleScript 辞書 によって 特定 の アプリケーション に 実装 さ れ て いる AppleScript 群 の ため の スタブ コード を 実装 し た Python パッケージ を 作成 し ます 。 この モジュール は 、 通常 は PythonIDE から ユーザ によって 起動 さ れ ます が 、 コマンド ライン から スクリプト として 実行 する ( オプション として ヘルプ に -- help を 与え て み て ください ) こと も でき ます し 、 Python コード で イン ポート し て 利用 する 事 も でき ます 。 
使用 例 として 、 どの よう に し て 標準 ライブラリ に 含ま れ て いる スタブ パッケージ を 生成 する か 、 Mac / scripts / genallsuites . py に ある ソース を 見 て ください 。 この モジュール は 次 の 関数 を 定義 し て い ます 。 
application として パス 名 を 与え た アプリケーション が スクリプト 可能 で あり そう な 場合 、 真 を 返し ます 。 
返り 値 は やや 不 確実 な 場合 が あり ます 。 Internet Explorer は スクリプト 不可能 な よう に 見え て しまい ます が 、 実際 は スクリプト 可能 です 。 
パス 名 として 渡さ れ た application の ため の スタブ パッケージ を 作成 し ます 。 
dump に は ファイル オブジェクト を 与え ます 、 これ を 指定 する と リソース を 読取っ た 後 に 停止 し て processfile が コード 化 し た 用語 リソース の Python 表現 を ダンプ し ます 。 
verbose に も また ファイル オブジェクト を 与え 、 これ を 指定 する と processfile の 行なっ て いる 処理 の 詳細 を 出力 し ます 。 processfile _ fromresource 
この 関数 は 、 用語 リソース を 得る の に 異なる 方法 を 使用 する 以外 は 、 processfile と 同じ です 。 
この 関数 で は 、 リソース ファイル として application を 開き 、 この ファイル から " aete " および " aeut " リソース を すべて 読み込む 事 で 、 AppleScript 用語 リソース 読み込み を 行ない ます 。 
3 番目 の 引数 ( 省略 可能 ) を 設定 する こと で 、 GNU の ソフトウェア で サポート さ れ て いる よう な 長 形式 の オプション も 利用 する こと が でき ます 。 この モジュール は 1 つ の 関数 と 例外 を 提供 し て い ます : 
コマンドラインオプション と パラメータ の リスト を 構文 解析 し ます 。 args は 構文 解析 の 対象 に なる 引数 リスト です 。 
これ は 先頭 の プログラム 名 を 除い た もの で 、 通常 " sys . argv [ 1 :]" で 与え られ ます 。 options は スクリプト で 認識 さ せ たい オプション 文字 と 、 引数 が 必要 な 場合 に は コロン (":") を つけ ます 。 
つまり Unix の getopt () と 同じ フォーマット に なり ます 。 
注意 : GNU の getopt () と は 違っ て 、 オプション で ない 引数 の 後 は 全て オプション で は ない と 判断 さ れ ます 。 これ は GNU で ない 、 Unix システム の 挙動 に 近い もの です 。 
long _ options は 長 形式 の オプション の 名前 を 示す 文字 列 の リスト です 。 
名前 に は 、 先頭 の '- 
-' は 含め ませ ん 。 
引数 が 必要 な 場合 に は 名前 の 最後 に 等号 ("=") を 入れ ます 。 
長 形式 の オプション だけ を 受けつける ため に は 、 options は 空文字 列 で ある 必要 が あり ます 。 
長 形式 の オプション は 、 該当 する オプション を 一意 に 決定 できる 長 さ まで 入力 さ れ て いれ ば 認識 さ れ ます 。 
- long - option ') と なり 、 引数 が 2 番目 の 要素 に なり ます 。 
引数 を とら ない 場合 に は 空文字 列 が 入り ます 。 
オプション は 見つかっ た 順 に 並ん で い て 、 複数 回 同じ オプション を 指定 する こと が でき ます 。 
長 形式 と 短 形式 の オプション は 混在 さ せる こと が でき ます 。 
この 関数 は デフォルト で GNU スタイル の スキャン モード を 使う 以外 は getopt () と 同じ よう に 動作 し ます 。 
つまり 、 オプション と オプション で ない 引数 と を 混在 さ せる こと が でき ます 。 
getopt () 関数 は オプション で ない 引数 を 見つける と 解析 を やめ て しまい ます 。 オプション 文字 列 の 最初 の 文字 が '+' に する か 、 環境 変数 POSIXLY _ CORRECT を 設定 する こと で 、 オプション で ない 引数 を 見つける と 解析 を やめる よう に 振舞い を 変える こと が でき ます 。 
引数 リスト の 中 に 認識 でき ない オプション が あっ た 場合 か 、 引数 が 必要 な オプション に 引数 が 与え られ なかっ た 場合 に 発生 し ます 。 
例外 の 引数 は 原因 を 示す 文字 列 です 。 
バージョン 1 . 6 で 変更 さ れ た 仕様 : GetoptError は error の 別名 として 導入 さ れ まし た 。 
GetoptError へ の エイリアス です 。 後方 互換 性 の ため に 残さ れ て い ます 。 
Unix スタイル の オプション を 使っ た 例 です : 
長 形式 の オプション を 使っ て も 同様 です : 
スクリプト 中 で の 典型 的 な 使い方 は 以下 の よう に なり ます : 
import getopt , sysdef main (): try : opts , args = getopt . getopt ( sys . argv [ 1 :], " ho : v ", [" help ", " output ="]) except getopt . GetoptError :# ヘルプ メッセージ を 出力 し て 終了 usage () sys . exit ( 2 ) output = Noneverbose = Falsefor o , a in opts : if o == "- v ": verbose = Trueif o in ("- h ", "-- help "): usage () sys . exit () if o in ("- o ", "-- output "): output = a # ... if __ name __ == "__ main __": main () 
より オブジェクト 指向 的 な コマンドラインオプション の パーズ を 提供 し ます 。 . 
The getpass module provides two functions : getpass モジュール は 二つ の 機能 を 提供 し ます : 
エコー なし で ユーザー に パスワード を 入力 さ せる プロンプト 。 
ユーザー は prompt の 文字 列 を プロンプト に 使え ます 、 デフォルト は ' Password :' です 。 利用 できる システム : Machintosh , Unix , Windows 
ユーザー の `` ログイン 名 '' を 返し ます 。 
有効 性 : Unix 、 Windows この 関数 は 環境 変数 LOGNAME USER LNAME USERNAME の 順序 で チェック し て 、 最初 の 空 で は ない 文字 列 が 設定 さ れ た 値 を 返し ます 。 
もし 、 なに も 設定 さ れ て い ない 場合 は pwd モジュール が 提供 する システム 上 の パスワード データベース から 返し ます 。 
それ 以外 は 、 例外 が 上がり ます 。 
gettext モジュール は 、 Python による モジュール や アプリケーション の 国際 化 ( I 18 N , I - nternationalizatio - N ) および 地域 化 ( L 10 N , L - ocalizatio - N ) サービス を 提供 し ます 。 この モジュール は GNU gettext メッセージ カタログ へ の API と 、 より 高 レベル で Python ファイル に 適し て いる クラス に 基づい た API の 両方 を サポート し て ます 。 
以下 で 述べる インタフェース を 使う こと で 、 モジュール や アプリケーション の メッセージ を ある 自然 言語 で 記述 し て おき 、 翻訳 さ れ た メッセージ の カタログ を 与え て 他 の 異なる 自然 言語 の 環境 下 で 動作 さ せる こと が でき ます 。 
ここ で は Python の モジュール や アプリケーション を 地域 化 する ため の いくつ か の ヒント も 提供 し て い ます 。 
6 . 28 . 2 . 1 NullTranslations クラス 
6 . 28 . 2 . 2 GNUTranslations クラス 
6 . 28 . 2 . 3 Solaris メッセージ カタログ 機構 の サポート 
6 . 28 . 2 . 4 Catalog コンス トラクタ 
6 . 28 . 3 . 1 モジュール を 地域 化 する 
6 . 28 . 3 . 2 アプリケーション を 地域 化 する 
6 . 28 . 3 . 3 動作 中 ( on the fly ) に 言語 を 切り替える 
6 . 28 . 3 . 4 翻訳 処理 の 遅延 解決 
この モジュール に は Silicon Graphics の Graphics Library で 使わ れる C の ヘッダーファイル gl / gl . h の 定数 が 定義 さ れ て い ます 。 詳しく は モジュール の ソース ファイル を ご覧 ください 。 
この モジュール は Silicon Graphics の Graphics Library へ の アクセス を 提供 し ます 。 Silicon Graphics マシン 上 だけ で 利用 可能 です 。 
警告 : GL ライブラリ の 不適切 な 呼び出し によって は 、 Python インタープリタ が コア を 吐き出す こと が あり ます 。 特に 、 GL の ほとんど の 関数 で は 最初 の ウィンドウ を 開く 前 に 呼び出す の は 安全 で は あり ませ ん 。 
この モジュール は とても 大きい ので 、 ここ に 全て を 記述 する こと は でき ませ ん が 、 以下 の 説明 で 出発 点 として は 十分 でしょ う 。 C の 関数 の パラメータ は 、 以下 の よう な 決まり に従って Python に 翻訳 さ れ ます : 
全て ( short 、 long 、 unsigned ) の 整数 値 ( int ) は Python の 整数 に 相当 し ます 。 
全て の 浮動 小数点 数 と 倍精度 浮動 小数点 数 は Python の 浮動 小数点 数 に 相当 し ます 。 たいてい の 場合 、 Python の 整数 も 使え ます 。 
全て の 配列 は Python の 一 次元 の リスト に 相当 し ます 。 たいてい の 場合 、 タプル も 使え ます 。 
全て の 文字 列 と 文字 の 引数 は 、 Python の 文字 列 に 相当 し ます 。 例えば 、 winopen (' Hi There !') と rotate ( 900 , ' z ')。 
配列 で ある 引数 の 長 さ を 特定 する ため だけ に 使わ れる 全て ( short 、 long 、 unsigned ) の 整数 値 の 引数 あるいは 返り 値 は 、 無視 さ れ ます 。 例えば 、 C の 呼び出し で 、 
これ は Python で は 、 こう なり ます 。 
これ は Python で は こう なり ます 。 
以下 の 関数 は 一般 的 で ない か 、 引数 に 特別 な 決まり を 持っ て い ます : 
座標 は ( マニュアル ページ に ある よう に ) 必要 で あれ ば z = 0 . 0 と 仮定 し て 、 常に 3 次元 の 精密 な 座標 に 変換 さ れ 、 各 座標 について v 3 d () が 呼び出さ れ ます 。 
各 座標 と 各 法線 は ( x , y , z ) から なる タプル で なけれ ば なり ませ ん 。 3 つ の 座標 が 渡さ れ なけれ ば なり ませ ん 。 
浮動 小数点 数 と 整数 を 混合 し て 使え ます 。 各 ペア について 、 法線 に対して n 3 f () が 呼び出さ れ 、 座標 に対して v 3 f () が 呼び出さ れ ます 。 
nvarray () と 似 て い ます が 、 各 ペア は 始め に 座標 を 、 2 番目 に 法線 を 持っ て い ます 。 
nurbs ( 非 均一 有理 B スプライン ) 曲面 を 定義 し ます 。 
ctl [][] の 次元 は 以下 の よう に 計算 さ れ ます :[ len ( s _ k ) - s _ ord ]、[ len ( t _ k ) - t _ ord ]。 
nurbs ( 非 均一 有理 B スプライン ) 曲線 を 定義 し ます 。 ctlpoints の 長 さ は 、 len ( knots ) - order 
区分 線形 曲線 ( piecewise - linear curve ) を 定義 し ます 。 points は 座標 の リスト です 。 
type は N _ ST で なけれ ば なり ませ ん 。 
これら の 関数 は ただ 一つ の 引数 を 取り 、 pick / select に 使う バッファ の サイズ を 設定 し ます 。 
これら の 関数 は 引数 を 取り ませ ん 。 
pick / select に 使わ れ て いる バッファ の 大き さ を 示す 整数 の リスト を 返し ます 。 バッファ が あふれ て いる の を 検出 する メソッド は あり ませ ん 。 
小さい です が 完全 な Python の GL プログラム の 例 を ここ に 挙げ ます : 
PyOpenGL : Python の OpenGL と の 結合 
へ の インターフェース が 利用 でき ます ; 詳しく は PyOpenGL 
プロジェクト http :// pyopengl . sourceforge . net / から 情報 を 入手 でき ます 。 
これ は 、 SGI の ハードウェア が 1996 年 頃 より 前 で ある 必要 が ない ので 、 OpenGL の 方 が 良い 選択 かも しれ ませ ん 。 
glob モジュール は Unix シェル で 使わ れ て いる ルール に従って 指定 さ れ た パターン に マッチ する すべて の パス 名 を 見つけ出し ます 。 
チルダ 展開 は 使え ませ ん が 、 *、 ? と [] で 表さ れる 文字 範囲 に は 正しく マッチ し ます 。 
( チルダ 展開 と シェル 変数 展開 を 利用 し たけれ ば 、 os . path . expantion () と os . path . expandvars () を 使っ て ください 。 
結果 に は ( シェル と 同じく ) 壊れ た シンボリックリンク も 含ま れ ます 。 
たとえば 、 次 の ファイル だけ が ある ディレクトリ を 考え て ください : 1 . gif 、 2 . txt 、 and card . gif 。 glob () は 次 の よう な 結果 に なり ます 。 
パス に 接頭 する どの 部分 が 保た れ て いる か に 注意 し て ください 。 
シェル 形式 の ( パス で は ない ) ファイル 名 展開 . 
この モジュール で は 、 gopher プロトコル の クライアント 側 について 最小限 の 実装 を 提供 し て い ます 。 
この モジュール は 
モジュール で gopher プロトコル を 使う URL を 扱う ため に 用い られ ます 。 この モジュール で は 以下 の 関数 を 定義 し て い ます : 
selector 文字 列 を host および port ( 標準 の 値 は 70 です ) の gopher サーバ に 送信 し ます 。 
返信 さ れ た ドキュメント データ を 読み出す ため の 、 開か れ た 状態 の ファイル オブジェクト を 返し ます 。 
selector 文字 列 、 および query 文字 列 を host および port ( 標準 の 値 は 70 です ) の gopher サーバ に 送信 し ます 。 
返信 さ れ た ドキュメント データ を 読み出す ため の 、 開か れ た 状態 の ファイル オブジェクト を 返し ます 。 
gopher サーバ から 返さ れる データ は 任意 の 形式 で あり 、 セレクタ ( selector ) 文字 列 の 最初 の 文字 に 依存 する ので 注意 し て ください 。 
データ が テキスト ( セレクタ の 最初 の 文字 が " 0 ") の 場合 、 各行 は CRLF で 終端 さ れ 、 データ 全体 は "." 一 個 だけ から なる 行 で 終端 さ れ ます 。 ".." で 始まる 行 の 先頭 は "." に 置き換え られ ます 。 
ディレクトリ リスト ( セレクタ の 最初 の 文字 が " 1 ") の 場合 に も 、 同じ プロトコル で 転送 さ れ ます 。 
グループ 名 
( 暗号 化 さ れ た ) グループ パスワード ; しばしば 空文字 列 に なり ます 
数字 の グループ ID 
グループ メンバ の 全て の ユーザ 名 
gid は 整数 、 名前 および パスワード は 文字 列 、 そして メンバ リスト は 文字 列 から なる リスト です 。 ( ほとんど の ユーザ は 、 パスワード データベース で 自分 が 入れ られ て いる グループ の メンバ として グループ データベース 内 で は 明示 的 に 列挙 さ れ て い ない ので 注意 し て ください 。 
完全 な メンバ 情報 を 取得 する に は 両方 の データベース を 調べ て ください 。 ) この モジュール で は 以下 の 内容 を 定義 し て い ます : 
与え られ た グループ ID に対する グループデータベースエントリ を 返し ます 。 要求 し た エントリ が 見つから なかっ た 場合 、 KeyError が 送出 さ れ ます 。 
与え られ た グループ 名 に対する グループデータベースエントリ を 返し ます 。 要求 し た エントリ が 見つから なかっ た 場合 、 KeyError が 送出 さ れ ます 。 
全て の 入手 可能 な グループ エントリ を 返し ます 。 順番 は 決まっ て い ませ ん 。 
この モジュール と 類似 の 、 ユーザ データベース へ の インタフェース 。 . 
gzip や gunzip プログラム で 解凍 できる 、 compress や pack による 他 の 形式 の 圧縮 ファイル は この モジュール で は サポート さ れ て い ない ので 注意 し て ください 。 この モジュール で は 以下 の 項目 を 定義 し て い ます : 
クラス GzipFile 
GzipFile クラス の コンス トラクタ です 。 GzipFile オブジェクト は readinto () と truncate () メソッド を 除く ほとんど の ファイル オブジェクト の メソッド を シミュレート し ます 。 
値 は デフォルト で は None で 、 ファイル オブジェクト を 生成 する ため に filename を 開き ます 。 gzip ファイル ヘッダ 中 に は 、 ファイル が 解凍 さ れ た とき の 元 の ファイル 名 を 収める こと が でき ます が 、 fileobj が None で ない 場合 、 引数 filename が ファイル 名 として 認識 できる 文字 列 で あれ ば 、 filename は ファイル ヘッダ に 収める ため だけ に 使わ れ ます 。 
デフォルト の 値 は 9 です 。 圧縮 し た データ の 後ろ に さらに 何 か 追記 し たい 場合 も ある ので 、 GzipFile オブジェクト の close () メソッド 呼び出し は fileobj を クローズ し ませ ん 。 
この 機能 によって 、 書き込み の ため に オープン し た StringIO オブジェクト を fileobj として 渡し 、 ( GzipFile を close () し た 後 に ) StringIO オブジェクト の getvalue () メソッド を 使っ て 書き込ん だ データ の 入っ て いる メモリ バッファ を 取得 する こと が でき ます 。 
compresslevel ) の 短縮 形 です 。 
引数 filename は 必須 です 。 デフォルト で mode は ' rb ' に 、 compresslevel は 9 に 設定 さ れ て い ます 。 
gzip ファイル 形式 の サポート を 行う ため に 必要 な 基本 ライブラリ モジュール 。 . 
この モジュール で は ヒープキューアルゴリズム の 一 実装 を 提供 し て い ます 。 
優先 度 キュー アルゴリズム として も 知ら れ て い ます 。 
ヒープ と は 、 全て の k に対して 、 ゼロ から 要素 を 数え て いっ た 際 に 、 
heap [ 0 ] が 常に 最小 の 要素 に なる こと です 。 
以下 の API は 教科書 における ヒープ アルゴリズム と は 2 つ の 側面 で 異なっ て い ます : ( a ) ゼロ ベース の インデクス 化 を 行っ て い ます 。 
これ により 、 ノード に対する インデクス と その 子 ノード の インデクス の 関係 が やや 明瞭 で なく なり ます が 、 Python は ゼロ ベース の インデクス 化 を 使っ て いる ので より しっくり き ます 。 
( b ) われわれ の pop メソッド は 最大 の 要素 で は なく 最小 の 要素 ( 教科書 で は " min heap : 最小 ヒープ " と 呼ば れ て い ます ; 教科書 で は 並べ 替え を インプレース で 行う の に 適し た " max heap : 最大 ヒープ " が 一般 的 です )。 これら の 2 点 によって 、 ユーザ に 戸惑い を 与える こと なく 、 ヒープ を 通常 の Python リスト として 見る こと が でき ます : 
heap [ 0 ] が 最小 の 要素 と なり 、 
heap . sort () は ヒープ を 不変 な まま に 保ち ます ! ヒープ を 作成 する に は 、 [] に 初期 化 さ れ た リスト を 使う か 、 heapify () を 用い て 要素 の 入っ た リスト を 変換 し ます 。 以下 の 関数 が 提供 さ れ て い ます : 
item を heap に push し ます 。 ヒープ を 不変 に 保ち ます 。 
pop を 行い 、 heap から 最初 の 要素 を 返し ます 。 ヒープ は 不変 に 保た れ ます 。 
ヒープ が 空 の 場合 、 IndexError が 送出 さ れ ます 。 
リスト x を インプレース 処理 し 、 線形 時間 で ヒープ に 変換 し ます 。 
heap から 最小 の 要素 を pop し て 返し 、 新た に item を push し ます 。 
返さ れる 値 は item より も 大きく なる かも しれ ない ので 気 を つけ て ください ! これ により 、 この ルーチン の 合理 的 な 利用 法 は 条件 つき 置換 の 一部 として 使わ れる こと に 制限 さ れ て い ます 。 
使用 例 を 以下 に 示し ます : 
この モジュール で は さらに 2 つ の ヒープ に 基く 汎用 関数 を 提供 し ます 。 
iterable で 定義 さ れる データセット の うち 、 最大 値 から 降順 に n 個 の 値 の リスト を 返し ます 。 
以下 の コード と 同等 です : sorted ( iterable , reverse = True )[: n ] バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
iterable で 定義 さ れる データセット の うち 、 最小 値 から 昇順 に n 個 の 値 の リスト を 返し ます 。 
以下 の コード と 同等 です : sorted ( iterable )[: n ] 
どちら の 関数 も n の 値 が 小さな 場合 に 最適 な 動作 を し ます 。 
大きな 値 の 時 に は sorted () 関数 の 方 が 効率 的 です 。 
さらに 、 n == 1 の 時 に は min () および max () 関数 の 方 が 効率 的 です 。 
この モジュール で は RFC 2104 で 記述 さ れ て いる HMAC アルゴリズム を 実装 し て い ます 。 
新た な hmac オブジェクト を 返し ます 。 
標準 で は 
モジュール に なっ て い ます 。 
HMAC オブジェクト は 以下 の メソッド を 持っ て い ます : 
hmac オブジェクト を 文字 列 msg で 更新 し ます 。 
繰り返し 呼び出し を 行う と 、 それら の 引数 を 全て 結合 し た 引数 で 単一 の 呼び出し を し た 際 と 同じ に 等価 に なり ます : すなわち m . update ( a ); m . update ( b ) は m . update ( a + b ) と 等価 です 。 
これ まで update () メソッド に 渡さ れ た 文字 列 の ダイジェスト 値 を 返し ます 。 
個 の 値 は 16 バイト の 文字 列 ( 
の 場合 ) か 、 20 バイト の 文字 列 ( 
の 場合 ) で 、 NULL バイト を 含む 非 ASCII 文字 が 含ま れる こと が あり ます 。 
digest () と 似 て い ます が 、 ダイジェスト 値 が 
の とき で 長 さ 32 文字 ( 
の とき で 40 文字 ) の 16 進 数字 のみ を 含む 文字 列 で 返さ れ ます 。 
この 値 は 電子 メール や その他 の 非 バイナリ 環境 で 値 を やり取り する 際 に 使う こと が でき ます 。 
hmac オブジェクト の (`` クローン '' の ) コピー を 返し ます 。 
この コピー は 最初 の 部分 文字 列 が 共通 に なっ て いる 文字 列 の ダイジェスト 値 を 効率 よく 計算 する ため に 使う こと が でき ます 。 
10 . 8 拡張 
この モジュール は _ hotshot C モジュール へ の より 良い インターフェース を 提供 し ます 。 Hotshot は 既存 の 
に 置き換わる もの です 。 
その 大半 が C で 書か れ て いる ため 、 
に 比べ パフォーマンス 上 の 影響 が はるか に 少なく 済み ます 。 hotshot プロファイラ は まだ スレッド 環境 で は うまく 動作 し ませ ん 。 
測定 し たい コード 上 で プロファイラ を 実行 する ため に スレッド を 使わ ない 版 の スクリプト を 使う 方法 が 有用 です 。 
クラス Profile 
プロファイラ・オブジェクト 。 
引数 logfile は プロファイル ・ データ の ログ を 保存 する ファイル 名 です 。 
引数 lineevents は ソース コード の 1 行 ごと に イベント を 発生 さ せる か 、 関数 の 呼び出し / リターン の とき だけ 発生 さ せる か を 指定 し ます 。 
デフォルト の 値 は 0 ( 関数 の 呼び出し / リターン の とき だけ ログ を 残す ) です 。 
引数 linetimings は 時間 情報 を 記録 する か どう か を 指定 し ます 。 
デフォルト の 値 は 1 ( 時間 情報 を 記録 する ) です 。 
この モジュール は hotshot プロファイル ・ データ を 標準 の pstats オブジェクト に ロード し ます 。 
filename から hotshot データ を 読み込み 、 pstats . Stats クラス の インスタンス を 返し ます 。 
profile モジュール の Stats クラス . 
この モジュール で は entitydefs 、 codepoint 2 name 、 entitydefs の 三つ の 辞書 を 定義 し て い ます 。 entitydefs は 
モジュール で HTMLParser クラス の entitydefs メンバ を 定義 する ため に 使わ れ ます 。 
この モジュール で は XHTML 1 . 0 で 定義 さ れ た 全て の エンティティ を 提供 し て おり 、 Latin - 1 キャラクタセット ( ISO - 8859 - 1 ) の 簡単 な テキスト 置換 を 行う 事 が でき ます 。 
各 XHTML 1 . 0 エンティティ 定義 について 、 ISO Latin - 1 における 置換 テキスト へ の 対応 付け を 行っ て いる 辞書 です 。 
HTML の エンティティ 名 を Unicode の コード ポイント に 変換 する ため の 辞書 です 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 codepoint 2 name 
A dictionary that maps Unicode codepoints to HTML entity names . Unicode の コード ポイント を HTML の エンティティ 名 に 変換 する ため の 辞書 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
この モジュール で は 、 ハイパーテキスト 記述 言語 ( HTML , HyperText Mark - up Language ) 形式 で 書式 化 さ れ た テキストファイル を 解析 する ため の 基盤 として 役立つ クラス を 定義 し て い ます 。 
この クラス は I / O と 直接的 に は 接続 さ れ ませ ん -- この クラス に は メソッド を 介し て 文字 列 形式 の 入力 を 提供 する 必要 が あり 、 出力 を 生成 する に は `` フォーマッタ ( formatter )'' オブジェクト の メソッド を 何 度 か 呼び出さ なく て は なり ませ ん 。 
HTMLParser クラス は 、 機能 を 追加 する ため に 他 の クラス の 基底 クラス として 利用 する よう に 設計 さ れ て おり 、 ほとんど の メソッド が 拡張 し たり 上書き し たり できる よう に なっ て い ます 。 
さらに この クラス は 
モジュール で 定義 さ れ て いる SGMLParser クラス から 導出 さ れ て おり 、 その 機能 を 拡張 し て い ます 。 
HTMLParser の 実装 は 、 RFC 1866 で 解説 さ れ て いる HTML 2 . 0 記述 言語 を サポート し ます 。 
formatter で は 2 つ の フォーマッタオブジェクト 実装 が 提供 さ れ て い ます ; フォーマッタ の インタフェース について の 情報 は 
モジュール の ドキュメント を 参照 し て ください 。 
以下 は sgmllib . SGMLParser で 定義 さ れ て いる インタフェース の 概要 です : 
インスタンス に データ を 与える ため の インタフェース は feed () メソッド で 、 この メソッド は 文字 列 を 引数 に 取り ます 。 
この メソッド に 一 度 に 与える テキスト は 必要 に 応じ て 多く も 少なくも でき ます ; という の は " p . feed ( a ); p . feed ( b )" は " p . feed ( a + b )" と 同じ 効果 を 持つ から です 。 
与え られ た データ が 完全 な HTML マーク アップ 文 を 含む 場合 、 それら の 文 は 即座 に 処理 さ れ ます ; 不完全 な マーク アップ 構造 は バッファ に 保存 さ れ ます 。 
全て の 未 処理 データ を 強制 的 に 処理 さ せる に は 、 close () メソッド を 呼び出し ます 。 例えば 、 ファイル の 全 内容 を 解析 する に は : 
parser . feed ( open (' myfile . html '). read ()) parser . close () の よう に し ます 。 
HTML タグ に対して 意味 付け を 定義 する ため の インタフェース は とても 単純 です : サブ クラス を 導出 し て 、 start _ tag ()、 end _ tag ()、 あるいは do _ tag () といった メソッド を 定義 する だけ です 。 
パーザ は これら の メソッド を 適切 な タイミング で 呼び出し ます : start _ tag 
や do _ tag () は tag ... の 形式 の 開始 タグ に 遭遇 し た 時 に 呼び出さ れ ます ; end _ tag () は tag の 形式 の 終了 タグ に 遭遇 し た 時 に 呼び出さ れ ます 。 
H 1 ... / H 1 の よう に 開始 タグ が 終了 タグ と 対応 し て いる 必要 が ある 場合 、 クラス 中 で start _ tag () が 定義 さ れ て い なけれ ば なり ませ ん ; P の よう に 終了 タグ が 必要 ない 場合 、 クラス 中 で は do _ tag () を 定義 し なけれ ば なり ませ ん 。 
この モジュール で は パーザ クラス と 例外 を 一つ づつ 定義 し て い ます : 
基底 と なる HTML パーザ クラス です 。 
XHTML 1 . 0 仕様 ( http :// www . w 3 . rog / TR / xhtml 1 ) 勧告 で 要求 さ れ て いる 全て の エンティティ 名 を サポート し て い ます 。 
HTMLParser クラス が パーズ 処理 中 に エラー に 遭遇 し た 場合 に 送出 する 例外 です 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
抽象 化 さ れ た 書式 イベント の 流れ を writer オブジェクト 上 の 特定 の 出力 イベント に 変換 する ため の インターフェース 。 
HTML パーザ の ひとつ です 。 やや 低い レベル で しか 入力 を 扱え ませ ん が 、 XHTML を 扱う こと が できる よう に 設計 さ れ て い ます 。 
`` 広く 知ら れ て いる HTML ( HTML as deployed )'' で は 使わ れ て おら ず かつ XHTML で は 正しく ない と さ れる SGML 構文 の いくつ か は 実装 さ れ て い ませ ん 。 . 
XHTML 1 . 0 エンティティ に対する 置換 テキスト の 定義 。 
HTMLParser の 基底 クラス 。 
この モジュール で は HTTP および HTTPS プロトコル の クライアント 側 を 実装 し て いる クラス を 定義 し て い ます 。 
通常 、 この モジュール は 直接 使い ませ ん -- 
モジュール が HTTP や HTTPS を 使っ た URL を 扱う 上 で この モジュール を 使い ます 。 
注意 : HTTPS の サポート は 、 SSL を サポート する よう に 
この モジュール で は 以下 の クラス を 提供 し て い ます : 
クラス HTTPConnection 
HTTPConnection インスタンス は 、 HTTP サーバ と の 一 回 の トランザクション を 表現 し ます 。 
インスタンス の 生成 は ホスト 名 と オプション の ポート 番号 を 与え て 行い ます 。 ポート 番号 を 指定 し なかっ た 場合 、 ホスト 名 文字 列 が 
の 形式 で あれ ば 、 ホスト 名 から ポート 番号 を 導き 、 そう で ない 場合 に は 標準 の HTTP ポート 番号 ( 80 ) を 使い ます 。 
例えば 、 以下 の 呼び出し は 全て 同じ サーバ の 同じ ポート に 接続 する インスタンス を 生成 し ます : 
クラス HTTPSConnection 
HTTPConnection の サブ クラス で 、 セキュア な サーバ と 通信 する ため に SSL を 使い ます 。 
標準 の ポート 番号 は 443 です 。 key _ file に は 、 秘密 鍵 を 格納 し た PEM 形式 ファイル の ファイル 名 を 指定 し ます 。 
この モジュール における 他 の 例外 クラス の 基底 クラス です 。 
Exception の サブ クラス です 。 
HTTPException サブ クラス です 。 
HTTPException の サブ クラス です 。 ポート 番号 を 指定 し た ものの 、 その 値 が 数字 で なかっ たり 空 の オブジェクト で あっ た 場合 に 送出 さ れ ます 。 
HTTPException の サブ クラス です 。 
ImproperConnectionState の サブ クラス です 。 
HTTPException の サブ クラス です 。 
サーバ が 理解 でき ない HTTP 状態 コード で 応答 し た 場合 に 送出 さ れ ます 。 
この モジュール で 定義 さ れ て いる 定数 は 以下 の 通り です : 
HTTP プロトコル の 標準 の ポート ( 通常 は 80 ) です 。 
HTTPS プロトコル の 標準 の ポート ( 通常 は 443 ) です 。 
また 、 整数 の 状態 コード について 以下 の 定数 が 定義 さ れ て い ます : 
11 . 6 . 1 HTTPConnection オブジェクト 
この モジュール で は 、 Macintosh の インターネット 設定 ( Internet Config ) パッケージ へ の アクセス を 提供 し て い ます 。 
この パッケージ に は インターネット プログラム の 設定 、 例えば メールアドレス 、 デフォルト の ホームページ など が 収録 さ れ て い ます 。 
それ 以外 に も 、 インターネット 設定 に は Macintosh の クリエータ / タイプ と ファイル 名 の 拡張 子 と の 対応 付け や 、 ファイル の 転送 方法 ( バイナリ 、 アスキー など ) に関する 情報 が 収め られ て い ます 。 
MacOS 9 以降 で は 、 この モジュール は 「 インターネット 」 という 名前 の コントロール パネル に なり まし た 。 
この モジュール に は 、 icglue という 低 水準 の 関連 モジュール が あり 、 インターネット 設定 へ の 基本 的 な アクセス 機能 を 提供 し て い ます 。 
ic モジュール 内部 で エラー が 生じ た とき に 送出 さ れる 例外 です 。 
ic モジュール は 以下 の クラス と 関数 を 定義 し て い ます : 
クラス IC 
インターネット 設定 オブジェクト を 作成 し ます 。 
signature は 、 IC の 設定 に 影響 を 及ぼす 可能 性 の ある 現在 の アプリケーション を 表す 4 文字 の クリエータコード ( デフォルト は ' Pyth ') です 。 
オプション の 引数 ic は 低 水準 モジュール で あらかじめ 作成 し て おい た icglue . icinstance で 、 別 の 設定 ファイル など から 設定 を 得る 場合 に 便利 です 。 
これら の 関数 は 、 後述 する 同名 の メソッド へ の 「 ショートカット 」 です 。 
icopen を イン ポート する と 、 組込み open () を 新しい ファイル 用 に ファイル タイプ および クリエーター を 設定 する ため に InternetConfig を 使用 する バージョン に 置き換え ます 。 
imageop モジュール は 画像 に関する 便利 な 演算 が ふくま れ て い ます 。 Python 文字 列 に 保存 さ れ て いる 8 または 32 ビット の ピクセル から 構成 さ れる 画像 を 操作 し ます 。 
これ は gl . lrectwrite () と 
モジュール が 使用 し て いる もの と 同じ フォーマット です 。 モジュール は 次 の 変数 と 関数 を 定義 し て い ます : 
この 例外 は ピクセル 当り の 未知 の ビット 数 など の すべて の エラー で 発生 さ せ られ ます 。 
image は width×height の 大き さ で 、 psize バイト の ピクセル から 構成 さ れ なけれ ば なり ませ ん 。 
x 0 、 y 0 、 x 1 および y 1 は gl . lrectread () パラメータ と 同様 です 。 すなわち 、 境界 は 新 画像 に 含ま れ ます 。 
新しい 境界 は 画像 の 内部 で ある 必要 は あり ませ ん 。 
旧 画像 の 外側 に なる ピクセル は 値 を ゼロ に 設定 さ れ ます 。 
x 0 が x 1 より 大きけれ ば 、 新 画像 は 鏡 像 反転 さ れ ます 。 
y 軸 について も 同じ こと が 適用 さ れ ます 。 
その ため 、 コンピュータ で 作っ た 画像 や ディザ 処理 さ れ た 画像 は 伸縮 し た 後 見た目 が 良く あり ませ ん 。 
垂直 ローパスフィルタ 処理 を 画像 全体 に 行い ます 。 
それぞれ の 目標 ピクセル を 垂直 に 並ん だ 二つ の 元 ピクセル から 計算 する こと で 行い ます 。 
この ルーチン の 主 な 用途 として は 、 画像 が インター レース 走査 の ビデオ 装置 に 表示 さ れ た 場合 に 極端 な ちら つき を 抑える ため に 用い ます 。 その ため 、 この 名前 が あり ます 。 
全 ピクセル を 二 値 化 する こと によって 、 深 さ 8 ビット の グレー スケール 画像 を 深 さ 1 ビット の 画像 へ 変換 し ます 。 
処理 後 の 画像 は 隙間 なく 詰め込ま れ 、 おそらく mono 2 grey () の 引数 として しか 使い道 が ない でしょ う 。 
( ばかばかしい ほど 単純 な ) ディザ 処理 アルゴリズム を 用い て 、 8 ビット グレー スケール 画像 を 1 ビット の モノクロ 画像 に 変換 し ます 。 
1 ビット モノクロ が 象 画像 を 8 ビット の グレー スケール または カラー 画像 に 変換 し ます 。 入力 で 値 ゼロ の 全て の ピクセル は 出力 で は 値 p 0 を 取り 、 値 0 の 入力 ピクセル は 出力 で は 値 p 1 を 取り ます 。 
白黒 の モノクロ 画像 を グレー スケール へ 変換 する ため に は 、 値 0 と 255 を それぞれ 渡し て ください 。 
ディザ 処理 を 行わ ず に 、 8 ビット グレー スケール 画像 を 4 ビット グレー スケール 画像 へ 変換 し ます 。 
ディザ 処理 を 行わ ず に 、 8 ビット グレー スケール 画像 を 2 ビット グレー スケール 画像 に 変換 し ます 。 
ディザ 処理 を 行い 、 8 ビット グレー スケール 画像 を 2 ビット グレー スケール 画像 へ 変換 し ます 。 
dither 2 mono () について は 、 ディザ 処理 アルゴリズム は 現在 とても 単純 です 。 
4 ビット グレー スケール 画像 を 8 ビット グレー スケール 画像 へ 変換 し ます 。 
2 ビット グレー スケール 画像 を 8 ビット グレー スケール 画像 へ 変換 し ます 。 
0 に セット する と 、 この モジュール の 関数 は 、 リトルエンディアン の システム で 以前 の バージョン と 互換 性 の ない 方法 で マルチバイトピクセル 値 を 表現 する よう に なり ます 。 
この モジュール で は 三つ の クラス 、 IMAP 4 , IMAP 4 _ SSL と IMAP 4 _ stream を 定義 し ます 。 これら の クラス は IMAP 4 サーバ へ の 接続 を カプセル 化 し 、 RFC 2060 に 定義 さ れ て いる IMAP 4 rev 1 クライアントプロトコル の 大 規模 な サブ セット を 実装 し て い ます 。 
この クラス は IMAP 4 ( RFC 1730 ) 準拠 の サーバ と 後方 互換 性 が あり ます が 、 " STATUS " コマンド は IMAP 4 で は サポート さ れ て い ない ので 注意 し て ください 。 imaplib モジュール 内 で は 三つ の クラス を 提供 し て おり 、 IMAP 4 は 基底 クラス と なり ます : 
クラス IMAP 4 
この クラス は 実際 の IMAP 4 プロトコル を 実装 し て い ます 。 
例外 は IMAP 4 クラス の 属性 として 定義 さ れ て い ます : 
何らかの エラー 発生 の 際 に 送出 さ れる 例外 です 。 
例外 の 理由 は 文字 列 として コンス トラクタ に 渡さ れ ます 。 
IMAP 4 サーバ の エラー が 生じる と 、 この 例外 が 送出 さ れ ます 。 
この 例外 は IMAP 4 . error の サブ クラス です 。 
通常 、 インスタンス を 閉じ 、 新た な インスタンス を 再び 生成 する こと で 、 この 例外 から 復旧 でき ます 。 
この 例外 は 書き込み 可能 な メイル ボックス の 状態 が サーバ によって 変更 さ れ た 際 に 送出 さ れ ます 。 
この 例外 は IMAP 4 . error の サブ クラス です 。 
他 の 何らかの クライアント が 現在 書き込み 権限 を 獲得 し て おり 、 メイル ボックス を 開き なおし て 書き込み 権限 を 再 獲得 する 必要 が あり ます 。 
この モジュール で は もう 一つ 、 安全 ( secure ) な 接続 を 使っ た サブ クラス が あり ます : 
クラス IMAP 4 _ SSL 
IMAP 4 から 導出 さ れ た サブ クラス で 、 SSL 暗号 化 ソケット を 介し て 接続 を 行い ます ( この クラス を 利用 する ため に は SSL サポート 付き で コンパイル さ れ た socket モジュール が 必要 です ) 。 
host が 指定 さ れ て い ない 場合 、 '' ( ローカル ホスト ) が 用い られ ます 。 
port が 省略 さ れ た 場合 、 標準 の IMAP 4 - over - SSL ポート 番号 ( 993 ) が 用い られ ます 。 
keyfile および certfile も オプション です - これら は SSL 接続 の ため の PEM 形式 の 秘密 鍵 ( private key ) と 認証 チェイン ( certificate chain ) ファイル です 。 
さらに もう 一つ の サブ クラス は 、 子 プロセス で 確立 し た 接続 を 使用 する 場合 に 使用 し ます 。 
クラス IMAP 4 _ stream 
IMAP 4 から 導出 さ れ た サブ クラス で 、 command を os . popen 2 () に 渡し て 作成 さ れる stdin / stdout ディスクリプタ と 接続 し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
以下 の ユーティリティ 関数 が 定義 さ れ て い ます : 
IMAP 4 INTERNALDATE 文字 列 を 標準 世界 時 ( Coordinated Universal Time ) に 変換 し ます 。 
モジュール 形式 の タプル を 返し ます 。 
整数 を [ A .. P ] から なる 文字 集合 を 用い て 表現 し た 文字 列 に 変換 し ます 。 
IMAP 4 " FLAGS " 応答 を 個々 の フラグ から なる タプル に 変換 し ます 。 
モジュールタプル を IMAP 4 " INTERNALDATE " 表現 形式 に 変換 し ます 。 
文字 列 形式 : " DD - Mmm - YYYY HH : MM : SS + HHMM " ( 二 重 引用 符 含む ) を 返し ます 。 
IMAP 4 メッセージ 番号 は 、 メイル ボックス に対する 変更 が 行わ れ た 後 に は 変化 し ます ; 特に 、 " EXPUNGE " 命令 は メッセージ の 削除 を 行い ます が 、 残っ た メッセージ に は 再度 番号 を 振り なおし ます 。 
従って 、 メッセージ 番号 で は なく 、 UID 命令 を 使い 、 その UID を 利用 する よう 強く 勧め ます 。 モジュール の 末尾 に 、 より 拡張 的 な 使用 例 が 収め られ た テスト セクション が あり ます 。 
プロトコル に関する 記述 、 および プロトコル を 実装 し た サーバ の ソース と バイナリ は 、 全て ワシントン 大学 の IMAP Information Center ( http :// www . cac . washington . edu / imap /) に あり ます 。 
imgfile モジュール は 、 Python プログラム が SGI imglib 画像 ファイル (. rgb ファイル として も 知ら れ て い ます ) に アクセス できる よう に し ます 。 
この モジュール は 完全 な もの に は ほど遠い です が 、 その 機能 は ある 状況 で 十 分 役に立つ もの な ので 、 ライブラリ で 提供 さ れ て い ます 。 
現在 、 カラー マップ 形式 の ファイル は サポート さ れ て い ませ ん 。 この モジュール で は 以下 の 変数 および 関数 が 定義 さ れ て い ます : 
この 例外 は 、 サポート さ れ て い ない ファイル 形式 の 場合 の よう な 全て の エラー で 送出 さ れ ます 。 
この 関数 は タプル ( x , y , z ) を 返し ます 。 x および y は 画像 の サイズ を ピクセル で 表し た もの で 、 z は ピクセル あたり の バイト 長 です 。 
3 バイト の RGB ピクセル と 1 バイト の グレイスケールピクセル のみ が 現在 サポート さ れ て い ます 。 
この 関数 は 指定 さ れ た ファイル 上 の 画像 を 読み出し て 復号 化 し 、 Python 文字 列 として 返し ます 。 
この 文字 列 は 1 バイト の グレイスケールピクセル か 、 4 バイト の RGBA ピクセル による もの です 。 
左下 の ピクセル が 文字 列 中 の 最初 の ピクセル に なり ます 。 
これ は gl . lrectwrite () に 渡す の に 適し た 形式 です 。 
この 関数 は read と 同じ です が 、 x および y の サイズ に スケール さ れ た 画像 を 返し ます 。 
filter および blur パラメタ が 省略 さ れ た 場合 、 単に ピクセル データ を 捨て たり 複製 し たり する こと によって スケール 操作 が 行わ れる ので 、 処理 結果 は 、 特に 計算 機上 で 合成 し た 画像 の 場合 に は およそ 完璧 と は いえ ない もの に なり ます 。 そう する 代わり に 、 スケール 操作 後 に 画像 を 平滑 化 する ため に 用いる フィルタ を 指定 する こと が でき ます 。 
サポート さ れ て いる フィルタ の 形式 は ' impulse '、' box '、 ' triangle '、' quadratic '、 および ' gaussian ' です 。 
フィルタ を 指定 する 場合 、 blur は オプション の パラメタ で 、 フィルタ の 不明瞭 化 度 を 指定 し ます 。 
標準 の 値 は 1 . 0 です 。 
readscaled () は 正しい アスペクト 比 を まったく 維持 しよ う と し ない ので 、 それ は ユーザ の 責任 に なり ます 。 
この 関数 は 画像 の スキャン ライン の 読み書き を 下 から 上 に 向かっ て 行う ( フラグ が ゼロ の 場合 で 、 SGI GL 互換 です ) か 、 上 から 下 に 向かっ て 行う ( フラグ が 1 の 場合 で 、 X 互換 です ) か を 決定 する 大域 的 な フラグ を 設定 し ます 。 
この 関数 は data 中 の RGB または グレイ スケール の データ を 画像 ファイル file に 書き込み ます 。 
x および y に は 画像 の サイズ を 与え 、 z は 1 バイトグレイスケール 画像 の 場合 に は 1 で 、 RGB 画像 の 場合 に は 3 ( 4 バイト の 値 として 記憶 さ れ 、 下位 3 バイト が 使わ れ ます ) です 。 これら は gl . lrectread () が 返す データ の 形式 です 。 
imghdr モジュール は ファイル や バイト ストリーム に 含ま れる 画像 の 形式 を 決定 し ます 。 imghdr モジュール は 次 の 関数 を 定義 し て い ます : 
filename という 名前 の ファイル 内 の 画像 データ を テスト し 、 画像 形式 を 表す 文字 列 を 返し ます 。 
オプション の h が 与え られ た 場合 は 、 filename は 無視 さ れ 、 テスト する バイト ストリーム を 含ん で いる と h は 仮定 さ れ ます 。 
以下 に what () から の 戻り 値 とともに リスト する よう に 、 次 の 画像 形式 が 認識 さ れ ます : 
この 変数 に 追加 する こと で 、 あなた は imghdr が 認識 できる ファイル 形式 の リスト を 拡張 でき ます : 
個別 の テスト を 行う 関数 の リスト 。 
この 
モジュール は import 文 を 実装 する ため に 使わ れ て いる メカニズム へ の インター フェイス を 提供 し ます 。 
次 の 定数 と 関数 が 定義 さ れ て い ます : 
バイト コンパイル さ れ た コード ファイル (. pyc ファイル ) を 認識 する ため に 使わ れる マジック 文字 列 値 を 返し ます 。 
( この 値 は Python の 各 バージョン で 異なり ます 。 
三つ 組み の リスト を 返し ます 。 
それぞれ は モジュール の 特定 の 型 を 説明 し て い ます 。 
各 三つ 組み は 形式 ( suffix , mode , type ) を 持ち ます 。 ここ で 、 suffix は 探す ファイル 名 を 作る ため に モジュール 名 に 追加 する 文字 列 です 。 
検索 パス path 上 で モジュール name を 見つけよ う と し ます 。 
path が ディレクトリ 名 の リスト なら ば 、 上 の get _ suffixes () が 返す 拡張 子 の いずれ か を 伴っ た ファイル を 各 ディレクトリ の 中 で 検索 し ます 。 
リスト 内 の 有効 で ない 名前 は 黙っ て 無視 さ れ ます ( しか し 、 すべて の リスト 項目 は 文字 列 で なけれ ば なら ない )。 
path が 省略 さ れる か None なら ば 、 sys . path の ディレクトリ 名 の リスト が 検索 さ れ ます 。 
他 の 例外 は 引数 または 環境 に 問題 が ある こと を 示唆 し ます 。 この 関数 は 階層 的 な モジュール 名 ( ドット を 含ん だ 名前 ) を 扱い ませ ん 。 
P . M 、 すなわち 、 パッケージ P の サブ モジュール M を 見つける ため に は 、 パッケージ P を 見つけ て ロード する ため に find _ module () と load _ module () を 使い 、 それから 
P .__ path __ に 設定 さ れ た path 引数 とともに find _ module () を 使っ て ください 。 
P 自身 が ドット 名 の とき は 、 この レシピ を 再帰 的 に 適用 し て ください 。 
find _ module () を 使っ て ( あるいは 、 互換 性 の ある 結果 を 作り出す 検索 を 行っ て ) 以前 見つけ た モジュール を ロード し ます 。 
name 引数 は ( これ が パッケージ の サブ モジュール なら ば パッケージ 名 を 含む ) 完全 な モジュール 名 を 示し ます 。 
file 引数 は オープン し た ファイル で 、 filename は 対応 する ファイル 名 です 。 モジュール が ファイル から ロード さ れよ う と し て い ない とき 、 これら は それぞれ None と '' で あっ て も 構い ませ ん 。 
重要 : file 引数 が None で なけれ ば 、 例外 が 発生 し た 時 で さえ 呼び出し 側 に は それ を 閉じる 責任 が あり ます 。 
これ を 行う に は 、 try ... finally 文 を つかう こと が 最も 良い です 。 
name という 名前 の 新しい 空 モジュール オブジェクト を 返し ます 。 
この オブジェクト は sys . modules に 挿入 さ れ ませ ん 。 
言い換える と 、 元 の スレッド が その イン ポート ( および 、 もし ある なら ば 、 それ によって 引き起こさ れる イン ポート ) の 途中 で 構築 し た 不完全 な モジュール オブジェクト を 、 他 の スレッド が 見 られ ない よう に し ます 。 acquire _ lock 
実行 中 の スレッド で インタープリタ の インポートロック を 取得 し ます 。 
スレッドセーフ な インポートフック で は 、 イン ポート 時 に この ロック を 取得 し ます 。 スレッド の ない プラットホーム で は この 関数 は 何 も し ませ ん 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 release _ lock 
整数 値 を もつ 次 の 定数 は この モジュール の 中 で 定義 さ れ て おり 、 find _ module () の 検索 結果 を 表す ため に 使わ れ ます 。 
ソース ファイル として モジュール が 発見 さ れ た 。 
コンパイル さ れ た コード オブジェクト ファイル として モジュール が 発見 さ れ た 。 
動的 に ロード 可能 な 共有 ライブラリ として モジュール が 発見 さ れ た 。 
モジュール が Macintosh リソース として 発見 さ れ た 。 
この 値 は Macintosh で のみ 返さ れる 。 
パッケージ ディレクトリ として モジュール が 発見 さ れ た 。 
モジュール が 組み込み モジュール として 発見 さ れ た 。 
モジュール が フリーズ さ れ た モジュール として 発見 さ れ た ( init _ frozen () を 参照 )。 
使わ れ て い ませ ん 。 
name という 名前 の 組み込み モジュール を 初期 化 し 、 その モジュール オブジェクト を 返し ます 。 
モジュール が 既に 初期 化 さ れ て いる 場合 は 、 再度 初期 化 さ れ ます 。 
いくつ か の モジュール は 二 度 初期 化 する こと が でき ませ ん 。 -- これ を 再び 初期 化 しよ う と する と 、 ImportError 例外 が 発生 し ます 。 
name という 名前 の 組み込み モジュール が ない 場合 は 、 None を 返し ます 。 
name という 名前 の フリーズ さ れ た モジュール を 初期 化 し 、 モジュール オブジェクト を 返し ます 。 
name という 名前 の フリーズ さ れ た モジュール が ない 場合 は 、 None を 返し ます 。 
( フリーズ さ れ た モジュール は Python で 書か れ た モジュール で 、 その コンパイル さ れ た バイトコードオブジェクト が Python の freeze ユーティリティ を 使っ て カスタム ビルト Python インタープリタ へ 組み込ま れ て い ます 。 差し当たり 、 Tools / freeze / を 参照 し て ください 。 
name という 名前 の 再度 初期 化 できる 組み込み モジュール が ある 場合 は 、 1 を 返し ます 。 
name という 名前 の 再度 初期 化 でき ない 組み込み モジュール が ある 場合 は 、 - 1 を 返し ます ( init _ builtin () を 参照 し て ください )。 
name という 名前 の 組み込み モジュール が ない 場合 は 、 0 を 返し ます 。 is _ frozen 
name という 名前 の フリーズ さ れ た モジュール ( init _ frozen () を 参照 ) が ある 場合 は 、 True を 返し ます 。 または 、 その よう な モジュール が ない 場合 は 、 False を 返し ます 。 
バイト コンパイル さ れ た コード ファイル として 実装 さ れ て いる モジュール を ロード し て 初期 化 し 、 その モジュール オブジェクト を 返し ます 。 
モジュール が 既に 初期 化 さ れ て いる 場合 は 、 再度 初期 化 さ れ ます 。 
name 引数 は モジュール オブジェクト を 作っ たり 、 アクセス する ため に 使い ます 。 
pathname 引数 は バイト コンパイル さ れ た コード ファイル を 指し ます 。 
file 引数 は バイト コンパイル さ れ た コード ファイル で 、 バイナリ モード で オープン さ れ 、 先頭 から アクセス さ れ ます 。 現在 は 、 ユーザ 定義 の ファイル を エミュレート する クラス で は なく 、 実際 の ファイル オブジェクト で なけれ ば なり ませ ん 。 
動的 ロード 可能 な 共有 ライブラリ として 実装 さ れ て いる モジュール を ロード し て 初期 化 し ます 。 
モジュール が 既に 初期 化 さ れ て いる 場合 は 、 再度 初期 化 し ます 。 
いくつ か の モジュール で は それ が でき ず に 、 例外 を 発生 する か も しれ ませ ん 。 
pathname 引数 は 共有 ライブラリ を 指し て い なけれ ば なり ませ ん 。 
name 引数 は 初期 化 関数 の 名前 を 作る ため に 使わ れ ます 。 共有 ライブラリ の " initname ()" という 名前 の 外部 C 関数 が 呼び出さ れ ます 。 
オプション の file 引数 は 無視 さ れ ます 。 
( 注意 : 共有 ライブラリ は システム に 大きく 依存 し ます 。 
Python ソース ファイル として 実装 さ れ て いる モジュール を ロード し て 初期 化 し 、 モジュール オブジェクト を 返し ます 。 
モジュール が 既に 初期 化 さ れ て いる 場合 は 、 再度 初期 化 し ます 。 
name 引数 は モジュール オブジェクト を 作成 し たり 、 アクセス し たり する ため に 使わ れ ます 。 
pathname 引数 は ソース ファイル を 指し ます 。 
file 引数 は ソース ファイル で 、 テキスト として 読み込む ため に オープン さ れ 、 先頭 から アクセス さ れ ます 。 現在 は 、 ユーザ 定義 の ファイル を エミュレート する クラス で は なく 、 実際 の ファイル オブジェクト で なけれ ば なり ませ ん 。 
( 拡張 子 . pyc または . pyo を もつ ) 正しく 対応 する バイト コンパイル さ れ た ファイル が 存在 する 場合 は 、 与え られ た ソース ファイル を 構文 解析 する 代わり に それ が 使わ れる こと に 注意 し て ください 。 
3 . 10 . 1 演算 子 から 関数 へ の 対応 表 
inspect は 、 モジュール ・ クラス ・ メソッド ・ 関数 ・ トレー スバック・フレームオブジェクト・コードオブジェクト など の オブジェクト から 情報 を 取得 する 関数 を 定義 し て おり 、 クラス の 内容 を 調べる 、 メソッド の ソース コード を 取得 する 、 関数 の 引数 リスト を 取得 し て 整形 する 、 トレース バック から 必要 な 情報 だけ を 取得 し て 表示 する 、 など の 処理 を 行う 場合 に 利用 し ます 。 
この モジュール の 機能 は 、 型 チェック ・ ソース コード の 取得 ・ クラス / 関数 から 情報 を 取得 ・ インタープリタ の スタック 情報 の 調査 、 の 4 種類 に 分類 する 事 が でき ます 。 
5 . 14 . 3 不変 に 自動 変換 する ため の プロトコル 
この モジュール で は イテレータ を 構築 する 部品 を 実装 し て い ます 。 プログラム 言語 Haskell と SML から アイデア を 得 て い ます が 、 Python に 適し た 形 に 修正 さ れ て い ます 。 
この モジュール は 、 高速 で メモリ 効率 に 優れ 、 単独 で も 組み合わせ て も 使用 する こと の できる ツール を 標準 化 し た もの です 。 
標準 化 により 、 多数 の 個人 が 、 それぞれ の 好み と 命名 規約 で 、 それぞれ 少し だけ 異なる 実装 を 行う 為 に 発生 する 可読性 と 信頼 性 の 問題 を 軽減 する 事 が でき ます 。 
ここ で 定義 し た ツール は 簡単 に 組み合わせ て 使用 する こと が できる よう に なっ て おり 、 アプリケーション 固有 の ツール を 簡潔 かつ 効率 的 に 作成 する 事 が でき ます 。 例えば 、 SML の 作表 ツール tabulate ( f ) は f ( 0 ), f ( 1 ), ... の シーケンス を 作成 し ます 。 
この ツール ボックス で は imap () と count () を 用意 し て おり 、 この 二つ を 組み合わせ て imap ( f , count ()) と すれ ば 同じ 結果 を 得る 事 が でき ます 。 同様 に 、 
この jpeg モジュール は Independent JPEG Group 
( IJG ) によって 書か れ た JEPG 圧縮 及び 展開 アルゴリズム を 提供 し ます 。 
JPEG 形式 は 写真 等 の 画像 圧縮 で 標準 的 に 利用 さ れ 、 ISO 10918 で 定義 さ れ て ます 。 
JPEG 、 あるいは Independent JPEG Group ソフトウェア の 詳細 は 、 標準 JPEG 、 若しくは 提供 さ れる ソフトウェア の ドキュメント を 参照 し て ください 。 JPEG ファイル を 扱う ポータブル な インタフェース は Fredrik Lundh による Python Imaging Library ( PIL ) が あり ます 。 
また 、 PIL の 情報 は http :// www . pythonware . com / products / pil / で 見つける こと が でき ます 。 
モジュール jpeg で は 、 一つ の 例外 と いくつ か の 関数 を 定義 し て い ます 。 
関数 compress () または decompress () の エラー で 上げ られる 例外 です 。 
イメージ ファイル の 幅 w 、 高 さ h 、 1 ピクセル あたり の バイト 数 b を 引数 として 扱い ます 。 
データ は SGI GL 順 に なっ て い て 、 最初 の ピクセル は 左下 端 に なり ます 。 
形式 の イメージ が 含ま れ た 文字 列 を 返し ます 。 
データ は 圧縮 さ れ た JFIF 
形式 の イメージ が 含ま れ た 文字 列 で 、 この 関数 は タプル ( data , width , height , bytesperpixel ) を 返し ます 。 
また 、 その データ は gl . lrectwrite () を 通過 し ます 。 
compress () と decompress () を 呼ぶ ため の 様々 な オプション を セット し ます 。 
次 の オプション が 利用 でき ます : 
オプション 
効果 
入力 が RGB で も 強制 的 に グレー スケール を 出力 し ます 。 
圧縮 後 イメージ の 品質 を 0 から 100 の 間 の 値 で 指定 し ます ( デフォルト は 75 です )。 
これ は 圧縮 に のみ 影響 し ます 。 
ハフマン テーブル を 最適 化 し ます 。 
時間 が かかり ます が 、 高 圧縮 に なり ます 。 
これ は 圧縮 に のみ 影響 し ます 。 
圧縮 さ れ て い ない イメージ 上 で インターブロックスムーシング を 行い ます 。 
低 品質 イメージ に 役立ち ます 。 
これ は 展開 に のみ 影響 し ます 。 
この モジュール で は 、 Python プログラム で 文字 列 が キーワード か 否 か を チェック する 機能 を 提供 し ます 。 
s が Python の キーワード で あれ ば 真 を 返し ます 。 
インタープリタ で 定義 し て いる 全て の キーワード の シーケンス 。 
特定 の __ future __ 宣言 が なけれ ば 有効 で は ない キーワード で も この リスト に は 含ま れ ます 。 
linecache モジュール は 、 キャッシュ ( 一つ の ファイル から 何 行 も 読ん で おく の が 一般 的 です ) を 使っ て 、 内部 で 最適 化 を 図り つつ 、 任意 の ファイル の 任意 の 行 を 取得 する の を 可能 に し ます 。 
この モジュール は 
モジュール で 、 インクルード し た ソース を フォーマット さ れ た トレース バック で 復元 する の に 使わ れ て い ます 。 linecache モジュール で は 次 の 関数 が 定義 さ れ て い ます : 
filename という 名前 の ファイル から lineno 行 目 を 取得 し ます 。 
、 つまり 、 sys . path で その ファイル を 探し ます 。 
キャッシュ を クリア し ます 。 
それ まで に getline () を 使っ て 読み込ん だ ファイル の 行 が 必要 で なく なっ たら 、 この 関数 を 使っ て ください 。 
キャッシュ が 有効 か チェック し ます 。 
キャッシュ し た ファイル に ディスク 上 で 変更 が あっ た かも しれ なく て 、 更新 が 必要 な とき に この 関数 を 使っ て ください 。 
もし filename が なけれ ば 、 全て の キャッシュ エントリ を チェック し ます 。 
サンプル : 
locale モジュール は POSIX ロケールデータベース および ロ ケール 関連 機能 へ の アクセス を 提供 し ます 。 
POSIX ロ ケール 機構 を 使う こと で 、 プログラマ は ソフトウェア が 実行 さ れる 各国 における 詳細 を 知ら なく て も 、 アプリケーション 上 で 特定 の 地域 文化 に 関係 する 部分 を 扱う こと が でき ます 。 locale モジュール は 、 _ locale 
を 被う よう に 実装 さ れ て おり 、 ANSI C ロ ケール 実装 を 使っ て いる _ locale が 利用 可能 なら 、 こちら を 先 に 使う よう に なっ て い ます 。 locale モジュール で は 以下 の 例外 と 関数 を 定義 し て い ます : 
setlocale () が 失敗 し た とき に 送出 さ れる 例外 です 。 
locale を 指定 する 場合 、 文字 列 、 ( language code , encoding )、 から なる タプル 、 または None を とる こと が でき ます 。 locale が タプル の の 場合 、 ロ ケール 別名 解決 エンジン によって 文字 列 に 変換 さ れ ます 。 
locale が 与え られ て い て 、 かつ None で ない 場合 、 setlocale () は category の 設定 を 変更 し ます 。 
変更 する こと の できる カテゴリ は 以下 に 列記 さ れ て おり 、 値 は ロ ケール 設定 の 名前 です 。 
空 の 文字 列 を 指定 する と 、 ユーザ の 環境 における 標準 設定 に なり ます 。 
ロ ケール の 変更 に 失敗 し た 場合 、 Error が 送出 さ れ ます 。 
成功 し た 場合 、 新た な ロ ケール 設定 が 返さ れ ます 。 locale が 省略 さ れ たり None の 場合 、 category の 現在 の 設定 が 返さ れ ます 。 
setlocale () は ほとんど の システム で スレッド 安全 で は あり ませ ん 。 
これ は 全て の カテゴリ を ユーザ の 環境 における 標準 設定 ( 大抵 は 環境 変数 LANG で 指定 さ れ て い ます ) に 設定 し ます 。 
その後 複数 スレッド を 使っ て ロ ケール を 変更 し たり し ない 限り 、 問題 は 起こら ない はず です 。 
バージョン 2 . 0 で 変更 さ れ た 仕様 : 引数 locale の 値 として タプル を サポート し まし た 。 
地域 的 な 慣行 の データベース を 辞書 として 返し ます 。 辞書 は 以下 の 文字 列 を キー として 持っ て い ます : 
キー 名 
カテゴリ 
小数点 を 表す 文字 です 。 
' thousands _ sep ' が 来る かも しれ ない 場所 を 相対 的 に 表し た 数 から なる 配列 です 。 
配列 が CHAR _ MAX で 終端 さ れ て いる 場合 、 それ 以上 の 桁 で は 桁 数字 の グループ 化 を 行い ませ ん 。 
配列 が 0 で 終端 さ れ て いる 場合 、 最後 に 指定 し た グループ が 反復 的 に 使わ れ ます 。 
桁 グループ 間 を 区切る ため に 使わ れる 文字 です 。 
国際 通貨 を 表現 する 記号 です 。 
地域 的 な 通貨 を 表現 する 記号 です 。 
金額 表示 の 際 に 使わ れる 小数点 です 。 
金額 表示 の 際 に 桁 区切り 記号 です 。 
' grouping ' と 同じ で 、 金額 表示 の 際 に 使わ れ ます 。 
正 の 値 の 金額 表示 に 使わ れる 記号 です 。 
負 の 値 の 金額 表示 に 使わ れる 記号 です 。 
金額 を 地域 的 な 方法 で 表現 する 際 の 小数点 以下 の 桁 数 です 。 
金額 を 国際 的 な 方法 で 表現 する 際 の 小数点 以下 の 桁 数 です 。 
' p _ sign _ posn ' および ' n _ sing _ posn ' の 取り 得る 値 は 以下 の 通り です 。 
説明 
通貨 記号 および 値 は 丸 括弧 で 囲わ れ ます 。 
符号 は 値 と 通貨 記号 より 前 に 来 ます 。 
符号 は 値 と 通貨 記号 の 後 に 続き ます 。 
符号 は 値 の 直前 に 来 ます 。 
符号 は 値 の 直後 に 来 ます 。 
この ロ ケール で は 特に 指定 し ませ ん 。 
ロ ケール 特有 の 情報 を 文字 列 として 返し ます 。 
この 関数 は 全て の システム で 利用 可能 な わけ で は なく 、 指定 できる option も プラットフォーム 間 で 大きく 異なり ます 。 
引数 として 使える の は 、 locale モジュール で 利用 可能 な シンボル 定数 を 表す 数字 です 。 
標準 の ロ ケール 設定 を 取得 しよ う と 試み 、 結果 を タプル ( language code , encoding ) の 形式 で 返し ます 。 POSIX に よる と 、 setlocale ( LC _ ALL , '') を 呼ば なかっ た プログラム は 、 移植 可能 な ' C ' ロ ケール 設定 を 使い ます 。 
setlocale ( LC _ ALL , '') を 呼ぶ こと で 、 LANG 変数 で 定義 さ れ た 標準 の ロ ケール 設定 を 使う よう に なり ます 。 
Python で は 現在 の ロ ケール 設定 に 干渉 し たく ない ので 、 上 で 述べ た よう な 方法 で その 挙動 を エミュレーション し て い ます 。 他 の プラットフォーム と の 互換 性 を 維持 する ため に 、 環境 変数 LANG だけ で なく 、 引数 envvars で 指定 さ れ た 環境 変数 の リスト も 調べ られ ます 。 
envvars は 標準 で は GNU gettext で 使わ れ て いる サーチ パス に なり ます ; パス に は 必ず 変数 名 " LANG " が 含ま れ て いる から です 。 
与え られ た ロケールカテゴリ に対する 現在 の 設定 を 、 language code 、 encoding を 含む シーケンス で 返し ます 。 
テキスト データ を エン コード する 方法 を 、 ユーザ の 設定 に 基づい て 返し ます 。 
与え た ロ ケール 名 を 規格 化 し た ロケールコード を 返し ます 。 
返さ れる ロケールコード は setlocale () で 使う ため に 書式 化 さ れ て い ます 。 
category の ロ ケール を 標準 設定 に し ます 。 
現在 の LC _ COLLATE 設定 に従って 二つ の 文字 列 を 比較 し ます 。 
他 の 比較 を 行う 関数 と 同じ よう に 、 string 1 が string 2 に対して 前 に 来る か 、 後 に 来る か 、 あるいは 二つ が 等しい か によって 、 それぞれ 負 の 値 、 正 の 値 、 あるいは 0 を 返し ます 。 
文字 列 を 組み込み 関数 cmp () 
で 使える 形式 に 変換 し 、 かつ ロ ケール に 則し た 結果 を 返し ます 。 
この 関数 は 同じ 文字 列 が 何 度 も 比較 さ れる 場合 、 例えば 文字 列 から なる シーケンス を 順序付け て 並べる 際 に 使う こと が でき ます 。 
数値 val を 現在 の LC _ NUMERIC の 設定 に 基づい て 書式 化 し ます 。 
書式 は % 演算 子 の 慣行 に 従い ます 。 
浮動 小数点 数 について は 、 必要 に 応じ て 浮動 小数点 が 変更 さ れ ます 。 
grouping が 真 なら 、 ロ ケール に 配慮 し た 桁 数 の 区切り が 行わ れ ます 。 
浮動 小数点 数 を str ( float ) と 同じ よう に 書式 化 し ます が 、 ロ ケール に 配慮 し た 小数点 が 使わ れ ます 。 
文字 列 を LC _ NUMERIC で 設定 さ れ た 慣行 に従って 浮動 小数点 に 変換 し ます 。 
文字 列 を LC _ NUMERIC で 設定 さ れ た 慣行 に従って 整数 に 変換 し ます 。 
文字 タイプ 関連 の 関数 の ため の ロケールカテゴリ です 。 
この カテゴリ の 設定 に従って 、 モジュール 
における 関数 の 振る舞い が 変わり ます 。 
文字 列 を 並べ 替える ため の ロケールカテゴリ です 。 
locale モジュール の 関数 strcoll () および strxfrm () が 影響 を 受け ます 。 
時刻 を 書式 化 する ため の ロケールカテゴリ です 。 
time . strftime () は この カテゴリ に 設定 さ れ て いる 慣行 に 従い ます 。 
設定 可能 な オプション は 関数 localeconv () で 得る こと が でき ます 。 
メッセージ 表示 の ため の ロケールカテゴリ です 。 
現在 Python は アプリケーション 毎 に ロ ケール に 対応 し た メッセージ を 出力 する 機能 は サポート し て い ませ ん 。 
os . strerror () が 返す よう な 、 オペレーティングシステム によって 表示 さ れる メッセージ は この カテゴリ によって 影響 を 受け ます 。 
数字 を 書式 化 する ため の ロケールカテゴリ です 。 
関数 format ()、 atoi ()、 atof () および locale モジュール の str () が 影響 を 受け ます 。 
他 の 数値 書式 化 操作 は 影響 を 受け ませ ん 。 
全て の ロ ケール 設定 を 総合 し た もの です 。 
ロ ケール を 変更 する 際 に この フラグ が 使わ れ た 場合 、 その ロ ケール における 全て の カテゴリ を 設定 しよ う と 試み ます 。 
一つ で も 失敗 し た カテゴリ が あっ た 場合 、 全て の カテゴリ において 設定 変更 を 行い ませ ん 。 
この フラグ を 使っ て ロ ケール を 取得 し た 場合 、 全て の カテゴリ における 設定 を 示す 文字 列 が 返さ れ ます 。 
この 文字 列 は 、 後 に 設定 を 元 に 戻す ため に 使う こと が でき ます 。 
localeconv () の 返す 特別 な 値 の ため の シンボル 定数 です 。 
関数 nl _ langinfo は 以下 の キー の うち 一つ を 受理 し ます 。 ほとんど の 記述 は GNU C ライブラリ 中 の 対応 する 説明 から 引用 さ れ て い ます 。 
選択 さ れ た ロ ケール で 用い られ て いる 文字 エン コーディング の 名前 を 文字 列 で 返し ます 。 
時刻 および 日付 を ロ ケール 特有 の 方法 で 表現 する ため に 、 strftime ( 3 ) の 書式 化 文字 列 として 用いる こと の できる 文字 列 を 返し ます 。 
日付 を ロ ケール 特有 の 方法 で 表現 する ため に 、 strftime ( 3 ) の 書式 化 文字 列 として 用いる こと の できる 文字 列 を 返し ます 。 
時刻 を ロ ケール 特有 の 方法 で 表現 する ため に 、 strftime ( 3 ) の 書式 化 文字 列 として 用いる こと の できる 文字 列 を 返し ます 。 
時刻 を 午前 / 午後 の 書式 で 表現 する ため に 、 strftime ( 3 ) の 書式 化 文字 列 として 用いる こと の できる 文字 列 を 返し ます 。 返さ れる 値 は 
1 週間 中 の n 番目 の 曜日 名 を 返し ます 。 
警告 : ロ ケール US における 、 DAY _ 1 を 日曜日 と する 慣行 に 従っ て い ます 。 国際 的 な ( ISO 8601 ) 月曜日 を 週 の 初め と する 慣行 で は あり ませ ん 。 
1 週間 中 の n 番目 の 曜日 名 を 略式 表記 で 返し ます 。 
n 番目 の 月 の 名前 を 返し ます 。 
n 番目 の 月 の 名前 を 略式 表記 で 返し ます 。 
基数 点 ( 小数点 ドット 、 あるいは 小数点 コンマ 、 等 ) を 返し ます 。 
1000 単位 桁 区切り ( 3 桁 ごと の グループ 化 ) の 区切り 文字 を 返し ます 。 
肯定 / 否定 で 答える 質問 に対する 肯定 回答 を 正規 表現 関数 で 認識 する ため に 利用 できる 正規 表現 を 返し ます 。 
警告 : 表現 は C ライブラリ の regex () 関数 に 合っ た もの で なけれ ば なら ず 、 これ は 
で 使わ れ て いる 構文 と は 異なる かも しれ ませ ん 。 
肯定 / 否定 で 答える 質問 に対する 否定 回答 を 正規 表現 関数 で 認識 する ため に 利用 できる 正規 表現 を 返し ます 。 
通貨 シンボル を 返し ます 。 シンボル を 値 の 前 に 表示 さ せる 場合 に は "-" 、 値 の 後ろ に 表示 さ せる 場合 に は "+" 、 シンボル を 基数 点 と 置き換える 場合 に は "." を 前 に つけ ます 。 
現在 の ロ ケール で 使わ れ て いる 年代 を 表現 する 値 を 返し ます 。 
ほとんど の ロ ケール で は この 値 を 定義 し て い ませ ん 。 この 値 を 設定 し て いる ロ ケール の 例 は 日本 です 。 
返さ れる 文字 列 の 様式 は 決め られ て い ない ので 、 異なる システム 間 で 様式 に関する 同じ 知識 が 使える と 期待 し て は いけ ませ ん 。 
返さ れる 値 は ロ ケール で の 現 年代 の 年 値 です 。 
返さ れる 値 は strftime で 日付 および 時間 を ロ ケール 固有 の 年代 に 基づい た 方法 で 表現 する ため の 書式 化 文字 列 として 使う こと が でき ます 。 
返さ れる 値 は strftime で 日付 を ロ ケール 固有 の 年代 に 基づい た 方法 で 表現 する ため の 書式 化 文字 列 として 使う こと が でき ます 。 
返さ れる 値 は 0 から 99 まで の 100 個 の 値 の 表現 です 。 
各 インスタンス は 名前 を もち 、 ドット ( ピリオド ) を 区切り 文字 として 表記 する こと で 、 概念的 に は 名前 空間 中 の 階層 構造 に 配置 さ れる こと に なり ます 。 
簡便 性 の ため に 、 Logger の 適切 な メソッド 群 を 呼ぶ こと で 、 ログ に 記録 さ れ た メッセージ の 重要 性 を 指定 する こと が でき ます 。 
それら の メソッド と は 、 デフォルト の レベル を 反映 する 形 で 、 debug ()、 info ()、 warning ()、 error () および critical () と なっ て い ます 。 
これら の レベル を 指定 する にあたって 制限 は あり ませ ん : Logger の より 汎用 的 な メソッド で 、 明示 的 な レベル 指定 の ため の 引数 を 持つ log () を 使っ て 自分 自身 で レベル を 定義 し たり 使用 し たり でき ます 。 
レベル も ロガー に 関連付ける こと が でき 、 デベロッパ が 設定 する こと も 、 保存 さ れ た ログ 記録 設定 を 読み込む 際 に 設定 する こと も でき ます 。 ロガー に対して ログ 記録 メソッド が 呼び出さ れる と 、 ロガー は 自ら の レベル と メソッド 呼び出し に 関連付け られ た レベル を 比較 し ます 。 
ロガー の レベル が メソッド 呼び出し の レベル より も 高い 場合 、 実際 の ログ メッセージ は 生成 さ れ ませ ん 。 
ハンドラ は Handler クラス の サブ クラス の インスタンス で 、 ログ 記録 さ れ た ( LogRecord 形式 の ) メッセージ が 、 その メッセージ の 伝達 対象 と なる 相手 ( エンド ユーザ 、 サポート デスク の スタッフ 、 システム 管理 者 、 開発 者 ) に 行き着く よう に する 役割 を 持ち ます 。 
ハンドラ に は 特定 の 行き 先 に 方向付け られ た LogRecord インスタンス が 渡さ れ ます 。 
ほとんど の ユーザ 定義 の Handler の サブ クラス で 、 この emit () を オーバライド する 必要 が ある でしょ う 。 基底 クラス と なる Handler クラス に 加え て 、 多く の 有用 な サブ クラス が 提供 さ れ て い ます : 
StreamHandler の インスタンス は ストリーム ( ファイル 様 オブジェクト ) に エラーメッセージ を 送信 し ます 。 
FileHandler の インスタンス は ディスク 上 の ファイル に エラーメッセージ を 送信 し ます 。 
BaseRotatingHandler は ログ ファイル を ある 時点 で 交替 さ せる ハンドラ の 基底 クラス です 。 
直接 インスタンス 化 する ため の クラス で は あり ませ ん 。 
RotatingFileHandler や TimeRotatingFileHandler を 使う よう に し て ください 。 
RotatingFileHandler の インスタンス は 最大 ログ ファイル の サイズ 指定 と ログ ファイル の 交替 機能 を サポート し ながら 、 ディスク 上 の ファイル に エラーメッセージ を 送信 し ます 。 
TimeRotatingFileHandler の インスタンス は 、 ログ ファイル を 一定 時間 間隔 ごと に 交替 し ながら 、 ディスク 上 の ファイル に エラーメッセージ を 送信 し ます 。 
SocketHandler の インスタンス は TCP / IP ソケット に エラーメッセージ を 送信 し ます 。 
DatagramHandler の インスタンス は UDP ソケット に エラーメッセージ を 送信 し ます 。 
SMTPHandler の インスタンス は 指定 さ れ た 電子 メールアドレス に エラーメッセージ を 送信 し ます 。 
SysLogHandler の インスタンス は 遠隔 を 含む マシン 上 の syslog デーモン に エラーメッセージ を 送信 し ます 。 
NTEventLogHandler の インスタンス は Windows NT / 2000 / XP イベント ログ に エラーメッセージ を 送信 し ます 。 
MemoryHandler の インスタンス は メモリ 上 の バッファ に エラーメッセージ を 送信 し 、 指定 さ れ た 条件 で フラッシュ さ れる よう に し ます 。 
HTTPHandler の インスタンス は " GET " か " POST " セマンティクス を 使っ て HTTP サーバ に エラーメッセージ を 送信 し ます 。 
StreamHandler および FileHandler クラス は 、 中核 と なる ログ 化 機構 パッケージ 内 で 定義 さ れ て い ます 。 
他 の ハンドラ は サブ モジュール 、 logging . handlers で 定義 さ れ て い ます 。 
( サブ モジュール に は もう ひとつ logging . config が あり 、 これ は 環境 設定 機能 の ため の もの です 。 
) ログ 記録 さ れ た メッセージ は Formatter クラス の インスタンス を 介し 、 表示 用 に 書式 化 さ れ ます 。 
これら の インスタンス は % 演算 子 と 辞書 を 使う の に 適し た 書式 化 文字 列 で 初期 化 さ れ ます 。 
いずれ か の フィルタ が 偽 と なる 値 を 返し た 場合 、 メッセージ の 処理 は 行わ れ ませ ん 。 基本 的 な Filter 機能 で は 、 指定 さ れ た ロガー 名 で フィルタ を 行える よう に なっ て い ます 。 
この 機能 が 利用 さ れ た 場合 、 名前 付け さ れ た ロガー と その 下位 に ある ロガー に 送ら れ た メッセージ が フィルタ を 通過 できる よう に なり 、 その他 の メッセージ は 捨て られ ます 。 上 で 述べ た クラス に 加え て 、 いくつ か の モジュール レベル の 関数 が 存在 し ます 。 
指定 さ れ た 名前 の ロガー を 返し ます 。 
名前 が 指定 さ れ て い ない 場合 、 ロガー 階層 の ルート ( root ) に ある ロガー を 返し ます 。 
name を 指定 する 場合 に は 、 通常 は " a ", " a . b ", あるいは " a . b . c . d " といった よう な ドット 区切り の 階層 的 な 名前 に し ます 。 名前 の 付け方 は ログ 機能 を 使う 開発 者 次第 です 。 
与え られ た 名前 に対して 、 この 関数 は どの 呼び出し で も 同じ ロガー インスタンス を 返し ます 。 従って 、 ロガー インスタンス を アプリケーション の 各部 で やりとり する 必要 は なくなり ます 。 
標準 の Logger クラス か 、 最後 に setLoggerClass () に 渡し た クラス を 返し ます 。 
この 関数 は 、 新た に 定義 する クラス 内 で 呼び出し 、 カスタマイズ し た Logger クラス の インストール を 行う とき に 既に 他 の コード で 適用 し た カスタマイズ を 取り消そ う と し て い ない か 確かめる の に 使い ます 。 
レベル DEBUG の メッセージ を ルート ロガー で 記録 し ます 。 msg は メッセージ の 書式 化 文字 列 で 、 args は msg に 取り込む ため の 引数 です 。 
キーワード 文字 列 kwargs から は exc _ info のみ が 調べ られ 、 この 値 の 評価 値 が 偽 で ない 場合 、 例外 情報 を ログ メッセージ に 追加 し ます 。 
( sys . exc _ info の 返す 形式 の ) 例外 情報 を 表す タプル が 与え られ て いれ ば 、 それ を メッセージ に 使い ます 。 それ 以外 の 場合 に は 、 sys . exc _ info を 呼び出し て 例外 情報 を 取得 し ます 。 
レベル INFO の メッセージ を ルート ロガー で 記録 し ます 。 引数 は debug () と 同じ よう に 解釈 さ れ ます 。 
レベル WARNING の メッセージ を ルート ロガー で 記録 し ます 。 引数 は debug () と 同じ よう に 解釈 さ れ ます 。 
レベル ERROR の メッセージ を ルート ロガー で 記録 し ます 。 引数 は debug () と 同じ よう に 解釈 さ れ ます 。 
レベル CRITICAL の メッセージ を ルート ロガー で 記録 し ます 。 引数 は debug () と 同じ よう に 解釈 さ れ ます 。 
例外 情報 は ログ メッセージ に 追加 さ れ ます 。 
この メソッド は 例外 ハンドラ から のみ 呼び出さ れ ます 。 
レベル level の メッセージ を ルート ロガー で 記録 し ます 。 その他 の 引数 は debug () と 同じ よう に 解釈 さ れ ます 。 
全て の ロガー に対して 、 ロガー 自体 の レベル に 優先 する よう な 上書き レベル lvl を 与え ます 。 
アプリケーション 全体 にわたって 一時 的 に ログ 出力 の 頻度 を 押し下げる 必要 が 生じ た 場合 に は この 関数 が 有効 です 。 
使わ れる レベル 対する 唯一 の 制限 は 、 レベル は 正 の 整数 で なく て は なら ず 、 メッセージ の 深刻 さ が 上がる に従って レベル の 数 も 上がら なく て は なら ない という こと です 。 
ログ 記録 レベル lvl の テキスト 表現 を 返し ます 。 
レベル が 定義 済み の レベル CRITICAL 、 ERROR 、 WARNING 、 INFO 、 あるいは DEBUG の いずれ か で ある 場合 、 対応 する 文字 列 が 返さ れ ます 。 
addLevelName () を 使っ て レベル に 名前 を 関連づけ て い た 場合 、 lvl に 関連付け られ て い た 名前 が 返さ れ ます 。 
定義 済み の レベル に 対応 する 数値 を 指定 し た 場合 、 レベル に 対応 し た 文字 列 表現 を 返し ます 。 
そう で ない 場合 、 文字 列 " Level % s " % lvl を 返し ます 。 
attrdict で 属性 を 定義 し た 、 新しい LogRecord インスタンス を 返し ます 。 
この 関数 は 、 逆 pickle 化 さ れ た LogRecord 属性 辞書 を socket 越し に 受け取り 、 受信 端 で LogRecord インスタンス に 再 構築 する 場合 に 有用 です 。 
デフォルト の フォーマッタ ( formatter ) を 持つ StreamHandler を 生成 し て ルート ロガー に 追加 し 、 ログ 記録 システム の 基本 的 な 環境 設定 を 行い ます 。 
関数 debug ()、 info ()、 warning ()、 error ()、 および critical () は 、 ルート ロガー に ハンドラ が 定義 さ れ て い ない 場合 に 自動的 に basicConfig () を 呼び出し ます 。 
ログ 記録 システム に対して 、 バッファ の フラッシュ を 行い 、 全て の ハンドラ を 閉じる こと で 順次 シャット ダウン を 行う よう に 告知 し ます 。 
ログ 記録 システム に対して 、 ロガー を インスタンス 化 する 際 に クラス klass を 使う よう に 指示 し ます 。 
指定 する クラス は 引数 として 名前 だけ を とる よう な メソッド __ init __() を 定義 し て い なけれ ば なら ず 、 __ init __() で は Logger .__ init __() を 呼び出さ なけれ ば なり ませ ん 。 
典型 的 な 利用 法 として 、 この 関数 は 自作 の ロガー を 必要 と する よう な アプリケーション において 、 他 の ロガー が インスタンス 化 さ れる 前 に インスタンス 化 さ れ ます 。 
本 機能 を Python 標準 ライブラリ に 含める よう 記述 し て いる 提案 書 。 
この logging パッケージ の オリジナル 
オリジナル の logging パッケージ 。 
この サイト に ある バージョン の パッケージ は 、 標準 で logging パッケージ を 含ま ない Python 1 . 5 . 2 と 2 . 1 . x 、 2 . 2 . x で も 使用 でき ます 
この モジュール は 、 標準 モジュール os で サポート さ れる の と 同様 の 機能 を 、 Mac OS 9 オペレーティングシステム に 依存 し た 機能 として 実装 し て い ます 。 
この モジュール を 利用 する 一番 良い 使い方 は posix モジュール 経由 で 使う こと です 。 
この モジュール は MacPython - OS 9 に のみ 存在 し 、 MacPython - OSX 上 で は posix を 利用 し ます 。 
この モジュール で は 次 の 関数 が 使え ます 。 chdir ()、 close ()、 dup ()、 fdopen ()、 getcwd ()、 lseek ()、 listdir ()、 mkdir ()、 open ()、 read ()、 rename ()、 rmdir ()、 stat ()、 sync ()、 unlink ()、 write ()、 そして 例外 error も 定義 さ れ て い ます 。 
stat () により 返さ れる 時間 は 浮動 小数点 数 で 、 MacPython - OS 9 で 使わ れる 他 の 時間 の 値 と 同様 です 。 
macerrors は 、 MacOS エラーコード を 意味 する 定数 定義 を 含み ます 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 macfs モジュール は 旧式 の もの です 。 
FSSpec 、 FSRef 、 Alias の 操作 に は 、 Carbon . File または 
モジュール を 、 ファイルダイアログ に は 
を 使っ て ください 。 
また 、 この モジュール は UFS パーティション で は 正確 に は 動作 し ない こと が わかっ て い ます 。 
この モジュール で は 、 Macintosh の FSSpec の 操作 、 エイリアスマネージャ 、 finder エイリアス 、 および 標準 ファイル パッケージ へ の アクセス を 提供 し て い ます 。 
関数 や メソッド が file 引数 を とる よう に なっ て いる 場合 、 引数 は 常に 次 の 3 つ 、 ( 1 ) Macintosh の フル パス 名 あるいは 部分 パス 名 、 ( 2 ) FSSpec オブジェクト 、 ( 3 ) Inside Macintosh : Files で 解説 さ れ て いる 3 要素 の タプル ( wdRefNum , parID , name ) の うち の いずれ か に なり ます 。 
FSSpec は 、 実在 し ない ファイル で も 、 実在 する フォルダ の 下 に 配置 さ れ て いる こと に なっ て いる 限り 表現 でき ます 。 MacPython で は パス 名 も 同じ よう に 扱え ます が 、 unix ベース の Python で は パス 名 と FSRefs の 挙動 が 異なる ため 扱え ませ ん 。 
詳しく は Apple の ドキュメント を 参照 し て ください 。 エイリアス と 標準 ファイル パッケージ の 詳細 も Apple の ドキュメント に 書か れ て い ます 。 
指定 し た ファイル に対する FSSpec オブジェクト を 作成 し ます 。 
FSSpec の C 構造 体 の 生 データ が 入っ た 文字 列 から FSSpec オブジェクト を 作成 し ます 。 
主 に FSSpec 構造 体 を ネットワーク 経由 で 得る 場合 に 便利 です 。 
Alias の C 構造 体 の 生 データ が 入っ た 文字 列 から Alias オブジェクト を 作成 し ます 。 
主 に Alias 構造 体 を ネットワーク 経由 で 得る 場合 に 便利 です 。 
ゼロ で 埋め た FInfo オブジェクト を 作成 し ます 。 
エイリアスファイル を 解決 し ます ( オリジナル の ファイル と の 対応 を 取り ます )。 
標準 的 イアログ 「 入力 ファイル を 開く 」 を ユーザ に 提示 し ます 。 
オプション として 、 ユーザ が 選択 できる ファイル を 制限 する ため に 4 文字 の 文字 列 で 表さ れ た ファイル タイプ 指定 子 を 4 つま で 渡せ ます 。 
この 関数 は 、 FSSpec オブジェクト と ユーザ が キャンセル し ない で ダイアログ を 閉じ た か どう か を 示す フラグ を 返し ます 。 
StandardGetFile () と ほぼ 同じ です が 、 ダイアログ の 一番 上 に 表示 さ れる プロンプト を 指定 でき ます 。 
この 関数 は 、 FSSpec オブジェクト と ユーザ が キャンセル し ない で ダイアログ を 閉じ た か どう か を 示す フラグ を 返し ます 。 
非 標準 的 ダイアログ 「 ディレクトリ を 選ぶ 」 を ユーザ に 提示 し ます 。 
この ダイアログ で は 、 選択 し たい ディレクトリ を 開い て おい て から 、 `` select current directory '' ボタン を クリック し ます 。 prompt は プロンプト 文字 列 で 、 ダイアログ の 一番 上 に 表示 さ れ ます 。 
この 関数 は 、 FSSpec オブジェクト と ユーザ が キャンセル し ない で ダイアログ を 閉じ た か どう か を 示す フラグ を 返し ます 。 
ファイル 選択 ダイアログ を 提示 する 時 に 最初 に 表示 さ れる フォルダ を 設定 し ます 。 fsspec に は 、 フォルダ そのもの で は なく 、 フォルダ 内 の ファイル を 指定 し ます ( 実在 し ない ファイル でも かまい ませ ん )。 
引数 を 渡さ ない 場合 は 、 フォルダ は カレント ディレクトリ 、 つまり os . getcwd () で 返さ れる ディレクトリ に 設定 さ れ ます 。 
System 7 . 5 以降 で は 、 ユーザ は 「 一般 設定 」 コントロール パネル で 標準 ファイル パッケージ の 振る舞い を 変更 でき 、 設定 によって は この 関数 の 呼び出し が 無効 化 さ れる ので 注意 し て ください 。 
ゴミ箱 や 初期 設定 フォルダ など 、 Mac OS が 管理 し て いる 「 特別 な 」 フォルダ の 位置 を 検索 し ます 。 where は 検索 し たい ディスク 、 which は 検索 し たい フォルダ を 指定 する 4 文字 の 文字 列 です 。 
create を 設定 する と 、 該当 する フォルダ が 存在 し ない 場合 に 新た に 生成 し ます 。 
( vrefnum , dirid ) から なる タプル を 返し ます 。 where と which に 指定 できる 定数 は 、 標準 モジュール Carbon . Folders に あり ます 。 
与え られ た ファイル を 指す 最小限 の alias オブジェクト を 返し ます 。 ファイル は フル パス 名 で 与え なけれ ば なり ませ ん 。 
これ は 存在 し ない ファイル を 指す Alias を 作成 する 唯一 の 方法 です 。 
4 文字 の クリエータコード creator を 持っ た アプリケーション の 位置 を 探し出し ます 。 
この 関数 は アプリケーション を 指す FSSpec オブジェクト を 返し ます 。 
2 . 3 . 1 FSSpec オブジェクト 
この モジュール に は 、 Macintosh 上 で の ファイル 操作 を 便利 に する ため の ルーチン が いくつ か 入っ て い ます 。 
全て ファイル パラメタ は , パス 名 か FSRef または FSSpec オブジェクト で 指定 でき ます 。 
この モジュール は 、 リソース フォーク つき ファイル ( forked file ) を サポート する ファイル システム を 想定 し て いる ので 、 UFS パーティション に 使っ て は なり ませ ん . macostools モジュール で は 以下 の 関数 を 定義 し て い ます 。 
ファイル src を dst へ コピー し ます 。 
カスタムアイコン 、 コメント 、 アイコン 位置 は コピー さ れ ませ ん 。 
src から dst へ 再帰 的 に ファイル の ツリー を コピー し ます 。 必要 に 応じ て フォルダ を 作成 し て ゆき ます . src と dst は パス 名 で 指定 し なけれ ば なり ませ ん 。 
src を 示す ファインダエイリアス dst を 作成 し ます 。 
ファイル dst の クリエータ や タイプ など の ファインダ 情報 が 変わっ た こと を ファインダ に 知らせ ます 。 
ファイル は パス 名 か FSSpec で 指定 でき ます 。 
この 呼び出し は , ファインダ に アイコン を 再 描画 さ せる よう 命令 し ます 。 
copy に 用いる バッファ サイズ で 、 デフォルト は 1 メガバイト です 。 
Apple の ドキュメント で は , ファインダエイリアス の 作成 プロセス を 規定 し て い ませ ん . その ため , mkalias () で 作成 し た エイリアス が 互換 性 の ない 振る舞い を する 可能 性 が ある ので 注意 し て ください 。 
この モジュール は os . path モジュール の Macintosh 実装 です 。 
この モジュール で 、 os . path 
へ の 最も 汎用 性 の ある アクセス が でき ます 。 
を 参照 し て ください 。 
次 の 関数 が この モジュール で 利用 でき ます 。 normcase ()、 normpath ()、 isabs ()、 join ()、 split ()、 isdir ()、 isfile ()、 walk ()、 exists ()。 
os . path で 利用 できる 他 の 関数 について は 、 ダミー の 関数 として 相当 する 物 が 利用 でき ます 。 
macresource は スクリプト が MacPython 上 や MacPython アプレット および OSX Python 上 で 起動 さ れ て いる 時 、 特別 な 処理 を せ ず に ダイアログ や メニュー など の よう な リソース を 見つける ため の ヘルパー スクリプト です 。 
この モジュール で は ( Unix の ) メイル ボックス 内 の メイル に 簡単 かつ 一様 な 方法 で アクセス できる よう に する クラス を 定義 し て い ます 。 
クラス UnixMailbox 
全て の メッセージ が 単一 の ファイル に 収め られ 、 " From " (" From _" として 知ら れ て い ます ) 行 によって 分割 さ れ て いる よう な 、 旧来 の Unix 形式 の メイル ボックス に アクセス し ます 。 
ファイル オブジェクト fp は メイルボックスファイル を 指し ます 。 
オプション の factory パラメタ は 新た な メッセージ オブジェクト を 生成 する よう な 呼び出し 可能 オブジェクト です 。 factory は 、 メイルボックスオブジェクト に対して next () メソッド を 実行 し た 際 に 、 単一 の 引数 、 fp を 伴っ て 呼び出さ れ ます 。 
この 引数 の 標準 の 値 は rfc 822 . Message クラス です ( 
モジュール - および 以下 - を 参照 し て ください )。 
注意 : この モジュール の 実装 上 の 理由 により 、 fp オブジェクト は バイナリ モード で 開く よう に し て ください 。 
特に Windows 上 で は 注意 が 必要 です 。 
可 搬性 を 最大限 に する ため に 、 Unix 形式 の メイル ボックス 内 に ある メッセージ は 、 正確 に ' From ' ( 末尾 の 空白 に 注意 し て ください ) で 始まる 文字 列 が 、 直前 の 正しく 二つ の 改行 の 後 に くる よう な 行 で 分割 さ れ ます 。 
現実 的 に は 広範 な バリエーション が ある ため 、 それ 以外 の From _ 行 について 考慮 す べき で は ない の です が 、 現在 の 実装 で は 先頭 の 二つ の 改行 を チェック し て い ませ ん 。 
これ は ほとんど の アプリケーション で うまく 動作 し ます 。 UnixMailbox クラス で は 、 ほぼ 正確 に From _ デリミタ に マッチ する よう な 正規 表現 を 用いる こと で 、 より 厳密 に From _ 行 の チェック を 行う バージョン を 実装 し て い ます 。 
UnixMailbox で は デリミタ 行 が " From name time 
" の 行 に 分割 さ れる もの と 考え ます 。 
可 搬性 を 最大限 に する ため に は 、 代わり に PortableUnixMailbox クラス を 使っ て ください 。 
この クラス は UnixMailbox と 同じ です が 、 個々 の メッセージ は " From " 行 だけ で 分割 さ れる もの と みなし ます 。 より 詳細 な 情報 について は 、 
クラス PortableUnixMailbox 
厳密 性 の 低い UnixMailbox の バージョン で 、 メッセージ を 分割 する 行 は " From " のみ で ある と 見なし ます 。 
実際 に 見 られる メイル ボックス の バリエーション に 対応 する ため 、 From 行 における `` name time '' 部分 は 無視 さ れ ます 。 
メイル 処理 ソフトウェア は メッセージ 中 の ' From ' で 始まる 行 を クオート する ため 、 この 分割 は うまく 動作 し ます 。 
クラス MmdfMailbox 
全て の メッセージ が 単一 の ファイル に 収め られ 、 4 つ の control - A 文字 によって 分割 さ れ て いる よう な 、 MMDF 形式 の メイル ボックス に アクセス し ます 。 
ファイル オブジェクト fp は メイルボックスファイル を さし ます 。 オプション の factory は UnixMailbox クラス における の と 同様 です 。 
クラス MHMailbox 
数字 で 名前 の つけ られ た 別々 の ファイル に 個々 の メッセージ を 収め た ディレクトリ で ある 、 MH メイル ボックス に アクセス し ます 。 メイルボックスディレクトリ の 名前 は dirname で 渡し ます 。 
factory は UnixMailbox クラス における の と 同様 です 。 
クラス Maildir 
Qmail メイル ディレクトリ に アクセス し ます 。 
dirname で 指定 さ れ た 全て の 新規 および 現在 の メッセージ に アクセス でき ます 。 
クラス BabylMailbox 
MMDF メイル ボックス と 似 て いる 、 Babyl メイル ボックス に アクセス し ます 。 
Babyl 形式 で は 、 各 メッセージ は 二つ の ヘッダ から なる セット 、 original ヘッダ および visible ヘッダ を を 持っ て い ます 。 
original ヘッダ は '*** EOOH ***' ( End - Of - Original - Headers ) だけ を 含む 行 の 前 に あり 、 visible ヘッダ は EOOH 行 の 後 に あり ます 。 
Babyl 互換 の メイル リーダ は visible ヘッダ のみ を 表示 し 、 BabylMailbox オブジェクト は visible ヘッダ のみ を 含む よう な メッセージ を 返し ます 。 
メイル メッセージ は EOOH 行 で 始まり 、 ' 037014 ' だけ を 含む 行 で 終わり ます 。 
factory は UnixMailbox クラス における の と 同様 です 。 
モジュール が 撤廃 さ れ た こと により 、 
パッケージ を 使っ て メイル ボックス から メッセージ オブジェクト を 生成 する よう 推奨 さ れ て いる ので 注意 し て ください 。 
( デフォルト の 設定 は 以前 の バージョン と の 互換 性 の ため に 変更 さ れ て い ませ ん 。 
) 安全 に 移行 を 行う に は 、 以下 の ちょっとした コード を 使い ます : 
上 の ラッパ は メイル ボックス 内 に ある 不正 な 形式 の MIME メッセージ に対して 防御 性 が ある 反面 、 メイル ボックス の next () メソッド が 空文字 列 を 渡す 場合 に 備え なけれ ば なり ませ ん 。 
逆 に 、 もし メイル ボックス 内 に は 正しい 形式 の MIME メッセージ しか 入っ て い ない と 分かっ て いる の なら 、 単に 以下 の よう に し ます : 
伝統 的 な `` mbox '' メイル ボックス 形式 に関する 記述 です 。 
`` maildir '' メイル ボックス 形式 の 記述 です 。 
メイル ボックス ファイル に 記録 さ れ て いる Content - Length : ヘッダ に 依存 し た 場合 に 発生 する 問題 について の 記述 です 。 
mailcap ファイル は 、 メイル リーダ や Web ブラウザ の よう な MIME 対応 の アプリケーション が 、 異なる MIME タイプ の ファイル に どの よう に 反応 する か を 設定 する ため に 使わ れ ます (`` mailcap '' の 名前 は `` mail capability '' から 取ら れ まし た )。 
例えば 、 ある mailcap ファイル に " video / mpeg ; xmpeg % s " の よう な 行 が 入っ て い た と し ます 。 
ユーザ が email メッセージ や Web ドキュメント 上 で その MIME タイプ video / mpeg に 遭遇 する と 、 "% s " は ファイル 名 ( 通常 テンポラリ ファイル に 属する もの に なり ます ) に 置き換え られ 、 ファイル を 閲覧 する ため に xmpeg プログラム が 自動的 に 起動 さ れ ます 。 mailcap の 形式 は RFC 1524 , `` A User AgentConfiguration Mechanism For Multimedia Mail Format Information '' で 文書 化 さ れ て い ます が 、 この 文書 は インターネット 標準 で は あり ませ ん 。 
しかしながら 、 mailcap ファイル は ほとんど の Unix システム で サポート さ れ て い ます 。 
2 要素 の タプル を 返し ます ; 最初 の 要素 は 文字 列 で 、 実行 す べき コマンド ( os . system () に 渡さ れ ます ) が 入っ て い ます 。 
二 つめ の 要素 は 与え られ た MIME タイプ に対する mailcap エントリ です 。 
一致 する MIME タイプ が 見つから なかっ た 場合 、 ( None , None ) が 返さ れ ます 。 
key は desired フィールド の 値 で 、 実行 す べき 動作 の タイプ を 表現 し ます ; ほとんど の 場合 、 単に MIME 形式 の データ 本体 を 見 たい と 思う ので 、 標準 の 値 は ' view ' に なっ て い ます 。 
与え られ た MIME 型 を もつ 新た な データ 本体 を 作成 し た 場合 や 、 既存 の データ 本体 を 置き換え たい 場合 に は 、 ' view ' の 他 に ' compose ' および ' edit ' を 取る こと も でき ます 。 
これら フィールド の 完全 な リスト について は RFC 1524 を 参照 し て ください 。 
filename は コマンド ライン 中 で "% s " に 代入 さ れる ファイル 名 です ; 標準 の 値 は '/ dev / null ' で 、 たいてい この 値 を 使い たい わけ で は ない はず です 。 従って 、 ファイル 名 を 指定 し て この フィールド を 上書き する 必要 が ある でしょ う 。 
plist は 名前 付け さ れ た パラメタ の リスト です ; 標準 の 値 は 単なる 空 の リスト です 。 
リスト 中 の 各 エントリ は パラメタ 名 を 含む 文字 列 、 等号 ("=")、 および パラメタ の 値 で なけれ ば なり ませ ん 。 
mailcap エントリ に は %{ foo } といった よう な 名前 つき の パラメタ を 含める こと が でき 、 ' foo ' と 名づけ られ た パラメタ の 値 に 置き換え られ ます 。 
例えば 、 コマンド ライン " showpartial %{ id } %{ number } %{ total }" が mailcap ファイル に あり 、 plist が [' id = 1 ',' number = 2 ', ' total = 3 '] に 設定 さ れ て いれ ば 、 コマンド ライン は ' showpartial 1 2 3 ' に なり ます 。 
mailcap ファイル 中 で は 、 オプション の `` test '' フィールド を 使っ て 、 ( 計算 機 アーキテクチャ や 、 利用 し て いる ウィンドウ システム といった ) 何らかの 外部 条件 を テスト する よう 指定 する こと が でき ます 。 findmatch () は これら の 条件 を 自動的 に チェック し 、 チェック が 失敗 し た エントリ を 読み 飛ばし ます 。 
MIME タイプ を mailcap ファイル の エントリ に 対応付ける 辞書 を 返し ます 。 
この 辞書 は findmatch () 関数 に 渡さ れる べき もの です 。 
エントリ は 辞書 の リスト として 記憶 さ れ ます が 、 この 表現 形式 の 詳細 について 知っ て おく 必要 は ない でしょ う 。 mailcap 情報 は システム 上 で 見つかっ た 全て の mailcap ファイル から 導出 さ れ ます 。 
ユーザ 設定 の mailcap ファイル $ HOME /. mailcap は システム の mailcap ファイル / etc / mailcap 、 / usr / etc / mailcap 、 および / usr / local / etc / mailcap の 内容 を 上書き し ます 。 
以下 に 使用 例 を 示し ます : 
この 環境 は Python スクリプト を メイン プログラム として 実行 さ れる 際 に よく 使わ れる `` 条件 付き スクリプト '' の 一節 が 実行 さ れる 環境 です 。 
6 . 8 ライブラリ レベル の マーク アップ 
6 . 7 モジュール 特有 の マーク アップ この 節 で 説明 し て いる マーク アップ は 、 記述 対象 の モジュール に関する 情報 を 提供 する ため に 使い ます 。 
この マーク アップ は 、 モジュール を 説明 し て いる 節 の 先頭 で よく 使い ます 。 
典型 的 な 例 は 、 以下 の よう に なり ます : 
\ section {\ module { spam } --- SPAM 機能 へ の アクセス }\ declaremodule { extension }{ spam }\ platform { Unix }\ modulesynopsis {\ UNIX の SPAM 機能 へ の アクセス 手段 。 }\ moduleauthor { Jane Doe }{ jane . doe @ frobnitz . org } 
Python の パッケージ 
-- ひと まとまり の 単位 として 記述 できる よう な モジュール の 集合 -- は 、 モジュール と 同じ マーク アップ を 使っ て 解説 し ます 。 
パッケージ 内 の モジュール 名 は `` 完全 限定 ( fully qualified )'' 形式 で 入力 せ ね ば なり ませ ん ( つまり 、 パッケージ 名 を 含め ね ば なり ませ ん )。 
例えば 、 `` bar '' という パッケージ 内 の `` foo '' という モジュール は module { bar . foo } と 書き 、 リファレンス の 先頭 は 以下 の よう に なり ます : \ section {\ module { bar . foo } ---\ module { bar } パッケージ 内 の モジュール }\ declaremodule { extension }{ bar . foo }\ modulesynopsis {\ module { bar } パッケージ 内 の 小さな モジュール }\ moduleauthor { Jane Doe }{ jane . doe @ frobnitz . org } 
パッケージ の 名前 も また 、 module で マーク し ます 。 
二つ の パラメタ : モジュール の 種類 (" standard "、" builtin "、" extension "、 または " 
") と 、 モジュール の 名前 を 必要 と し ます 。 この 節 に リンク を 張っ たり 参照 を 行っ たり する ため の `` キー '' によって は 、 オプション の パラメタ を 指定 せ ね ば なり ませ ん 。 
`` キー '' は 、 モジュール の 名前 に アンダー スコア が 入っ て いる 場合 に のみ 用い 、 モジュール 名 から アンダー スコア を 取り除い た 名前 で なけれ ば なり ませ ん 。 type パラメタ は 上 に 述べ た 値 の いずれ か で なけれ ば なら ず 、 そう で ない 値 を 指定 する と エラー が 出力 さ れる ので 注意 し て ください 。 
パッケージ に 入っ て いる よう な モジュール の 場合 、 name パラメタ に は 完全 限定 形式 の 名前 を 指定 せ ね ば なり ませ ん 。 
この マクロ は モジュール を 紹介 する section の 先頭 に 置か ね ば なり ませ ん 。 
} モジュール の 可 搬性 について 述べる ため に 使い ます 。 
specifier は モジュール を 利用 できる よう な プラットフォーム を 指定 する キー を コンマ で 区切っ た リスト です 。 
キー は 短い 識別子 に し ます ; 実際 に 使わ れ て いる 例 に は " IRIX "、" Mac "、" Windows "、" Unix " が あり ます 。 
ある プラットフォーム を 表す 場合 、 すでに 使わ れ て いる キー が ある なら 、 それ を 使う よう に する の が 重要 です 。 
この 情報 は 、 モジュール 索引 や 、 HTML 形式 、 GNU info 形式 の 出力 における 注釈 情報 に 使わ れ ます 。 
} text は モジュール の 短い `` 一 行 の '' 説明 で 、 各 章 の 紹介 の 一部 として 使わ れる こと が あり ます 。 
この マクロ は declaremodule の 後ろ に 配置 せ ね ば なり ませ ん 。 モジュール の 概要 は 、 localmoduletable マクロ によって 挿入 さ れる 一覧 表 の 内容 を 構築 する 際 に 使わ れ ます 。 
マーク アップ を 行っ た 場所 で は 何 の テキスト も 生成 さ れ ませ ん 。 
この マクロ は モジュール の 作者 について の 情報 を 符号 化 する ため に 使わ れ ます 。 
現在 は 出力 生成 に 使わ れ て い ませ ん が 、 モジュール の 起源 を 判断 する 際 に 役立つ はず です 。 
6 . 8 ライブラリ レベル の マーク アップ ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
この モジュール に は Python 値 を バイナリ 形式 で 読み書き できる よう な 関数 が 含ま れ て い ます 。 
この バイナリ 形式 は Python 特有 の もの です が 、 マシン アーキテクチャ 非 依存 の もの です ( つまり 、 Python の 値 を PC 上 で ファイル に 書き込み 、 Sun に 転送 し 、 そこで 読み 戻す こと が でき ます )。 
バイナリ 形式 の 詳細 が ドキュメント さ れ て い ない の は 故意 による もの です ; この 形式 は ( 稀 に しか ない こと です が ) Python の バージョン 間 で 変更 さ れる 可能 性 が ある から です 。 
この モジュール は 汎用 の `` 永続 化 ( persistence )'' モジュール で は あり ませ ん 。 
汎用 的 な 永続 化 や 、 RPC 呼び出し を 通じ た Python オブジェクト の 転送 について は 、 モジュール 
marshal モジュール は 主 に 、 `` 擬似 コンパイル さ れ た ( pseudo - compiled )'' コード の . pyc ファイル へ の 読み書き を サポート する ため に 存在 し ます 。 
従って 、 Python の メンテナ は 、 必要 が 生じれ ば marshal 形式 を 後方 互換 性 の ない もの に 変更 する 権利 を 有し て い ます 。 
Python オブジェクト を 直列 化 および 非 直列 化 し たい 場合 に は 、 pickle モジュール を 使っ て ください 。 
警告 : marshal モジュール は 、 誤っ た データ や 悪意 を 持っ て 作成 さ れ た データ に対する 安全 性 を 考慮 し て い ませ ん 。 
信頼 でき ない 、 もしくは 認証 さ れ て い ない 出所 から の データ を 非 直列 化 し て は なり ませ ん 。 
全て の Python オブジェクト 型 が サポート さ れ て いる わけ で は あり ませ ん ; 一般 的 に は 、 どの 起動 中 の Python 上 に 存在 する か に 依存 し ない オブジェクト だけ が この モジュール で 読み書き でき ます 。 
以下 の 型 : None 、 整数 、 長 整数 、 浮動 小数点 数 、 文字 列 、 Unicode オブジェクト 、 タプル 、 リスト 、 辞書 、 タプル として 解釈 さ れる コード オブジェクト 、 が サポート さ れ て い ます 。 リスト と 辞書 は 含ま れ て いる 要素 も サポート さ れ て いる 型 で ある もの のみ サポート さ れ て い ます ; 再帰 的 な リスト および 辞書 は 書き込ん で は なり ませ ん ( 無限 ループ を 引き起こし て しまい ます )。 
補足 説明 : C 言語 の long int が ( DEC Alpha の よう に ) 32 ビット より も 長い ビット 長 を 持つ 場合 、 32 ビット より も 長い Python 整数 を 作成 する こと が 可能 です 。 その よう な 整数 が 整列 化 さ れ た 後 、 C 言語 の long int の ビット 長 が 32 ビット しか ない マシン 上 で 読み 戻さ れ た 場合 、 通常 整数 の 代わり に Python 長 整数 が 返さ れ ます 。 
型 は 異なり ます が 、 数値 は 同じ です 。 
( この 動作 は Python 2 . 2 で 新た に 追加 さ れ た もの です 。 
開か れ た ファイル に 値 を 書き込み ます 。 
値 は サポート さ れ て いる 型 で なく て は なり ませ ん 。 
ファイル は sys . stdout か 、 open () や posix . popen () が 返す よう な ファイル オブジェクト で なく て は なり ませ ん 。 
また ファイル は バイナリ モード (' wb ' または ' w + b ') で 開か れ て い なけれ ば なり ませ ん 。 値 ( または 値 の オブジェクト に 含ま れる オブジェクト ) が サポート さ れ て い ない 型 の 場合 、 ValueError 例外 が 送出 さ れ ます -- が 、 同時に ごみ の データ が ファイル に 書き込ま れ ます 。 
この オブジェクト は load () で 適切 に 読み出さ れる こと は ない はず です 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 : dumps で 、 データ フォーマット を 表す version 引数 を 利用 する べき です 。 
開か れ た ファイル から 値 を 一つ 読ん で 返し ます 。 
有効 な 値 が 読み 出せ なかっ た 場合 、 EOFError 、 ValueError 、 または TypeError を 送出 し ます 。 
ファイル は バイナリ モード (' rb ' または ' r + b ') で 開か れ た ファイル オブジェクト で なけれ ば なり ませ ん . 
警告 : サポート さ れ ない 型 を 含む オブジェクト が dump () で 整列 化 さ れ て いる 場合 、 load () は 整列 化 不能 な 値 を None で 置き換え ます 。 
dump ( value , file ) で ファイル に 書き込ま れる よう な 文字 列 を 返し ます 。 
値 は サポート さ れ て いる 型 で なけれ ば なり ませ ん 。 
値 が サポート さ れ て い ない 型 ( または サポート さ れ て い ない 型 の オブジェクト を 含む よう な ) オブジェクト の 場合 、 ValueError 例外 が 送出 さ れ ます 。 
データ 文字 列 を 値 に 変換 し ます 。 
有効 な 値 が 見つから なかっ た 場合 、 EOFError 、 ValueError 、 または TypeError が 送出 さ れ ます 。 
文字 列 中 の 他 の 文字 は 無視 さ れ ます 。 
これ に 加え て 、 以下 の 定数 が 定義 さ れ て い ます : 
モジュール が 利用 する バージョン を 表し ます 。 
バージョン 0 は 歴史 的 な フォーマット です 。 バージョン 1 ( Python 2 . 4 で 追加 さ れ まし た ) は 文字 列 の 再 利用 を し ます 。 
現在 の バージョン は 1 です 。 
... 変更 さ れる 可能 性 が ある から です 。 
この モジュール の 名前 は ( 特に ) Modula - 3 の 設計 者 の 間 で 使わ れ て い た 用語 の 一つ に 由来 し て い ます 。 彼ら は データ を 自己 充足 的 な 形式 で 輸送 する 操作 に `` 整列 化 ( marshalling )'' という 用語 を 使い まし た 。 
厳密 に 言え ば 、 `` 整列 さ せる ( to marshal )'' と は 、 ある データ を ( 例えば RPC バッファ の よう に ) 内部 表現 形式 から 外部 表現 形式 に 変換 する こと を 意味 し 、 `` 非 整列 化 ( unmarshalling )'' と は その 逆 を 意味 し ます 。 
この モジュール は いつ でも 利用 でき ます 。 
モジュール に ある 同じ 名前 の 関数 を 使っ て ください 。 
ほとんど の ユーザー は 複素数 を 理解 する の に 必要 な だけ の 数学 を 勉強 し たく ない ので 、 複素数 に 対応 し た 関数 と 対応 し て い ない 関数 の 区別 が さ れ て い ます 。 
明示 的 な 注記 の ない 限り 、 戻り 値 は 全て 浮動 小数点 数 に なり ます 。 以下 は 整数 論 および 数表現 にまつわる 関数 です : 
x の 天井値 ( ceil )、 すなわち x 以上 の 最も 小さい 整数 を float 型 で 返し ます 。 
x の 絶対 値 を 返し ます 。 
x の 床 値 ( floor )、 すなわち x 以下 の 最も 大きい 整数 を float 型 で 返し ます 。 
プラットフォーム の C ライブラリ で 定義 さ れ て いる fmod ( x , y ) を 返し ます 。 Python の 
という 式 は 必ずしも 同じ 結果 を 返さ ない という こと に 注意 し て ください 。 
C 標準 の 要求 で は 、 fmod は 除算 の 結果 が x と 同じ 符号 に なり 、 大き さ が abs ( y ) より 小さく なる よう な 整数 n について は fmod ( x , y ) が 厳密 に ( 数学 的 に 、 つまり 限り なく 高い 精度 で ) 
と 等価 で ある よう 求め て い ます 。 
Python の 
は 、 y と 同じ 符号 の 結果 を 返し 、 浮動 小数点 の 引数 に対して 厳密 な 解 を 出せ ない こと が あり ます 。 例えば 、 fmod (- 1 e - 100 , 1 e 100 ) は - 1 e - 100 です が 、 Python の - 1 e - 100 % 1 e 100 は 1 e 100 - 1 e - 100 に なり 、 浮動 小数点 型 で 厳密 に 表現 でき ず 、 ややこしい こと に 1 e 100 に 丸め られ ます 。 
この ため 、 一般 に は 浮動 小数点 の 場合 に は 関数 fmod ()、 整数 の 場合 に は 
を 使う 方 が よい でしょ う 。 
x の 仮数 と 指数 を ( m , e ) の ペア として 返し ます 。 
x が ゼロ の 場合 は 、 ( 0 . 0 , 0 ) を 返し 、 それ 以外 の 場合 は 、 0 . 5 = abs ( m ) 1 を 返し ます 。 
これ は 浮動 小数点 型 の 内部 表現 を 可 搬性 を 保っ た まま " 分解 する ( pick apart )" する ため です 。 
x の 小数 部分 と 整数 部分 を 返し ます 。 
両方 の 結果 は x の 符号 を 受け継ぎ ます 。 整数 部 は float 型 で 返さ れ ます 。 
通常 、 Python の 浮動 小数点 型 は 53 ビット 以上 の 精度 を もた ない ( プラットフォーム における C double 型 と 同じ ) ので 、 結果 的 に abs ( x ) = 2 ** 52 で ある よう な 浮動 小数点 型 x は 小数 部分 を 持た なく なる の です 。 以下 は 指数 および 対数 関数 です : 
を 返し ます 。 
base を 底 と し た x の 対数 を 返し ます 。 
base を 省略 し た 場合 x の 自然 対数 を 返し ます 。 バージョン 2 . 3 で 変更 さ れ た 仕様 : base argument added 
x の 10 を 底 と し た 対数 を 返し ます 。 
x の 平方根 を 返し ます 。 
以下 は 三角 関数 です : 
x の 逆 余弦 を 返し ます 。 
x の 逆 正弦 を 返し ます 。 
x 逆 正接 を 返し ます 。 
atan ( y / x ) の 逆 正接 を ラジアン で 返し ます 。 
x の 余弦 を 返し ます 。 
ユークリッド 距離 ( sqrt ( x * x + y * y )) を 返し ます 。 
x の 正弦 を 返し ます 。 
x の 正接 を 返し ます 。 
以下 は 角度 に関する 関数 です : 
角 x を ラジアン から 度数 に 変換 し ます 。 
角 x を 度数 から ラジ アン に 変換 し ます 。 
以下 は 双曲線 関数 です : 
x の 双曲線 正弦 を 返し ます 。 
この モジュール で は 以下 の 2 つ の 数学 定数 も 定義 し て い ます : 
数学 定数 pi 。 
数学 定数 e 。 
注意 : math モジュール は 、 ほとんど が 実行 プラットフォーム における C 言語 の 数学 ライブラリ 関数 に対する 薄い ラッパ で でき て い ます 。 
例外 的 な 場合 で の 挙動 は 、 C 言語 標準 で は お お さっぱ に しか 定義 さ れ て おら ず 、 さらに Python は 数学 関数 における エラー 報告 機能 の 挙動 を プラットフォーム の C 実装 から 受け継い で い ます 。 
その 結果 として 、 エラー の 際 ( および なんらかの 引数 が とにかく 例外 的 で ある と 考え られる 場合 ) に 送出 さ れる 特定 の 例外 について は 、 プラットフォーム 間 や リリース バージョン 間 を通じて 有意 な もの と なっ て い ませ ん 。 
例えば 、 math . log ( 0 ) が - Inf を 返す か ValueError または OverflowError を 送出 する か は 不定 で あり 、 math . log ( 0 ) が OverflowError を 送出 する 場合 において math . log ( 0 L ) が ValueError を 送出 する とき も あり ます 。 
この モジュール は RSA 社 の MD 5 メッセージ ダイジェスト アルゴリズム へ の インタフェース を 実装 し て い ます 。 
( Internet RFC 1321 も 参照 し て ください )。 
利用 方法 は 極めて 単純 です 。 まず md 5 オブジェクト を new () を 使っ て 生成 し ます 。 
後 は update () メソッド を 使っ て 、 生成 さ れ た オブジェクト に 任意 の 文字 列 データ を 入力 し ます 。 オブジェクト に 入力 さ れ た 文字 列 データ 全体 の digest (`` fingerprint '' として 知ら れる 強力 な 128 - bit チェック サム ) は digest () を 使っ て いつ でも 調べる こと が でき ます 。 
例えば 、 文字 列 ' Nobody inspects the spammish repetition ' の ダイジェスト を 得る ため に は 以下 の よう に し ます : 
もっと 詰め て 書く と 以下 の よう に なり ます : 
以下 の 値 は モジュール の 中 で 定数 として 与え られ て おり 、 new () で 返さ れる md 5 オブジェクト の 属性 として も 与え られ ます : 
digest _ size 返さ れる ダイジェスト 値 の バイト 数 で 表し た 長 さ 。 
常に 16 です 。 
md 5 クラス オブジェクト は 以下 の メソッド を サポート し ます : 
新た な md 5 オブジェクト を 返し ます 。 
もし arg が 存在 する なら 、 update ( arg ) を 呼び出し ます 。 
下位 互換 性 の ため に 、 new () の 別名 として 提供 さ れ て い ます 。 
md 5 オブジェクト は 以下 の メソッド を サポート し ます : 
文字 列 arg を 入力 として md 5 オブジェクト を 更新 し ます 。 
この メソッド を 繰り返し て 呼び出す 操作 は 、 それぞれ の 呼び出し 時 の 引数 arg を 結合 し た データ を 引数 として 一 回 の 呼び出す 操作 と 同等 に なり ます : つまり 、 m . update ( a ); m . update ( b ) は m . update ( a + b ) と 同等 です 。 
これ まで update () で 与え て き た 文字 列 入力 の ダイジェスト を 返し ます 。 
返り 値 は 16 バイト の 文字 列 で 、 null バイト を 含む 非 ASCII 文字 が 入っ て いる かも しれ ませ ん 。 
digest () に 似 て い ます が 、 ダイジェスト は 長 さ 32 の 文字 列 に なり 、 16 進 表記 文字 しか 含み ませ ん 。 
この 文字 列 は 電子 メール や その他 の バイナリ を 受け付け ない 環境 で ダイジェスト を 安全 に やりとり する ため に 使う こと が でき ます 。 
md 5 オブジェクト の コピー (`` クローン '') を 返し ます 。 
冒頭 の 部分 文字 列 が 共通 な 複数 の 文字 列 の ダイジェスト を 効率 よく 計算 する 際 に 使う こと が でき ます 。 
Secure Hash Algorithm ( SHA ) を 実装 し た 類似 の モジュール 。 
SHA アルゴリズム は より 安全 な ハッシュ アルゴリズム だ と 考え られ て い ます 。 . 
mhlib モジュール は MH フォルダ および その 内容 に対する Python インタフェース を 提供 し ます 。 この モジュール に は 、 ある フォルダ の 集まり を 表現 する MH 、 単一 の フォルダ を 表現 する Folder 、 単一 の メッセージ を 表現 する Message 、 の 3 つ の クラス が 入っ て い ます 。 
クラス MH 
MH は MH フォルダ の 集まり を 表現 し ます 。 クラス Folder 
Folder クラス は 単一 の フォルダ と フォルダ 内 の メッセージ 群 を 表現 し ます 。 
クラス Message 
Message オブジェクト は フォルダ 内 の 個々 の メッセージ を 表現 し ます 。 
メッセージ クラス は mimetools . Message から 導出 さ れ て い ます 。 
12 . 6 . 1 Message オブジェクト の 追加 メソッド 
パッケージ を mimetools モジュール より 優先 し て 使う べき です 。 
この モジュール は 、 下位 互換 性 維持 の ため に のみ 存在 し て い ます 。 
この モジュール は 、 
モジュール の Message クラス の サブ クラス と 、 マルチ パート MIME や 符合 化 メッセージ の 操作 に 役に立つ 多く の ユーティリティ 関数 を 定義 し て い ます 。 これ に は 以下 の 項目 が 定義 さ れ て い ます : 
Message クラス の 新しい インスタンス を 返し ます 。 
これ は 、 rfc 822 . Message クラス の サブ クラス で 、 いくつ か の 追加 の メソッド が あり ます ( 以下 を 参照 の こと )。 
seekable 引数 は 、 rfc 822 . Message の もの と 同じ 意味 を 持ち ます 。 
パート の 境界 として 使う こと が できる 見込み が 高い ユニーク な 文字 列 を 返し ます 。 
その 文字 列 は 、 ' hostipaddr . uid . pid . timestamp . random ' の 形 を し て い ます 。 
オープン し た ファイル オブジェクト input から 、 許さ れる MIME encoding を 使っ て 符号 化 さ れ た データ を 読ん で 、 オープン さ れ た ファイル オブジェクト output に 復号 化 さ れ た データ を 書き ます 。 
encoding に 許さ れる 値 は 、 ' base 64 ', ' quoted - printable ', ' uuencode ',' x - uuencode ', ' uue ', ' x - uue ', ' 7 bit ', および ' 8 bit ' です 。 
' 7 bit ' あるいは ' 8 bit ' で 符号 化 さ れ た メッセージ を 復号 化 し て も 何 も 効果 が あり ませ ん 。 
入力 が 出力 に 単純 に コピー さ れる だけ です 。 
オープン し た ファイル オブジェクト input から データ を 読ん で 、 それ を 許さ れる MIME encoding を 使っ て 符号 化 し て 、 オープン し た ファイル オブジェクト output に 書き ます 。 encoding に 許さ れる 値 は 、 [ methoddecode () の もの と 同じ です 。 
オープン し た ファイル input から 行 を EOF まで 読ん で 、 それら を オープン し た ファイル output に 書き ます 。 
オープン し た ファイル input から ブロック を EOF まで 読ん で 、 それら を オープン し た ファイル output に 書き ます 。 
ブロック の 大き さ は 現在 8192 に 固定 さ れ て い ます 。 
MIME データ の よう な 、 別個 の パーツ を 含む ファイル の 読み込み を サポート 。 
MIME で よく 訊ね られる 質問 。 
MIME の 概要 に関して は 、 この 文書 の Part 1 の 質問 1 . 1 へ の 答え を 見る こと 。 
mimetypes モジュール は 、 ファイル 名 あるいは URL と 、 ファイル 名 拡張 子 に 関連付け られ た MIME 型 と を 変換 し ます 。 
たとえ モジュール が 初期 化 さ れ て い なく て も 、 もし これら の 関数 が 、 init () が セット アップ する 情報 に 依存 し て いれ ば 、 これら の 関数 は 、 init () を 呼び ます 。 
filename で 与え られる ファイル 名 あるいは URL に 基づい て 、 ファイル の 型 を 推定 し ます 。 
戻り 値 は 、 タプル ( type , encoding ) です 、 ここ で type は 、 もし 型 が ( 拡張 子 が ない あるいは 未 定義 の ため ) 推定 でき ない 場合 は 、 None を 、 あるいは 、 MIME content - type : ヘッダ 
に 利用 できる 、 ' type / subtype ' の 形 の 文字 列 です 。 
符号 化 方式 の サフィックス は 大 / 小文字 を 区別 し ます ; データ 型 サフィックス は 、 最初 大 / 小文字 を 区別 し て 試し 、 それから 大 / 小文字 を 区別 せ ず に 試し ます 。 省略 可能 な strict は 、 既知 の MIME 型 の リスト として 認識 さ れる もの が 、 IANA として 登録 さ れ た 正式 な 型 のみ に 限定 さ れる か どう か を 指定 する フラグ です 。 
strict が true ( デフォール ) の 時 は 、 IANA 型 のみ が サポート さ れ ます ; strict が false の とき は 、 いくつ か の 追加 の 、 非 標準 で は ある が 、 一般 的 に 使用 さ れる MIME 型 も 認識 さ れ ます 。 
type で 与え られる MIME 型 に 基づい て ファイル の 拡張 子 を 推定 し ます 。 
戻り 値 は 、 先頭 の ドット (".") を 含む 、 可能 な ファイル 拡張 子 すべて を 与える 文字 列 の リスト です 。 
拡張 子 と 特別 な データ ストリーム と の 関連 付け は 保証 さ れ ませ ん が 、 guess _ type () によって MIME 型 type と マップ さ れ ます 。 省略 可能 な strict は guess _ type () 関数 の もの と 同じ 意味 を 持ち ます 。 
戻り 値 は 、 先頭 の ドット (".") を 含む 、 ファイル 拡張 子 を 与える 文字 列 の リスト です 。 
拡張 子 と 特別 な データ ストリーム と の 関連 付け は 保証 さ れ ませ ん が 、 guess _ type () によって MIME 型 type と マップ さ れ ます 。 
もし type に対して 拡張 子 が 推定 でき ない 場合 は 、 None が 返さ れ ます 。 省略 可能 な strict は guess _ type () 関数 の もの と 同じ 意味 を 持ち ます 。 
モジュール の 動作 を 制御 する ため に 、 いくつ か の 追加 の 関数 と データ 項目 が 利用 でき ます 。 
内部 の データ 構造 を 初期 化 し ます 。 
もし files が 与え られ て いれ ば 、 これ は デフォールト の 型 の マップ を 増やす ため に 使わ れる 、 一連 の ファイル 名 で なけれ ば なり ませ ん 。 
もし 省略 さ れ て いれ ば 、 使わ れる ファイル 名 は knownfiles から 取ら れ ます 。 
file あるいは knownfiles 内 の 各 ファイル 名 は 、 それ 以前 に 現れる 名前 より 優先 さ れ ます 。 繰り返し init () を 呼び出す こと は 許さ れ て い ます 。 
ファル filename で 与え られ た 型 の マップ が 、 もし あれ ば ロード し ます 。 
型 の マップ は 、 先頭 の dot (".") を 含む ファイル 名 拡張 子 を 、 ' type / subtype ' の 形 の 文字 列 に マッピング する 辞書 として 返さ れ ます 。 
もし ファイル filename が 存在 し ない か 、 読み込め なけれ ば 、 None が 返さ れ ます 。 
mime 型 type から の マッピング を 拡張 子 ext に 追加 し ます 。 
拡張 子 が すでに 既知 で あれ ば 、 新しい 型 が 古い もの に 置き 替わり ます 。 
その 型 が すでに 既知 で あれ ば 、 その 拡張 子 が 、 既知 の 拡張 子 の リスト に 追加 さ れ ます 。 strict が ある 時 は 、 その マッピング は 正式 な MIME 型 に 、 そう で なけれ ば 、 非 標準 の MIME 型 に 追加 さ れ ます 。 
グローバル な データ 構造 が 初期 化 さ れ て いる か どう か を 示す フラグ 。 
これ は init () により true に 設定 さ れ ます 。 
共通 に インストール さ れ た 型 マップ ファイル 名 の リスト 。 
これら の ファイル は 、 普通 mime . types という 名前 で あり 、 パッケージ ごと に 異なる 場所 に インストール さ れ ます 。 
これ は 、 符号 化 方式 と 型 が 同 一 拡張 子 で 示さ れる 符号 化 ファイル が 認識 できる よう に 使用 さ れ ます 。 
例えば 、 . tgz 拡張 子 は 、 符号 化 と 型 が 別個 に 認識 できる よう に . tar . gz に マップ さ れ ます 。 
ファイル 名 拡張 子 を 符号 化 方式 型 に マッピング する 辞書 
ファイル 名 拡張 子 を MIME 型 に マップ する 辞書 
ファイル 名 拡張 子 を 非 標準 で は ある が 、 一般 に 使わ れ て いる MIME 型 に マップ する 辞書 
MimeTypes クラス は 、 1 つ 以上 の MIME - 型 データベース を 必要 と する アプリケーション に 役に立つ でしょ う 。 
クラス MimeTypes 
この クラス は 、 MIME - 型 データベース を 表現 し ます 。 
デフォールト で は 、 この モジュール の 他 の もの と 同じ データベース へ の アクセス を 提供 し ます 。 
初期 データベース は 、 この モジュール によって 提供 さ れる もの の コピー で 、 追加 の mime . types - 形式 の ファイル を 、 read () あるいは readfp () メソッド を 使っ て 、 データベース に ロード する こと で 拡張 さ れ ます 。 
マッピング 辞書 も 、 もし デフォールト の データ が 望む もの で なけれ ば 、 追加 の データ を ロード する 前 に クリア さ れ ます 。 省略 可能 な filenames パラメータ は 、 追加 の ファイル を 、 デフォールト データベース の " トップ に " ロード さ せる の に 使う こと が でき ます 。 
12 . 7 . 1 Mime 型 オブジェクト 
リリース 2 . 3 で 撤廃 さ れ まし た 。 mimify モジュール を 使う より も 
パッケージ を 使う べき です 。 
この モジュール は 以前 の バージョン と の 互換 性 の ため に 保守 さ れ て いる に すぎ ませ ん 。 
mimify モジュール で は 電子 メイル メッセージ から MIME へ 、 および MIME から 電子 メイル メッセージ へ の 変換 を 行う ため の 二つ の 関数 を 定義 し て い ます 。 
電子 メイル メッセージ は 単なる メッセージ で も 、 MIME 形式 でも かまい ませ ん 。 各 パート は 個別 に 扱わ れ ます 。 
メッセージ ( の 一部 ) の MIME 化 ( mimify ) の 際 、 7 ビット ASCII 文字 を 使っ て 表現 でき ない 何らかの 文字 が 含ま れ て い た 場合 、 メッセージ の quoted - printable へ の 符号 化 が 伴い ます 。 
メッセージ が 送信 さ れる 前 に 編集 し なけれ ば なら ない 場合 、 MIME 化 および 非 MIME 化 は 特に 便利 です 。 
典型 的 な 使用 法 は 以下 の よう に なり ます : 
モジュール で は 以下 の ユーザ から 呼び出し 可能 な 関数 と 、 ユーザ が 設定 可能 な 変数 を 定義 し て い ます : 
infile を outfile に コピー し ます 。 
decode _ base 64 引数 が 与え られ て おり 、 その 値 が 真 で ある 場合 、 base 64 符号 で 符号 化 さ れ て いる パート も 同様 に 復号 化 さ れ ます 。 
line 内 の 符号 化 さ れ た ヘッダ 行 が 復号 化 さ れ た もの を 返し ます 。 
ISO 8859 - 1 文字 セット ( Latin - 1 ) だけ を サポート し ます 。 mime _ encode _ header 
line 内 の ヘッダ 行 が MIME 符号 化 さ れ た もの を 返し ます 。 
標準 で は 、 非 ASCII 文字 ( 8 ビット 目 が セット さ れ て いる 文字 ) を 含む か 、 MAXLEN 文字 ( 標準 の 値 は 200 です ) より も 長い 部分 は quoted - printable 形式 で 符号 化 さ れ ます 。 
文字 セット が メイル ヘッダ で 指定 さ れ て い ない 場合 指定 し なけれ ば なり ませ ん 。 
使わ れ て いる 文字 セット を 表す 文字 列 は CHARSET に 記憶 さ れ ます 。 標準 の 値 は ISO - 8859 - 1 ( Latin 1 ( latin - one ) として も 知ら れ て い ます )。 
この モジュール は コマンド ライン から 利用 する こと も でき ます 。 
以下 の よう な 使用 法 : 
復号 化 の 際 に - b オプション が 与え られ て いれ ば 、 base 64 パート も 同様 に 復号 化 さ れ ます 。 
MIME quoted - printable 形式 ファイル の エン コード および デコード 。 . 
mkcwproject は Metrowerks CodeWarrior 開発 環境 用 の プロジェクト ファイル を 作成 し ます 。 
これ は distutils の ため の ヘルパー モジュール です が 、 より 多く の 制御 の ため に 独立 し て 利用 でき ます 。 
メモリ に マップ さ れ た ファイル オブジェクト は 、 文字 列 と ファイル オブジェクト の 両方 の よう に 振舞い ます 。 
しかし 通常 の 文字 列 オブジェクト と は 異なり 、 これら は 可変 です 。 
文字 列 が 期待 さ れる ほとんど の 場所 で mmap オブジェクト を 利用 でき ます 。 例えば 、 メモリマップファイル を 探索 する ため に re モジュール を 使う こと が でき ます 。 
それら は 可変 な ので 、 obj [ index ] = ' a ' の よう に 文字 を 変換 でき ます し 、 スライス を 使う こと で obj [ i 1 : i 2 ] = '...' の よう に 部分 文字 列 を 変換 する こと が でき ます 。 
現在 の ファイル 位置 を データ の 始め と する 読込み や 書込み 、 ファイル の 異なる 位置 へ seek () する こと も でき ます 。 メモリマップファイル は Unix 上 と Windows 上 と で は 異なる mmap () 関数 によって 作ら れ ます 。 
いずれ の 場合 も 、 開い た ファイル の ディスクリプタ を 、 更新 の ため に 提供 し なけれ ば なり ませ ん 。 すでに 存在 する Python ファイル オブジェクト を マップ し たい 場合 は 、 fileno パラメータ の ため の 現在 値 を 手 に 入れる ため に 、 fileno () メソッド を 使用 し て 下さい 。 
そう で なけれ ば 、 ファイル ・ ディスクリプタ を 直接 返す os . open () 関数 ( 呼び出す とき に は まだ ファイル が 閉じ て いる 必要 が あり ます ) を 使っ て 、 ファイル を 開く こと が でき ます 。 
access が 指定 さ れ ない 場合 、 Windows の mmap は 書き込み 可能 マップ を 返し ます 。 
3 つ の アクセス 型 すべて に対する 初期 メモリ 値 は 、 指定 さ れ た ファイル から 得 られ ます 。 
ACCESS _ READ を 割り当て た メモリ マップ は TypeError 例外 を 送出 し ます 。 
ACCESS _ WRITE を 割り当て た メモリ マップ は メモリ と 元 の ファイル の 両方 に 影響 を 与え ます 。 
ACCESS _ COPY を 割り当て た メモリ マップ は メモリ に 影響 を 与え ます が 、 元 の ファイル を 更新 する こと は あり ませ ん 。 
( Windows ) バージョン は ファイル ハンドル fileno によって 指定 さ れ た ファイル から length バイト を マップ し て 、 mmap オブジェクト を 返し ます 。 
length が 現在 の ファイルサイズ より 大きな 場合 、 ファイルサイズ は length を 含む 大き さ に まで 拡張 さ れ ます 。 
length が 0 の 場合 、 マップ の 最大 の 長 さ は Windows が 空 ファイル で 例外 を 起こす ( Windows で は 空 の マップ を 作成 する こと が でき ませ ん 。 ) こと を 除い て は 、 mmap () が 呼ば れ た とき の ファイルサイズ に なり ます 。 
tagname は 、 None 以外 で 指定 さ れ た 場合 、 マップ の タグ 名 を 与える 文字 列 と なり ます 。 
Windows は 同じ ファイル に対する 様々 な マップ を 持つ こと を 可能 に し ます 。 
既存 の タグ の 名前 を 指定 すれ ば その タグ が オープン さ れ 、 そう で なけれ ば この 名前 の 新しい タグ が 作成 さ れ ます 。 
もし この パラメータ を 省略 し たり None を 与え たり し た なら ば 、 マップ は 名前 なし で 作成 さ れ ます 。 
タグ ・ パラメータ の 使用 の 回避 は 、 あなた の コード を Unix と Windows の 間 で 移植 可能 に し て おく の を 助け て くれる でしょ う 。 
( Unix ) バージョン は 、 ファイル ・ ディスクリプタ fileno によって 指定 さ れ た ファイル から length バイト を マップ し 、 mmap オブジェクト を 返し ます 。 
デフォルト は MAP _ SHARED です 。 
access は オプション の キーワード ・ パラメータ として 、 flags と prot の 代わり に 指定 し て も かまい ませ ん 。 
flags , prot と access の 両方 を 指定 する こと は 間違っ て い ます 。 
この パラメーター を 使用 法 について の 情報 は 、 access の 記述 を 参照 し て ください 。 
メモリマップフィイルオブジェクト は 以下 の メソッド を サポート し て い ます : 
この 呼出し の 後 に オブジェクト の 他 の メソッド の 呼出す こと は 、 例外 の 送出 を 引き起こす でしょ う 。 
オブジェクト 内 で 部分 文字 列 string が 見つかっ た 場所 の 最も 小さい インデックス を 返し ます 。 失敗 し た とき - 1 を 返し ます 。 
start は 探索 を 始め たい 場所 の インデックス で 、 デフォルト は 0 です 。 
ファイル の メモリ コピー 内 で の 変更 を ディスク へ フラッシュ し ます 。 この 呼出し を 使わ なかっ た 場合 、 オブジェクト が 破壊 さ れる 前 に 変更 が 書き込ま れる 保証 は あり ませ ん 。 
もし offset と size が 指定 さ れ た 場合 、 与え られ た バイト の 範囲 の 変更 だけ が ディスク に フラッシュ さ れ ます 。 指定 さ れ ない 場合 、 マップ 全体 が フラッシュ さ れ ます 。 
オフセット src から インデックス dest へ count バイト だけ コピー し ます 。 
もし mmap が ACCESS _ READ で 作成 さ れ て い た 場合 、 TypeError 例外 を 送出 し ます 。 
) 現在 の ファイル 位置 から num バイト の 文字 列 を 返し ます 。 
ファイル 位置 は 返し た バイト の 分 だけ 後ろ の 位置 へ 更新 さ れ ます 。 
現在 の ファイル 位置 から 長 さ 1 の 文字 列 を 返し ます 。 ファイル 位置 は 1 だけ 進み ます 。 
現在 の ファイル 位置 から 次 の 新しい 行 まで の 、 1 行 を 返し ます 。 
もし mmap が ACCESS _ READ または ACCESS _ COPY で 作成 さ れ た なら ば 、 マップ の リサイズ は TypeError 例外 を 送出 し ます 。 
ファイル の 現在 位置 を セット し ます 。 
whence 引数 は オプション で あり 、 デフォルト は 0 ( 絶対 位置 ) です 。 その他 の 値 として 、 1 ( 現在 位置 から の 相対 位置 ) と 2 ( ファイル の 終わり から の 相対 位置 ) が あり ます 。 
ファイル の 長 さ を 返し ます 。 メモリ マップ 領域 の サイズ より 大きい かも しれ ませ ん 。 
ファイル ・ ポインタ の 現在 位置 を 返し ます 。 
メモリ 内 の ファイル ・ ポインタ の 現在 位置 から string の バイト 列 を 書き込み ます 。 
ファイル 位置 は バイト 列 が 書き込ま れ た 後 の 位置 へ 更新 さ れ ます 。 もし mmap が ACCESS _ READ で 作成 さ れ て い た 場合 、 書き込み 時 に TypeError 例外 が 送出 さ れる でしょ う 。 
この モジュール の 関数 は 、 Windows プラットフォーム の 便利 な 機能 の いくつ か に対する アクセス 機構 を 提供 し て い ます 。 
高 レベル モジュール の いくつ か は 、 提供 する サービス を Windows で 実装 する ため に 、 これら の 関数 を 使っ て い ます 。 
例えば 、 
モジュール は 関数 getpass () を 実装 する ため に この モジュール の 関数 を 使い ます 。 
ここ に 挙げ た 関数 の 詳細 な ドキュメント について は 、 プラットフォーム API ドキュメント で 見つける こと が でき ます 。 
MultiFile オブジェクト は テキストファイル を 区分 し た もの を ファイル 類似 の 入力 オブジェクト として 扱える よう に し 、 指定 し た 区切り 文字 ( delimiter ) パタン に 遭遇 し た 際 に '' が 返さ れる よう に し ます 。 
この クラス の 標準 設定 は MIME マルチパートメッセージ を 解釈 する 上 で 便利 と なる よう に 設計 さ れ て い ます が 、 サブ クラス 化 を 行っ て 幾つ か の メソッド を 上書き する こと で 、 簡単 に 汎用 目的 に 対応 さ せる こと が でき ます 。 
ます 。 クラス MultiFile 
マルチファイル ( multi - file ) を 生成 し ます 。 
この クラス は open () が 返す ファイル オブジェクト の よう な 、 MultiFile インスタンス が 行 データ を 取得 する ため の 入力 と なる オブジェクト を 引数 として インスタンス 化 を 行わ なけれ ば なり ませ ん 。 
MultiFile は 入力 オブジェクト の readline () 、 seek ()、 および tell () メソッド しか 参照 せ ず 、 後者 の 二つ の メソッド は 個々 の MIME パート に ランダムアクセス し たい 場合 に のみ 必要 です 。 
MultiFile を seek でき ない ストリーム オブジェクト で 使う に は 、 オプション の seekable 引数 の 値 を 偽 に し て ください ; これ により 、 入力 オブジェクト の seek () および tail () メソッド を 使わ ない よう に なり ます 。 
MultiFile の 視点 から 見る と 、 テキスト は 三 種類 の 行 データ : データ 、 セクション 分割 子 、 終了 マーカ 、 から なる こと を 知っ て いる と 約 に 立つ でしょ う 。 
MultiFile は 、 多重 入れ子 構造 に なっ て いる 可能 性 の ある 、 それぞれ が 独自 の セクション 分割 子 および 終了 マーカ の パターン を 持つ メッセージ パート を サポート する よう に 設計 さ れ て い ます 。 
網羅 的 な 電子 メイル 操作 パッケージ ; multifile モジュール に 取っ て 代わり ます 。 
mutex モジュール で は 、 ロック ( lock ) の 獲得 と 解除 によって 排他 制御 を 可能 に する クラス を 定義 し て い ます 。 
排他 制御 は スレッド や マルチタスク を 使う 上 で 便利 かも しれ ませ ん が 、 この クラス が そうした 機能 を 必要 として ( い たり 、 想定 し て ) いる わけ で は あり ませ ん 。 mutex モジュール で は 以下 の クラス を 定義 し て い ます : 
mutex に は 2 つ の 状態 変数 -- `` ロック '' ビット ( locked bit ) と キュー ( queue ) が あり ます 。 
mutex が ロック さ れ て い なけれ ば 、 キュー は 空 です 。 
function ( argument ) を 呼び出し ます 。 これ によって 、 先頭 に あっ た エントリ が 新た な ロック を 獲得 し ます 。 
当然 の こと ながら マルチスレッド の 制御 に は 利用 でき ませ ん - という の も 、 lock () が 、 ロック を 獲得 し たら 関数 を 呼び出す という 変 な インタフェース だ から です 。 
バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
netrc クラス は 、 Unix ftp プログラム や 他 の FTP クライアント で 用い られる netrc ファイル 形式 を 解析 し 、 カプセル 化 ( encapsulate ) し ます 。 
クラス netrc 
netrc の インスタンス や サブ クラス の インスタンス は netrc ファイル の データ を カプセル 化 し ます 。 
初期 化 の 際 の 引数 が 存在 する 場合 、 解析 対象 と なる ファイル の 指定 に なり ます 。 
引数 が ない 場合 、 ユーザ の ホーム ディレクトリ 下 に ある . netrc が 読み出さ れ ます 。 
解析 エラー が 発生 し た 場合 、 ファイル 名 、 行 番号 、 解析 を 中断 し た トー クン に関する 情報 の 入っ た NetrcParseError を 送出 し ます 。 
ソース ファイル の テキスト 中 で 文法 エラー に 遭遇 し た 場合 に netrc クラス によって 送出 さ れる 例外 です 。 
この 例外 の インスタンス は 3 つ の インスタンス 変数 を 持っ て い ます : msg は テキスト による エラー の 説明 で 、 filename は ソース ファイル の 名前 、 そして lineno は エラー が 発見 さ れ た 行 番号 です 。 
new モジュール は インタプリタ オブジェクト 作成 関数 へ の インター フェイス を 与え ます 。 
新しい オブジェクト を `` 魔法 を 使っ た よう に '' 作り出す 必要 が ある 、 通常 の 作成 関数 が 使え ない とき に 、 これ は 主 に マーシャル 型 関数 で 使わ れ ます 。 
この 関数 は __ init __() コンス トラクタ を 呼び出さ ず に 辞書 dict を もつ class の インスタンス を 作り出し ます 。 
dict が 省略 さ れる か 、 None で ある 場合 は 、 新しい インスタンス の ため に 新しい 空 の 辞書 が 作ら れ ます 。 
オブジェクト が いつも と 同じ 状態 で ある という 保証 は ない こと に 注意 し て ください 。 
この 関数 は instance に 束縛 さ れ た メソッド オブジェクト か 、 あるいは instance が None の 場合 に 束縛 さ れ て い ない メソッド オブジェクト を 返し ます 。 function は 呼び出し 可能 で なけれ ば なり ませ ん 。 
与え られ た コード と グローバル 変数 を もつ ( Python ) 関数 を 返し ます 。 
name を 与える なら ば 、 文字 列 か None で なけれ ば なら ない 。 
文字 列 の 場合 は 、 関数 は 与え られ た 名前 を もつ 。 
そう で なけれ ば 、 関数 名 は code . co _ name から 取ら れる 。 
argdefs を 与える 場合 は タプル で なけれ ば なら ず 、 パラメータ の デフォルト 値 を 決める ため に 使わ れ ます 。 
この 関数 は PyCode _ New () という C 関数 へ の インター フェイス です 。 
この 関数 は name という 名前 の 新しい モジュール オブジェクト を 返し ます 。 
name は 文字 列 で なけれ ば なら ない 。 
この 関数 は 新しい クラス オブジェクト を 返し ます 。 その クラス オブジェクト は ( クラス の タプル で ある べき ) baseclasses から 派生 し 、 名前 空間 dict を 持ち 、 name という 名前 です 。 
UNIX プラットフォーム で 利用 でき ます 。 
match ( key , mapname )== value と なる key を value に 対応付ける 辞書 を 返し ます 。 
辞書 内 の キー と 値 は 共に 任意 の バイト 列 な ので 注意 し て ください 。 mapname は 他 の 名前 の 別名 に なっ て い ない か 最初 に チェック さ れ ます 。 
有効 な マップ の リスト を 返し ます 。 
nis モジュール は 以下 の 例外 を 定義 し て い ます : 
NIS 関数 が エラーコード を 返し た 場合 に 送出 さ れ ます 。 
この モジュール で は 、 クラス NNTP を 定義 し て い ます 。 
この クラス は NNTP プロトコル の クライアント 側 を 実装 し て い ます 。 この モジュール を 使え ば 、 ニュース リーダ や 記事 投稿 プログラム 、 または 自動的 に ニュース 記事 を 処理 する プログラム を 実装 する こと が でき ます 。 
NNTP ( Network News TransferProtocol 、 ネット ニュース 転送 プロトコル ) の 詳細 について は 、 インターネット RFC 977 を 参照 し て ください 。 以下 に この モジュール の 使い方 の 小さな 例 を 二つ 示し ます 。 
ニュース グループ に関する 統計 情報 を 列挙 し 、 最新 10 件 の 記事 を 出力 する に は 以下 の よう に し ます : 
ファイル から 記事 を 投稿 する に は 、 以下 の よう に し ます ( この 例 で は 記事 番号 は 有効 な 番号 を 指定 し て いる と 仮定 し て い ます ): 
この モジュール 自体 で は 以下 の 内容 を 定義 し て い ます : 
クラス NNTP 
ホスト host 上 で 動作 し 、 ポート 番号 port で 要求 待ち を し て いる NNTP サーバ と の 接続 を 表現 する 新た な NNTP クラス の インスタンス を 返し ます 。 
標準 の port は 119 です 。 
オプション の user および password が 与え られ て いる か 、 または /. netrc に 適切 な 認証 情報 が 指定 さ れ て い て usenetrc が 真 ( デフォルト ) の 場合 、 " AUTHINFO USER " および " AUTHINFO PASS " 命令 を 使っ て サーバ に対して 身元 証明 および 認証 を 行い ます 。 
オプション の フラグ readermode が 真 の 場合 、 認証 の 実行 に 先立っ て " mode reader " 命令 が 送信 さ れ ます 。 
reader モード は 、 ローカル マシン 上 の NNTP サーバ に 接続 し て い て 、 " group " の よう な reader 特有 の 命令 を 呼び出し たい 場合 に 便利 な こと が あり ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : usenetrc 引数 を 追加 し まし た 
クラス NNTPError 
標準 の 例外 Exception から 導出 さ れ て おり 、 nntplib モジュール が 送出 する 全て の 例外 の 基底 クラス です 。 
クラス NNTPReplyError 
期待 はずれ の 応答 が サーバ から 返さ れ た 場合 に 送出 さ れる 例外 です 。 
以前 の バージョン と の 互換 性 の ため に 、 error _ reply は この クラス と 等価 に なっ て い ます 。 
クラス NNTPTemporaryError 
エラーコード の 範囲 が 400 - 499 の エラー を 受信 し た 場合 に 送出 さ れる 例外 です 。 
以前 の バージョン と の 互換 性 の ため に 、 error _ temp は この クラス と 等価 に なっ て い ます 。 
クラス NNTPPermanentError 
エラーコード の 範囲 が 500 - 599 の エラー を 受信 し た 場合 に 送出 さ れる 例外 です 。 
以前 の バージョン と の 互換 性 の ため に 、 error _ perm は この クラス と 等価 に なっ て い ます 。 
クラス NNTPProtocolError 
サーバ から 返さ れる 応答 が 1 - 5 の 範囲 の 数字 で 始まっ て い ない 場合 に 送出 さ れる 例外 です 。 
以前 の バージョン と の 互換 性 の ため に 、 error _ proto は この クラス と 等価 に なっ て い ます 。 
クラス NNTPDataError 
応答 データ 中 に 何らかの エラー が 存在 する 場合 に 送出 さ れる 例外 です 。 
以前 の バージョン と の 互換 性 の ため に 、 error _ data は この クラス と 等価 に なっ て い ます 。 
nsremote は Netscape の OSA モジュール の ラッパー で あり 、 好き な ブラウザ に対して URL を 簡単 に 送る こと が でき ます 。 
Macintosh モジュール リファレンス 
operator モジュール は 、 Python 固有 の 各 演算 子 に 対応 し て いる C 言語 で 実装 さ れ た 関数 セット を 提供 し ます 。 
例えば 、 operator . add ( x , y ) は 式 x + y と 等価 です 。 
これら は a および b の 大小 比較 を 行い ます 。 
特に 、 lt ( a , b ) は 
、 le ( a , b ) は 
、 eq ( a , b ) は 
、 ne ( a , b ) は 
、 gt ( a , b ) は 
a b 、 そして ge ( a , b ) は 
と 等価 です 。 
組み込み 関数 cmp () と 違っ て 、 これら の 関数 は どの よう な 値 を 返し て も よく 、 ブール 代 数値 として 解釈 でき て も でき なく て も かまい ませ ん 。 
大小 比較 の 詳細 について は 
を 参照 し て ください 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
論理 演算 も また 全て の オブジェクト に対して 適用 する こと が でき 、 真 値 テスト 、 同一 性 テスト および ブール 演算 を サポート し ます : 
not o の 結果 を 返し ます 。 
( オブジェクト の インスタンス に は __ not __() メソッド は 適用 さ れ ない ので 注意 し て ください ; この 操作 を 定義 し て いる の は インタプリタ コア だけ です 。 
結果 は __ nonzero __() および __ len __() メソッド によって 影響 さ れ ます 。 ) 
o が 真 の 場合 True を 返し 、 そう で ない 場合 False を 返し ます 。 
この 関数 は bool の コンス トラクタ 呼び出し と 同等 です 。 
を 返し ます 。 
演算 子 で 最も 多い の は 数学 演算 および ビット 単位 の 演算 です : 
o の 絶対 値 を 返し ます 。 
数値 a および b について a + b を 返し ます 。 
a と b の 論理 積 を 返し ます 。 
__ future __. division が 有効 で ない 場合 に は a / b を 返し ます 。 
`` 古い ( classic )'' 除算 として も 知ら れ て い ます 。 
a // b を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
o の ビット 単位 反転 を 返し ます 。 
o と 同じ です 。 
a の b ビット 左 シフト を 返し ます 。 
a % b を 返し ます 。 
数値 a および b について a * b を 返し ます 。 
o の 符号 反転 を 返し ます 。 
a と b の 論理 和 を 返し ます 。 
o の 符号 非 反転 を 返し ます 。 
数値 a および b について a ** b を 返し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
a の b ビット 右 シフト を 返し ます 。 
a - b を 返し ます 。 
__ future __. division が 有効 な 場合 a / b を 返し ます 。 
除算 として も 知ら れ て い ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
a および b の 排他 的 論理 和 を 返し ます 
シーケンス を 扱う 演算 子 に は 以下 の よう な もの が あり ます : 
シーケンス a および b について a + b を 返し ます 。 
b in a を 調べ た 結果 を 返し ます 。 演算 子 が 反転 し て いる ので 注意 し て ください 。 
関数 名 __ contains __() は Python 2 . 0 で 追加 さ れ まし た 。 
a の 中 に b が 出現 する 回数 を 返し ます 。 
a で インデクス が b の 要素 を 削除 し ます 。 
a で インデクス が b から c 
- 1 の スライス 要素 を 削除 し ます 。 
a で インデクス が b の 要素 を 削除 し ます 。 
- 1 の スライス 要素 を 返し ます 。 
a で 最初 に b が 出現 する 場所 の インデクス を 返し ます 。 
シーケンス a と 整数 b について a * b を 返し ます 。 
リリース 2 . 0 で 撤廃 さ れ まし た 。 contains () を 使っ て ください 。 
contains () の 別名 です 。 
a で インデクス が b の 要素 の 値 を c に 設定 し ます 。 
operator モジュール で は 、 オブジェクト の 型 を 調べる ため の 述語 演算 子 も 定義 し て い ます 。 
注意 : これら の 関数 が 返す 結果 について 誤っ て 理解 し ない よう 注意 し て ください ; インスタンス オブジェクト に対して 常に 信頼 できる 値 を 返す の は isCallable () だけ です 。 
例えば 以下 の よう に なり ます : 
リリース 2 . 0 で 撤廃 さ れ まし た 。 callable () を 使っ て ください 。 
オブジェクト o を 関数 の よう に 呼び出す こと が できる 場合 真 を 返し 、 それ 以外 の 場合 false を 返し ます 。 
関数 、 バインド および 非 バインドメソッド 、 クラス オブジェクト 、 および __ call __() メソッド を サポート する インスタンス オブジェクト は 真 を 返し ます 。 
オブジェクト o が マップ 型 インタフェース を サポート する 場合 に 真 を 返し ます 。 辞書 および 全て の インスタンス オブジェクト に対して は 、 この 値 は 真に なり ます 。 
警告 : インタフェース 自体 が 誤っ た 定義 に なっ て いる ため 、 ある インスタンス が 完全 な マップ 型 プロトコル を 備え て いる か を 調べる 信頼 性 の ある 方法 は 存在 し ませ ん 。 
この ため 、 この 関数 による テスト は さほど 便利 で は あり ませ ん 。 
オブジェクト o が 数値 を 表現 し て いる 場合 に 真 を 返し ます 。 
C で 実装 さ れ た 全て の 数値 型 、 および それら の インスタンス オブジェクト 全て 対し て 、 この 値 は 真に なり ます 。 
警告 : インタフェース 自体 が 誤っ た 定義 に なっ て いる ため 、 ある インスタンス が 完全 な 数値 型 の インタフェース を サポート し て いる か を 調べる 信頼 性 の ある 方法 は 存在 し ませ ん 。 
o が シーケンス 型 プロトコル を サポート する 場合 に 真 を 返し ます 。 シーケンス 型 メソッド を C で 定義 し て いる 全て の オブジェクト に対して 、 この 値 は 真に なり ます 。 
警告 : インタフェース 自体 が 誤っ た 定義 に なっ て いる ため 、 ある インスタンス が 完全 な シーケンス 型 の インタフェース を サポート し て いる か を 調べる 信頼 性 の ある 方法 は 存在 し ませ ん 。 
この ため 、 この 関数 による テスト は さほど 便利 で は あり ませ ん 。 
例 : 0 から 255 まで の 序 数 を 文字 に 対応付ける 辞書 を 構築 し ます 。 
operator モジュール は アトリビュート と アイテム の 汎用 的 な 検索 の ため の 道具 も 定義 し て い ます 。 
map (), sorted (), itertools . groupby (), や 関数 を 引数 に 取る その他 の 関数 に対して 高速 に フィールド を 抽出 する 際 に 引数 として 使う と 便利 です 。 
例 : 
optparse モジュール は 、 getopt より も 簡便 で 、 柔軟 性 に 富み 、 かつ 強力 な コマンド ライン 解析 ライブラリ です 。 optparse で は 、 より 明快 な スタイル の コマンド ライン 解析 手法 、 すなわち OptionParser の インスタンス を 作成 し て オプション を 追加 し て ゆき 、 その インスタンス で コマンド ライン を 解析 する という 手法 を とっ て い ます 。 
optparse を 使う と 、 GNU / POSIX 構文 で オプション を 指定 できる だけ で なく 、 使用 法 や ヘルプ メッセージ の 生成 も 行え ます 。 optparse を 使っ た 簡単 な スクリプト 例 を 以下 に 示し ます : 
この よう に わずか な 行 数 の コード によって 、 スクリプト の ユーザ は コマンド ライン 上 で 例えば 以下 の よう な 「 よく ある 使い方 」 を 実行 できる よう に なり ます : 
コマンド ライン 解析 の 中 で 、 optparse は ユーザ の 指定 し た コマンド ライン 引数 値 に 応じ て parse _ args () の 返す options の 属性 値 を 設定 し て ゆき ます 。 
parse _ args () が コマンド ライン 解析 から 処理 を 戻し た とき 、 options . filename は " outfile " に 、 options . verbose は False に なっ て いる はず です 。 
optparse は 長い 形式 と 短い 形式 の 両方 の オプション 表記 を サポート し て おり 、 短い 形式 は 結合 し て 指定 でき ます 。 また 、 様々 な 形 で オプション に 引数 値 を 関連付け られ ます 。 
従って 、 以下 の コマンド ライン は 全て 上 の 例 と 同じ 意味 に なり ます : 
さらに 、 ユーザ が 
の いずれ か を 実行 する と 、 optparse は スクリプト の オプション について 簡単 に まとめ た 内容 を 出力 し ます : 
6 . 21 . 1 . 2 オプション と は 何 か 
6 . 21 . 1 . 3 固定 引数 と は 何 か 
6 . 21 . 2 . 1 オプション ・ アクション を 理解 する 
6 . 21 . 2 . 2 store アクション 
6 . 21 . 2 . 3 ブール 値 ( フラグ ) オプション の 処理 
6 . 21 . 2 . 4 その他 の アクション 
6 . 21 . 2 . 5 デフォルト 値 
6 . 21 . 2 . 6 ヘルプ の 生成 
6 . 21 . 2 . 7 バージョン 番号 の 出力 
6 . 21 . 2 . 8 optparse の エラー 処理 法 
6 . 21 . 2 . 9 全て を つなぎ 合わせる 
6 . 21 . 3 . 1 パーザ へ の オプション 追加 
6 . 21 . 3 . 2 オプション の 定義 
6 . 21 . 3 . 3 標準 的 な オプション ・ アクション 
6 . 21 . 3 . 5 オプション 解析 器 へ の 問い合わせ と 操作 
6 . 21 . 3 . 6 オプション 間 の 衝突 
6 . 21 . 4 . 1 callback オプション の 定義 
6 . 21 . 4 . 2 コール バック 関数 は どの よう に 呼び出さ れる か 
6 . 21 . 4 . 3 コール バック 中 で 例外 を 送出 する 
6 . 21 . 4 . 4 コール バック の 例 1 : ありふれ た コール バック 
6 . 21 . 4 . 5 コール バック の 例 2 : オプション の 順番 を チェック する 
6 . 21 . 4 . 6 コール バック の 例 3 : オプション の 順番 を チェック する ( 汎用 的 ) 
6 . 21 . 4 . 7 コール バック の 例 4 : 任意 の 条件 を チェック する 
6 . 21 . 4 . 8 コール バック の 例 5 : 固定 引数 
6 . 21 . 4 . 9 コール バック の 例 6 : 可変 個 の 引数 
この モジュール で は 、 オペレーティングシステム 依存 の 機能 を 利用 する 方法 として 、 
や nt といった オペレーティングシステム 依存 の 組み込み モジュール を import する より も 可 搬性 の 高い 手段 を 提供 し て い ます 。 この モジュール は 、 mac や 
の よう な 、 オペレーティングシステム 依存 の 組み込み モジュール から 関数 や データ を 検索 し て 、 見つかっ た もの を 取り出し ( export ) ます 。 
Python における 組み込み の オペレーティングシステム 依存 モジュール は 、 同じ 機能 を 利用 する こと が できる 限り 、 同じ インタフェース を 使い ます ; たとえば 、 os . stat ( path ) は path について の stat 情報 を ( たまたま POSIX インタフェース に 起源 する ) 同じ 書式 で 返し ます 。 特定 の オペレーティングシステム 固有 の 拡張 も os を 介し て 利用 する こと が でき ます が 、 これら の 利用 は もちろん 、 可 搬性 を 脅かし ます ! 最初 の 
関数 が システム 関連 の エラー ( 引数 の 型 違い や 他 の あり がち な エラー で は ない ) を 返し た 場合 この 例外 が 発生 し ます 。 これ は OSError として 知ら れる 組み込み 例外 で も あり ます 。 
付属 する 値 は errno から とっ た 数値 の エラーコード と 、 エラーコード に 対応 する 、 C 関数 perror () により 出力 さ れる の と 同じ 文字 列 から なる ペア です 。 
背後 の オペレーティングシステム で 定義 さ れ て いる エラーコード 名 が 収め られ て いる 
を 参照 し て ください 。 例外 が クラス の 場合 、 この 例外 は 二つ の 属性 、 errno と strerror を 持ち ます 。 
前者 の 属性 は C の errno 変数 の 値 、 後者 は strerror () による 対応 する エラーメッセージ の 値 を 持ち ます 。 
( chdir () や unlink () の よう な ) ファイル システム 上 の パス を 含む 例外 に対して は 、 この 例外 インスタンス は 3 つめ の 属性 、 filename を 持ち 、 関数 に 渡さ れ た ファイル 名 と なり ます 。 
import さ れ て いる オペレーティング ・ システム 依存 モジュール の 名前 です 。 
現在 次 の 名前 が 登録 さ れ て い ます : ' posix ', ' nt ' 、 ' dos ' 、 ' mac ' 、 ' os 2 ' 、 ' ce ' 、 ' java ' 、 ' riscos ' 。 
posixpath や macpath の よう に 、 システム ごと に 対応付け られ て いる パス 名 操作 の ため の システム 依存 の 標準 モジュール です 。 
すなわち 、 正しく import が 行わ れる かぎり 、 os . path . split ( file ) は posixpath . split ( file ) と 等価 で あり ながら より 汎用 性 が あり ます 。 
この モジュール 自体 が import 可能 な モジュール で も ある ので 注意 し て ください 。 
として 直接 import し て も かまい ませ ん 。 
この モジュール に は 、 パス 名 を 操作 する 便利 な 関数 が 定義 さ れ て い ます 。 
警告 : これら の 関数 の 多く は Windows の 一律 命名 規則 ( UNC パス 名 ) を 正しく サポート し て い ませ ん 。 splitunc () と ismount () は 正しく UNC パス 名 を 操作 でき ます 。 
パス 名 path の 末尾 の ファイル 名 を 返し ます 。 
これ は split ( path ) で 返さ れる ペア の 2 番目 の 要素 です 。 
この 関数 が 返す 値 は Unix の basename と は 異なり ます ; Unix の basename は '/ foo / bar /' に対して ' bar ' を 返し ます が 、 basename () は 空文字 列 ('') を 返し ます 。 
パス の list の 中 の 共通 する 最長 の プレフィックス を ( パス 名 の 1 文字 1 文字 を 判断 し て ) 返し ます 。 
もし list が 空 なら 、 空文字 列 ('') を 返し ます 。 
これ は 一 度 に 1 文字 を 扱う ため 、 不正 な パス を 返す こと が ある かも しれ ませ ん ので 注意 し て 下さい 。 
パス path の ディレクトリ 名 を 返し ます 。 
これ は split ( path ) で 返さ れる ペア の 最初 の 要素 です 。 
path が 存在 する なら 、 True を 返し ます 。 壊れ た シンボリッックリンク について は False を 返し ます 。 
path が 存在 する パス なら True を 返す 。 壊れ た シンボリッックリンク について は True を 返し ます 。 
os . lstat () が ない 環境 で は exists () と 同じ です 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
与え られ た 引数 の 最初 の "~" または "~ user 
" を 、 user の ホーム ディレクトリ の パス に 置き換え て 返し ます 。 
最初 が "~" なら 、 環境 変数 の HOME の 値 に 置き換え られ ます ;"~ user 
" なら 、 ビルトインモジュール 
を 使っ て パスワード ディレクトリ から 該当 する もの を 検索 し ます 。 
もし 置き換え に 失敗 し たり 、 引数 の パス が チルダ で 始まっ て い なかっ たら 、 パス を そのまま 返し ます 。 
Macintosh で は path を そのまま 返し ます 。 
引数 の パス を 環境 変数 に 展開 し て 返し ます 。 
引数 の 中 の "$ name 
" または "${ name }" の 文字 列 が 環境 変数 の name に 置き換え られ ます 。 
不正 な 変数 名 や 存在 し ない 変数 名 の 場合 に は 変換 さ れ ず 、 そのまま 返し ます 。 
Macintosh で は path を そのまま 返し ます 。 
path に 最後 に アクセス し た 時刻 を 、 エポック ( 
モジュール を 参照 ) から の 経過 時間 を 示す 秒 数 で 返し ます 。 
ファイル が 存在 し なかっ たり アクセス でき ない 場合 は os . error を 発生 し ます 。 
path の 最終 更新 時刻 を 、 エポック ( 
システム によって 、 ファイル の 最終 変更 時刻 ( Unix の よう な システム ) や 作成 時刻 ( Windows の よう な システム ) を システム の ctime で 返し ます 。 
戻り 値 は エポック ( 
モジュール を 参照 ) から の 経過 秒 数 を 示す 数値 です 。 
ファイル path の サイズ を バイト 数 で 返し ます 。 
path が 絶対 パス ( スラッシュ で 始まる ) なら 、 True を 返し ます 。 
path が 存在 する 正しい ファイル なら 、 True を 返し ます 。 
シンボリックリンク の 場合 に は その 実体 を チェック する ので 、 同じ パス に対して islink () と isfile () の 両方 が True を 返す こと が あり ます 。 
path が 存在 する なら 、 True を 返し ます 。 
シンボリックリンク の 場合 に は その 実体 を チェック する ので 、 同じ パス に対して islink () と isfile () の 両方 が True を 返す こと が あり ます 。 
path が シンボリックリンク なら 、 True を 返し ます 。 
シンボリックリンク が サポート さ れ て い ない プラットフォーム で は 、 常に False を 返し ます 。 
パス 名 path が マウント ポイント mount point ( ファイル システム の 中 で 異なる ファイル システム が マウント さ れ て いる ところ ) なら 、 True を 返し ます : この 関数 は path の 親 ディレクトリ で ある 
path /.. が path と 異なる デバイス 上 に ある か 、 あるいは 
path /.. と path が 同じ デバイス 上 の 同じ i - node を 指し て いる か を チェック し ます -- これ によって 全て の Unix と POSIX 標準 で マウント ポイント が 検出 でき ます 。 
パス に 1 つ あるいは それ 以上 の パス の 要素 を うまく 結合 し ます 。 
付け加える 要素 に 絶対 パス が あれ ば 、 それ より 前 の 要素 は 全て 破棄 さ れ 、 以降 の 要素 を 結合 し ます 。 
戻り 値 は path 1 と 省略 可能 な path 2 以降 を 結合 し た もの で 、 path 2 が 空文字 列 で ない なら 、 ディレクトリ の 区切り 文字 ( os . sep ) が 各 要素 の 間 に 挿入 さ れ ます 。 
Windows で は 各 ドライブ に対して カレント ディレクトリ が ある ので 、 os . path . join (" c :", " foo ") によって 、 c : foo で は なく 、 ドライブ C : 上 の カレント ディレクトリ から の 相対 パス ( c : foo ) が 返さ れ ます 。 
パス 名 の 大文字 、 小文字 を システム の 標準 に し ます 。 
Unix で は そのまま 返し ます 。 大文字 、 小文字 を 区別 し ない ファイル システム で は パス 名 を 小文字 に 変換 し ます 。 
Windows で は 、 スラッシュ を バックス ラッシュ に 変換 し ます 。 
パス 名 を 標準 化 し ます 。 
余分 な 区切り 文字 や 上位 レベル 参照 を 削除 し ます 。 
例えば 、 A // B 、 A /./ B 、 A / foo /../ B は 全て A / B に なり ます 。 
大文字 、 小文字 は 標準 化 し ませ ん ( それ に は normcase () を 使っ て 下さい )。 
Windows で は 、 スラッシュ を バックス ラッシュ に 変換 し ます 。 
パス が シンボリックリンク を 含ん で いる か によって 意味 が 変わる こと に 注意 し て ください 。 
2 つ の 引数 で ある パス 名 が 同じ ファイル あるいは ディレクトリ を 指し て いれ ば ( 同じ デバイス ナンバー と i - node ナンバー で 示さ れ て いれ ば )、 True を 返し ます 。 どちら か の パス 名 で os . stat () の 呼び出し に 失敗 し た 場合 に は 、 例外 が 発生 し ます 。 
利用 可能 : Macintosh 、 Unix 
fp 1 と fp 2 が 同じ ファイル オブジェクト を 指し て い たら 、 True を 返し ます 。 
2 つ の ファイル オブジェクト が 異なる ファイル ディスクリプタ を 示す こと も あり ます 。 利用 可能 : Macintosh 、 Unix 
stat タプル stat 1 と stat 2 が 同じ ファイル を 指し て い たら 、 True を 返し ます 。 
これら の タプル は fstat ()、 lstat () や stat () で 返さ れ た もの で かまい ませ ん 。 
この 関数 は 、 samefile () と sameopenfile () で 使わ れる の と 同様 な もの を 背後 に 実装 し て い ます 。 利用 可能 : Macintosh 、 Unix 
パス 名 path を ( head と tail ) の ペア に 分割 し ます 。 
tail は パス の 構成 要素 の 末尾 で 、 head は それ より 前 の 部分 です 。 tail は スラッシュ を 含み ませ ん ; も し path の 最後 に スラッシュ が あれ ば 、 tail は 空文字 列 に なり ます 。 
もし path に スラッシュ が なけれ ば 、 head は 空文字 列 に なり ます 。 
path が 空文字 列 なら 、 head と tail の どちら も 空文字 列 に なり ます 。 
head の 末尾 の スラッシュ は 、 head が ルート ディレクトリ ( 1 つ 以上 の スラッシュ のみ ) で ない 限り 、 取り除か れ ます 。 
ほとんど 全て の 場合 、 join ( head , tail ) の 結果 が path と 等しく なり ます ( ただ 1 つ の 例外 は 、 複数 の スラッシュ が head と tail を 分け て いる 時 です )。 
パス 名 path を ( drive , tail ) の ペア に 分割 し ます 。 drive は ドライブ 名 か 、 空文字 列 です 。 
ドライブ 名 を 使用 し ない システム で は 、 drive は 常に 空文字 列 です 。 
全て の 場合 に 
は path と 等しく なり ます 。 バージョン 1 . 3 で 新た に 追加 さ れ た 仕様 です 。 
パス 名 path を ( root , ext ) の ペア に し ます 。 
に なり ます 。 ext は 空文字 列 か 1 つ の ピリオド で 始まり 、 多く て も 1 つ の ピリオド を 含み ます 。 
path を ルート と する 各 ディレクトリ に対して ( も し path が ディレクトリ なら path も 含み ます )、( arg , dirname , names ) を 引数 として 関数 visit を 呼び出し ます 。 
引数 dirname は 訪れ た ディレクトリ を 示し 、 引数 names は その ディレクトリ 内 の ファイル の リスト ( os . listdir ( dirname ) で 得 られる ) です 。 
関数 visit によって names を 変更 し て 、 dirname 以下 の 対象 と なる ディレクトリ の セット を 変更 する こと も でき ます 。 例えば 、 ある ディレクトリ ツリー だけ 関数 を 適用 し ない など 。 
( names で 参照 さ れる オブジェクト は 、 del あるいは スライス を 使っ て 正しく 変更 し なけれ ば なり ませ ん 。 
) 注意 : ディレクトリ へ の シンボリックリンク は サブ ディレクトリ として 扱わ れ ない ので 、 walk () による 操作 対象 と は さ れ ませ ん 。 
注意 : 新た に 追加 さ れ た 
. walk () ジェネレータ を 使用 すれ ば 、 同じ 処理 を より 簡単 に 行う 事 が でき ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
Linux , FreeBSD プラットフォーム で 利用 でき ます 。 
この モジュール を 使う と OSS ( Open Sound System ) オーディオ インターフェース に アクセス でき ます 。 
OSS は オープン ソース あるいは 商用 の Unix で 広く 利用 でき 、 Linux ( カーネル 2 . 4 まで ) と FreeBSD で 標準 の オーディオ インターフェース です 。 
OSS C API の 公式 ドキュメント 
この モジュール で は OSS デバイス ドライバー が 提供 し て いる 多く の 定数 を 定義 し て い ます ; 定数 の リスト について は Linux や FreeBSD の sys / soundcard . h を 参照 し て ください 。 
ossaudiodev で は 以下 の 変数 と 関数 を 定義 し て い ます : 
何らかの エラー の とき に 送出 さ れる 例外 です 。 
引数 は 何 が 誤っ て いる か を 示す 文字 列 です 。 ( ossaudiodev が open ()、 write ()、 ioctl () など の システム コール から エラー を 受け取っ た 場合 に は IOError を 送出 し ます 。 
オーディオ デバイス を 開き 、 OSS オーディオデバイスオブジェクト を 返し ます 。 
この オブジェクト は read ()、 write ()、 fileno () といった ファイル 類似 オブジェクト の メソッド を 数多く サポート し て い ます 。 ( と は いえ 、 伝統 的 な Unix の read / write における 意味 づけ と OSS デバイス の read / write と の 間 に は 微妙 な 違い が あり ます )。 
また 、 オーディオ 特有 の 多く の メソッド が あり ます ; メソッド の 完全 な リスト について は 下記 を 参照 し て ください 。 
device は 使用 する オーディオデバイスファイルネーム です 。 
もし これ が 指定 さ れ ない なら 、 この モジュール は 使う デバイス として 最初 に 環境 変数 AUDIODEV を 参照 し ます 。 
見つから なけれ ば / dev / dsp を 参照 し ます 。 
mode は 読み出し 専用 アクセス の 場合 に は ' r '、 書き込み 専用 ( プレイバック ) アクセス の 場合 に は ' w '、 読み書き アクセス の 場合 に は ' rw ' に し ます . 多く の サウンド カード は 一つ の プロセス が 一 度 に レ コーダ と プレーヤ の どちら か しか 開け ない よう に し て いる ため , 必要 な 操作 に 応じ た デバイス だけ を 開く よう に する の が よい でしょ う 。 
また , サウンド カード に は 半二重 ( half - duplex ) 方式 の もの が あり ます : こうした カード で は , デバイス を 読み出し または 書き込み 用 に 開く こと は でき ます が , 両方 同時に は 開け ませ ん . 呼び出し の 文法 が 普通 と 異なる こと に 注意 し て ください : 最初 の 引数 は 省略 可能 で 、 2 番目 が 必須 です 。 
これ は ossaudiodev にとって かわ られ た 古い linuxaudiodev と の 互換 性 の ため という 歴史 的 な 産物 です 。 
ミキサデバイス を 開き 、 OSS ミキサデバイスオブジェクト を 返し ます 。 device は 使用 する ミキサデバイス の ファイル 名 です 。 
device を 指定 し ない 場合 、 モジュール は まず 環境 変数 AUDIODEV を 参照 し て 使用 する デバイス を 探し ます 。 
見つから なけれ ば 、 / dev / mixer を 参照 し ます 。 
14 . 11 . 1 オーディオデバイスオブジェクト 
parser モジュール は Python の 内部 パーサ と バイト コード ・ コンパイラ へ の インター フェイス を 提供 し ます 。 
この インター フェイス の 第 一 の 目的 は 、 Python コード から Python の 式 の 解析 木 を 編集 し たり 、 これから 実行 可能 な コード を 作成 し たり できる よう に する こと です 。 
この モジュール について 注意 す べき こと が 少し あり ます 。 それ は 作成 し た データ 構造 を 利用 する ため に 重要 な こと です 。 
この 文書 は Python コード の 解析 木 を 編集 する ため の チュートリアル で は あり ませ ん が 、 parser モジュール を 使っ た 例 を いくつ か 示し て い ます 。 もっとも 重要 な こと は 、 内部 パーサ が 処理 する Python の 文法 について よく 理解 し て おく 必要 が ある という こと です 。 
言語 の 文法 に関する 完全 な 情報 について は 、 
Python 言語 リファレンス 
標準 の Python ディストリビューション に 含ま れる ファイル Grammar / Grammar の 中 で 定義 さ れ て いる 文法 仕様 から 、 パーサ 自身 は 作成 さ れ て い ます 。 
この モジュール が 作成 する AST オブジェクト の 中 に 格納 さ れる 解析 木 は 、 下 で 説明 する expr () または suite () 関数 によって 作ら れる とき に 内部 パーサ から 実際 に 出力 さ れる もの です 。 
sequence 2 ast () が 作る AST オブジェクト は 忠実 に これら の 構造 を シミュレート し て い ます 。 
言語 の 形式 文法 が 改訂 さ れる ため に 、 `` 正しい '' と 考え られる シーケンス の 値 が Python の ある バージョン から 別 の バージョン で 変化 する こと が ある という こと に 注意 し て ください 。 
しかし 、 Python の ある バージョン から 別 の バージョン へ テキスト の ソース の まま コード を 移せ ば 、 目的 の バージョン で 正しい 解析 木 を 常に 作成 でき ます 。 ただし 、 インタープリタ の 古い バージョン へ 移行 する 際 に 、 最近 の 言語 コンストラクト を サポート し て い ない こと が ある という 制限 だけ が あり ます 。 
ソース コード が 常に 前方 互換 性 が ある の に対して 、 一般 的 に 解析 木 は ある バージョン から 別 の バージョン へ の 互換 性 が あり ませ ん 。 ast 2 list () または ast 2 tuple () から 返さ れる シーケンス の それぞれ の 要素 は 単純 な 形式 です 。 
文法 の 非終端 要素 を 表す シーケンス は 常に 一 より 大きい 長 さ を 持ち ます 。 
最初 の 要素 は 文法 の 生成 規則 を 識別 する 整数 です 。 
これら の 整数 は C ヘッダ ファイル Include / graminit . h と Python モジュール 
の 中 の 特定 の シンボル 名 です 。 
シーケンス に 付け加え られ て いる 各 要素 は 、 入力 文字 列 の 中 で 認識 さ れ た まま の 形 で 生成 規則 の 構成 要素 を 表し て い ます : これら は 常に 親 と 同じ 形式 を 持つ シーケンス です 。 
この 構造 の 注意 す べき 重要 な 側面 は 、 if _ stmt の 中 の キーワード if の よう な 親 ノード の 型 を 識別 する ため に 使わ れる キーワード が いかなる 特別 な 扱い も なく ノード ツリー に 含ま れ て いる という こと です 。 
例えば 、 if キーワード は タプル ( 1 , ' if ') と 表さ れ ます 。 ここ で 、 1 は 、 ユーザ が 定義 し た 変数 名 と 関数 名 を 含む すべて の NAME トー クン に 対応 する 数値 です 。 
上記 の if キーワード の 例 が 代表 的 な もの です 。 
終端 記号 の いろいろ な 型 は 、 C ヘッダ ファイル Include / token . h と Python モジュール 
で 定義 さ れ て い ます 。 AST オブジェクト は この モジュール の 機能 を サポート する ため に 必要 あり ませ ん が 、 三つ の 目的 から 提供 さ れ て い ます : アプリケーション が 複雑 な 解析 木 を 処理 する コスト を 償却 する ため 、 Python の リスト や タプル 表現 に 比べ て メモリ 空間 を 保全 する 解析 木 表現 を 提供 する ため 、 解析 木 を 操作 する 追加 モジュール を C で 作る こと を 簡単 に する ため 。 
AST オブジェクト を 使っ て いる こと を 隠す ため に 、 簡単 な `` ラッパー '' クラス を Python で 作る こと が でき ます 。 parser モジュール は 二 、 三 の 別々 の 目的 の ため に 関数 を 定義 し て い ます 。 
もっとも 重要 な 目的 は AST オブジェクト を 作る こと と 、 AST オブジェクト を 解析 木 と コンパイル さ れ た コード オブジェクト の よう な 他 の 表現 に 変換 する こと です 。 
しかし 、 AST オブジェクト で 表現 さ れ た 解析 木 の 型 を 調べる ため に 役に立つ 関数 も あり ます 。 
解析 木 の 内部 ノード を 表す 便利 な 定数 。 
便利 な 解析 木の葉 の ノード を 表す 定数 と ノード 値 を テスト する ため の 関数 。 
18 . 1 . 6 . 1 compile () の エミュレーション 
18 . 1 . 6 . 2 情報 発見 
( 条件 付き ) ブレーク ポイント の 設定 や ソース 行 レベル で の シングル ステップ 実行 、 スタック フレーム の インスペクション 、 ソースコードリスティング および いかなる スタック フレーム の コンテキスト における 任意 の Python コード の 評価 を サポート し て い ます 。 
現在 これ について の ドキュメント は あり ませ ん が 、 ソース を 読め ば 簡単 に 理解 でき ます 。 
拡張 インターフェース は モジュール bdb 
( ドキュメント なし ) と 
他 の スクリプト を デバッグ する ため に 、 pdb . py を スクリプト として 呼び出す こと も でき ます せ ます 。 
スクリプト として pdb を 起動 する と 、 デバッグ 中 の プログラム が 異常 終了 し た 時 に pdb が 自動的 に 検死 デバッグモード に 入り ます 。 
クラッシュ し た プログラム を 調べる ため の 典型 的 な 使い方 は : 
モジュール は 以下 の 関数 を 定義 し て い ます 。 それぞれ が 少し づつ 違っ た 方法 で デバッガ に 入り ます : 
デバッガ に 制御 さ れ た 状態 で ( 文字 列 として 与え られ た ) statement を 実行 し ます 。 
オプション の globals と locals 引数 は コード を 実行 する 環境 を 指定 し ます 。 デフォルト で は 、 モジュール 
の 辞書 が 使わ れ ます 。 
( exec 文 または eval () 組み込み 関数 の 説明 を 参照 し て ください 。 ) 
デバッガ の 制御 もと で ( 文字 列 として 与え られる ) expression を 評価 し ます 。 
runeval () が リターン し た とき 、 式 の 値 を 返し ます 。 
その他 の 点 で は 、 この 関数 は run () を 同様 です 。 
function ( 関数 または メソッド オブジェクト 、 文字 列 で は あり ませ ん ) を 与え られ た 引数 とともに 呼び出し ます 。 
runcall () が リターン し た とき 、 関数 呼び出し が 返し た もの は 何 でも 返し ます 。 
デバッガプロンプト は 関数 に 入る と すぐ に 現れ ます 。 
スタック フレーム を 呼び出し た ところ で デバッガ に 入り ます 。 
たとえ コード が 別 の 方法 で デバッグ さ れ て いる 最中 で なく て も ( 例えば 、 アサーション が 失敗 する とき )、 これ は プログラム の 所定 の 場所 で ブレーク ポイント を ハード コード する ため に 役に立ち ます 。 
与え られ た traceback オブジェクト の 事後 解析 デバッギング に 入り ます 。 
sys . last _ traceback の トレース バック の 事後 解析 デバッギング に 入り ます 。 
3 . 14 . 1 他 の Python モジュール と の 関係 
pickle モジュール で は 、 Python オブジェクト データ 構造 を 直列 化 ( serialize ) し たり 非 直列 化 ( de - serialize ) する ため の 基礎 的 です が 強力 な アルゴリズム を 実装 し て い ます 。 
`` Pickle 化 ( Pickling )'' は Python の オブジェクト 階層 を バイト ストリーム に 変換 する 過程 を 指し ます 。 
`` 非 Pickle 化 ( unpickling )'' は その 逆 の 操作 で 、 バイト ストリーム を オブジェクト 階層 に 戻す よう に 変換 し ます 。 
この ドキュメント で は pickle モジュール および 
モジュール の 両方 について 記述 し ます 。 
モジュール と 間違え ない よう に 注意 し て ください 
3 . 14 . 1 他 の Python モジュール と の 関係 
3 . 14 . 5 . 1 通常 の クラス インスタンス の pickle 化 および unpickle 化 
3 . 14 . 5 . 2 拡張 型 の pickle 化 および unpickle 化 
3 . 14 . 5 . 3 外部 オブジェクト の pickle 化 および unpickle 化 
pipes モジュール で は 、 ' pipeline ' の 概念 -- ある ファイル を 別 の ファイル に 変換 する 機構 の 直列 接続 -- を 抽象 化 する ため の クラス を 定義 し て い ます 。 
この モジュール は / bin / sh コマンド ライン を 利用 する ため 、 os . system () および os . popen () の ため の POSIX 準拠 の シェル 、 または 互換 の シェル が 必要 です 。 
pipes モジュール で は 、 以下 の クラス を 定義 し て い ます : 
クラス Template 
パイプライン を 抽象 化 し た クラス 。 
使用 例 : 
この モジュール は 次 の 単一 の 関数 を 提供 し ます 。 
パッケージ を 構成 する モジュール の サーチ パス を 拡張 し ます 。 
パッケージ の __ init __. py で 次 の よう に 書く こと を 意図 し た もの です 。 from pkgutil import extend _ path __ path __ = extend _ path (__ path __, __ name __) 
上記 は パッケージ の __ path __ に sys . path の 全 ディレクトリ の サブ ディレクトリ として パッケージ 名 と 同じ 名前 を 追加 し ます 。 
これ は 1 つ の 論理 的 な パッケージ の 異なる 部品 を 複数 の ディレクトリ に 分け て 配布 し たい とき に 役立ち ます 。 同時に *. pkg の * の 部分 が name 引数 に 指定 さ れ た 文字 列 に 一致 する ファイル の 検索 も おこない ます 。 
この 機能 は import で 始まる 特別 な 行 が ない こと を 除き *. pth ファイル に 似 て い ます ( 
の 項 を 参照 )。 
) 入力 パス が リスト で ない 場合 ( フリーズ さ れ た パッケージ の とき ) は 何 も せ ず に リターン し ます 。 
入力 パス が 変更 さ れ て い なけれ ば 、 アイテム を 末尾 に 追加 し た だけ の コピー を 返し ます 。 
sys . path は シーケンス で ある こと が 前提 に なっ て い ます 。 
sys . path の 要素 の 内 、 実在 する ディレクトリ を 指す ( ユニ コード または 8 ビット の ) 文字 列 と なっ て い ない もの は 無視 さ れ ます 。 
ファイル 名 として 使っ た とき に エラー が 発生 する sys . path の ユニ コード 要素 が ある 場合 、 この 関数 ( os . path . isdir () を 実行 し て いる 行 ) で 例外 が 発生 する 可能 性 が あり ます 。 
6 . 30 . 3 . 1 Win 95 / 98 固有 
6 . 8 . 3 . 6 popen 2 .* を 置き換える 
6 . 9 . 1 Popen 3 および Popen 4 
に ある 関数 は この モジュール における ファクトリ 関数 と 同じ 名前 を 持ち ます が 、 戻り 値 に関する 取り決め は 
の 関数 の 方 が より 直感 的 です 。 この モジュール で 提供 さ れ て いる 第 一 の インタフェース は 3 つ の ファクトリ 関数 です 。 
これら の 関数 の いずれ も 、 bufsize を 指定 し た 場合 、 I / O パイプ の バッファ サイズ を 決定 し ます 。 mode を 指定 する 場合 、 文字 列 ' b ' または ' t ' で なけれ ば なり ませ ん ; Windows で は 、 ファイル オブジェクト を バイナリ あるいは テキスト モード の どちら で 開く か を 決め なけれ ば なり ませ ん 。 
cmd が 文字 列 の 場合 、 ( os . system () の よう に ) シェル に 渡さ れ ます 。 
子 プロセス から の リターンコード を 取得 する に は 、 Popen 3 および Popen 4 クラス の poll () あるいは wait () メソッド を 使う しか あり ませ ん ; これら の 機能 は Unix で しか 利用 でき ませ ん 。 
この 情報 は popen 2 ()、 popen 3 ()、 および popen 4 () 関数 、 あるいは 
モジュール における 同等 の 関数 の 使用 によって は 得る こと が でき ませ ん 。 ( 
モジュール の 関数 から 返さ れる タプル は popen 2 モジュール の 関数 から 返さ れる もの と は 違う 順序 です 。 
cmd を サブ プロセス として 実行 し ます 。 
ファイル オブジェクト ( child _ stdout , child _ stdin ) を 返し ます 。 
ファイル オブジェクト ( child _ stdout , child _ stdin , child _ stderr ) を 返し ます 。 
ファイル オブジェクト ( child _ stdout _ and _ stderr , child _ stdin ). バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
Unix で は 、 ファクトリ 関数 によって 返さ れる オブジェクト を 定義 し て いる クラス も 利用 する こと が でき ます 。 
これら の オブジェクト は Windows 実装 で 使わ れ て い ない ため 、 その プラットフォーム 上 で 使う こと は でき ませ ん 。 
クラス Popen 3 
この クラス は 子 プロセス を 表現 し ます 。 
通常 、 Popen 3 インスタンス は 上 で 述べ た popen 2 () および popen 3 () ファクトリ 関数 を 使っ て 生成 さ れ ます 。 Popen 3 オブジェクト を 生成 する ため に いずれ か の ヘルパー 関数 を 使っ て い ない の なら 、 cmd パラメタ は 子 プロセス で 実行 する シェル コマンド に なり ます 。 
capturestderr フラグ が 真 で あれ ば 、 この オブジェクト が 子 プロセス の 標準 エラー 出力 を 捕獲 し なけれ ば なら ない こと を 意味 し ます 。 標準 の 値 は 偽 です 。 
bufsize パラメタ が 存在 する 場合 、 子 プロセス へ の / から の I / O バッファ の サイズ を 指定 し ます 。 
クラス Popen 4 
Popen 3 に 似 て い ます が 、 標準 エラー 出力 を 標準 出力 と 同じ ファイル オブジェクト で 捕獲 し ます 。 
この モジュール は 、 POP 3 クラス を 定義 し ます 。 これ は POP 3 サーバ へ の 接続 と 、 RFC 1725 に 定め られ た プロトコル を 実装 し ます 。 
POP 3 クラス は minimal と optinal という 2 つ の コマンド セット を サポート し ます 。 
幾つ も 実装 さ れ て いる POP 3 サーバー の 品質 は 、 貧弱 な もの が 多数 を 占め て い ます 。 
もし 、 お 使い の メール サーバー が IMAP を サポート し て いる なら 、 
poplib モジュール で は 、 ひとつ の クラス が 提供 さ れ て い ます 。 
クラス POP 3 
この クラス が 、 実際 に POP 3 プロトコル を 実装 し ます 。 
インスタンス が 初期 化 さ れる とき に 、 コネクション が 作成 さ れ ます 。 port が 省略 さ れる と 、 POP 3 標準 の ポート ( 110 ) が 使わ れ ます 。 
クラス POP 3 _ SSL 
POP 3 クラス の サブ クラス で 、 SSL で カプセル 化 さ れ た ソケット による POP サーバ へ の 接続 を 提供 し ます 。 
port が 指定 さ れ て い ない 場合 、 POP 3 - over - SSL 標準 の 995 番 ポート が 使わ れ ます 。 
keyfile と certfile も オプション で - SSL 接続 に 使わ れる PEM フォーマット の 秘密 鍵 と 信頼 さ れ た ## を 含み ます 。 
1 つ の 例外 が 、 poplib モジュール の アトリビュート として 定義 さ れ て い ます 。 
例外 は 、 すべて の エラー で 発生 し ます 。 
例外 の 理由 は 文字 列 として コンス トラクタ に 渡さ れ ます 。 
この モジュール は オペレーティングシステム の 機能 の うち 、 C 言語 標準 および POSIX 標準 ( Unix インタフェース を ほんの 少し 隠蔽 し た ) で 標準 化 さ れ て いる 機能 に対する アクセス 機構 を 提供 し ます 。 
この モジュール を 直接 import し ない で 下さい 。 
その 代わり に 、 移植 性 の ある インタフェース を 提供 し て いる 
を イン ポート し て ください 。 
Unix で は 、 
モジュール が 提供 する インタフェース は posix の 内容 を 内包 し て い ます 。 
非 Unix オペレーティングシステム で は posix モジュール を 使う こと は でき ませ ん が 、 その 部分 的 な 機能 セット は 、 たいてい 
インタフェース を 介し て 利用 する こと が でき ます 。 
は 、 一度 import し て しまえ ば posix の 代わり で ある こと による パフォーマンス 上 の ペナルティ は 全く あり ませ ん 。 
その 上 、 
は os . environ の 内容 が 変更 さ れ た 際 に 自動的 に putenv () を 呼ぶ など 、 いくつ か の 追加 機能 を 提供 し て い ます 。 
一方 、 システム コール から 報告 さ れ た エラー は 以下 に 述べる よう に error ( 標準 例外 OSError と 同義 です ) を 送出 し ます 。 
リリース 1 . 5 で 撤廃 さ れ まし た 。 この モジュール が 提供 し て いる より も うまく 処理 が でき 、 可 搬性 も 高い ロック 操作 が 
. lockf () で 提供 さ れ て い ます 。 
この モジュール で は 、 組み込み の ファイル オブジェクト の 上 に いくつ か の 追加 機能 を 実装 し て い ます 。 
特に 、 この オブジェクト は ファイル の ロック 機構 、 ファイル フラグ へ の 操作 、 および ファイル オブジェクト を 複製 する ため の 簡単 な インタフェース を 実装 し て い ます 。 
オブジェクト は 全て の 標準 ファイル オブジェクト の メソッド に 加え 、 以下 に 述べる メソッド を 持っ て い ます 。 
この モジュール は ファイル の ロック 機構 に fcntl . fcntl () を 用いる ため 、 ある 種 の Unix で しか 動作 し ませ ん 。 
posixfile オブジェクト を インスタンス 化 する に は 、 posixfile モジュール の open () 関数 を 使い ます 。 
生成 さ れる オブジェクト は 標準 ファイル オブジェクト と だいたい 同じ ルック フィール です 。 posixfile モジュール で は 、 以下 の 定数 を 定義 し て い ます : 
オフセット を ファイル の 先頭 から 計算 し ます 。 
オフセット を 現在 の ファイル 位置 から 計算 し ます 。 
オフセット を ファイル の 末尾 から 計算 し ます 。 
posixfile モジュール で は 以下 の 関数 を 定義 し て い ます : 
指定 し た ファイル 名 と モード で 新しい posixfile オブジェクト を 作成 し ます 。 
filename 、 mode および bufsize 引数 は 組み込み の open () 関数 と 同じ よう に 解釈 さ れ ます 。 
指定 し た 標準 ファイル オブジェクト で 新しい posixfile オブジェクト を 作成 し ます 。 作成 さ れる オブジェクト は 元 の ファイル オブジェクト と 同じ ファイル 名 および モード を 持っ て い ます 。 
posixfile オブジェクト で は 以下 の 追加 メソッド を 定義 し て い ます : 
ファイル オブジェクト が 参照 し て いる ファイル の 指定 部分 に ロック を かけ ます 。 
指定 の 書式 は 下 の テーブル で 説明 さ れ て い ます 。 
len 引数 に は ロック する 部分 の 長 さ を 指定 し ます 。 
標準 の 値 は 0 です 。 start に は ロック する 部分 の 先頭 オフセット を 指定 し 、 その 標準 値 は 0 です 。 
whence 引数 は オフセット を どこ から の 相対 位置 に する か を 指定 し ます 。 
この 値 は 定数 SEEK _ SET 、 SEEK _ CUR 、 または SEEK _ END の いずれ か に なり ます 。 
標準 の 値 は SEEK _ SET です 。 
引数 について の より 詳しい 情報 は システム の 
fcntl ( 2 ) マニュアル ページ を 参照 し て ください 。 
ファイル オブジェクト が 参照 し て いる ファイル に 指定 し た フラグ を 設定 し ます 。 
新しい フラグ は 特に 指定 し ない 限り 以前 の フラグ と OR さ れ ます 。 
指定 書式 は 下 の テーブル で 説明 さ れ て い ます 。 
flags 引数 なし の 場合 、 現在 の フラグ を 示す 文字 列 が 返さ れ ます ("?" 修飾 子 と 同じ です ) 。 
フラグ について の より 詳しい 情報 は システム の 
ファイル オブジェクト と 、 背後 の ファイル ポインタ および ファイル 記述 子 を 複製 し ます 。 
返さ れる オブジェクト は 新た に 開か れ た ファイル の よう に 振舞い ます 。 
新た な オブジェクト は 指定 し た ファイル 記述 子 を 持ち ます 。 それ 以外 の 点 で は 、 返さ れる オブジェクト は 新た に 開か れ た ファイル の よう に 振舞い ます 。 
posixfile オブジェクト が 参照 し て いる 標準 ファイル オブジェクト を 返し ます 。 
この 関数 は 標準 ファイル オブジェクト を 使う よう 強制 し て いる 関数 を 使う 場合 に 便利 です 。 
全て の メソッド で 、 要求 さ れ た 操作 が 失敗 し た 場合 に は IOError が 送出 さ れ ます 。 lock () の 書式 指定 文字 に は 以下 の よう な 意味 が あり ます : 
書式 指定 
指定 領域 の ロック を 解除 し ます 
指定 領域 の 読み出し ロック を 要求 し ます 
指定 領域 の 書き込み ロック を 要求 し ます 
これ に 加え 、 以下 の 修飾 子 を 書式 に 追加 でき ます : 
修飾 子 
ロック 操作 が 処理 さ れる まで 待ち ます 
要求 さ れ た ロック と 衝突 し て いる 第 一 の ロック を 返す か 、 衝突 が ない 場合 に は None を 返し ます 。 
注釈 : 
返さ れる ロック は ( mode , len , start , whence , pid ) の 形式 で 、 mode は ロック の 形式 を 表す 文字 (' r ' または ' w ') です 。 
この 修飾 子 は ロック 要求 の 許可 を 行わ せ ませ ん ; すなわち 、 問い合わせ の 目的 に しか 使え ませ ん 。 
flags () の 書式 指定 文字 に は 以下 の よう な 意味 が あり ます : 
追記 のみ ( append only ) フラグ 
実行 時 クローズ ( close on exec ) フラグ 
無 遅延 ( no delay ) フラグ ( 非 ブロック ( non - blocking ) フラグ と も 呼ば れ ます ) 
同期 ( synchronization ) フラグ 
指定 し た フラグ を 通常 の ' オン ' に せ ず ' オフ ' に し ます 
フラグ を 標準 の ' OR ' 操作 で は なく 置換 し ます 。 
設定 さ れ て いる フラグ を 表現 する 文字 から なる 文字 列 を 返し ます 。 
"!" および "=" 修飾 子 は 互いに 排他 の 関係 に あり ます 。 
この 文字 列 が 表す フラグ は 同じ 呼び出し によって フラグ が 置き換え られ た 後 の もの です 。 
以下 に 例 を 示し ます : 
pprint モジュール を 使う と 、 Python の 任意 の データ 構造 を インタープリタ へ の 入力 で 使わ れる 形式 に し て `` pretty - print '' でき ます 。 
フォーマット 化 さ れ た 構造 の 中 に Python の 基本 的 な タイプ で は ない オブジェクト が ある なら 、 表示 でき ない かも しれ ませ ん 。 
Python の 定数 として 表現 でき ない 多く の 組み込み オブジェクト と 同様 、 ファイル 、 ソケット 、 クラス あるいは インスタンス の よう な オブジェクト が 含ま れ て い た 場合 は 出力 でき ませ ん 。 可能 で あれ ば オブジェクト を フォーマット 化 し て 1 行 に 出力 し ます が 、 与え られ た 幅 に 合わ ない なら 複数 行 に 分け て 出力 し ます 。 
無理 に 幅 を 設定 し たい なら 、 PrettyPrinter オブジェクト を 作成 し て 明示 し て ください 。 pprint モジュール に は 1 つ の クラス が 定義 さ れ て い ます : 
クラス PrettyPrinter 
PrettyPrinter インスタンス を 作り ます 。 
この コンス トラクタ に は いくつ か の キーワード パラメータ を 設定 でき ます 。 
stream キーワード で 出力 ストリーム を 設定 でき ます ; この ストリーム に対して 呼び出さ れる メソッド は ファイル プロトコル の write () メソッド だけ です 。 
もし 設定 さ れ なけれ ば 、 PrettyPrinter は sys . stdout を 使用 し ます 。 
さらに 3 つ の パラメータ で 出力 フォーマット を コントロール でき ます 。 
その キーワード は indent 、 depth と width です 。 
再帰 的 な レベル ごと に 加える インデント の 量 は indent で 設定 でき ます ; デフォルト 値 は 1 です 。 
他 の 値 に する と 出力 が 少し おかしく 見え ます が 、 ネスト 化 さ れ た ところ が 見分け 易く なり ます 。 
出力 さ れる レベル は depth で 設定 でき ます ; 出力 さ れる データ 構造 が 深い なら 、 指定 以上 の 深い レベル の もの は "..." で 置き換え られ て 表示 さ れ ます 。 
デフォルト で は 、 オブジェクト の 深 さ を 制限 し ませ ん 。 
width パラメータ を 使う と 、 出力 する 幅 を 望み の 文字数 に 設定 でき ます ; デフォルト で は 80 文字 です 。 
もし 指定 し た 幅 に フォーマット でき ない 場合 は 、 できるだけ 近づけ ます 。 
PrettyPrinter クラス に は いくつ か の 派生 する 関数 が 提供 さ れ て い ます : 
object を フォーマット 化 し て stream に 出力 し 、 最後 に 改行 し ます 。 
stream が 省略 さ れ たら 、 sys . stdout に 出力 し ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 indent 、 width と 、 depth が 追加 さ れ まし た 
再帰 的 な オブジェクト に対して は 常に false を 返し ます 。 
object が 再帰 的 な 表現 か どう か を 返し ます 。 
さらに もう 1 つ 、 関数 が 定義 さ れ て い ます : 
object の 文字 列 表現 を 、 再帰 的 な データ 構造 から 保護 し た 形式 で 返し ます 。 
もし object の 文字 列 表現 が 再帰 的 な 要素 を 持っ て いる なら 、 再帰 的 な 参照 は " Recursion on typename with id = number " で 表示 さ れ ます 。 
出力 は 他 と 違っ て フォーマット 化 さ れ ませ ん 。 
preferences モジュール を 使う と 、 ユーザ の 環境 設定 を システム 全体 の 環境 設定 フォルダ 中 に 保存 でき ます 。 この とき 、 ユーザ の 環境 設定 に アプリケーション 自体 の デフォルト 設定 を 持た せ たり 、 特定 の 状況 で 環境 設定 を オーバライド さ せ たり でき ます 。 
10 . 4 決定 論 的 プロ ファイリング と は 何 か ? 
プロファイラ の プライマリ・エントリ・ポイント は グローバル 関数 profile . run () です 。 
通常 、 プロファイル 情報 の 作成 に 使わ れ ます 。 
情報 は pstats . Stats クラス の メソッド を 使っ て 整形 や 出力 を おこない ます 。 
以下 は すべて の 標準 エントリ ポイント と 関数 の 解説 です 。 
さらに いくつ か の コード の 詳細 を 知り たけれ ば 、 「 プロファイラ の 拡張 」 を 読ん で ください 。 派生 クラス を 使っ て プロファイラ を `` 改善 '' する 方法 や モジュール の ソース コード の 読み方 が 述べ られ て い ます 。 
この 関数 は オプション 引数 として exec 文 に 渡す ファイル 名 を 指定 でき ます 。 
この ルーチン は 必ず 最初 の 引数 の exec を 試み 、 実行 結果 から プロファイル 情報 を 収集 しよ う と し ます 。 
ファイル 名 が 指定 さ れ て い ない とき は 、 各行 の 標準 名 ( standard name ) 文字 列 ( ファイル 名 / 行 数 / 関数 名 ) で ソート さ れ た 、 簡単 な レポート が 表示 さ れ ます 。 
以下 は その 出力 例 です 。 
最初 の 行 は この プロファイル が profile . run (' main ()') の 呼び出し によって 生成 さ れ た もの で あり 、 実行 さ れ た 文字 列 は ' main ()' で ある こと を 示し て い ます 。 
2 行 目 は 2706 回 の 関数 呼出し が あっ た こと を 示し て い ます 。 
この うち 2004 回 は プリミティブ な もの です 。 
呼出し 回数 
この 関数 が 消費 し た 時間 の 合計 ( サブ 関数 呼出し の 時間 は 除く ) 
tottime を ncalls で 割っ た 値 
サブ 関数 を 含む 関数 の ( 実行 開始 から 終了 まで の ) 消費 時間 の 合計 。 
この 項目 は 再帰 的 な 関数 において も 正確 に 計測 さ れ ます 。 
cumtime を プリミティブ な 呼び出し 回数 で 割っ た 値 
その 関数 の ファイル 名 、 行 番号 、 関数 名 
(" 43 / 3 " など ) 最初 の 欄 に 2 つ の 数字 が 表示 さ れ て いる 場合 、 最初 の 値 は 呼出し 回数 、 2 番目 は プリミティブ な 呼び出し の 回数 を 表し て い ます 。 
関数 が 再帰 し て い ない 場合 は どちら の 回数 も 同じ に なる ため 、 1 つ の 数値 しか 表示 さ れ ませ ん 。 
この 関数 は profile . run () に 似 て い ます が 、 command 文字 列 用 に グローバル 辞書 と ローカル 辞書 の 引数 を 追加 し て い ます 。 
プロファイラ・データ の 分析 は pstats モジュール を 使っ て おこない ます 。 クラス Stats 
この コンス トラクタ は filename で 指定 し た ( 単一 または 複数 の ) ファイル から `` 統計 情報 オブジェクト '' の インスタンス を 生成 し ます 。 
Stats オブジェクト は レポート を 出力 する メソッド を通じて 操作 し ます 。 上記 コンス トラクタ で 指定 する ファイル は 、 使用 する Stats に 対応 し た バージョン の profile で 作成 さ れ た もの で なけれ ば なり ませ ん 。 
将来 の バージョン の プロファイラ と の 互換 性 は 保証 さ れ て おら ず 、 ( 旧 バージョン の もの など ) 他 の プロファイラ と の 互換 性 も ない こと に 注意 し て ください 。 複数 の ファイル を 指定 し た 場合 、 同一 の 関数 の 統計 情報 は すべて 合算 さ れ 、 複数 の プロセス で 構成 さ れる 全体 を ひとつ の レポート で 検証 する こと が 可能 に なり ます 。 
既存 の Stats オブジェクト に 別 の ファイル の 情報 を 追加 する とき は 、 add () メソッド を 使用 し ます 。 
IRIX , Linux プラットフォーム で 利用 でき ます 。 
pty モジュール は 擬似 端末 ( 他 の プロセス を 実行 し て その 制御 を し て いる 端末 を プログラム で 読み書き する ) を 制御 する 操作 を 定義 し て い ます 。 擬似 端末 の 制御 は プラットフォーム に 強く 依存 する ので 、 SGI と Linux 用 の コード しか 存在 し て い ませ ん 。 
fork し ます 。 
子 プロセス の 制御 端末 を 擬似 端末 に 接続 し ます 。 返り 値 は ( pid , fd ) です 。 
子 プロセス は pid として 0 、 、 fd として invalid を それぞれ 受けとり ます 。 
親 プロセス は pid として 子 プロセス の PID 、 fd として 子 プロセス の 制御 端末 ( 子 プロセス の 標準 入出力 に 接続 さ れ て いる ) の ファイル ディスクリプタ を 受けとり ます 。 
新しい 擬似 端末 の ペア を 開き ます 。 
利用 できる なら os . openpty () を 使い 、 利用 でき なけれ ば SGI と 一般 的 な Unix システム 用 の エミュレーション コード を 使い ます 。 マスター 、 スレーブ それぞれ の ため の ファイル ディスクリプタ 、 ( master , slave ) の タプル を 返し ます 。 
プロセス を 生成 し て 制御 端末 を 現在 の プロセス の 標準 入出力 に 接続 し ます 。 
これ は 制御 端末 を 読も う と する プログラム を ごまかす ため に 利用 さ れ ます 。 master _ read と stdin _ read に は ファイル ディスクリプタ から 読み込む 関数 を 指定 し て ください 。 
デフォルト で は 呼ば れる たび に 1024 バイト ずつ 読み込も う と し ます 。 
この モジュール は Unix の ユーザ アカウント と パスワード の データベース へ の アクセス を 提供 し ます 。 
全て の Unix 系 OS で 利用 でき ます 。 パスワード データベース の 各 エントリ は タプル の よう な オブジェクト で 提供 さ れ 、 それぞれ の 属性 は passwd 構造 体 の メンバ に 対応 し て い ます ( 下 の 属性 欄 について は 、 pwd . h を 見 て ください )。 
インデックス 
ログイン 名 
暗号 化 さ れ た パスワード ( optional )) 
ユーザ ID ( UID ) 
グループ ID ( GID ) 
実名 または コメント 
ホーム ディレクトリ 
シェル 
UID と GID は 整数 で 、 それ 以外 は 全て 文字 列 です 。 検索 し た エントリ が 見つから ない と KeyError が 発生 し ます 。 
注意 : 伝統 的 な Unix で は 、 pw _ passwd フィールド は DES 由来 の アルゴリズム で 暗号 化 さ れ た パスワード ( 
モジュール を ごらん ください ) が 含ま れ て い ます 。 
しかし 、 近代 的 な UNIX 系 OS で は シャドウパスワード と よば れる 仕組み を 利用 し て い ます 。 
この 場合 に は pw _ passwd フィールド に は アスタリスク ('*') か 、 " x " という 一文字 だけ が 含ま れ て おり 、 暗号 化 さ れ た パスワード は 、 一般 に は 見え ない / etc / shadow という ファイル に 入っ て い ます 。 
この モジュール で は 以下 の もの が 定義 さ れ て い ます : 
与え られ た UID に 対応 する パスワード データベース の エントリ を 返し ます 。 
与え られ た ユーザ 名 に 対応 する パスワード データベース の エントリ を 返し ます 。 
パスワード データベース の 全て の エントリ を 、 任意 の 順番 で 並べ た リスト を 返し ます 。 
この モジュール に 似 た 、 グループ データベース へ の アクセス を 提供 する モジュール 。 . 
この pyclbr は モジュール で 定義 さ れ た クラス 、 メソッド 、 および トップ レベル の 関数 について 、 限ら れ た 量 の 情報 を 定義 する の に 使わ れ ます 。 
この クラス によって 提供 さ れる 情報 は 、 伝統 的 な 3 ペイン 形式 の クラス ブラウザー を 実装 する の に 十分 な だけ の 量 に なり ます 。 
情報 は モジュール の イン ポート に よら ず 、 ソース コード から 抽出 し ます 。 この ため 、 この モジュール は 信用 でき ない ソース コード に対して 利用 し て も 安全 です 。 
この 制限 から 、 多く の 標準 モジュール や オプション の 拡張 モジュール を 含む 、 Python で 実装 さ れ て い ない モジュール に対して 利用 する こと は でき ませ ん 。 
モジュール を 読み込み 、 辞書 マッピング クラス を 返し 、 クラス 記述 オブジェクト に 名前 を つけ ます 。 
パラメタ module は モジュール 名 を 表す 文字 列 で なく て は なり ませ ん ; パッケージ 内 の モジュール 名 でも かまい ませ ん 。 
path パラメタ は シーケンス 型 で なく て は なら ず 、 モジュール の ソース コード が ある 場所 を 特定 する 際 に sys . path の 値 に 補完 する 形 で 使わ れ ます 。 
readmodule () に 似 て い ます が 、 返さ れる 辞書 は 、 クラス 名 から クラス 記述 オブジェクト へ の 対応 付け に 加え て 、 トップ レベル 関数 から 関数 記述 オブジェクト へ の 対応 付け も 行っ て い ます 。 
さらに 、 読み出し 対象 の モジュール が パッケージ の 場合 、 返さ れる 辞書 は キー '__ path __' を 持ち 、 その 値 は パッケージ の 検索 パス が 入っ た リスト に なり ます 。 
18 . 7 . 2 関数 記述 オブジェクト ( Function Descriptor 
py _ compile モジュール に は 、 ソース ファイル から バイト コード ファイル を 作る 関数 と 、 モジュール の ソース ファイル が スクリプト として 呼び出さ れる 時 に 使用 さ れる 関数 が 定義 さ れ て い ます 。 頻繁 に 必要 と なる わけ で は あり ませ ん が 、 共有 ライブラリ として モジュール を インストール する 場合 や 、 特に ソース コード の ある ディレクトリ に バイト コード の キャッシュ ファイル を 書き込む 権限 が ない ユーザ が いる とき に は 、 この 関数 は 役に立ち ます 。 
ファイル を コンパイル 中 に エラー が 発生 する と 、 PyCompileError 例外 が 送出 さ れ ます 。 
ソース ファイル を バイト コード に コンパイル し て 、 バイト コード の キャッシュ ファイル に 書き出し ます 。 
ソース コード は ファイル 名 file で 渡し ます 。 
バイト コード は ファイル cfile に 書き込ま れ 、 デフォルト で は file 
+ ' c '( 使用 し て いる インタープリタ で 最適 化 が 可能 なら ' o ') です 。 
もし dfile が 指定 さ れ たら 、 file の 代わり に ソース ファイル の 名前 として エラーメッセージ の 中 で 使わ れ ます 。 
doraise = True の 場合 、 コンパイル 中 に エラー が 発生 する と PyCompileError を 送出 し ます 。 
doraise = False の 場合 ( デフォルト ) は エラーメッセージ は sys . stderr に 出力 し 、 例外 は 送出 し ませ ん 。 
いくつ か 複数 の ソース ファイル を コンパイル し ます 。 
args で ( あるいは args で 指定 さ れ なかっ たら コマンド ライン で ) 指定 さ れ た ファイル を コンパイル し 、 でき た バイト コード を 通常 の 方法 で 保存 し ます 。 
この 関数 は ソース ファイル の 存在 する ディレクトリ を 検索 し ませ ん ; 指定 さ れ た ファイル を コンパイル する だけ です 。 
この モジュール が スクリプト として 実行 さ れる と 、 main () が コマンド ライン で 指定 さ れ た ファイル を 全て コンパイル し ます 。 
ディレクトリ ツリー 内 の Python ソース ファイル を 全て コンパイル する ライブラリ 。 . 
pydoc モジュール は 、 Python モジュール から 自動的 に ドキュメント を 生成 し ます 。 
pydoc を Python インタプリタ から は なく 、 オペレーティングシステム の コマンドプロンプト から 起動 し た 場合 でも 、 同じ テキスト 形式 の ドキュメント を 見る こと が でき ます 。 例えば 、 以下 を shell から 実行 する と 
モジュール の ドキュメント を 、 Unix の man コマンド の よう な 形式 で 表示 さ せる こと が でき ます 。 
pydoc の 引数 として 与える こと が できる の は 、 関数 名 ・ モジュール 名 ・ パッケージ 名 、 また 、 モジュール や パッケージ 内 の モジュール に 含ま れる クラス ・ メソッド ・ 関数 へ の ドット "." 形式 で の 参照 です 。 
pydoc - p 1234 と する と 、 HTTP サーバー を ポート 1234 に 起動 し ます 。 これ で 、 お 好き な Web browser を 使っ て http :// localhost : 1234 / から ドキュメント を 見る こと が でき ます 。 
pydoc で ドキュメント を 生成 する 場合 、 その 時点 で の 環境 と パス 情報 に 基づい て モジュール が どこ に ある の か 決定 さ れ ます 。 
その ため 、 pydoc spam を 実行 し た 場合 に つくら れる ドキュメント は 、 Python インタプリタ を 起動 し て " import spam " と 入力 し た とき に 読み込ま れる モジュール に対する ドキュメント に なり ます 。 コア モジュール の ドキュメント は http :// www . python . org / doc / current / lib / に ある と 仮定 さ れ て い ます 。 
これ は 、 ライブラリリファレンスマニュアル を 置い て いる 異なる URL か ローカル ディレクトリ を 環境 変数 PYTHONDOCS に 設定 する こと で オーバーライド する こと が でき ます 。 
この モジュール は BuildApplet と BuildApplication の ヘルパー モジュール として 主 に 利用 さ れ て い ます 。 
コンパイル 済み の Python コード に ' PYC ' リソース を 付加 でき ます 。 
この モジュール は Python インタプリタ の 初期 設定 の 読み込み や 書き込み を 行える よう に 
モジュール を 特 化 し た もの です 。 
quietconsole を 使う と 、 バッファ の stdio 出力 を 表示 せ ず に ( あるいは 、 EditPythonPrefs で 設定 さ れ て いれ ば 、 stdout ウィンドウ を 全く 表示 し ない で ) 保存 でき ます 。 保存 さ れる の は 、 stdin から 読み込み を 始める か 、 バッファリング を 止める か する まで の 間 で 、 その 時点 で 全て の 出力 は 今度 は ウィンドウ に 送ら れる こと に なり ます 。 
グラフィカルユーザインターフェース ( GUI ) プログラム で 、 クラッシュ 時 の 出力 を 表示 し たい 場合 に 便利 です 。 
この モジュール は RFC 1521 : `` MIME ( Multipurpose Internet MailExtensions ) Part One : Mechanisms for Specifying and Describing theFormat of Internet Message Bodies '' で 定義 さ れ て いる quoted - printable による 伝送 の エン コード および デコード を 行い ます 。 
quoted - printable 円 コーディング は 比較的 印字 不可能 な 文字 の 少ない データ の ため に 設計 さ れ て い ます ; 画像 ファイル を 送る とき の よう に 印字 不可能 な 文字 が たくさん ある 場合 に は 、 
モジュール で 利用 できる base 64 エン コーディング の ほう が より コンパクト に なり ます 。 
オプション 引数 header が 存在 し 、 かつ その 値 が 真 で ある 場合 、 アンダー スコア は 空白 文字 に デコード さ れ ます 。 
これ は RFC 1522 : `` MIME ( Multipurpose Internet Mail Extensions ) Part Two : Message Header Extensions for Non - ASCII Text '' で 記述 さ れ て いる ところ の `` Q ''- エン コード さ れ た ヘッダ を デコード する の に 使わ れ ます 。 
input . readline () が 空文字 列 を 返す まで 読み つづけ られ ます 。 
quotetabs は データ 中 に 埋め込ま れ た 空白 文字 や タブ を 変換 する か どう か 制御 する フラグ です ; この 値 が 真 なら 、 それら の 空白 を エン コード し ます 。 偽 なら エン コード せ ず そのまま に し て おき ます 。 
行末 の スペース や タブ は RFC 1521 に 従っ て 常に 変換 さ れる ので 注意 し て ください 。 
decode () に 似 て い ます が 、 文字 列 を 入力 として 受け取り 、 デコード さ れ た 文字 列 を 返し ます 。 
Python は 中心 と なる 乱数 生成 器 として Mersenne Twister を 使い ます 。 
これ は 53 ビット の 浮動 小数点 を 生成 し 、 周期 が 2 ** 19937 - 1 、 本体 は C で 実装 さ れ て い て 、 高速 で スレッドセーフ です 。 
Mersenne Twister は 、 現存 する 中 で 、 最も 大 規模 に テスト さ れ た 乱数 生成 器 の ひとつ です 。 
しかし 、 完全 に 決定 論 的 で ある ため 、 この 乱数 生成 器 は 全て の 目的 に 合致 し て いる わけ で は なく 、 暗号 化 の 目的 に は 全く 向い て い ませ ん 。 この モジュール で 提供 さ れ て いる 関数 は 、 実際 に は random . Random クラス の 隠蔽 さ れ た インスタンス の メソッド に バインド さ れ て い ます 。 
内部 状態 を 共有 し ない 生成 器 を 取得 する ため 、 自分 で Random の インスタンス を 生成 する こと が でき ます 。 
サブ クラス 化 の 例 として 、 random モジュール は WichmannHill クラス を 提供 し ます 。 この クラス は Python だけ で 書か れ た 代替 生成 器 を 実装 し て い ます 。 
この クラス は 、 乱数 生成 器 に Wichmann - Hill 法 を 使っ て い た 古い バージョン の Python から 得 られ た 結果 を 再現 する ため の 、 後方 互換 の 手段 に なり ます 。 バージョン 2 . 3 で 変更 さ れ た 仕様 : MersenneTwister を Wichmann - Hill の 代わり に 使う 
保守 関数 : 
基本 乱数 生成 器 を 初期 化 し ます 。 
オプション 引数 x は ハッシュ 可能 な 任意 の オブジェクト を とり 得 ます 。 
x が 省略 さ れる か None の 場合 、 現在 の システム 時間 が 使わ れ ます ; 現在 の システム 時間 は モジュール が 最初 に イン ポート さ れ た 時 に 乱数 生成 器 を 初期 化 する ため に も 使わ れ ます 。 
乱数 の 発生 源 を オペレーティングシステム が 提供 し て いる 場合 、 システム 時刻 の 代わり に その 発生 源 が 使わ れ ます ( 詳細 について は os . urandom () 関数 を 参照 )。 
乱数 生成 器 の 現在 の 内部 状態 を 記憶 し た オブジェクト を 返し ます 。 
この オブジェクト を setstate () に 渡し て 内部 状態 を 復帰 する こと が でき ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
内部 状態 を 、 現在 の 状態 から 、 非常 に 離れ て いる で あろ う 状態 に 変更 し ます 。 
n は 非負 の 整数 です 。 
これ は マルチスレッド の プログラム が 複数 の Random クラス の インスタンス と 結合 さ れ て いる 場合 に 非常 に 便利 です : setstate () や seed () は 全て の インスタンス を 同じ 内部 状態 に する の に 使う こと が でき 、 その後 jumpahead () を 使っ て 各 インスタンス の 内部 状態 を 引き離す こと が でき ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : n ステップ 先 の 特定 の 状態 に なる の で は なく 、 jumpahead ( n ) は 何 ステップ も 離れ て いる で あろ う 別 の 状態 に する 
整数 用 の 関数 : 
range ( start 、 stop 、 step ) の 要素 から ランダム に 選ば れ た 要素 を 返し ます 。 
この 関数 は choice ( range ( start , stop , step )) と 等価 です が 、 実際 に は range オブジェクト を 生成 し ませ ん 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
で ある よう な ランダム な 整数 N を 返し ます 。 
空 で ない シーケンス seq から ランダム に 要素 を 返し ます 。 + seq が 空 の とき は 、 IndexError が 送出 さ れ ます 。 
オプション の 引数 random は 、 値域 が [ 0 . 0 , 1 . 0 ) の ランダム な 浮動 小数点 数 を 返す よう な 引数 を 持た ない 関数 です ; 標準 で は 、 この 関数 は random () です 。 
かなり 小さい len ( x ) で あっ て も 、 x の 順列 は ほとんど の 乱数 生成 器 の 周期 より も 大きく なる ので 注意 し て ください ; この こと は 長い シーケンス に対して は ほとんど の 順列 は 生成 さ れ ない こと を 意味 し ます 。 
母集団 の シーケンス から 選ば れ た 長 さ k の 一意 な 要素 から なる リスト を 返し ます 。 
値 の 置換 を 行わ ない ランダムサンプリング に 用い られ ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
母集団 自体 を 変更 せ ず に 、 母集団 内 の 要素 を 含む 新た な リスト を 返し ます 。 
返さ れ た リスト は 選択 さ れ た 順 に 並ん で いる ので 、 この リスト の 部分 スライス も ランダム な サンプル に なり ます 。 これ により 、 くじ の 当選 者 を 1 等 賞 と 2 等 賞 ( の 部分 スライス ) に 分ける といった こと も 可能 です 。 
母集団 の 要素 は ハッシュ 可能 で なく て も 、 ユニーク で なく て も 、 かまい ませ ん 。 
母集団 が 繰り返し を 含む 場合 、 返さ れ た リスト の 各 要素 は サンプル から 選択 可能 な 要素 に なり ます 。 整数 の 並び から サンプル を 選ぶ に は 、 引数 に xrange を 使い ましょ う 。 
特に 、 巨大 な 母集団 から サンプル を 取る とき 、 速度 と 空間 効率 が 上がり ます 。 sample ( xrange ( 10000000 ), 60 ) 
以下 の 関数 は 特殊 な 実 数値 分布 を 生成 し ます 。 関数 パラメタ は 対応 する 分布 の 公式 において 、 数学 的 な 慣行 に従って 使わ れ て いる 変数 から 取ら れ た 名前 が つけ られ て い ます ; これら の 公式 の ほとんど は 多く の 統計 学 の テキスト に 載っ て い ます 。 
値域 [ 0 . 0 , 1 . 0 ) の 次 の ランダム な 浮動 小数点 数 を 返し ます 。 
ベータ 分布 です 。 
引数 の 満たす べき 条件 は 
alpha - 1 および 
beta - 1 です 。 0 から 1 の 値 を 返し ます 。 
指数 分布 です 。 lambd は 平均 に し たい 値 で 1 . 0 を 割っ た もの です 。 
( この パラメタ は `` lambda '' と 呼ぶ べき な の です が 、 Python の 予約 語 な ので 使え ませ ん 。 
) 返さ れる 値 の 範囲 は 0 から 正 の 無限 大 です 。 
ガンマ 分布 です 。 
( ガンマ 関数 で は あり ませ ん !) 引数 の 満たす べき 条件 は 
alpha 0 および 
beta 0 です 。 
ガウス 分布 です 。 mu は 平均 で あり 、 sigma は 標準 偏差 です 。 
この 関数 は 後で 定義 する 関数 normalvariate () より 少し だけ 高速 です 。 
対数 正規 分布 です 。 
この 分布 を 自然 対数 を 用い た 分布 に し た 場合 、 平均 mu で 標準 偏差 sigma の 正規 分布 に なる でしょ う 。 mu は 任意 の 値 を 取る こと が でき 、 sigma は ゼロ より 大きく なけれ ば なり ませ ん 。 
正規 分布 です 、 mu は 平均 で 、 sigma は 標準 偏差 です 。 
mu は 平均 の 角度 で 、 0 から 2 * pi まで の ラジアン で 表さ れ ます 。 kappa は 濃度 パラメタ で 、 ゼロ または それ 以上 で なけれ ば なり ませ ん 。 
kappa が ゼロ に 等しい 場合 、 この 分布 は 範囲 0 から 2 * pi の 一様 で ランダム な 角度 の 分布 に 退化 し ます 。 
パ レート 分布 です 。 alpha は 形状 パラメタ です 。 
ワイ ブル 分布 です 。 alpha は スケール パラメタ で 、 beta は 形状 パラメタ です 。 
代替 の 乱数 生成 器 
クラス WichmannHill 
乱数 生成 器 として Wichmann - Hill アルゴリズム を 実装 する クラス です 。 
Random クラス と 同じ メソッド 全て と 、 下 で 説明 する whseed メソッド を 持ち ます 。 
この クラス は 、 Python だけ で 実装 さ れ て いる ので 、 スレッドセーフ で は なく 、 呼び出し と 呼び出し の 間 に ロック が 必要 です 。 
また 、 周期 が 6 , 953 , 607 , 871 , 644 と 短く 、 独立 し た 2 つ の 乱数 列 が 重複 し ない よう に 注意 が 必要 です 。 
取り 得る 内部 状態 の 個数 が 2 ** 24 以下 に なる 場合 も あり ます 。 クラス SystemRandom 
オペレーティングシステム の 提供 する 発生 源 によって 乱数 を 生成 する os . urandom () 関数 を 使う クラス です 。 
getstate () と + setstate () メソッド が 呼び出さ れる と 、 例外 NotImplementedError が 送出 さ れ ます 。 
参考 : 
この モジュール で は 、 Perl で 見 られる もの と 同様 な 正規 表現 マッチング 操作 を 提供 し て い ます 。 
正規 表現 の パターン 文字 列 に は ヌルバイト を 含め られ ませ ん が 、 number 
記法 を 使え ば ヌルバイト を 指定 でき ます 。 
パターン と 検索 対象 文字 列 の 両方 について 、 8 ビット 文字 列 と Unicode 文字 列 を 同じ よう に 扱え ます 。 
re モジュール は いつ でも 利用 でき ます 。 正規 表現 で は 、 特殊 な 形式 を 表し たり 、 特殊 文字 の 持つ 特別 な 意味 を 呼び出さ ず に その 特殊 な 文字 を 使える よう に する ため に 、 バックス ラッシュ 文字 ("") を 使い ます 。 
通常 、 Python コード 中 で は 、 パターン を この raw string 記法 を 使っ て 表現 し ます 。 
Mastering Regular Expressions 詳説 正規 表現 
Jeffrey Friedl 著 、 O ' Reilly 刊 の 正規 表現 に関する 本 です 。 
この 本 の 第 2 版 で は Pyhon について は 触れ て い ませ ん が 、 良い 正規 表現 パターン の 書き方 を 非常 に くわしく 説明 し て い ます 。 
readline モジュール で は 、 補完 を し やすく し たり 、 ヒストリ ファイル を Python インタプリタ から 読み書き できる よう に する ため の いくつ か の 関数 を 定義 し て おり 、 これら は 直接 使う こと も 
モジュール を 介し て 使う こと も でき ます 。 readline モジュール で は 以下 の 関数 を 定義 し て い ます : 
readline 初期 化 ファイル の 行 を 一行 解釈 し て 実行 し ます 。 
行 編集 バッファ の 現在 の 内容 を 返し ます 。 
コマンド ライン に テキスト を 挿入 し ます 。 
readline 初期 化 ファイル を 解釈 し ます 。 標準 の ファイル 名 設定 は 最後 に 使わ れ た ファイル 名 です 。 
readline ヒストリ ファイル を 読み出し ます 。 標準 の ファイル 名 設定 は ~/. history です 。 
readline ヒストリ ファイル を 保存 し ます 。 標準 の ファイル 名 設定 は ~/. history です 。 
現在 の ヒストリ を クリア し ます 。 
( 注意 : インストール さ れ て いる GNU readline が サポート し て い ない 場合 、 この 関数 は 利用 でき ませ ん ) バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
ヒストリ ファイル に 必要 な 長 さ を 返し ます 。 
負 の 値 は ヒストリ ファイル の サイズ に 制限 が ない こと を 示し ます 。 
ヒストリ ファイル に 必要 な 長 さ を 設定 し ます 。 この 値 は write _ history _ file () が ヒストリ を 保存 する 際 に ファイル を 切り詰める ため に 使い ます 。 
負 の 値 は ヒストリ ファイル の サイズ を 制限 し ない こと を 示し ます 。 
現在 の ヒストリ 行 数 を 返し ます ( この 値 は get _ history _ length () で 取得 する 異なり ます 。 
get _ history _ length () は ヒストリ ファイル に 書き出さ れる 最大 行 数 を 返し ます )。 
現在 の ヒストリ から 、 index 番目 の 項目 を 返し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 remove _ history _ item 
指定 し た 位置 に ある ヒストリ を 、 指定 し た line で 置き換え ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
画面 の 表示 を 、 現在 の ヒストリ 内容 によって 更新 し ます 。 
startup _ hook 関数 を 設定 または 除去 し ます 。 
function が 指定 さ れ て いれ ば 、 新た な startup _ hook 関数 として 用い られ ます ; 省略 さ れる か None に なっ て いれ ば 、 現在 インストール さ れ て いる フック 関数 は 除去 さ れ ます 。 
startup _ hook 関数 は readline が 最初 の プロンプト を 出力 する 直前 に 引数 なし で 呼び出さ れ ます 。 
pre _ input _ hook 関数 を 設定 または 除去 し ます 。 
function が 指定 さ れ て いれ ば 、 新た な pre _ input _ hook 関数 として 用い られ ます ; 省略 さ れる か None に なっ て いれ ば 、 現在 インストール さ れ て いる フック 関数 は 除去 さ れ ます 。 
pre _ input _ hook 関数 は readline が 最初 の プロンプト を 出力 し た 後 で 、 かつ readline が 入力 さ れ た 文字 を 読み込み 始める 直前 に 引数 なし で 呼び出さ れ ます 。 
completer 関数 を 設定 または 除去 し ます 。 
function が 指定 さ れ て いれ ば 、 新た な completer 関数 として 用い られ ます ; 省略 さ れる か None に なっ て いれ ば 、 現在 インストール さ れ て いる completer 関数 は 除去 さ れ ます 。 
completer 関数 は 
function ( text , state ) の 形式 で 、 関数 が 文字 列 で ない 値 を 返す まで state を 0 , 1 , 2 , ..., に し て 呼び出し ます 。 
この 関数 は text から 始まる 文字 列 の 補完 結果 として 可能 性 の ある もの を 返さ なく て は なり ませ ん 。 
completer 関数 を 取得 し ます 。 
completer 関数 が 設定 さ れ て い なけれ ば None を 返し ます 。 
readline タブ 補完 スコープ の 先頭 の インデクス を 取得 し ます 。 
readline タブ 補完 スコープ の 末尾 の インデクス を 取得 し ます 。 
タブ 補完 の ため の readline 単語 区切り 文字 を 設定 し ます 。 
タブ 補完 の ため の readline 単語 区切り 文字 を 取得 し ます 。 
1 行 を ヒストリ バッファ に 追加 し 、 最後 に 打ち込ま れ た 行 の よう に し ます 。 
対話 的 プロンプト で Python 識別子 を 補完 する 機能 。 
クラス Repr 
組み込み クラス repr () に よく 似 た 関数 を 実装 する ため に 役に立つ 書式 化 サービス を 提供 し ます 。 過度 に 長い 表現 を 作り出さ ない よう に 、 異なる オブジェクト 型 に対する 大き さ の 制限 が 追加 さ れ ます 。 
これ は 下 で 説明 さ れる repr () 関数 を 提供 する ため に 使わ れる Repr の インスタンス です 。 
この オブジェクト の 属性 を 変更 する と 、 repr () と Python デバッガ が 使う サイズ 制限 に 影響 し ます 。 
これ は aRepr の repr () メソッド です 。 
同じ 名前 の 組み込み 関数 が 返す 文字 列 と 似 て い ます が 、 最大 サイズ に 制限 の ある 文字 列 を 返し ます 。 
下 に 述べる 関数 は 、 背後 に ある システム コール が 予期 せ ず 失敗 し た 場合 、 この エラー を 送出 する か も しれ ませ ん 。 
警告 : この ドキュメント は 、 rexec モジュール を 使用 し て いる 古い コード を 読む 際 の 参照 用 として 残さ れ て い ます 。 
警告 : rexec モジュール は 、 下記 の よう に 動作 する べく 設計 さ れ て はい ます が 、 注意深く 書か れ た コード なら 利用 でき て しまう かも しれ ない 、 既知 の 脆弱 性 が いくつ か あり ます 。 
従って 、 `` 製品 レベル '' の セキュリティ を 要する 状況 で は 、 rexec の 動作 を あて に する べき で は あり ませ ん 。 
製品 レベル の セキュリティ を 求める なら 、 サブ プロセス を 介し た 実行 や 、 あるいは 処理 する コード と データ の 両方 に対する 非常 に 注意深い `` 浄化 '' が 必要 でしょ う 。 
上記 の 代わり に 、 rexec の 既知 の 脆弱 性 に対する パッチ 当て の 手伝い も 歓迎 し ます 。 
注意 : RExec クラス は 、 プログラム コード による ディスク ファイル の 読み書き や TCP / IP ソケット の 利用 といった 、 安全 で ない 操作 の 実行 を 防ぐ こと が でき ます 。 
しかし 、 プログラム コード よる 非常 に 大量 の メモリ や 処理 時間 の 消費 に対して 防御 する こと は でき ませ ん 。 
クラス RExec 
RExec クラス の インスタンス を 返し ます 。 
その 代わり 、 あらかじめ RHooks クラス に 渡し て おい たり 、 コンス トラクタ で 生成 さ れ た RHooks インスタンス の メソッド を 呼び出し ます 。 
( 実際 に は 、 RExec オブジェクト は これら を 呼び出し ませ ん -- 呼び出し は 、 RExec オブジェクト の 一部 で ある モジュールローダオブジェクト によって 行わ れ ます 。 
例えば 、 RHooks オブジェクト を 置き換え て 、 ILU の よう な ある 種 の RPC メカニズム を 介する こと で 、 全て の ファイル システム の 要求 を どこ か に ある ファイル サーバ に 渡す こと が でき ます 。 
Grail の アプレットローダ は 、 アプレット を URL から ディレクトリ 上 に import する 際 に この 機構 を 使っ て い ます 。 もし verbose が true で あれ ば 、 追加 の デバッグ 出力 が 標準 出力 に 送ら れ ます 。 
制限 さ れ た 環境 で 実行 する コード も 、 やはり sys . exit () 関数 を 呼ぶ こと が できる こと を 知っ て おく こと は 大事 な こと です 。 
制限 さ れ た コード が インタプリタ から 抜け だす こと を 許さ ない ため に は 、 いつ でも 、 制限 さ れ た コード が 、 SystemExit 例外 を キャッチ する try / except 文 とともに 実行 する よう に 、 呼び出し を 防御 し ます 。 
制限 さ れ た 環境 から sys . exit () 関数 を 除去 する だけ で は 不十分 です - 制限 さ れ た コード は 、 やはり raise SystemExit を 使う こと が でき て しまい ます 。 
SystemExit を 取り除く こと も 、 合理 的 な オプション で は あり ませ ん ; いくつ か の ライブラリ コード は これ を 使っ て い ます し 、 これ が 利用 でき なく なる と 中断 し て しまう でしょ う 。 
Grail の ホームページ 
Grail は すべて Python で 書か れ た Web ブラウザ です 。 
これ は 、 rexec モジュール を 、 Python アプレット を サポート する の に 使っ て い て 、 この モジュール の 使用 例 として 使う こと が でき ます 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 rfc 822 モジュール を 使う より も 
パッケージ を 使う べき です 。 
この メッセージ は メッセージ ヘッダ 群 と メッセージ ボディ の 集まり から なり ます 。 
この モジュール で は また 、 ヘルパー クラス RFC 2822 アドレス 群 を 解釈 する ため の AddressList クラス を 定義 し て い ます 。 
RFC 2822 メッセージ 固有 の 構文 に関する 情報 は RFC を 参照 し て ください 。 
モジュール で は 、 多く の エンドユーザメイルプログラム によって 生成 さ れる メイル ボックス を 読み出す ため の クラス を 提供 し て い ます 。 
Message インスタンス は 入力 オブジェクト を パラメタ に 与え て インスタンス 化 し ます 。 
入力 オブジェクト の メソッド の うち 、 Message が 依存 する の は readline () だけ です ; 通常 の ファイル オブジェクト は 適格 です 。 
インスタンス 化 を 行う と 、 入力 オブジェクト から デリミタ 行 ( 通常 は 空 行 1 行 ) に 到達 する まで ヘッダ を 読み出し 、 それら を インスタンス 中 に 保持 し ます 。 
ヘッダ の 後 の メッセージ 本体 は 読み出し ませ ん 。 この クラス は readline () メソッド を サポート する 任意 の 入力 オブジェクト を 扱う こと が でき ます 。 
入力 オブジェクト が seek および tell できる 場合 、 rewindbody () メソッド が 動作 し ます 。 また 、 不正 な 行 データ を 入力 ストリーム に プッシュ バック でき ます 。 
入力 オブジェクト が seek でき ない 一方 で 、 入 力行 を プッシュ バック する unread () メソッド を 持っ て いる 場合 、 Message は 不正 な 行 データ に この プッシュ バック を 使い ます 。 
こうして 、 この クラス は バッファ さ れ て いる ストリーム から 来る メッセージ を 解釈 する の に 使う こと が でき ます 。 オプション の seekable 引数 は 、 lseek () システム コール が 動作 し ない と 分かる まで は tell () が バッファ さ れ た データ を 無視 する よう な 、 ある 種 の stdio ライブラリ で 回避 手段 として 提供 さ れ て い ます 。 
例えば 、 m [' From ']、 
m [' from ']、 および 
m [' FROM '] は 全て 同じ 結果 に なり ます 。 
クラス AddressList 
RFC 2833 アドレス を カンマ で 区切っ た もの として 解釈 さ れる 単一 の 文字 列 パラメタ を 使っ て 、 AddressList ヘルパー クラス を インスタンス 化 する こと が でき ます 。 
( パラメタ None は 空 の リスト を 表し ます 。 ) 
str 中 の バックス ラッシュ が 2 つ の バックス ラッシュ に 置き換え られ 、 二 重 引用 符 が バックス ラッシュ 付き の 二 重 引用 符 に 置き換え られ た 、 新た な 文字 列 を 返し ます 。 
str の 逆 クオート さ れ た 新た な 文字 列 を 返し ます 。 str が 二 重 引用 符 で 囲わ れ て い た 場合 、 二 重 引用 符 を 剥ぎ 取り ます 。 
同様 に 、 str が 三角 括弧 で 囲わ れ て い た 場合 に も 剥ぎ 取り ます 。 
parseaddr () の 逆 で 、 ( realname , email _ address ) 形式 の 2 要素 の タプル を とり 、 To : や Cc : ヘッダ に 適し た 文字 列 値 を 返し ます 。 
pair の 最初 の 要素 が 真 値 を とら ない 場合 、 二つ 目 の 要素 を そのまま 返し ます 。 
日付 の 解析 に 成功 し た 場合 、 parsedate () は time . mktime () に そのまま 渡す こと が できる よう な 9 要素 の タプル を 返し ます ; そう で ない 場合 に は None を 返し ます 。 
結果 の フィールド 6 、 7 、 および 8 は 有用 な 情報 で は あり ませ ん 。 
parsedate () と 同じ 機能 を 実現 し ます が 、 None または 10 要素 の タプル を 返し ます ; 最初 の 9 要素 は time . mktime () に 直接 渡す こと が できる よう な タプル で 、 10 番目 の 要素 は その 日 の タイム ゾーン における UTC ( グリニッチ 標準時 の 公式 名称 ) から の オフセット です 。 
( タイムゾーンオフセット の 符号 は 、 同じ タイム ゾーン における time . timezone 変数 の 符号 と 反転 し て い ます ; 後者 の 変数 が POSIX 標準 に 従っ て いる 一方 、 この モジュール は RFC 2822 に 従っ て いる から です 。 
) 入力 文字 列 が タイム ゾーン 情報 を 持た ない 場合 、 タプル の 最後 の 要素 は None に なり ます 。 
parsedata _ tz () が 返す 10 要素 の タプル を UTC タイム スタンプ に 変換 し ます 。 
タプル 内 の タイム ゾーン 要素 が None の 場合 、 地域 の 時刻 を 表し て いる もの と 家庭 し ます 。 
些細 な 欠陥 : この 関数 は まず 最初 の 8 要素 を 地域 における 時刻 として 変換 し 、 次に タイム ゾーン の 違い に対する 補償 を 行い ます ; これ により 、 夏時間 の 切り替え 日 前後 で ちょっとした エラー が 生じる かも しれ ませ ん 。 
通常 の 利用 に関して は 心配 あり ませ ん 。 
: モジュール 
網羅 的 な 電子 メイル 処理 パッケージ です ; rfc 822 モジュール を 代替 し ます 。 . 
エンド ユーザ の メイル プログラム によって 生成 さ れる 、 様々 な mailbox 形式 を 読み出す ため の クラス 群 。 
MIME エン コード さ れ た メッセージ を 処理 する rfc 822 . Message の サブ クラス 。 
この モジュール は もともと RFC 822 に 適合 し て い た ので 、 そういう 名前 に なっ て い ます 。 
その後 、 RFC 2822 が RFC 822 に対する 更新 として リリース さ れ まし た 。 
この モジュール は RFC 2822 適合 で あり 、 特に RFC 822 から の 構文 や 意味 付け に対する 変更 が なさ れ て い ます 。 
rgbimg モジュール を 使う と 、 Python プログラム から SGI imglib 画像 ファイル (. rgb として も 知ら れ て い ます ) に アクセス でき ます 。 
この モジュール は 完全 と は いえ ませ ん が 、 ちょっとした 用途 に は 十分 な 機能 を 持っ て いる ため 提供 さ れ て い ます 。 
現在 の ところ カラー マップ ファイル は サポート さ れ て い ませ ん 。 
注意 : この モジュール は デフォルト で は 32 ビット プラットフォーム 上 で しか 構築 さ れ ませ ん 。 他 の システム で は 適切 に 動作 し そう に ない から です 。 
この モジュール で は 以下 の 変数 と 関数 を 定義 し て い ます : 
ファイル 形式 が サポート さ れ て い ない 場合 など 、 全て の エラー に対して 送出 さ れる 例外 です 。 
指定 し た ファイル 上 の 画像 を 読み込ん で デコード し 、 Python 文字 列 に し て 返し ます 。 
文字 列 は 4 バイト RGB ピクセル 形式 です 。 左下 の ピクセル が 文字 列 の 先頭 に なり ます 。 
この 形式 は 、 例えば gl . lrectwrite () に 渡す といった 用途 に 適し て い ます 。 
data の RGBA データ を 画像 ファイル file に 書き込み ます 。 
x と y は 画像 の 大き さ を 表し ます 。 画像 を 1 バイト の z は グレイ スケール で 保存 する 場合 に は 1 、 3 バイト の RGB データ の 場合 は 3 です 、 4 バイト の RGBA データ の 場合 に は 4 に なり ます 。 
入力 データ は 常に ピクセル 当たり 4 バイト に せ ね ば なり ませ ん 。 gl . lrectread () の 返す 形式 と 同じ です 。 
画像 の スキャン ライン を 下端 から 上端 に 向かっ て 読み書き する ( flag は ゼロ 、 SGI GL 互換 の 方法 ) か 、 上端 から 下端 に 向かっ て 読み書き する ( flag は 1 、 X 互換 の 方法 ) か を 決める グローバル な フラグ です 。 
デフォルト 値 は ゼロ です 。 
rlcompleter モジュール で は Python の 識別子 や キーワード を 定義 し た 
モジュール 向け の 補完 関数 を 定義 し て い ます 。 
モジュール が Unix 依存 な ので この モジュール も Unix に 依存 し て い ます 。 rlcompleter モジュール は Completer クラス を 定義 し て い ます 。 
使用 例 : 
rlcompleter モジュール は Python の 対話 モード で 利用 する 為 に デザイン さ れ て い ます 。 
ユーザ は 以下 の 命令 を 初期 化 ファイル ( 環境 変数 PYTHONSTARTUP によって 定義 さ れ ます ) に 書き込む こと で 、 Tab キー による 補完 を 利用 でき ます : 
この モジュール で は 単一 の クラス 、 RobotFileParser を 提供 し ます 。 
この クラス は 、 特定 の ユーザ エージェント が robots . txt ファイル を 公開 し て いる Web サイト の ある URL を 取得 可能 か どう か の 質問 に 答え ます 。 
robots . txt ファイル の 構造 に関する 詳細 は http :// www . robotstxt . org / wc / norobots . html を 参照 し て ください 。 
クラス RobotFileParser 
robots . txt ファイル を 参照 する ため の URL を 設定 し ます 。 
robots . txt URL を 読み出し 、 パーザ に 入力 し ます 。 
引数 lines の 内容 を 解釈 し ます 。 
解釈 さ れ た robots . txt ファイル 中 に 記載 さ れ た 規則 に 従っ た とき 、 useragent が url を 取得 し て も よい 場合 に は True を 返し ます 。 
robots . txt ファイル を 最後 に 取得 し た 時刻 を 返し ます 。 
この 値 は 、 定期 的 に 新た な robots . txt を チェック する 必要 が ある 、 長時間 動作 する Web スパイダープログラム を 実装 する 際 に 便利 です 。 
robots . txt ファイル を 最後 に 取得 し た 時刻 を 現在 の 時刻 に 設定 し ます 。 
以下 に RobotFileParser クラス の 利用 例 を 示し ます 。 
sched モジュール は 一般 的 な 目的 の ため の イベントスケジューラ を 実装 する クラス を 定義 し ます : クラス scheduler 
scheduler クラス は イベント を スケジュール する ため の 一般 的 な インターフェース を 定義 し ます 。 
それ は `` 外部 世界 '' を 実際 に 扱う ため の 2 つ の 関数 を 必要 と し ます -- timefunc は 引数 なし で 呼出し 可能 で ある べき で 、 そして 数 ( それ は `` time '' です , どんな 単位 でも かまい ませ ん ) を 返す よう に し ます 。 
delayfunc は 1 つ の 引数 ( timefunc の 出力 と 互換 ) で 呼出し 可能 で あり 、 その 時間 だけ 遅延 し なけれ ば いけ ませ ん 。 
各々 の イベント が 、 マルチスレッドアプリケーション の 中 で 他 の スレッド が 実行 する 機会 の 許可 を 実行 し た 後 に 、 delayfunc は 引数 0 で 呼ば れる でしょ う 。 
この モジュール で は 、 ほとんど の オペレーティングシステム で 利用 可能 な select () および poll () 関数 へ の アクセス 機構 を 提供 し ます 。 
Windows の 上 で は ソケット に対して しか 動作 し ない ので 注意 し て ください ; その他 の オペレーティングシステム で は 、 他 の ファイル 形式 で も ( 特に Unix で は パイプ に も ) 動作 し ます 。 
通常 の ファイル に対して 適用 し 、 最後 に ファイル を 読み出し た 時 から 内容 が 増え て いる か を 決定 する ため に 使う こと は でき ませ ん 。 この モジュール で は 以下 の 内容 を 定義 し て い ます : 
エラー が 発生 し た とき に 送出 さ れる 例外 です 。 
エラー に 付属 する 値 は 、 errno から とっ た エラーコード を 表す 数値 と その エラーコード に 対応 する 文字 列 から なる ペア で 、 C 関数 の perror () が 出力 する もの と 同様 です 。 
( 全て の オペレーティングシステム で サポート さ れ て いる わけ で は あり ませ ん 。 
) ポーリング オブジェクト を 返し ます 。 この オブジェクト は ファイル 記述 子 を 登録 し たり 登録 解除 し たり する こと が でき 、 ファイル 記述 子 に対する I / O イベント 発生 を ポーリング する こと が でき ます ; ポーリング オブジェクト が 提供 し て いる メソッド について は 下記 の 7 . 3 . 1 節 を 参照 し て ください 。 
Unix の select () システム コール に対する 直接的 な インタフェース です 。 
最初 の 3 つ の 引数 は ` 待機 可能 な オブジェクト ' から なる シーケンス です : ファイル 記述 子 を 表す 整数 値 、 または 引数 を 持た ず 、 整数 を 返す メソッド fileno () を 持つ オブジェクト です 。 
待機 可能 な オブジェクト の 3 つ の シーケンス は それぞれ 入力 、 出力 、 そして ` 例外 状態 ' に 対応 し ます 。 
いずれ か に 空 の シーケンス を 指定 し て も かまい ませ ん が 、 3 つ 全て を 空 の シーケンス に し て も よい か どう か は プラットフォーム に 依存 し ます ( Unix で は 動作 し 、 Windows で は 動作 し ない こと が 知ら れ て い ます )。 
オプション の timeout 引数 に は タイム アウト まで の 秒 数 を 浮動 小数点 数 型 で 指定 し ます 。 
timeout 引数 が 省略 さ れ た 場合 、 関数 は 少なくとも 一つ の ファイル 記述 子 が 何らかの 準備 完了 状態 に なる まで ブロック し ます 。 
タイム アウト 値 ゼロ は 、 ポーリング を 行い ブロック し ない こと を 示し ます 。 戻り 値 は 準備 完了 状態 の オブジェクト から なる 3 つ の リスト です : 従っ て この リスト は それぞれ 関数 の 最初 の 3 つ の 引数 の サブ セット に なり ます 。 
ファイル 記述 子 の いずれ も 準備 完了 に なら ない まま タイム アウト し た 場合 、 3 つ の 空 の リスト が 返さ れ ます 。 
シーケンス の 中 に 含める こと の できる オブジェクト は Python ファイル オブジェクト ( すなわち sys . stdin , あるいは open () や os . popen () が 返す オブジェクト )、 socket . socket () が 返す ソケット オブジェクト です 。 
wrapper クラス を 自分 で 定義 する こと も でき ます 。 この 場合 、 適切 な ( 単なる 乱数 で は なく 本当 の ファイル 記述 子 を 返す ) fileno () メソッド を 持つ 必要 が あり ます 
注意 : select は Windows の ファイル オブジェクト を 受理 し ませ ん が 、 ソケット は 受理 し ます 
sets モジュール は 、 ユニーク な 要素 の 順序 なし コレクション を 構築 し 、 操作 する ため の クラス を 提供 し ます 。 
帰属 関係 の テスト や シーケンス から 重複 を 取り除い たり 、 積 集合 ・ 和 集合 ・ 差 集合 ・ 対称 差 集合 の よう な 標準 的 な 数学 操作 など を 含み ます 。 他 の コレクション の よう に 、 
を サポート し ます 。 
順序 なし コレクション は 、 挿入 の 順序 や 要素 位置 を 記録 し ませ ん 。 
従って 、 インデックス ・ スライス ・ 他 の シーケンス 的 な 振舞い を サポート し ませ ん 。 ほとんど の 集合 の アプリケーション は 、 __ hash __() を 除い て すべて の 集合 の メソッド を 提供 する Set クラス を 使用 し ます 。 
ハッシュ を 要求 する 高度 な アプリケーション について は 、 ImmutableSet クラス が __ hash __() メソッド を 加え て いる が 、 集合 の 内容 を 変更 する メソッド は 省略 さ れ ます 。 
Set と ImmutableSet は 、 何 が 集合 ( isinstance ( obj , BaseSet )) で ある か 決める の に 役立つ 抽象 クラス BaseSet から 派生 し ます 。 集合 クラス は 辞書 を 使用 し て 実装 さ れ ます 。 
その 結果 、 集合 は リスト や 辞書 の よう な 変更 可能 な 要素 を 含む こと が でき ませ ん 。 しかし それら は 、 タプル や ImmutableSet の インスタンス の よう な 不変 コレクション を 含む こと が でき ます 。 
集合 の 集合 の 実装 中 の 便宜 について は 、 内部 集合 が 自動的 に 変更 不可能 な 形式 に 変換 さ れ ます 。 
例えば 、 Set ([ Set ([' dog '])]) は Set ([ ImmutableSet ([' dog '])]) へ 変換 さ れ ます 。 クラス Set 
新しい 空 の Set オブジェクト を 構築 し ます 。 
もし オプション iterable が 与え られ たら 、 イタレータ から 得 られ た 要素 を 備え た 集合 として 更新 し ます 。 
iterable 中 の 全て の 要素 は 、 変更 不可能 で ある か 、 または 5 . 14 . 3 で 記述 さ れ た プロトコル を 使っ て 変更 不可能 な もの に 変換 可能 で ある べき です 。 クラス ImmutableSet 
新しい 空 の ImmutableSet オブジェクト を 構築 し ます 。 
もし オプション iterable が 与え られ たら 、 イタレータ から 得 られ た 要素 を 備え た 集合 として 更新 し ます 。 
iterable 中 の 全て の 要素 は 、 変更 不可能 で ある か 、 または 5 . 14 . 3 で 記述 さ れ た プロトコル を 使っ て 変更 不可能 な もの に 変換 可能 で ある べき です 。 ImmutableSet オブジェクト は __ hash __() メソッド を 備え て いる ので 、 集合 要素 または 辞書 キー として 使用 する こと が でき ます 。 
ImmutableSet オブジェクト は 要素 を 加え たり 取り除い たり する メソッド を 持っ て い ませ ん 。 
したがって 、 コンス トラクタ が 呼ば れ た とき 要素 は すべて 知ら れ て い なけれ ば なり ませ ん 。 
この モジュール で は SGML ( Standard Generalized Mark - up Language : 汎用 マーク アップ 言語 標準 ) で 書式 化 さ れ た テキストファイル を 解析 する ため の 基礎 として 働く SGMLParser クラス を 定義 し て い ます 。 
実際 に は 、 この クラス は 完全 な SGML パーザ を 提供 し て いる わけ で は あり ませ ん -- この クラス は HTML で 用い られ て いる よう な SGML だけ を 解析 し 、 モジュール 自体 も 
モジュール の 基礎 に する ため だけ に 存在 し て い ます 。 
XHTML を サポート し 、 少し 異なっ た インタフェース を 提供 し て いる もう 一つ の HTML パーザ は 、 
モジュール で 使う こと が でき ます 。 
クラス SGMLParser 
SGMLParser クラス は 引数 無し で インスタンス 化 さ れ ます 。 この パーザ は 以下 の 構成 を 認識 する よう に ハード コード さ れ て い ます : 
" tag attr =" value " ..." と "/ tag " で 表さ れる タグ の 開始 部 と 終了 部 。 
"# name ;" 形式 を とる 文字 の 数値 参照 。 
" name ;" 形式 を とる エンティティ 参照 。 
"!- text -" 形式 を とる SGML コメント 。 
末尾 の "" と その 直前 に ある "-" の 間 に は スペース 、 タブ 、 改行 を 入れる こと が でき ます 。 
例外 が 以下 の よう に 定義 さ れ ます : 
SGMLParser クラス で 構文 解析 中 に エラー に 出逢う と この 例外 が 発生 し ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
SGMLParser インスタンス は 以下 の メソッド を 持っ て い ます : 
この メソッド は インスタンス 生成 時 に 非 明示 的 に 呼び出さ れ ます 。 
タグ の 処理 を 停止 し ます 。 
以降 の 入力 を リテラル 入力 ( CDATA ) として 扱い ます 。 
( この 機能 は HTML タグ PAINTEXT を 実装 できる よう に する ため だけ に 提供 さ れ て い ます ) 
リテラル モード ( CDATA モード ) に 移行 し ます 。 
テキスト を パーザ に 入力 し ます 。 
入力 は 完全 な エレメント から 成り立つ 場合 に 限り 処理 さ れ ます ; 不完全 な データ は 追加 の データ が 入力 さ れる か 、 close () が 呼び出さ れる まで バッファ に 蓄積 さ れ ます 。 
バッファ に 蓄積 さ れ て いる 全て の データ について 、 直後 に ファイル 終了 記号 が 来 た 時 の よう に し て 強制 的 に 処理 し ます 。 
この メソッド は 導出 クラス で 再 定義 し て 、 入力 の 終了 時 に 追加 の 処理 行う よう 定義 する こと が でき ます が 、 この メソッド の 再 定義 さ れ た バージョン で は 常に close () を 呼び出さ なけれ ば なり ませ ん 。 
もっとも 最近 開か れ た 開始 タグ の テキスト を 返し ます 。 
通常 、 構造 化 さ れ た データ の 処理 を する 上 で この メソッド は 必要 あり ませ ん が 、 `` 広く 知ら れ て いる ( as deployed )'' HTML を 扱っ たり 、 入力 を 最小限 の 変更 で 再 生成 ( 属性 間 の 空白 を そのまま に する 、 など ) し たり する 場合 に 便利 な こと が あり ます 。 
この メソッド は start _ tag () か do _ tag () の どちら か の メソッド が 定義 さ れ て いる 開始 タグ を 処理 する ため に 呼び出さ れ ます 。 
name は 小文字 に 変換 さ れ 、 value 内 の 二 重 引用 符 と バックス ラッシュ も 変換 さ れ ます 。 例えば 、 タグ A HREF =" http :// www . cwi . nl /" を 処理 する 場合 、 この メソッド は " unknown _ starttag (' a ', [(' href ', ' http :// www . cwi . nl /')])" として 呼び出さ れ ます 。 
基底 クラス の 実装 で は 、 単に method を 単一 の 引数 attributes と共に 呼び出し ます 。 
この メソッド は end _ tag () メソッド の 定義 さ れ て いる 終了 タグ を 処理 する ため に 呼び出さ れ ます 。 
tag 引数 は タグ の 名前 で 、 小文字 に 変換 さ れ て おり 、 method 引数 は 終了 タグ の 意味 解釈 を サポート する ため に 使わ れる バインド さ れ た メソッド です 。 
end _ tag () メソッド が 終了 エレメント として 定義 さ れ て い ない 場合 、 ハンドラ は 一切 呼び出さ れ ませ ん 。 
基底 クラス の 実装 で は 単に method を 呼び出し ます 。 
この メソッド は 何らかの データ を 処理 する ため に 呼び出さ れ ます 。 
この メソッド は "# ref ;" 形式 の 文字 参照 ( character reference ) を 処理 する ため に 呼び出さ れ ます 。 
基底 クラス の 実装 で は 、 ref は 0 - 255 の 範囲 の 10 進数 で なけれ ば なり ませ ん 。 
この メソッド は 文字 を ASCII に 変換 し 、 その 文字 を 引数 として handle _ data () を 呼び出し ます 。 
ref が 無効 な 値 か 、 範囲 を 超え た 値 で ある 場合 、 エラー を 処理 する ため に unknown _ charref ( ref ) が 呼び出さ れ ます 。 
名前 づけ さ れ た 文字 エンティティ を サポート する ため に は この メソッド を サブ クラス で 上書き し なけれ ば なり ませ ん 。 
この メソッド は ref を 一般 エンティティ 参照 として 、 " ref ;" 形式 の エンティティ 参照 を 処理 する ため に 呼び出さ れ ます 。 
この メソッド は 、 エンティティ 名 を 対応 する 変換 文字 に 対応付け て いる インスタンス ( または クラス ) 変数 で ある entitydefs 中 で ref を 探し ます 。 
変換 が 見つかっ た 場合 、 変換 さ れ た 文字 を 引数 に し て handle _ data () を 呼び出し ます ; そう で ない 場合 、 unknown _ entityref ( ref ) を 呼び出し ます 。 標準 で は entitydefs は amp ;、 apos 、 gt ;、 lt ;、 および quot ; の 変換 を 定義 し て い ます 。 
comment 引数 は 文字 列 で 、 "!-" and "-" デリミタ 間 の 、 デリミタ 自体 を 除い た テキスト が 収め られ て い ます 。 
例えば 、 コメント "!- text -" が ある と 、 この メソッド は 引数 ' text ' で 呼び出さ れ ます 。 
基底 クラス の 実装 で は 何 も 行い ませ ん 。 
実際 に は 、 DOCTYPE は HTML だけ に 見 られる 宣言 です が 、 パーザ は 宣言 間 の 相違 ( や 誤っ た 宣言 ) を 判別 し ませ ん 。 
DOCTYPE の 内部 サブ セット 宣言 は サポート さ れ て い ませ ん 。 
decl パラメタ は !... 記述 内 の 宣言 内容 全体 に なり ます 。 
基底 クラス の 実装 で は 何 も 行い ませ ん 。 
個 の メソッド は 対応 する 開始 エレメント の ない 終了 タグ が 発見 さ れ た 時 に 呼び出さ れ ます 。 
未知 の 開始 タグ を 処理 する ため に 呼び出さ れる メソッド です 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
This method is called to process an unknown end tag . 未知 の 終了 タグ を 処理 する ため に 呼び出さ れる メソッド です 。 
この メソッド は 解決 不能 な 文字 参照 数値 を 処理 する ため に 呼び出さ れ ます 。 
標準 で 何 が 処理 可能 か は handle _ charref () を 参照 し て ください 。 
導出 クラス で 上書き する ため の メソッド です ; 基底 クラス の 実装 で は 何 も 行い ませ ん 。 
未知 の エンティティ 参照 を 処理 する ため に 呼び出さ れる メソッド です 。 
上 に 挙げ た メソッド を 上書き し たり 拡張 し たり する の と は 別に 、 導出 クラス で は 以下 の 形式 の メソッド を 定義 し て 、 特定 の タグ を 処理 する こと も でき ます 。 
入力 ストリーム 中 の タグ 名 は 大 小文字 の 区別 に 依存 し ませ ん ; メソッド 名 中 の tag は 小文字 で なけれ ば なり ませ ん : 
この メソッド は 開始 タグ tag を 処理 する ため に 呼び出さ れ ます 。 
do _ tag () より も 高い 優先 順位 が あり ます 。 
attributes 引数 は 上 の handle _ starttag () で 記述 さ れ て いる の と 同じ 意味 です 。 
この メソッド は 対応 する 終了 タグ の ない 開始 タグ tag を 処理 する ため に 呼び出さ れ ます 。 
attributes 引数 は 上 の handle _ starttag () で 記述 さ れ て いる の と 同じ 意味 です 。 
この メソッド は 終了 タグ tag を 処理 する ため に 呼び出さ れ ます 。 
パーザ は 開始 さ れ た エレメント の うち 、 終了 タグ が まだ 見つかっ て い ない もの の スタック を 維持 し て いる ので 注意 し て ください 。 
start _ tag () で 処理 さ れ た タグ だけ が スタック に プッシュ さ れ ます 。 
are pushed on this stack . Definition of an それら の タグ に対する end _ tag () メソッド の 定義 は オプション です 。 
do _ tag () や unknown _ tag () で 処理 さ れる タグ について は 、 end _ tag () を 定義 し て は いけ ませ ん ; 定義 さ れ て い て も 使わ れる こと は あり ませ ん 。 ある タグ に対して start _ tag 
および do _ tag () メソッド の 両方 が 存在 する 場合 、 start _ tag () が 優先 さ れ ます 。 
この モジュール は 、 
SHA - 1 は オリジナル の SHA ハッシュ アルゴリズム を 改善 し た バージョン です 。 md 5 
モジュール と 同じ よう に 使用 し ます 。 
: sha オブジェクト を 生成 する ため に new () を 使い 、 update () メソッド を 使っ て 、 この オブジェクト に 任意 の 文字 列 を 入力 し 、 それ まで に 入力 し た 文字 列 全体 の digest を いつ でも 調べる こと が でき ます 。 
SHA - 1 の ダイジェスト は MD 5 の 128 bit と は 異なり 、 160 bit です 。 
新た な sha オブジェクト を 返し ます 。 
もし string が 存在 する なら 、 update ( string ) を 呼び出し ます 。 
以下 の 値 は モジュール の 中 で 定数 として 与え られ て おり 、 new () で 返さ れる sha オブジェクト の 属性 として も 与え られ ます : 
ハッシュ 関数 に 入力 さ れる ブロック の サイズ 。 
この サイズ は 常に 1 です 。 
この サイズ は 、 任意 の 文字 列 を ハッシュ できる よう に する ため に 使わ れ ます 。 
digest _ size 返さ れる ダイジェスト 値 を バイト 数 で 表し た 長 さ 。 
常に 20 です 。 
sha オブジェクト に は md 5 オブジェクト と 同じ メソッド が あり ます 。 
文字 列 arg を 入力 として sha オブジェクト を 更新 し ます 。 
この メソッド を 繰り返し 呼び出す ( 操作 は 、 それぞれ の 呼び出し 時 の 引数 を 結合 し た データ を 引数 として 一 回 の 呼び出す 操作 と 同等 に なり ます 。 
つまり 、 m . update ( a ); m . update ( b ) は m . update ( a + b ) と 同等 です 。 
これ まで update () メソッド で 与え て き た 文字 列 の ダイジェスト を 返し ます 。 
戻り 値 は 20 バイト の 文字 列 で 、 null バイト を 含む 非 ASCII 文字 が 入っ て いる かも しれ ませ ん 。 
digits () と 似 て い ます が 、 ダイジェスト は 長 さ 40 の 文字 列 に なり 、 16 進 表記 数字 しか 含み ませ ん 。 
電子 メール や その他 の バイナリ を 受け付け ない 環境 で 安全 に 値 を やりとり する ため に 使う こと が でき ます 。 
sha オブジェクト の コピー (`` クローン '') を 返し ます 。 
参考 : セキュアハッシュスタンダード 
セキュアハッシュアルゴリズム は NIST の ドキュメント FIPS PUB 180 - 2 で 定義 さ れ て い ます 。 
セキュアハッシュスタンダード 
, 2002 年 8 月 出版 。 
暗号 ツール キット ( セキュアハッシュ ) 
NIST から はら れ て いる セキュアハッシュ に関する さまざま な 情報 へ の リンク 
`` シェルフ ( shelf , 棚 )'' は 辞書 に 似 た 永続 性 を 持つ オブジェクト です 。 
`` dbm '' データベース と の 違い は 、 シェルフ の 値 ( キー で は あり ませ ん !) は 実質 上 どんな Python オブジェクト に も -- 
モジュール が 扱える なら 何でも -- できる という こと です 。 
これ に は ほとんど の クラス インスタンス 、 再帰 的 な データ 型 、 沢山 の 共有 さ れ た サブ オブジェクト を 含む オブジェクト が 含ま れ ます 。 
キー は 通常 の 文字 列 です 。 
永続 的 な 辞書 を 開き ます 。 
指定 さ れ た filename は 、 根底 に ある データベース の 基本 ファイル 名 と なり ます 。 
副作用 として 、 filename に は 拡張 子 が つけ られる 場合 が あり 、 ひとつ 以上 の ファイル が 生成 さ れる 可能 性 も あり ます 。 
デフォルト で は 、 根底 に ある データベース ファイル は 読み書き 可能 な よう に 開か れ ます 。 
オプション の flag パラメタ は anydbm . open における flag パラメタ と 同様 に 解釈 さ れ ます 。 
デフォルト で は 、 値 を 整列 化 する 際 に は バージョン 0 の pickle 化 が 用い られ ます 。 
pickle 化 プロトコル の バージョン は protocol パラメタ で 指定 する こと が でき ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : protocol パラメタ が 追加 さ れ まし た 。 
binary パラメタ は 撤廃 さ れ 、 以前 の バージョン と の 互換 性 の ため に のみ 提供 さ れ て い ます 
デフォルト で は 、 永続 的 な 辞書 の 可変 エントリ に対する 変更 を おこなっ て も 、 自動的 に ファイル に は 書き 戻さ れ ませ ん 。 
オプション の writeback パラメタ が True に 設定 さ れ て いれ ば 、 アクセス さ れ た すべて の エントリ は メモリ 上 に キャッシュ さ れ 、 ファイル を 閉じる 際 に 書き 戻さ れ ます ; この 機能 は 永続 的 な 辞書 上 の 可変 の 要素 に対する 変更 を 容易 に し ます が 、 多数 の エントリ が アクセス さ れ た 場合 、 膨大 な 量 の メモリ が キャッシュ の ため に 消費 さ れ 、 アクセス さ れ た 全て の エントリ を 書き 戻す ( アクセス さ れ た エントリ が 可変 で ある か 、 あるいは 実際 に 変更 さ れ た か を 決定 する 方法 は 存在 し ない の です ) ため に 、 ファイル を 閉じる 操作 を 非常 に 低速 に し て しまい ます 。 
shelve オブジェクト は 辞書 が サポート する 全て の メソッド を サポート し て い ます 。 
これ により 、 辞書 ベース の スクリプト から 永続 的 な 記憶 媒体 を 必要 と する スクリプト に 容易 に 移行 できる よう に なり ます 。 
3 . 17 . 1 制限 事項 
5 . 20 . 2 shlex オブジェクト 
5 . 20 . 1 モジュール の 内容 
shutil モジュール は ファイル や ファイル の 収集 に関する 多く の 高 レベル な 操作 方法 を 提供 し ます 。 
特に ファイル の コピー や 削除 の ため の 関数 が 用意 さ れ て い ます 。 
注意 : MacOS において は リソース フォーク や 他 の メタデータ は 取り扱う こと が でき ませ ん 。 
つまり 、 ファイル を コピー する 際 に これら の リソース は 失わ れ たり 、 ファイル タイプ や 作成 者 コード は 正しく 認識 さ れ ない こと を 意味 し ます 。 
src で 指定 さ れ た ファイル 内容 を dst で 指定 さ れ た ファイル へ と コピー し ます 。 
キャラクタ や ブロック デバイス 、 パイプ 等 の 特別 な ファイル は この 関数 で は コピー でき ませ ん 。 src と dst に は パス 名 を 文字 列 で 与え られ ます 。 
ファイル 形式 の オブジェクト fsrc の 内容 を fdst へ コピー し ます 。 
整数 値 length は バッファ サイズ を 表し ます 。 
特に 負 の length は チャンク 内 の ソース データ を 繰り返し 操作 する こと なく コピー し ます 。 つまり 標準 で は データ は 制御 不能 な メモリ 消費 を 避ける ため に チャンク 内 に 読み込ま れ ます 。 
src から dst へ パー ミッション を コピー し ます 。 
ファイル 内容 や 所有 者 、 グループ は 影響 を 受け ませ ん 。 src と dst に は 文字 列 として パス 名 を 与え られ ます 。 
src から dst へ パー ミッション 最終 アクセス 時間 、 最終 更新 時間 を コピー し ます 。 
ファイル 内容 や 所有 者 、 グループ は 影響 を 受け ませ ん 。 src と dst に は 文字 列 として パス 名 を 与え られ ます 。 
ファイル src を ファイル または ディレクトリ dist へ コピー し ます 。 
もし 、 dst が ディレクトリ で あれ ば ファイル 名 は src と 同じ もの が 指定 さ れ た ディレクトリ 内 に 作成 ( または 上書き ) さ れ ます 。 パー ミッション は コピー さ れ ます 。 
src と dst に は 文字 列 として パス 名 を 与え られ ます 。 
copy () と 類似 し て い ます が 、 最終 アクセス 時間 や 最終 更新 時間 も 同様 に コピー さ れ ます 。 
これ は Unix コマンド の cp - p と 同様 の 働き を し ます 。 
src を 起点 として ディレクトリ ツリー 全体 を 再帰 的 に コピー し ます 。 
dst で 指定 さ れ た ディレクトリ は 既存 の もの で は なく 新規 に 作成 さ れる もの で なく て は なり ませ ん 。 
個々 の ファイル は copy 2 () によって コピー さ れ ます 。 
この 関数 の ソース コード は 道具 として より も 使用 例 として 捉え られる べき でしょ う 。 バージョン 2 . 3 で 変更 さ れ た 仕様 : コピー 中 に エラー が 発生 し た 場合 、 メッセージ を 出力 する の で は なく 例外 を 引き起こす よう に 変更 。 
ディレクトリ ツリー 全体 を 削除 し ます 。 
もし ignore _ errors が 真 で あれ ば 削除 に 失敗 し た こと による エラー は 無視 さ れ 、 偽 が 与え られ たり 省略 さ れ た 場合 は これら の エラー は onerror で 与え られ た ハンドラ を 呼び出し て 処理 さ れ 、 これ が 省略 さ れ た 場合 は 例外 を 引き起こし ます 。 onerror が 与え られ た 場合 、 それ は 3 つ の パラメータ function , path および excinfo を 受け入れ て 呼び出し 可能 の もの で なく て は なり ませ ん 。 
最初 の パラメータ function は 例外 を 引き起こす 関数 で os . listdir ()、 os . remove () または os . rmdir () が 用い られる でしょ う 。 
二 番目 の パラメータ は path は function へ 渡ら せる パス 名 です 。 
三 番目 の パラメータ excinfo は sys . exc _ info () で 返さ れる よう な 例外 情報 に なる でしょ う 。 
onerror が 引き起こす 例外 は キャッチ でき ませ ん 。 
再帰 的 に ファイル や ディレクトリ を 別 の 場所 へ 移動 し ます 。 
もし 移動 先 が 現在 の ファイル システム 上 で あれ ば 単純 に 名前 を 変更 し ます 。 そう で ない 場合 は コピー を 行い 、 その後 コピー 元 は 削除 さ れ ます 。 
この 例外 は 複数 ファイル の 操作 を 行っ て いる とき に 生じる 例外 を まとめ た もの です 。 
copytree に対して は 例外 の 引数 は 3 つ の タプル ( srcname , dstname , exception ) から なる リスト です 。 
6 . 26 . 1 使用 例 
この モジュール で は Python で シグナル ハンドラ を 使う ため の 機構 を 提供 し ます 。 
クリティカルセクション から 一時 的 に シグナル を `` ブロック '' する こと は でき ませ ん 。 この 機能 を サポート し ない Unix 系 システム も 存在 する ため です 。 
Python の シグナル ハンドラ は Python の ユーザ が 望む 限り 非同期 で 呼び出さ れ ます が 、 呼び出さ れる の は Python インタプリタ の `` 原子 的 な ( atomic )'' 命令 実行 単位 の 間 です 。 
従って 、 ( 巨大 な サイズ の テキスト に対する 正規 表現 の 一致 検索 の よう な ) 純粋 に C 言語 の レベル で 実現 さ れ て いる 時間 の かかる 処理 中 に 到着 し た シグナル は 、 不定 期間 遅延 する 可能 性 が あり ます 。 
シグナル が I / O 操作 中 に 到着 する と 、 シグナル ハンドラ が 処理 を 返し た 後 に I / O 操作 が 例外 を 送出 する 可能 性 が あり ます 。 これ は 背後 に ある Unix システム が 割り込み システム コール に どういう 意味 付け を し て いる か に 依存 し ます 。 
C 言語 の シグナル ハンドラ は 常に 処理 を 返す ので 、 SIGFPE や SIGSEGV の よう な 同期 エラー の 捕捉 は ほとんど 意味 が あり ませ ん 。 
Python は 標準 で ごく 小数 の シグナル ハンドラ を インストール し て い ます : SIGPIPE は 無視 さ れ ます ( 従っ て 、 パイプ や ソケット に対する 書き込み で 生じ た エラー は 通常 の Python 例外 として 報告 さ れ ます ) SIGINT は KeyboardInterrupt 例外 に 変換 さ れ ます 。 
これら は どれ も 上書き する こと が でき ます 。 
シグナル と スレッド の 両方 を 同じ プログラム で 使用 する 場合 に は いくつ か 注意 が 必要 です 。 
シグナル と スレッド を 同時に 利用 する 上 で 基本 的 に 注意 す べき こと は : 常に signal () 命令 は 主 スレッド ( main thread ) の 処理 中 で 実行 する という こと です 。 
どの スレッド も alarm ()、 getsignal ()、 あるいは pause () を 実行 する こと が でき ます ; しか し 、 主 スレッド だけ が 新た な シグナル ハンドラ を 設定 する こと が でき 、 従って シグナル を 受け取る こと が できる の は 主 スレッド だけ です ( これ は 、 背後 の スレッド 実装 が 個々 の スレッド に対する シグナル 送信 を サポート し て いる か に 関わら ず 、 Python signal モジュール が 強制 し て いる 仕様 です )。 
従って 、 シグナル を スレッド 間 通信 の 手段 として 使う こと は でき ませ ん 。 
代わり に ロック 機構 を 使っ て ください 。 
以下 に signal モジュール で 定義 さ れ て いる 変数 を 示し ます : 
二つ ある 標準 シグナル 処理 オプション の うち の 一つ です ; 単に シグナル に対する 標準 の 関数 を 実行 し ます 。 
例えば 、 ほとんど の システム で は 、 SIGQUIT に対する 標準 の 動作 は コアダンプ と 終了 で 、 SIGCLD に対する 標準 の 動作 は 単に シグナル の 無視 です 。 
もう 一つ の 標準 シグナル 処理 オプション で 、 単に 受け取っ た シグナル を 無視 し ます 。 
全て の シグナル 番号 は シンボル 定義 さ れ て い ます 。 
例えば 、 ハングアップシグナル は signal . SIGHUP で 定義 さ れ て い ます ; 変数 名 は C 言語 の プログラム で 使わ れ て いる の と 同じ 名前 で 、 signal . h に あり ます 。 ` signal ()' に関する Unix マニュアル ページ で は 、 システム で 定義 さ れ て いる シグナル を 列挙 し て い ます ( ある システム で は リスト は 
signal ( 2 ) に 、 別 の システム で は 
signal ( 7 ) に 列挙 さ れ て い ます )。 全て の システム で 同じ シグナル 名 の セット を 定義 し て いる わけ で は ない ので 注意 し て ください ; この モジュール で は 、 システム で 定義 さ れ て いる シグナル 名 だけ を 定義 し て い ます 。 
最も 大きい シグナル 番号 に 1 を 足し た 値 です 。 
signal モジュール で は 以下 の 関数 を 定義 し て い ます : 
time が ゼロ で ない 値 の 場合 、 この 関数 は time 秒 後 頃 に SIGALRM を プロセス に 送る よう に 要求 し ます 。 それ 以前 に スケジュール し た アラーム は キャンセル さ れ ます ( 常に 一つ の アラーム しか スケジュール でき ませ ん )。 
この 場合 、 戻り 値 は 以前 に 設定 さ れ た アラームシグナル が 通知 さ れる まで あと 何 秒 だっ た か を 示す 値 です 。 time が ゼロ の 場合 、 アラーム は 一切 スケジュール さ れ ず 、 現在 スケジュール さ れ て いる アラーム が キャンセル さ れ ます 。 
戻り 値 は 以前 に スケジュール さ れ た アラーム が 通知 さ れる 予定 時刻 まで の 残り 時間 です 。 
戻り 値 が ゼロ の 場合 、 現在 アラーム が スケジュール さ れ て い ない こと を 示し ます 。 
( Unix マニュアル ページ 
alarm ( 2 ) を 参照 し て ください )。 利用 可能 : Unix 。 
シグナル signalnum に対する 現在 の シグナル ハンドラ を 返し ます 。 戻り 値 は 呼び出し 可能 な Python オブジェクト か 、 signal . SIG _ IGN 、 signal . SIG _ DFL 、 および None といった 特殊 な 値 の いずれ か です 。 
ここ で signal . SIG _ IGN は 以前 その シグナル が 無視 さ れ て い た こと を 示し 、 signal . SIG _ DFL は 以前 その シグナル の 標準 の 処理 方法 が 使わ れ て い た こと を 示し 、 None は シグナル ハンドラ が まだ Python によって インストール さ れ て い ない こと を 示し ます 。 
シグナル を 受け取る まで プロセス を 一時 停止 し ます ; その後 、 適切 な ハンドラ が 呼び出さ れ ます 。 
戻り 値 は あり ませ ん 。 
Windows で は 利用 でき ませ ん 。 
signal ( 2 ) を 参照 し て ください 。 ) 
シグナル signalnum に対する ハンドラ を 関数 handler に し ます 。 handler は 二つ の 引数 ( 下記 参照 ) を 取る 呼び出し 可能 な Python オブジェクト に する か 、 signal . SIG _ IGN あるいは signal . SIG _ DFL といった 特殊 な 値 に する こと が でき ます 。 
以前 に 使わ れ て い た シグナル ハンドラ が 返さ れ ます ( 上記 の getsignal () の 記述 を 参照 し て ください )。 
( Unix マニュアル ページ signal ( 2 ) を 参照 し て ください 。 
) 複数 スレッド の 使用 が 有効 な 場合 、 この 関数 は 主 スレッド から のみ 呼び出す こと が でき ます ; 主 スレッド 以外 の スレッド で 呼び出そ う と する と 、 例外 ValueError が 送出 さ れ ます 。 handler は 二つ の 引数 : シグナル 番号 、 および 現在 の スタック フレーム ( None または フレーム オブジェクト ; フレーム オブジェクト について の 記述 は リファレンス マニュアル の 標準 型 の 階層 か 、 
モジュール の 属性 の 説明 を 参照 し て ください )、 とともに 呼び出さ れ ます 。 
前部 と 後部 から なる 最大 で 四つ まで の ディレクトリ を 作成 する こと から 始め ます 。 
前部 に は 、 sys . prefix と sys . exec _ prefix を 使用 し ます 。 
空 の 前部 は 省略 さ れ ます 。 
後部 に は 、 ( Macintosh や Windows で は ) 空文字 列 を 使用 し 、 ( Unix で は ) 最初 に lib / python 2 . 4 / site - packages を 使っ て から lib / site - python を 使い ます 。 
別個 の 前部 - 後部 の 組み合わせ の それぞれ に対して 、 それ が 存在 する ディレクトリ を 参照 し て いる か どう か を 調べ 、 もし そう なら ば sys . path へ 追加 し ます 。 
そして 、 設定 ファイル を 新しく 追加 さ れ た パス から も 検索 し ます 。 
パス 設定 ファイル は package . pth という 形式 の 名前 を もつ ファイル で 、 上 の 4 つ の ディレクトリ の ひとつ に あり ます 。 
その 内容 は sys . path に 追加 さ れる 追加 項目 ( 一 行 に 一つ ) です 。 
存在 し ない 項目 は sys . path へ は 決して 追加 さ れ ませ ん が 、 項目 が ( ファイル で は なく ) ディレクトリ を 参照 し て いる か どう か は チェック さ れ ませ ん 。 
項目 が sys . path へ 二 回 以上 追加 さ れる こと は あり ませ ん 。 
空 行 と # で 始まる 行 は 読み 飛ばさ れ ます 。 
import で 始まる 行 は 実行 さ れ ます 。 
例えば 、 sys . prefix と sys . exec _ prefix が / usr / local に 設定 さ れ て いる と 仮定 し ます 。 
その とき Python 2 . 4 ライブラリ は / usr / local / lib / python 2 . 4 に インストール さ れ て い ます ( ここ で 、 sys . version の 最初 の 三 文字 だけ が インストール パス 名 を 作る ため に 使わ れ ます )。 
ここ に は サブ ディレクトリ / usr / local / lib / python 2 . 4 / site - packages が あり 、 その 中 に 三つ の サブ ディレクトリ foo 、 bar および spam と 二つ の パス 設定 ファイル foo . pth と bar . pth を もつ と 仮定 し ます 。 
foo . pth に は 以下 の もの が 記載 さ れ て いる と 想定 し て ください : 
また 、 bar . pth に は : 
という 名前 の モジュール を イン ポート しよう し ます 。 その モジュール は 任意 の サイト 固有 の カスタマイゼーション を 行う こと が でき ます 。 
の イン ポート は その とき でも 試み られ ます 。 
この モジュール で は 、 SMTP サーバ を 実装 する ため の クラス を いくつ か 提供 し て い ます 。 
一つ は 何 も 行わ ない 、 オーバライド できる 汎用 の サーバ で 、 その他 の 二つ で は 特定 の メール 送信 ストラテジ を 提供 し て い ます 。 
smtplib モジュール は 、 SMTP または ESMTP の リスナー デーモン を 備え た 任意 の インターネット 上 の ホスト に メイル を 送る ため に 使用 する こと が できる SMTP クライアント・セッション・オブジェクト を 定義 し ます 。 
SMTP および ESMTP オペレーション の 詳細 は 、 RFC 821 ( Simple Mail Transfer Protocol ) や RFC 1869 ( SMTP Service Extensions ) を 調べ て ください 。 
クラス SMTP 
SMTP インスタンス は SMTP コネクション を カプセル 化 し 、 SMTP と ESMTP の 命令 を サポート を し ます 。 
オプション で ある host と port を 与え た 場合 は 、 SMTP クラス の インスタンス が 作成 さ れる と 同時に 、 connect () メソッド を 呼び出し 初期 化 さ れ ます 。 
また 、 ホスト から 応答 が 無い 場合 は 、 SMTPConnectError が 上げ られ ます 。 普通 に 使う 場合 は 、 初期 化 と 接続 を 行っ て から 、 sendmail () と quit () メソッド を 呼び ます 。 
使用 例 は 先 の 方 で 記載 し て い ます 。 
この モジュール の 例外 に は 次 の もの が あり ます : 
この モジュール の 例外 クラス の ベース クラス です 。 
この 例外 は サーバ が 突然 コネクション を 切断 する か 、 もしくは SMTP インスタンス を 生成 する 前 に コネクション を 張ろ う と し た 場合 に 上げ られ ます 。 
SMTP の エラーコード を 含ん だ 例外 の クラス です 。 これら の 例外 は SMTP サーバ が エラーコード を 返す とき に 生成 さ れ ます 。 
エラーコード は smtp _ code 属性 に 格納 さ れ ます 。 また 、 smtp _ error 属性 に は エラーメッセージ が 格納 さ れ ます 。 
送信 者 の アドレス が 弾か れ た とき に 上げ られる 例外 です 。 
全て の SMTPResponseException 例外 に 、 SMTP サーバ が 弾い た ` sender ' アドレス の 文字 列 が セット さ れ ます 。 
全て の 受取 人 アドレス が 弾か れ た とき に 上げ られる 例外 です 。 
各 受取 人 の エラー は 属性 recipients によって アクセス 可能 で 、 SMTP . sendmail () が 返す 辞書 と 同じ 並び の 辞書 に なっ て い ます 。 
SMTP サーバ が 、 メッセージ の データ を 受け入れる こと を 拒絶 し た 時 に 上げ られる 例外 です 。 
サーバ へ の 接続 時 に エラー が 発生 し た 時 に 上げ られる 例外 です 。 
サーバー が " HELO " メッセージ を 弾い た 時 に 上げ られる 例外 です 。 
SMTP の プロトコル 定義 です 。 
この ドキュメント で は SMTP の モデル 、 操作 手順 、 プロトコル の 詳細 について カバー し て い ます 。 
SMTP に対する ESMTP 拡張 の 定義 です 。 
この ドキュメント で は 、 新た な 命令 による SMTP の 拡張 、 サーバ によって 提供 さ れる 命令 を 動的 に 発見 する 機能 の サポート 、 および いくつ か の 追加 命令 定義 について 記述 し て い ます 。 
sndhdr モジュール に は 、 ファイル に 保存 さ れ た サウンド データ の 形式 を 識別 する の に 便利 な 関数 が 定義 さ れ て い ます 。 
どんな 形式 の サウンド データ が ファイル に 保存 さ れ て いる の か 識別 可能 な 場合 、 これら の 関数 は ( type 、 sampling _ rate 、 channels 、 frames 、 bits _ per _ sample ) の タプル を 返し ます 。 
type は データ の 形式 を 示す 文字 列 で 、 ' aifc '、' aiff '、' au '、' hcom '、' sndr '、' sndt '、' voc '、' wav '、' 8 svx '、' sb '、' ub '、' ul ' の うち の 一つ です 。 
sampling _ rate は 実際 の サンプリング レート 値 で 、 未知 の 場合 や 読み取る こと が 出来 なかっ た 場合 は 0 です 。 
同様 に 、 channels は チャンネル 数 で 、 識別 でき ない 場合 や 読み取る こと が 出来 なかっ た 場合 は 0 です 。 
frames は フレーム 数 で 、 識別 でき ない 場合 は - 1 です 。 
タプル の 最後 の 要素 bits _ per _ sample は サンプル サイズ を 示す ビット 数 です が 、 A - LAW 
なら ' A '、 u - LAW 
なら ' U ' です 。 
whathdr () を 使っ て 、 ファイル filename に 保存 さ れ た サウンド データ の 形式 を 識別 し ます 。 
識別 可能 なら 上記 の タプル を 返し 、 識別 でき ない 場合 は None を 返し ます 。 
ファイル の ヘッダ 情報 を もと に 、 保存 さ れ た サウンド データ の 形式 を 識別 し ます 。 
ファイル 名 は filename で 渡さ れ ます 。 
識別 可能 なら 上記 の タプル を 返し 、 識別 でき ない 場合 は None を 返し ます 。 
Unix Programmer ' s Manual , Supplementary Documents 1 ( PS 1 : 7 章 PS 1 : 8 章 )。 
ソケット の 詳細 について は 、 各 プラットフォーム の ソケット 関連 システム コール に関する ドキュメント ( Unix で は マニュアル ページ 、 Windows で は WinSock ( または WinSock 2 ) 仕様 書 ) も 参照 し て ください 。 
各種 ソケット 関連 の システム コール は 、 socket () 関数 で 生成 する ソケット オブジェクト の メソッド として 実装 さ れ て い ます 。 
後方 互換 性 の ため 、 socket モジュール の メソッド で は sin 6 _ flowinfo と sin 6 _ scope _ id を 省略 する 事 が でき ます が 、 scopeid を 省略 する と スコープ を 持っ た IPv 6 アドレス の 処理 で 問題 が 発生 する 場合 が あり ます 。 
IPv 4 / v 6 ソケット の host 部 に ホスト 名 を 指定 する と 、 処理 結果 が 一定 で は ない 場合 が あり ます 。 これ は Python は DNS から 取得 し た アドレス の うち 最初 の アドレス を 使用 する ので 、 DNS の 処理 や ホスト の 設定 によって 異なる IPv 4 / 6 アドレス を 取得 する 場合 が ある ため です 。 
常に 同じ 結果 が 必要 で あれ ば 、 host に 数値 の アドレス を 指定 し て ください 。 エラー 時 に は 例外 が 発生 し ます 。 
socket モジュール で は 、 以下 の 定数 と 関数 を 提供 し て い ます 。 
この 例外 は 、 ソケット 関連 の エラー が 発生 し た 場合 に 送出 さ れ ます 。 例外 の 値 は 障害 の 内容 を 示す 文字 列 か 、 または os . error と 同様 な ( errno , string ) の ペア と なり ます 。 
オペレーティングシステム で 定義 さ れ て いる エラーコード について は 
を 参照 し て ください 。 
この 例外 は 、 C API の gethostbyname _ ex () や gethostbyaddr () など で 、 h _ errno の よう な アドレス 関連 の エラー が 発生 し た 場合 に 送出 さ れ ます 。 例外 の 値 は ( h _ errno , string ) の ペア で 、 ライブラリ の 呼び出し 結果 を 返し ます 。 
string は C 関数 hstrerror () で 取得 し た 、 h _ errno の 意味 を 示す 文字 列 です 。 
error の 値 は 、 この モジュール で 定義 さ れる EAI _* 定数 の 何れ か と なり ます 。 
この 例外 は 、 あらかじめ settimeout () を 呼び出し て タイム アウト を 有効 に し て ある ソケット で タイム アウト が 生じ た 際 に 送出 さ れ ます 。 
例外 に 付属 する 値 は 文字 列 で 、 その 内容 は 現状 で は 常に `` timed out '' と なり ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
アドレス ( および プロトコル ) ファミリ を 示す 定数 で 、 socket () の 最初 の 引数 に 指定 する こと が でき ます 。 
AF _ UNIX ファミリ を サポート し ない プラットフォーム で は 、 AF _ UNIX は 未定義 と なり ます 。 
ソケット タイプ を 示す 定数 で 、 socket () の 2 番目 の 引数 に 指定 する こと が でき ます 。 
Unix の ソケット ・ IP プロトコル の ドキュメント で 定義 さ れ て いる 各種 定数 。 ソケット オブジェクト の setsockopt () や getsockopt () で 使用 し ます 。 
ほとんど の シンボル は Unix の ヘッダ ファイル に 従っ て い ます 。 一部 の シンボル に は 、 デフォルト 値 を 定義 し て あり ます 。 
現在 の プラットフォーム で IPv 6 が サポート さ れ て いる か 否 か を 示す 真偽 値 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
host と port に 空文字 列 か None を 指定 する と C API に NULL を 渡せ ます 。 
getattrinfo () 関数 は 以下 の 構造 を とる 5 要素 の タプル を 返し ます : 
モジュール など の ソース を 参考 に し て ください 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
name の 完全 修飾 ドメイン 名 を 返し ます 。 
name が 空 または 省略 さ れ た 場合 、 ローカル ホスト を 指定 し た と みなし ます 。 
完全 修飾 ドメイン 名 の 取得 に は まず gethostbyaddr () で チェック し 、 次に 可能 で あれ ば エイリアス を 調べ 、 名前 に ピリオド を 含む 最初 の 名前 を 値 として 返し ます 。 
完全 修飾 ドメイン 名 を 取得 でき ない 場合 、 ホスト 名 を 返し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
ホスト 名 を ' 100 . 50 . 200 . 5 ' の よう な IPv 4 形式 の アドレス に 変換 し ます 。 
ホスト 名 として IPv 4 アドレス を 指定 し た 場合 、 その 値 は 変換 せ ず に そのまま 返り ます 。 
Python インタープリタ を 現在 実行 中 の マシン の ホスト 名 を 示す 文字 列 を 取得 し ます 。 
ソケット アドレス sockaddr から 、 ( host , port ) の タプル を 取得 し ます 。 flags の 設定 に従い 、 host は 完全 修飾 ドメイン 名 または 数値 形式 アドレス と なり ます 。 
同様 に 、 port は 文字 列 の ポート 名 または 数値 の ポート 番号 と なり ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
' icmp ' の よう な インターネット プロトコル 名 を 、 socket () の 第 三 引数 として 指定 する 事 が できる 定数 に 変換 し ます 。 
これ は 主 に ソケット を `` raw '' モード ( SOCK _ RAW ) で オープン する 場合 に は 必要 です が 、 通常 の ソケット モード で は 第 三 引数 に 0 を 指定 する か 省略 すれ ば 正しい プロトコル が 自動的 に 選択 さ れ ます 。 
インターネット サービス 名 と プロトコル から 、 その サービス の ポート 番号 を 取得 し ます 。 
省略 可能 な プロトコル 名 として 、 ' tcp ' か ' udp ' の どちら か を 指定 する こと が でき ます 。 指定 が なけれ ば どちら の プロトコル に も マッチ し ます 。 
インターネット ポート 番号 と プロトコル 名 から 、 サービス 名 を 取得 し ます 。 
アドレス ファミリ 、 ソケット タイプ 、 プロトコル 番号 を 指定 し て ソケット を 作成 し ます 。 
アドレス ファミリ に は AF _ INET ( デフォルト 値 ) ・ AF _ INET 6 ・ AF _ UNIX を 指定 する こと が でき ます 。 
ソケット タイプ に は SOCK _ STREAM ( デフォルト 値 ) ・ SOCK _ DGRAM ・ または 他 の " SOCK _" 定数 の 何れ か を 指定 し ます 。 
プロトコル 番号 は 通常 省略 する か 、 または 0 を 指定 し ます 。 
ソケット sock による SSL 接続 を 初期 化 し ます 。 
keyfile に は 、 PEM フォーマット の プライベートキーファイル 名 を 指定 し ます 。 certfile に は 、 PEM フォーマット の 認証 チェーン ファイル 名 を 指定 し ます 。 
処理 が 成功 する と 、 新しい SSLObject が 返り ます 。 
警告 : 証明 書 の 認証 は 全く 行い ませ ん 。 
指定 さ れ た アドレス ファミリ 、 ソケット タイプ 、 プロトコル 番号 から 、 接続 さ れ た ソケット の ペア を 作成 し ます 。 
アドレス ファミリ 、 ソケット タイプ 、 プロトコル 番号 は socket () 関数 と 同様 に 指定 し ます 。 デフォルト の アドレス ファミリ は 、 プラットフォーム で 定義 さ れ て いれ ば AF _ UNIX 、 そう で なけれ ば AF _ INET が 使わ れ ます 。 
利用 可能 : Unix . バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
既存 の ファイル ディスクリプタ ( ファイル オブジェクト の fileno () で 返る 整数 ) から 、 ソケット オブジェクト を 構築 し ます 。 
アドレス ファミリ と プロトコル 番号 は socket () と 同様 に 指定 し ます 。 
ファイル ディスクリプタ は ソケット を 指し て い なけれ ば なり ませ ん が 、 実際 に ソケット で ある か どう か の チェック は 行っ て い ませ ん 。 この ため 、 ソケット 以外 の ファイル ディスクリプタ を 指定 する と その後 の 処理 が 失敗 する 場合 が あり ます 。 
この 関数 が 必要 な 事 は あまり あり ませ ん が 、 Unix の inet デーモン の よう に ソケット を 標準 入力 や 標準 出力 として 使用 する プログラム で 使わ れ ます 。 
この 関数 で 使用 する ソケット は 、 ブロッキング モード と 想定 し て い ます 。 利用 可能 : Unix 
32 ビット 整数 の バイト オーダ を 、 ネットワークバイトオーダ から ホストバイトオーダ に 変換 し ます 。 
ホストバイトオーダ と ネットワークバイトオーダ が 一致 する マシン で は 、 この 関数 は 何 も し ませ ん 。 それ 以外 の 場合 は 4 バイト の スワップ を 行い ます 。 
16 ビット 整数 の バイト オーダ を 、 ネットワークバイトオーダ から ホストバイトオーダ に 変換 し ます 。 
ホストバイトオーダ と ネットワークバイトオーダ が 一致 する マシン で は 、 この 関数 は 何 も し ませ ん 。 それ 以外 の 場合 は 2 バイト の スワップ を 行い ます 。 
32 ビット 整数 の バイト オーダ を 、 ホストバイトオーダ から ネットワークバイトオーダ に 変換 し ます 。 
16 ビット 整数 の バイト オーダ を 、 ホストバイトオーダ から ネットワークバイトオーダ に 変換 し ます 。 
ドット 記法 による IPv 4 アドレス (' 123 . 45 . 67 . 89 ' など ) を 32 ビット に パック し た バイナリ 形式 に 変換 し 、 長 さ 4 の 文字 列 として 返し ます 。 
この 関数 が 返す 値 は 、 標準 C ライブラリ の struct in _ addr 型 を 使用 する 関数 に 渡す 事 が でき ます 。 
IPv 4 アドレス 文字 列 が 不正 で あれ ば 、 socket . error が 発生 し ます 。 
この チェック は 、 この 関数 で 使用 し て いる C の 実装 inet _ aton () で 行わ れ ます 。 inet _ aton () は 、 IPv 6 を サポート し ませ ん 。 
IPv 4 / v 6 の デュアル スタック を サポート する 場合 は getnameinfo () を 使用 し ます 。 inet _ ntoa 
32 ビット に パック し た バイナリ 形式 の IPv 4 アドレス を 、 ドット 記法 による 文字 列 (' 123 . 45 . 67 . 89 ' など ) に 変換 し ます 。 
この 関数 が 返す 値 は 、 標準 C ライブラリ の struct in _ addr 型 を 使用 する 関数 に 渡す 事 が でき ます 。 この 関数 に 渡す 文字 列 の 長 さ が 4 バイト 以外 で あれ ば 、 socket . error が 発生 し ます 。 
inet _ ntoa () は 、 IPv 6 を サポート し ませ ん 。 
IPv 4 / v 6 の デュアル スタック を サポート する 場合 は getnameinfo () を 使用 し ます 。 inet _ pton 
利用 可能 : Unix ( サポート し て い ない プラットフォーム も あり ます ) バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
パック し た IP アドレス ( 数 文字 の 文字 列 ) を 、 ' 7 . 10 . 0 . 5 ' や ' 5 aef : 2 b :: 8 ' など の 標準 的 な 、 アドレス ファミリ 固有 の 文字 列 形式 に 変換 し ます 。 
inet _ ntop () で エラー と なる と 、 socket . error が 発生 し ます 。 利用 可能 : Unix ( サポート し て い ない プラットフォーム も あり ます ) バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
新規 に 生成 さ れ た ソケット オブジェクト の 、 デフォルト の タイム アウト 値 を 浮動 小数点 形式 の 秒 数 で 返し ます 。 
ソケット オブジェクト の 型 を 示す 型 オブジェクト 。 
type ( socket (...)) と 同じ です 。 
ネットワーク サーバ の 開発 を 省力 化 する ため の クラス 群 。 
stat モジュール で は 、 os . stat ()、 os . lstat () および os . fstat () ( 存在 すれ ば ) の 返す 内容 を 解釈 する ため の 定数 や 関数 を 定義 し て い ます 。 
stat ()、 fstat ()、 および lstat () の 関数 呼び出し について の 完全 な 記述 は システム の ドキュメント を 参照 し て ください 。 
stat モジュール で は 、 特殊 な ファイル 型 を 判別 する ため の 以下 の 関数 を 定義 し て い ます : 
ファイル の モード が ディレクトリ の 場合 に ゼロ で ない 値 を 返し ます 。 
ファイル の モード が キャラクタ 型 の 特殊 デバイス ファイル の 場合 に ゼロ で ない 値 を 返し ます 。 
ファイル の モード が ブロック 型 の 特殊 デバイス ファイル の 場合 に ゼロ で ない 値 を 返し ます 。 
ファイル の モード が 通常 ファイル の 場合 に ゼロ で ない 値 を 返し ます 。 
ファイル の モード が FIFO ( 名前 つき パイプ ) の 場合 に ゼロ で ない 値 を 返し ます 。 
ファイル の モード が シンボリックリンク の 場合 に ゼロ で ない 値 を 返し ます 。 
ファイル の モード が ソケット の 場合 に ゼロ で ない 値 を 返し ます 。 
より 一般 的 な ファイル の モード を 操作 する ため の 二つ の 関数 が 定義 さ れ て い ます : 
os . chmod () で 設定 する こと の できる 一部 の ファイル モード -- すなわち 、 ファイル の 許可 ビット ( permission bits ) に 加え 、 ( サポート さ れ て いる システム で は ) スティッキービット ( sticky bit )、 実行 グループ ID 設定 ( set - group - id ) および 実行 ユーザ ID 設定 ( set - user - id ) ビット -- を 返し ます 。 
ファイル の 形式 を 記述 し て いる ファイル モード の 一部 ( 上記 の S _ IS *() 関数 で 使わ れ ます ) を 返し ます 。 
os . path で 扱う こと の でき ない ファイル の 情報 を 調べる 際 に も 便利 です 。 
I ノード の 保護 モード 。 
I ノード 番号 。 
I ノード が 存在 する デバイス 。 
該当 する I ノード へ の リンク 数 。 
ファイル の 所持 者 の ユーザ ID 。 
ファイル の 所持 者 の グループ ID 。 
通常 ファイル で は バイト サイズ ; いくつ か の 特殊 ファイル で は 処理 待ち の データ 量 。 
最後 に アクセス し た 時刻 。 
最後 に 変更 さ れ た 時刻 。 
オペレーティングシステム から 返さ れる `` ctime ''。 
ある OS ( Unix など ) で は 最後 に メタデータ が 更新 さ れ た 時間 と なり 、 別 の OS ( Windows など ) で は 作成 時間 と なり ます ( 詳細 について は 各 プラットフォーム の ドキュメント を 参照 し て ください )。 
`` ファイルサイズ '' の 解釈 は ファイル の 型 によって 異なり ます 。 
通常 の ファイル の 場合 、 サイズ は ファイル の 大き さ を バイト で 表し た もの です 。 
他 の キャラクタ 型 および ブロック 型 デバイス における サイズフィー る の 意味 は さらに 異なっ て い て 、 背後 の システム コール の 実装 に より ます 。 
リリース 2 . 2 で 撤廃 さ れ まし た 。 キャッシュ を 使わ ず に 
. stat () を 直接 使っ て ください ; キャッシュ は それ を 使う アプリケーション に 非常 に 高い レベル の 脆弱 性 を もたらし 、 キャッシュ 管理 の サポート を 追加 する こと で アプリケーション の ソース コード を 難解 に し て しまい ます 。 
statcache モジュール は os . stat () を 最後 に 呼び出し た 際 の 値 を 記憶 する こと による 最適 化 機能 を 提供 し ます 。 
statcache モジュール で は 以下 の 関数 を 定義 し て い ます : 
この モジュール の 主要 な エントリ ポイント です 。 
os . stat () と 同じ です が 、 将来 同じ 呼び出し が 行わ れ た とき の 為 に 結果 を 記憶 し て おき ます 。 
その他 の 関数 は キャッシュ や その 一部 を 消去 する ため に 用い られ ます 。 
キャッシュ を 消去 し ます : これ まで の 全て の stat () 呼び出し による 結果 を 忘却 し ます 。 
stat ( path ) の キャッシュ が 存在 すれ ば 、 それ を 忘却 し ます 。 
prefix で 始まる path に対する stat ( path ) の 結果 を すべて 忘却 し ます 。 
prefix で 始まる path に対する stat ( path ) の 結果 を 、 stat ( prefix ) も 含め て すべて 忘却 し ます 。 
forget _ prefix () に 似 て い ます が 、 prefix で 始まら ない 全て の path について 忘却 し ます 。 
statvfs モジュール で は 、 os . statvfs () の 返す 値 を 解釈 する ため の 定数 を 定義 し て い ます 。 
os . statvfs () は `` マジック ナンバ '' を 記憶 せ ず に タプル を 生成 し て 返し ます 。 
この モジュール で 定義 さ れ て いる 各 定数 は os . statvfs () が 返す タプル において 、 特定 の 情報 が 収め られ て いる 各 エントリ へ の インデクス です 。 
選択 さ れ て いる ファイル システム の ブロック サイズ です 。 
ファイル システム の 基本 ブロック サイズ です 。 
ブロック 数 の 総計 です 。 
空き ブロック 数 の 総計 です 。 
非 スーパユーザ が 利用 できる 空き ブロック 数 です 。 
ファイル ノード 数 の 総計 です 。 
空き ファイル ノード 数 の 総計 です 。 
非 スーパユーザ が 利用 できる 空き ノード 数 です 。 
フラグ で 、 システム 依存 です : statvfs () マニュアル ページ を 参照 し て ください 。 
ファイル 名 の 最大 長 です 。 
string モジュール に は 便利 な 定数 や クラス が 数多く 入っ て い ます 。 また 、 現在 は 文字 列 の メソッド として 利用 できる 、 すでに 撤廃 さ れ た 古い 関数 も は 言っ て い ます 。 
正規 表現 に関する 文字 列 操作 の 関数 は 
を 参照 し て ください 。 
( ホスト 名 の よう な ) インターネット 上 に ある 存在 に 識別 名 を つける 際 、 しばしば 識別 名 間 の `` 等価 性 '' 比較 を 行う 必要 が あり ます 。 
厳密 に は 、 例えば 大 小文字 の 区別 を する か し ない か いっ た よう に 、 比較 を どの よう に 行う か は アプリケーション の 領域 に 依存 し ます 。 
また 、 例えば `` 印字 可能 な '' 文字 で 構成 さ れ た 識別 名 だけ を 許可 する といった よう に 、 可能 な 識別 名 を 制限 する こと も 必要 と なる かも しれ ませ ん 。 
RFC 3454 で は 、 インターネット プロトコル 上 で Unicode 文字 列 を `` 調製 ( prepare )'' する ため の プロシジャ を 定義 し て い ます 。 
文字 列 は 通信 路 に 載せ られる 前 に 調製 プロシジャ で 処理 さ れ 、 その 結果 ある 正規 化 さ れ た 形式 に なり ます 。 
RFC で は ある テーブル の 集合 を 定義 し て おり 、 それら は プロファイル に まとめ られ て い ます 。 
各 プロファイル で は 、 どの テーブル を 使い 、 stringprep プロシジャ の どの オプション 部分 が プロファイル の 一部 に なっ て いる か を 定義 し て い ます 。 
stringprep プロファイル の 一つ の 例 は nameprep で 、 国際 化 さ れ た ドメイン 名 に 使わ れ ます 。 stringprep は RFC 3453 の テーブル を 公開 し て いる に 過ぎ ませ ん 。 
これら の テーブル は 辞書 や リスト として 表 現 する に は バリエーション が 大き すぎる ので 、 この モジュール で は Unicode 文字 データベース を 内部 的 に 利用 し て い ます 。 
モジュールソースコード 自体 は mkstringprep . py ユーティリティ を 使っ て 生成 さ れ まし た 。 その 結果 、 これら の テーブル は データ 構造 体 で は なく 、 関数 として 公開 さ れ て い ます 。 
RFC に は 2 種類 の テーブル : 集合 および マップ 、 が 存在 し ます 。 
集合 について は 、 stringprep は `` 特性 関数 ( characteristic function )'' 、 すなわち 引数 が 集合 の 一部 で ある 場合 に 真 を 返す 関数 を 提供 し ます 。 
マップ に対して は 、 マップ 関数 : キー が 与え られる と 、 それ に 関連付け られ た 値 を 返す 関数 、 を 提供 し ます 。 
以下 は この モジュール で 利用 可能 な 全て の 関数 を 列挙 し た もの です 。 
code が テーブル A . 1 ( Unicode 3 . 2 における 未 割り当て コード 点 : unassigned code point ) か どう か 判定 し ます 。 
code が テーブル B . 1 ( 一般 に は 何 に も 対応付け られ て い ない : commonly mapped to nothing ) か どう か 判定 し ます 。 
テーブル B . 2 ( NFKC で 用い られる 大 小文字 の 対応 付け ) に従って 、 code に 対応付け られ た 値 を 返し ます 。 
テーブル B . 3 ( 正規 化 を 伴わ ない 大 小文字 の 対応 付け ) に従って 、 code に 対応付け られ た 値 を 返し ます 。 
code が テーブル C . 1 . 1 ( ASCII スペース 文字 ) か どう か 判定 し ます 。 
code が テーブル C . 1 . 2 ( 非 ASCII スペース 文字 ) か どう か 判定 し ます 。 
code が テーブル C . 1 ( スペース 文字 、 C . 1 . 1 および C . 1 . 2 の 和 集合 ) か どう か 判定 し ます 。 
code が テーブル C . 2 . 1 ( ASCII 制御 文字 ) か どう か 判定 し ます 。 
code が テーブル C . 2 . 2 ( 非 ASCII 制御 文字 ) か どう か 判定 し ます 。 
code が テーブル C . 2 ( 制御 文字 、 C . 2 . 1 および C . 2 . 2 の 和 集合 ) か どう か 判定 し ます 。 
code が テーブル C . 3 ( プライベート 利用 ) か どう か 判定 し ます 。 
code が テーブル C . 4 ( 非 文字 コード 点 : non - character code points ) か どう か 判定 し ます 。 
code が テーブル C . 5 ( サロゲーションコード ) か どう か 判定 し ます 。 
code が テーブル C . 6 ( 平文 : plain text として 不適切 ) か どう か 判定 し ます 。 
code が テーブル C . 7 ( 標準 表現 : canonical representation として 不適切 ) か どう か 判定 し ます 。 
code が テーブル C . 8 ( 表示 プロパティ の 変更 または 撤廃 ) か どう か 判定 し ます 。 
code が テーブル C . 9 ( タグ 文字 ) か どう か 判定 し ます 。 
code が テーブル D . 1 ( 双方向 プロパティ `` R '' または `` AL '' を 持つ 文字 ) か どう か 判定 し ます 。 
code が テーブル D . 2 ( 双方向 プロパティ `` L '' を 持つ 文字 ) か どう か 判定 し ます 。 
この モジュール は 、 Python の 値 と Python 上 で 文字 列 データ として 表さ れる C の 構造 体 データ と の 間 の 変換 を 実現 し ます 。 
この モジュール で は 、 C 構造 体 の レイアウト および Python の 値 と の 間 で 行い たい 変換 を コンパクト に 表現 する ため に 、 フォーマット 文字 列 を 使い ます 。 
この モジュール は 特に 、 ファイル に 保存 さ れ たり 、 ネットワーク 接続 を 経由 し た バイナリ データ を 扱う とき に 使わ れ ます 。 この モジュール は 以下 の 例外 と 関数 を 定義 し て い ます : 
様々 な 状況 で 送出 さ れ た 例外 です ; 引数 は 何 が 問題 か を 記述 する 文字 列 です 。 
値 
v 1 , v 2 , ... が 与え られ た フォーマット で 含ま れる 文字 列 データ を 返し ます 。 
引数 は 指定 し た フォーマット が 要求 する 型 と 正確 に 一致 し て い なけれ ば なり ませ ん 。 
( おそらく pack ( fmt , ...) で パック さ れ た ) 文字 列 データ を 、 与え られ た 書式 に従って アンパック し ます 。 
値 が 一つ しか ない 場合 を 含め 、 結果 は タプル で 返さ れ ます 。 
文字 列 データ に は フォーマット が 要求 する だけ の データ が 正確 に 含ま れ て い なけれ ば なり ませ ん ( len ( string ) が calcsize ( fmt ) と 一致 し なけれ ば なり ませ ん )。 
与え られ た フォーマット に 対応 する 構造 体 の サイズ ( すなわち 文字 列 データ の サイズ ) を 返し ます 。 
フォーマット 文字 ( format character ) は 以下 の 意味 を 持っ て い ます ; C と Python の 間 の 変換 で は 、 値 は 正確 に 以下 に 指定 さ れ た 型 で なく て は なり ませ ん : 
フォーマット 
C で の 型 
長 さ 1 の 文字 列 
整数 型 ( integer ) 
整数 型 
long 整数 型 
浮動 小数点 型 
文字 列 
注意 事項 : 
フォーマット 文字 " q " および " Q " は 、 プラットフォーム の C コンパイラ が C の long long 型 、 Windows で は __ int 64 を サポート する 場合 に のみ 、 プラットフォーム ネイティブ の 値 と の 変換 を 行う モード だけ で 利用 する こと が でき ます 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
フォーマット 文字 の 前 に 整数 を つけ 、 繰り返し 回数 ( count ) を 指定 する こと が でき ます 。 
例えば 、 フォーマット 文字 列 ' 4 h ' は ' hhhh ' と 全く 同じ 意味 です 。 フォーマット 文字 間 の 空白 文字 は 無視 さ れ ます ; count と フォーマット 文字 の 間 に は スペース を 入れ て は いけ ませ ん 。 
この データ の 先頭 の 1 バイト に は 文字 列 の 長 さ か 255 の うち 、 小さい 方 の 数 が 収め られ ます 。 
その後 に 文字 列 の バイト データ が 続き ます 。 
pack () に 渡さ れ た Pascal 文字 列 の 長 さ が 長 すぎ た ( count - 1 より も 長い ) 場合 、 先頭 の count - 1 バイト が 書き込ま れ ます 。 
文字 列 が count - 1 より も 短い 場合 、 指定 し た count バイト に 達する まで の 残り の 部分 は ヌル で 埋め られ ます 。 
NULL ポインタ は 常に Python 整数 型 の 0 に なり ます 。 
ポインタ 型 の サイズ を 持っ た 値 を パック する 際 に は 、 Python 整数 型 および long 整数 型 オブジェクト を 使う こと が でき ます 。 
バイト オーダ 
サイズ および アラインメント 
ネイティブ 
標準 
リトルエンディアン 
ビッグエンディアン 
ネットワークバイトオーダ (= ビッグエンディアン ) 
フォーマット 文字 列 の 最初 の 文字 が 上 の いずれ か で ない 場合 、 "@" で ある と みなさ れ ます 。 ネイティブ の バイト オーダ は ビッグエンディアン か リトルエンディアン で 、 ホスト 計算 機 に 依存 し ます 。 
"=" を 指定 し た 場合 、 ホスト 計算 機 の バイト オーダ に 基づい て リトルエンディアン と ビッグエンディアン の どちら を 使う か を 決め ます 。 
struct モジュール は この 設定 を ネイティブ の オーダ 設定 として 解釈 し ない ので 、 " P " を 使う こと は でき ませ ん 。 以下 に 例 を 示し ます ( この 例 は 全て ビッグエンディアン の マシン で 、 ネイティブ の バイト オーダ 、 サイズ および アラインメント の 場合 です ): 
ヒント : 特定 の 型 による アラインメント 要求 に 従う よう に 構造 体 の 末端 を そろえる に は 、 count を ゼロ に し た 特定 の 型 で フォーマット を 終端 し ます 。 
例えば 、 フォーマット ' llh 0 l ' は 、 long 型 が 4 バイト を 境界 として そろえ られ て いる と 仮定 し て 、 末端 に 2 バイト を パディング し ます 。 
この 機能 は 変換 対象 が ネイティブ の サイズ および アラインメント の 場合 に のみ 働き ます ; 標準 に 型 サイズ および アラインメント の 設定 で は いかなる アラインメント も 行い ませ ん 。 
一様 な データ 型 から なる バイナリ 記録 データ の パック . 
XDR データ の パック および アンパック 。 . 
6 . 8 . 1 subprocess モジュール を 使う 
subprocess モジュール は 、 新しく プロセス を 開始 し たり 、 それら の 標準 入出力 / エラー 出力 に対して パイプ で 接続 し たり 、 それら の 終了 ステータス を 取得 し たり し ます 。 
この モジュール は 以下 の よう な 古い いくつ か の モジュール を 置き換える こと を 目的 と し て い ます : 
これら の モジュール や 関数 の 代わり に 、 subprocess モジュール を どの よう に 使う か について は 以下 の 節 で 説明 し ます 。 
6 . 8 . 1 . 1 便利 な 関数 
6 . 8 . 1 . 2 例外 
6 . 8 . 1 . 3 セキュリティ 
6 . 8 . 3 . 1 / bin / sh シェル の バック クォート を 置き換える 
6 . 8 . 3 . 2 シェル の パイプライン を 置き換える 
6 . 8 . 3 . 3 os . system () を 置き換える 
6 . 8 . 3 . 4 os . spawn * を 置き換える 
6 . 8 . 3 . 5 os . popen * を 置き換える 
6 . 8 . 3 . 6 popen 2 .* を 置き換える 
sunau モジュール は 、 Sun AU サウンド フォーマット へ の 便利 な インターフェース を 提供 し ます 。 
この モジュール は 、 
モジュール や 
モジュール と 互換 性 の ある インターフェース を 備え て い ます 。 オーディオ ファイル は ヘッダ と それ に 続く データ から 構成 さ れ ます 。 
ヘッダ の フィールド は 以下 の 通り です : 
4 バイト 文字 列 ". snd "。 
info を 含む ヘッダ の サイズ を バイト 数 で 示し た もの 。 
データ の 物理 サイズ を バイト 数 で 示し た もの 。 
オーディオ サンプル の エン コード 形式 。 
サンプリング レート 。 
サンプル の チャンネル 数 。 
オーディオ ファイル について の 説明 を ASCII 文字 列 で 示し た もの ( null バイト で 埋め られ ます )。 
file が 文字 列なら その 名前 の ファイル を 開き 、 そう で ない なら ファイル の よう に シーク 可能 な オブジェクト として 扱い ます 。 mode は 以下 の うち の いずれ か です 。 
読み込み のみ の モード 。 
書き込み のみ の モード 。 
読み込み / 書き込み 両方 の モード で 開く こと は でき ない こと に 注意 し て 下さい 。 ' r ' の mode は AU _ read オブジェクト を 返し 、 ' w ' と ' wb ' の mode は AU _ write オブジェクト を 返し ます 。 
open () と 同義 。 後方 互換 性 の ため に 残さ れ て い ます 。 
sunau モジュール は 以下 の 例外 を 定義 し て い ます : 
Sun AU の 仕様 や 実装 に対する 不適切 な 操作 により 何 か 実行 不可能 と なっ た 時 に 発生 する エラー 。 
sunau モジュール は 以下 の データ アイテム を 定義 し て い ます : 
big - endian で 保存 さ れ た 正規 の Sun AU ファイル は 全て この 整数 で 始まり ます 。 
これ は 文字 列 ". snd " を 整数 に 変換 し た もの です 。 
AU ヘッダ の encoding フィールド の 値 で 、 この モジュール で サポート し て いる もの です 。 
AU ヘッダ の encoding フィールド の 値 の うち 既知 の もの として 追加 さ れ て いる もの です が 、 この モジュール で は サポート さ れ て い ませ ん 。 
14 . 4 . 1 AU _ read オブジェクト 
SunOS プラットフォーム で 利用 でき ます 。 
これ は 
に 付随 する モジュール で 、 MIN _ GAIN 、 MAX _ GAIN 、 SPEAKER など の 便利 な シンボル 定数 を 定義 し て い ます 。 
定数 の 名前 は C の include ファイル sun / audioio . h の もの と 同じ で 、 初め の 文字 列 " AUDIO _" を 除い た もの です 。 
この モジュール を 使う と 、 Sun の オーディオ インターフェース に アクセス でき ます 。 
完全 な 説明 文書 は マニュアル ページ 
audio ( 7 I ) に あり ます 。 モジュール 
に は 、 この モジュール で 使わ れる 定数 が 定義 さ れ て い ます 。 この モジュール に は 、 以下 の 変数 と 関数 が 定義 さ れ て い ます : 
この 例外 は 、 全て の エラー について 発生 し ます 。 
引数 は 誤り を 説明 する 文字 列 です 。 
この 関数 は オーディオ デバイス を 開き 、 Sun オーディオ デバイス の オブジェクト を 返し ます 。 
こう する こと で 、 オブジェクト が I / O に 使用 できる よう に なり ます 。 
パラメータ mode は 次 の うち の いずれ か 一つ で 、 録音 のみ に は ' r '、 再生 のみ に は ' w '、 録音 と 再生 両方 に は ' rw '、 コントロール デバイス へ の アクセス に は ' control ' です 。 
レコーダー や プレーヤー に は 同時に 1 つ の プロセス しか アクセス が 許さ れ て い ない ので 、 必要 な 動作 について だけ デバイス を オープン する の が いい 考え です 。 詳しく は 
audio ( 7 I ) を 参照 し て ください 。 
マニュアル ページ に ある よう に 、 この モジュール は 環境 変数 AUDIODEV の 中 の ベースオーディオデバイスファイルネーム を 初め に 参照 し ます 。 
見つから ない 場合 は / dev / audio を 参照 し ます 。 
コントロール デバイス について は 、 ベースオーディオデバイス に `` ctl '' を 加え て 扱わ れ ます 。 
この モジュール は 解析 木 の 内部 ノード の 数値 を 表す 定数 を 提供 し ます 。 
ほとんど の Python 定数 と は 違い 、 これら は 小文字 の 名前 を 使い ます 。 
言語 の 文法 の コンテキスト における 名前 の 定義 について は 、 Python ディストリビューション の ファイル Grammar / Grammar を 参照 し て ください 。 
名前 が マップ する 特定 の 数値 は Python の バージョン 間 で 変わり ます 。 この モジュール に は 、 データ オブジェクト も 一つ 付け加え られ て い ます : 
ディクショナリ は この モジュール で 定義 さ れ て いる 定数 の 数値 を 名前 の 文字 列 へ マップ し 、 より 人 が 読み やすい よう に 解析 木 を 表現 し ます 。 
: モジュール 
モジュール の 二 番目 の 例 で 、 symbol モジュール の 使い方 を 示し て い ます 。 . 
この モジュール で は 、 インタープリタ で 使用 ・ 管理 し て いる 変数 や 、 インタープリタ の 動作 に 深く 関連 する 関数 を 定義 し て い ます 。 この モジュール は 常に 利用 可能 です 。 
Python スクリプト に 渡さ れ た コマンド ライン 引数 の リスト 。 argv [ 0 ] は スクリプト の 名前 と なり ます が 、 フル パス 名 か どう か は 、 オペレーティングシステム によって 異なり ます 。 
コマンド ライン 引数 に - c を 付け て Python を 起動 し た 場合 、 argv [ 0 ] は 文字 列 '- c ' と なり ます 。 
引数 なし で Python を 起動 し た 場合 、 argv は 長 さ 0 の リスト に なり ます 。 
プラットフォーム の バイト 順 を 示し ます 。 
ビッグエンディアン ( 最 上位 バイト が 先頭 ) の プラットフォーム で は ' big '、 リトルエンディアン ( 最下位 バイト が 先頭 ) で は ' little ' と なり ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
コンパイル 時 に Python インタープリタ に 組み込ま れ た 、 全て の モジュール 名 の タプル ( この 情報 は 、 他 の 手段 で は 取得 する こと が でき ませ ん 。 
Python インタープリタ の 著作 権 を 表示 する 文字 列 。 
Python DLL の ハンドル を 示す 整数 。 利用 可能 : Windows 
value が None 以外 の 場合 、 value を sys . stdout に 出力 し て __ builtin __._ に 保存 し ます 。 
sys . displayhook は 、 Python の 対話 セッション で 入力 さ れ た 式 が 評価 さ れ た とき に 呼び出さ れ ます 。 
対話 セッション の 出力 を カスタマイズ する 場合 、 sys . displayhook に 引数 の 数 が 一つ の 関数 を 指定 し ます 。 
) 指定 し た トレース バック と 例外 を sys . stderr に 出力 し ます 。 
例外 が 発生 し 、 その 例外 が 捕捉 さ れ ない 場合 、 インタープリタ は 例外 クラス ・ 例外 インスタンス・トレースバックオブジェクト を 引数 として sys . excepthook を 呼び出し ます 。 
対話 セッション 中 に 発生 し た 場合 は プロンプト に 戻る 直前 に 呼び出さ れ 、 Python プログラム の 実行 中 に 発生 し た 場合 は プログラム の 終了 直前 に 呼び出さ れ ます 。 
この トップ レベル で の 例外 情報 出力 処理 を カスタマイズ する 場合 、 sys . excepthook に 引数 の 数 が 三つ の 関数 を 指定 し ます 。 
それぞれ 、 起動 時 の displayhook と excepthook の 値 を 保存 し て い ます 。 
この 値 は 、 displayhook と excepthook に 不正 な オブジェクト が 指定 さ れ た 場合 に 、 元 の 値 に 復旧 する ため に 使用 し ます 。 
この 関数 は 、 現在 処理 中 の 例外 を 示す 三つ の 値 の タプル を 返し ます 。 
この 値 は 、 現在 の ス レッド ・ 現在 の スタック フレーム の もの です 。 
現在 の スタック フレーム が 例外 処理 中 で ない 場合 、 例外 処理 中 の スタック フレーム が 見つかる まで 次々 と その 呼び出し 元 スタック フレーム を 調べ ます 。 
例外 が 発生 し て いる 場合 、 ( type , value , traceback ) を 返し ます 。 
exc _ clear () が 呼び出さ れる と 、 現在 の スレッド で 他 の 例外 が 発生 する か 、 又は 別 の 例外 を 処理 中 の フレーム に 実行 スタック が 復帰 する まで 、 exc _ info () は 三つ の None を 返し ます 。 
警告 : 例外 処理 中 に 戻り 値 の traceback を ローカル 変数 に 代入 する と 循環 参照 が 発生 し 、 関数 内 の ローカル 変数 や トレース バック が 参照 し て いる 全て の オブジェクト は 解放 さ れ なく なり ます 。 
特に トレース バック 情報 が 必要 で は なけれ ば exctype , value = sys . exc _ info ()[: 2 ] の よう に 例外 型 と 例外 オブジェクト のみ を 取得 する よう に し て 下さい 。 
もし トレース バック が 必要 な 場合 に は 、 処理 終了 後 に delete し て 下さい 。 この delete は 、 try ... finally ... で 行う と 良い でしょ う 。 
注意 : Python 2 . 2 以降 で は 、 ガベージコレクション が 有効 で あれ ば この よう な 到達 不能 オブジェクト は 自動的 に 削除 さ れ ます 。 しかし 、 循環 参照 を 作ら ない よう に し た ほう が 効率 的 です 。 
この 関数 は 、 現在 の スレッド で 処理 中 、 又は 最後 に 発生 し た 例外 の 情報 を 全て クリア し ます 。 
この 関数 を 呼び出す と 、 現在 の スレッド で 他 の 例外 が 発生 する か 、 又は 別 の 例外 を 処理 中 の フレーム に 実行 スタック が 復帰 する まで 、 exc _ info () は 三つ の None を 返し ます 。 この 関数 が 必要 と なる こと は 滅多 に あり ませ ん 。 
ロギング や エラー 処理 など で 最後 に 発生 し た エラー の 報告 を 行う 場合 など に 使用 し ます 。 
また 、 リソース を 解放 し て オブジェクト の 終了 処理 を 起動 する ため に 使用 する こと も でき ます が 、 オブジェクト が 実際 に さ れる か どう か は 保障 の 限り で は あり ませ ん 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
リリース 1 . 5 で 撤廃 さ れ まし た 。 
例外 処理 中 で ない 場合 、 exc _ type の 値 は None と なり 、 exc _ value と exc _ traceback は 未定義 と なり ます 。 
exec _ prefix Python の プラットフォーム 依存 な ファイル が インストール さ れ て いる ディレクトリ 名 ( サイト 固有 )。 
デフォルト で は 、 この 値 は '/ usr / local ' です が 、 ビルド 時 に configure の -- exec - prefix 引数 で 指定 する こと が でき ます 。 
全て の 設定 ファイル ( pyconfig . h など ) は exec _ prefix + '/ lib / pythonversion / config ' に 、 共有 ライブラリ は exec _ prefix + '/ lib / pythonversion / lib - dynload ' に インストール さ れ ます ( 但し version は version [: 3 ])。 
Python インタープリタ の 実行 ファイル の 名前 を 示す 文字 列 。 この よう な 名前 が 意味 を 持つ システム で は 利用 可能 。 
Python を 終了 し ます 。 
exit () は SystemExit を 送出 する ので 、 try ステートメント の finally 節 に 終了 処理 を 記述 し たり 、 上位 レベル で 例外 を 捕捉 し て exit 処理 を 中断 し たり する こと が でき ます 。 
オプション 引数 arg に は 、 終了 ステータス として 整数 ( デフォルト は 0 ) または 整数 以外 の 型 の オブジェクト を 指定 する こと が でき ます 。 
整数 を 指定 し た 場合 、 シェル 等 は 0 は `` 正常 終了 ''、 0 以外 の 整数 を `` 異常 終了 '' として 扱い ます 。 
多く の システム で は 、 有効 な 終了 ステータス は 0 - 127 で 、 これ 以外 の 値 を 返し た 場合 の 動作 は 未定義 です 。 
システム によって は 特定 の 終了 コード に 個別 の 意味 を 持た せ て いる 場合 が あり ます が 、 この よう な 定義 は 僅か しか あり ませ ん 。 Unix プログラム で は 文法 エラー の 場合 に は 2 を 、 それ 以外 の エラー なら ば 1 を 返し ます 。 
arg に None を 指定 し た 場合 は 、 数値 の 0 を 指定 し た 場合 と 同じ です 。 それ 以外 の オブジェクト を 指定 する と 、 その オブジェクト が sys . stderr に 出力 さ れ 、 終了 コード を し て 1 を 返し ます 。 
エラー 発生 時 に は sys . exit (" エラーメッセージ ") と 書く と 、 簡単 に プログラム を 終了 する こと が でき ます 。 
この 値 は モジュール に 存在 し ませ ん が 、 ユーザ プログラム で プログラム 終了 時 に 呼び出さ れる 終了 処理 関数 として 、 引数 の 数 が 0 の 関数 を 設定 する こと が でき ます 。 
この 関数 は 、 インタープリタ 終了 時 に 呼び出さ れ ます 。 
exitfunc に 指定 する こと が できる 終了 処理 関数 は 一つ だけ です ので 、 複数 の クリーンアップ 処理 が 必要 な 場合 は 
モジュール を 使用 し て ください 。 
注意 : プログラム が シグナル で kill さ れ た 場合 , Python 内部 で 致命 的 な エラー が 発生 し た 場合 , os ._ exit () が 呼び出さ れ た 場合 に は , 終了 処理 関数 は 呼び出さ れ ませ ん 。 
リリース 2 . 4 で 撤廃 さ れ まし た 。 
を 使っ て ください . 
インタプリタ の `` チェック インターバル ( check interval )'' を 返し ます ; setcheckinterval () を 参照 し て ください 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
現在 の Unicode 処理 の デフォルトエンコーディング 名 を 返し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
dlopen () で 指定 さ れる フラグ を 返し ます 。 
この フラグ は 
と DLFCN で 定義 さ れ て い ます 。 利用 可能 : Unix . バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
Unicode ファイル 名 を システム の ファイル 名 に 変換 する 際 に 使用 する エン コード 名 を 返し ます 。 
システム の デフォルトエンコーディング を 使用 する 場合 に は None を 返し ます 。 
Windows 9 x で は 、 エン コーディング は `` mbcs '' と なり ます 。 
OS X で は 、 エン コーディング は `` utf - 8 '' と なり ます 。 
Unix で は 、 エン コーディング は ユーザ の nl _ langinfo ( CODESET ) の 設定 と なり ます 。 nl _ langinfo ( CODESET ) が 失敗 する と None を 返し ます 。 
Windows NT + で は 、 Unicode を ファイル 名 として 使用 できる ので 変換 の 必要 は あり ませ ん 。 getfilesystemencoding は `` mbcs '' を 返し ます が , これ は ある Unicode 文字 列 を バイト 文字 列 に 明示 的 に 変換 し て , ファイル 名 として 使う と 同じ ファイル を 指す よう に し たい 場合 に , アプリケーション が 使わ ね ば なら ない エン コーディング です . 
object の 参照 数 を 返し ます 。 
object は ( 一 時 的 に ) getrefcount () から も 参照 さ れる ため 、 参照 数 は 予想 さ れる 数 より も 1 多く なり ます 。 
現在 の 最大 再帰 数 を 返し ます 。 
最大 再帰 数 は 、 Python インタープリタ スタック の 最大 の 深 さ です 。 
この 制限 は Python プログラム が 無限 に 再帰 し 、 C スタック が オーバー フロー し て クラッシュ する こと を 防止 する ため に 設け られ て い ます 。 
この 値 は setrecursionlimit () で 指定 する こと が でき ます 。 
コール スタック から フレーム オブジェクト を 取得 し ます 。 
オプション 引数 depth を 指定 する と 、 スタック の トップ から depth だけ 下 の フレーム オブジェクト を 取得 し ます 。 
depth が コール スタック より も 深けれ ば 、 ValueError が 発生 し ます 。 
depth の デフォルト 値 は 0 で 、 この 場合 は コール スタック の トップ の フレーム を 返し ます 。 この 関数 は 、 内部 的 な 、 特殊 な 用途 に のみ 利用 する こと が でき ます 。 
実行 中 の Windows の バージョン を 示す 、 以下 の 値 の タプル を 返し ます : major , minor , build , platform , text 。 
text は 文字 列 、 それ 以外 の 値 は 整数 です 。 
platform は 、 以下 の 値 と なり ます : 
整数 に エン コード さ れ た バージョン 番号 。 
この 値 は 新 バージョン ( 正規 リリース 以外 で あっ て も ) ごと に かならず 増加 し ます 。 
例えば 、 Python 1 . 5 . 2 以降 で のみ 動作 する プログラム で は 、 以下 の よう な チェック を 行い ます 。 
" hexversion " は hex () で 16 進数 に 変換 し なけれ ば 値 の 意味 が わかり ませ ん 。 
より 読み やすい バージョン 番号 が 必要 な 場合 に は version _ info を 使用 し て ください 。 
通常 は 定義 さ れ て おら ず 、 捕捉 さ れ ない 例外 が 発生 し て インタープリタ が エラーメッセージ と トレース バック を 出力 し た 場合 に のみ 設定 さ れ ます 。 
この 値 は 、 対話 セッション 中 に エラー が 発生 し た とき 、 デバッグ モジュール を ロード ( 例 :" import pdb ; pdb . pm ()" など 。 
対話 セッション を 実行 する スレッド は 常に 一つ だけ な ので 、 exc _ type の よう に スレッド に関する 問題 は 発生 し ませ ん 。 
Python の 整数 型 で サポート さ れる 、 最大 の 整数 。 
この 値 は 最低 で も 2 ** 31 - 1 です 。 
最大 の 負数 は - maxint - 1 と なり ます 。 正負 の 最大 数 が 非対称 です が 、 これ は 2 の 補数 計算 を 行う ため です 。 
Unicode 文字 の 最大 の コード ポイント を 示す 整数 。 
この 値 は 、 オプション 設定 で Unicode 文字 の 保存 形式 として USC - 2 と UCS - 4 の いずれ を 指定 し た か によって 異なり ます 。 
ロード 済み モジュール の モジュール 名 と モジュール オブジェクト の 辞書 。 
強制 的 に モジュール を 再 読み込み する 場合 など に 使用 し ます 。 
この 辞書 から モジュール を 削除 する の は 、 reload () 
の 呼び出し と 等価 で は あり ませ ん 。 
スクリプト の ディレクトリ が ない ( インタープリタ で 対話 セッション で 起動 さ れ た 時 や 、 スクリプト を 標準 入力 から 読み込む 場合 など ) 場合 、 path [ 0 ] に は 空文字 列 と なり 、 Python は カレント ディレクトリ から モジュール の 検索 を 開始 し ます 。 
スクリプト ディレクトリ は 、 PYTHONPATH で 指定 し た ディレクトリ の 前 に 挿入 さ れ ます ので 注意 が 必要 です 。 必要 に 応じ て 、 プログラム 内 で 自由 に 変更 する こと が でき ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : Unicode 文字 列 が 無視 さ れ なく なり まし た 
プラットフォーム を 識別 する 文字 列 ( 例 : ' sunos 5 ', ' linux 1 ' 等 )。 
path に プラットフォーム 別 の サブ ディレクトリ を 追加 する 場合 など に 利用 し ます 。 
サイト 固有 の 、 プラットフォーム に 依存 し ない ファイル を 格納 する ディレクトリ を 示す 文字 列 。 デフォルト で は '/ usr / local ' に なり ます 。 
この 値 は ビルド 時 に configure スクリプト の -- prefix 引数 で 指定 する 事 が でき ます 。 
Python ライブラリ の 主要 部分 は prefix + '/ lib / pythonversion ' に インストール さ れ 、 プラットフォーム 非 依存 な ヘッダ ファイル ( pyconfig . h 以外 ) は prefix + '/ include / pythonversion ' に 格納 さ れ ます ( 但し version は version [: 3 ])。 
インタープリタ の 一 次 プロンプト 、 二 次 プロンプト を 指定 する 文字 列 。 
対話 モード で 実行 中 のみ 定義 さ れ 、 初期 値 は ' ' と '... ' です 。 
文字 列 以外 の オブジェクト を 指定 し た 場合 、 インタープリタ が 対話 コマンド を 読み込む ごと に オブジェクト の str () を 評価 し ます 。 
この 機能 は 、 動的 に 変化 する プロンプト を 実装 する 場合 に 利用 し ます 。 
インタープリタ の `` チェック 間隔 '' を 示す 整数 値 を 指定 し ます 。 
この 値 は スレッドスイッチ や シグナル ハンドラ の チェック を 行う 周期 を 決定 し ます 。 
デフォルト 値 は 100 で 、 この 場合 100 の 仮想 命令 を 実行 する と チェック を 行い ます 。 この 値 を 大きく すれ ば スレッド を 利用 する プログラム の パフォーマンス が 向上 し ます 。 
この 値 が = 0 以下 の 場合 、 全て の 仮想 命令 を 実行 する たび に チェック を 行い 、 レスポンス 速度 と 最大 に なり ます が オーバヘッド も また 最大 と なり ます 。 
現在 の Unicode 処理 の デフォルトエンコーディング 名 を 設定 し ます 。 
name に 一致 する エン コーディング が 見つから ない 場合 、 LookupError が 発生 し ます 。 
この 関数 は 、 
モジュール の 実装 が 、 sitecustomize モジュール から 使用 する ため だけ に 定義 さ れ て い ます 。 
から 呼び出さ れ た 後 、 この 関数 は sys から 削除 さ れ ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
インタープリタ が 拡張 モジュール を ロード する 時 、 dlopen () で 使用 する フラグ を 設定 し ます 。 
sys . setdlopenflags ( 0 ) と すれ ば 、 モジュールインポート 時 に シンボル の 遅延 解決 を 行う 事 が でき ます 。 
シンボル を 拡張 モジュール 間 で 共有 する 場合 に は 、 sys . setdlopenflags ( dl . RTLD _ NOW | dl . RTLD _ GLOBAL ) と 指定 し ます 。 
フラグ の 定義 名 は 
か DLFCN で 定義 さ れ て い ます 。 
DLFCN が 存在 し ない 場合 、 h 2 py スクリプト を 使っ て / usr / include / dlfcn . h から 生成 する こと が でき ます 。 利用 可能 : Unix . バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
システム の プロファイル 関数 を 登録 し ます 。 
プロファイル 関数 は 、 Python の ソースコードプロファイル を 行う 関数 で 、 Python で 記述 する こと が でき ます 。 
詳細 は 10 を 参照 し て ください 。 
プロファイル 関数 は トレース 関数 ( settrace () 参照 ) と 似 て い ます が 、 ソース 行 が 実行 さ れる ごと に 呼び出さ れる の で は なく 、 関数 の 呼出し と 復帰 時 のみ 呼び出さ れ ます ( 例外 が 発生 し て いる 場合 でも 、 復帰 時 の イベント は 発生 し ます )。 
Python インタープリタ の 、 スタック の 最大 の 深 さ を limit に 設定 し ます 。 
この 制限 は Python プログラム が 無限 に 再帰 し 、 C スタック が オーバー フロー し て クラッシュ する こと を 防止 する ため に 設け られ て い ます 。 
limit の 最大 値 は プラットフォーム によって 異なり ます 。 
深い 再帰 処理 が 必要 な 場合 に は プラットフォーム が サポート し て いる 範囲 内 で より 大きな 値 を 指定 する こと が でき ます が 、 この 値 が 大き すぎれ ば クラッシュ する ので 注意 が 必要 です 。 
システム の トレース 関数 を 登録 し ます 。 
トレース 関数 は Python の ソース デバッガ を 実装 する ため に 使用 する こと が でき ます 。 
9 . 2 の `` How It Works ,'' を 参照 し て ください 。 
トレース 関数 は スレッド 毎 に 設定 する こと が でき ます ので 、 デバッグ を 行う 全て の スレッド で settrace () を 呼び出し 、 トレース 関数 を 登録 し て ください 。 
注意 : settrace () 関数 は , デバッガ , プロファイラ , カバレッジツール 等 で 使う ため だけ の もの です . この 関数 の 挙動 は 言語 定義 より も 実装 プラットフォーム の 分野 の 問題 で , 全て の Python 実装 で 利用 できる と は 限り ませ ん . 
インタープリタ の 標準 入力 ・ 標準 出力 ・ 標準 エラー 出力 に 対応 する ファイル オブジェクト 。 stdin は スクリプト の 読み込み を 除く 全て の 入力 処理 で 使用 さ れ 、 input () 
インタープリタ の プロンプト は ( ほとんど ) stderr に 出力 さ れ ます 。 stdout と stderr は 必ずしも 組み込み の ファイル オブジェクト で ある 必要 は なく 、 write () メソッド を 持つ オブジェクト で あれ ば 使用 する こと が でき ます 。 
stdout と stderr を 別 の オブジェクト に 置き換え て も 、 os . popen () ・ os . system () ・ 
の exec *() など から 起動 さ れ た プロセス が 使用 する 標準 I / O ストリーム は 変更 さ れ ませ ん 。 
それぞれ 起動 時 の stdin ・ stderr ・ stdout の 値 を 保存 し ます 。 
終了 処理 時 や 、 不正 な オブジェクト が 指定 さ れ た 場合 に 元 の 値 に 復旧 する ため に 使用 し ます 。 
捕捉 さ れ ない 例外 が 発生 し た 時 、 出力 さ れる トレース バック 情報 の 最大 レベル 数 を 指定 する 整数 値 ( デフォルト 値 は 1000 )。 
0 以下 の 値 が 設定 さ れ た 場合 、 トレース バック 情報 は 出力 さ れ ず 例外 型 と 例外 値 のみ が 出力 さ れ ます 。 
Python インタープリタ の バージョン と ビルド 番号 ・ 使用 コンパイラ など の 情報 を 示す 文字 列 で 、 ' バージョン (# ビルド 番号 , ビルド 日付 , ビルド 時間 )[ コンパイラ ]' と なり ます 。 
先頭 の 三 文字 は 、 バージョン ごと の インストール 先 ディレクトリ 内 を 識別 する ため に 使用 さ れ ます 。 
例 : 
使用 中 の インタープリタ の C API バージョン 。 
Python と 拡張 モジュール 間 の 不 整合 を デバッグ する 場合 など に 利用 でき ます 。 
バージョン 番号 を 示す 5 つ の 値 の タプル : major , minor , micro , releaselevel , serial releaselevel 以外 は 全て 整数 です 。 
releaselevel の 値 は 、 ' alpha ', ' beta ',' candidate ', or ' final ' の 何れ か です 。 Python 2 . 0 の version _ info は 、 ( 2 , 0 , 0 , ' final ', 0 ) と なり ます 。 
バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
を 参照 し て ください 。 
Windows プラットフォーム で 、 レジストリ の キー と なる バージョン 番号 。 Python DLL の 文字 列 リソース 1000 に 設定 さ れ て い ます 。 
通常 、 この 値 は version の 先頭 三 文字 と なり ます 。 
この モジュール で は Unix syslog ライブラリ ルーチン 群 へ の インタフェース を 提供 し ます 。 
syslog の 便宜 レベル に関する 詳細 な 記述 は Unix マニュアル ページ を 参照 し て ください 。 この モジュール で は 以下 の 関数 を 定義 し て い ます : 
文字 列 message を システム ログ 機構 に 送信 し ます 。 
末尾 の 改行 文字 は 必要 に 応じ て 追加 さ れ ます 。 
各 メッセージ は facility および level から なる 優先 度 で タグ 付け さ れ ます 。 
オプション の priority 引数 は メッセージ の 優先 度 を 定義 し ます 。 標準 の 値 は LOG _ INFO です 。 
priority 中 に 、 便宜 レベル が ( LOG _ INFO | LOG _ USER の よう に ) 論理 和 を 使っ て コード 化 さ れ て い ない 場合 、 openlog () を 呼び出し た 際 の 値 が 使わ れ ます 。 
標準 以外 の ログ オプション は 、 syslog () の 呼び出し に 先立っ て openlog () で ログ ファイル を 開く 際 、 明示 的 に 設定 する こと が でき ます 。 
標準 の 値 は ( 通常 ) indent = ' syslog '、 logopt = 0 、 facility = LOG _ USER です 。 
ident 引数 は 全て の メッセージ の 先頭 に 付加 する 文字 列 です 。 
オプション の logopt 引数 は ビット フィールド の 値 に なり ます - とり うる 組み合わせ 値 について は 以下 を 参照 し て ください 。 
オプション の facility 引数 は 、 便宜 レベル コード の 設定 が 明示 的 に なさ れ て い ない メッセージ に対する 、 標準 の 便宜 レベル を 設定 し ます 。 
ログ ファイル を 閉じ ます 。 
優先 度 マスク を maskpri に 設定 し 、 以前 の マスク 値 を 返し ます 。 
maskpri に 設定 さ れ て い ない 優先 度 レベル を 持っ た syslog () の 呼び出し は 無視 さ れ ます 。 
標準 で は 全て の 優先 度 を ログ 出力 し ます 。 
関数 LOG _ MASK ( pri ) は 個々 の 優先 度 pri に対する 優先 度 マスク を 計算 し ます 。 
関数 LOG _ UPTO ( pri ) は 優先 度 pri まで の 全て の 優先 度 を 含む よう な マスク を 計算 し ます 。 
この モジュール で は 以下 の 定数 を 定義 し て い ます : 
優先 度 ( 高い 優先 度 順 ): 
LOG _ EMERG 、 LOG _ ALERT 、 LOG _ CRIT 、 LOG _ ERR 、 LOG _ WARNING 、 LOG _ NOTICE 、 LOG _ INFO 、 LOG _ DEBUG 。 
便宜 レベル : 
LOG _ KERN 、 LOG _ USER 、 LOG _ MAIL 、 LOG _ DAEMON 、 LOG _ AUTH 、 LOG _ LPR 、 LOG _ NEWS 、 LOG _ UUCP 、 LOG _ CRON 、 および LOG _ LOCAL 0 から LOG _ LOCAL 7 。 
ログ オプション : 
syslog . h で 定義 さ れ て いる 場合 、 LOG _ PID 、 LOG _ CONS 、 LOG _ NDELAY 、 LOG _ NOWAIT 、 および LOG _ PERROR 。 
差し当たり 、 この モジュール は スクリプト として 呼び出す こと を 意図 し て い ます 。 しかし 、 IDE 上 に イン ポート し て 下 で 説明 する 関数 check () を 使う こと が でき ます 。 
警告 : この モジュール が 提供 する API を 将来 の リリース で 変更 する 確率 が 高い です 。 この よう な 変更 は 後方 互換 性 が ない かも しれ ませ ん 。 
file _ or _ dir が ディレクトリ で あっ て シンボリックリンク で ない とき に 、 file _ or _ dir という 名前 の ディレクトリ ツリー を 再帰 的 に 下っ て 行き 、 この 通り道 に 沿っ て すべて の . py ファイル を 変更 し ます 。 
file _ or _ dir が 通常 の Python ソース ファイル の 場合 に は 、 問題 の ある 空白 を チェック し ます 。 
診断 メッセージ は print 文 を 使っ て 標準 出力 に 書き込ま れ ます 。 
冗長 な メッセージ を プリント する か どう か を 示す フラグ 。 スクリプト として 呼び出さ れ た 場合 は 、 - v オプション によって 増加 し ます 。 
スクリプト として 呼び出さ れ た 場合 は 、 - q オプション によって 真に 設定 さ れ ます 。 
あいまい な インデント を 検出 し た 場合 に tokeneater () によって 発生 さ せ られ ます 。 check () で 捕捉 さ れ 処理 さ れ ます 。 
この 関数 は 関数 tokenize . tokenize () へ の コールバックパラメータ として check () によって 使わ れ ます 。 
Python ソース コード の 字句 解析 器 。 . 
tarfile モジュール は 、 tar アーカイブ を 読ん で 作成 する こと が できる よう に し ます 。 いくつ か の 事実 と 外観 : 
gzip と bzip 2 で 圧縮 さ れ た アーカイブ を 読み書き し ます 。 
POSIX 1003 . 1 - 1990 準拠 あるいは GNU tar 互換 の アーカイブ を 作成 し ます 。 
GNU tar 拡張 機能 長い 名前 、 longlink および sparse を 読み ます 。 
GNU tar 拡張 機能 を 使っ て 、 無 制限 長 さ の パス 名 を 保存 し ます 。 
ディレクトリ 、 普通 の ファイル 、 ハード リンク 、 シンボリックリンク 、 fifo 、 キャラクタ デバイス および ブロック デバイス を 処理 し ます 。 また 、 タイム スタンプ 、 アクセス 許可 および オーナー の よう な ファイル 情報 の 取得 および 保存 が 可能 です 。 
テープ デバイス を 取り扱う こと が でき ます 。 
パス 名 name に TarFile オブジェクト を 返し ます 。 TarFile オブジェクト に関する 詳細 な 情報 について は 、 TarFile オブジェクト ( セクション 7 . 19 . 1 ) を 見 て 下さい 。 
mode は ' filemode [: compression ]' の 形式 を とる 文字 列 で なけれ ば なり ませ ん . デフォルト の 値 は ' r ' です . 以下 に mode の とり うる 組み合わせ 全て を 示し ます . 
動作 
透過 な 圧縮 つき で 読み込む ため に オープン し ます ( 推奨 )。 
圧縮 なし で 排他 的 に 読み込む ため に オープン し ます 。 
gzip 圧縮 で 読み込む ため に オープン し ます 。 
bzip 2 圧縮 で 読み込む ため に オープン し ます 。 
' a ' または ' a :' 
圧縮 なし で 追加 する ため に オープン し ます 。 
' w ' または ' w :' 
非 圧縮 で 書き込む ため に オープン し ます 。 
gzip 圧縮 で 書き込む ため に オープン し ます 。 
bzip 2 圧縮 で 書き込む ため に オープン し ます 。 
' a : gz ' あるいは ' a : bz 2 ' は 可能 で は ない こと に 注意 し て 下さい 。 もし mode が 、 ある ( 圧縮 し た ) ファイル を 読み込み 用 に オープン する のに 、 適し て い ない なら 、 ReadError が 発生 し ます 。 
これ を 防ぐ に は mode ' r ' を 使っ て 下さい 。 
もし 圧縮 メソッド が サポート さ れ て い なけれ ば 、 CompressionError が 発生 し ます 。 もし fileobj が 指定 さ れ て いれ ば 、 それ は name で オープン さ れ た ファイル オブジェクト の 代替 として 使う こと が でき ます 。 
特別 な 目的 の ため に 、 mode の 2 番目 の 形式 :' ファイル モード |[ 圧縮 ]' が あり ます 。 
この 形式 を 使う と , open が 返す の は データ を ブロック から なる ストリーム として 扱う TarFile オブジェクト に なり ます . この 場合 , ファイル に対して ランダム な seek を 行え なく なり ます . fileobj を 指定 する 場合 , read () および write () メソッド を 持つ 任意 の オブジェクト に でき ます . bufsize に は ブロック サイズ を 指定 し ます . デフォルト は 20 * 512 バイト です 。 
sys . stdin , ソケットファイルオブジェクト , テーブデバイス と 組み合わせる 場合 に は この 形式 を 使っ て ください . ただし , この よう な TarFile オブジェクト に は ランダムアクセス を 行え ない という 制限 が あり ます . 例 ( セクション 7 . 19 . 3 ) を 参照 し て ください 。 
現在 可能 な モード は : 
モード 
非 圧縮 tar ブロック の ストリーム を 読み込み に オープン し ます 。 
gzip 圧縮 ストリーム を 読み込み に オープン し ます 。 
bzip 2 圧縮 ストリーム を 読み込み に オープン し ます 。 
非 圧縮 ストリーム を 書き込み に オープン し ます 。 
gzip 圧縮 ストリーム を 書き込み に オープン し ます 。 
bzip 2 圧縮 ストリーム を 書き込み に オープン し ます 。 
tar アーカイブ を 読ん だり 、 書い たり する ため の クラス です 。 
この クラス を 直接 使わ ず , 代わり に open () を 使っ て ください . TarFile オブジェクト ( 7 . 19 . 1 節 ) を 参照 し て ください . 
もし name が tar アーカイブ ファイル で あり , tarfile モジュール で 読み 出せる 場合 に True を 返し ます . 
クラス TarFileCompat 
非 圧縮 tar アーカイブ の ため の 定数 。 
圧縮 tar アーカイブ の ため の 定数 。 
すべて の tarfile 例外 の ため の 基本 クラス です 。 
tar アーカイブ が オープン さ れ た 時 、 tarfile モジュール で 操作 でき ない か 、 あるいは 何 か 無効 で ある とき 発生 し ます 。 
圧縮 方法 が サポート さ れ て い ない か 、 あるいは データ を 正しく デコード でき ない 時 に 発生 し ます 。 
ストリーム 風 の TarFile オブジェクト で 典型 的 な 制限 の ため に 発生 し ます 。 
extract () を 使っ た 時 、 もし TarFile . errorlevel 
== 2 の フェータル で ない エラー に対して だけ 発生 し ます 。 
参考 : zipfile 
標準 モジュール の ドキュメント 。 
GNU tar マニュアル 、 標準 セクション 
GNU tar 拡張 機能 を 含む 、 tar アーカイブ ファイル の ため の ドキュメント 。 
7 . 19 . 1 TarFile オブジェクト 
telnetlib モジュール で は 、 Telnet プロトコル を 実装 し て いる Telnet クラス を 提供 し ます 。 
Telnet プロトコル について の 詳細 は RFC 854 を 参照 し て ください 。 
加え て 、 この モジュール で は Telnet プロトコル における 制御 文字 ( 下 を 参照 し て ください ) と 、 telnet オプション に対する シンボル 定数 を 提供 し て い ます 。 
telnet オプション に対する シンボル 名 は arpa / telnet . h の TELOPT _ が ない 状態 で の 定義 に 従い ます 。 
伝統 的 に arpa / telnet . h に 含め られ て い ない telnet オプション の シンボル 名 について は 、 この モジュール の ソース コード 自体 を 参照 し て ください 。 telnet コマンド の シンボル 定数 は 、 IAC 、 DONT 、 DO 、 WONT 、 WILL 、 SE ( サブネゴシエーション 終了 )、 NOP ( 何 も し ない )、 DM ( データ マーク )、 BRK ( ブレーク )、 IP ( プロセス 割り込み )、 AO ( 出力 中断 )、 AYT ( 応答 確認 )、 EC ( 文字 削除 )、 EL ( 行 削除 )、 GA ( 進め )、 SB ( サブネゴシエーション 開始 ) です 。 
クラス Telnet 
Telnet は Telnet サーバ へ の 接続 を 表現 し ます 。 
標準 で は 、 Telnet クラス の インスタンス は 最初 は サーバ に 接続 し て い ませ ん ; 接続 を 確立 する に は open () を 使わ なけれ ば なり ませ ん 。 
詳しく は 下記 の 個々 の 説明 を 参照 し て ください 。 
RFC 854 , Telnet プロトコル 仕様 ( Telnet Protocol Specification ) 
Telnet プロトコル の 定義 。 
11 . 14 . 1 Telnet オブジェクト 
6 . 21 . 4 . 9 コール バック の 例 6 : 可変 個 の 引数 
この モジュール を 使う と 、 一時 的 な ファイル や ディレクトリ を 生成 でき ます 。 
この モジュール は サポート さ れ て いる 全て の プラットフォーム で 利用 可能 です 。 バージョン 2 . 3 の Python で は 、 この モジュール に対して セキュリティ を 高める 為 の 見直し が 行わ れ まし た 。 
現在 で は 新た に 3 つ の 関数 、 NamedTemporaryFile ()、 mkstemp ()、 および mkdtemp () が 提供 さ れ て おり 、 安全 で ない mktemp を 使い つづける 必要 を なくし まし た 。 
この モジュール で 生成 さ れる 一時 ファイル は もはや プロセス 番号 を 含み ませ ん ; その 代わり 、 6 桁 の ランダム な 文字 から なる 文字 列 が 使わ れ ます 。 また 、 ユーザ から 呼び出し 可能 な 関数 は 全て 、 一時 ファイル の 場所 や 名前 を 直接 操作 できる よう に する ため の 追加 の 引数 を とる よう に なり まし た 。 
もはや 変数 tempdir および template を 使う 必要 は あり ませ ん 。 
以前 の バージョン と の 互換 性 を 維持 する ため に 、 引数 の 順番 は 多少 変 です ; 明確 さ の ため に キーワード 引数 を 使う こと を お 勧め し ます 。 この モジュール で は ユーザ から 呼び出し 可能 な 以下 の 関数 を 定義 し て い ます : 
一時 的 な 記憶 領域 として 使う こと が できる ファイル ( または ファイル 類似 の ) オブジェクト を 返し ます 。 
ファイル は mkstemp を 使っ て 生成 さ れ ます 。 
この ファイル は 閉じ られる と ( オブジェクト が ガーベジコレクション さ れ た 際 に 、 暗黙 の うち に 閉じ られる 場合 を 含み ます ) すぐ に 消去 さ れ ます 。 
Unix 環境 で は 、 ファイル が 生成 さ れる と すぐ に その ファイル の ディレクトリ エントリ は 除去 さ れ て しまい ます 。 
一方 、 他 の プラットフォーム で は この 機能 は サポート さ れ て い ませ ん ; 従っ て 、 コード を 書く とき に は 、 この 関数 で 作成 し た 一時 ファイル を ファイル システム 上 で 見る こと が できる 、 あるいは でき ない という こと を あて に す べき で は あり ませ ん 。 生成 さ れ た ファイル を 一旦 閉じ なく て も ファイル を 読み書き できる よう に する ため に 、 mode パラメタ は 標準 で ' w + b ' に 設定 さ れ て い ます 。 
この 関数 は ファイル が ファイル システム 上 で 見る こと が できる よう 保証 さ れ て いる 点 を 除き 、 TemporaryFile () と 全く 同じ に 働き ます 。 
( Unix で は 、 ディレクトリ エントリ は unlink さ れ ませ ん ) ファイル 名 は ファイル オブジェクト の name メンバ から 取得 する こと が でき ます 。 
可能 な 限り 最も 安全 な 手段 で 一時 ファイル を 生成 し ます 。 
使用 する プラットフォーム で os . open () の O _ EXCL フラグ が 正しく 実装 さ れ て いる 限り 、 ファイル の 生成 で 競合 条件 が 起こる こと は あり ませ ん 。 
この ファイル は 、 ファイル を 生成 し た ユーザ の ユーザ ID から のみ 読み書き 可能 です 。 
使用 する プラットフォーム において 、 ファイル を 実行 可能 か どう か を 示す 許可 ビット が 使わ れ て いる 場合 、 ファイル は 誰 から も 実行 不可 な よう に 設定 さ れ ます 。 
mkstemp () は 開か れ た ファイル を 扱う ため の OS レベル の 値 と ファイル の 絶対 パス 名 が 順番 に 並ん だ タプル を 返し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
可能 な 限り 安全 な 方法 で 一時 ディレクトリ を 作成 し ます 。 ディレクトリ の 生成 で 競合 条件 は 発生 し ませ ん 。 
mkdtemp () は 新た に 生成 さ れ た ディレクトリ の 絶対 パス 名 を 返し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 mkdtemp 
リリース 2 . 3 で 撤廃 さ れ まし た 。 Use mkstemp () instead . 
一時 ファイル の 絶対 パス 名 を 返し ます 。 この パス 名 は 少なくとも この 関数 が 呼び出さ れ た 時点 で は ファイル システム 中 に 存在 し なかっ た パス 名 です 。 
prefix 、 prefix 、 suffix 、 および dir 引数 は mkstemp () の もの と 同じ です 。 
警告 : この 関数 を 使う と プログラム の セキュリティ ホール に なる 可能 性 が あり ます 。 
この 関数 が 返し た ファイル 名 を 返し た 後 、 あなた が その ファイル 名 を 使っ て 次に 何 か を しよ う と する 段階 に 至る 前 に 、 誰 か 他 の 人間 が あなた に パンチ を くらわせ て しまう かも しれ ませ ん 。 
この モジュール で は 、 一時 的 な ファイル 名 の 作成 方法 を 指定 する 2 つ の グローバル 変数 を 使い ます 。 
これら の 変数 は 上記 の いずれ か の 関数 を 最初 に 呼び出し た 際 に 初期 化 さ れ ます 。 
関数 呼び出し を おこなう ユーザ は これら の 値 を 変更 する こと が でき ます が 、 これ は お 勧め でき ませ ん ; その 代わり に 関数 に 適切 な 引数 を 指定 し て ください 。 
この 値 が None 以外 に 設定 さ れ た 場合 、 この モジュール で 定義 さ れ て いる 関数 全て の dir 引数 に対する 標準 の 設定 値 と なり ます 。 tempdir が 設定 さ れ て い ない か None の 場合 、 上記 の いずれ か の 関数 を 呼び出し た 際 は 常に 、 Python は 標準 的 な ディレクトリ 候補 の リスト を 検索 し 、 関数 を 呼び出し て いる ユーザ の 権限 で ファイル を 作成 できる 最初 の ディレクトリ 候補 を tempdir に 設定 し ます 。 
リスト は 以下 の よう に なっ て い ます : 
環境 変数 TMPDIR で 与え られ て いる ディレクトリ 名 。 
環境 変数 TEMP で 与え られ て いる ディレクトリ 名 。 
環境 変数 TMP で 与え られ て いる ディレクトリ 名 。 
プラットフォーム 依存 の 場所 : 
Macintosh で は Temporary Items フォルダ 。 
RiscOS で は 環境 変数 Wimp $ ScrapDir で 与え られ て いる ディレクトリ 名 。 
その他 の 全て の プラットフォーム で は 、 / tmp 、 / var / tmp 、 および / usr / tmp の 順 。 
最後 の 手段 として 、 現在 の 作業 ディレクトリ 。 
現在 選択 さ れ て いる 、 テンポラリ ファイル を 作成 する ため の ディレクトリ を 返し ます 。 tempdir が None で ない 場合 、 単に その 内容 を 返し ます ; そう で ない 場合 に は 上 で 記述 さ れ て いる 検索 が 実行 さ れ 、 その 結果 が 返さ れ ます 。 
リリース 2 . 0 で 撤廃 さ れ まし た 。 代わり に gettempprefix () を 使っ て ください 。 
この 値 に None 以外 の 値 を 設定 し た 場合 、 mktemp () が 返す ファイル 名 の ディレクトリ 部 を 含ま ない 先頭 部分 ( プレフィクス ) を 定義 し ます 。 
ファイル 名 を 一意 に する ため に 、 6 つ の ランダム な 文字 および 数字 が この プレフィクス の 後 に 追加 さ れ ます 。 
Windows で は 、 標準 の プレフィクス は ~ T です ; 他 の システム で は tmp です 。 
この モジュール の 古い バージョン で は 、 os . fork () を 呼び出し た 後 に template を None に 設定 する こと が 必要 でし た ; この 仕様 は バージョン 1 . 5 . 2 から は 必要 なくなり まし た 。 
一時 ファイル を 生成 する 際 に 使わ れる ファイル 名 の 先頭 部分 を 返し ます 。 
この 先頭 部分 に は ディレクトリ 部 は 含ま れ ませ ん 。 
変数 template を 直接 読み出す より も この 関数 を 使う こと を 勧め ます 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
この モジュール で は 端末 I / O 制御 の ため の POSIX 準拠 の 関数 呼び出し インタフェース を 提供 し ます 。 
これら 呼び出し の ため の 完全 な 記述 について は 、 POSIX または Unix マニュアル ページ を 参照 し て ください 。 
POSIX termios 形式 の 端末 制御 を サポート する Unix の バージョン で ( かつ インストール 時 に 指定 し た 場合 に ) のみ 利用 可能 です 。 この モジュール の 関数 は 全て 、 ファイル 記述 子 fd を 最初 の 引数 として とり ます 。 
ファイル 記述 子 fd の 端末 属性 を 含む リスト を 返し ます 。 その 形式 は :[ 
端末 設定 フラグ および 端末 速度 の 解釈 、 および 配列 cc の インデクス 検索 は 、 termios で 定義 さ れ て いる シンボル 定数 を 使っ て 行わ なけれ ば なり ませ ん 。 
ファイル 記述 子 fd の 端末 属性 を attributes から 取り出し て 設定 し ます 。 attributes は tcgetattr () が 返す よう な リスト です 。 
引数 when は 属性 が い つ 変更 さ れる か を 決定 し ます : TCSANOW は 即時 変更 を 行い 、 TCSAFLUSH は 現在 キュー さ れ て いる 出力 を 全て 転送 し 、 全て の キュー さ れ て いる 入力 を 無視 し た 後 に 変更 を 行い ます 。 
ファイル 記述 子 fd に ブレーク を 送信 し ます 。 
duration を ゼロ に する と 、 0 . 25 - 0 . 5 秒間 の ブレーク を 送信 し ます ; duration の 値 が ゼロ で ない 場合 、 その 意味 は システム 依存 です 。 
ファイル 記述 子 fd に 書き込ま れ た 全て の 出力 が 転送 さ れる まで 待ち ます 。 
ファイル 記述 子 fd に キュー さ れ た データ を 無視 し ます 。 
どの キュー か は queue セレクタ で 指定 し ます : TCIFLUSH は 入力 キュー 、 TCOFLUSH は 出力 キュー 、 TCIOFLUSH は 両方 の キュー です 。 
ファイル 記述 子 fd の 入力 または 出力 を サスペンド し たり レジューム し たり し ます 。 
引数 action は 出力 を サスペンド する TCOOFF 、 出力 を レジューム する TCOON 、 入力 を サスペンド する TCIOFF 、 入力 を レジューム する TCION を とる こと が でき ます 。 
一般 的 な 端末 制御 操作 の ため の 便利 な 関数 。 
5 . 4 . 1 test パッケージ の ため の ユニット テスト を 書く 
test パッケージ に は 、 Python 用 の 全て の 回帰 テスト と 、 test . test _ support および test . regrtest モジュール が 入っ て い ます 。 
test . test _ support は テスト を 充実 さ せる ため に 使い 、 test . regtest は テストスイート を 駆動 する の に 使い ます 。 
test パッケージ 内 の 各 モジュール の うち 、 名前 が " test _" で 始まる もの は 、 特定 の モジュール や 機能 に対する テストスイート です 。 
新しい テスト は すべて unittest モジュール を 使っ て 書く よう に し て ください ; 必ずしも unittest を 使う 必要 は ない の です が 、 unittest は テスト を より 柔軟 に し 、 メンテナンス を より 簡単 に し ます 。 
古い テスト の いくつ か は doctest を 利用 し て おり 、 `` 伝統 的 な '' テスト 形式 に なっ て い ます 。 
これら の テスト 形式 を カバー する 予定 は あり ませ ん 。 
PyUnit 回帰 テスト を 書く 。 
ドキュメンテーション 文字 列 に 埋め込ま れ た テスト 。 
5 . 4 . 2 test . regrtest を 使っ て テスト を 実行 する 5 . 4 . 3 test . test _ support -- テスト の ため の ユーティリティ 関数 
5 . 4 . 2 test . regrtest を 使っ て テスト を 実行 する 
5 . 4 . 3 test . test _ support -- テスト の ため の ユーティリティ 関数 test . test _ support モジュール で は 、 Python の 回帰 テスト に対する サポート を 提供 し て い ます 。 
この モジュール は 次 の 例外 を 定義 し て い ます : 
テスト が 失敗 し た とき 送出 さ れる 例外 です 。 
test . test _ support モジュール で は 、 以下 の 定数 を 定義 し て い ます : 
冗長 な 出力 が 有効 な 場合 は True です 。 実行 中 の テスト について の より 詳細 な 情報 が 欲しい とき に チェック し ます 。 
verbose は test . regrtest によって 設定 さ れ ます 。 
have _ unicode ユニコードサポート が 利用 可能 なら ば True に なり ます 。 
実行 中 の インタプリタ が Jython なら ば True に なり ます 。 
一時 ファイル を 作成 する パス に 設定 さ れ ます 。 作成 し た 一時 ファイル は 全て 閉じ 、 unlink ( 削除 ) せ ね ば なり ませ ん 。 
test . test _ support モジュール で は 、 以下 の 関数 を 定義 し て い ます : 
モジュール 名 module _ name を sys . modules から 取り除き 、 モジュール の バイト コンパイル 済み ファイル を 全て 削除 し ます 。 
resource が 有効 で 利用 可能 なら ば True を 返し ます 。 利用 可能 な リソース の リスト は 、 test . regrtest が テスト を 実行 し て いる 間 のみ 設定 さ れ ます 。 
resource が 利用 でき なけれ ば 、 ResourceDenied を 送出 し ます 。 
filename という 名前 の ファイル へ の パス を 返し ます 。 
渡さ れ た unittest . TestCase サブ クラス を 実行 し ます 。 この 関数 は 名前 が " test _" で 始まる メソッド を 探し て 、 テスト を 個別 に 実行 し ます 。 
この 方法 を テスト の 実行 方法 として 推奨 し て い ます 。 run _ suite 
unittest . TestSuite の インスタンス suite を 実行 し ます 。 オプション 引数 testclass は テストスイート 内 の テスト クラス の 一つ を 受け取り 、 指定 する と テストスイート が 存在 する 場所 について さらに 詳細 な 情報 を 出力 し ます 。 
textwrap モジュール で は 、 二つ の 簡易 関数 wrap () と fill ()、 そして 作業 の すべて を 行う クラス TextWrapper と ユーティリティ 関数 dedent () を 提供 し て い ます 。 
単に 一つ や 二つ の テキスト 文字 列 の 折り返し または 詰め込み を 行っ て いる なら ば 、 簡易 関数 で 十 分間 に 合い ます 。 そう で なけれ ば 、 効率 の ため に TextWrapper の インスタンス を 使っ た 方 が 良い でしょ う 。 
text ( 文字 列 ) 内 の 段落 を 一つ だけ 折り返し を 行い ます 。 したがって 、 すべて の 行 が 高々 width 文字 の 長 さ に なり ます 。 
text 内 の 段落 を 一つ だけ 折り返し を 行い 、 折り返し が 行わ れ た 段落 を 含む 一つ の 文字 列 を 返し ます 。 fill () は 
"\ n ". join ( wrap ( text , ...)) の 省略 表現 です 。 
特に 、 fill () は wrap () と まったく 同じ 名前 の キーワード 引数 を 受け取り ます 。 
wrap () と fill () の 両方 とも が TextWrapper インスタンス を 作成 し 、 その 一つ の メソッド を 呼び出す こと で 機能 し ます 。 
クラス TextWrapper 
TextWrapper コンス トラクタ は たくさん の オプション の キーワード 引数 を 受け取り ます 。 
それぞれ の 引数 は 一つ の インスタンス 属性 に 対応 し ます 。 したがって 、 例えば 、 
と 同じ です 。 
あなた は 同じ TextWrapper オブジェクト を 何 回 も 再 利用 でき ます 。 
また 、 使用 中 に インスタンス 属性 へ 代入 する こと で その オプション の どれ でも 変更 でき ます 。 
TextWrapper インスタンス 属性 ( と コンス トラクタ の キーワード 引数 ) は 以下 の 通り です : 
( デフォルト : 70 ) 折り返し が 行わ れる 行 の 最大 の 長 さ 。 
入 力行 に width より 長い 単一 の 語 が 無い 限り 、 TextWrapper は width 文字 より 長い 出 力行 が 無い こと を 保証 し ます 。 
( デフォルト : True ) も し 真 なら ば 、 その とき は text 内 の すべて の タブ 文字 は text の expand _ tabs () メソッド を 用い て 空白 に 展開 さ れ ます 。 
( デフォルト : True ) も し 真 なら ば 、 タブ 展開 の 後 に 残る ( string . whitespace に 定義 さ れ た ) 空白 文字 の それぞれ が 一つ の 空白 と 置き換え られ ます 。 
( デフォルト : '') 折り返し が 行わ れる 出力 の 一行 目 の 先頭 に 付け られる 文字 列 。 
一行 目 の 折り返し の 長 さ に なる まで 含め られ ます 。 
( デフォルト : '') 一行 目 以外 の 折り返し が 行わ れる 出力 の すべて の 行 の 先頭 に 付け られる 文字 列 。 
一行 目 以外 の 各行 が 折り返し の 長 さ まで 含め られ ます 。 
( デフォルト : False ) も し 真 なら ば 、 TextWrapper は 文 の 終わり を 見つけよ う と し 、 確実 に 文 が ちょうど 二つ の 空白 で 常に 区切ら れ て いる よう に し ます 。 
これ は 一般 的 に 固定 スペース フォント の テキスト に対して 望ましい です 。 
しかし 、 文 の 検出 アルゴリズム は 完全 で は あり ませ ん : 文 の 終わり に は 、 後ろ に 空白 が ある "."、"!" または "?" の 中 の 一つ 、 ことに よる と """ あるいは "'" が 付随 する 小文字 が ある と 仮定 し て い ます 。 
これ に 伴う 一つ の 問題 は 
の `` Dr .'' と 
の `` Spot .'' の 間 の 差異 を 検出 でき ない アルゴリズム です 。 
fix _ sentence _ endings は デフォルト で 偽 です 。 
文 検出 アルゴリズム は `` 小文字 '' の 定義 の ため に string . lowercase に 依存 し 、 同 一行 の 文 を 区切る ため に ピリオド の 後 に 二つ の 空白 を 使う 慣習 に 依存 し て いる ため 、 英文 テキスト に 限定 さ れ た もの です 。 
( デフォルト : True ) も し 真 なら ば 、 その とき width より 長い 行 が 確実 に ない よう に する ため に 、 width より 長い 語 は 切ら れ ます 。 
偽 なら ば 、 長い 語 は 切ら れ ない でしょ う 。 そして 、 width より 長い 行 が ある かも しれ ませ ん 。 
( width を 超える 分 を 最小 に する ため に 、 長い 語 は 単独 で 一行 に 置か れる でしょ う 。 ) 
TextWrapper は モジュール レベル の 簡易 関数 に 類似 し た 二つ の 公開 メソッド も 提供 し ます : 
text ( 文字 列 ) 内 の 段落 を 一つ だけ 折り返し を 行い ます 。 したがって 、 すべて の 行 は 高々 width 文字 です 。 
すべて の ラッピングオプション は TextWrapper インスタンス の インスタンス 属性 から 取ら れ て い ます 。 最後 に 改行 の 無い 出力 さ れ た 行 の リスト を 返し ます 。 
text 内 の 段落 を 一つ だけ 折り返し を 行い 、 折り返し が 行わ れ た 段落 を 含む 一つ の 文字 列 を 返し ます 。 
この モジュール は マルチスレッド ( 別名 軽量 プロセス ( light - weight processes ) または タスク ( tasks )) に 用い られる 低 レベルプリミティブ を 提供 し ます -- グローバル データ 空間 を 共有 する マルチスレッド を 制御 し ます 。 
同期 の ため の 単純 な ロック ( 別名 mutexes または バイナリ セマフォ ( binary semaphores )) が 提供 さ れ て い ます 。 
この モジュール は オプション です 。 
Windows , Linux , SGI IRIX , Solaris 2 . x 、 そして 同じ よう な POSIX スレッド ( 別名 `` pthread '') 実装 の システム 上 で サポート さ れ ます 。 
thread を 使用 する こと の でき ない システム で は 、 
は この モジュール と 同じ インターフェース を 持ち 、 置き換え て 使用 する こと が でき ます 。 
定数 と 関数 は 以下 の よう に 定義 さ れ て い ます : 
スレッド 特有 の エラー で 送出 さ れ ます 。 
これ は ロック オブジェクト の タイプ です 。 
新しい スレッド を 開始 し て 、 その ID を 返し ます 。 
スレッド は 引数 リスト args ( タプル で なけれ ば なり ませ ん ) の 関数 function を 実行 し ます 。 
オプション 引数 kwargs は キーワード 引数 の 辞書 を 指定 し ます 。 関数 が 戻る とき 、 スレッド は 黙っ て 終了 し ます 。 
サブスレッド は この 関数 を 使っ て メインスレッド に 割り込み を かける こと が でき ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
SystemExit 例外 を 送出 し ます 。 
それ が 捕え られ ない とき は 、 黙っ て スレッド を 終了 さ せ ます 。 
新しい ロック オブジェクト を 返し ます 。 
ロック の メソッド は この 後 に 記述 さ れ ます 。 
ロック は 初期 状態 として アン ロック 状態 です 。 
現在 の スレッド の ` スレッド ID ' を 返し ます 。 
これ は 0 で ない 整数 です 。 
この 値 は 直接 の 意味 を 持っ て い ませ ん ; 例えば スレッド 特有 の データ の 辞書 に 索引 を つける ため の よう な 、 マジック クッキー として 意図 さ れ て い ます 。 
スレッド が 終了 し 、 他 の スレッド が 作ら れ た とき 、 スレッド ID は 再 利用 さ れる かも しれ ませ ん 。 
ロック オブジェクト は 次 の よう な メソッド を 持っ て い ます : 
オプション の 引数 なし で 使用 する と 、 この メソッド は 他 の スレッド が ロック し て いる か どう か に かかわら ず ロック を 獲得 し 、 None を 返し ます 。 
ただし 他 の スレッド が すでに ロック し て いる 場合 に は 解除 さ れる まで 待っ て から ロック を 獲得 し ます ( 同時に ロック を 獲得 できる スレッド は ひとつ だけ で あり 、 これ こそ が ロック の 存在 理由 です )。 
なお 、 引数 を 与え た 場合 、 ロック を 獲得 する と True 、 でき なかっ た とき に は False を 返し ます 。 
ロック を 解放 し ます 。 
その ロック は 既に 獲得 さ れ た もの で なけれ ば なり ませ ん が 、 しかし 同じ スレッド によって 獲得 さ れ た もの で ある 必要 は あり ませ ん 。 
ロック の 状態 を 返し ます : 同じ スレッド によって 獲得 さ れ た もの なら True 、 違う の なら False を 返し ます 。 
スレッド は 割り込み と 奇妙 な 相互 作用 を し ます : KeyboardInterrupt 例外 は 任意 の スレッド によって 受け取ら れ ます 。 
モジュール が 利用 可能 な とき 、 割り込み は 常に メインスレッド へ 行き ます 。 
) sys . exit () を 呼び出す 、 あるいは SystemExit 例外 を 送出 する こと は 、 exit () を 呼び出す こと と 同じ です 。 
I / O 待ち を ブロック する かも しれ ない 全て の 組込み 関数 が 、 他 の スレッド の 走行 を 許す わけ で は あり ませ ん 。 
( ほとんど の 一般 的 な もの ( time . sleep (), 
file . read (), select . select ()) は 期待 通り に 働き ます 。 ) 
ロック の acquire () メソッド に 割り込む こと は でき ませ ん -- KeyboardInterrupt 例外 は 、 ロック が 獲得 さ れ た 後 に 発生 し ます 。 
メインスレッド が 終了 し た とき 、 他 の スレッド が 生き残る か どう か は 、 システム が 定義 し ます 。 
ネイティブスレッド 実装 を 使う SGI IRIX で は 生き残り ます 。 
その他 の 多く の システム で は 、 try ... finally 節 を 実行 せ ず に 殺さ れ たり 、 デストラクタ を 実行 せ ず に 殺さ れ たり し ます 。 
メインスレッド が 終了 し た とき 、 それ の 通常 の クリーンアップ は 行なわ れ ず ( try ... finally 節 が 尊重 さ れる こと は 除き ます )、 標準 I / O ファイル は フラッシュ さ れ ませ ん 。 
この モジュール で は 、 高水準 の スレッドインタフェース を より 低 水準 な 
モジュール の 上 に 構築 し て い ます 。 
また 、 
現在 の アクティブ な Thread オブジェクト の 数 を 返し ます 。 この 数 は enumerate () の 返す リスト の 長 さ と 同じ です 。 
新しい 条件 変数 ( condition variable ) オブジェクト を 返す ファクトリ 関数 です 。 条件 変数 を 使う と 、 ある 複数 の スレッド を 別 の スレッド の 通知 が ある まで 待機 さ せ られ ます 。 
関数 を 呼び出し て いる 処理 の スレッド に 対応 する Thread オブジェクト を 返し ます 。 
関数 を 呼び出し て いる 処理 の スレッド が threading モジュール で 生成 し た もの で ない 場合 、 限定 的 な 機能 しか もた ない ダミースレッドオブジェクト を 返し ます 。 
現在 アクティブ な Thread オブジェクト 全て の リスト を 返し ます 。 リスト に は 、 デーモンスレッド ( daemonic thread )、 currentThread () の 生成 する ダミースレッドオブジェクト 、 そして 主 スレッド が 入り ます 。 
終了 し た スレッド と まだ 開始 し て い ない スレッド は 入り ませ ん 。 
新た な イベント オブジェクト を 返す ファクトリ 関数 です 。 
イベント は set () メソッド を 使う と True に 、 clear () メソッド を 使う と False に セット さ れる よう な フラグ を 管理 し ます 。 
wait () メソッド は 、 全て の フラグ が 真に なる まで ブロック する よう に なっ て い ます 。 
スレッドローカルデータ ( thread - local data ) を 表現 する ため の クラス です 。 
スレッドローカルデータ と は 、 値 が 各 スレッド 固有 に なる よう な データ です 。 
スレッドローカルデータ を 管理 する に は 、 local ( または local の サブ クラス ) の インスタンス を 作成 し て 、 その 属性 に 値 を 代入 し ます : 
インスタンス の 値 は スレッド ごと に 違っ た 値 に なり ます 。 詳細 と 例題 について は 、 _ threading _ local モジュール の ドキュメンテーション 文字 列 を 参照 し て ください 。 
新しい プリミティブロック ( primitive lock ) オブジェクト を 返す ファクトリ 関数 です 。 
スレッド が 一度 プリミティブロック を 獲得 する と 、 それ 以後 の ロック 獲得 の 試み は ロック が 解放 さ れる まで ブロック し ます 。 どの スレッド で も ロック を 解放 でき ます 。 
新しい セマフォ ( semaphore ) オブジェクト を 返す ファクトリ 関数 です 。 
セマフォ は 、 release () を 呼び出し た 数 から acquire () を 呼び出し た 数 を 引き 、 初期 値 を 足し た 値 を 表す カウンタ を 管理 し ます 。 acquire () メソッド は 、 カウンタ の 値 を 負 に せ ず に 処理 を 戻せる まで 必要 なら ば 処理 を ブロック し ます 。 
value を 指定 し ない 場合 、 デフォルト の 値 は 1 に なり ます 。 
新しい 有限 セマフォ ( bounded semaphore ) オブジェクト を 返す ファクトリ 関数 です 。 
有限 セマフォ は 、 現在 の 値 が 初期 値 を 超過 し ない よう チェック を 行い ます 。 
超過 を 起こし た 場合 、 ValueError を 送出 し ます 。 
たいてい の 場合 、 セマフォ は 限ら れ た 容量 の リソース を 保護 する ため に 使わ れる もの です 。 
従って 、 あまりに も 頻繁 な セマフォ の 解放 は バグ が 生じ て いる しるし です 。 
value を 指定 し ない 場合 、 デフォルト の 値 は 1 に なり ます 。 
処理 中 の スレッド を 表す クラス です 。 
この クラス は 制限 の ある 範囲 内 で 安全 に サブ クラス 化 でき ます 。 
指定 時間 経過 後 に 関数 を 実行 する スレッド です 。 
func は 各 スレッド の run () を 呼び出す 前 に スレッド の sys . settrace () に 渡さ れ ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
func は 各 スレッド の run () を 呼び出す 前 に スレッド の sys . settrace () に 渡さ れ ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
オブジェクト の 詳細 な インターフェース を 以下 に 説明 し ます 。 
この モジュール の おおまか な 設計 は Java の スレッドモデル に 基づい て い ます 。 と は いえ 、 Java が ロック と 条件 変数 を 全て の オブジェクト の 基本 的 な 挙動 に し て いる の に対し 、 Python で は これら を 別個 の オブジェクト に 分け て い ます 。 
Python の Thread クラス が サポート し て いる の は Java の Thread クラス の 挙動 の サブ セット に すぎ ませ ん ; 現状 で は 、 優先 度 ( priority ) や スレッドグループ が なく 、 スレッド の 破壊 ( destroy )、 中断 ( stop )、 一 時 停止 ( suspend )、 復帰 ( resume )、 割り込み ( interrupt ) は 行え ませ ん 。 
この モジュール で は 、 時刻 に関する さまざま な 関数 を 提供 し ます 。 
ほとんど の 関数 が 利用 可能 です が 、 全て の 関数 が 全て の プラットフォーム で 利用 可能 な わけ で は あり ませ ん 。 
この モジュール で 定義 さ れ て いる ほとんど の 関数 は 、 プラットフォーム 上 の 同名 の C ライブラリ 関数 を 呼び出し ます 。 
これら の 関数 に対する 意味 付け は プラットフォーム 間 で 異なる ため 、 プラットフォーム 提供 の ドキュメント を 読ん で おく と 便利 でしょ う 。 まず いくつ か の 用語 の 説明 と 慣習 について 整理 し ます 。 
エポック ( epoch ) 
は 、 時刻 の 計測 が はじまっ た 時点 の こと です 。 
その 年 の 1 月 1 日 の 午前 0 時 に `` エポック から の 経過 時間 '' が 0 に なる よう に 設定 さ れ ます 。 
Unix で は エポック は 1970 年 です 。 
エポック が どう なっ て いる か を 知る に は 、 gmtime ( 0 ) の 値 を 見る と よい でしょ う 。 
この モジュール の 中 の 関数 は 、 エポック 以前 あるいは 遠い 未来 の 日付 や 時刻 を 扱う こと が でき ませ ん 。 
将来 カットオフ ( 関数 が 正しく 日付 や 時刻 を 扱え なく なる ) が 起きる 時点 は 、 C ライブラリ によって 決まり ます 。 Unix で は カットオフ は 通常 2038 
2000 年 問題 ( Y 2 K ): 
Python は プラットフォーム の C ライブラリ に 依存 し て い ます 。 C ライブラリ は 日付 および 時刻 を エポック から の 経過 秒 で 表現 する ので 、 一般 的 に 2000 年 問題 を 持ち ませ ん 。 
時刻 を 表現 する struct _ time ( 下記 を 参照 し て ください ) を 入力 として 受け取る 関数 は 一般 的 に 4 桁 表記 の 西暦 年 を 要求 し ます 。 
こうして 、 PYTHONY 2 K を 空文字 列 で ない 文字 列 に 設定 する こと で 、 西暦 年 の 入力 が すべて 4 桁 の 西暦 年 で なけれ ば なら ない よう に する こと が でき ます 。 
2 桁 の 西暦 年 が 入力 さ れ た 場合 に は 、 POSIX または X / Open 標準 に従って 変換 さ れ ます : 69 - 99 の 西暦 年 は 1969 - 1999 と なり 、 0 - 68 の 西暦 年 は 2000 - 2068 に なり ます 。 100 - 1899 は 常に 不正 な 値 に なり ます 。 
この 仕様 は Python 1 . 5 . 2 ( a 2 ) から 新た に 追加 さ れ た 機能 で ある こと に 注意 し て ください ; それ 以前 の バージョン 、 すなわち Python 1 . 5 . 1 および 1 . 5 . 2 a 1 で は 、 1900 以下 の 年 に対して 1900 を 足し ます 。 
は 協定 世界 時 ( Coordinated Universal Time ) の こと です 
( 以前 は グリニッジ 標準時 
または GMT として 知ら れ て い まし た )。 
UTC の 頭文字 の 並び は 誤り で は なく 、 英 仏 の 妥協 による もの です 。 
DST は 夏時間 ( Daylight Saving Time ) 
の こと で 、 一 年 の うち 部分 的 に 1 時間 タイム ゾーン を 修正 する こと です 。 
DST の ルール は 不可思議 で ( 局所 的 な 法律 で 定め られ て い ます )、 年 ごと に 変わる こと も あり ます 。 
C ライブラリ は ローカル ルール を 記し た テーブル を 持っ て おり ( 柔軟 に 対応 する ため 、 たいてい は システム ファイル から 読み込ま れ ます )、 この 点 に関して は 唯一 の 真実 の 知識 の 源 です 。 
多く の 現 時刻 を 返す 関数 ( real - time functions ) の 精度 は 、 値 や 引数 を 表現 する の に 使う 単位 から 想像 さ れる より も 低い かも 知れ ませ ん 。 
例えば 、 ほとんど の Unix システム で 、 クロック の 一 刹那 ( ticks ) の 精度 は 1 秒 の 50 から 100 分の 1 に 過ぎ ませ ん 。 また 、 Mac で は 時刻 は 秒 きっかり の とき 以外 正確 で は あり ませ ん 。 
反対 に 、 time () および sleep () は Unix の 同等 の 関数 より まし な 精度 を 持っ て い ます : 時刻 は 浮動 小数点 で 表さ れ 、 time () は 可能 な かぎり 最も 正確 な 時刻 を ( Unix の gettimeofday () が あれ ば それ を 使っ て ) 返し ます 。 また sleep () に は ゼロ で ない 端数 を 与える こと が でき ます ( Unix の select () が あれ ば 、 それ を 使っ て 実装 し て い ます )。 
gmtime ()、 localtime ()、 strptime () が 返す 時刻 値 、 および asctime ()、 mktime ()、 strftime () に 与える 時刻 値 は どちら も 9 つ の 整数 から なる シーケンス です 。 
( 例えば 1993 ) 
[ 1 , 12 ] の 間 の 数 
[ 1 , 31 ] の 間 の 数 
[ 0 , 23 ] の 間 の 数 
[ 0 , 59 ] の 間 の 数 
[ 0 , 61 ] の 間 の 数 strftime () の 説明 に ある ( 1 ) を 読ん で 下さい 
[ 0 , 6 ] の 間 の 数 、 月曜 が 0 に なり ます 
[ 1 , 366 ] の 間 の 数 
0 , 1 または - 1 ; 以下 を 参照 し て ください 
C の 構造 体 と 違っ て 、 月 の 値 が 0 - 11 で なく 1 - 12 で ある こと に 注意 し て ください 。 
西暦 年 の 値 は 上 の '' 2000 年 問題 ( Y 2 K ) '' で 述べ た よう に 扱わ れ ます 。 
夏時間 フラグ を - 1 に し て mktime () に 渡す と 、 たいてい は 正確 な 夏時間 の 状態 を 実現 し ます 。 struct _ time を 引数 と する 関数 に 正しく ない 長 さ の struct _ time や 要素 の 型 が 正しく ない struct _ time を 与え た 場合 に は 、 TypeError が 送出 さ れ ます 。 
バージョン 2 . 2 で 変更 さ れ た 仕様 : 時刻 値 の 配列 は タプル から struct _ time に 変更 さ れ 、 それぞれ の フィールド に 属性 名 が つけ られ まし た 。 
この モジュール で は 以下 の 関数 と データ 型 を 定義 し ます : 
2 桁 の 西暦 年 を 使える か を 指定 する ブール 型 の 値 です 。 
標準 で は 真 です が 、 環境 変数 PYTHONY 2 K が 空文字 列 で ない 値 に 設定 さ れ て いる 場合 に は 偽 に なり ます 。 
実行 時 に 変更 する こと も でき ます 。 
ローカル の 夏時間 タイム ゾーン における UTC から の 時刻 オフセット で 、 西 に 行く ほど 増加 する 秒 で 表し た 値 です ( ほとんど の 西 ヨーロッパ で は 負 に なり 、 アメリカ で は 正 、 イギリス で は ゼロ に なり ます ) 。 
daylight が ゼロ で ない とき のみ 使用 し て ください 。 
gmtime () や localtime () が 返す 時刻 を 表現 する タプル 又は struct _ time を 、 ' Sun Jun 20 23 : 21 : 05 1993 ' といった 書式 の 24 文字 の 文字 列 に 変換 し ます 。 
t が 与え られ て い ない 場合 に は 、 localtime () が 返す 現在 の 時刻 が 使わ れ ます 。 asctime () は ロ ケール 情報 を 使い ませ ん 。 
注意 : 同名 の C の 関数 と 違っ て 、 末尾 に は 改行 文字 は あり ませ ん 。 
バージョン 2 . 1 で 変更 さ れ た 仕様 : tuple を 省略 できる よう に なり まし た 。 
Unix で は 、 現在 の プロセッサ 時間 秒 を 浮動 小数点 数 で 返し ます 。 
時刻 の 精度 および `` プロセッサ 時間 ( processor time )'' の 定義 そのもの は 同じ 名前 の C 関数 に 依存 し ます 。 
いずれ に せよ 、 この 関数 は Python の ベンチマーク や 計時 アルゴリズム に 使わ れ て い ます 。 
Windows で は 、 最初 に この 関数 が 呼び出さ れ て から の 経過 時間 を wall - clock 秒 で 返し ます 。 この 関数 は Win 32 関数 QueryPerformanceCounter () に 基づい て い て 、 その 精度 は 通常 1 マイクロ 秒 以下 です 。 
エポック から の 経過 秒 数 で 表現 さ れ た 時刻 を 、 ローカル の 時刻 を 表現 する 文字 列 に 変換 し ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : secs が None の 場合 に 現在 時刻 を 使う よう に なり まし た 
DST タイム ゾーン が 定義 さ れ て いる 場合 ゼロ で ない 値 に なり ます 。 
エポック から の 経過 時間 で 表現 さ れ た 時刻 を 、 UTC における struct _ time に 変換 し ます 。 この とき dst フラグ は 常に ゼロ として 扱わ れ ます 。 
secs を 指定 し ない 、 または None を 指定 し た 場合 、 time () が 返す 値 を 現在 の 時刻 として 使い ます 。 
秒 の 端数 は 無視 さ れ ます 。 
struct _ time の レイアウト について は 上 を 参照 し て ください 。 
バージョン 2 . 1 で 変更 さ れ た 仕様 : secs を 省略 できる よう に なり まし た 
gmtime () に 似 て い ます が 、 ローカル タイム に 変換 し ます 。 
secs を 指定 し ない 、 または None を 指定 し た 場合 、 time () が 返す 値 を 現在 の 時刻 として 使い ます 。 
現在 の 時刻 に DST が 適用 さ れる 場合 、 dst フラグ は 1 に 設定 さ れ ます 。 バージョン 2 . 1 で 変更 さ れ た 仕様 : secs を 省略 できる よう に なり まし た 。 
localtime () の 逆 を 行う 関数 です 。 
引数 は struct _ time か 完全 な 9 つ の 要素 全て に 値 の 入っ た タプル ( dst フラグ も 必要 です ; 現在 の 時刻 に DST が 適用 さ れる か 不明 の 場合 に は - 1 を 使っ て ください ) で 、 UTC で は なく ローカル の 時刻 を 指定 し ます 。 
time () と の 互換 性 の ため に 浮動 小数点 数 の 値 を 返し ます 。 
入力 の 値 が 正しい 時刻 で 表現 でき ない 場合 、 例外 OverflowError または ValueError が 送出 さ れ ます ( どちら が 送出 さ れる か は Python および その 下 に ある C ライブラリ の どちら にとって 無効 な 値 が 入力 さ れ た か で 決まり ます ) 。 
この 関数 で 生成 できる 最も 昔 の 時刻 値 は プラットフォーム に 依存 し ます 。 
与え られ た 秒 数 の 間 実行 を 停止 し ます 。 
また 、 システム が 他 の 処理 を スケジューリング する ため に 、 実行 停止 時間 が 要求 し た 時間 より も 多少 長い 時間 に なる こと も あり ます 。 
gmtime () や localtime () が 返す 時刻 値 タプル 又は struct _ time を 、 format で 指定 し た 文字 列 形式 に 変換 し ます 。 
t が 与え られ て い ない 場合 、 localtime () が 返す 現在 の 時刻 が 使わ れ ます 。 format は 文字 列 で なく て は なり ませ ん 。 
t の いずれ か の フィールド が 許容 範囲 外 の 数値 で あっ た 場合 、 ValueError を 送出 し ます 。 バージョン 2 . 1 で 変更 さ れ た 仕様 : t を 省略 できる よう に なり まし た 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : t の フィールド 値 が 許容 範囲 外 の 値 の 場合 に ValueError を 送出 する よう に なり まし た 
format 文字 列 に は 以下 の 指示 語 ( directive ) を 埋め込む こと が でき ます 。 これら は フィールド 長 や 精度 の オプション を 付け ず に 表さ れ 、 strftime () の 結果 の 対応 する 文字 列 と 入れ替え られ ます : 
ロ ケール における 省略 形 の 曜日 名 。 
ロ ケール における 省略 なし の 曜日 名 。 
ロ ケール における 省略 形 の 月 名 。 
ロ ケール における 省略 なし の 月 名 。 
ロ ケール における 適切 な 日付 および 時刻 表現 。 
月 の 始め から 何 日 目 か を 表す 10 進数 [ 01 , 31 ]。 % H 
( 24 時間 計 で の ) 時 を 表す 10 進数 [ 00 , 23 ]。 
( 12 時間 計 で の ) 時 を 表す 10 進数 [ 01 , 12 ]。 
年 の 初め から 何 日 目 か を 表す 10 進数 [ 001 , 366 ]。 
月 を 表す 10 進数 [ 01 , 12 ]。 
分 を 表す 10 進数 [ 00 , 59 ]。 
ロ ケール における AM または PM に 対応 する 文字 列 。 
秒 を 表す 10 進数 [ 00 , 61 ]。 
年 の 初め から 何 週 目 か ( 日曜 を 週 の 始まり と し ます ) を 表す 10 進数 [ 00 , 53 ]。 
年 が 明け て から 最初 の 日曜日 まで の 全て の 曜日 は 0 週 目 に 属する と 見なさ れ ます 。 
曜日 を 表す 10 進数 [ 0 ( 日曜日 ), 6 ]。 
年 の 初め から 何 週 目 か ( 日曜 を 週 の 始まり と し ます ) を 表す 10 進数 [ 00 , 53 ]。 
年 が 明け て から 最初 の 月曜日 まで の 全て の 曜日 は 0 週 目 に 属する と 見なさ れ ます 。 
ロ ケール における 適切 な 日付 の 表現 。 
ロ ケール における 適切 な 時刻 の 表現 。 
上 2 桁 なし の 西暦 年 を 表す 10 進数 [ 00 , 99 ]。 
上 2 桁 付き の 西暦 年 を 表す 10 進数 。 
タイム ゾーン の 名前 ( タイム ゾーン が ない 場合 に は 空文字 列 )。 
文字 "%" 自体 の 表現 。 
注意 : 
strptime () 関数 で 使う 場合 、 % p ディレクティブ が 出力 結果 の 時刻 フィールド に 影響 を 及ぼす の は 、 時刻 を 解釈 する ため に % I を 使っ た とき のみ です 。 
値 の 幅 は 間違い なく 0 to 61 です ; これ は うるう 秒 と 、 ( ごく 稀 です が ) 2 重 の うるう 秒 の ため の もの です 。 
strptime () 関数 で 使う 場合 、 % U および % W を 計算 に 使う の は 曜日 と 年 を 指定 し た とき だけ です 。 
以下 に RFC 2822 インターネット 電子 メール 標準 で 定義 さ れ て いる 日付 表現 と 互換 の 書式 の 例 を 示し ます 。 
時刻 を 表現 する 文字 列 を フォーマット に従って 解釈 し ます 。 
返さ れる 値 は gmtime () や localtime () が 返す よう な struct _ time です 。 
format パラメタ は strftime () で 使う もの と 同じ 指示 語 を 使い ます ; この パラメタ の 値 は デフォルト で は "% a % b % d % H :% M :% S % Y " で 、 ctime () が 返す フォーマット に 一致 し ます 。 
string が format に従って 解釈 でき なかっ た 場合 、 例外 ValueError が 送出 さ れ ます 。 
解析 しよ う と する 文字 列 が 解析 後 に 余分 な データ を 持っ て い た 場合 、 ValueError が 送出 さ れ ます 。 
欠落 し た データ は デフォルト の 値 で 埋め られ 、 その 値 は ( 1900 , 1 , 1 , 0 , 0 , 0 , 0 , 1 , - 1 ) です 。 % Z 指示 語 へ の サポート は tzname に 収め られ て いる 値 と daylight が 真 か どう か で 決め られ ます 。 
この ため 、 常に 既知 の ( かつ 夏時間 で ない と 考え られ て いる ) UTC や GMT を 認識 する 時 以外 は プラットフォーム 固有 の 動作 に なり ます 。 
gmtime ()、 localtime () および strptime () が 返す 時刻 値 シーケンス の タイプ です 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
時刻 を 浮動 小数点 数 で 返し ます 。 
単位 は UTC における エポック から の 秒 数 です 。 
時刻 は 常に 浮動 小数点 で 返さ れ ます が 、 全て の システム が 1 秒 より 高い 精度 で 時刻 を 提供 する と は 限ら ない ので 注意 し て ください 。 
この 関数 が 返す 値 は 通常 減少 し て いく こと は あり ませ ん が 、 この 関数 を 2 回 呼び出し 、 呼び出し の 間 に システム クロック の 時刻 を 巻き 戻し て 設定 し た 場合 に は 、 以前 の 呼び出し より も 低い 値 が 返る こと も あり ます 。 
( DST で ない ) ローカル タイム ゾーン の UTC から の 時刻 オフセット で 、 西 に 行く ほど 増加 する 秒 で 表し た 値 です ( ほとんど の 西 ヨーロッパ で は 負 に なり 、 アメリカ で は 正 、 イギリス で は ゼロ に なり ます ) 。 
二つ の 文字 列 から なる タプル です 。 最初 の 要素 は DST で ない ローカル の タイム ゾーン 名 です 。 
利用 できる システム : Unix 。 
注意 : 多く の 場合 、 環境 変数 TZ を 変更 する と 、 tzset を 呼ば ない 限り localtime の よう な 関数 の 出力 に 影響 を 及ぼす ため 、 値 が 信頼 でき なく なっ て しまい ます 。 TZ 環境 変数 に は 空白 文字 を 含め て は なり ませ ん 。 
環境 変数 TZ の 標準 的 な 書式 は 以下 です :( 分かり やすい よう に 空白 を 入れ て い ます ) 
各 値 は 以下 の よう に なっ て い ます : 
std と dst 
三 文字 または それ 以上 の 英数字 で 、 タイム ゾーン の 略称 を 与え ます 。 
この 値 は time . tzname に なり ます 。 
オフセット は 形式 : hh [: mm [: ss ]] を とり ます 。 この 表現 は 、 UTC 時刻 に する ため に ローカル な 時間 に 加算 する 必要 の ある 時間 値 を 示し ます 。 
'-' が 先頭 に つく 場合 、 その タイム ゾーン は 本 子午線 ( Prime Meridian ) より 東側 に あり ます ; それ 以外 の 場合 は 本 子午線 の 西側 です 。 
オフセット が dst の 後ろ に 続か ない 場合 、 夏時間 は 標準時 より 一 時間 先行 し て いる もの と 仮定 し ます 。 
いつ DST に 移動 し 、 DST から 戻っ て くる か を 示し ます 。 
開始 および 終了 日時 の 形式 は 以下 の いずれ か です : 
ユリウス 日 ( Julian day ) n ( 1 = n = 365 ) を 表し ます 。 
うるう 日 は 計算 に 含め られ ない ため 、 2 月 28 日 は 常に 59 で 、 3 月 1 日 は 60 に なり ます 。 
ゼロ から 始まる ユリウス 日 ( 0 = n = 365 ) です 。 
うるう 日 は 計算 に 含め られる ため 、 2 月 29 日 を 参照 する こと が でき ます 。 
m 月 の 第 n 週 における d 番目 の 日 ( 0 = d = 6 , 1 = n = 5 , 1 = m = 12 ) を 表し ます 。 週 5 は 月 における 最終 週 の d 番目 の 日 を 表し 、 第 4 週 か 第 5 週 の どちら か に なり ます 。 
週 1 は 日 d が 最初 に 現れる 日 を 指し ます 。 
日 0 は 日曜日 です 。 
時間 は オフセット と 同じ で 、 先頭 に 符号 ('-' や '+') を 付け て は いけ ない ところ が 違い ます 。 
時刻 が 指定 さ れ て い なけれ ば 、 デフォルト の 値 02 : 00 : 00 に なり ます 。 
多く の Unix システム (* BSD , Linux , Solaris , および Darwin を 含む ) で は 、 システム の zoneinfo ( 
tzfile ( 5 )) データベース を 使っ た ほう が 、 タイム ゾーン ごと の 規則 を 指定 する 上 で 便利 です 。 
これ を 行う に は 、 必要 な タイムゾーンデータファイル へ の パス を システム の ' zoneinfo ' タイムゾーンデータベース から の 相対 で 表し た 値 を 環境 変数 TZ に 設定 し ます 。 システム の ' zoneinfo ' は 通常 / usr / share / zoneinfo に あり ます 。 
例えば 、 ' US / Eastern '、 ' Australia / Melbourne '、 ' Egypt ' ない し ' Europe / Amsterdam ' と 指定 し ます 。 
日付 と 時刻 に対する 、 より オブジェクト 指向 の インタフェース です 。 
ロ ケール の 設定 は time モジュール の いくつ か の 関数 が 返す 値 に 影響 を およぼす こと が あり ます 。 
一般 的 な カレンダー 関連 の 関数 。 
しかし ここ で 実現 し たい 時間 及び 分 オフセット へ の 展開 を 行っ て くれる % Z エスケープ は 全て の ANSI C ライブラリ で サポート さ れ て いる わけ で は あり ませ ん 。 
また 、 オリジナル の 1982 年 に 提出 さ れ た RFC 822 標準 は 西暦 年 の 表現 を 2 桁 と 要求 し て い ます (% Y で なく % y )。 しかし 実際 に は 2000 年 に なる だいぶ 以前 から 4 桁 の 西暦 年 表現 に 移行 し て い ます 。 
4 桁 の 西暦 年 表現 は RFC 2822 において 義務付け られ 、 伴っ て RFC 822 で の 取り決め は 撤廃 さ れ まし た 。 
この モジュール は Python の 小さな コード 断片 の 時間 を 簡単 に 計測 する 手段 を 提供 し ます 。 インターフェース は コマンド ライン と メソッド として 呼び出し 可能 な もの の 両方 を 備え て い ます 。 
また 、 この モジュール は 実行 時間 の 計測 にあたり 陥り がち な 落し穴 に対する 様々 な 対策 が 取ら れ て い ます 。 
詳しく は 、 O ' Reilly の Python Cookbook 、 `` Algorithms '' の 章 に ある TimPeters が 書い た 解説 を 参照 し て ください 。 この モジュール に は 次 の パブリック ・ クラス が 定義 さ れ て い ます 。 
クラス Timer 
小さな コード 断片 の 実行 時間 計測 を おこなう ため の クラス です 。 コンス トラクタ は 引数 として 、 時間 計測 の 対象 と なる 文 、 セットアップ に 使用 する 追加 の 文 、 タイマ 関数 を 受け取り ます 。 
文 の デフォルト 値 は 両方 とも ' pass ' で 、 タイマ 関数 は プラットフォーム 依存 ( モジュール の docstring を 参照 ) です 。 
文 に は 複数 行 の 文字 列 リテラル を 含ま ない 限り 、 改行 を 入れる こと も 可能 です 。 最初 の 文 の 実行 時間 を 計測 に は timeit () メソッド を 使用 し ます 。 
また timeit () を 複数 回 呼び出し 、 その 結果 の リスト を 返す repeat () メソッド も 用意 さ れ て い ます 。 
計測 対象 コード の トレース バック を 出力 する ため の ヘルパー 。 利用 例 : 
t = Timer (...) # try / except の 外側 で try : t . timeit (...) # または t . repeat (...) except : t . print _ exc () 
timeit () を 複数 回 呼び出し ます 。 
この メソッド は timeit () を 複数 回 呼び出し 、 その 結果 を リスト で 返す ユーティリティ 関数 です 。 
最初 の 引数 に は timeit () を 呼び出す 回数 を 指定 し ます 。 
2 番目 の 引数 は timeit () へ 引数 として 渡す 数値 です 。 
注意 : 結果 の ベクトル から 平均 値 や 標準 偏差 を 計算 し て 出力 さ せ たい と 思う かも しれ ませ ん が 、 それ は あまり 意味 が あり ませ ん 。 
したがって 、 結果 の うち min () だけ が 見る べき 値 と なり ます 。 
この 点 を 押さえ た 上 で 、 統計 的 な 分析 より も 常識 的 な 判断 で 結果 を 見る よう に し て ください 。 
メイン 文 の 実行 時間 を number 回 取得 し ます 。 
この メソッド は セットアップ 文 を 1 回 だけ 実行 し 、 メイン 文 を 指定 回数 実行 する の に かかっ た 秒 数 を 浮動 小数 で 返し ます 。 
引数 は ループ を 何 回 実行 する か の 指定 で 、 デフォルト 値 は 100 万 回 です 。 
メイン 文 、 セットアップ 文 、 タイマ 関数 は コンス トラクタ で 指定 さ れ た もの を 使用 し ます 。 
注意 : デフォルト で は 、 timeit () は 時間 計測 中 、 一時 的 に ガーベッジコレクション を 切り ます 。 
この アプローチ の 利点 は 、 個別 の 測定 結果 を 比較 し やすく なる こと です 。 
不利 な 点 は 、 GC が 測定 し て いる 関数 の パフォーマンス の 重要 な 一部 かも しれ ない という こと です 。 
そうした 場合 、 setup 文字 列 の 最初 の 文 で GC を 再度 有効 に する こと が でき ます 。 
例えば : 
この モジュール は 解析 木の葉 ノード ( 終端 記号 ) の 数値 を 表す 定数 を 提供 し ます 。 
言語 の 文法 の コンテキスト における 名前 の 定義 について は 、 Python ディストリビューション の ファイル Grammar / Grammar を 参照 し て ください 。 
名前 が マップ する 特定 の 数値 は 、 Python の バージョン 間 で 変わり ます 。 この モジュール は 一つ の データ オブジェクト と いくつ か の 関数 も 提供 し ます 。 
関数 は Python の C ヘッダ ファイル の 定義 を 反映 し ます 。 
辞書 は この モジュール で 定義 さ れ て いる 定数 の 数値 を 名前 の 文字 列 へ マップ し 、 より 人 が 読み やすい よう に 解析 木 を 表現 し ます 。 
終端 トー クン の 値 に対して 真 を 返し ます 。 
非終端 トー クン の 値 に対して 真 を 返し ます 。 
x が 入力 の 終わり を 示す マーカー なら ば 、 真 を 返し ます 。 
tokenize モジュール で は 、 Python で 実装 さ れ た Python ソース コード の 字句 解析 器 を 提供 し ます 。 
generate _ tokens () ジェネレータ は 一つ の 引数 readline を 必要 と し ます 。 この 引数 は 呼び出し 可能 オブジェクト で 、 組み込み ファイル オブジェクト における readline () メソッド と 同じ インタフェース を 提供 し て い なけれ ば なり ませ ん ( 2 . 3 . 9 節 を 参照 し て ください )。 
後方 互換 性 の ため に 古い エントリ ポイント が 残さ れ て い ます : 
tokenize () 関数 は 二つ の パラメータ を 取り ます : 一つ は 入力 ストリーム を 表し 、 もう 一つ は tokenize () の ため の 出力 メカニズム を 与え ます 。 最初 の パラメータ 、 readline は 、 組み込み ファイル オブジェクト の readline () メソッド と 同じ インタフェイス を 提供 する 呼び出し 可能 オブジェクト で なけれ ば なり ませ ん ( 2 . 3 . 9 節 を 参照 )。 
この 関数 は 呼び出し の たび に 入力 内 の 一行 を 文字 列 で 返さ なけれ ば なり ませ ん 。 二 番目 の パラメータ tokeneater も 呼び出し 可能 オブジェクト で なけれ ば なり ませ ん 。 
この 関数 は 各 トーク ン に対して 一 度 だけ 呼び出さ れ 、 generate _ tokens () が 生成 する タプル に 対応 する 5 つ の 引数 を とり ます 。 
モジュール の 全て の 定数 は tokenize で も 公開 さ れ て おり 、 これ に 加え 、 以下 の 二つ の トー クン 値 が tokenize () の tokeneater 関数 に 渡さ れる 可能 性 が あり ます : 
コメント で ある こと を 表す ため に 使わ れる トー クン 値 です 。 
終わり で は ない 改行 を 表す ため に 使わ れる トー クン 値 。 
NEWLINE トー クン は Python コード の 論理 行 の 終わり を 表し ます 。 NL トーク ン は コード の 論理 行 が 複数 の 物理 行 にわたって 続い て いる とき に 作ら れ ます 。 
この モジュール は Python プログラム の スタック トレース を 抽出 し 、 書式 を 整え 、 表示 する ため の 標準 インターフェース を 提供 し ます 。 
モジュール が スタック トレース を 表示 する とき 、 Python インタープリタ の 動作 を 正確 に 模倣 し ます 。 
インタープリタ の `` ラッパー '' の 場合 の よう に 、 プログラム の 制御 の 元 で スタック と レース を 表示 し たい と 思っ た とき に 役に立ち ます 。 モジュール は traceback オブジェクト を 使い ます -- これ は 変数 sys . exc _ traceback ( 非 推奨 ) と sys . last _ traceback に 保存 さ れ 、 sys . exc _ info () から 三 番目 の 項目 として 返さ れる オブジェクト 型 です 。 
モジュール は 次 の 関数 を 定義 し ます : 
traceback から limit まで スタック トレース 項目 を 出力 し ます 。 
limit が 省略 さ れる か None の 場合 は 、 すべて の 項目 が 表示 さ れ ます 。 file が 省略 さ れる か None の 場合 は 、 sys . stderr へ 出力 さ れ ます 。 
それ 以外 の 場合 は 、 出力 を 受ける ため の オープン し た ファイル または ファイル に 類似 し た オブジェクト で ある べき です 。 print _ exception 
例外 情報 と traceback から limit まで スタック トレース 項目 を file へ 出力 し ます 。 
これ は print _ exception ( sys . exc _ type , sys . exc _ value , sys . exc _ traceback , limit , file ) の ため の 省略 表現 です 。 
( 非 推奨 の 変数 を 使う 代わり に スレッドセーフ な 方法 で 同じ 情報 を 引き出す ため に 、 実際 に は sys . exc _ info () を 使い ます 。 
これ は 、 print _ exc ( limit ) に 似 て い ます が 、 ファイル に 出力 する かわり に 文字 列 を 返し ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 print _ last 
これ は print _ exception ( sys . last _ type , sys . last _ value , sys . last _ traceback , limit , file ) の 省略 表現 です 。 
この 関数 は 呼び出さ れ た 時点 から の スタック トレース を 出力 し ます 。 
オプション の f 引数 は 代わり の 最初 の スタック フレーム を 指定 する ため に 使え ます 。 
print _ exception () に 付い て 言え ば 、 オプション の limit と file 引数 は 同じ 意味 を 持ち ます 。 
トレースバックオブジェクト traceback から limit まで 取り出さ れ た `` 前 処理 済み '' スタック トレース 項目 の リスト を 返し ます 。 
スタック トレース の 代わり の 書式 設定 を 行う ため に 役に立ち ます 。 
limit が 省略 さ れる か None の 場合 は 、 すべて の 項目 が 取り出さ れ ます 。 
`` 前 処理 済み '' スタック トレース 項目 と は 四つ の 部分 から なる ( filename , line number , function name , text ) で 、 スタック トレース に対して 通常 出力 さ れる 情報 を 表し て い ます 。 
text は 前 と 後ろ に 付い て いる 空白 を 取り除い た 文字 列 です 。 ソース が 使え ない 場合 は None です 。 
現在 の スタック フレーム から 生 の トレース バック を 取り出し ます 。 
戻り 値 は extract _ tb () と 同じ 形式 です 。 
print _ stack () について 言え ば 、 オプション の f と limit 引数 は 同じ 意味 を 持ち ます 。 
extract _ tb () または extract _ stack () が 返す タプル の リスト が 与え られる と 、 出力 の 準備 を 整え た 文字 列 の リスト を 返し ます 。 
結果 として 生じる リスト の 中 の 各 文字 列 は 、 引数 リスト の 中 の 同じ インデックス の 要素 に 対応 し ます 。 
各 文字 列 は 末尾 に 改行 が 付い て い ます 。 その 上 、 ソース テキスト 行 が None で ない それら の 要素 に対して は 、 文字 列 は 内部 に 改行 を 含ん で いる かも しれ ませ ん 。 
トレース バック の 例外 部分 の 書式 を 設定 し ます 。 
引数 は sys . last _ type と sys . last _ value の よう な 例外 の 型 と 値 です 。 
戻り 値 は それぞれ が 改行 で 終わっ て いる 文字 列 の リスト です 。 
通常 、 リスト は 一つ の 文字 列 を 含ん で い ます 。 しかし 、 SyntaxError 例外 に対して は 、 ( 出力 さ れる とき に ) 構文 エラー が 起き た 場所 について の 詳細 な 情報 を 示す 行 を いくつ か 含ん で い ます 。 
どの 例外 が 起き た の か を 示す メッセージ は 、 常に リスト の 最後 の 文字 列 です 。 
スタック トレース と 例外 情報 の 書式 を 設定 し ます 。 
引数 は print _ exception () の 対応 する 引数 と 同じ 意味 を 持ち ます 。 
戻り 値 は 文字 列 の リスト で 、 それぞれ の 文字 列 は 改行 で 終わり 、 その いくつ か は 内部 に 改行 を 含み ます 。 
これら の 行 が 連結 さ れ て 出力 さ れる 場合 は 、 厳密 に print _ exception () と 同じ テキスト が 出力 さ れ ます 。 
format _ list ( extract _ tb ( tb , limit )) の 省略 表現 。 
format _ list ( extract _ stack ( f , limit )) の 省略 表現 。 
この 関数 は トレースバックオブジェクト に 設定 さ れ た 現在 の 行 番号 を かえし ます 。 
この 関数 は 必要 でし た 。 なぜなら 、 - O フラグ が Python へ 渡さ れ た とき 、 Python の 2 . 3 より 前 の バージョン で は 
tb . tb _ lineno が 正しく 更新 さ れ なかっ た から です 。 
この 関数 は 2 . 3 以降 の バージョン で は 役に立ち ませ ん 。 
tty モジュール は 端末 を cbreak および raw モード に する ため の 関数 を 定義 し て い ます 。 この モジュール は 
モジュール を 必要 と する ため 、 Unix で しか 動作 し ませ ん 。 tty モジュール で は 、 以下 の 関数 を 定義 し て い ます : 
ファイル 記述 子 fd の モード を raw モード に 変え ます 。 
when を 省略 する と 標準 の 値 は termios . TCSAFLUSH に なり 、 termios . tcsetattr () に 渡さ れ ます 。 
ファイル 記述 子 fd の モード を cbreak モード に 変え ます 。 
参考 : termios 
端末 制御 操作 で 便利 な 定数 群 。 . 
turtle モジュール は オブジェクト 指向 と 手続き 指向 の 両方 の 方法 で タートルグラフィックス・プリミティブ を 提供 し ます 。 
角度 を 計る 単位 を 度 に し ます 。 
角度 を 計る 単位 を ラジアン に し ます 。 
スクリーン を 消去 し 、 ペン を 中心 に 持っ て 行き 、 変数 を デフォルト 値 に 設定 し ます 。 
スクリーン を 消去 し ます 。 
トレース を on / off に し ます ( フラグ が 真 か どう か に 応じ て )。 
トレース と は 、 線 に 沿っ て 矢印 の アニメーション が 付き 、 線 が より ゆっくり と 引か れる こと を 意味 し ます 。 
distance ステップ だけ 前 に 進み ます 。 
distance ステップ だけ 後ろ に 進み ます 。 
angle 単位 だけ 左 に 回り ます 。 
単位 の デフォルト は 度 です が 、 degrees () と radians () 関数 を 使っ て 設定 でき ます 。 
angle 単位 だけ 右 に 回り ます 。 
ペン を 上げ ます -- 線 を 引く こと を 止め ます 。 
ペン を 下げ ます -- 移動 し た とき に 線 を 引き ます 。 
線 幅 を width に 設定 し ます 。 
ペン の 色 を 設定 し ます 。 
最初 の 形式 で は 、 色 は 文字 列 として Tk の 色 の 仕様 の 通り に 指定 さ れ ます 。 
二 番目 の 形式 は 色 を RGB 値 ( それぞれ は 範囲 [ 0 .. 1 ]) の タプル として 指定 し ます 。 
三 番目 の 形式 で は 、 色 は 三つ に 別れ た パラメータ として RGB 値 ( それぞれ は 範囲 [ 0 .. 1 ]) を 与え て 指定 し て い ます 。 
現在 の ペン の 位置 に text を 書き込み ます 。 
move が 真 なら ば 、 ペン は テキスト の 右 下 の 角 へ 移動 し ます 。 
デフォルト で は 、 move は 偽 です 。 
完全 な 仕様 は かなり 複雑 です が 、 推奨 する 使い方 は : 塗りつぶし たい 経路 を 描く 前 に fill ( 1 ) を 呼び出し 、 経路 を 描き 終え た とき に fill ( 0 ) を 呼び出し ます 。 
extent は 円 の どの 部分 を 描く か を 決定 し ます : 与え られ なけれ ば 、 デフォルト で 完全 な 円 に なり ます 。 
extent が 完全 な 円 で ある 場合 は 、 弧 の 一つ の 端点 は 、 現在 の ペン の 位置 です 。 
radius が 正 の 場合 、 弧 は 反 時計 回り に 描か れ ます 。 
そう で なけれ ば 、 時計 回り です 。 
座標 x , y へ 移動 し ます 。 
座標 は 二つ の 別個 の 引数 か 、 2 - タプル の どちら か で 指定 する こと が でき ます 。 
この モジュール は from math import * も 実行 し ます 。 従って 、 タートル グラフィックス の ため に 役に立つ 追加 の 定数 と 関数 について は 、 
モジュール の ドキュメント を 参照 し て ください 。 
モジュール を ちょっと ばかり 試し て い ます 。 
この モジュール によって 捕捉 さ れ た あらゆる エラー 対し て 発生 し た 例外 。 
例 として 、 demo () 関数 の コード を 参照 し て ください 。 この モジュール は 次 の クラス を 定義 し ます : 
クラス Pen 
ペン を 定義 し ます 。 
上記 の すべて の 関数 は 与え られ た ペン の メソッド として 呼び出さ れ ます 。 
この コンス トラクタ は 線 を 描く キャンバス を 自動的 に 作成 し ます 。 
クラス RawPen 
キャンバス canvas に 描く ペン を 定義 し ます 。 
これ は `` 実際 の '' プログラム で グラフィックス を 作成 する ため に モジュール を 使い たい 場合 に 役に立ち ます 。 
この モジュール は 標準 の Python インタプリタ で 使わ れ て いる オブジェクト の 型 について 、 名前 を 定義 し て い ます ( 拡張 モジュール で 定義 さ れ て いる 型 を 除く )。 
この モジュール は 以下 に 列挙 し て いる 以外 の 名前 を エクスポート し ない ので 、 " from types import *" の よう に 使っ て も 安全 です 。 
この モジュール の 将来 の バージョン で 追加 さ れる 名前 は 、 " Type " で 終わる 予定 です 。 関数 で の 典型 的 な 利用 方法 は 、 以下 の よう に 引数 の 型 によって 異なる 動作 を する 場合 です : 
Python 2 . 2 以降 で は 、 int () や str () の よう な ファクトリ 関数 は 、 型 の 名前 と なり まし た ので 、 types を 使用 する 必要 は なくなり まし た 。 
上記 の サンプル は 、 以下 の よう に 記述 する 事 が 推奨 さ れ て い ます 。 
この モジュール は 以下 の 名前 を 定義 し て い ます 。 
None の 型 です 。 
bool の True と False の 型 です 。 これ は 組み込み 関数 の bool () の エイリアス です 。 
整数 の 型 です ( e . g . 1 )。 
長 整数 の 型 です ( e . g . 1 L )。 
浮動 小数点 数 の 型 です ( e . g . 1 . 0 )。 
複素数 の 型 です ( e . g . 1 . 0 j )。 
Python が 複素数 の サポート なし で コンパイル さ れ て い た 場合 に は 定義 さ れ ませ ん 。 
文字 列 の 型 です ( e . g . ' Spam ')。 
Unicode 文字 列 の 型 です ( e . g . u ' Spam ')。 
Python が ユニ コード の サポート なし で コンパイル さ れ て い た 場合 に は 定義 さ れ ませ ん 。 
タプル の 型 です ( e . g . ( 1 , 2 , 3 , ' Spam '))。 
リスト の 型 です ( e . g . [ 0 , 1 , 2 , 3 ])。 
辞書 の 型 です ( e . g . {' Bacon ': 1 , ' Ham ': 0 })。 
DictType の 別名 です 。 
ユーザー 定義 の 関数 または lambda の 型 です 。 
FunctionType の 別名 です 。 
ジェネレータ 関数 の 呼び出し によって 生成 さ れ た イテレータオブジェクト の 型 です 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
ユーザー 定義 の クラス の 型 です 。 
ユーザー 定義 の クラス の インスタンス の 型 です 。 
ユーザー 定義 の クラス の インスタンス の メソッド の 型 です 。 
MethodType の 別名 です 。 
len () や sys . exit () の よう な 組み込み 関数 の 型 です 。 
BuiltinFunction の 別名 です 。 
モジュール の 型 です 。 
sys . stdout の よう な open さ れ た ファイル オブジェクト の 型 です 。 
Ellipsis の 型 です 。 
sys . exc _ traceback に 含ま れる よう な トレースバックオブジェクト の 型 です 。 
フレーム オブジェクト の 型 です 。 トレースバックオブジェクト tb の tb . tb _ frame など です 。 
関数 によって 作ら れる バッファ オブジェクト の 型 です 。 
文字 列 型 の チェック を 簡単 に する ため の StringType と UnicodeType を 含む シーケンス です 。 
UnicodeType は 実行 中 の 版 の Python に 含ま れ て いる 場合 に だけ 含ま れる ので 、 2 つ の 文字 列 型 の シーケンス を 使う より これ を 使う 方 が 移植 性 が 高く なり ます 。 
例 : isinstance ( s , types . StringTypes ). バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
この モジュール は 、 全て の Unicode 文字 の 属性 を 定義 し て いる Unicode 文字 データベース へ の アクセス を 提供 し ます 。 
この データベース 内 の データ は 、 ftp :// ftp . unicode . org / で 公開 さ れ て いる UnicodeData . txt ファイル の バージョン 3 . 2 . 0 に 基づい て い ます 。 この モジュール は 、 UnicodeData ファイル フォーマット 3 . 2 . 0 ( http :// www . unicode . org / Public / UNIDATA / UnicodeData . html を 参照 ) で 定義 さ れ て いる もの と 、 同じ 名前 と 記号 を 使い ます 。 
この モジュール で 定義 さ れ て いる 関数 は 、 以下 の とおり です 。 
名前 に 対応 する 文字 を 探し ます 。 
その 名前 の 文字 が 見 つ かっ た 場合 、 その Unicode 文字 が 返さ れ ます 。 
見つから なかっ た 場合 に は 、 KeyError を 発生 さ せ ます 。 
Unicode 文字 unichr に 付い て いる 名前 を 、 文字 列 で 返し ます 。 
名前 が 定義 さ れ て い ない 場合 に は default が 返さ れ ます が 、 この 引数 が 与え られ て い なけれ ば ValueError を 発生 さ せ ます 。 
Unicode 文字 unichr に 割り当て られ て いる 十 進数 を 、 整数 で 返し ます 。 
この 値 が 定義 さ れ て い ない 場合 に は default が 返さ れ ます が 、 この 引数 が 与え られ て い なけれ ば ValueError を 発生 さ せ ます 。 
Unicode 文字 unichr に 割り当て られ て いる 二 進数 を 、 整数 で 返し ます 。 
Unicode 文字 unichr に 割り当て られ て いる 数値 を 、 float 型 で 返し ます 。 
この 値 が 定義 さ れ て い ない 場合 に は default が 返さ れ ます が 、 この 引 数 が 与え られ て い なけれ ば ValueError を 発生 さ せ ます 。 
Unicode 文字 unichr に 割り当て られ た 、 汎用 カテゴリ を 返し ます 。 
Unicode 文字 unichr に 割り当て られ た 、 双方向 カテゴリ を 返し ます 。 
その よう な 値 が 定義 さ れ て い ない 場合 、 空 の 文字 列 が 返さ れ ます 。 
Unicode 文字 unichr に 割り当て られ た 正規 結合 クラス を 返し ます 。 
結合 クラス 定義 さ れ て い ない 場合 、 0 が 返さ れ ます 。 
unichr as string . ユニ コード 文字 unichr に 割り当て られ た east asian width を 文字 列 で 返し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
Unicode 文字 unichr に 割り当て られ た 、 鏡 像 化 の プロパティ を 返し ます 。 
その 文字 が 双方向 テキスト 内 で 鏡 像 化 さ れ た 文字 で ある 場合 に は 1 を 、 それ 以外 の 場合 に は 0 を 返し ます 。 
Unicode 文字 unichr に 割り当て られ た 、 文字 分解 マッピング を 、 文字 列 型 で 返し ます 。 
その よう な マッピング が 定義 さ れ て い ない 場合 、 空 の 文字 列 が 返さ れ ます 。 
Unicode で は 、 複数 の 方法 で 表現 できる 文字 が あり ます 。 
Unicode で は 、 一般 に 他 の 文字 と の 統合 が サポート さ れ て いる 文字 が あり ます 。 
たとえば 、 U + 2160 ( ROMAN NUMERAL ONE ) は 事実 上 U + 0049 ( LATIN CAPITAL LETTER I ) と 同じ もの です 。 
正規 形 KC ( NFKC ) は 、 互換 分解 を 適用 し て から 、 標準 分解 を 適用 し ます 。 
更に 、 本 モジュール は 以下 の 定数 を 公開 し ます 。 
この モジュール で 使わ れ て いる Unicode データベース の バージョン 。 
5 . 2 . 12 進ん だ 使い方 
この Python 単体テスト フレーム ワーク は `` PyUnit '' と も 呼ば れ 、 Kent Beck と Erich Gamma による JUnit の Python 版 です 。 JUnit は また Kent の Smalltalk 用 テストフレームワーク の Java 版 で 、 どちら も それぞれ の 言語 で 業界 標準 の 単体テスト フレーム ワーク と なっ て い ます 。 
PyUnit で は 、 テスト の 自動 化 ・ 初期 設定 と 終了 処理 の 共有 ・ テスト の 分類 ・ テスト 実行 と 結果 レポート の 分離 など の 機能 を 提供 し て おり 、 unittest の クラス を 使っ て 簡単 に たくさん の テスト を 開発 できる よう に なっ て い ます 。 
PyUnit で は 、 テスト を 以下 の よう な 構成 で 開発 し ます 。 
test fixture ( テスト 設備 ) と は 、 テスト 実行 の ため に 必要 な 準備 や 終了 処理 を 指し ます 。 
テストケース は テスト の 最小 単位 で 、 各 入力 に対する 結果 を チェック し ます 。 
テストケース を 作成 する 場合 は 、 PyUnit が 提供 する TestCase クラス を 基底 クラス として 利用 する こと が でき ます 。 
もちろん 、 TestCase の 派生 クラス で は なく 、 独自 の テストケース を 実装 し て も 構い ませ ん 。 
テストスイート 
テストスイート は テストケース と テストスイート の 集まり で 、 同時に 実行 し なけれ ば なら ない テスト を まとめる 場合 に 使用 し ます 。 
テスト ランナー 
テスト ランナー は テスト の 実行 と 結果 表示 を 管理 する コンポーネント です 。 
ランナー は グラフィカル インターフェース で も テキスト インターフェース で も 良い です し 、 何 も 表示 せ ず に テスト 結果 を 示す 値 を 返す だけ の 場合 も あり ます 。 
PyUnit で は 、 テストケース と fixture を 、 TestCase クラス と FunctionTestCase クラス で 提供 し て い ます 。 TestCase クラス は 新規 に テスト を 作成 する 場合 に 使用 し 、 FunctionTestCase は 既存 の テスト を PyUnit に 組み込む 場合 に 使用 し ます 。 
fixture の 設定 処理 と 終了 処理 は 、 TestCase で は setUp () メソッド と tearDown () を オーバーライド し て 記述 し 、 FunctionTestCase で は 初期 設定 ・ 終了 処理 を 行う 既存 の 関数 を コンス トラクタ で 指定 し ます 。 
テスト 実行 時 、 まず fixture の 初期 設定 が 最初 に 実行 さ れ ます 。 
初期 設定 が 正常 終了 し た 場合 、 テスト 実行 後 に は テスト 結果 に 関わら ず 終了 処理 が 実行 さ れ ます 。 
TestCase の 各 インスタンス が 実行 する テスト は 一つ だけ で 、 fixture は 各 テスト ごと に 新しく 作成 さ れ ます 。 テストスイート は TestSuite クラス で 実装 さ れ て おり 、 複数 の テスト と テストスイート を まとめる 事 が でき ます 。 
テストスイート を 実行 する と 、 スイート と 子 スイート に 追加 さ れ て いる 全て の テスト が 実行 さ れ ます 。 テスト ランナー は run () メソッド を 持つ オブジェクト で 、 run () は 引数 として TestCase か TestSuite オブジェクト を 受け取り 、 テスト 結果 を TestResult オブジェクト で 戻し ます 。 
PyUnit で は デフォルト で テスト 結果 を 標準 エラー に 出力 する TextTestRunner を サンプル として 実装 し て い ます 。 
これ 以外 の ランナー ( グラフィック インターフェース 用 など ) を 実装 する 場合 でも 、 特定 の クラス から 派生 する 必要 は あり ませ ん 。 
5 . 3 . 1 基礎 的 な 例 
この モジュール は ワールドワイドウェブ ( World Wide Web ) を 介し て データ を 取り寄せる ため の 高 レベル の インタフェース を 提供 する 。 
特に 、 関数 urlopen () は 組み込み 関数 open () と 同様 に 動作 し 、 ファイル 名 の 代わり に ファイルユニバーサルリソースロケータ ( URL ) を 指定 する こと が でき ます 。 いくつ か の 制限 は あり ます -- URL は 読み出し 専用 で しか 開け ませ ん し 、 seek 操作 を 行う こと は でき ませ ん 。 
この モジュール で は 、 以下 の public な 関数 を 定義 し ます 。 
URL で 表さ れる ネットワーク 上 の オブジェクト を 読み込み 用 に 開き ます 。 
URL が スキーム 識別子 を 持た ない か 、 スキーム 識別子 が file : で ある 場合 、 ローカル システム の ファイル が ( 広範囲 の 改行 サポート なし で ) 開か れ ます 。 それ 以外 の 場合 は ネットワーク 上 の どこ か に ある サーバ へ の ソケット を 開き ます 。 
接続 を 作る こと が でき ない か 、 サーバ が エラーコード を 返し た 場合 、 例外 IOError が 送出 さ れ ます 。 
全て の 処理 が うまく いけ ば 、 ファイル 類似 の オブジェクト が 返さ れ ます 。 
この オブジェクト は 以下 の メソッド : read () 、 readline () 、 readlines () 、 fileno () 、 close () 、 info () そして geturl () を サポート し ます 。 
( です が 、 この オブジェクト は 組み込み の ファイル オブジェクト で は ない ので 、 まれ に 真 の 組み込み ファイル オブジェクト が 必要 な 場所 で は 使う こと が でき ませ ん ) info () メソッド は 開い た URL に 関連付け られ た メタ 情報 を 含む mimetools . Message クラス の インスタンス を 返し ます 。 
URL へ の アクセス メソッド が HTTP で ある 場合 、 メタ 情報 中 の ヘッダ 情報 は サーバ が HTML ページ を 返す とき に 先頭 に 付加 する ヘッダ 情報 です ( Content - Length および Content - Type を 含み ます ) 。 
アクセス メソッド が FTP の 場合 、 ファイル 取得 リクエスト に 応答 し て サーバ が ファイル の 長 さ を 返し た とき に は ( これ は 現在 で は 普通 に なり まし た が ) Content - Length ヘッダ が メタ 情報 に 含め られ ます 。 
Content - type ヘッダ は MIME タイプ が 推測 可能 な とき に メタ 情報 に 含め られ ます 。 
アクセス メソッド が ローカル ファイル の 場合 、 返さ れる ヘッダ 情報 に は ファイル の 最終 更新 日時 を 表す Date エントリ 、 ファイル の サイズ を 示す Content - Length エントリ 、 そして 推測 さ れる ファイル 形式 の Content - Type エントリ が 含ま れ ます 。 
モジュール を 参照 し て ください 。 geturl () メソッド は ページ の 実際 の URL を 返し ます 。 
場合 によって は 、 HTTP サーバ は クライアント の 要求 を 他 の URL に 振り向け ( redirect 、 リダイレクト 
) し ます 。 関数 urlopen () は ユーザ に対して リダイレクト を 透過 的 に 行い ます が 、 呼び出し 側 にとって クライアント が どの URL に リダイレクト さ れ た か を 知り たい とき が あり ます 。 
geturl () メソッド を 使う と 、 この リダイレクト さ れ た URL を 取得 でき ます 。 url に http : スキーム 識別子 を 使う 場合 、 data 引数 を 与え て POST 形式 の リクエスト を 行う こと が でき ます ( 通常 リクエスト の 形式 は GET です )。 
引数 data は 標準 の application / x - www - form - urlencoded 形式 で なけれ ば なり ませ ん ; 以下 の urlencode () 関数 を 参照 し て ください 。 urlopen () 関数 は 認証 を 必要 と し ない プロ キシ ( proxy ) に対して 透過 的 に 動作 し ます 。 
Unix または Windows 環境 で は 、 Python を 起動 する 前 に 、 環境 変数 http _ proxy 、 ftp _ proxy 、 および gopher _ proxy に それぞれ の プロキシサーバ を 指定 する URL を 設定 し て ください 。 
例えば ("%" は コマンドプロンプト です ): 
Windows 環境 で は 、 プロ キシ を 指定 する 環境 変数 が 設定 さ れ て い ない 場合 、 プロ キシ の 設定 値 は レジストリ の Internet Settings セクション から 取得 さ れ ます 。 
Macintosh 環境 で は 、 urlopen () は 「 インターネット の 設定 」 ( Internet Config ) から プロ キシ 情報 を 取得 し ます 。 
別 の 方法 として 、 オプション 引数 proxies を 使っ て 明示 的 に プロ キシ を 設定 する こと が でき ます 。 
おそらく 旧 バージョン の ドキュメント です ) 関数 urlopen () は 明示 的 な プロ キシ 指定 を サポート し て い ませ ん 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : proxies の サポート を 追加 し まし た 。 
URL で 表さ れる ネットワーク 上 の オブジェクト を 、 必要 に 応じ て ローカル な ファイル に コピー し ます 。 
フック 関数 に は 3 つ の 引数 が 渡さ れ ます ; これ まで 転送 さ れ た ブロック 数 の カウント 、 バイト 単位 で 表さ れ た ブロック サイズ 、 ファイル の 総 サイズ です 。 
3 つ 目 の ファイル の 総 サイズ は 、 ファイル 取得 の 際 の 応答 時 に ファイルサイズ を 返さ ない 古い FTP サーバ で は - 1 に なり ます 。 url が http : スキーム 識別子 を 使っ て い た 場合 、 オプション 引数 data を 与える こと で POST リクエスト を 行う よう 指定 する こと が でき ます ( 通常 リクエスト の 形式 は GET です )。 
data 引数 は 標準 の application / x - www - form - urlencoded 形式 で なく て は なり ませ ん ; 以下 の urlencode () 関数 を 参照 し て ください 。 
パブリック 関数 urlopen () および urlretrieve () は FancyURLopener クラス の インスタンス を 生成 し ます 。 インスタンス は 要求 さ れ た 動作 に 応じ て 使用 さ れ ます 。 
この 機能 を オーバライド する ため に 、 プログラマ は URLopener または FancyURLopener の サブ クラス を 作り 、 その クラス から 生成 し た インスタンス を 変数 urllib ._ urlopener に 代入 し た 後 、 呼び出し たい 関数 を 呼ぶ こと が でき ます 。 例えば 、 アプリケーション が URLopener が 定義 し て いる の と は 異なっ た User - Agent : ヘッダ を 指定 し たい 場合 が ある かも しれ ませ ん 。 
この 機能 は 以下 の コード で 実現 でき ます : 
以前 の urlretrieve () で 生成 さ れ た 可能 性 の ある キャッシュ を 消去 し ます 。 
例 : quote ('/~ connolly /') は '/% 7 econnolly /' に なり ます 。 quote _ plus 
quote () と 似 て い ます が 、 加え て 空白 文字 を プラス 記号 (``+'') に 置き換え ます 。 これ は HTML フォーム の 値 を quote 処理 する 際 に 必要 な 機能 です 。 
もと の 文字 列 における プラス 記号 は safe に 含ま れ て い ない 限り エスケープ 置換 さ れ ます 。 
上 と 同様 に 、 safe の デフォルト の 値 は '/' です 。 
"% xx " エスケープ を エスケープ が 表す 1 文字 に 置き換え ます 。 
例 : unquote ('/% 7 Econnolly /') は '/~ connolly /' に なり ます 。 unquote _ plus 
unquote () と 似 て い ます が 、 加え て プラス 記号 を 空白 文字 に 置き換え ます 。 これ は quote 処理 さ れ た HTML フォーム の 値 を 元 に 戻す の に 必要 な 機能 です 。 
マップ 型 オブジェクト 、 または 2 つ の 要素 を もっ た タプル から なる シーケンス を 、 `` URL に エン コード さ れ た ( url - encoded )'' に 変換 し て 、 上述 の urlopen () の オプション 引数 data に 適し た 形式 に し ます 。 
この 関数 は フォーム の フィールド 値 で でき た 辞書 を POST 型 の リクエスト に 渡す とき に 便利 です 。 
返さ れる 文字 列 は 
の ペア を "" で 区切っ た シーケンス で 、 key と value の 双方 は 上 の quote _ plus () で quote 処理 さ れ ます 。 
オプション の パラメタ doseq が 与え られ て い て 、 その 評価 結果 が 真 で あっ た 場合 、 シーケンス doseq の 個々 の 要素 について 
の ペア が 生成 さ れ ます 。 2 つ の 要素 を もっ た タプル から なる シーケンス が 引数 query として 使わ れ た 場合 、 各 タプル の 最初 の 値 が key で 、 2 番目 の 値 が value に なり ます 。 
この とき エン コード さ れ た 文字 列 中 の パラメタ の 順番 は シーケンス 中 の タプル の 順番 と 同じ に なり ます 。 
モジュール で は 、 関数 parse _ qs () および parse _ qsl () を 提供 し て おり 、 クエリ 文字 列 を 解析 し て Python の データ 構造 に する の に 利用 でき ます 。 
ローカル システム における 記法 で 表さ れ た パス 名 path を 、 URL における パス 部分 の 形式 に 変換 し ます 。 
この 関数 は 完全 な URL を 生成 する わけ で は あり ませ ん 。 
返さ れる 値 は 常に quote () を 使っ て quote 処理 さ れ た もの に なり ます 。 
URL の パス の 部分 path を エン コード さ れ た URL の 形式 から ローカル システム における パス 記法 に 変換 し ます 。 
この 関数 は path を デコード する ため に unquote () を 使い ます 。 
クラス URLopener 
URL を オープン し 、 読み出す ため の クラス の 基礎 クラス ( base class ) です 。 
ここ で VVV は urllib の バージョン 番号 です 。 
実際 に https : 形式 の URL から リソース を 取得 する に は 両方 の 引数 が 必要 です 。 
クラス FancyURLopener 
FancyURLopener は URLopener の サブ クラス で 、 以下 の HTTP レスポンス コード : 301 、 302 、 303 、 307 、 および 401 を 取り扱う 機能 を 提供 し ます 。 
レスポンス コード 30 x に対して は 、 Location : ヘッダ を 使っ て 実際 の URL を 取得 し ます 。 
レスポンス コード 401 ( 認証 が 要求 さ れ て いる こと を 示す ) に対して は 、 ベーシック 認証 ( basic HTTP authintication ) が 行わ れ ます 。 
レスポンス コード 30 x に対して は 、 最大 で maxtries 属性 に 指定 さ れ た 数 だけ 再帰 呼び出し を 行う よう に なっ て い ます 。 この 値 は デフォルト で 10 です 。 
注意 : RFC 2616 に よる と 、 POST 要求 に対する 301 および 302 応答 は ユーザ の 承認 無し に 自動的 に リダイレクト し て は なり ませ ん 。 
実際 は 、 これら の 応答 に対して 自動 リダイレクト を 許す ブラウザ で は POST を GET に 変更 し て おり 、 urllib で も この 動作 を 再現 し ます 。 
コンス トラクタ に 与える パラメタ は URLopener と 同じ です 。 
注意 : 基本 的 な HTTP 認証 を 行う 際 、 FancyURLopener インスタンス は prompt _ user _ passwd () メソッド を 呼び出し ます 。 
この メソッド は デフォルト で は 実行 を 制御 し て いる 端末 上 で 認証 に 必要 な 情報 を 要求 する よう に 実装 さ れ て い ます 。 
必要 なら ば 、 この クラス の サブ クラス において より 適切 な 動作 を サポート する ため に prompt _ user _ passwd () メソッド を オーバライド し て も かまい ませ ん 。 
制限 : 
現在 の ところ 、 以下 の プロトコル だけ が サポート さ れ て い ます : HTTP 、 ( バージョン 0 . 9 および 1 . 0 )、 Gopher ( Gopher -+ を 除く )、 FTP 、 および ローカル ファイル 。 
urlretrieve () の キャッシュ 機能 は 、 有効 期限 ヘッダ ( Expiration time header ) を 正しく 処理 できる よう に ハック する ため の 時間 を 取れる まで 、 無効 に し て あり ます 。 
ある URL が キャッシュ に ある か どう か 調べる よう な 関数 が あれ ば と 思っ て い ます 。 
。 後方 互換 性 の ため 、 URL が ローカル システム 上 の ファイル を 指し て いる よう に 見える に も 関わら ず ファイル を 開く こと が でき なけれ ば 、 URL は FTP プロトコル を 使っ て 再 解釈 さ れ ます 。 
この 機能 は 時として 混乱 を 招く エラーメッセージ を 引き起こし ます 。 
関数 urlopen () および urlretrieve () は 、 ネットワーク 接続 が 確立 さ れる まで の 間 、 一定 で ない 長 さ の 遅延 を 引き起こす こと が あり ます 。 
この こと は 、 これら の 関数 を 使っ て インタラクティブ な Web クライアント を 構築 する の は スレッド なし に は 難しい こと を 意味 し ます 。 
urlopen () または urlretrieve () が 返す データ は サーバ が 返す 生 の データ です 。 
この データ は バイナリ データ ( 例えば 画像 データ ) 、 生 テキスト ( plain text )、 または ( 例えば ) HTML 
でも かまい ませ ん 。 
プロトコル は リプライ ヘッダ ( reply header ) に データ の タイプ に関する 情報 を 返し ます 。 
タイプ は Content - Type : ヘッダ を 見る こと で 推測 でき ます 。 Gopher 
プロトコル で は 、 データ の タイプ に関する 情報 は URL に エン コード さ れ ます ; これ を 展開 する こと は 簡単 で は あり ませ ん 。 
返さ れ た データ が HTML で あれ ば 、 
プロトコル を 扱う コード で は 、 ファイル と ディレクトリ を 区別 でき ませ ん 。 
この こと から 、 アクセス でき ない ファイル を 指し て いる URL から データ を 読み出そ う と する と 、 予期 し ない 動作 を 引き起こす 場合 が あり ます 。 
URL が / で 終わっ て いれ ば 、 ディレクトリ を 指し て いる もの と みなし て 、 それ に 適し た 処理 を 行い ます 。 
しかし 、 ファイル の 読み出し 操作 が 550 エラー ( URL が 存在 し ない か 、 主 に パー ミッション の 理由 で アクセス でき ない ) に なっ た 場合 、 URL が ディレクトリ を 指し て い て 、 末尾 の / を 忘れ た ケース を 処理 する ため 、 パス を ディレクトリ として 扱い ます 。 
この ため に 、 パー ミッション の ため に アクセス でき ない ファイル を fetch しよ う と する と 、 FTP コード は その ファイル を 開こ う として 550 エラー に 陥り 、 次に ディレクトリ 一覧 を 表示 しよ う と する ため 、 誤解 を 生む よう な 結果 を 引き起こす 可能 性 が ある の です 。 
よく 調整 さ れ た 制御 が 必要 なら 、 ftplib モジュール を 使う か 、 FancyURLOpener を サブ クラス 化 する か 、 _ urlopener を 変更 し て 目的 に 合わせる よう 検討 し て ください 。 
この モジュール は 認証 を 必要 と する プロ キシ を サポート し ませ ん 。 
将来 実装 さ れる かも しれ ませ ん 。 
urllib モジュール は URL 文字 列 を 解釈 し たり 構築 し たり する ( ドキュメント 化 さ れ て い ない ) ルーチン を 含ん で い ます が 、 URL を 操作 する ため の インタフェース として は 、 
モジュール を お 勧め し ます 。 
urllib 2 モジュール は 基本 的 な 認証 、 暗号 化 認証 、 リダイレクション 、 クッキー 、 その他 の 介在 する 複雑 な アクセス 環境 において ( 大抵 は HTTP で ) URL を 開く ため の 関数 と クラス を 定義 し ます 。 urllib 2 モジュール で は 以下 の 関数 を 定義 し て い ます : 
URL url を 開き ます 。 
url は 文字 列 で も Request オブジェクト でも かまい ませ ん 。 data は 文字 列 で 、 サーバ に 送信 する 追加 の データ を 指定 し ます 。 
HTTP リクエスト は data を サポート する 唯一 の リクエスト 形式 です が 、 ここ で は data は 例えば urllib . urlencode () が 返す よう な application / x - www - form - urlencoded 形式 で エン コード さ れ た バッファ で なく て は なり ませ ん 。 この 関数 は 以下 の 2 つ の メソッド を 持つ ファイル 類似 の オブジェクト を 返し ます : 
geturl () -- 取得 さ れ た リソース の URL を 返し ます 。 
info () -- 取得 さ れ た ページ の メタ 情報 を 辞書 形式 の オブジェクト で 返し ます 。 
エラー が 発生 し た 場合 URLError を 送出 し ます 。 どの ハンドラ も リクエスト を 処理 し なかっ た 場合 に は None を 返す こと が ある ので 注意 し て ください ( デフォルト で インストール さ れる グローバル ハンドラ の OpenerDirector は 、 UnknownHandler を 使っ て 上記 の 問題 が 起き ない よう に し て い ます )。 
標準 で URL を 開く オブジェクト として OpenerDirector の インスタンス を インストール し ます 。 
与え られ た 順番 に URL ハンドラ を 連鎖 さ せる OpenerDirector の インスタンス を 返し ます 。 handler は BaseHandler または BaseHandler の サブ クラス の インスタンス の どちら か です ( どちら の 場合 も 、 コンストラクト は 引数 無し で 呼び出せる よう に なっ て い なけれ ば なり ませ ん ) 。 
現在 全て の ハンドラ の handler _ oder は 500 です が 、 例外 として ProxyHandler で は 100 に なっ て い ます 。 
状況 に 応じ て 、 以下 の 例外 が 送出 さ れ ます : 
ハンドラ が 何らかの 問題 に 遭遇 し た 場合 、 この 例外 ( または この 例外 から 導出 さ れ た 例外 ) を 送出 し ます 。 
この 例外 は IOError の サブ クラス です 。 
URLError の サブ クラス です 。 この オブジェクト は 例外 で ない ファイル 類似 の オブジェクト として 返り 値 に 使う こと が でき ます ( urlopen () が 返す の と 同じ もの です )。 
この 機能 は 、 例えば サーバ から の 認証 リクエスト の よう に 、 変わっ た HTTP エラー を 処理 する の に 役立ち ます 。 
URLError の サブ クラス です 。 この 例外 は Gopher ハンドラ によって 送出 さ れ ます 。 
クラス Request 
この クラス は URL リクエスト を 抽象 化 し た もの です 。 
url は 有効 な URL を 指す 文字 列 で なく て は なり ませ ん 。 
origin _ req _ host は 、 RFC 2965 で 定義 さ れ て いる 元 の トランザクション における リクエスト ホスト ( request - host of theorigin transaction ) です 。 
デフォルト の 値 は cookielib . request _ host ( self ) です 。 
この 値 は 、 ユーザ によって 開始 さ れ た 元々 の リクエスト における ホスト 名 や IP アドレス です 。 
例えば 、 もし リクエスト が ある HTML ドキュメント 内 の 画像 を 指し て いれ ば 、 この 値 は 画像 を 含ん で いる ページ へ の リクエスト における リクエスト ホスト に なる はず です 。 
unverifiable は 、 RFC 2965 の 定義 において 、 該当 する リクエスト が 証明 不能 ( unverifiable ) で ある か どう か を 示し ます 。 
デフォルト の 値 は False です 。 
証明 不能 な リクエスト と は 、 ユーザ が 受け入れ の 可否 を 選択 でき ない よう な URL を 持つ リクエスト の こと です 。 
例えば 、 リクエスト が HTML ドキュメント 中 の 画像 で あり 、 ユーザ が この 画像 を 自動的 に 取得 する か どう か を 選択 でき ない 場合 に は 、 証明 不能 フラグ は True に なり ます 。 
クラス OpenerDirector 
OpenerDirector クラス は 、 BaseHandler の 連鎖 的 に 呼び出し て URL を 開き ます 。 
この クラス は ハンドラ を どの よう に 連鎖 さ せる か 、 また どの よう に エラー を リカバリ する か を 管理 し ます 。 
クラス BaseHandler 
この クラス は ハンドラ 連鎖 に 登録 さ れる 全て の ハンドラ が ベース と し て いる クラス です - この クラス で は 登録 の ため の 単純 な メカニズム だけ を 扱い ます 。 
クラス HTTPDefaultErrorHandler 
HTTP エラー 応答 の ため の 標準 の ハンドラ を 定義 し ます ; 全て の レスポンス に対して 、 例外 HTTPError を 送出 し ます 。 クラス HTTPRedirectHandler 
リダイレクション を 扱う クラス です 。 
クラス HTTPCookieProcessor 
HTTP Cookie を 扱う ため の クラス です 。 
クラス ProxyHandler 
クラス HTTPPasswordMgr 
( realm , uri ) - ( user , password ) の 対応 付け データベース を 保持 し ます 。 
クラス H T T P P a sswordMgrWithDefaultRealm 
( realm , uri ) - ( user , password ) の 対応 付け データベース を 保持 し ます 。 
レルム None は その他 諸々 の レルム を 表し 、 他 の レルム が 該当 し ない 場合 に 検索 さ れ ます 。 クラス AbstractBasicAuthHandler 
クラス HTTPBasicAuthHandler 
遠隔 ホスト と の 間 で の 認証 を 扱い ます 。 password _ mgr を 与える 場合 、 HTTPPasswordMgr と 互換 性 が なけれ ば なり ませ ん ; 互換 性 の ため に サポート し なけれ ば なら ない インタフェース について の 情報 は セクション 11 . 5 . 7 を 参照 し て ください 。 
クラス ProxyBasicAuthHandler 
プロ キシ と の 間 で の 認証 を 扱い ます 。 password _ mgr を 与える 場合 、 HTTPPasswordMgr と 互換 性 が なけれ ば なり ませ ん ; 互換 性 の ため に サポート し なけれ ば なら ない インタフェース について の 情報 は セクション 11 . 5 . 7 を 参照 し て ください 。 
クラス AbstractDigestAuthHandler 
クラス HTTPDigestAuthHandler 
クラス ProxyDigestAuthHandler 
クラス HTTPHandler 
HTTP の URL を 開き ます 。 クラス HTTPSHandler 
HTTPS の URL を 開き ます 。 クラス FileHandler 
ローカル ファイル を 開き ます 。 
クラス FTPHandler 
FTP の URL を 開き ます 。 
クラス CacheFTPHandler ( 
FTP の URL を 開き ます 。 
遅延 を 最小限 に する ため に 、 開か れ て いる FTP 接続 に対する キャッシュ を 保持 し ます 。 
クラス GopherHandler 
gopher の URL を 開き ます 。 
クラス UnknownHandler 
その他 諸々 の ため の クラス で 、 未知 の プロトコル の URL を 開き ます 。 
URL を 解釈 し て 6 つ の 構成 要素 に し 、 6 要素 の タプル :( アドレス スキーム 、 ネットワーク 上 の 位置 、 パス 、 パラメタ 、 クエリ 、 フラグメント 指定 子 ) を 返し ます 。 
この タプル は URL の 一般 的 な 構造 : 
以下 の 例 : urlparse (' http :// www . cwi . nl : 80 /% 7 Eguido / Python . html ') 
では 、 タプル 
(' http ', ' www . cwi . nl : 80 ', '/% 7 Eguido / Python . html ', '', '', '') に なり ます 。 
default _ scheme 引数 が 最低 さ れ て いる 場合 、 標準 の アドレス スキーム を 表し 、 アドレス スキーム を 指定 し て い ない URL 文字 列 に対して のみ 使わ れ ます 。 
この 引数 の 標準 の 値 は 空文字 列 です 。 allow _ fragments 引数 が ゼロ の 場合 、 URL の アドレス スキーム が フラグメント 指定 を サポート し て い て も 指定 でき なく なり ます 。 
この 引数 の 標準 の 値 は 1 です 。 
urlparse () に 似 て い ます が 、 URL から params を 切り離し ませ ん 。 
この メソッド は 通常 、 URL の path 部分 において 、 各 セグメント に パラメタ 指定 を できる よう に し た 最近 の URL 構文 ( RFC 2396 参照 ) の 場合 に 、 urlparse () の 代わり に 使わ れ ます 。 
パス セグメント と パラメタ を 分割 する ため に は 分割 用 の 関数 が 必要 です 。 
この 関数 は 5 要素 の タプル :( アドレス スキーム 、 ネットワーク 上 の 位置 、 パス 、 クエリ 、 フラグメント 指定 子 ) を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
urlsplit () が 返す よう な 形式 の タプル 中 の エレメント を 組み合わせ て 、 文字 列 の 完全 な URL に し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
`` 基底 URL '' ( base ) と `` 相対 URL '' ( url ) を 組み合わせ て 、 完全 な URL (`` 絶対 URL '') を 構成 し ます 。 
ぶっ ちゃ け 、 この 関数 は 基底 URL の 要素 、 特に アドレス スキーム 、 ネットワーク 上 の 位置 、 および パス ( の 一部 ) を 使っ て 、 相対 URL に ない 要素 を 提供 し ます 。 
以下 の 例 : urljoin (' http :// www . cwi . nl /% 7 Eguido / Python . html ', ' FAQ . html ') 
では 、 文字 列 
' http :// www . cwi . nl /% 7 Eguido / FAQ . html ' に なり ます 。 
allow _ fragments 引数 は urlparse () における 引数 と 同じ 意味 を 持ち ます 。 
url が フラグメント 指定 子 を 含む 場合 、 フラグメント 指定 子 を 持た ない バージョン に 修正 さ れ た url と 、 別 の 文字 列 に 分割 さ れ た フラグメント 指定 子 を 返し ます 。 
url 中 に フラグメント 指定 子 が ない 場合 、 そのまま の url と 空文字 列 を 返し ます 。 
この RFC で は 絶対 URL の 形式 的 な 文法 と 意味 付け を 仕様 化 し て い ます 。 
この RFC に は 絶対 URL と 相対 URL を 結合 する ため の 規則 が ボーダケース の 取扱い 方 を 決定 する `` 異常 な 例 '' つき で 収め られ て い ます 。 
この RFC で は Uniform Resource Name ( URN ) と Uniform Resource Locator ( URL ) の 両方 に対する 一般 的 な 文法 的 要求 事項 を 記述 し て い ます 。 
ポリシー として 、 Python は 起動 時 に ユーザー 毎 の 設定 を 行う コード を 実行 する こと は し ませ ん ( ただし 対話 型 セッション で 環境 変数 PYTHONSTARTUP が 設定 さ れ て い た 場合 に は その スクリプト を 実行 し ます 。 )。 
しかしながら 、 プログラム や サイト によって は 、 プログラム が 要求 し た 時 に ユーザー ごと の 設定 ファイル を 実行 できる と 便利 な こと も あり ます 。 
この モジュール は その よう な 機構 を 実装 し て い ます 。 
この 機構 を 利用 し たい プログラム で は 、 以下 の 文 を 実行 し て ください 。 
user モジュール は ユーザー の ホーム ディレクトリ の . pythonrc . py ファイル を 探し 、 オープン できる なら グローバル 名前 空間 で 実行 し ます ( execfile () 
を 利用 し ます )。 
この 段階 で 発生 し た エラー は catch さ れ ませ ん 。 user モジュール を import し た プログラム に 影響 し ます 。 
どの プログラム が 利用 し て いる か わから ない 状況 で 、 標準 の モジュール や 関数 の ふるまい を 替える こと は おすすめ でき ませ ん 。 この 機構 を 使お う と する プログラマ へ の 提案 : あなた の パッケージ 向け の オプション を ユーザー が 設定 できる よう に する シンプル な 方法 は 、 . pythonrc . py ファイル で 変数 を 定義 し て 、 あなた の プログラム で テスト する 方法 です 。 
たとえば 、 spam モジュール で メッセージ 出力 の レベル を 替える user . spam _ verbose 変数 を 参照 する に は 以下 の よう に し ます : 
( ユーザ が spam _ verbose を ファイル . pythonrc . py 内 で 定義 し て い ない 時 に getattr () の 3 引数 形式 は 使わ れ ます 。 ) 大 規模 な 設定 の 必要 が ある プログラム で は プログラム ごと の 設定 ファイル を 作る と いい です 。 
セキュリティ や プライバシー に 配慮 する プログラム で は この モジュール を import し ない で ください 。 
サイト 毎 の カスタマイズ を 行う 機構 . 
この モジュール で は ファイル を uuencode 形式 ( 任意 の バイナリ データ を ASCII 文字 列 に 変換 し た もの ) に エン コード 、 デコード する 機能 を 提供 し ます 。 引数 として ファイル が 仮定 さ れ て いる 所 で は 、 ファイル の よう な オブジェクト が 利用 でき ます 。 
後方 互換 性 の ため に 、 パス 名 を 含む 文字 列 も 利用 できる よう に し て い て 、 対応 する ファイル を 開い て 読み書き し ます 。 
uu モジュール で は 以下 の 関数 を 定義 し て い ます 。 
in _ file を out _ file に エン コード し ます 。 
エン コード さ れ た ファイル に は 、 デフォルト で デコード 時 に 利用 さ れる name と mode を 含ん だ ヘッダ が つき ます 。 
省略 さ れ た 場合 に は 、 in _ file から 取得 さ れ た 名前 か '-' という 文字 と 、 0666 が それぞれ デフォルト 値 として 与え られ ます 。 
uuencode 形式 で エン コード さ れ た in _ file を デコード し て varout _ file に 書き出し ます 。 
もし out _ file が パス 名 で かつ ファイル を 作る 必要 が ある とき に は 、 mode が パー ミッション の 設定 に 使わ れ ます 。 
out _ file と mode の デフォルト 値 は in _ file の ヘッダ から 取得 さ れ ます 。 
しかし 、 ヘッダ で 指定 さ れ た ファイル が 既に 存在 し て い た 場合 は 、 uu . Error が 起き ます 。 
例外 Error ( 
Exception の サブ クラス で 、 uu . decode () によって 、 さまざま な 状況 で 起きる 可能 性 が あり ます 。 
上 で 紹介 さ れ た 場合 以外 に も 、 ヘッダ の フォーマット が 間違っ て いる 場合 や 、 入力 ファイル が 途中 で 区切れ た 場合 に も 起き ます 。 
ASCII から バイナリ へ 、 バイナリ から ASCII へ の 変換 を サポート する モジュール 。 . 
videoreader は QuickTime ムービー を 読み込み 、 デコード し 、 プログラム へ 渡せ ます 。 
この モジュール は さらに オーディオ トラック を サポート し て い ます 。 
警告 メッセージ は 一般 に 、 ユーザ に 警告 し て おい た 方 が よい よう な 状況 下 に プログラム が 置か れ て いる が 、 その 状況 は ( 通常 は ) 例外 を 送出 し たり その プログラム を 終了 さ せる ほど の 正当 な 理由 が ない といった 状況 で 発さ れ ます 。 
例えば 、 プログラム が 古い モジュール を 使っ て いる 場合 に は 警告 を 発し たく なる かも しれ ませ ん 。 Python プログラマ は 、 この モジュール の warn () 関数 を 使う こと で 警告 を 発する こと が でき ます 。 
( C 言語 の プログラマ は PyErr _ Warn () を 使い ます ; 詳細 は 
を 参照 し て ください )。 警告 メッセージ は 通常 sys . stderr に 出力 さ れ ます が 、 その 処理 方法 は 、 全て の 警告 に対する 無視 する 処理 から 警告 を 例外 に 変更 する 処理 まで 、 柔軟 に 変更 する こと が でき ます 。 
警告 の 処理 方法 は 警告 カテゴリ ( 以下 参照 )、 警告 メッセージ テキスト 、 そして 警告 を 発し た ソース コード 上 の 場所 に 基づい て 変更 する こと が でき ます 。 
filterwarnings () を 呼び出し て 一致 規則 を フィルタ に 追加 する こと が でき 、 resetwarnings () を 呼び出し て フィルタ を 標準 設定 の 状態 に リセット する こと が でき ます 。 警告 メッセージ の 印字 は showwarning () を 呼び出し て 行う こと が でき 、 この 関数 は 上書き する こと が でき ます ; この 関数 の 標準 の 実装 で は 、 formatwarning () を 呼び出し て 警告 メッセージ を 書式 化 し ます が 、 この 関数 について も 自作 の 実装 を 使う こと が でき ます 。 
5 . 17 waste -- Apple 製 で は ない TextEdit の 置き換え 
Up : 5 . 文書 化 さ れ て い ない モジュール 
WASTE ウィジェット と ライブラリ に関する 情報 サイト 。 ドキュメント と ダウンロード も ここ から 行なえ ます 。 
wave モジュール は 、 WAV サウンド フォーマット へ の 便利 な インター フェイス を 提供 する モジュール です 。 
この モジュール は 圧縮 / 展開 を サポート し て い ませ ん が 、 モノラル / ステレオ に は 対応 し て い ます 。 wave モジュール は 、 以下 の 関数 と 例外 を 定義 し て い ます 。 
file が 文字 列なら その 名前 の ファイル を 開き 、 そう で ない なら ファイル の よう に シーク 可能 な オブジェクト として 扱い ます 。 mode は 以下 の うち の いずれ か です 。 
WAV ファイル に対して 読み込み / 書き込み 両方 の モード で 開く こと は でき ない こと に 注意 し て 下さい 。 ' r ' と ' rb ' の mode は Wave _ read オブジェクト を 返し 、 ' w ' と ' wb ' の mode は Wave _ write オブジェクト を 返し ます 。 
mode が 省略 さ れ て い て 、 ファイル の よう な オブジェクト が file として 渡さ れる と 、 
file . mode が mode の デフォルト 値 として 使わ れ ます ( 必要 で あれ ば 、 さらに フラグ " b " が 付け加え られ ます )。 
open () と 同義 。 後方 互換 性 の ため に 残さ れ て い ます 。 
WAV の 仕様 を 犯し たり 、 実装 の 欠陥 に 遭遇 し て 何 か 実行 不可能 と なっ た 時 に 発生 する エラー 。 
14 . 5 . 1 Wave _ read オブジェクト 
弱 参照 の 主 な 用途 は 、 巨大 な オブジェクト を 保持 する キャッシュ や マップ 型 の 実装 において 、 キャッシュ や マップ 型 に ある という 理由 だけ オブジェクト を 存続 さ せ たく ない 場合 です 。 
例えば 、 巨大 な バイナリ 画像 の オブジェクト が たくさん あり 、 それぞれ に 名前 を 関連付け たい と し ます 。 
Python の 辞書 型 を 使っ て 名前 を 画像 に 対応付け たり 画像 を 名前 に 対応付け たり する と 、 画像 オブジェクト は 辞書 内 の キー や 値 に 使わ れ て いる ため 存続 し つづける こと に なり ます 。 
weakref モジュール が 提供 し て いる WeakKeyDictionary や WeakValueDictionary クラス は その 代用 で 、 対応 付け を 構築 する の に 弱 参照 を 使い 、 キャッシュ や マップ 型 に 存在 する という 理由 だけ で オブジェクト を 存続 さ せ ない よう に し ます 。 
例えば 、 もし ある 画像 オブジェクト が WeakValueDictionary の 値 に なっ て い た 場合 、 最後 に 残っ た 画像 オブジェクト へ の 参照 を 弱 参照 マップ 型 が 保持 し て いれ ば 、 ガーベジコレクション は この オブジェクト を 再 利用 でき 、 画像 オブジェクト に対する 弱 参照 内 の 対応 付け は そのまま 削除 さ れ ます 。 
WeakKeyDictionary や WeakValueDictionary は 弱 参照 を 使っ て 実装 さ れ て い て 、 キー や 値 が ガーベジコレクション によって 回収 さ れ た こと を 弱 参照 辞書 に 知らせる よう な 弱 参照 オブジェクト の コール バック 関数 を 設定 し て い ます 。 
ほとんど の プログラム が 、 いずれ か の 弱 参照 辞書 型 を 使う だけ で 必要 を 満たせる はず です -- 自作 の 弱 参照 辞書 を 直接 作成 する 必要 は 普通 は あり ませ ん 。 
list や dict など 、 いくつ か の 組み込み 型 は 弱 参照 を 直接 サポート し ませ ん が 、 以下 の よう に サブ クラス 化 を 行え ば サポート を 追加 でき ます : 
弱 参照 を サポート する ため に 拡張 型 を 簡単 に 作れ ます 。 
詳細 について は 、 3 . 3 . 3 節 `` 拡張 型 における 弱 参照 '' を 読ん で ください 。 クラス ref 
object へ の 弱 参照 を 返し ます 。 
リファレント が まだ 生き て いる なら ば 、 元 の オブジェクト は 参照 オブジェクト の 呼び出し で 取り出せ す 。 リファレント が もはや 生き て い ない なら ば 、 参照 オブジェクト を 呼び出し た とき に None を 返し ます 。 
それら は object が 削除 さ れ た 後 でも それら の ハッシュ 値 を 保持 し ます 。 
object が 削除 さ れ て から 初めて hash () が 呼び出さ れ た 場合 に 、 その 呼び出し は TypeError を 発生 さ せ ます 。 弱 参照 は 等価 性 の テスト を サポート し て い ます が 、 順序 を サポート し て い ませ ん 。 
参照 が まだ 生き て いる なら ば 、 callback に 関係 なく 二つ の 参照 は それら の リファレント と 同じ 等価 関係 を 持ち ます 。 
リファレント の どちら か 一方 が 削除 さ れ た 場合 、 参照 オブジェクト が 同じ オブジェクト で ある 場合 に 限り 、 その 参照 は 等価 です 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 以前 は ファクトリ でし た が 、 サブ クラス 化 可能 な 型 に なり まし た 。 object 型 から 導出 さ れ て い ます 
弱 参照 を 使う object へ の プロ キシ を 返し ます 。 
弱 参照 オブジェクト とともに 用い られる 明示 的 な 参照 外し を 要求 する 代わり に 、 これ は ほとんど の コンテキスト における プロ キシ の 利用 を サポート し ます 。 
object が 呼び出し 可能 か どう か に 依存 し て 、 返さ れる オブジェクト は ProxyType または CallableProxyType の どちら か 一方 の 型 を 持ち ます 。 
object を 参照 する 弱 参照 と プロ キシ の 数 を 返し ます 。 
object を 参照 する すべて の 弱 参照 と プロキシオブジェクト の リスト を 返し ます 。 
クラス WeakKeyDictionary 
キー を 弱く 参照 する マッピング クラス 。 
もはや キー へ の 強い 参照 が なくなっ た とき に 、 辞書 の エントリ は 捨て られ ます 。 
アプリケーション の 他 の 部分 が 所有 する オブジェクト へ 属性 を 追加 する こと も なく 、 それら の オブジェクト に 追加 データ を 関連づける ため に これ を 使う こと が でき ます 。 
これ は 属性 へ の アクセス を オーバーライド する オブジェクト に 特に 便利 です 。 
注意 : 注意 : WeakKeyDictionary は Python 辞書 型 の 上 に 作ら れ て いる ので 、 反復 処理 を 行う とき に は サイズ 変更 し て は なり ませ ん 。 
WeakKeyDictionary の 場合 、 反復 処理 の 最中 に プログラム が 行っ た 操作 が 、 ( ガベージコレクション の 副作用 として )「 魔法 の よう に 」 辞書 内 の 要素 を 消し 去っ て しまう ため 、 確実 な サイズ 変更 は 困難 な の です 。 
クラス WeakValueDictionary 
値 を 弱く 参照 する マッピング クラス 。 
弱 参照 オブジェクト の ため の 型 オブジェクト 。 
呼び出し 可能 で ない オブジェクト の プロ キシ の ため の 型 オブジェクト 。 
呼び出し 可能 な オブジェクト の プロ キシ の ため の 型 オブジェクト 。 
プロ キシ の ため の すべて の 型 オブジェクト を 含む シーケンス 。 
これ は 両方 の プロ キシ 型 の 名前 付け に 依存 し ない で 、 オブジェクト が プロ キシ か どう か の テスト を より 簡単 に でき ます 。 
プロキシオブジェクト が 使わ れ て も 、 元 の オブジェクト が ガーベジコレクション さ れ て しまっ て いる とき に 発生 する 例外 。 
これ は 標準 の ReferenceError 例外 と 同じ です 。 
webbrowser モジュール に は ウェブベース の ドキュメント を 表示 する ため の 、 とても ハイレベル な インターフェース が 定義 さ れ て い ます 。 
この コントローラー オブジェクト は 使い 易く 、 プラットフォーム 非 依存 です 。 
たいてい の 環境 で は 、 この モジュール の open () を 呼び出す だけ で 正しく 動作 し ます 。 Unix で は 、 X 11 上 で グラフィカル な ブラウザ が 選択 さ れ ます が 、 グラフィカル な ブラウザ が 利用 でき なかっ たり 、 X 11 が 利用 でき ない 場合 は テキスト モード の ブラウザ が 使わ れ ます 。 
もし テキスト モード の ブラウザ が 使わ れ たら 、 ユーザ が ブラウザ から 抜け出す まで プロセス の 呼び出し は ブロック さ れ ます 。 Unix で は 、 環境 変数 BROWSER が 存在 する なら プラットフォーム の デフォルト で ある ブラウザ の リスト を オーバーライド し 、 コロン で 区切ら れ た リスト の 順 に ブラウザ の 起動 を 試み ます 。 
ブラウザ の コントロール エラー が 起こる と 発生 する 例外 。 
以下 の 関数 が 定義 さ れ て い ます : 
デフォルト の ブラウザ で url を 表示 し ます 。 
new が true なら 、 可能 で あれ ば ブラウザ の 新しい ウィンドウ が 開き ます 。 
autoraise が true なら 、 可能 で あれ ば ウィンドウ が 前面 に 表示 さ れ ます ( 多く の ウィンドウ マネージャ で は この 変数 の 設定 に 関わら ず 、 前面 に 表示 さ れ ます )。 
可能 で あれ ば 、 デフォルトブラウザ の 新しい ウィンドウ で url を 開き ます が 、 そう で ない 場合 は ブラウザ の ただ 1 つ の ウィンドウ で url を 開き ます 。 
ブラウザ の 種類 name の コントローラー オブジェクト を 返し ます 。 
もし name が 空文字 列 なら 、 呼び出し た 環境 に 適し た デフォルトブラウザ の コントローラー を 返し ます 。 
ブラウザ の 種類 name を 登録 し ます 。 
ブラウザ の 種類 が 登録 さ れ たら 、 get () で その ブラウザ の コントローラー を 呼び出す こと が でき ます 。 
instance が 指定 さ れ なかっ たり 、 None なら 、 インスタンス が 必要 な 時 に は constructor が パラメータ なし に 呼び出さ れ て 作ら れ ます 。 
instance が 指定 さ れ たら 、 constructor は 呼び出さ れ ない ので 、 None で かまい ませ ん 。 この 登録 は 、 変数 BROWSER を 設定 する か 、 get を 空文字 列 で なく 、 宣言 し た ハンドラ の 名前 と 一致 する 引数 とともに 呼び出す とき だけ 、 役に立ち ます 。 
いくつ か の 種類 の ブラウザ が あらかじめ 定義 さ れ て い ます 。 
この モジュール で 定義 さ れ て いる 、 関数 get () に 与える ブラウザ の 名前 と 、 それぞれ の コントローラー クラス の インスタンス を 以下 の 表 に 示し ます 。 
`` Konqueror '' は Unix の KDE デスク トップ 環境 の ファイル マネージャ で 、 KDE が 動作 し て いる 時 に だけ 意味 を 持ち ます 。 
何 か 信頼 できる 方法 で KDE を 検出 する の が いい でしょ う ; 変数 KDEDIR で は 十分 で は あり ませ ん 。 
また 、 KDE 2 で konqueror コマンド を 使う とき に も 、 `` kfm '' が 使わ れ ます -- Konqueror を 動作 さ せる のに 最も 良い 方法 が 実装 によって 選択 さ れ ます 。 
Windows プラットフォーム のみ ; 標準 拡張 モジュール win 32 api と win 32 con を 必要 と し ます 。 
MacOS プラットフォーム のみ ; 
マニュアル に 解説 さ れ て いる 標準 MacPython モジュール ic を 必要 と し ます 。 
11 . 1 . 1 ブラウザコントローラーオブジェクト 
この モジュール に 含ま れる 唯一 の 関数 は ある こと を 推測 し ます 。 つまり 、 与え られ た ファイル を 開く ため に は 、 利用 可能 な データベース モジュール ( 
、 
) の どれ を 用いる べき か という こと です 。 
ファイル が 読め ない か 存在 し ない ため に 開く こと が 出来 ない 場合 は None 、 ファイル の 形式 を 推測 でき ない 場合 は 空 の 文字 列 ('')、 推測 できる 場合 は 必要 な モジュール 名 (' dbm '、' gdbm ' など ) を 含む 文字 列 を 返し ます 。 
リリース 2 . 1 で 撤廃 さ れ まし た 。 
を 代り に 使っ て ください 。 
注意 : Python 2 . 1 以前 の リリース で は 、 この モジュール は 
モジュール の 実装 における 一部 でし た 。 
現在 は もう 使わ れ て い ませ ん 。 
この モジュール を 直接 使わ ない で ください ; 代わり に 
を 使っ て ください 。 This module was an implementation detail of the この モジュール は Wichmann - Hill による 擬似 乱数 生成 器 クラス を 実装 し ます 。 
この クラス は また 、 whrandom と 名づけ られ て い ます 。 
この モジュール で は また 、 Wichmann - Hill アルゴリズム に 特有 の 以下 の メソッド を 提供 し て い ます : 
整数 x 、 y 、 z から 乱数 生成 器 を 初期 化 し ます 。 
この モジュール が 最初 に 取り込ま れ た とき に 、 乱数 は 現在 の 時刻 から 取り出さ れ た 値 で 初期 化 さ れ ます 。 x 、 y 、 および z が 省略 さ れる か 0 の 場合 、 乱数 の シード は 現在 の システム 時刻 から 計算 さ れ ます 。 
引数 の うち 3 つ 全て で は なく 、 1 または 2 個 だけ が 0 の 場合 、 ゼロ に 鳴っ て いる 値 は 1 に 置き換え られ ます 。 
この こと により 、 一見 し て 異なる シード 値 が 同じ 値 に なっ て しまい 、 乱数 生成 器 から 生成 さ れる 擬似 乱数 列 も これ に 対応 し ます 。 
空 で ない シーケンス seq から ランダム に 要素 を 選ん で 返し ます 。 
範囲 [ 0 . 0 ... 1 . 0 ) から 次 の 浮動 小数点 数 の 乱数 N を 返し ます 。 
この モジュール が 最初 に イン ポート さ れ た 際 、 乱数 は 現在 の 時刻 から 取り出さ れ た 値 で 初期 化 さ れ ます 。 
で ある よう な ランダム な 実数 N を 返し ます 。 
従って 、 N = whrandom . random () を 以下 の コード : 
の よう に 書く こと も でき ます 。 乱数 生成 器 の 別々 の インスタンス を 使っ た 場合 、 擬似 乱数 の 列 は 独立 に なる ので 注意 し て ください 。 
22 . 3 winsound -- Windows 用 の 音声 再生 インタフェース 
A . ドキュメント 化 さ れ て い ない モジュール 
22 . 3 winsound -- Windows 用 の 音声 再生 インタフェース 
winsound モジュール は Windows プラットフォーム 上 で 提供 さ れ て いる 基本 的 な 音声 再生 機構 へ の アクセス 手段 を 提供 し ます 。 
この モジュール で は いくつ か の 関数 と 定数 が 定義 さ れ て い ます 。 
システム が スピーカ を 鳴らす こと が でき ない 場合 、 例外 RuntimeError が 送出 さ れ ます 。 
注意 : Windows 95 および 98 で は 、 Windows の 関数 Beep () は 存在 し ます が 役に立ち ませ ん ( この 関数 は 引数 を 無視 し ます )。 
これら の ケース で は 、 Python は ポート を 直接 操作 し て Beep () を シミュレート し ます ( バージョン 2 . 1 で 追加 さ れ まし た ) 。 
この 機能 が 全て の システム で 動作 する か どう か は わかり ませ ん 。 
プラットフォーム の API から 関数 PlaySound () を 呼び出し ます 。 
引数 sound は ファイル 名 、 音声 データ の 文字 列 、 または None を とり 得 ます 。 
sound の 解釈 は flags の 値 に 依存 し ます 。 この 値 は 以下 に 述べる 定数 を ビット 単位 で OR し て 組み合わせ た もの に なり ます 。 
システム の エラー が 発生 し た 場合 、 例外 RuntimeError が 送出 さ れ ます 。 
根底 に ある MessageBeep () 関数 を プラットフォーム の API から 呼び出し ます 。 
この 関数 は 音声 を レジストリ の 指定 に従って 再生 し ます 。 
type 引数 は どの 音声 を 再生 する か を 指定 し ます ; とり 得る 値 は - 1 、 MB _ ICONASTERISK 、 MB _ ICONEXCLAMATION 、 MB _ ICONHAND 、 MB _ ICONQUESTION 、 および MB _ OK で 、 全て 以下 に 記述 さ れ て い ます 。 
値 - 1 は `` 単純 な ビープ 音 '' を 再生 し ます ; この 値 は 他 の 場合 で 音声 を 再生 する こと が でき なかっ た 際 の 最終 的 な 代替 音 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
sound パラメタ が WAV ファイル 名 で ある こと を 示し ます 。 
SND _ ALIAS と 同時に 使っ て は いけ ませ ん 。 SND _ ALIAS 
引数 sound は レジストリ に ある 音声 データ に 関連付け られ た 名前 で ある こと を 示し ます 。 
対応 する コントロール パネル で の 音声 名 
例えば 以下 の よう に 使い ます : 
音声 データ を 繰り返し 再生 し ます 。 
システム が ブロック し ない よう に する ため 、 SND _ ASYNC フラグ を 同時に 使わ なく て は なり ませ ん 。 
SND _ MEMORY と 同時に 使う こと は でき ませ ん 。 
PlaySound () の 引数 sound が 文字 列 の 形式 を とっ た WAV ファイル の メモリ 上 の イメージ で ある こと を 示し ます 。 
注意 : この モジュール は メモリ 上 の イメージ を 非同期 に 再生 する 機能 を サポート し て い ませ ん 。 
従って 、 この フラグ と SND _ ASYNC を 組み合わせる と 例外 RuntimeError が 送出 さ れ ます 。 SND _ PURGE 
指定 し た 音声 の 全て の インスタンス について 再生 処理 を 停止 し ます 。 
音声 を 非同期 に 再生 する よう に し て 、 関数 呼び出し を 即座 に 返し ます 。 
指定 し た 音声 が 見つから なかっ た 場合 に システム 標準 の 音声 を 鳴らさ ない よう に し ます 。 
現在 鳴っ て いる 音声 を 中断 さ せ ない よう に し ます 。 
サウンドドライバ が ビジー 状態 に ある 場合 、 関数 が すぐ 返る よう に し ます 。 
音声 SystemDefault を 再生 し ます 。 
音声 SystemExclamation を 再生 し ます 。 
音声 SystemHand を 再生 し ます 。 
音声 SystemQuestion を 再生 し ます 。 
2 つ の 例外 クラス が 同様 に し て 定義 さ れ て い ます 。 
クラス Packer 
Packer は データ を XDR 表現 に パック する ため の クラス です 。 
Packer クラス の インスタンス 生成 は 引数 なし で 行わ れ ます 。 クラス Unpacker 
Unpacker は Packer と 対 を なし て い て 、 文字 列 バッファ から XDR を アンパック する ため の クラス です 。 
入力 バッファ data を 引数 に 与え て インスタンス を 生成 し ます 。 
この RFC が 、 かつて この モジュール が 最初 に 書か れ た 当時 に XDR 標準 で で あっ た データ の エン コード 方法 を 定義 し て い まし た 。 
現在 は RFC 1832 に 更新 さ れ て いる よう です 。 
こちら が 新しい 方 の RFC で 、 XDR の 改訂 版 が 定義 さ れ て い ます 。 
12 . 17 . 1 Packer オブジェクト 
文書 オブジェクト モデル 、 または `` DOM '' は 、 ワールドワイドウェブコンソーシアム ( World Wide Web Consortium , W 3 C ) による 、 XML ドキュメント に アクセス し たり 変更 を 加え たり する ため の 、 プログラミング 言語 間 共通 の API です 。 
DOM 実装 によって 、 XML ドキュメント は ツリー 構造 として 表現 さ れ ます 。 また 、 クライアントコード 側 で ツリー 構造 を ゼロ から 構築 できる よう に なり ます 。 
さらに 、 前述 の 構造 に対して 、 よく 知ら れ た インタフェース を もつ 一連 の オブジェクト を 通し た アクセス 手段 も 提供 し ます 。 DOM は ランダムアクセス を 行う アプリケーション で 非常 に 有用 です 。 
SAX で は 、 一 度 に 閲覧 する こと が できる の は ドキュメント の ほんの 一部分 です 。 
ある SAX 要素 に 注目 し て いる 際 に は 、 別 の 要素 を アクセス する こと は でき ませ ん 。 
また テキスト ノード に 注目 し て いる とき に は 、 その 中 に 入っ て いる 要素 を アクセス する こと が でき ませ ん 。 SAX による アプリケーション を 書く とき に は 、 プログラム が ドキュメント 内 の どこ を 処理 し て いる の か を 追跡 する よう 、 コード の どこ か に 記述 する 必要 が あり ます 。 
SAX 自体 が その 作業 を 行っ て くれる こと は あり ませ ん 。 
さらに 、 XML ドキュメント に対する 先読み ( look ahead ) が 必要 だ と する と 不運 な こと に なり ます 。 アプリケーション によって は 、 ツリー に アクセス でき なけれ ば イベント 駆動 モデル を 実現 でき ませ ん 。 
もちろん 、 何らかの ツリー を SAX イベント に 応じ て 自分 で 構築 する こと も できる でしょ う が 、 DOM で は その よう な コード を 書か なく て も よく なり ます 。 
DOM は XML データ に対する 標準 的 な ツリー 表現 な の です 。 文書 オブジェクト モデル は 、 W 3 C によって いくつ か の 段階 、 W 3 C の 用語 で 言え ば `` レベル ( level )'' で 定義 さ れ て い ます 。 
Python において は 、 DOM API へ の 対応 付け は 実質 的 に は DOM レベル 2 勧告 に 基づい て い ます 。 
現在 は ドラフト 形式 で のみ 入手 できる レベル 3 仕様 へ の 対応 付け は 、 Python XML 分科 会 ( Special Interest Group ) により 、 PyXML パッケージ の 一部 として 開発 中 です 。 
DOM レベル 3 サポート の 現在 の 状態 について の 情報 は 、 PyXML パッケージ に 同 梱 さ れ て いる ドキュメント を 参照 し て ください 。 
DOM アプリケーション は 、 普通 は XML を DOM に 解析 する ところ から 始まり ます 。 
どの よう に し て 解析 を 行う か について は DOM レベル 1 で は 全く カバー し て おら ず 、 レベル 2 で は 限定 的 な 改良 だけ が 行わ れ まし た : レベル 2 で は Document を 生成 する メソッド を 提供 する DOMImplementation オブジェクト クラス が あり ます が 、 実装 に 依存 し ない 方法 で XML リーダ ( reader )/ パーザ ( parser )/ 文書 ビルダ ( Document builder ) に アクセス する 方法 は あり ませ ん 。 また 、 既存 の Document オブジェクト なし に これら の メソッド に アクセス する よう な 、 よく 定義 さ れ た 方法 も あり ませ ん 。 
Python で は 、 各々 の DOM 実装 で getDOMImplementation () が 定義 さ れ て いる はず です 。 
DOM レベル 3 で は ロード ( Load )/ ストア ( Store ) 仕様 が 追加 さ れ 、 リーダ の インタフェース に を 定義 し て い ます が 、 Python 標準 ライブラリ で は まだ 利用 する こと が でき ませ ん 。 DOM 文書 オブジェクト を 生成 し たら 、 その プロパティ と メソッド を 使っ て XML 文書 の 一部 に アクセス でき ます 。 
これら の プロパティ は DOM 仕様 で 定義 さ れ て い ます ; 本 リファレンス マニュアル で は 、 Python において DOM 仕様 が どの よう に 解釈 さ れ て いる か を 記述 し て い ます 。 W 3 C から 提供 さ れ て いる 仕様 は 、 DOM API を Java 、 ECMAScript 、 および OMG IDL で 定義 し て い ます 。 
ここ で 定義 さ れ て いる Python で の 対応 づけ は 、 大 部分 が この 仕様 の IDL 版 に 基づい て い ます が 、 厳密 な 準拠 は 必要 と さ れ て い ませ ん ( 実装 で IDL の 厳密 な 対応 付け を サポート する の は 自由 です が )。 
API へ の 対応 付け に関する 詳細 な 議論 は 13 . 6 . 3 、`` 適合 性 '' を 参照 し て ください 。 
Python DOM API が 準拠 し て いる W 3 C 勧告 。 
xml . dom . minidom で サポート さ れ て いる W 3 C の DOM に関する 勧告 。 
完全 な 機能 を もっ た DOM 実装 を 必要 と する ユーザ は PyXML パッケージ を 利用 す べき です 。 
この ドキュメント で は OMG IDL から Python へ の 対応 付け を 記述 し て い ます 。 
13 . 6 . 1 モジュール の 内容 
xml . dom . minidom は 、 軽量 な 文書 オブジェクトモデルインタフェース の 実装 です 。 
この 実装 で は 、 完全 な DOM より も 単純 で 、 かつ 十分 に 小さく なる よう 意図 し て い ます 。 DOM アプリケーション は 典型 的 に 、 XML を DOM に 解析 ( parse ) する こと で 開始 し ます 。 
xml . dom . minidom で は 、 以下 の よう な 解析 用 の 関数 を 介し て 行い ます : 
parse () 関数 は ファイル 名 か 、 開か れ た ファイル オブジェクト を 引数 に とる こと が でき ます 。 
この 関数 は パーザ の 文書 ハンドラ を 変更 し 、 名前 空間 サポート を 有効 に し ます ; ( エンティティ リゾルバ ( entity resolver ) の よう な ) 他 の パーザ 設定 は 前もって おこなわ なけれ ば なり ませ ん 。 
XML データ を 文字 列 で 持っ て いる 場合 、 parseString () を 代わり に 使う こと が でき ます : 
string を 表現 する Document を 返し ます 。 
この メソッド は 文字 列 に対する StringIO オブジェクト を 生成 し て 、 その オブジェクト を parse に 渡し ます 。 
これら の 関数 は 両方 とも 、 文書 の 内容 を 表現 する Document オブジェクト を 返し ます 。 parse () や parseString () といった 関数 が 行う の は 、 XML パーザ を 、 何らかの SAX パーザ から くる 解析 イベント ( parse event ) を 受け取っ て DOM ツリー に 変換 できる よう な `` DOM ビルダ ( DOM builder )'' に 結合 する こと です 。 
関数 は 誤解 を 招く よう な 名前 に なっ て いる かも しれ ませ ん が 、 インタフェース について 学ん で いる とき に は 理解 し やすい でしょ う 。 
文書 の 解析 は これら の 関数 が 戻る より 前 に 完結 し ます ; 要するに 、 これら の 関数 自体 は パーザ 実装 を 提供 し ない という こと です 。 `` DOM 実装 '' オブジェクト の メソッド を 呼び出し て Document を 生成 する こと も でき ます 。 
この オブジェクト は 、 
xml . dom パッケージ 、 または xml . dom . minidom モジュール の getDOMImplementation () 関数 を 呼び出し て 取得 でき ます 。 
xml . dom . minidom モジュール の 実装 を 使う と 、 常に minidom 実装 の Document インスタンス を 返し ます 。 
一方 、 xml . dom 
版 の 関数 で は 、 別 の 実装 による インスタンス を 返す か もれ ませ ん ( PyXML package が インストール さ れ て いる と そう なる でしょ う )。 
Document を 取得 し たら 、 DOM を 構成 する ため に 子 ノード を 追加 し て いく こと が でき ます : 
DOM 文書 オブジェクト を 手 に し たら 、 XML 文書 の プロパティ や メソッド を 使っ て 、 文書 の 一部 に アクセス する こと が でき ます 。 
これら の プロパティ は DOM 仕様 で 定義 さ れ て い ます 。 
文書 オブジェクト の 主要 な プロパティ は documentElement プロパティ です 。 
この プロパティ は XML 文書 の 主要 な 要素 : 他 の 全て の 要素 を 保持 する 要素 、 を 与え ます 。 
以下 に プログラム 例 を 示し ます : 
DOM を 使い 終え たら 、 後片付け を 行わ なけれ ば なり ませ ん 。 
Python の バージョン によって は 、 循環 的 に 互い を 参照 する オブジェクト に対する ガベージコレクション を サポート し て い ない ため 、 この 操作 が 必要 と なり ます 。 
この 制限 が 全て の バージョン の Python から 除去 さ れる まで は 、 循環 参照 オブジェクト が 消去 さ れ ない もの として コード を 書く の が 無難 です 。 DOM を 片付ける に は 、 unlink () メソッド を 呼び出し ます : 
unlink () は 、 DOM API に対する xml . dom . minidom 特有 の 拡張 です 。 
ノード に対して unlink () を 呼び出し た 後 は 、 ノード と その 下位 ノード は 本質 的 に は 無意味 な もの と なり ます 。 
xml . dom . minidom で サポート さ れ て いる DOM の W 3 C 勧告 。 
xml . dom . pulldom で は 、 SAX イベント から 、 文書 の 文書 オブジェクト モデル 表現 の 選択 さ れ た 一部分 だけ を 構築 できる よう に し ます 。 
クラス PullDOM 
xml . sax . handler . ContentHandler 実装 です ... 
クラス DOMEventStream 
クラス SAX 2 DOM 
parse () の bufsize パラメタ の デフォルト 値 です 。 
バージョン 2 . 1 で 変更 さ れ た 仕様 : この 変数 の 値 は parse () を 呼び出す 前 に 変更 する こと が でき 、 その 場合 新た な 値 が 効果 を 持つ よう に なり ます 
バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 xml . parsers . expat モジュール は 、 検証 ( validation ) を 行わ ない XML パーザ ( parser , 解析 器 )、 Expat 
へ の Python インタフェース です 。 
モジュール は 一つ の 拡張 型 xmlparser を 提供 し ます 。 これ は XML パーザ の 現在 の 状況 を 表し ます 。 
一旦 xmlparser オブジェクト を 生成 する と 、 オブジェクト の 様々 な 属性 を ハンドラ 関数 ( handler function ) に 設定 でき ます 。 
その後 、 XML 文書 を パーザ に 入力 する と 、 XML 文書 の 文字 列 と マーク アップ に 応じ て ハンドラ 関数 が 呼び出さ れ ます 。 
この モジュール で は 、 Expat パーザ へ の アクセス を 提供 する ため に pyexpat 
Expat が エラー を 報告 し た とき に 例外 を 送出 し ます 。 
Expat の エラー を 解釈 する 上 で の 詳細 な 情報 は 、 13 . 5 . 2 の `` ExpatError Exceptions ,'' を 参照 し て ください 。 
ExpatError へ の 別名 です 。 
ParserCreate () 関数 から 返さ れ た 戻り 値 の 型 を 示し ます 。 
xml . parsers . expat モジュール に は 以下 の 2 つ の 関数 が 収め られ て い ます : 
与え られ た エラー 番号 errno を 解説 する 文字 列 を 返し ます 。 
新しい xmlparser オブジェクト を 作成 し 、 返し ます 。 encoding が 指定 さ れ て い た 場合 、 XML データ で 使わ れ て いる 文字 列 の エン コード 名 で なけれ ば なり ませ ん 。 
Expat は 、 Python の よう に 多く の エン コード を サポート し て おら ず 、 また エン コーディング の レパートリ を 拡張 する こと は でき ませ ん ; サポート する エン コード は 、 UTF - 8 , UTF - 16 , ISO - 8859 - 1 ( Latin 1 ), ASCII です 。 
この 値 は 、 1 文字 の 文字 列 で なけれ ば なり ませ ん ; 文字 列 が 誤っ た 長 さ を 持つ 場合 に は ValueError が 送出 さ れ ます ( None は 値 の 省略 と 見なさ れ ます ) 名前 空間 の 処理 が 可能 な とき 、 名前 空間 に 属する 要素 と 属性 が 展開 さ れ ます 。 
要素 の ハンドラ で ある StartElementHandler と EndElementHandler に 渡さ れ た 要素 名 は 、 名前 空間 の URI 、 名前 空間 の 区切り 文字 、 要素 名 の ローカル 部 を 連結 し た もの に なり ます 。 
名前 空間 の 区切り 文字 が 0 バイト ( chr ( 0 )) の 場合 、 名前 空間 の URI と ローカル 部 は 区切り 文字 なし で 連結 さ れ ます 。 
たとえば 、 namespace _ separator に 空白 文字 (" ") が セット さ れ 、 次 の よう な 文書 が 解析 さ れる と し ます 。 
StartElementHandler は 各 要素 ごと に 次 の よう な 文字 列 を 受け取り ます 。 
Expat プロジェクト の ホームページ 
SAX API は コンテント・ハンドラ 、 DTD ハンドラ 、 エラー ・ ハンドラ 、 エンティティ ・ リゾルバ という 4 つ の ハンドラ を 規定 し て い ます 。 
通常 アプリケーション 側 で 実装 する 必要 が ある の は 、 これら の ハンドラ が 発生 さ せる イベント の うち 、 処理 し たい もの へ の インターフェース だけ です 。 インターフェース は 1 つ の オブジェクト に まとめる こと も 、 複数 の オブジェクト に 分ける こと も 可能 です 。 
ハンドラ は すべて の メソッド が デフォルト で 実装 さ れる よう に 、 xml . sax で 提供 さ れる 基底 クラス を 継承 し なく て は なり ませ ん 。 
アプリケーション にとって 最も 重要 な メイン の SAX コール バック ・ インターフェース です 。 
この インターフェース で 発生 する イベント の 順序 は ドキュメント 内 の 情報 の 順序 を 反映 し て い ます 。 
DTD イベント の ハンドラ です 。 未 構文 解析 エンティティ や 属性 など 、 パース に 必要 な DTD イベント の 抽出 だけ を おこなう インターフェース です 。 
エンティティ 解決 用 の 基本 インターフェース です 。 
この インターフェース を 実装 し た オブジェクト を 作成 し パーサ に 登録 する こと で 、 パーサ は すべて の 外部 エンティティ を 解決 する メソッド を 呼び出す よう に なり ます 。 
エラー や 警告 メッセージ を アプリケーション に 通知 する ため に パーサ が 使用 する インターフェース です 。 
この オブジェクト の メソッド が 、 エラー を ただちに 例外 に 変換 する か 、 あるいは 別 の 方法 で 処理 する か の 制御 を し て い ます 。 
これら の クラス に 加え 、 xml . sax . handler は 機能 や プロパティ 名 の シンボル 定数 を 提供 し て い ます 。 
値 : " http :// xml . org / sax / features / namespaces " 
true : 名前 空間 の 処理 を 有効 に する 。 
false : オプション で 名前 空間 の 処理 を 無効 に する ( 暗黙 に namespace - prefixes も 無効 に する - デフォルト )。 
アクセス : ( パース 時 ) リード オンリー ; ( パース 時 以外 ) 読み書き 可 feature _ namespace _ prefixes 
値 : " http :// xml . org / sax / features / namespace - prefixes " 
true : 名前 空間 宣言 で 用い られ て いる オリジナル の プリフィックス 名 と 属性 を 通知 する 。 
false : 名前 空間 宣言 で 用い られ て いる 属性 を 通知 し ない 。 
値 : " http :// xml . org / sax / features / string - interning " 
true : すべて の 要素 名 、 プリフィックス 、 属性 、 名前 、 名前 空間 、 URI 、 ローカル 名 を 組込み の intern 関数 を 使っ て シンボル に 登録 する 。 
false : 名前 の すべて を 必ずしも シンボル に 登録 し ない ( デフォルト )。 
アクセス : ( パース 時 ) リード オンリー ; ( パース 時 以外 ) 読み書き 可 feature _ validation 
値 : " http :// xml . org / sax / features / validation " 
true : すべて の 妥当 性 検査 エラー を 通知 する ( external - general - entities と external - parameter - entities が 暗黙 の 前提 に なっ て いる )。 
値 : " http :// xml . org / sax / features / external - general - entities " 
true : 外部 一般 ( テキスト ) エンティティ の 取り込み を おこなう 。 
false : 外部 一般 エンティティ を 取り込ま ない 。 
アクセス : ( パース 時 ) リード オンリー ; ( パース 時 以外 ) 読み書き 可 
値 : " http :// xml . org / sax / features / external - parameter - entities " 
true : 外部 DTD サブ セット を 含む すべて の 外部 パラメータ ・ エンティティ の 取り込み を おこなう 。 
false : 外部 パラーメタ・エンティティ および 外部 DTD サブ セット を 取り込ま ない 。 アクセス : ( パース 時 ) リード オンリー ; ( パース 時 以外 ) 読み書き 可 
すべて の 機能 の 一覧 。 property _ lexical _ handler 
値 : " http :// xml . org / sax / properties / lexical - handler " 
data type : xml . sax . sax 2 lib . LexicalHandler ( Python 2 で は 未 サポート ) description : コメント など 字句 解析 イベント 用 の オプション 拡張 ハンドラ 。 
アクセス : 読み書き 可 
data type : xml . sax . sax 2 lib . DeclHandler ( Python 2 で は 未 サポート ) description : ノーテーション や 未 解析 エンティティ を のぞく DTD 関連 イベント 用 の オプション 拡張 ハンドラ 。 
data type : org . w 3 c . dom . Node ( Python 2 で は 未 サポート ) description : パース 時 は DOM イテレータ における カレント DOM ノード 、 非 パース 時 は ルート DOM ノード を 指す 。 
アクセス : ( パース 時 ) リード オンリー ; ( パース 時 以外 ) 読み書き 可 property _ xml _ string 
値 : " http :// xml . org / sax / properties / xml - string " 
データ 型 : 文字 列 説明 : カレント ・ イベント の 元 に なっ た リテラル 文字 列 アクセス : リード オンリー 
既知 の プロパティ 名 の 全 リスト 。 
13 . 10 . 1 ContentHandler オブジェクト 
xml . sax パッケージ は Python 用 の Simple API for XML ( SAX ) インターフェース を 実装 し た 数 多く の モジュール を 提供 し て い ます 。 
また パッケージ に は SAX 例外 と SAX API 利用 者 が 頻繁 に 利用 する で あろ う 有用 な 関数 群 も 含ま れ て い ます 。 
その 関数 群 は 以下 の 通り です : make _ parser 
SAX XMLReader オブジェクト を 作成 し て 返し ます 。 
パーサ に は 最初 に 見つかっ た もの が 使わ れ ます 。 
parser _ list を 指定 する 場合 は 、 create _ parser () 関数 を 含ん で いる モジュール 名 の シーケンス を 与える 必要 が あり ます 。 
parser _ list の モジュール は デフォルト の パーサ の リスト に 優先 し て 使用 さ れ ます 。 
SAX パーサ を 作成 し て ドキュメント を パース し ます 。 
filename _ or _ stream として 指定 する ドキュメント は ファイル 名 、 ファイル ・ オブジェクト の いずれ でも かまい ませ ん 。 
handler パラメータ に は SAX ContentHandler の インスタンス を 指定 し ます 。 
error _ handler に は SAX ErrorHandler の インスタンス を 指定 し ます 。 これ が 指定 さ れ て い ない とき は 、 すべて の エラー で SAXParseException 例外 が 発生 し ます 。 
関数 の 戻り 値 は なく 、 すべて の 処理 は handler に 渡さ れ ます 。 
parse () に 似 て い ます が 、 こちら は パラメータ string で 指定 さ れ た バッファ を パース し ます 。 
典型 的 な SAX アプリケーション で は 3 種類 の オブジェクト ( リーダ 、 ハンドラ 、 入力 元 ) が 用い られ ます ( ここ で 言う リーダ と は パーサ を 指し て い ます )。 
つまり SAX アプリケーション に は 、 リーダ ・ オブジェクト 、 ( 作成 または オープン さ れる ) 入力 元 の オブジェクト 、 ハンドラ ・ オブジェクト 、 そして これら 3 つ の オブジェクト を 連携 さ せる こと が 必須 な の です 。 
Python は インターフェース という 明確 な 概念 を 提供 し て い ない ため 、 形 として は クラス が 用い られ て い ます 。 しかし 提供 さ れる クラス を 継承 せ ず に 、 アプリケーション 側 で 独自 に 実装 する こと も 可能 です 。 
InputSource 、 Locator 、 Attributes 、 AttributesNS 、 XMLReader の 各 インターフェース は 
モジュール で 定義 さ れ て い ます 。 ハンドラ ・ インターフェース は 
しばしば アプリケーション 側 で 直接 インスタンス が 作成 さ れる InputSource と ハンドラ ・ クラス は 利便 性 の ため xml . sax に も 含ま れ て い ます 。 
これら の インターフェース に関して は 後 に 解説 し ます 。 この ほか に xml . sax は 次 の 例外 クラス も 提供 し て い ます 。 
例外 SAXException 
XML エラー と 警告 を カプセル 化 し ます 。 
この クラス に は XML パーサ と アプリケーション で 発生 する エラー および 警告 の 基本 的 な 情報 を 持た せる こと が でき ます 。 また 機能 追加 や 地域 化 の ため に サブ クラス 化 する こと も 可能 です 。 
オプション の exception パラメータ は None もしくは パース 用 コード で 補足 、 渡っ て 来る 情報 で なけれ ば なり ませ ん 。 この クラス は SAX 例外 の 基底 クラス に なり ます 。 
例外 SAXParseException 
パース エラー 時 に 発生 する SAXException の サブ クラス です 。 パース エラー に関する 情報 として 、 この クラス の インスタンス が SAXErrorHandler インターフェース の メソッド に 渡さ れ ます 。 
この クラス は SAXException 同様 SAX Locator インターフェース も サポート し て い ます 。 
例外 SAXNotRecognizedException 
SAX XMLReader が 認識 でき ない 機能 や プロパティ に 遭遇 し た とき 発生 さ せる SAXException の サブ クラス です 。 
SAX アプリケーション や 拡張 モジュール において 同様 の 目的 に この クラス を 利用 する こと も でき ます 。 
例外 SAXNotSupportedException 
SAX XMLReader が 要求 さ れ た 機能 を サポート し て い ない とき 発生 さ せる SAXException の サブ クラス です 。 
SAX アプリケーション や 拡張 モジュール において 同様 の 目的 に この クラス を 利用 する こと も でき ます 。 
SAX API 定義 に関し 中心 と なっ て いる サイト です 。 
Java による 実装 と オンライン ・ ドキュメント が 提供 さ れ て い ます 。 
実装 と SAX API の 歴史 に関する 情報 の リンク も 掲載 さ れ て い ます 。 xml . sax . handler 
: モジュール 
SAX アプリケーション 向け の 有用 な 関数 群 . 
13 . 9 . 1 SAXException オブジェクト 
モジュール xml . sax . saxutils に は SAX アプリケーション の 作成 に 役立つ 多く の 関数 や クラス も 含ま れ て おり 、 直接 利用 し たり 、 基底 クラス として 使う こと が でき ます 。 
文字 列 データ 内 の ""、""、"" を エスケープ し ます 。 
オプション の entities パラメータ に 辞書 を 渡す こと で 、 その ほか の 文字 を エスケープ さ せる こと も 可能 です 。 
辞書 の キー と 値 は すべて 文字 列 で 、 キー に 指定 さ れ た 文字 は 対応 する 値 に 置換 さ れ ます 。 
エスケープ さ れ た 文字 列 " amp ;"、" lt ;"、" gt ;" を 元 の 文字 に 戻し ます 。 オプション の entities パラメータ に 辞書 を 渡す こと で 、 その ほか の 文字 を エスケープ さ せる こと も 可能 です 。 
escape () に 似 て い ます が 、 data は 属性 値 の 作成 に 使わ れ ます 。 
戻り 値 は クォート 済み の data で 、 置換 する 文字 の 追加 も 可能 です 。 
quoteattr () は クォート す べき 文字 を data の 文脈 から 判断 し 、 クォート す べき 文字 を 残さ ない よう に 文字 列 を エン コード し ます 。 
data の 中 に シングル ・ クォート 、 ダブル ・ クォート が あれ ば 、 両方 とも エン コード し 、 全体 を ダブル クォート で 囲み ます 。 
戻り 値 の 文字 列 は そのまま で 属性 値 として 利用 でき ます 。 
この 関数 は 参照 具象 構文 を 使っ て 、 HTML や SGML の 属性 値 を 生成 する の に 便利 です 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 クラス XMLGenerator 
この クラス は ContentHandler インターフェース の 実装 で 、 SAX イベント を XML ドキュメント に 書き 戻し ます 。 
つまり 、 XMLGenerator を コンテント・ハンドラ として 用いる と 、 パース し た オリジナル ・ ドキュメント の 複製 が 作れる の です 。 out に 指定 する の は ファイル 風 の オブジェクト で 、 デフォルト は sys . stdout です 。 
encoding は 出力 ストリーム の エン コーディング で 、 デフォルト は ' iso - 8859 - 1 ' です 。 クラス XMLFilterBase 
この クラス は XMLReader と クライアント・アプリケーション の イベント ・ ハンドラ と の 間 に 位置 する もの として 設計 さ れ て い ます 。 
デフォルト で は 何 も せ ず 、 ただ リクエスト を リーダ に 、 イベント を ハンドラ に 、 それぞれ 加工 せ ず 渡す だけ です 。 しかし 、 サブ クラス で メソッド を オーバーライド する と 、 イベント ・ ストリーム や リクエスト を 加工 し て から 渡す よう に 変更 可能 です 。 
この 関数 は 引き 数 に 入力 ソース 、 オプション として URL を 取り 、 読み取り 可能 な 解決 済み InputSource オブジェクト を 返し ます 。 
入力 ソース は 文字 列 、 ファイル 風 オブジェクト 、 InputSource の いずれ でも 良く 、 この 関数 を 使う こと で 、 パーサ は 様々 な source パラメータ を parse () に 渡す こと が 可能 に なり ます 。 
各 SAX パーサ は Python モジュール として XMLReader インターフェース を 実装 し て おり 、 関数 create _ parser () を 提供 し て い ます 。 
この 関数 は 新た な パーサ・オブジェクト を 生成 する 際 、 xml . sax . make _ parser () から 引き 数 なし で 呼び出さ れ ます 。 
クラス XMLReader 
SAX パーサ が 継承 可能 な 基底 クラス です 。 
クラス IncrementalParser 
入力 ソース を パース する 際 、 すべて を 一気に 処理 し ない で 、 途中 で ドキュメント の チャンク を 取得 し たい こと が あり ます 。 
SAX リーダ は 通常 、 ファイル 全体 を 一気に 読み込ま ず チャンク 単位 で 処理 する の です が 、 全体 の 処理 が 終わる まで parse () は return し ませ ん 。 
つまり 、 IncrementalParser インターフェース は parse () に この よう な 排他 的 挙動 を 望ま ない とき に 使わ れ ます 。 パーサ の インスタンス が 作成 さ れる と 、 feed メソッド を通じて すぐ に 、 データ を 受け入れ られる よう に なり ます 。 
SAX イベント と ドキュメント の 位置 を 関連付ける インターフェース です 。 
locator オブジェクト は DocumentHandler メソッド を 呼び出し て いる 間 だけ 正しい 情報 を 返し 、 それ 以外 と の とき に 呼び出す と 、 予測 でき ない 結果 が 返り ます 。 
情報 を 取得 でき ない 場合 、 メソッド は None を 返す こと も あり ます 。 
クラス InputSource 
クラス AttributesImpl 
Attributes interface ( 13 . 12 . 5 参照 ) の 実装 です 。 
辞書 風 の オブジェクト で 、 startElement () 内 で 要素 の 属性 表示 を おこない ます 。 
多く の 辞書 風 オブジェクト 操作 に 加え 、 ほか に も インターフェース に 記述 さ れ て いる メソッド を 、 多数 サポート し て い ます 。 
この クラス の オブジェクト は リーダ によって インスタンス を 作成 し なけれ ば なり ませ ん 。 また 、 attrs は 属性 名 と 属性 値 を 含む 辞書 風 オブジェクト で なけれ ば なり ませ ん 。 
クラス AttributesNSImpl 
AttributesImpl を 名前 空間 認識 型 に 改良 し た クラス で 、 startElementNS () に 渡さ れ ます 。 
AttributesImpl の 派生 クラス です が 、 namespaceURI と localname 、 この 2 つ の タプル を 解釈 し ます 。 
さらに 、 元 の ドキュメント に 出 て くる 修飾 名 を 返す 多く の メソッド を 提供 し ます 。 
この クラス は 
AttributesNSinterface ( section 13 . 12 . 6 参照 ) の 実装 です 。 
リリース 2 . 0 で 撤廃 さ れ まし た 。 
代わり に 
バージョン 1 . 5 . 2 で 変更 さ れ た 仕様 : 名前 空間 の サポート を 追加 
クラス XMLParser 
この クラス は 次 の インターフェース ・ メソッド と インスタンス 変数 を 提供 し て い ます 。 
要素 名 の マッピング へ の マッピング ・ オブジェクト で 、 デフォルト は 空 の 辞書 です 。 
この デフォルト 変数 は すべて の XMLParser インスタンス で 共有 さ れる ため 、 継承 せ ず に オーバーライド する 必要 が あり ます 。 
なお 、 要素 名 の マッピング の 方 は 、 その 要素 に 妥当 な 属性 名 と その デフォルト の 属性 値 を マッピング し て おり 、 デフォルト 値 が ない 場合 は None に なり ます 。 
要素 名 から タプル へ の マッピング です 。 
タプル に は 要素 の 開始 タグ と 終了 タグ を それぞれ 処理 する 関数 、 または unknown _ starttag () や unknown _ endtag () 呼出さ れ た 場合 に 使用 する None が 含ま れ ます 。 
デフォルト は 空 の 辞書 に なっ て い ます 。 
この デフォルト 変数 は すべて の XMLParser インスタンス で 共有 さ れる ため 、 継承 せ ず に オーバーライド する 必要 が あり ます 。 
エンティティ 名 から その 値 へ の マッピング です 。 
デフォルト で ' lt '、 ' gt '、 ' amp '、 ' quot '、 and ' apos ' の 定義 が さ れ て い ます 。 
同時に 未 処理 の データ は すべて 失わ れ ます 。 
この メソッド は インスタンス 生成 時 、 暗黙 裡 に 呼び出さ れ ます 。 
タグ の 処理 を 中止 し ます 。 
この メソッド の 呼び出し 以降 、 すべて の 入力 は リテラル ( CDATA ) として 扱わ れ ます 。 
リテラル モード ( CDATA mode ) に 入り ます 。 
この モード は 最後 に 処理 し た 開始 タグ に 対応 する 終了 タグ が 見つかっ た 時点 で 自動的 に 終了 し ます 。 
テキスト を パーサ に 送り ます 。 
完全 な タグ で 構成 さ れ た 部分 まで を 処理 し 、 不完全 な タグ は 次 の データ が 来る か close () が 呼び出さ れる まで バッファリング さ れ ます 。 
現在 バッファリング 中 の データ の 前 に end - of - file ファイル が 来 た もの と 強制 的 に みなし ます 。 
この メソッド は 派生 クラス において 、 入力 終了 時 に おこなう 追加 処理 の ため に 再 定義 さ れる こと も あり ます が 、 再 定義 し た メソッド の 中 で 必ず この close () を 呼び出さ なけれ ば なり ませ ん 。 
data の 中 に ある 実体 参照 と 文字 参照 を すべて 変換 し 、 変換 後 の 文字 列 を 返し ます 。 
現在 有効 な 名前 空間 の 短縮 名 から 名前 空間 URI へ の マッピング を 返し ます 。 
この メソッド は "? xml ...?" タグ を 処理 し ます 。 引数 は タグ 中 の エン コーディング の 値 と スタンドアロン 宣言 です 。 
エン コーディング と スタンドアロン 属性 は ともに オプション です 。 
デフォルト は それぞれ None と 文字 列 ' no ' に なり ます 。 
引数 に は ルート 要素 の タグ 名 、 公式 公開 識別子 
( 指定 さ れ て い ない 場合 は None )、 システム 識別子 、 および 内部 DTD サブ セット を 処理 せ ず そのまま 文字 列 で 指定 し ます ( 指定 さ れ て い ない 場合 は None )。 
この メソッド は インスタンス 変数 elements に ハンドラ が 定義 さ れ て いる 開始 タグ を 処理 し ます 。 
tag は タグ 名 で 、 method は 開始 タグ の 意味 解析 サポート に 使わ れる 関数 ( メソッド ) です 。 
attributes は タグ 内 に 記述 さ れ て いる 属性 名 が キー 、 属性 値 を 値 として 持つ 辞書 に なり ます 。 
文字 および エンティティ の 参照 は 解釈 さ れ ます 。 
たとえば 、 開始 タグ A HREF =" http :// www . cwi . nl /" に対する この メドッド の 呼出し は handle _ starttag (' A ', self . elements [' A '][ 0 ], {' HREF ':' http :// www . cwi . nl /'}) と なり ます 。 
基本 的 な 実装 は 単純 で 、 引数 に attributes を 使い 、 method を 呼び出す だけ の もの です 。 
この メソッド は インスタンス 変数 elements に ハンドラ が 定義 さ れ て いる 終了 タグ を 処理 し ます 。 
tag は タグ 名 で 、 method は 終了 タグ の 意味 解析 サポート に 使わ れる 関数 ( メソッド ) です 。 
たとえば 、 終了 タグ / A に対する この メドッド の 呼出し は handle _ endtag (' A ', self . elements [' A '][ 1 ]) と なり ます 。 
基本 的 な 実装 は 単純 で 、 method を 呼び出す だけ の もの です 。 
これ は 任意 の データ を 処理 する メソッド です 。 
派生 クラス で オーバライド し て 使い ます 。 基底 クラス の 実装 で は 何 も おこない ませ ん 。 
この 値 が ASCII に 変換 さ れ た 後 、 その 文字 列 を 引数 に し て メソッド handle _ data () が 呼び出さ れ ます 。 
ref の 値 が 許容 範囲 外 の とき は 、 エラーハンドリング の ため に unknown _ charref ( ref ) が 呼び出さ れ ます 。 
ASCII 範囲 外 の 文字 を サポート する に は 、 サブ クラス で この メソッド を オーバーライド する 必要 が あり ます 。 
コメント を 検出 する と 、 この メソッド が 呼び出さ れ ます 。 
引数 comment は 、 デリミタ "!-" から "-" の 間 に ある 文字 列 で あり 、 デリミタ 自体 は 含ま れ ませ ん 。 
たとえば コメント "!- text -" を 処理 する 場合 、 引数 は ' text ' で この メソッド が 呼び出さ れ ます 。 
この メソッド は デフォルト で は 何 も し ませ ん 。 
CDATA 要素 を 検出 する と 、 この メソッド が 呼び出さ れ ます 。 
引数 data は 、 デリミタ "![ CDATA [" と "]]" の 間 に ある 文字 列 で あり 、 デリミタ 自体 は 含ま れ ませ ん 。 
たとえば エンティティ "![ CDATA [ text ]]" を 処理 する 場合 、 引数 は ' text ' で この メソッド が 呼び出さ れ ます 。 
この メソッド は デフォルト で は 何 も し ない ため 、 オーバーライド し て 使用 し ます 。 
処理 命令 ( PI ) を 検出 する と 、 この メソッド が 呼び出さ れ ます 。 
引数 name は 処理 命令 の ターゲット 、 data は 、 処理 命令 ターゲット と 終了 デリミタ の 間 に ある 文字 列 で あり 、 デリミタ 自体 は 含ま れ ませ ん 。 
たとえば 命令 "? XML text ?" を 処理 する 場合 、 引数 は ' XML ' と ' text ' の 2 つ で この メソッド が 呼び出さ れ ます 。 
この メソッド は デフォルト で は 何 も し ませ ん 。 
なお ドキュメント の 冒頭 に 現れる "? xml ..?" は handle _ xml () で 処理 さ れ ます 。 
宣言 を 検出 する と 、 この メソッド が 呼び出さ れ ます 。 
引数 data は 、 デリミタ "!" と "" の 間 に ある 文字 列 で あり 、 デリミタ 自体 は 含ま れ ませ ん 。 
たとえば 
エンティティ 宣言 "! ENTITY text " を 処理 する 場合 、 引数 は ' ENTITY text ' で この メソッド が 呼び出さ れ ます 。 
この メソッド は デフォルト で は 何 も し ない ため 、 オーバーライド し て 使用 し ます 。 
なお ドキュメント の 冒頭 に 現れる "! DOCTYPE ..." は 別途 処理 し なけれ ば なり ませ ん 。 
シンタックス エラー が 発生 する と 、 この メソッド が 呼び出さ れ ます 。 
引数 message は エラー 内容 を 知らせる テキスト です 。 
この メソッド は デフォルト で RuntimeError 例外 を 発生 さ せ ます 。 
メソッド を オーバライド し て 、 return する よう に 変える こと も 可能 です 。 
なお 、 この メソッド が 呼び出さ れる の は 回復 可能 な エラー の 場合 だけ です 。 
回復 不能 な エラー 発生 し た とき は 、 syntax _ error () を 呼び出す こと なく RuntimeError が 発生 し ます 。 
未知 の 開始 タグ を 検出 する と 、 この メドッド が 呼び出さ れ ます 。 
派生 クラス で オーバライド し て 使い ます 。 基底 クラス の 実装 で は 何 も おこない ませ ん 。 
未知 の 終了 タグ を 検出 する と 、 この メドッド が 呼び出さ れ ます 。 
解決 でき ない 文字 参照 を 検出 する と 、 この メドッド が 呼び出さ れ ます 。 派生 クラス で オーバライド し て 使い ます 。 
基底 クラス の 実装 で は 何 も おこない ませ ん 。 
解決 でき ない 実体 参照 を 検出 する と 、 この メドッド が 呼び出さ れ ます 。 
派生 クラス で オーバライド し て 使い ます 。 基底 クラス の 実装 で は syntax _ error () で エラー を 通知 する よう に なっ て い ます 。 
World Wide Web Consortium ( W 3 C ) が 送出 し た XML の 仕様 書 で 、 XML の シンタックス と 処理 に 必要 な 内容 が 定義 さ れ て い ます 。 
仕様 書 の 翻訳 など 、 その ほか の 文献 は http :// www . w 3 . org / XML / で 参照 でき ます 。 
Python XML トピック ガイド は Python で XML を 扱う ため の 情報 と XML 関連 情報 源 へ の リンク を 数多く 提供 し て い ます 。 
Python XML Special Interest Group は Python で XML を 扱う ため の 開発 に 多大 な 貢献 を し て い ます 。 
... ない ます 。 
実際 に は 、 パーサ に 非 標準 的 な 形式 の ドキュメント を 許容 する ため の 、 いくつ か の キーワード 引数 を 指定 できる よう に なっ て おり 、 その 内容 は 次 の 通り です 。 
これら の デフォルト 値 は すべて 0 ( false ) です が 、 最後 の キーワード 引数 だけ は 1 ( true ) に なっ て い ます 。 
accept _ unquoted _ attributes ( 特定 の 属性 が クォート さ れ て い なく て も 受け入れる よう に する )、 accept _ missing _ endtag _ name (/ の よう な タグ 名 なし の 終了 タグ を 許容 する )、 map _ case ( タグ や 属性 名 が 大文字 で 書か れ て い て も 、 小文字 で 解釈 する )、 accept _ utf 8 ( UTF - 8 文字 列 の 入力 を 許容 する 。 これ は XML 標準 規格 で 必須 と さ れ て いる 内容 です が 、 Python は 今 の ところ UTF - 8 を 適切 に 処理 でき ない ため 、 デフォルト で は 無効 に なっ て い ます 。 
)、 translate _ attribute _ references ( 属性 値 として 使わ れ て いる 文字 列 や 実体 参照 は それ 以上 解釈 し ない 。 ) 
XML - RPC は XML を 利用 し た 遠隔 手続き 呼び出し ( Remote Procedure Call ) の 一種 で 、 HTTP を トランスポート として 使用 し ます 。 
XML - RPC で は 、 クライアント は リモート サーバ ( URI で 指定 さ れ た サーバ ) 上 の メソッド を パラメータ を 指定 し て 呼び出し 、 構造 化 さ れ た データ を 取得 し ます 。 
この モジュール は 、 XML - RPC クライアント の 開発 を サポート し て おり 、 Python オブジェクト に 適合 する 転送 用 XML の 変換 の 全て を 行い ます 。 
クラス ServerProxy 
ServerProxy は 、 リモート の XML - RPC サーバ と の 通信 を 管理 する オブジェクト です 。 
最初 の パラメータ は URI ( Uniform Resource Indicator ) で 、 通常 は サーバ の URL を 指定 し ます 。 
2 番目 の パラメータ に は トランスポート ・ ファクトリ を 指定 する 事 が でき ます 。 トランスポート ・ ファクトリ を 省略 し た 場合 、 URL が https : なら モジュール 内部 の SafeTransport インスタンス を 使用 し 、 それ 以外 の 場合 に は モジュール 内部 の Transport インスタンス を 使用 し ます 。 
オプション の 3 番目 の 引数 は エン コード 方法 で 、 デフォルト で は UTF - 8 です 。 
オプション の 4 番目 の 引数 は デバッグ フラグ です 。 
allow _ none が 真 の 場合 、 Python の 定数 None は XML に 翻訳 さ れ ます ; デフォルト の 動作 は None に対して TypeError を 送出 し ます 。 
この 仕様 は XML - RPC 仕様 で よく 用い られ て いる 拡張 です が 、 全て の クライアント や サーバ で サポート さ れ て いる わけ で は あり ませ ん ; 詳細 記述 について は http :// ontosys . com / xml - rpc / extensions . html を 参照 し て ください 。 
HTTP 及び HTTPS 通信 の 両方 で 、 http :// user : pass @ host : port / path の よう な HTTP 基本 認証 の ため の 拡張 URL 構文 を サポート し て い ます 。 
user : pass は base 64 で エン コード し て HTTP の ` Authorization ' ヘッダ と なり 、 XML - RPC メソッド 呼び出し 時 に 接続 処理 の 一部 として リモート サーバ に 送信 さ れ ます 。 
リモート サーバ が 基本 認証 を 要求 する 場合 のみ 、 この 機能 を 利用 する 必要 が あり ます 。 生成 さ れる インスタンス は リモート サーバ へ の プロクシオブジェクト で 、 RPC 呼び出し を 行う 為 の メソッド を 持ち ます 。 
リモート サーバ が イントロスペクション API を サポート し て いる 場合 は 、 リモート サーバ の サポート する メソッド を 検索 ( サービス 検索 ) や サーバ の メタデータ の 取得 など も 行え ます 。 
ServerProxy インスタンス の メソッド は 引数 として Python の 基礎 型 と オブジェクト を 受け取り 、 戻り 値 として Python の 基礎 型 か オブジェクト を 返し ます 。 
以下 の 型 を XML に 変換 ( XML を通じて マーシャル する ) する 事 が でき ます ( 特別 な 指定 が ない 限り 、 逆 変換 で も 同じ 型 として 変換 さ れ ます ): 
名前 
定数 True と False 
整数 
そのまま 
浮動 小数点 
文字 列 
配列 
変換 可能 な 要素 を 含む Python シーケンス 。 
戻り 値 は リスト 。 
構造 体 
Python の 辞書 。 
キー は 文字 列 のみ 。 全て の 値 は 変換 可能 で なく て は なら ない 。 
日付 
エポック から の 経過 秒 数 。 引数 として 指定 する 時 は DataTime ラッパ クラス の インスタンス を 使用 する 。 
バイナリ 
Binary ラッパ クラス の インスタンス 
上記 の XML - RPC で サポート する 全 データ 型 を 使用 する こと が でき ます 。 
メソッド 呼び出し 時 、 XML - RPC サーバ エラー が 発生 する と Fault インスタンス を 送出 し 、 HTTP / HTTPS トランスポート 層 で エラー が 発生 し た 場合 に は ProtocolError を 送出 し ます 。 
Python 2 . 2 以降 で は 組み込み 型 の サブ クラス を 作成 する 事 が でき ます が 、 現在 の ところ xmlrpclib で は その よう な サブ クラス の インスタンス を マーシャル する こと は でき ませ ん 。 文字 列 を 渡す 場合 、 "" ・ "" ・ "" など の XML で 特殊 な 意味 を 持つ 文字 は 自動的 に エスケープ さ れ ます 。 
しかし 、 ASCII 値 0 〜 31 の 制御 文字 など の XML で 使用 する こと の でき ない 文字 を 使用 する こと は でき ず 、 使用 する と その XML - RPC リクエスト は well - formed な XML と は なり ませ ん 。 
その よう な 文字 列 を 渡す 必要 が ある 場合 は 、 後述 の Binary ラッパ クラス を 使用 し て ください 。 
Server は 、 上位 互換 性 の 為 に ServerProxy の 別名 として 残さ れ て い ます 。 
新しい コード で は ServerProxy を 使用 し て ください 。 
ZIP は 一般 に よく 知ら れ て いる アーカイブ ( 書庫 化 ) および 圧縮 の 標準 ファイル フォーマット です 。 この モジュール で は ZIP 形式 の ファイル の 作成 、 読み書き 、 追記 、 書庫 内 の ファイル 一覧 の 作成 を 行う ため の ツール を 提供 し ます 。 
より 高度 な 使い方 で この モジュール を 利用 し たい なら 、 
不備 の ある ZIP ファイル 操作 の 際 に 送出 さ れる エラー 
ZIP ファイル の 読み書き の ため の クラス です 。 
コンス トラクタ の 詳細 について は 、 `` ZipFile オブジェクト '' ( 7 . 18 . 1 節 ) を 参照 し て ください 。 
Python ライブラリ を 含む ZIP アーカイブ を 生成 する ため の クラス です 。 
クラス ZipInfo 
アーカイブ 中 の メンバ に関する 情報 を 提供 する ため に 用い られる クラス です 。 
この クラス の インスタンス は ZipFile オブジェクト の getinfo () および infolist () メソッド によって 返さ れ ます 。 
zipfile モジュール を 利用 する ほとんど の ユーザ は この オブジェクト を 自ら 生成 する 必要 は なく 、 モジュール が 生成 し て 返す オブジェクト を 利用 する だけ でしょ う 。 filename は アーカイブ メンバ の 完全 な 名前 で 、 date _ time は ファイル の 最終 更新 時刻 を 記述 する 、 6 つ の フィールド から なる タプル で なく て は なり ませ ん 。 
各 フィールド について は 7 . 18 . 3 , `` ZipInfo オブジェクト '' 節 を 参照 し て ください 。 is _ zipfile 
filename が 正しい マジックナンバ を もつ ZIP ファイル の とき に True を 返し 、 そう で ない 場合 False を 返し ます 。 
この モジュール は 現在 の ところ 、 コメント を 追記 し た ZIP ファイル を 扱う こと が でき ませ ん 。 
アーカイブ メンバ が 圧縮 さ れ て い ない こと を 表す 数値 定数 です 。 
通常 の ZIP 圧縮 手法 を 表す 数値 定数 。 
ZIP 圧縮 は zlib モジュール を 必要 と し ます 。 
現在 の ところ 他 の 圧縮 手法 は サポート さ れ て い ませ ん 。 
ZIP ファイル 形式 および アルゴリズム を 作成 し た Phil Katz による ドキュメント 。 
Info - ZIP プロジェクト による ZIP アーカイブ プログラム 及び プログラム 開発 ライブラリ に関する 情報 。 
この モジュール で は 、 データ 圧縮 を 必要 と する アプリケーション が zlib ライブラリ を 使っ て 圧縮 および 解凍 を 行える よう に し ます 。 
圧縮 および 解凍 時 の エラー によって 送出 さ れる 例外 。 
string の Adler - 32 チェックサム を 計算 し ます 。 
( Adler - 32 チェックサム は 、 おおむね CRC 32 と 同等 の 信頼 性 を 持ち ながら はるか に 高速 に 計算 する こと が でき ます 。 
) value が 与え られ て いれ ば 、 value は チェックサム 計算 の 初期 値 として 使わ れ ます 。 それ 以外 の 場合 に は 固定 の デフォルト 値 が 使わ れ ます 。 
この 機能 によって 、 複数 の 入力 文字 列 を 結合 し た データ 全体 にわたり 、 通し の チェックサム を 計算 する こと が でき ます 。 
この アルゴリズム は 暗号 法論 的 に は 強力 と は いえ ない ので 、 認証 や デジタル 署名 など に 用いる べき で は あり ませ ん 。 
この アルゴリズム は チェックサムアルゴリズム として 用いる ため に 設計 さ れ た もの な ので 、 汎用 的 な ハッシュ アルゴリズム に は 向き ませ ん 。 
デフォルト の 値 は 6 です 。 
圧縮 時 に 何らかの エラー が 発生 し た 場合 、 error 例外 を 送出 し ます 。 
string の CRC ( Cyclic Redundancy Check , 巡回 符号 方式 ) 
チェックサム を 計算 し ます 。 
value が 与え られ て いれ ば 、 チェックサム 計算 の 初期 値 として 使わ れ ます 。 
与え られ て い なけれ ば デフォルト の 初期 値 が 使わ れ ます 。 
value を 与える こと で 、 複数 の 入力 文字 列 を 結合 し た データ 全体 にわたり 、 通し の チェックサム を 計算 する こと が でき ます 。 
この アルゴリズム は 暗号 法論 的 に は 強力 で は なく 、 認証 や デジタル 署名 に 用いる べき で は あり ませ ん 。 
アルゴリズム は チェックサムアルゴリズム として 設計 さ れ て え いる ので 、 汎用 の ハッシュ アルゴリズム に は 向き ませ ん 。 
string 内 の データ を 解凍 し て 、 解凍 さ れ た データ を 含む 文字 列 を 返し ます 。 
wbits パラメタ は ウィンドウ バッファ の 大き さ を 制御 し ます 。 
bufsize が 与え られ て いれ ば 、 出力 バッファ の 書記 サイズ として 使わ れ ます 。 
解凍 処理 に 何らかの エラー が 生じ た 場合 、 error 例外 を 送出 し ます 。 wbits の 絶対 値 は 、 データ を 圧縮 する 際 に 用い られる ヒストリ バッファ の サイズ ( ウィンドウサイズ ) に対し 、 2 を 底 と する 対数 を とっ た もの です 。 
最近 の ほとんど の バージョン の zlib ライブラリ を 使っ て いる なら 、 wbits の 絶対 値 は 8 から 15 と する べき です 。 より 大きな 値 は より 良好 な 圧縮 に つながり ます が 、 より 多く の メモリ を 必要 と し ます 。 
デフォルト の 値 は 15 です 。 
wbits の 値 が 負 の 場合 、 標準 的 な gzip ヘッダ を 出力 し ませ ん 。 これ は zlib ライブラリ の 非公開 仕様 で あり 、 unzip の 圧縮 ファイル 形式 に対する 互換 性 の ため の もの です 。 
bufsize は 解凍 さ れ た データ を 保持 する ため の バッファ サイズ の 初期 値 です 。 
バッファ の 空き は 必要 に 応じ て 必要 な だけ 増加 する ので 、 なれ ば 、 必ずしも 正確 な 値 を 指定 する 必要 は あり ませ ん 。 この 値 の チューニング で できる こと は 、 malloc () が 呼ば れる 回数 を 数 回 減らす こと ぐらい です 。 
デフォルト の サイズ は 16384 です 。 
メモリ 上 に 一 度 に 展開 でき ない よう な データ ストリーム を 解凍 する ため に 用い られる 解凍 オブジェクト を 返し ます 。 
wbits パラメタ は ウィンドウ バッファ の サイズ を 制御 し ます 。 
圧縮 オブジェクト は 以下 の メソッド を サポート し ます : 
string を 圧縮 し 、 圧縮 さ れ た データ を 含む 文字 列 を 返し ます 。 この 文字 列 は 少なくとも string に 相当 し ます 。 
この データ は 以前 に 呼ん だ compress () が 返し た 出力 と 結合 する こと が でき ます 。 
入力 の 一部 は 以後 の 処理 の ため に 内部 バッファ に 保存 さ れる こと も あり ます 。 
未 処理 の 入力 データ が 処理 さ れ 、 この 未 処理 部分 を 圧縮 し た データ を 含む 文字 列 が 返さ れ ます 。 mode は 定数 Z _ SYNC _ FLUSH 、 Z _ FULL _ FLUSH 、 または Z _ FINISH の いずれ か を とり 、 デフォルト 値 は Z _ FINISH です 。 
Z _ SYNC _ FLUSH および Z _ FULL _ FLUSH で は これ 以後 に も データ 文字 列 を 圧縮 できる モード で 、 解凍 時 の 部分 的 な エラーリカバリ を 可能 に し ます 。 一方 、 Z _ FINISH は 圧縮 ストリーム を 閉じ 、 これ 以後 の データ の 圧縮 を 禁止 し ます 。 
mode に Z _ FINISH を 設定 し て flush () メソッド を 呼び出し た 後 は 、 compress () メソッド を 再び 呼ぶ べき で は あり ませ ん 。 唯一 の 現実 的 な 操作 は この オブジェクト を 削除 する こと だけ です 。 
解凍 オブジェクト は 以下 の メソッド と 2 つ の 属性 を サポート し ます : 
圧縮 データ の 末尾 まで の バイト 列 が 入っ た 文字 列 です 。 
すなわち 、 この 値 は 圧縮 データ の 入っ て いる バイト 列 の 最後 の 文字 まで が 読み 出せる かぎり "" と なり ます 。 
解凍 さ れ た データ を 収める バッファ の 長 さ 制限 を 超え た ため に 、 最も 最近 の decompress 呼び出し で 処理 し きれ なかっ た データ を 含む 文字 列 です 。 
この データ は まだ zlib 側 から は 見え て い ない ので 、 正しい 解凍 出力 を 得る に は 以降 の decompress メソッド 呼び出し に ( 場合 によって は 後続 の データ が 追加 さ れ た ) データ を 差し戻さ なけれ ば なり ませ ん 。 
[ max _ length ] string を 解凍 し 、 少なくとも string の 一部分 に 対応 する 解凍 さ れ た データ を 含む 文字 列 を 返し ます 。 
この データ は 以前 に decompress () メソッド を 呼ん だ 時 に 返さ れ た 出力 と 結合 する こと が でき ます 。 
入力 データ の 一部分 が 以後 の 処理 の ため に 内部 バッファ に 保存 さ れる こと も あり ます 。 オプション パラメタ max _ length が 与え られる と 、 返さ れる 解凍 データ の 長 さ が max _ length 以下 に 制限 さ れ ます 。 
この こと は 入力 し た 圧縮 データ の 全て が 処理 さ れる と は 限ら ない こと を 意味 し 、 処理 さ れ なかっ た データ は unconsumed _ tail 属性 に 保存 さ れ ます 。 
解凍 処理 を 継続 し たい なら ば 、 この 保存 さ れ た データ を 以降 の decompress () 呼び出し に 渡さ なく て は なり ませ ん 。 
max _ length が 与え られ なかっ た 場合 、 全て の 入力 が 解凍 さ れ 、 unconsumed _ tail 属性 は 空文字 列 に なり ます 。 
未 処理 の 入力 データ を 全て 処理 し 、 最終 的 に 圧縮 さ れ なかっ た 残り の 出力 文字 列 を 返し ます 。 
flush () を 呼ん だ 後 、 decompress () を 再度 呼ぶ べき で は あり ませ ん 。 この とき できる 唯一 現実 的 な 操作 は オブジェクト の 削除 だけ です 。 
モジュール オブジェクト 固有 の 関数 は 数 個 しか あり ませ ん 。 
この PyTypeObject の インスタンス は Python の モジュール オブジェクト 型 を 表現 し ます 。 
この オブジェクト は 、 Python プログラム に は types . ModuleType として 公開 さ れ て い ます 。 
o が モジュール オブジェクト か モジュール オブジェクト の サブ タイプ で ある とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
o が モジュール オブジェクト で 、 かつ モジュール オブジェクト の サブ タイプ で ない とき に 真 を 返し ます 。 
PyModule _ Type . バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 PyObject * 
__ name __ 属性 が name に 設定 さ れ た 新た な モジュール オブジェクト を 返し ます 。 
モジュール の __ doc __ および __ name __ 属性 だけ に 値 が 入っ て い ます ; __ file __ 属性 に 値 を 入れる の は 呼び出し 側 の 責任 です 。 
module の 名前 空間 を 実現 する 辞書 オブジェクト を 返し ます ; この オブジェクト は モジュール オブジェクト の __ dict __ と 同じ です 。 
この 関数 が 失敗 する こと は あり ませ ん 。 
拡張 モジュール で は 、 この 関数 で 得 た モジュール の __ dict __ を 直接 いじる より 、 他 の PyModule _*() および PyObject _*() 関数 を 使う よう 勧め ます 。 
module の __ name __ の 値 を 返し ます 。 
モジュール が この 属性 を 提供 し て い ない 場合 や 文字 列 型 で ない 場合 、 SystemError を 送出 し て NULL を 返し ます 。 
module を ロード する ため に 使っ た ファイル の 名前 を 、 module の __ file __ 属性 から 調べ て 返し ます 。 
__ file __ が 定義 さ れ て い ない 場合 や 文字 列 型 で ない 場合 、 SystemError を 送出 し て NULL を 返し ます 。 
module に オブジェクト を name として 追加 し ます 。 
この 関数 は モジュール の 初期 化 関数 から 利用 さ れる 便宜 関数 です 。 
エラー の とき に は - 1 を 、 成功 し た とき に は 0 を 返し ます 。 
バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
module に 整数 定数 を name として 追加 し ます 。 
この 便宜 関数 は モジュール の 初期 化 関数 から 利用 さ れ て い ます 。 
エラー の とき に は - 1 を 、 成功 し た とき に は 0 を 返し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
module に 文字 列 定数 を name として 追加 し ます 。 
文字 列 value は null 終端 さ れ て い なけれ ば なり ませ ん 。 
エラー の とき に は - 1 を 、 成功 し た とき に は 0 を 返し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
クラス Morsel 
RFC 2109 の 属性 を キー と 値 で 保持 する abstract クラス です 。 Morsel は 辞書 風 の オブジェクト で 、 キー は 次 の よう な RFC 2109 準拠 の 定数 と なっ て い ます 。 
キー の 大 小文字 は 区別 さ れ ます 。 
クッキー の 値 。 
実際 に 送信 する 形式 に エン コード さ れ た cookie の 値 。 
cookie の 名前 。 
メンバ key 、 value 、 coded _ value に 値 を セット し ます 。 
K が Morsel の キー で ある か どう か を 判定 し ます 。 
Mosel を HTTP ヘッダ 形式 の 文字 列 表現 に し て 返し ます 。 
attrs を 指定 し ない 場合 、 デフォルト で すべて の 属性 を 含め ます 。 
ブラウザ が JavaScript を サポート し て いる 場合 、 HTTP ヘッダ を 送信 し た 場合 と 同様 に 動作 する 埋め込み 可能 な JavaScript snippet を 返し ます 。 attrs の 意味 は output () と 同じ です 。 
Mosel の 文字 列 表現 を HTTP や JavaScript で 囲ま ず に 出力 し ます 。 attrs の 意味 は output () と 同じ です 。 
読み出し 待ち の 打鍵 イベント が 存在 する 場合 に 真 を 返し ます 。 
打鍵 を 読み取り 、 読み出さ れ た 文字 を 返し ます 。 
コンソール に は 何 も エコー バック さ れ ませ ん 。 
この 関数 呼び出し は 読み出し 可能 な 打鍵 が ない 場合 に は ブロック し ます が 、 文字 を 読み 出せる よう に する ため に Enter の 打鍵 を 待つ 必要 は あり ませ ん 。 打鍵 さ れ た キー が 特殊 機能 キー ( function key ) で ある 場合 、 この 関数 は ' 000 ' または ' xe 0 ' を 返し ます ; キー コード は 次に 関数 を 呼び出し た 際 に 返さ れ ます 。 
この 関数 で Control - C の 打鍵 を 読み出す こと は でき ませ ん 。 
getch () に 似 て い ます が 、 打鍵 し た 字 が 印字 可能 な 文字 の 場合 エコー バック さ れ ます 。 
キャラクタ char を バッファリング を 行わ ない で コンソール に 出力 し ます 。 
キャラクタ char を コンソール バッファ に `` 押し戻し ( push back )'' ます ; これ により 、 押し戻さ れ た 文字 は getch () や getche () で 次に 読み 出さ れる 文字 に なり ます 。 
C 言語 による 実行 時 システム における ファイル 記述 子 fd に 基づい て 、 ファイル の 一部 に ロック を かけ ます 。 
一つ の ファイル の 複数 の 領域 を 同時に ロック する こと は 可能 です が 、 領域 が 重複 し て は なり ませ ん 。 
連接 する 領域 を まとめ て 指定 する こと は でき ませ ん ; それら の 領域 は 個別 に ロック 解除 し なけれ ば なり ませ ん 。 
指定 さ れ た バイト 列 に ロック を かけ ます 。 
指定 領域 が ロック でき なかっ た 場合 、 プログラム は 1 秒 後 に 再度 ロック を 試み ます 。 
10 回 再 試行 し た 後 でも ロック を かけ られ ない 場合 、 IOError が 送出 さ れ ます 。 
指定 領域 は あらかじめ ロック さ れ て い なけれ ば なり ませ ん 。 
ファイル 記述 子 fd に対して 、 行末 文字 の 変換 モード を 設定 し ます 。 
テキスト モード に 設定 する に は 、 flags を os . O _ TEXT に し ます ; バイナリ モード に する に は os . O _ BINARY に し ます 。 
C 言語 による 実行 時 システム における ファイル 記述 子 を ファイル ハンドル handle から 生成 し ます 。 
返さ れる ファイル 記述 子 は os . fdopen () で ファイル オブジェクト を 生成 する ため に 使う こと が でき ます 。 
ファイル 記述 子 fd の ファイル ハンドル を 返し ます 。 
fd が 認識 でき ない 場合 、 IOError を 送出 し ます 。 
malloc () さ れ た ヒープ 領域 を 強制 的 に 消去 さ せ て 、 未 使用 の メモリ ブロック を オペレーティングシステム に 返し ます 。 
この 関数 は Windows NT 上 で のみ 動作 し ます 。 
失敗 し た 場合 、 IOError を 送出 し ます 。 
6 . 29 . 4 ログ イベント を ネットワーク 越し に 送受信 する 
コンソール と ファイル に 、 別々 の メッセージ 書式 で 、 別々 の 状況 に 応じ た ログ 出力 を 行わ せ たい と し ましょ う 。 
例えば DEBUG より も 高い レベル の メッセージ は ファイル に 記録 し 、 INFO 以上 の レベル の メッセージ は コンソール に 出力 し たい という 場合 です 。 
また 、 ファイル に は タイム スタンプ を 記録 し 、 コンソール に は 出力 し ない と し ます 。 
この スクリプト を 実行 する と 、 コンソール に は 以下 の よう に 表示 さ れる でしょ う : 
そして 、 ファイル は 以下 の よう に なる はず です : 
ご覧 の よう に 、 DEBUG メッセージ は ファイル だけ に 出力 さ れ 、 その他 の メッセージ は 両方 に 出力 さ れ ます 。 
この 例題 で は 、 コンソール と ファイル の ハンドラ だけ を 使っ て い ます が 、 実際 に は 任意 の 数 の ハンドラ や 組み合わせ を 使え ます 。 
mutex に は 以下 の メソッド が あり ます : 
mutex が ロック さ れ て いる か どう か 調べ ます 。 
「 原子 的 ( Atomic )」 な Test - and - Set 操作 です 。 
ロック が セット さ れ て い なけれ ば 獲得 し て True を 返し ます 。 それ 以外 の 場合 に は False を 返し ます 。 
mutex が ロック さ れ て い なけれ ば function ( argument ) を 実行 し ます 。 
mutex が ロック さ れ て いる 場合 、 関数 と その 引数 を キュー に 置き ます 。 キュー に 置か れ た 
function ( argument ) が い つ 実行 さ れる か について は unlock を 参照 し て ください 。 
キュー が 空 なら ば mutex を ロック 解除 し ます 。 そう で なけれ ば 、 キュー の 最初 の 要素 を 実行 し ます 。 
名前 ( name ) 
と は 、 オブジェクト を 参照 する もの を 指し ます 。 
名前 へ の 束縛 ( name binding ) 操作 を 行う と 、 名前 を 導入 でき ます 。 
プログラム テキスト 中 に 名前 が 出現 する たび に 、 その 名前 が 使わ れ て いる 最も 内側 の 関数 ブロック 中 で 作成 さ れ た 束縛 ( binding ) を 使っ て 名前 の 参照 が 行わ れ ます 。 
ブロック ( block ) 
は 、 Python の プログラム テキスト から なる 断片 で 、 一つ の 実行 単位 と なる もの です 。 
モジュール 、 関数 本体 、 そして クラス 定義 は ブロック です 。 
また 、 対話 的 に 入力 さ れ た 個々 の コマンド も ブロック です 。 
スクリプト ファイル ( インタプリタ に 標準 入力 として 与え たり 、 コマンド ライン の 第 一 引数 として 指定 し た ファイル ) は 、 コード ブロック です 。 
スクリプト コマンド ( インタプリタ の コマンド ライン 上 で `- c ' オプション を 使っ て 指定 し た コマンド ) も コード ブロック です 。 
組み込み 関数 eval () や exec 文 に 渡し た 文字 列 も コード ブロック に なり ます 。 
組み込み 関数 input () から 読み取ら れ 、 評価 さ れる 式 も また 、 コード ブロック です 。 
また 、 現在 の コード ブロック の 実行 が 完了 し た 際 に 、 どの よう に プログラム の 実行 を 継続 する か を 決定 し て い ます 。 スコープ ( scope ) 
は 、 ある 名前 が ある ブロック 内 で 参照 できる か どう か を 決め ます 。 
ローカル 変数 が ある ブロック 内 で 定義 さ れ て いる 場合 、 変数 の スコープ は その ブロック を 含み ます 。 
関数 ブロック 内 で 名前 の 定義 を 行っ た 場合 、 その 名前 に対して 別 の 束縛 を 行っ て いる ブロック を 除い た 、 関数 内 の 全て の ブロック を 含む よう に スコープ が 拡張 さ れ ます 。 
クラス 内 で 定義 さ れ た 名前 の スコープ は 、 クラス の ブロック 内 に 制限 さ れ ます ; スコープ が メソッド の コード ブロック を 含む よう 拡張 さ れる こと は あり ませ ん 。 ある 名前 が コード ブロック 内 で 使わ れる と 、 その 名前 を 最も 近傍 から 囲う よう な スコープ ( 最 内 スコープ : nearest enclosing scope ) を 使っ て 束縛 の 解決 を 行い ます 。 
こうした スコープ から なる 、 ある コード ブロック 内 で 参照 できる スコープ 全て の 集合 は 、 ブロック の 環境 ( environment ) と 呼ば れ ます 。 
ある 名前 が ブロック 内 で 束縛 さ れ て いる 場合 、 名前 は その ブロック における ローカル 変数 ( local variable ) です 。 
ある 名前 が モジュール レベル で 束縛 さ れ て いる 場合 、 名前 は グローバル 変数 ( global variable ) です 。 
( モジュール コード ブロック の 変数 は 、 ローカル 変数 で も ある し 、 グローバル 変数 で も あり ます 。 
) ある 変数 が コード ブロック 内 で 使わ れ て いる が 、 その ブロック で は 定義 さ れ て い ない 場合 、 変数 は 自由 変数 ( free variable ) 
です 。 ある 名前 の 定義 が どこ に も ない 場合 、 NameError 
例外 が 送出 さ れ ます 。 
名前 が まだ 束縛 さ れ て い ない ローカル な 変数 を 参照 し た 場合 、 UnboundLocalError 
例外 が 送出 さ れ ます 。 
UnboundLocalError は 、 NameError の サブ クラス です 。 名前 へ の 束縛 は 、 以下 の 文 構成 ( construct ): 関数 の 仮 引数 ( formal parameter ) 指定 、 import 文 、 クラス や 関数 の 定義 ( 定義 を 行っ た ブロック 中 で 、 クラス や 関数 名 の 束縛 が 行わ れ ます )、 代入 時 に 、 代入 対象 が 識別子 で ある 場合 、 for ループ の ヘッダ 、 または 第 二 形式 の except 文 ヘッダ 、 で 行わ れ ます 。 
形式 の import 文 は 、 import しよ う と する モジュール 内 で 定義 さ れ て いる 名前 について 、 アンダー スコア から 始まっ て いる 名前 以外 の 全て を 束縛 し ます 。 
この 形式 は 、 モジュール レベル で しか 使う こと が でき ませ ん 。 del 文 で 指定 さ れ た 対象 は 、 ( del の 意味 付け は 、 実際 は 名前 の 解放 ( unbind ) です が ) 文 の 目的 上 、 束縛 済み の もの と みなさ れ ます 。 
この ため 、 ある 名前 が 束縛 さ れる 前 に ブロック 内 で 使わ れる と エラー を 引き起こす 可能 性 が あり ます 。 この 規則 は やや 微妙 です 。 
Python に は 宣言 文 が なく 、 コード ブロック の どこ で 名前 束縛 操作 を 行っ て も かまい ませ ん 。 
ある コード ブロック における ローカル 変数 は 、 ブロック 全体 から 名前 束縛 操作 が 行わ れ て いる 部分 を 走査 し て 決定 し ます 。 global 文 で 指定 さ れ た 名前 が ブロック 内 に ある 場合 、 その 名前 は 常に トップ レベル の 名前 空間 で 束縛 さ れ た 名前 を 参照 し ます 。 
それら の 名前 は グローバル 名前 空間 、 すなわち コード ブロック が 収め られ て いる モジュール の 名前 空間 と モジュール 名 __ builtin __ で 表さ れる 組み込み 名前 空間 、 を 検索 する こと によって 、 トップ レベル の 名前 空間 で 解決 さ れ ます 。 グローバル 名前 空間 は 、 常に 最初 に 検索 さ れ ます 。 
名前 が グローバル 名前 空間 中 に 見つから ない 場合 、 組み込み 名前 空間 が 検索 さ れ ます 。 
global 文 は 、 その 名前 が 使わ れ て いる 全て の 文 に 先立っ て 記述 さ れ て い なけれ ば なり ませ ん 。 
ある コード ブロック の 実行 時 に 関連付け られる 組み込み 名前 空間 は 、 実際 に は コード ブロック の グローバル 名前 空間 内 に 入っ て いる 名前 __ builtins __ を 参照 する 形 に なっ て い ます ; __ builtins __ は 辞書 か モジュール ( 後者 の 場合 に は モジュール の 辞書 が 使わ れ ます ) で なけれ ば なり ませ ん 。 
通常 、 __ builtins __ 名前 空間 は 、 組み込み モジュール __ builtin __ ( 注意 : ` s ' なし ) の モジュール 辞書 です 。 
そう で ない 場合 、 制限 実行 ( restricted execution ) 
モード が 有効 に なっ て い ます 。 ある モジュール の 名前 空間 は 、 その モジュール が 最初 に import さ れ た 時 に 自動的 に 作成 さ れ ます 。 
スクリプト の 主 モジュール ( main module ) は 常に __ main __ と 呼ば れ ます 。 
グローバル 文 は 、 同じ ブロック の 束縛 操作 と 同じ スコープ を 持ち ます 。 
ある 自由 変数 の 最 内 スコープ に global 文 が ある 場合 、 その 自由 変数 は グローバル 変数 と みなさ れ ます 。 クラス 定義 は 一つ の 実 行文 で 、 名前 の 使用 や 定義 を 行い ます 。 
クラス 定義 へ の 参照 は 、 通常 の 名前 解決 規則 に 従い ます 。 クラス 定義 の 名前 空間 は 、 その クラス の 属性 辞書 に なり ます 。 
クラス の スコープ で 定義 さ れ た 名前 は 、 メソッド から は 見え ませ ん 。 
4 . 1 . 1 動的 な 機能 と の やりとり 
12 . インターネット 上 の データ の 操作 この 章 で は インターネット 上 で 一般 的 に 利用 さ れ て いる データ 形式 の 操作 を サポート する モジュール 群 について 記述 し ます . 
汎用 の 出力 書式 化 機構 および デバイス インタフェース 。 
電子 メール の メッセージ を 解析 、 操作 および 生成 を 支援 する パッケージ 。 これ に は MIME 文書 も ふくま れる 。 
電子 メール の メッセージ を 表現 する 基底 クラス 
電子 メール メッセージ の フラット な テキスト を 解析 し 、 メッセージ オブジェクト 構造 体 を 生成 する 。 
メッセージ 構造 から フラット な 電子 メール テキスト を 生成 する 。 
非 ASCII 形式 の ヘッダ を 表現 する 
文字 セット 
電子 メール メッセージ の ペイ ロード の ため の エンコーダ 。 email . Errors 
email パッケージ で 使わ れる 例外 クラス 
電子 メール パッケージ の 雑多 な ユーティリティ 。 
メッセージオブジェクトツリー を たどる 。 
mailcap ファイル の 操作 。 
様々 な メールボックス 形式 の 読み出し 。 
Python から MH の メイル ボックス を 操作 し ます 。 
MIME - スタイル の メッセージ 本体 を 解析 する ため の ツール 。 
ファイル 名 拡張 子 の MIME 型 へ の マッピング 。 
汎用 MIME ファイル ライター 。 
電子 メイル メッセージ の MIME 化 および 非 MIME 化 。 
MIME データ の よう な 、 個別 の 部分 を 含ん だ ファイル 群 に対する 読み出し の サポート 。 
RFC 2822 形式 の メイル メッセージ を 解釈 し ます 。 
RFC 3548 : Base 16 , Base 32 , Base 64 テータ の 符号 化 
バイナリ と 各種 ASCII コード 化 バイナリ 表現 と の 間 の 変換 を 行う ツール 群 。 
binhex 4 形式 ファイル の エン コード および デコード 。 
MIME quoted - printable 形式 ファイル の エン コード および デコード 。 
uuencode 形式 の エン コード と デコード を 行う 。 
外部 データ 表現 ( XDR , External Data Representation ) データ の エン コード および デコード 。 
. netrc ファイル 群 の 読み出し 。 
robots . txt ファイル を 読み出し 、 他 の URL に対する 取得 可能 性 の 質問 に 答える クラス 。 
デリミタ で 区切ら れ た 形式 の ファイル に対する テーブル 状 データ 読み書き 。 
netrc インスタンス は 以下 の メソッド を 持っ て い ます : 
host の 認証 情報 として 、 三 要素 の タプル ( login , account , password ) を 返し ます 。 
与え られ た host に対する エントリ が netrc ファイル に ない 場合 、 ` default ' エントリ に 関連付け られ た タプル が 返さ れ ます 。 
host に 対応 する エントリ が なく 、 default エントリ も ない 場合 、 None を 返し ます 。 
netrc の インスタンス は 以下 の 公開 さ れ た インスタンス 変数 を 持っ て い ます : 
ホスト 名 を ( login , account , password ) から なる タプル に 対応 づけ て いる 辞書 です 。 
` default ' エントリ が ある 場合 、 その 名前 の 擬似 ホスト 名 として 表現 さ れ ます 。 
マクロ 名 を 文字 列 の リスト に 対応付け て いる 辞書 です 。 
+ 注意 : Passwords are limited to a subset of the ASCII character set .+ Versions of this module prior to 2 . 3 were extremely limited . Starting with + 2 . 3 , all ASCII punctuation is allowed in passwords . However , note that + whitespace and non - printable characters are not allowed in passwords . This + is a limitation of the way the . netrc file is parsed and may be removed in + the future . 
注意 : 利用 可能 な パスワード の 文字 セット は 、 ASCII の サブ セット のみ です 。 
2 . 3 より 前 の バージョン で は 厳しく 制限 さ れ て い まし た が 、 2 . 3 以降 で は ASCII の 記号 を 使用 する こと が でき ます 。 しかし 、 空白 文字 と 印刷 不可 文字 を 使用 する こと は でき ませ ん 。 
この 制限 は . netrc ファイル の 解析 方法 による もの で あり 、 将来 解除 さ れ ます 。 
以下 の メソッド は 新しい 形式 の クラス ( new - style class ) のみ に 適用 さ れ ます 。 
クラス の インスタンス に対する 属性 アクセス を 実装 する ため に 、 無条件 に 呼び出さ れ ます 。 
10 . 1 オブジェクト を ヒープ 上 に メモリ 確保 する 
10 . オブジェクト 実装 サポート ( object implementation support ) 
この 章 で は 、 新しい オブジェクト 型 ( new object type ) を 定義 する 際 に 使わ れる 関数 、 型 、 および マクロ について 説明 し ます 。 
10 . 9 循環 参照 ガベージコレクション を サポート する 
NNTP インスタンス は 以下 の メソッド を 持っ て い ます 。 
全て の メソッド における 戻り 値 の タプル で 最初 の 要素 と なる response は 、 サーバ の 応答 です : この 文字 列 は 3 桁 の 数字 から なる コード で 始まり ます 。 サーバ の 応答 が エラー を 示す 場合 、 上記 の いずれ か の 例外 が 送出 さ れ ます 。 
サーバ に 最初 に 接続 し た 際 に 送信 さ れる 応答 中 の ウェルカムメッセージ を 返し ます 。 
( この メッセージ に は 時に 、 ユーザ にとって 重要 な 免責 事項 や ヘルプ 情報 が 入っ て い ます 。 
この メソッド は 印字 さ れる デバッグ 出力 の 量 を 制御 し ます 。 
標準 で は 0 に 設定 さ れ て い て 、 これ は デバッグ 出力 を 全く 印字 し ませ ん 。 
1 は そこそこ の 量 、 一般 に NNTP 要求 や 応答 あたり 1 行 の デバッグ 出力 を 生成 し ます 。 
値 が 2 や それ 以上 の 場合 、 ( メッセージ テキスト を 含め て ) NNTP 接続 上 で 送受信 さ れ た 全て の 内容 を 一行 ごと に ログ 出力 する 、 最大限 の デバッグ 出力 を 生成 し ます 。 
" NEWSGROUPS " 命令 を 送信 し ます 。 
date 引数 は ' yy 
dd ' の 形式 を 取り 、 日付 を 表し ます 。 time 引数 は ' hh 
ss ' の 形式 を とり 、 時刻 を 表し ます 。 
与え られ た 日付 および 時刻 以後 新た に 出現 し た ニュース グループ 名 の リスト を groups として 、 ( response , groups ) を 返し ます 。 file 引数 が 指定 さ れ て いる 場合 、 " NEWGROUPS " コマンド の 出力 結果 は ファイル に 格納 さ れ ます 。 
file が 文字 列 の 場合 、 この 文字 列 を ファイル 名 として ファイル を オープン し 、 書き込み 後 に クローズ し ます 。 file が ファイル オブジェクト の 場合 、 オブジェクト の write () メソッド を 呼び出し て 出力 結果 を 格納 し ます 。 
file が 指定 さ れ て いる 場合 は 戻り 値 として 空 の リスト を 返し ます 。 
" NEWNEWS " 命令 を 送信 し ます 。 
ここ で 、 group は グループ 名 または '*' で 、 date および time は newsgrups () における 引数 と 同じ 意味 を 持ち ます 。 
( response , articles ) から なる ペア を 返し 、 articles は 記事 ID の リスト です 。 file 引数 が 指定 さ れ て いる 場合 、 " NEWNEWS " コマンド の 出力 結果 は ファイル に 格納 さ れ ます 。 
" LIST " 命令 を 送信 し ます 。 
( response , list ) から なる ペア を 返し ます 。 
list は タプル から なる リスト です 。 各 タプル は ( group , last , first , flag ) の 形式 を とり 、 group が グループ 名 、 last および first は それぞれ 最新 および 最初 の 記事 の 記事 番号 ( を 表す 文字 列 )、 そして flag は 投稿 が 可能 な 場合 に は ' y '、 そう で ない 場合 に は ' n '、 グループ が モデレート ( moderated ) さ れ て いる 場合 に は ' m ' と なり ます 。 
( 順番 に 注意 し て ください : last 、 first の 順 です 。 ) file 引数 が 指定 さ れ て いる 場合 、 " LIST " コマンド の 出力 結果 は ファイル に 格納 さ れ ます 。 
" LIST NEWSGROUPS " 命令 を 送信 し ます 。 grouppattern は RFC 2980 の 定義 に従う wildmat 文字 列 です ( 実際 に は 、 DOS や UNIX の シェルワイルドカード 文字 列 と 同じ です )。 
( response , list ) から なる ペア を 返し 、 list は タプル ( name , title ) リスト に なり ます 。 
単一 の グループ group から 説明 文字 列 を 取り出し ます 。 
(' group ' が 実際 に は wildmat 文字 列 で ) 複数 の グループ が マッチ し た 場合 、 最初 に マッチ し た もの を 返し ます 。 
何 も マッチ し なけれ ば 空文字 列 を 返し ます 。 この メソッド は サーバ から の 応答 コード を 省略 し ます 。 
応答 コード が 必要 なら 、 descriptions () を 使っ て ください 。 
記事 番号 は 文字 列 で 返さ れ ます 。 
" HELP " 命令 を 送信 し ます 。 
" NEXT " 命令 を 送信 し ます 。 
stat () の よう な 応答 を 返し ます 。 
" LAST " 命令 を 送信 し ます 。 
" HEAD " 命令 を 送信 し ます 。 id は stat () における の と 同じ 意味 を 持ち ます 。 
( response , number , id , list ) から なる タプル を 返し ます 。 最初 の 3 要素 は stat () と 同じ もの で 、 list は 記事 の ヘッダ から なる リスト ( まだ 解析 さ れ て おら ず 、 末尾 の 改行 が 取り去ら れ た ヘッダ 行 の リスト ) です 。 
" BODY " 命令 を 送信 し ます 。 id は stat () における の と 同じ 意味 を 持ち ます 。 
file 引数 が 与え られ て いる 場合 、 記事 本体 ( body ) は ファイル に 保存 さ れ ます 。 
file が 与え られ て い た 場合 、 返さ れる list は 空 の リスト に なり ます 。 
" ARTICLE " 命令 を 送信 し ます 。 id は stat () における の と 同じ 意味 を 持ち ます 。 
head () の よう な 戻り 値 を 返し ます 。 
" SLAVE " 命令 を 送信 し ます 。 
サーバ の response を 返し ます 。 
" XHDR " 命令 を 送信 し ます 、 この 命令 は RFC に は 定義 さ れ て い ませ ん が 、 一般 に 広まっ て いる 拡張 です 。 
header 引数 は 、 例えば ' subject ' といった ヘッダ キーワード です 。 
string 引数 は ' first - last ' の 形式 で なけれ ば なら ず 、 ここ で first および last は 検索 の 対象 と する 記事 範囲 の 最初 と 最後 の 記事 番号 です 。 
" POST " 命令 を 使っ て 記事 を ポスト し ます 。 
file 引数 は 開か れ て いる ファイル オブジェクト で 、 その 内容 は readline () メソッド を 使っ て EOF まで 読み出さ れ ます 。 
内容 は 必要 な ヘッダ を 含め 、 正しい 形式 の ニュース 記事 で なけれ ば なり ませ ん 。 
post () メソッド は "." で 始まる 行 を 自動的 に エスケープ し ます 。 
" IHAVE " 命令 を 送信 し ます 。 
応答 が エラー で ない 場合 、 file を post () と 全く 同じ よう に 扱い ます 。 
descriptions () または description () を 使う よう に し て ください 。 
( resp , list ) から なる ペア を 返し ます 。 list は タプル から なる リスト で 、 各 タプル は 記事 番号 start および end の 間 に 区切ら れ た 記事 です 。 
各 タプル は ( article number , subject , poster , date , id , references , size , lines ) の 形式 を とり ます 。 file 引数 が 指定 さ れ て いる 場合 、 " XHDR " コマンド の 出力 結果 は ファイル に 格納 さ れ ます 。 
file が 指定 さ れ て いる 場合 は 戻り 値 として 空 の リスト を 返し ます 。 これ は オプション の NNTP 拡張 な ので 、 全て の サーバ で サポート さ れ て いる と は 限り ませ ん 。 
( resp , path ) から なる ペア を 返し ます 。 path は メッセージ ID が id で ある 記事 の ディレクトリ パス です 。 
これ は オプション の NNTP 拡張 な ので 、 全て の サーバ で サポート さ れ て いる と は 限り ませ ん 。 
" QUIT " 命令 を 送信 し 、 接続 を 閉じ ます 。 
この メソッド を 呼び出し た 後 は 、 NTTP オブジェクト の 他 の いかなる メソッド も 呼び出し て は いけ ませ ん 。 
いくつ か の 組み込み 関数 は 、 現代 的 な Python プログラミング を 行う 場合 に は 、 必ずしも 学習 し たり 、 知っ て い たり 、 使っ たり する 必要 が なくなり まし た 。 
こうした 関数 は 古い バージョン の Python 向け 書か れ た プログラム と の 互換 性 を 維持 する だけ の 目的 で 残さ れ て い ます 。 Python の プログラマ 、 教官 、 学生 、 そして 本 の 著者 は 、 こうした 関数 を 飛ばし て も かまわ ず 、 その 際 に 何 か 重要 な こと を 忘れ て いる と 思う 必要 も あり ませ ん 。 
引数 function は 呼び出し が できる オブジェクト ( ユーザ 定義 および 組み込み の 関数 または メソッド 、 または クラス オブジェクト ) で なけれ ば なり ませ ん 。 args は シーケンス 型 で なく て は なり ませ ん 。 
function は 引数 リスト args を 使っ て 呼び出さ れ ます ; 引数 の 数 は タプル の 長 さ に なり ます 。 オプション の 引数 keywords を 与える 場合 、 keywords は 文字 列 の キー を 持つ 辞書 で なけれ ば なり ませ ん 。 
これ は 引数 リスト の 最後 に 追加 さ れる キーワード 引数 です 。 apply () の 呼び出し は 、 単なる 
function ( args ) の 呼び出し と は 異なり ます 。 という の は 、 apply () の 場合 、 引数 は 常に 一つ だ から です 。 
apply () は 
function (* args , ** keywords ) を 使う の と 等価 です 。 上 の よう な `` 拡張 さ れ た 関数 呼び出し 構文 '' は apply () と 全く 等価 な ので 、 必ずしも apply () を 使う 必要 は あり ませ ん 。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 上 で 述べ られ た よう な 拡張 呼び出し 構文 を 使っ て ください 。 
引数 object を 参照 する 新た な バッファ オブジェクト が 生成 さ れ ます 。 
引数 object は ( 文字 列 、 アレイ 、 バッファ といった ) バッファ 呼び出し インタフェース を サポート する オブジェクト で なけれ ば なり ませ ん 。 
返さ れる バッファ オブジェクト は object の 先頭 ( または offset ) から の スライス に なり ます 。 
スライス の 末端 は object の 末端 まで ( または 引数 size で 与え られ た 長 さ に なる まで ) です 。 
二つ の 数値 型 の 引数 を 共通 の 型 に 変換 し て 、 変換 後 の 値 から なる タプル を 返し ます 。 変換 に 使わ れる 規則 は 算術 演算 における 規則 と 同じ です 。 
型 変換 が 不可能 で ある 場合 、 TypeError を 送出 し ます 。 
string を `` 隔離 '' さ れ た 文字 列 の テーブル に 入力 し 、 隔離 さ れ た 文字 列 を 返し ます - この 文字 列 は string 自体 か コピー です 。 隔離 さ れ た 文字 列 は 辞書 検索 の パフォーマンス を 少し だけ 向上 さ せる の に 有効 です - 辞書 中 の キー が 隔離 さ れ て おり 、 検索 する キー が 隔離 さ れ て いる 場合 、 ( ハッシュ 化 後 の ) キー の 比較 は 文字 列 の 比較 で は なく ポインタ の 比較 で 行う こと が できる から です 。 
通常 、 Python プログラム 内 で 利用 さ れ て いる 名前 は 自動的 に 隔離 さ れ 、 モジュール 、 クラス 、 または インスタンス 属性 を 保持 する ため の 辞書 は 隔離 さ れ た キー を 持っ て い ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 隔離 さ れ た 文字 列 の 有効 期限 は ( Python 2 . 2 または それ 以前 は 永続 的 でし た が ) 永続 的 で は なくなり まし た ; intern () の 恩恵 を 受ける ため に は 、 intern () の 返す 値 に対する 参照 を 保持 し なけれ ば なり ませ ん 
リリース 2 . 4 ， 平成 18 年 6 月 27 日 更新 
None に対する PyTypeObject は 、 Python / C API で は 直接 公開 さ れ て い ない ので 注意 し て ください 。 
None は 単 量子 ( singleton ) な ので 、 オブジェクト の アイデンティティ テスト ( C で は "==") を 使う だけ で 十分 だ から です 。 同じ 理由 から 、 PyNone _ Check () 関数 は あり ませ ん 。 
Python における None オブジェクト で 、 値 が ない こと を 表し ます 。 
この オブジェクト に は メソッド が あり ませ ん 。 
リファレンス カウント について は 、 この オブジェクト も 他 の オブジェクト と 同様 に 扱う 必要 が あり ます 。 
C 関数 から Py _ None を 戻す 操作 を 適切 に 行う ため の マクロ です 。 
字句 解析 と 構文 に関する 記述 で は 、 BNF 文法 記法 に 手 を 加え た もの を 使っ て い ます 。 
この 記法 で は 、 以下 の よう な 記述 形式 を とり ます : 
最初 の 行 は 、 name が lc _ letter の 後ろ に ゼロ 個 または それ 以上 の lc _ letter と アンダー スコア が 続い た もの で ある こと を 示し て い ます 。 
そして 、 lc _ letter は " a " から " z " まで の 何らかの 文字 一 字 で ある こと を 示し ます ( この 規則 は 、 この ドキュメント に 記述 さ れ て いる 字句 規則 と 構文 規則 において 定義 さ れ て いる 名前 ( name ) で 一貫 し て 使わ れ て い ます )。 
各 規則 は name ( 規則 によって 定義 さ れ て いる ものの 名前 ) と コロン 一つ から 始まり ます 。 
垂直 線 (|) は 、 複数 の 選択 項目 を 分かち書き する とき に 使い ます ; この 記号 は 、 この 記法 において 最も 結合 優先 度 の 低い 演算 子 です 。 
アスタリスク (*) は 、 直前 に くる 要素 の ゼロ 個 以上 の 繰り返し を 表し ます ; 同様 に 、 プラス (+) は 一 個 以上 の 繰り返し で 、 角 括弧 ([ ]) に 囲わ れ た 字句 は 、 字句 が ゼロ 個 か 一 個 出現 する ( 別 の 言い方 を すれ ば 、 囲い の 中 の 字句 は オプション で ある ) こと を 示し ます 。 
* および + 演算 子 の 結合 範囲 は 可能 な 限り 狭く なっ て い ます ; 字句 の グループ 化 に は 丸 括弧 を 使い ます 。 
リテラル 文字 列 は クオート で 囲わ れ ます 。 
各 カッコ 中 の 字句 (...) は 、 定義 済み の シンボル を 記述 する 非 形式 的 な やり かた です ; 例えば 、 ` 制御 文字 ' を 書き表す 必要 が ある とき など に 使わ れる こと が あり ます 。 字句 と 構文 規則 の 定義 の 間 で 使わ れ て いる 表記 は ほとんど 同じ です が 、 その 意味 に は 大きな 違い が あり ます : 字句 定義 は 入力 ソース 中 の 個々 の 文字 を 取り扱い ます が 、 構文 定義 は 字句 解析 で 生成 さ れ た 一連 の トーク ン を 取り扱い ます 。 
次節 (`` 字句 解析 '') における BNF は すべて 字句 定義 の ため の もの です ; それ 以降 の 章 で は 、 構文 定義 の ため に 使っ て い ます 。 
1 . 11 C ++ で の 拡張 モジュール 作成 
一般 論 として 、 オブジェクト へ の 参照 を 引数 に とる 関数 は ユーザ が NULL ポインタ を 渡す と は 予想 し て おら ず 、 渡そ う と する と コア ダンプ に なる ( か 、 あと で コアダンプ を 引き起こす ) こと でしょ う 。 
一方 、 オブジェクト へ の 参照 を 返す よう な 関数 は 一般 に 、 例外 の 発生 を 示す 場合 に のみ NULL を 返し ます 。 
型 を 調べる マクロ に は 、 NULL チェック を 行う 変化 形 は あり ませ ん 。 Python から C 関数 を 呼び出す 機構 は 、 C 関数 に 渡さ れる 引数 リスト ( 例 で いう ところ の args ) が 決して NULL に なら ない よう 保証 し て い ます -- 実際 に は 、 常に タプル 型 に なる よう 保証 し て い ます 。 
NULL ポインタ を Python ユーザ レベル に `` 逃がし '' て しまう と 、 深刻 な エラー を 引き起こし ます 。 
... 実際 に は 、 常に タプル 型 に なる よう 保証 し て い ます 。 
`` 旧式 の '' 呼び出し 規約 を 使っ て いる 場合 に は 、 この 保証 は 適用 さ れ ませ ん -- 既存 の コード に は いまだに 旧式 の 呼び出し 規約 が 多々 あり ます 
10 . 4 マップ 型 オブジェクト 構造 体 ( mapping object 
拡張 型 で 数値 型 プロトコル を 実装 する ため に 使わ れる 関数 群 へ の ポインタ を 保持 する ため に 使わ れる 構造 体 です 。 
オブジェクト o が 数値 型 プロトコル を 提供 し て いる 場合 に 1 を 返し 、 そう で ない とき に は 偽 を 返し ます 。 
成功 する と o 1 と o 2 を 加算 し た 結果 を 返し 、 失敗 する と NULL を 返し ます 。 
成功 する と o 1 から o 2 を 減算 し た 結果 を 返し 、 失敗 する と NULL を 返し ます 。 
成功 する と o 1 と o 2 を 乗算 し た 結果 を 返し 、 失敗 する と NULL を 返し ます 。 
成功 する と o 1 を o 2 で 除算 し た 結果 を 返し , 失敗 する と NULL を 返し ます 。 
成功 する と o 1 を o 2 で 除算 し た 切捨て 値 を 返し 、 失敗 する と NULL を 返し ます 。 
`` 旧 仕様 の '' 整数 間 で の 除算 と 同じ です 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
成功 する と 、 数学 的 な o 1 の o 2 による 除算 値 に対する 妥当 な 近似 ( reasonable approximation ) を 返し 、 失敗 する と NULL を 返し ます 。 
全て の 実数 を 2 を 基数 として 表現 する の は 不可能 な ため 、 二 進 の 浮動 小数点 数 は `` 近似 値 '' しか 表現 でき ませ ん 。 この ため 、 戻り 値 も 近似 に なり ます 。 
この 関数 に 二つ の 整数 を 渡し た 際 、 浮動 小数点 の 値 を 返す こと が あり ます 。 
成功 する と o 1 を o 2 で 除算 し た 剰余 を 返し 、 失敗 する と NULL を 返し ます 。 
組み込み 関数 divmod () を 参照 し て ください 。 
失敗 する と NULL を 返し ます 。 
Python の 式 " divmod ( o 1 , o 2 )" と 同じ です 。 
組み込み 関数 pow () を 参照 し て ください 。 
Python の 式 " pow ( o 1 , o 2 , o 3 )" と 同じ です 。 o 3 は オプション です 。 
o 3 を 無視 さ せ たい なら 、 Py _ None を 入れ て ください ( o 3 に NULL を 渡す と 、 不正 な メモリ アクセス を 引き起こす こと が あり ます )。 
成功 する と o の 符号 反転 を 返し 、 失敗 する と NULL を 返し ます 。 Python の 式 "- o 
成功 する と o を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 "+ o 
成功 する と o の 絶対 値 を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " abs ( o )" と 同じ です 。 
成功 する と o の ビット 単位 反転 ( bitwise negation ) を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 "~ o " と 同じ です 。 
" と 同じ です 。 
成功 する と o 1 を o 2 だけ 右 シフト し た 結果 を 返し 、 失敗 する と NULL を 返し ます 。 
成功 する と o 1 と o 2 の `` ビット 単位 論理 積 ( bitwise and )'' を 返し 、 失敗 する と NULL を 返し ます 。 
成功 する と o 1 と o 2 の `` ビット 単位 排他 的 論理 和 ( bitwise exclusive or )'' を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " 
成功 する と o 1 と o 2 の `` ビット 単位 論理 和 ( bitwise or )'' を 返し 失敗 する と NULL を 返し ます 。 
o 1 が in - place 演算 を サポート する 場合 、 in - place 演算 を 行い ます 。 
Python の 文 " 
成功 する と o 1 を o 2 で 除算 し た 切捨て 値 を 返し 、 失敗 する と NULL を 返し ます 。 
" と 同じ です 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
この 関数 に 二つ の 整数 を 渡し た 際 、 浮動 小数点 の 値 を 返す こと が あり ます 。 
o 1 が in - place 演算 を サポート する 場合 、 in - place 演算 を 行い ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
成功 する と o 1 を o 2 で 除算 し た 剰余 を 返し 、 , 失敗 する と NULL を 返し ます 。 
組み込み 関数 pow () を 参照 し て ください 。 
失敗 する と NULL を 返し ます 。 
o 1 が in - place 演算 を サポート する 場合 、 in - place 演算 を 行い ます 。 
この 関数 は o 3 が Py _ None の 場合 は Python 文 " 
" と 同じ で 、 それ 以外 の 場合 は " pow ( o 1 , o 2 , o 3 )" の in - place 版 です 。 
o 3 を 無視 さ せ たい なら 、 Py _ None を 入れ て ください ( o 3 に NULL を 渡す と 、 不正 な メモリ アクセス を 引き起こす こと が あり ます )。 
成功 する と o 1 を o 2 だけ 左 シフト し た 結果 を 返し 、 失敗 する と NULL を 返し ます 。 
o 1 が in - place 演算 を サポート する 場合 、 in - place 演算 を 行い ます 。 
Python の 文 " 
この 関数 は PyObject * 型 の 二つ の 変数 の アドレス を 引数 に とり ます 。 
と * p 2 
が 指す オブジェクト が 同じ 型 の 場合 、 それぞれ の 参照 カウント を インクリメント し て 0 ( 成功 ) を 返し ます 。 
オブジェクト を 変換 し て 共通 の 数値 型 に できる 場合 、 * p 1 と * p 2 を 変換 後 の 値 に 置き換え て ( 参照 カウント を ' 新しく ' し て ) 、 0 を 返し ます 。 
変換 が 不可能 な 場合 や 、 その他 何らかの エラー が 生じ た 場合 、 - 1 ( 失敗 ) を 返し 、 参照 カウント を インクリメント し ませ ん 。 
PyNumber _ Coerce ( o 1 , o 2 ) の 呼び出し は Python 文 " 
o 1 , o 2 = coerce ( o 1 , o 2 )" と 同じ です 。 PyObject * 
成功 する と o を 整数 に 変換 し た もの を 返し 、 失敗 する と NULL を 返し ます 。 
引数 の 値 が 整数 の 範囲 外 の 場合 、 長 整数 を 代わり に 返し ます 。 
Python の 式 " int ( o )" 
と 同じ です 。 PyObject * 
成功 する と o を 長 整数 に 変換 し た もの を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " long ( o )" と 同じ です 。 
成功 する と o を 浮動 小数点 数 に 変換 し た もの を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " float ( o )" と 同じ です 。 
数値 リテラル は 4 種類 あり ます : 整数 ( plain integer )、 長 整数 ( longinteger )、 浮動 小数点 数 ( floating point number )、 そして 虚数 ( imaginarynumber ) です 。 
複素数 の ため の リテラル は あり ませ ん ( 複素数 は 実数 と 虚数 の 和 で 作る こと が でき ます )。 数値 リテラル に は 符号 が 含ま れ て い ない こと に 注意 し て ください ; - 1 の よう な 句 は 、 実際 に は 単項 演算 子 ( unary operator ) `-' と リテラル 1 を 組み合わせ た もの です 。 
3 . 3 . 6 シーケンス 型 エミュレーション で 使わ れる その他 の メソッド 
3 . 3 . 8 型 強制 規則 ( coercion rule ) 3 . 3 . 7 数値 型 を エミュレーション する 
以下 の メソッド を 定義 し て 、 数値 型 オブジェクト を エミュレート する こと が でき ます 。 
特定 の 種類 の 数値 型 で は サポート さ れ て い ない よう な 演算 に 対応 する メソッド ( 非 整数 の 数値 に対する ビット 単位 演算 など ) は 、 未 定義 の まま に し て おか なけれ ば なり ませ ん 。 
これら の メソッド は 、 二 項 算術 演算 (+, -, *, //, %, divmod () 
, , ^, |) を 実現 する ため に 呼び出さ れ ます 。 
例えば 、 式 x 
y の 場合 、 x が __ add __() メソッド を もつ クラス の インスタンス で あれ ば 、 
x .__ add __( y ) が 呼び出さ れ ます 。 
__ divmod __() メソッド は 、 __ floordiv __() と __ mod __() を 使っ た 場合 と 等価 に なら なけれ ば なり ませ ん ; __ truediv __() ( 下記 参照 ) と 関連づける 必要 は あり ませ ん 。 
組み込み の 三 項 演算 子 バージョン の 関数 pow () 
を サポート する 場合 に は 、 __ pow __() は 、 オプション と なる 第 三 の 引数 を 受け取れ なく て は なり ませ ん 。 
除算 演算 (/) は 、 これら の メソッド で 実現 さ れ て い ます 。 
__ truediv __() は 、 __ future __. division が 有効 で ある とき に 使わ れ ます 。 それ 以外 の 場合 に は __ div __() が 使わ れ ます s 。 
二つ の メソッド の うち 一方 しか 定義 さ れ て い なけれ ば 、 オブジェクト は 他方 の 演算 コンテキスト を サポート し なく なり ます ; この とき 、 TypeError が 送出 さ れ ます 。 
これら の メソッド は 二 項 算術 演算 (+,-, *, /, %, divmod () 
, , ^, |) を 実現 し ます が 、 メソッド 呼び出し が 行わ れる 被 演算 子 が 逆転 し て ( reflected , swapped : 入れ替え られ て ) い ます 。 
これら の 関数 は 、 左側 の 被 演算 子 が 対応 する 演算 を サポート し て い ない 場合 に のみ 呼び出さ れ ます 。 
例えば 、 x 
y において 、 y が __ rsub __() メソッド を 持つ クラス の インスタンス で ある 場合 、 
y .__ rsub __( x ) が 呼び出さ れ ます 。 
これら の メソッド は 、 累算 算術 演算 ( augmented arithmetic operations ,+=, -=, *=, /=, %=,**=, 
=, =,^=, |=) を 実現 する ため に 呼び出さ れ ます 。 
これら の メソッド は 、 演算 を その 場 で ( self を 変更 する 形 で ) 行う よう 試み 、 その 結果 ( 変更 さ れ た self または その 代わり の もの ) を 返さ なけれ ば なり ませ ん 。 
特定 の メソッド が 定義 さ れ て い ない 場合 、 その 累算 算術 演算 は 通常 の メソッド で 代用 さ れ ます 。 
例えば 、 x 
y を 評価 する 際 、 x が __ iadd __() メソッド を 持つ クラス の インスタンス で あれ ば 、 
x .__ iadd __( y ) が 呼び出さ れ ます 。 
反対 に 、 x が __ iadd () メソッド を 持た ない クラス の インスタンス で あれ ば 、 x 
y .__ radd __( x ) を 考慮 し ます 。 
単項 算術 演算 (-,+, abs () 
および ~) を 実現 する ため に 呼び出さ れ ます 。 
組み込み 関数 complex () 
, および float () 
を 実現 する ため に 呼び出さ れ ます 。 
適切 な 型 の 値 を 返さ なけれ ば なり ませ ん 。 
`` 型 混合 モード ( mixed - mode )'' で の 数値 間 の 算術 演算 を 実現 する ため に 呼び出さ れ ます 。 
self と other を 共通 の 数値 型 に 変換 し て 、 2 要素 の タプル に し て 返す か 、 不可能 な 場合 に は None を 返さ なけれ ば なり ませ ん 。 
共通 の 型 が other の 型 に なる 場合 、 None を 返す だけ で 十分 です 。 この 場合 、 インタプリタ は もう 一方 の オブジェクト を 調べ て 型 強制 を 行お う と する から です ( と は いえ 、 もう 一方 の 値 の 型 が 実装 上 変更 でき ない 場合 に は 、 ここ で self を other の 型 に 変換 し て おい た 方 が 便利 です )。 
戻り 値 に NotImplemented を 使う の は 、 None を 返す の と 同じ です 。 
7 . 2 . 1 ( 通常 ) 整数 型 オブジェクト ( plain integer object ) 
オブジェクト o を ファイル fp に 出力 し ます 。 
失敗 する と - 1 を 返し ます 。 
flags 引数 は 何らかの 出力 オプション を 有効 に する 際 に 使い ます 。 
現在 サポート さ れ て いる 唯一 の オプション は Py _ PRINT _ RAW です ; この オプション を 指定 する と 、 repr () の 代わり に str () を 使っ て オブジェクト を 書き込み ます 。 
o が 属性 attr _ name を 持つ とき に 1 を 、 それ 以外 の とき に 0 を 返し ます 。 
この 関数 は Python の 式 " hasattr ( o , attr _ name )" と 同じ です 。 
この 関数 は 常に 成功 し ます 。 
" と 同じ です 。 
オブジェクト o から 、 名前 attr _ name の 属性 を 取得 し ます 。 成功 する と 属性 値 を 返し 失敗 する と NULL を 返し ます 。 
この 関数 は Python の 式 " 
オブジェクト o の attr _ name という 名 の 属性 に 、 値 v を 設定 し ます 。 
失敗 する と - 1 を 返し ます 。 
この 関数 は Python の 式 " 
オブジェクト o の attr _ name という 名 の 属性 を 削除 し ます 。 
失敗 する と - 1 を 返し ます 。 
この 関数 は Python の 文 " del o . attr _ name " と 同じ です 。 
o 1 と o 2 を opid に 指定 し た 演算 によって 比較 し ます 。 opid は Py _ LT , Py _ LE , Py _ EQ , Py _ NE , Py _ GT , または Py _ GE , の いずれ か で なけれ ば なら ず 、 それぞれ ,=,==,!=,, および = に 対応 し ます 。 
この 関数 は Python の 式 " 
" と 同じ で 、 op が opid に 対応 する 演算 子 です 。 
成功 する と 比較 結果 の 値 を 返し 失敗 する と NULL を 返し ます 。 
比較 結果 が 真 なら ば 1 を 、 偽 なら ば 0 を 、 エラー が 発生 する と - 1 を 返し ます 。 
この 関数 は Python の 式 " 
" と 同じ で 、 op が opid に 対応 する 演算 子 です 。 
o 1 と o 2 の 値 を 比較 し ます 。 この とき o 1 が 比較 ルーチン を 持っ て いれ ば それ を 使い 、 なけれ ば o 2 の ルーチン を 使い ます 。 
比較 結果 は result に 返さ れ ます 。 
Python 文 
result = cmp ( o 1 , o 2 )" と 同じ です 。 
成功 する と 比較 結果 を 返し ます 。 
エラー が 生じ た 場合 の 戻り 値 は 未定義 です ; PyErr _ Occurred () を 使っ て エラー 検出 を 行っ て 下さい 。 
Python 式 
" cmp ( o 1 , o 2 )" と 同じ です 。 
o の 文字 列 表現 を 計算 し ます 。 
成功 する と 文字 列 表現 を 返し 、 失敗 する と NULL を 返し ます 。 
Python 式 " repr ( o )" と 同じ です 。 
Python 式 " str ( o )" と 同じ です 。 
この 関数 は 組み込み 関数 str () 
や print 文 の 処理 で 呼び出さ れ ます 。 
o の Unicode 文字 列 表現 を 計算 し ます 。 
成功 する と Unicode 文字 列 表現 を 返し 失敗 する と NULL を 返し ます 。 Python 式 " unicode ( o )" と 同じ です 。 
inst が cls の インスタンス か 、 cls の サブ クラス の インスタンス の 場合 に - 1 を 返し 、 そう で なけれ ば 0 を 返し ます 。 
エラー の 時 に は - 1 を 返し 、 例外 を セット し ます 。 
cls が クラス オブジェクト で は なく 型 オブジェクト の 場合 、 PyObject _ IsInstance () は inst が cls で ある とき に 1 を 返し ます 。 
cls を タプル で 指定 し た 場合 、 cls に 指定 し た 全て の エントリ について チェック を 行い ます 。 少なくとも 一つ の エントリ に対する チェック が 1 を 返せ ば 結果 は 1 に なり 、 そう で なけれ ば 0 に なり ます 。 
inst が クラス インスタンス で なく 、 かつ cls が 型 オブジェクト で も クラス オブジェクト で も タプル で も ない 場合 、 inst に は __ class __ 属性 が なく て は なり ませ ん -- この 場合 、 __ class __ 属性 の 値 と 、 cls の 値 の 間 の クラス 関係 を 、 関数 の 戻り 値 を 決定 する の に 使い ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 2 で 変更 さ れ た 仕様 : 二つ 目 の 引数 に タプル の サポート を 追加 し まし た 。 
サブ クラス の 決定 は かなり 正攻法 で 行い ます が 、 クラス システム の 拡張 を 実装 する 人 たち に 知っ て おい て 欲しい ちょっとした 問題 点 が あり ます 。 
A と B が クラス オブジェクト の 場合 、 B が A の サブ クラス と なる の は 、 B が A を 直接的 あるいは 間接 的 に 継承 ( inherit ) し て いる 場合 です 。 
両方 が クラス オブジェクト で ない 場合 、 二つ の オブジェクト 間 の クラス 関係 を 決める に は 、 より 汎用 の 機構 を 使い ます 。 
B が A の サブ クラス で ある か 調べ た とき 、 A が B と 等しけれ ば 、 PyObject _ IsSubclass () は 真 を 返し ます 。 
A および B が 異なる オブジェクト なら 、 B の __ bases __ 属性 から 深 さ 優先 探索 ( depth - first search ) で A を 探索 し ます -- オブジェクト に __ bases __ が ある だけ で 、 この 決定 法 を 適用 する 条件 を 満たし て いる と みなさ れ ます 。 
クラス derived が cls と 同じ クラス か 、 cls の 導出 クラス の 場合 に 1 を 返し 、 それ 以外 の 場合 に は 0 を 返し ます 。 
エラー が 生じる と - 1 を 返し ます 。 
derived または cls の いずれ か が 実際 の クラス オブジェクト ( あるいは タプル ) で ない 場合 、 上 で 述べ た 汎用 アルゴリズム を 使い ます 。 バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 以前 の Python の バージョン は 、 二つ 目 の 引数 に タプル を サポート し て い ませ ん でし た 
オブジェクト o が 呼び出し 可能 オブジェクト か どう か 調べ ます 。 
オブジェクト が 呼び出し 可能 で ある とき に 1 を 返し 、 そう で ない とき に は 0 を 返し ます 。 
呼び出し 可能 な Python オブジェクト callable _ object を タプル で 指定 さ れ た 引数 args および 辞書 で 指定 さ れ た 名前 つき 引数 ( named argument ) kw とともに 呼び出し ます 。 
成功 する と 呼び出し 結果 として 得 られ た オブジェクト を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " apply ( callable _ object , args , kw )" あるいは " 
callable _ object (* args , ** kw )" と 同じ です 。 
呼び出し 可能 な Python オブジェクト callable _ object を タプル で 指定 さ れ た 引数 args とともに 呼び出し ます 。 
引数 を 必要 と し ない 場合 、 args を NULL に し て も かまい ませ ん 。 
成功 する と 呼び出し 結果 として 得 られ た オブジェクト を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " apply ( callable _ object , args )" あるいは " 
callable _ object (* args )" と 同じ です 。 
呼び出し 可能 な Python オブジェクト callable _ object を 可変 数 個 の C 引数 とともに 呼び出し ます 。 
C 引数 は Py _ BuildValue () 形式 の フォーマット 文字 列 を 使っ て 記述 し ます 。 
format は NULL に し て も よく 、 与える 引数 が ない こと を 表し ます 。 
成功 する と 呼び出し 結果 として 得 られ た オブジェクト を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " apply ( callable , args )" あるいは " 
callable (* args )" と 同じ です 。 
オブジェクト o の method という 名前 の メソッド を 、 可変 数 個 の C 引数 とともに 呼び出し ます 。 
C 引数 は タプル を 生成 する よう な Py _ BuildValue () 形式 の フォーマット 文字 列 を 使っ て 記述 し ます 。 
format は NULL に し て も よく 、 与える 引数 が ない こと を 表し ます 。 
成功 する と 呼び出し 結果 として 得 られ た オブジェクト を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " 
o . method ( args )" と 同じ です 。 
呼び出し 可能 な Python オブジェクト callable _ object を 可変 数 個 の PyObject * 引数 とともに 呼び出し ます 。 
引数 列 は 末尾 に NULL が つい た 可変 数 個 の パラメタ として 与え ます 。 成功 する と 呼び出し 結果 として 得 られ た オブジェクト を 返し 失敗 する と NULL を 返し ます 。 
オブジェクト o の メソッド を 呼び出し ます 、 メソッド 名 は Python 文字 列 オブジェクト name で 与え ます 。 
可変 数 個 の PyObject * 引数 と共に 呼び出さ れ ます . 引数 列 は 末尾 に NULL が つい た 可変 数 個 の パラメタ として 与え ます 。 
成功 する と 呼び出し 結果 として 得 られ た オブジェクト を 返し 失敗 する と NULL を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
オブジェクト o の ハッシュ 値 を 計算 し て 返し ます 。 
失敗 する と - 1 を 返し ます 。 
Python の 式 " hash ( o )" と 同じ です 。 
o が 真 を 表す と みなせる 場合 に は 1 を 、 そう で ない とき に は 0 を 返し ます 。 
失敗 する と - 1 を 返し ます 。 
o が 真 を 表す と みなせる 場合 に は 0 を 、 そう で ない とき に は 1 を 返し ます 。 
o が NULL で ない 場合 、 オブジェクト o の オブジェクト 型 に 相当 する 型 オブジェクト を 返し ます 。 
失敗 する と SystemError を 送出 し て NULL を 返し ます 。 
Python の 式 type ( o ) と 同じ です 。 
この 関数 は 戻り 値 の 参照 カウント を インクリメント し ます 。 
参照 カウント の インクリメント が 必要 で ない 限り 、 広く 使わ れ て い て PyTypeObject * 型 の ポインタ を 返す 表記 法 o - ob _ type の 代わり に 使う 理由 は 全く あり ませ ん 。 
オブジェクト o が 、 type か type の サブ タイプ で ある とき に 真 を 返し ます 。 
どちら の パラメタ も NULL で あっ て は なり ませ ん 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
o の 長 さ を 返し ます 。 
オブジェクト o が シーケンス 型 プロトコル と マップ 型 プロトコル の 両方 を 提供 し て いる 場合 、 シーケンス として の 長 さ を 返し ます 。 
エラー が 生じる と - 1 を 返し ます 。 
Python の 式 " len ( o )" と 同じ です 。 
成功 する と オブジェクト key に 対応 する o の 要素 を 返し 、 失敗 する と NULL を 返し ます 。 
オブジェクト key を 値 v に 対応付け ます 。 
失敗 する と - 1 を 返し ます 。 
オブジェクト o から key に対する 対応 付け を 削除 し ます 。 
Python の 文 " del o [ key ]" と 同じ です 。 
Python オブジェクト から ファイル 記述 子 を 取り出し ます 。 
オブジェクト が 整数 か 長 整数 なら 、 その 値 を 返し ます 。 
( 長 ) 整数 で ない 場合 、 オブジェクト に fileno () メソッド が あれ ば 呼び出し ます ; この 場合 、 fileno () メソッド は 整数 または 長 整数 を ファイル 記述 子 の 値 として 返さ なけれ ば なり ませ ん 。 
この 関数 は Python の 式 " dir ( o )" と 同じ で 、 オブジェクト の 変数 名 に 割り当て て いる 文字 列 から なる リスト ( 空 の 場合 も あり ます ) を 返し ます 。 エラー の 場合 に は NULL を 返し ます 。 
引数 を NULL に する と 、 Python における " dir ()" と 同様 に 、 現在 の ローカル な 名前 を 返し ます ; この 場合 、 アクティブ な 実行 フレーム が なけれ ば NULL を 返し ます が 、 PyErr _ Occurred () は 偽 を 返し ます 。 
Python の 式 " iter ( o )" と 同じ です 。 引数 に とっ た オブジェクト に対する 新た な イテレータ か 、 オブジェクト が すでに イテレータ の 場合 に は オブジェクト 自身 を 返し ます 。 
オブジェクト が 反復 処理 不可能 で あっ た 場合 に は TypeError を 送出 し て NULL を 返し ます 。 
Python / C API 関数 は 、 PyObject * 型 の 一つ 以上 の 引数 と 戻り 値 を 持ち ます 。 
この 型 は 、 任意 の Python オブジェクト を 表現 する 不透明 ( opaque ) な データ 型 へ の ポインタ です 。 
Python 言語 は 、 全て の Python オブジェクト 型 を ほとんど の 状況 ( 例えば 代入 、 スコープ 規則 ( scope rule )、 引数 渡し ) で 同様 に 扱い ます 。 
ほとんど 全て の Python オブジェクト は ヒープ ( heap ) 上 に 置か れ ます : この ため 、 PyObject 型 の オブジェクト は 、 自動 記憶 ( automatic ) として も 静的 記憶 ( static ) として も 宣言 でき ませ ん 。 PyObject * 型 の ポインタ 変数 のみ 宣言 でき ます 。 
唯一 の 例外 は 、 型 オブジェクト 
です ; 型 オブジェクト は メモリ 解放 ( deallocate ) し て は なら ない ので 、 通常 は 静的 記憶 の PyTypeObject オブジェクト に し ます 。 全て の Python オブジェクト に は ( Python 整数 型 で すら ) 型 ( type ) と 参照 カウント ( reference count ) が あり ます 。 
ある オブジェクト の 型 は 、 その オブジェクト が どの 種類 の オブジェクト か ( 例えば 整数 、 リスト 、 ユーザ 定義 関数 、 など ; その他 多数 について は 、 
Python リファレンス マニュアル 
で 説明 し て い ます ) を 決定 し ます 。 
よく 知ら れ て いる 型 について は 、 各々 マクロ が 存在 し て 、 ある オブジェクト が その 型 か どう か 調べ られ ます ; 例えば 、 " PyList _ Check ( a )" は 、 a で 示さ れ た オブジェクト が Python リスト 型 の とき ( かつ その とき に 限り ) 真 値 を 返し ます 。 
これら の モジュール は 通常 import し て 利用 でき ませ ん ; 利用 できる よう に する に は 作業 を 行わ なけれ ば なり ませ ん 。 Python で 書か れ た もの は 、 標準 ライブラリ の 一部 として インストール さ れ て いる lib - old / ディレクトリ の 中 に インストール さ れ ます 。 
利用 する に は 、 PYTHONPATH を 使う など し て 、 lib - old / ディレクトリ を sys . path に 追加 し なけれ ば なり ませ ん 。 
撤廃 さ れ た 拡張 モジュール の うち C で 書か れ た もの は 、 標準 の 設定 で は ビルド さ れ ませ ん 。 Unix で これら の モジュール を 有効 に する に は 、 ビルドツリー 内 の Modules / Setup の 適切 な 行 の コメントアウト を 外し て 、 モジュール を 静的 リンク する なら Python を ビルド し なおし 、 動的 に ロード さ れる 拡張 を 使う なら 共有 オブジェクト を ビルド し て インストール する 必要 が あり ます 。 
-- パッケージ へ の 別 の アプローチ です 。 
組み込み の パッケージ サポート を 使っ て ください 。 
-- ファイル 比較 関数 です 。 
新しい 
を 使っ て ください 。 
-- 古い cmp モジュール の キャッシュ 化 版 です 。 
-- 関数 コード オブジェクト から か 数 名 や 行 番号 を 抽出 し ます ( 現在 で は これら は 属性 : co . co _ name , func . func _ name , co . co _ firstlineno として アクセス でき ます )。 
-- ディレクトリ 間 の 差分 ( diff ) ツール を 構築 する ため の クラス です ( デモ か ツール に なる かも しれ ませ ん )。 
リリース 2 . 0 で 撤廃 さ れ まし た 。 
モジュール が dircmp に 置き換わり ます 。 
-- 変数 を 再 構築 する Python コード を 出力 し ます 。 
-- テキスト 書式 化 処理 の 抽象 化 モジュール です ( 低速 すぎ ます )。 
-- FCNTL ファイル ロック 機構 へ の ラッパ です ( fcntl . lockf ()/ flock () を 使っ て ください 。 ; 
-- 新た な dir () 関数 です 。 ( 現在 で は 標準 の dir () が 同じ くらい 改良 さ れ まし た )。 
-- fmt の 補助 モジュール です 。 
-- 多項式 です 。 
-- Emacs 形式 の 正規 表現 サポート です ; 古い コード 内 で 未だに 使わ れ て いる かも しれ ませ ん ( 拡張 モジュール です ) 。 
ドキュメント は 
Python 1 . 6 Documentation を 参照 し て ください 。 
-- regex で 利用 する ため の 、 正規 表現 に 基づい た 文字 列 置換 ユーティリティ です ( 拡張 モジュール です )。 
-- 局所 変数 の ダンプ を 伴う トレース バック 印字 の ため の モジュール です ( pdb . pm () または 
を 使っ て ください )。 
-- 高い 精度 で 経過 時間 を 計測 し ます ( time . clock () を 使っ て ください )。 
( 拡張 モジュール です 。 ) 
-- タイム ゾーン 指定 を 解釈 し ます ( 完成 し て い ませ ん ; 将来 は 消滅 する モジュール で 、 TZ 環境 変数 が 設定 さ れ て い ない と 動作 し ませ ん )。 
-- 他 の どこ に も 分類 しよ う が ない 有用 な 関数 群 です 。 
-- 音声 ファイル を 識別 し ます ; 
-- 数学 的 な `` 体 '' の 性質 を 計算 し ます 。 
以下 の モジュール は 撤廃 さ れ まし た が 、 ツール や スクリプト として 復活 し て いる よう です : 
-- ディレクトリ ツリー 内 から パターン に 合致 する ファイル を 探し ます 。 
-- Python による grep 実装 です 。 
-- 自己 展開 形式 の Unix シェル アーカイブ を 生成 し ます 。 
以下 の モジュール は この マニュアル の 以前 の バージョン で ドキュメント さ れ て い まし た が 、 現在 で は 撤廃 さ れ た もの と 考え られ て い ます 。 
これら の ドキュメント の ソース は 、 まだ ドキュメントソースアーカイブ から 取得 可能 です 。 
-- `` パッケージ 内 の '' モジュール を import し ます 。 今 で は 基本 的 な パッケージ の サポート は 組み込み に なっ て い ます 。 
組み込み の サポート は この モジュール で 提供 さ れ て い た 内容 に 非常 に 近い もの と なっ て い ます 。 
-- 乱数 生成 器 へ の 古い インタフェース です 。 
-- 共有 キー と 同じ よう な 名前 縮 約 アルゴリズム です 。 
特定 の アルゴリズム は 公開 さ れ て いる どの アルゴリズム とも 一致 し ない よう です 。 
OpenerDirector インスタンス は 以下 の メソッド を 持っ て い ます : 
handler は BaseHandler の インスタンス で なけれ ば なり ませ ん 。 
以下 の メソッド を 使っ た 検索 が 行わ れ 、 URL を 取り扱う こと が 可能 な ハンドラ の 連鎖 が 追加 さ れ ます ( HTTP エラー は 特別 扱い さ れ て いる ので 注意 し て ください )。 
protocol _ open () -- ハンドラ が protocol の URL を 開く 方法 を 知っ て いる か どう か を 調べ ます 。 
protocol _ error () -- ハンドラ が ( http で ない ) protocol の エラー を 処理 する 方法 を 知っ て いる こと を 示す シグナル です 。 
protocol _ response () -- ハンドラ が protocol リクエスト の ポスト プロセス 方法 を 知っ て いる こと を 示す シグナル です 。 
与え られ た プロトコル における エラー を 処理 し ます 。 
この メソッド は 与え られ た プロトコル における 登録 済み の エラー ハンドラ を ( プロトコル 固有 の ) 引数 で 呼び出し ます 。 
HTTP プロトコル は 特殊 な ケース で 、 特定 の エラー ハンドラ を 選び出す の に HTTP レスポンス コード を 使い ます ; ハンドラ クラス の http _ error _*() メソッド を 参照 し て ください 。 返り 値 および 送出 さ れる 例外 は urlopen () と 同じ もの です 。 
OpenerDirector オブジェクト は 、 以下 の 3 つ の ステージ に 分け て URL を 開き ます : 各 ステージ で OpenerDirector オブジェクト の メソッド が どの よう な 順 で 呼び出さ れる か は 、 ハンドラ インスタンス の 並び方 で 決まり ます 。 
protocol _ request () 形式 の メソッド を 持つ 全て の ハンドラ に対して その メソッド を 呼び出し 、 リクエスト の プリプロセス を 行い ます 。 
protocol _ open () 形式 の メソッド を 持つ ハンドラ を 呼び出し 、 リクエスト を 処理 し ます 。 
この ステージ は 、 ハンドラ が None で ない 値 ( すなわち レスポンス ) を 返す か 、 例外 ( 通常 は URLError ) を 送出 し た 時点 で 終了 し ます 。 
例外 は 伝播 ( propagate ) でき ます 。 実際 に は 、 上 の アルゴリズム で は まず default _ open という 名前 の メソッド を 呼び出し ます 。 
この メソッド が 全て None を 返す 場合 、 同じ アルゴリズム を 繰り返し て 、 今度 は 
protocol _ open () 形式 の メソッド を 試し ます 。 
メソッド が 全て None を 返す と 、 さらに 同じ アルゴリズム を 繰り返し て unknown _ open () を 呼び出し ます 。 これら の メソッド の 実装 に は 、 親 と なる OpenerDirector インスタンス の . open () や . error () といった メソッド 呼び出し が 入る 場合 が ある ので 注意 し て ください 。 
protocol _ response () 形式 の メソッド を 持つ 全て の ハンドラ に対して その メソッド を 呼び出し 、 リクエスト の ポスト プロセス を 行い ます 。 
下 の テーブル で は 、 個々 の 抽象 的 な 操作 が 、 どの よう に Python 構文 上 の 各 演算 子 や 
モジュール の 関数 に 対応 し て いる か を 示し て い ます 。 
操作 
構文 
関数 
加算 
結合 
包含 テスト 
除算 
__ future __. division が 無効 な 場合 の div ( a , b ) # 
__ future __. division が 有効 な 場合 の truediv ( a , b ) # 
論理 積 
ビット 反転 
論理 和 
べき乗 
インデクス 指定 の 削除 
インデクス 指定 
左 シフト 
剰余 
乗算 
( 算術 ) 否 
( 論理 ) 否 
右 シフト 
シーケンス の 反復 
スライス 指定 の 代入 
スライス 指定 の 削除 
スライス 指定 
文字 列 書式 化 
減算 
真 値 テスト 
順序付け 
等価 性 
不等 性 
以下 の トーク ン は 演算 子 です : 
比較 演算 子 と != は 、 同じ 演算 子 について 別 の 書き方 を し た もの です 。 
書き方 として は != を 推奨 し ます ; は 時代遅れ の 書き方 です 。 
optparse は 、 素直 で 慣習 に 則っ た コマンドラインインタフェース を 備え た プログラム の 作成 を 援助 する 目的 で 設計 さ れ まし た 。 
その 結果 、 Unix で 慣習 的 に 使わ れ て いる コマンド ライン の 構文 や 機能 だけ を サポート する に 留まっ て い ます 。 
こうした 慣習 に 詳しく なけれ ば 、 よく 知っ て おく ため に も この 節 を 読ん で おき ましょ う 。 
6 . 21 . 4 . 3 コール バック 中 で 例外 を 送出 する 
6 . 21 . 4 . 5 コール バック の 例 2 : オプション の 順番 を チェック する 
引数 を とら ず 、 発見 し た オプション を 単に 記録 する だけ の コールバックオプション の 例 を 以下 に 示し ます : 
もちろん 、 store _ true アクション を 使っ て も 実現 でき ます 。 
6 . 21 . 4 . 4 コール バック の 例 1 : ありふれ た コール バック 
6 . 21 . 4 . 6 コール バック の 例 3 : オプション の 順番 を チェック する 
もう少し 面白み の ある 例 を 示し ます : この 例 で は 、 "- a " を 発見 し て 、 その後 で "- b " が コマンド ライン 中 に 現れ た 場合 に は エラー に なり ます 。 
6 . 21 . 4 . 7 コール バック の 例 4 : 任意 の 条件 を チェック する 
この コール バック ( フラグ を 立てる が 、 "- b " が 既に 指定 さ れ て いれ ば エラー に なる ) を 同様 の 複数 の オプション に対して 再 利用 し たけれ ば 、 もう少し 作業 する 必要 が あり ます : エラーメッセージ と セット さ れる フラグ を 一般 化 し なけれ ば なり ませ ん 。 
6 . 21 . 4 . 8 コール バック の 例 5 : 固定 引数 
もちろん 、 単に 定義 済み の オプション の 値 を 調べる だけ に とどまら ず 、 コール バック に は 任意 の 条件 を 入れ られ ます 。 
例えば 、 満月 で なけれ ば 呼び出し て は なら ない オプション が ある と し ましょ う 。 
やら なけれ ば なら ない こと は これ だけ です : def check _ moon ( option , opt _ str , value , parser ): if is _ moon _ full (): raise OptionValueError ("% s option invalid when moon is full "% opt _ str ) setattr ( parser . values , option . dest , 1 )[...] parser . add _ option ("-- foo ", action =" callback ", callback = check _ moon , dest =" foo ") 
( is _ moon _ full () の 定義 は 読者 へ の 課題 と し ましょ う 。 
決まっ た 数 の 引数 を とる よう な コールパックオプション を 定義 する なら 、 問題 は やや 興味深く なっ て き ます 。 
引数 を とる よう コール バック に 指定 する の は 、 store や append オプション の 定義 に 似 て い ます : type を 定義 し て いれ ば 、 その オプション は 引数 を 受け取っ た とき に 該当 する 型 に 変換 でき ね ば なり ませ ん ; さらに nargs を 指定 すれ ば 、 オプション は nargs 個 の 引数 を 受け取り ます 。 
標準 の store アクション を エミュレート する 例 を 以下 に 示し ます : 
optparse は 3 個 の 引数 を 受け取り 、 それら を 整数 に 変換 する ところ まで 面倒 を み て くれ ます ; ユーザ は 単に それ を 保存 する だけ です 。 
( 他 の 処理 も でき ます ; いう まで も なく 、 この 例 に は コール バック は 必要 あり ませ ん ) 
ある オプション に 可変 個 の 引数 を 持た せ たい と 考え て いる なら 、 問題 は いささか 手強く なっ て き ます 。 
この 場合 、 optparse で は 該当 する 組み込み の オプション 解析 機能 を 提供 し て い ない ので 、 自分 で コール バック を 書か ね ば なり ませ ん 。 
さらに 、 optparse が 普段 処理 し て いる 、 伝統 的 な Unix コマンド ライン 解析 における 難題 を 自分 で 解決 せ ね ば なり ませ ん 。 
とりわけ 、 コール バック 関数 で は 引数 が 裸 の "-" や "-" の 場合 における 慣習 的 な 処理 規則 : 
裸 の "-" ( 何らかの オプション の 引数 で ない 場合 ): コマンド ライン 処理 を 停止 し 、 "-" を 無視 し ます 。 
裸 の "-" ( 何らかの オプション の 引数 で ない 場合 ): コマンド ライン 処理 を 停止 し ます が 、 "-" は 残し ます ( parser . largs に 追加 し ます )。 を 実装 せ ね ば なり ませ ん 。 
オプション が 可変 個 の 引数 を とる よう に さ せ たい なら 、 いくつ か の 巧妙 で 厄介 な 問題 に 配慮 し なけれ ば なり ませ ん 。 
どういう 実装 を とる か は 、 アプリケーション で どの よう な トレードオフ を 考慮 する か によります ( この ため 、 optparse で は 可変 個 の 引数 に関する 問題 を 直接的 に 取り扱わ ない の です )。 と は いえ 、 可変 個 の 引数 を もつ オプション に対する スタブ ( stub 、 仲介 インタフェース ) を 以下 に 示し て おき ます : 
def vararg _ callback ( option , opt _ str , value , parser ): assert value is Nonedone = 0 value = [] rargs = parser . rargswhile rargs : arg = rargs [ 0 ]# "-- foo ", "- a ", "- fx ", "-- file = f " といった 引数 で 停止 。 
# "- 3 " や "- 3 . 0 " で も 止まる ので 、 オプション に 数値 が 入る 場合 に は # それ を 処理 せ ね ば なら ない 。 
この 実装 固有 の 弱点 は 、 - c 以後 に 続い て 負 の 数 を 表す 引数 が あっ た 場合 、 その 引数 は - c の 引数 で は なく 次 の オプション として 解釈 さ れる ( そして おそらく エラー を 引き起こす ) という こと です 。 
この 問題 の 修正 は 読者 の 練習 課題 と し て おき ます 。 
6 . 21 . 3 . 5 オプション 解析 器 へ の 問い合わせ と 操作 
注意 が 足り ない と 、 衝突 する オプション を 定義 し やすく なり ます : 
( とりわけ 、 OptionParser から 標準 的 な オプション を 備え た 自前 の サブ クラス を 定義 し て しまっ た 場合 に は よく 起き ます 。 ) ユーザ が オプション を 追加 する たび に 、 optparse は 既存 の オプション と の 衝突 が ない か チェック し ます 。 
何らかの 衝突 が 見付かる と 、 現在 設定 さ れ て いる 衝突 処理 メカニズム を 呼び出し ます 。 
衝突 処理 メカニズム は コンス トラクタ 中 で 呼び出せ ます : 
個別 に も 呼び出せ ます : 
衝突 時 の 処理 として 、 以下 の メカニズム を 利用 でき ます : 
error ( デフォルト の 設定 ) 
オプション 間 の 衝突 を プログラム 上 の エラー と みなし 、 OptionConflictError を 送出 し ます 。 
オプション 間 の 衝突 を インテリジェント に 解決 し ます ( 下記 参照 )。 
一 例 として 、 衝突 を インテリジェント に 解決 する OptionParser を 定義 し 、 衝突 を 起こす よう な オプション を 追加 し て み ましょ う : 
この 時点 で 、 optparse は すでに 追加 済 の オプション が オプション 文字 列 "- n " を 使っ て いる こと を 検出 し ます 。 
conflict _ handler が " resolve " な ので 、 optparse は 既に 追加 済 の オプション リスト の 方 から "- n " を 除去 し て 問題 を 解決 し ます 。 
従って 、 "- n " の 除去 さ れ た オプション は "- dry - run " だけ で しか 有効 に でき なく なり ます 。 
ユーザ が ヘルプ 文字 列 を 要求 し た 場合 、 問題 解決 の 結果 を 反映 し た メッセージ が 出力 さ れ ます : 
これ まで に 追加 し た オプション 文字 列 を 跡形 も なく 削り 去り 、 ユーザ が その オプション を コマンド ライン から 起動 する 手段 を なく せ ます 。 
この 場合 、 optparse は オプション を 完全 に 除去 し て しまう ので 、 こうした オプション は ヘルプ テキスト や その他 の どこ に も 表示 さ れ なく なり ます 。 例えば 、 現在 の OptionParser の 場合 、 以下 の 操作 : 
parser . add _ option ("-- dry - run ", ..., help =" new dry - run option ") を 行っ た 時点 で 、 最初 の - n /- dry - run オプション は もはや アクセス でき なく なり ます 。 
この ため 、 optparse は オプション を 消去 し て しまい 、 ヘルプ テキスト : 
options :[...]- n , -- noisy be noisy -- dry - run new dry - run option だけ が 残り ます 。 
上記 の 例 は 全て 、 何らかの コマンドラインオプション が 見つかっ た 時 に 何らかの 変数 ( 保存 先 : destination ) に 値 を 設定 し て い まし た 。 
では 、 該当 する オプション が 見つから なかっ た 場合 に は 何 が 起きる の でしょ う か ？ 
デフォルト は 全く 与え て い ない ため 、 これら の 値 は 全て None に なり ます 。 
optparse に対して 、 - q が ない 限り verbose を True に 設定 さ せ たい なら 、 以下 の よう に し ます : 
デフォルト の 値 は 特定 の オプション で は なく 保存 先 に対して 適用 さ れ ます 。 また 、 これら 二つ の オプション は たまたま 同じ 保存 先 を 持っ て いる に すぎ ない ため 、 上 の コード は 下 の コード と 全く 等価 に なり ます : 
下 の よう な 場合 を 考え て み ましょ う : 
前 の 例 と 同様 、 ある オプション の 値 の 保存 先 に対する デフォルト の 値 は 最後 に 指定 し た 値 に なり ます 。 
コード を 読み やすく する ため 、 デフォルト 値 を 設定 する とき に は 両方 の やり方 を 混ぜる の で は なく 、 片方 だけ を 使う よう に し ましょ う 。 
6 . 21 . 4 . 2 コール バック 関数 は どの よう に 呼び出さ れる か 
callback オプション を 最も 簡単 に 定義 する に は 、 parser . add _ option () メソッド を 使い ます 。 
action の 他 に 指定 し なけれ ば なら ない 属性 は callback 、 すなわち コール バック する 関数 自体 です : 
callback は 関数 ( または 呼び出し 可能 オブジェクト ) な ので 、 callback オプション を 定義 する 時 に は あらかじめ my _ callback () を 定義 し て おか ね ば なり ませ ん 。 この 単純 な ケース で は 、 optparse は - c が 何らかの 引数 を とる か どう か 判別 でき ず 、 通常 は - c が 引数 を 伴わ ない こと を 意味 し ます -- 知り たい こと は ただ 単に - c が コマンド ライン 上 に 現れ た どうか だけ です 。 
と は いえ 、 場合 によって は 、 自分 の コール バック 関数 に 任意 の 個数 の コマンド ライン 引数 を 消費 さ せ たい こと も ある でしょ う 。 
これ が コール バック 関数 を トリッキー な もの に し て い ます ; これ について は この 節 の 後 の 方 で 説明 し ます 。 
optparse は 常に 四つ の 引数 を コール バック に 渡し 、 その他 に は callback _ args および callback _ kwargs で 指定 し た 追加 引数 しか 渡し ませ ん 。 
従って 、 最小 の コール バック 関数 シグネチャ は : 
他 で 使わ れ て いる の と 同じ 意味 です : store や append アクション の 時 と 同じく 、 この 属性 は optparse に 引数 を 一つ 消費 し て 、 type に 指定 し た 型 に 変換 さ せ ます 。 
optparse は 変換 後 の 値 を どこ か に 保存 する 代わり に コール バック 関数 に 渡し ます 。 
これ も 他 で 使わ れ て いる の と 同じ 意味 です : この オプション が 指定 さ れ て い て 、 かつ nargs 1 で ある 場合 、 optparse は nargs 個 の 引数 を 消費 し ます 。 この とき 各 引数 は type 型 に 変換 でき ね ば なり ませ ん 。 
変換 後 の 値 は タプル として コール バック に 渡さ れ ます 。 
各々 の Option インスタンス 、 は - f や -- file といった 同義 の コマンドラインオプション から なる 集合 を 表現 し て い ます 。 
一つ の Option に は 任意 の 数 の オプション を 短い 形式 で も 長い 形式 で も 指定 でき ます 。 ただし 、 少なくとも 一つ は 指定 せ ね ば なり ませ ん 。 
正しい 方法 で Option インスタンス を 生成 する に は 、 以降 の 例 でも 示す よう に make _ option () を 使い ます 。 
と は いえ 、 make _ option や parser . add _ option () も 同じ 呼び出し シグネチャ を 備え て い ます : 
短い 形式 の オプション 文字 列 を 一つ だけ 持つ よう な オプション を 生成 する に は : 
make _ option ("- f ", attr = value , ...) の よう に し ます 。 
また 、 長い 形式 の オプション 文字 列 を 一つ だけ 持つ よう な オプション の 定義 は : 
make _ option ("-- foo ", attr = value , ...) の よう に なり ます 。 
attr = value キーワード 引数 で は 、 オプション の 属性 、 すなわち Option オブジェクト の 属性 を 定義 し て い ます 。 
オプション の 属性 の うち で もっとも 重要 な の は action です 。 action は 他 の どの 属性 と 関連 が ある か 、 そして どの 属性 が 必要 か に 大きく 作用 し ます 。 
関係 の ない オプション 属性 を 指定 し たり 、 必要 な 属性 を 指定 し 忘れ たり する と 、 optparse は 誤り を 解説 し た OptionError 例外 を 送出 し ます 。 コマンド ライン 上 に ある オプション が 見つかっ た とき の optparse の 振舞い を 決定 し て いる の は アクション ( action ) です 。 
optparse で ハード コード さ れ て いる アクション に は 以下 の よう な もの が あり ます : 
オプション の 引数 を 保存 し ます [ デフォルト の 動作 です ] 
定数 を 保存 し ます 
真 ( True ) を 保存 し ます store _ false 
偽 ( False ) を 保存 し ます 
オプション の 引数 を リスト に 追加 し ます 
カウンタ を 一つ 増やし ます 
指定 さ れ た 関数 を 呼び出し ます 
全て の オプション と その ドキュメント の 入っ た 使用 法 メッセージ を 出力 し ます 。 
( アクション を 指定 し ない 場合 、 デフォルト は store に なり ます 。 
を 呼び出し た 場合 、 optparse は まず options オブジェクト を 生成 し ます : 
パーザ 中 で 以下 の よう な オプション 
が 定義 さ れ て い て 、 パーズ し た コマンド ライン に 以下 の いずれ か が 入っ て い た 場合 : 
optparse は - f か -- file オプション を 見つけ て 、 
と 同等 の 処理 を 行い ます 。 type および dest オプション 属性 は action と 同じ くらい 重要 です が 、 全て の オプション で 意味 を なす の は action だけ な の です 。 
6 . 21 . 2 . 7 バージョン 番号 の 出力 
optparse に は ヘルプ と 使い方 の 説明 ( usage text ) を 生成 する 機能 が あり 、 ユーザ に 優しい コマンドラインインタフェース を 作成 する 上 で 役立ち ます 。 
やら なけれ ば なら ない の は 、 各 オプション に対する help の 値 と 、 必要 なら プログラム 全体 の 使用 法 を 説明 する 短い メッセージ を 与える こと だけ です 。 
ユーザフレンドリ な ( ドキュメント 付き の ) オプション を 追加 し た OptionParser を 以下 に 示し ます : 
optparse が コマンド ライン 上 で "- h " や "- help " を 見つけ た 場合 や ユーザ が parser . print _ help () を 呼び出し た 場合 、 この OptionParser は 以下 の よう な メッセージ を 標準 出力 に 出力 し ます : 
スクリプト 自体 の 利用 法 を 表す メッセージ を 定義 し ます : 
optparse は "% prog " を 現在 の プログラム 名 、 すなわち os . path . basename ( sys . argv [ 0 ]) と 置き換え ます 。 
全て の オプション に ヘルプ 文字 列 を 定義 し ます 。 行 の 折り返し は 気 に し なく て かまい ませ ん -- optparse は 行 の 折り返し に 気 を 配り 、 見栄え の よい ヘルプ 出力 を 生成 し ます 。 
オプション が 値 を とる という こと は 自動的 に 生成 さ れる ヘルプ メッセージ の 中 で 分かり ます 。 例えば 、 `` mode '' option の 場合 に は : 
の よう に なり ます 。 ここ で `` MODE '' は メタ 変数 ( meta - variable ) と 呼ば れ ます : メタ 変数 は 、 ユーザ が - m /-- mode に対して 指定 する はず の 引数 を 表し ます 。 
デフォルト で は 、 optparse は 保存 先 の 変数 名 を 大文字 だけ に し た もの を メタ 変数 に 使い ます 。 
これ は 時として 期待 通り の 結果 に なり ませ ん -- 例えば 、 上 の 例 の -- filename オプション で は 明示 的 に metavar =" FILE " を 設定 し て おり 、 その 結果 自動 生成 さ れ た オプション 説明 テキスト は : 
デフォルト 値 を 持つ オプション の ヘルプ 文字 列 に は % default を 入れ られ ます -- optparse は % default を デフォルト 値 の str () で 置き換え ます 。 
該当 する オプション に デフォルト 値 が ない 場合 ( あるいは デフォルト 値 が None で ある 場合 ) % default の 展開 結果 は none に なり ます 。 
フラグ オプション -- 特定 の オプション に対して 真 または 偽 の 値 の 値 を 設定 する オプション -- は よく 使わ れ ます 。 optparse で は 、 二つ の アクション 、 store _ true および store _ false を サポート し て い ます 。 
例えば 、 verbose という フラグ を "- v " で 有効 に し て 、 "- q " で 無効 に し たい と し ます : 
ここ で は 二つ の オプション に 同じ 保存 先 を 指定 し て い ます が 、 全く 問題 あり ませ ん ( 下記 の よう に 、 デフォルト 値 の 設定 を 少し 注意深く 行わ ね ば なら ない だけ です ) 
"- v " を コマンド ライン 上 に 見つける と 、 optparse は options . verbose を True に 設定 し ます 。 
"- q " を 見つけれ ば 、 options . verbose は False に セット さ れ ます 。 
6 . 21 . 4 . 1 callback オプション の 定義 
コール バック は 全て 以下 の 形式 で 呼び出さ れ ます : 
ここ で 、 
コール バック を 呼び出し て いる Option の インスタンス です 。 
は 、 コール バック 呼び出し の きっかけ と なっ た コマンド ライン 上 の オプション 文字 列 です 。 
( 長い 形式 の オプション に対する 省略 形 が 使わ れ て いる 場合 、 opt は 完全 な 、 正式 な 形 の オプション 文字 列 と なり ます -- 例えば 、 ユーザ が -- foobar の 短縮 形 として "- foo " を コマンド ライン に 入力 し た 時 に は 、 opt _ str は "- foobar " と なり ます 。 ) 
オプション の 引数 で 、 コマンド ライン 上 に 見つかっ た もの です 。 optparse は 、 type が 設定 さ れ て いる 場合 、 単一 の 引数 しか とり ませ ん ; value の 型 は オプション の 型 として 指定 さ れ た 型 に なり ます 。 
この オプション に対する type が None で ある ( 引数 なし の ) 場合 、 value は None に なり ます 。 
" nargs " 1 で あれ ば 、 value は は 適切 な 型 を もつ 値 の タプル に なり ます 。 
現在 の オプション 解析 の 全て を 駆動 し て いる OptionParser インスタンス です 。 この 変数 が 有用 な の は 、 この 値 を 介し て インスタンス 属性 として いくつ か の 興味深い データ に アクセス できる から です : 
現在 放置 さ れ て いる 引数 、 すなわち 、 すでに 消費 さ れ た ものの 、 オプション で も オプション 引数 で も ない 引数 から なる リスト です 。 
parser . largs は 自由 に 変更 でき 、 たとえば 引数 を 追加 し たり でき ます ( この リスト は args 、 すなわち parse _ args () の 二つ 目 の 戻り 値 に なり ます ) 
現在 残っ て いる 引数 、 すなわち 、 opt _ str および value ) が あれ ば 除き 、 それ 以外 の 引数 が 残っ て いる リスト です 。 
parser . rargs は 自由 に 変更 でき 、 例えば さらに 引数 を 消費 し たり でき ます 。 
[ parser . values ] オプション の 値 が デフォルト で 保存 さ れる オブジェクト ( optparse . OptionValues の インスタンス です 。 
この 値 を 使う と 、 コール バック 関数 が オプション の 値 を 記憶 する ため に 、 他 の optparse と 同じ 機構 を 使える よう に する ため 、 グローバル 変数 や 閉包 ( closure ) を 台無し に し ない ので 便利 です 。 
コマンド ライン 上 に すでに 現れ て いる オプション の 値 に も アクセス でき ます 。 
callback _ args オプション 属性 で 与え られ た 任意 の 固定 引数 から なる タプル です 。 
callback _ args オプション 属性 で 与え られ た 任意 の キーワード 引数 から なる タプル です 。 
6 . 21 . 2 . 9 全て を つなぎ 合わせる 
optparse を 使う 場合 に 気 を 付け ね ば なら ない エラー に は 、 大きく 分け て プログラマ 側 の エラー と ユーザ 側 の エラー という 二つ の 種類 が あり ます 。 
プログラマ 側 の エラー の 多く は 、 例えば 不正 な オプション 文字 列 や 定義 さ れ て い ない オプション 属性 の 指定 、 あるいは オプション 属性 を 指定 し 忘れる といった 、 誤っ た parse . add _ option () 呼び出し による もの です 。 
というのも 、 ユーザ の 操作 エラー という もの は コード の 安定 性 に 関係 なく 起こる から です 。 
optparse は 、 誤っ た オプション 引数 の 指定 ( 整数 を 引数 に とる オプション - n に対して "- n 4 x " と 指定 し て しまう など ) や 、 引数 を 指定 し 忘れ た 場合 (- n が 何らかの 引数 を とる オプション で ある のに 、 "- n " が 引数 の 末尾 に 来 て いる 場合 ) といった 、 ユーザ による エラー を 自動的 に 検出 し ます 。 
また 、 アプリケーション 側 で 定義 さ れ た エラー 条件 が 起き た 場合 、 parser . error () を 呼び出し て エラー を 通知 でき ます : 
値 を 全く 指定 し ない 場合 に は 、 以下 の よう に なり ます : 
optparse は 、 常に エラー を 引き起こし た オプション について 説明 の 入っ た エラーメッセージ を 生成 する よう 気 を 配り ます ; 従っ て 、 parser . error () を アプリケーション コード から 呼び出す 場合 に も 、 同じ よう な メッセージ に なる よう に し て ください 。 optparse の デフォルト の エラー 処理 動作 が 気に入ら ない の なら 、 OptionParser を サブ クラス 化 し て 、 exit () かつ / または error () を オーバライド する 必要 が あり ます 。 
callback オプション の 定義 は 二つ の ステップ から なり ます : 
callback アクション を 使っ て オプション 自体 を 定義 する 。 
6 . 21 . 2 . 3 ブール 値 ( フラグ ) オプション の 処理 
この 他 に も 、 optparse は 以下 の よう な アクション を サポート し て い ます : 
定数 値 を 保存 し ます 。 
オプション の 引数 を 指定 の リスト に 追加 し ます 。 
指定 の カウンタ を 1 増やし ます 。 
指定 の 関数 を 呼び出し ます 。 
これら の アクション について は 、 6 . 21 . 3 節 の 「 リファレンス ガイド 」 および 6 . 21 . 4 節 の 「 オプション ・ コール バック 」 で 触れ ます 。 
パーザ に オプション を 加え て いく に は いくつ か 方法 が あり ます 。 
推奨 する の は 6 . 21 . 2 節 の チュートリアル で 示し た よう な OptionParser . add _ option () を 使う 方法 です 。 
add _ option () は 以下 の 二つ の うち いずれ か の 方法 で 呼び出せ ます : 
make _ option () に ( すなわち Option の コンス トラクタ に ) 固定 引数 と キーワード 引数 の 組み合わせ を 渡し て 、 Option インスタンス を 生成 さ せ ます 。 
( make _ option () など が 返す ) Option インスタンス を 渡し ます 。 もう 一つ の 方法 は 、 あらかじめ 作成 し て おい た Option インスタンス から なる リスト を 、 以下 の よう に し て OptionParser の コンス トラクタ に 渡す という もの です : 
( make _ option () は Option インスタンス を 生成 する ファクトリ 関数 です ; 現在 の ところ 、 個 の 関数 は Option の コンス トラクタ の 別名 に すぎ ませ ん 。 
optparse の 将来 の バージョン で は 、 Option を 複数 の クラス に 分割 し 、 make _ option () は 適切 な クラス を 選ん で インスタンス を 生成 する よう に なる 予定 です 。 
従って 、 Option を 直接 インスタンス 化 し ない で ください 。 ) 
6 . 21 . 2 . 8 optparse の エラー 処理 法 
optparse で は 、 使用 法 メッセージ と 同様 に プログラム の バージョン 文字 列 を 出力 でき ます 。 
OptionParser の version 引数 に 文字 列 を 渡し ます : 
"% prog " は usage と 同じ よう な 展開 を 受ける ので 注意 し て ください 。 
その他 に も version に は 何 でも 好き な 内容 を 入れ られ ます 。 
$ / usr / bin / foo -- versionfoo 1 . 0 の よう に なり ます 。 
optparse を 使っ た スクリプト は 、 通常 以下 の よう に なり ます : 
自前 の オプション パーザ を つつき まわし て 、 何 が 起こる か を 調べる と 便利 な こと が あり ます 。 
OptionParser で は 便利 な 二つ の メソッド を 提供 し て い ます : 
OptionParser に ("- q " や "- verbose " の よう な ) オプション opt _ str が ある 場合 、 真 を 返し ます 。 
オプション 文字 列 opt _ str に対する Option インスタンス を 返し ます 。 
該当 する オプション が なけれ ば None を 返し ます 。 remove _ option ( opt _ str ) 
OptionParser に opt _ str に 対応 する オプション が ある 場合 、 その オプション を 削除 し ます 。 
該当 する オプション に 他 の オプション 文字 列 が 指定 さ れ て い た 場合 、 それら の オプション 文字 列 は 全て 無効 に なり ます 。 opt _ str が この OptionParser オブジェクト の どの オプション に も 属さ ない 場合 、 ValueError を 送出 し ます 。 
オプション 自体 か 、 あるいは その 引数 に 問題 が ある ば あい 、 コール バック 関数 は OptionValueError を 送出 せ ね ば なり ませ ん 。 optparse は この 例外 を とらえ て プログラム を 終了 さ せ 、 ユーザ が 指定 し て おい た エラーメッセージ を 標準 エラー 出力 に 出力 し ます 。 
エラーメッセージ は 明確 、 簡潔 かつ 正確 で 、 どの オプション に 誤り が ある か を 示さ ね ば なり ませ ん 。 
さもなければ 、 ユーザ は 自分 の 操作 の どこ に 問題 が ある か を 解決 する の に 苦労 する こと に なり ます 。 
6 . 21 . 3 . 1 パーザ へ の オプション 追加 
様々 な オプション ・ アクション に は どれ も 互いに 少し づつ 異なっ た 条件 と 作用 が あり ます 。 
ほとんど の アクション に 関連 する オプション 属性 が いくつ か あり 、 値 を 指定 し て optparse の 挙動 を 操作 でき ます ; いくつ か の アクション に は 必須 の 属性 が あり 、 必ず 値 を 指定 せ ね ば なり ませ ん 。 
store [ relevant : type , dest , nargs , choices ] オプション の 後 に は 必ず 引数 が 続き ます 。 引数 は type に 従っ た 値 に 変換 さ れ て dest に 保存 さ れ ます 。 
nargs 1 の 場合 、 複数 の 引数 を コマンド ライン から 取り出し ます ; 引数 は 全て type に従って 変換 さ れ 、 dest に タプル として 保存 さ れ ます 。 
と する と 、 以下 の よう な コマンド ライン : 
を 解析 し た 場合 、 optparse は 
の よう に 設定 を 行い ます 。 
store _ const [ required : const ; relevant : dest ] 値 cost を dest に 保存 し ます 。 
"- noisy " が 見つかる と 、 optparse は 
append [ relevant : type , dest , nargs , choices ] この オプション の 後ろ に は 必ず 引数 が 続き ます 。 引数 は dest の リスト に 追加 さ れ ます 。 
dest の デフォルト 値 を 指定 し なかっ た 場合 、 optparse が この オプション を 最初 に みつけ た 時点 で 空 の リスト を 自動的 に 生成 し ます 。 
nargs 1 の 場合 、 複数 の 引数 を コマンド ライン から 取り出し 、 長 さ nargs の タプル を 生成 し て dest に 追加 し ます 。 type および dest の デフォルト 値 は store アクション と 同じ です 。 
例 : parser . add _ option ("- t ", "-- tracks ", action =" append ", type =" int ") 
"- t 3 " が コマンド ライン 上 で 見つかる と 、 optparse は : 
と 同等 の 処理 を 行い ます 。 
その後 、 "- tracks = 4 " が 見つかる と : 
options . tracks . append ( int (" 4 ")) を 実行 し ます 。 
count [ relevant : dest ] dest に 保存 さ れ て いる 整数 値 を インクリメント し ます 。 
dest は ( デフォルト の 値 を 指定 し ない 限り ) 最初 に インクリメント を 行う 前 に ゼロ に 設定 さ れ ます 。 
例 : parser . add _ option ("- v ", action =" count ", dest =" verbosity ") 
コマンド ライン 上 で 最初 に "- v " が 見つかる と 、 optparse は : 
と 同等 の 処理 を 行い ます 。 以後 、 "- v " が 見つかる たび に 、 
この 関数 の シグネチャ は 
func ( option : Option , opt : string , value : any , parser : OptionParser ,* args , ** kwargs ) の よう に なっ て い ます 。 
詳細 は 、 節 の 「 オプション ・ コール バック 」 を 参照 し て ください 。 
現在 の オプション パーザ 内 の 全て の オプション に対する 完全 な ヘルプ メッセージ を 出力 し ます 。 
ヘルプ メッセージ は OptionParser の コンス トラクタ に 渡し た usage 文字 列 と 、 各 オプション に 渡し た help 文字 列 から 生成 し ます 。 オプション に help 文字 列 が 指定 さ れ て い なく て も 、 オプション は ヘルプ メッセージ 中 に 列挙 さ れ ます 。 
オプション を 完全 に 表示 さ せ ない よう に する に は 、 特殊 な 値 optparse . SUPPRESS _ HELP を 使っ て ください 。 
optparse は 全て の OptionParser に 自動的 に help オプション を 追加 する ので 、 通常 自分 で 生成 する 必要 は あり ませ ん 。 
例 : from optparse import OptionParser , SUPPRESS _ HELPparser = OptionParser () parser . add _ option ("- h ", "-- help ", action =" help "), parser . add _ option ("- v ", action =" store _ true ", dest =" verbose ", help =" Be moderately verbose ") parser . add _ option ("-- file ", dest =" filename ", help =" Input file to read data from "), parser . add _ option ("-- secret ", help = SUPPRESS _ HELP ) 
optparse が コマンド ライン 上 に "- h " または "- help " を 見つける と 、 以下 の よう な ヘルプ メッセージ を 標準 出力 に 出力 し ます ( sys . argv [ 0 ] は " foo . py " だ と し ます ): 
ヘルプ メッセージ の 出力 後 、 optparse は sys . exit ( 0 ) で プロセス を 終了 し ます 。 
OptionParser に 指定 さ れ て いる バージョン 番号 を 標準 出力 に 出力 し て 終了 し ます 。 
バージョン 番号 は 、 実際 に は OptionParser の print _ version () メソッド で 書式 化 さ れ て から 出力 さ れ ます 。 
通常 、 OptionParser の コンス トラクタ に version が 指定 さ れ た とき のみ 関係 の ある アクション です 。 
help オプション と 同様 、 optparse は この オプション を 必要 に 応じ て 自動的 に 追加 する ので 、 version オプション を 作成 する こと は ほとんど ない でしょ う 。 
optparse に は 、 string ( 文字 列 )、 int ( 整数 )、 long ( 長 整数 )、 choice ( 選択肢 )、 float ( 浮動 小数点 数 ) および complex ( 複素数 ) の 6 種類 の オプション 型 が あり ます 。 
新た な オプション の 型 を 追加 し たけれ ば 、 節 、 「 optparse の 拡張 」 を 参照 し て ください 。 
文字 列 オプション の 引数 は チェック や 変換 を 一切 受け ませ ん : コマンド ライン 上 の テキスト は 保存 先 に そのまま 保存 さ れ ます ( または コール バック に 渡さ れ ます )。 整数 引数 は int () に 渡さ れ 、 Python の 整数 型 に 変換 さ れ ます 。 
int () が 失敗 し た 場合 optparse の 処理 も 失敗 に 終わり ます が 、 より 役に立つ エラーメッセージ を 出力 し ます 。 
( 内部 的 に は 、 optparse は OptionValueError を 送出 し ます ; OptionParser は この 例外 を より 上 の レベル で 捕捉 し 、 メッセージ とともに プログラム を 停止 さ せ ます 。 ) 同様 に 、 浮動 小数点 数 引数 は float () 、 長 整数 引数 は long () 、 複素数 引数 は complex () に 渡さ れ 変換 さ れ ます 。 
それ 以外 の 点 で は 整数 引数 の 場合 と 同様 の 扱い です 。 
choice オプション は string オプション の サブ タイプ です 。 
choice オプション の 属性 ( 文字 列 から なる シーケンス ) に は 、 利用 できる オプション 引数 の セット を 指定 し ます 。 
optparse . option . check _ choice () は ユーザ の 指定 し た オプション 引数 と マスタ リスト を 比較 し て 、 無効 な 文字 列 が 指定 さ れ た 場合 に は OptionValueError を 送出 し ます 。 
6 . 21 . 2 . 3 ブール 値 ( フラグ ) オプション の 処理 6 . 21 . 2 . 2 store アクション 
もっとも 良く 使わ れる アクション は store です 。 
この アクション は 次 の 引数 ( あるいは 現在 の 引数 の 残り の 部分 ) を 取り出し 、 正しい 型 の 値 か 確かめ 、 指定 し た 保存 先 に 保存 する よう optparse に 指示 し ます 。 
例えば : parser . add _ option ("- f ", "-- file ", action =" store ", type =" string ", dest =" filename ") 
の よう に 指定 し て おき 、 偽 の コマンド ライン を 作成 し て optparse に 解析 さ せ て み ましょ う : 
オプション 文字 列 "- f " を 見つける と 、 optparse は 次 の 引数 で ある " foo . txt " を 消費 し 、 その 値 を options . filename に 保存 し ます 。 
従って 、 この parse _ args () 呼び出し 後 に は options . filename は " foo . txt " に なっ て い ます 。 
オプション の 型 として 、 optparse は 他 に も int や float を サポート し て い ます 。 整数 の 引数 を 想定 し た オプション の 例 を 示し ます : 
この オプション に は 長い 形式 の オプション 文字 列 が ない ため 、 設定 に 問題 が ない という こと に 注意 し て ください 。 
また 、 デフォルト の アクション は store な ので 、 ここ で は action を 明示 的 に 指定 し て い ませ ん 。 架空 の コマンド ライン を もう 一つ 解析 し て み ましょ う 。 
今度 は 、 オプション 引数 を オプション の 右側 に ぴったり くっつけ て 一緒くた に し ます : - n 42 ( 一つ の 引数 のみ ) は - n 42 ( 二つ の 引数 から なる ) と 等価 に なる ので 、 
は " 42 " を 出力 し ます 。 型 を 指定 し ない 場合 、 optparse は 引数 を string で ある と 仮定 し ます 。 
デフォルト の アクション が store で ある こと も 併せ て 考える と 、 最初 の 例 は もっと 短く なり ます : 
保存 先 ( destination ) を 指定 し ない 場合 、 optparse は デフォルト 値 として オプション 文字 列 から 気 の きい た 名前 を 設定 し ます : 最初 に 指定 し た 長い 形式 の オプション 文字 列 が "- foo - bar " で あれ ば 、 デフォルト の 保存 先 は foo _ bar に なり ます 。 
長い 形式 の オプション 文字 列 が なけれ ば 、 optparse は 最初 に 指定 し た 短い 形式 の オプション 文字 列 を 探し ます : 例えば 、 "- f " に対する 保存 先 は f に なり ます 。 
optparse で は 、 long や complex といった 組み込み 型 も 取り入れ て い ます 。 
型 の 追加 は 
節 の 「 optparse の 拡張 」 で 触れ て い ます 。 
6 . 21 . 1 . 2 オプション と は 何 か 
引数 ( argument ) 
コマンド ライン で ユーザ が 入力 する テキスト の 塊 で 、 シェル が execl () や execv () に 引き渡す もの です 。 
Python で は 、 引数 は sys . argv [ 1 :] の 要素 と なり ます 。 ( sys . argv [ 0 ] は 実行 しよ う と し て いる プログラム の 名前 です 。 
引数 解析 に関して は 、 この 要素 は あまり 重要 で は あり ませ ん 。 ) Unix シェル で は 、 「 語 ( word )」 という 用語 も 使い ます 。 
場合 によって は sys . argv [ 1 :] 以外 の 引数 リスト を 代入 する 方 が 望ましい こと が ある ので 、 「 引数 」 は 「 sys . argv [ 1 :] または sys . argv [ 1 :] の 代替 として 提供 さ れる 別 の リスト の 要素 」 と 読む べき でしょ う 。 
オプション ( option ) 
追加 的 な 情報 を 与える ため の 引数 で 、 プログラム の 実行 に対する 教示 や カスタマイズ を 行い ます 。 
また 、 伝統 的 な Unix における 書法 で は 、 複数 の オプション を 一つ の 引数 に まとめ られ ます 。 
例えば "- x - F " は "- xF " と 等価 です 。 
GNU プロジェクト で は "-" の 後ろ に ハイフン で 区切り の 語 を 指定 する 方法 、 例えば "- file " や "- dry - run " も 提供 し て い ます 。 
optparse は 、 これら 二 種類 の オプション 書法 だけ を サポート し て い ます 。 
他 に 見 られる 他 の オプション 書法 に は 以下 の よう な もの が あり ます : 
ハイフン の 後ろ に 数個 の 文字 が 続く もの で 、 例えば "- pf " ( この オプション は 複数 の オプション を 一つ に まとめ た もの と は 違い ます ) 
ハイフン の 後ろ に 語 が 続く もの で 、 例えば "- file " ( これ は 技術 的 に は 上 の 書式 と 同じ です が 、 通常 同じ プログラム 上 で 一緒 に 使う こと は あり ませ ん ) 
プラス 記号 の 後ろ に 一文字 、 数個 の 文字 、 または 語 を 続け た もの で 、 例えば "+ f " 、 "+ rgb " 
スラッシュ 記号 の 後ろ に 一文字 、 数個 の 文字 、 または 語 を 続け た もの で 、 例えば "/ f " 、 "/ file " 
上記 の オプション 書法 は optparse で は サポート し て おら ず 、 今後 も サポート する 予定 は あり ませ ん 。 
これ は 故意 による もの です : 最初 の 三つ は どの 環境 の 標準 で も なく 、 最後 の 一つ は VMS や MS - DOS , そして Windows を 対象 に し て いる とき に しか 意味 を なさ ない から です 。 
オプション 引数 ( option argument ) 
ある オプション の 後ろ に 続く 引数 で 、 その オプション に 密接 な 関連 を もち 、 オプション と 同時に 引数 リスト から 取り出さ れ ます 。 optparse で は 、 オプション 引数 は 以下 の よう に 別々 の 引数 に でき ます : 
また 、 一つ の 引数 中 に も 入れ られ ます : 
多く の 人々 が 「 オプション の オプション 引数 」 機能 を 欲 し て い ます 。 
これ は 、 ある オプション が 引数 が 指定 さ れ て いる 場合 に は 引数 を とり 、 そう で ない 場合 に は 引数 を もた ない よう に する という 機能 です 。 この 機能 は 引数 解析 を あいまい に する ため 、 議論 の 的 と なっ て い ます : 例えば 、 もし - a が オプション 引数 を とり 、 - b が まったく 別 の オプション だ と し たら 、 - ab を どう やっ て 解析 すれ ば いい の でしょ う か ？ 
こうした 曖昧 さ が 存在 する ため 、 optparse は 今 の ところ この 機能 を サポート し て い ませ ん 。 
固定 引数 ( positional argument ) 
他 の オプション が 解析 さ れる 、 すなわち 他 の オプション と その 引数 が 解析 さ れ て 引数 リスト から 除去 さ れ た 後 に 引数 リスト に 置か れ て いる もの です 。 
必須 の オプション ( required option ) 
コマンド ライン で 与え なけれ ば なら ない オプション です ; 「 必須 な オプション ( required option )」 という 語 は 、 英語 で は 矛盾 し た 言葉 です 。 optparse で は 必須 オプション の 実装 を 妨げ て は い ませ ん が 、 とりたて て 実装 上 役立つ こと も し て い ませ ん 。 
optparse で 必須 オプション を 実装 する 方法 は 、 optparse ソース コード 配布 物 中 の examples / required _ 1 . py や examples / required _ 2 . py を 参照 し て ください 。 
例えば 、 下記 の よう な 架空 の コマンド ライン を 考え て み ましょ う : 
"- v " と "- report " は どちら も オプション です 。 
-- report オプション が 引数 を とる と すれ ば 、 "/ tmp / report . txt " は オプション の 引数 です 。 
" foo " と " bar " は 固定 引数 に なり ます 。 
6 . 21 . 1 . 3 固定 引数 と は 何 か 
optparse は とても 柔軟 で 強力 で あり ながら 、 ほとんど の 場合 に は 簡単 に 利用 でき ます 。 
これ で オプション を 定義 できる よう に なり まし た 。 
基本 的 な 構文 は 以下 の 通り です : 
オプション を 全て 定義 し たら 、 optparse に コマンド ライン を 解析 する よう に 指示 し ます : 
) parse _ args () は 二つ の 値 を 返し ます : 
全て の オプション に対する 値 の 入っ た オブジェクト options -- 例えば 、 "- file " が 単一 の 文字 列 引数 を とる 場合 、 options . file は ユーザ が 指定 し た ファイル 名 に なり ます 。 
オプション を 指定 し なかっ た 場合 に は None に なり ます 。 
オプション の 解析 後 に 残っ た 固定 引数 から なる リスト args 。 
この チュートリアル の 節 で は 、 最も 重要 な 四つ の オプション 属性 : action , type , dest ( destination ), および help について しか 触れ ませ ん 。 
この うち 最も 重要 な の は action です 。 
アクション ( action ) は optparse が コマンド ライン 上 に ある オプション を 見つけ た とき に 何 を す べき か を 指示 し ます 。 
optparse に は 押し 着せ の アクション の セット が ハード コード さ れ て い ます 。 新た な アクション の 追加 は 上級 者 向け の 話題 で あり 、 
オプション は プログラム の 実行 を 調整 し たり 、 カスタマイズ し たり する ため の 補助 的 な 情報 を 与える ため に 使い ます 。 
もっと はっきり いう と 、 オプション は あくまでも オプション ( 省略 可能 ) で ある という こと です 。 
本来 、 プログラム は ともかく も オプション なし で うまく 実行 でき て しかる べき です 。 
( Unix や GNU ツール セット の プログラム を ランダム に ピックアップ し て み て ください 。 
オプション を 全く 指定 し なく て も ちゃんと 動く でしょ う ？ 
例外 は find , tar , dd くらい です -- これら の 例外 は 、 オプション 文法 が 標準 的 で なく 、 インタフェース が 混乱 を 招く と 酷評 さ れ て き た 変種 の はみ出 し もの な の です ) 多く の 人 が 自分 の プログラム に 「 必須 の オプション 」 を 持た せ たい と 考え ます 。 
しかし よく 考え て ください 。 
必須 なら 、 それ は オプション ( 省略 可能 ) で は ない の です ！ プログラム を 正しく 動作 さ せる の に 絶対 的 に 必要 な 情報 が ある と すれ ば 、 そこ に は 固定 引数 を 割り当てる べき な の です 。 
良く でき た コマンドラインインタフェース 設計 として 、 ファイル の コピー に 使わ れる cp ユーティリティ の こと を 考え て み ましょ う 。 
ファイル の コピー で は 、 コピー 先 を 指定 せ ず に ファイル を コピー する の は 無意味 な 操作 です し 、 少なくとも 一つ の コピー 元 が 必要 です 。 従って 、 cp は 引数 無し で 実行 する と 失敗 し ます 。 
と は いえ 、 cp は オプション を 全く 必要 と し ない 柔軟 で 便利 な コマンド ライン 文法 を 備え て い ます : 
まだ あり ます 。 
ほとんど の cp の 実装 で は 、 ファイル モード や 変更 時刻 を 変え ず に コピー する 、 シンボリックリンク の 追跡 を 行わ ない 、 すでに ある ファイル を 上書き する 前 に ユーザ に 尋ねる 、 など 、 ファイル を コピー する 方法 を いじる ため の 一連 の オプション を 実装 し て い ます 。 
しかし 、 こうした オプション は 、 一つ の ファイル を 別 の 場所 に コピー する 、 または 複数 の ファイル を 別 の ディレクトリ に コピー する という 、 cp の 中心 的 な 処理 を 乱す こと は ない の です 。 
固定 引数 と は 、 プログラム を 動作 さ せる 上 で 絶対 的 に 必要 な 情報 と なる 引数 です 。 よい ユーザ インタフェース と は 、 可能 な 限り 少ない 固定 引数 を もつ もの です 。 
プログラム を 正しく 動作 さ せる ため に 17 個 も の 別個 の 情報 が 必要 だ と し たら 、 その 方法 は さして 問題 に は なり ませ ん -- ユーザ は プログラム を 正しく 動作 さ せ られ ない うち に 諦め 、 立ち去っ て しまう から です 。 
ユーザ インタフェース が コマンド ライン で も 、 設定 ファイル で も 、 GUI や その他 の 何 で あっ て も 同じ です : 多く の 要求 を ユーザ に 押し付けれ ば 、 ほとんど の ユーザ は ただ 音 を あげ て しまう だけ な の です 。 要するに 、 ユーザ が 絶対 に 提供 し なけれ ば なら ない 情報 だけ に 制限 する -- そして 可能 な 限り よく 練ら れ た デフォルト 設定 を 使う よう 試み て ください 。 
もちろん 、 プログラム に は 適度 な 柔軟 性 を 持た せ たい と も 望む はず です が 、 それ こそ が オプション の 果たす 役割 です 。 
繰り返し ます が 、 設定 ファイル の エントリ で あろ う が 、 GUI で でき た 「 環境 設定 」 ダイアログ 上 の ウィジェット で あろ う が 、 コマンドラインオプション で あろ う が 関係 あり ませ ん -- より 多く の オプション を 実装 すれ ば プログラム は より 柔軟 性 を 持ち ます が 、 実装 は より 難解 に なる の です 。 
高 すぎる 柔軟 性 は ユーザ を 閉口 さ せ 、 コード の 維持 を より 難しく する の です 。 
5 . 3 . 3 既存 テスト コード の 再 利用 
単体テスト の 基礎 と なる 構築 要素 は 、 テストケース -- セットアップ と 正し さ の チェック を 行う 、 独立 し た シナリオ -- です 。 
PyUnit で は 、 テストケース は 
モジュール の TestCase クラス の インスタンス で 示し ます 。 
何らかの テスト を 行う 場合 、 ベース クラス TestCase の assert *() か fail *() メソッド を 使用 し て ください 。 
テストケース 実行 時 、 テスト が 失敗 する と 例外 が 送出 さ れ 、 テストフレームワーク は テスト 結果 を failure と し ます 。 
assert *() と fail *() 以外 から の 例外 が 発生 し た 場合 、 テスト 結果 は errors と なり ます 。 テスト の 実行 方法 について は 後述 と し 、 まずは テストケース インスタンス の 作成 方法 を 示し ます 。 
テストケース インスタンス は 、 以下 の よう に 引数 なし で コンス トラクタ を 呼び出し て 作成 し ます 。 
似 た よう な テスト を 数多く 行う 場合 、 同じ 環境 設定 処理 を 何 度 も 必要 と なり ます 。 
例えば 上記 の よう な Widget の テスト が 100 種類 も 必要 な 場合 、 それぞれ の サブ クラス で `` Widget '' オブジェクト を 生成 する 処理 を 記述 する の は 好ましく あり ませ ん 。 
テスト 中 に setUp () メソッド で 例外 が 発生 し た 場合 、 テストフレームワーク は テスト を 実行 する こと が でき ない と みなし 、 runTest () を 実行 し ませ ん 。 同様 に 、 終了 処理 を tearDown () メソッド に 記述 する と 、 runTest () メソッド 終了 後 に 実行 さ れ ます : 
setUp () が 正常 終了 し た 場合 、 runTest () の 結果 に 関わり 無く tearDown () が 実行 さ れ ます 。 この よう な 、 テスト を 実行 する 環境 を fixture と 呼び ます 。 
この 例 で は runTest () が あり ませ ん が 、 二つ の テスト メソッド を 定義 し て い ます 。 
この クラス の インスタンス は test *() メソッド の どちら か 一方 の 実行 と 、 self . widget の 生成 ・ 解放 を 行い ます 。 
PyUnit で は テストスイート によって テストケース インスタンス を テスト 対象 の 機能 によって グループ 化 する こと が でき ます 。 
テストスイート は 、 
の TestSuite クラス で 作成 し ます 。 
各 テスト モジュール で 、 テストケース を 組み込ん だ テストスイートオブジェクト を 作成 する 呼び出し 可能 オブジェクト を 用意 し て おく と 、 テスト の 実行 や 参照 が 容易 に なり ます : 
または : 
( 小心 者 は 前者 を 使う べし ) 一般 的 に は 、 TestCase の サブ クラス に は 良く 似 た 名前 の テスト 関数 が 複数 定義 さ れ ます ので 、 テストケース クラス の 全 テストケース を 使っ て テストスイート を 作成 する makeSuite () 関数 を 用意 し て い ます : 
makeSuite () で テストスイート を 作成 し た 場合 、 テストケース の 実行 順序 は テストケース 関数 名 を cmp () 組み込み 関数 で ソート し た 順番 と なり ます 。 
システム 全体 の テスト を 行う 場合 など 、 テストスイート を さらに グループ 化 し たい 場合 が あり ます が 、 この よう な 場合 、 TestSuite インスタンス に は TestSuite と 同じ よう に TestSuite を 追加 する 事 が でき ます 。 
テストケース や テストスイート は ( widget . py の よう な ) テスト 対象 の モジュール 内 に も 記述 でき ます が 、 テスト は ( widgettests . py の よう な ) 独立 し た モジュール に 置い た 方 が 以下 の よう な 点 で 有利 です : 
テスト モジュール だけ を コマンド ライン から 実行 する こと が できる 。 
テスト コード と 出荷 する コード を 分離 する 事 が できる 。 
テスト コード を 、 テスト 対象 の コード に 合わせ て 修正 する 誘惑 に 駆ら れ にくい 。 
テスト コード は 、 テスト 対象 コード ほど 頻繁 に 更新 さ れ ない 。 
テスト コード を より 簡単 に リファクタリング する こと が できる 。 
C で 書い た モジュール の テスト は 、 どっち に しろ 独立 し た モジュール と なる 。 
テスト 戦略 を 変更 し た 場合 でも 、 ソース コード を 変更 する 必要 が ない 。 
これら の 関数 は 、 ファイル 記述 子 を 使っ て 参照 さ れ て いる I / O ストリーム を 操作 し ます 。 
ファイル ディスクリプタ fd を 閉じ ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 
注意 : 注 : この 関数 は 低 レベル の I / O の ため の もの で 、 open () や pipe () が 返す ファイル 記述 子 に対して 適用 し なけれ ば なり ませ ん 。 
組み込み 関数 open () や popen () 、 fdopen () の 返す `` ファイル オブジェクト '' を 閉じる に は 、 オブジェクト の close () メソッド を 使っ て ください 。 
ファイル 記述 子 fd の 複製 を 返し ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows . 
ファイル 記述 子 を fd から fd 2 に 複製 し 、 必要 なら 後者 の 記述 子 を 前もって 閉じ て おき ます 。 利用 できる 環境 : Unix 、 Windows 
開い て いる ファイル に 関連 し た システム 設定 情報 ( system configurationinformation ) を 返し ます 。 name に は 取得 し たい 設定 名 を 指定 し ます ; これ は 定義 済み の システム 固有値 名 の 文字 列 で 、 多く の 標準 ( POSIX . 1 、 Unix 95 、 Unix 98 その他 ) で 定義 さ れ て い ます 。 
プラットフォーム によって は 別 の 名前 も 定義 し て い ます 。 
ホスト オペレーティングシステム の 関知 する 名前 は pathconf _ names 辞書 で 与え られ て い ます 。 
name の 指定 値 が ホスト システム で サポート さ れ て おら ず 、 pathconf _ names に も 入っ て い ない 場合 、 errno . EINVAL を エラー 番号 として OSError を 送出 し ます 。 
stat () の よう に ファイル 記述 子 fd の 状態 を 返し ます 。 利用 できる 環境 : Unix 、 Windows 
statvfs () の よう に 、 ファイル 記述 子 fd に 関連づけ られ た ファイル が 入っ て いる ファイル システム に関する 情報 を 返し ます 。 利用 できる 環境 : Unix 
ファイル 記述 子 fd を 持つ ファイル の ディスク へ の 書き込み を 強制 し ます 。 
Unix で は 、 ネイティブ の fsync () 関数 を 、 Windows で は MS _ commit () 関数 を 呼び出し ます 。 Python の ファイル オブジェクト f を 使う 場合 、 f の 内部 バッファ を 確実 に ディスク に 書き込む ため に 、 まず 
f . flush () を 実行 し 、 それから os . fsync ( f . fileno ()) し て ください 。 
利用 できる 環境 : Unix 、 2 . 2 . 3 以降 で は Windows も 。 
ファイル 記述 子 fd に 対応 する ファイル を 、 サイズ が 最大 で length バイト に なる よう に 切り詰め ます 。 利用 できる 環境 : Unix 。 
ファイル file を 開き 、 flag に従って 様々 な フラグ を 設定 し 、 可能 なら mode に従って ファイル モード を 設定 し ます 。 mode の 標準 の 設定 値 は 0777 ( 8 進 表現 ) で 、 先 に 現在 の umask を 使っ て マスク を 掛け ます 。 
注意 : この 関数 は 低 レベル の I / O の ため の もの です 。 通常 の 利用 で は 、 read () や write () ( や その他 多く の ) メソッド を 持つ 「 ファイル オブジェクト 」 を 返す 、 組み込み 関数 open () を 使っ て ください 。 
新しい 擬似 端末 の ペア を 開き ます 。 
ファイル 記述 子 の ペア ( master , slave ) を 返し 、 それぞれ pty および tty を 表し ます 。 
( 少し だけ ) より 可 搬性 の ある アプローチ として は 、 
モジュール を 使っ て ください 。 利用 できる 環境 : いくつ か の Unix 風 システム 。 
パイプ を 作成 し ます 。 
ファイル 記述 子 の ペア ( r , w ) を 返し 、 それぞれ 読み出し 、 書き込み 用 に 使う こと が でき ます 。 利用 できる 環境 : Unix 、 Windows 。 
ファイル 記述 子 fd から 最大 で n バイト 読み出し ます 。 読み出さ れ た バイト 列 の 入っ た 文字 列 を 返し ます 。 
fd が 参照 し て いる ファイル の 終端 に 達し た 場合 、 空 の 文字 列 が 返さ れ ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
注意 : この 関数 は 低 レベル の I / O の ため の もの で 、 open () や pipe () が 返す ファイル 記述 子 に対して 適用 し なけれ ば なり ませ ん 。 
組み込み 関数 open () や popen () 、 fdopen () の 返す `` ファイル オブジェクト '' 、 あるいは sys . stdin から 読み出す に は 、 オブジェクト の read () メソッド を 使っ て ください 。 
fd ( open () が 返す 開か れ た ファイル 記述 子 ) で 与え られる 端末 に 関連付け られ た プロセス グループ を 返し ます 。 利用 できる 環境 : Unix 。 
fd ( open () が 返す 開か れ た ファイル 記述 子 ) で 与え られる 端末 に 関連付け られ た プロセス グループ を pg に 設定 し ます 。 利用 できる 環境 : Unix 。 
ファイル 記述 子 fd に 関連付け られ て いる 端末 デバイス を 特定 する 文字 列 を 返し ます 。 
fd が 端末 に 関連付け られ て い ない 場合 、 例外 が 送出 さ れ ます 。 利用 できる 環境 : Unix 。 
組み込み 関数 open () や popen () 、 fdopen () の 返す `` ファイル オブジェクト '' 、 あるいは sys . stdout 、 sys . stderr に 書き込む に は 、 オブジェクト の write () メソッド を 使っ て ください 。 
以下 の データ 要素 は open () 関数 の flags 引数 を 構築 する ため に 利用 する こと が でき ます 。 
上 の フラグ と 同様 、 open () 関数 の flag 引数 の ため の オプション フラグ です 。 
open () 関数 の flag 引数 の ため の オプション フラグ です 。 
利用 できる 環境 : Macintosh 、 Windows 。 
実 uid / gid を 使っ て path に対する アクセス が 可能 か 調べ ます 。 
アクセス が 許可 さ れ て いる 場合 True を 、 そう で ない 場合 False を 返し ます 。 
access () の mode に 渡す ため の 値 で 、 path が 存在 する か どう か を 調べ ます 。 
access () の mode に 渡す ため の 値 で 、 path が 読み出し 可能 か どう か を 調べ ます 。 
access () の mode に 渡す ため の 値 で 、 path が 書き込み 可能 か どう か を 調べ ます 。 
access () の mode に 渡す ため の 値 で 、 path が 実行 可能 か どう か を 調べ ます 。 
現在 の 作業 ディレクトリ ( current working directory ) を path に 設定 し ます 。 
現在 の 作業 ディレクトリ を 表現 する 文字 列 を 返し ます 。 
path の モード を 数値 mode に 変更 し ます 。 mode は 、 ( stat モジュール で 定義 さ れ て いる ) 以下 の 値 の いずれ か を 取り 得 ます : 
利用 できる 環境 : Unix 、 Windows 。 
path の 所有 者 ( owner ) id と グループ id を 、 数値 uid および gid に 変更 し ます 。 
利用 できる 環境 : Unix 。 
src を 指し て いる ハード リンク dst を 作成 し ます 。 利用 できる 環境 : Unix 。 
ディレクトリ 内 の エントリ 名 が 入っ た リスト を 返し ます 。 リスト 内 の 順番 は 不定 です 。 
特殊 エントリ '.' および '..' は 、 それら が ディレクトリ に 入っ て い て も リスト に は 含め られ ませ ん 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : Windows NT / 2 k / XP と Unix で は 、 path が Unicode オブジェクト の 場合 、 Unicode オブジェクト の リスト が 返さ れ ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
stat () に 似 て い ます が 、 シンボリックリンク を たどり ませ ん 。 利用 できる 環境 : Unix 。 
数値 で 指定 さ れ た モード mode を 持つ FIFO ( 名前 付き パイプ ) を path に 作成 し ます 。 
mode の 標準 の 値 は 0666 ( 8 進 ) です 。 
FIFO は ( 例えば os . unlink () を 使っ て ) 削除 さ れる まで 存在 し つづけ ます 。 
一般 的 に 、 FIFO は `` クライアント '' と `` サーバ '' 形式 の プロセス 間 で ランデブー を 行う ため に 使わ れ ます : この とき 、 サーバ は FIFO を 読み出し 用 に 開き 、 クライアント は 書き込み 用 に 開き ます 。 
mkfifo () は FIFO を 開か ない -- 単に ランデブー ポイント を 作成 する だけ -- な ので 注意 し て ください 。 
filename という 名前 で 、 ファイル システム ・ ノード ( ファイル 、 デバイス 特殊 ファイル 、 または 、 名前 つき パイプ ) を 作り ます 。 mode は 、 作ろ う と する ノード の 使用 権限 と タイプ を 、 S _ IFREG 、 S _ IFCHR 、 S _ IFBLK 、 S _ IFIFO ( これら の 定数 は stat で 使用 可能 ) の いずれ か と （ ビット OR で ） 組み合わせ て 指定 し ます 。 
S _ IFCHR と S _ IFBLK を 指定 する と 、 device は 新しく 作ら れ た デバイス 特殊 ファイル を ( おそらく os . makedev () を 使っ て ) 定義 し 、 指定 し なかっ た 場合 に は 無視 し ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
生 の デバイス 番号 から 、 デバイス の メジャー 番号 を 取り出し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
生 の デバイス 番号 から 、 デバイス の マイナー 番号 を 取り出し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
major と minor から 、 新しく 生 の デバイス 番号 を 作り ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
数値 で 指定 さ れ た モード mode を もつ ディレクトリ path を 作成 し ます 。 mode の 標準 の 値 は 0777 ( 8 進 ) です 。 
システム によって は 、 mode は 無視 さ れ ます 。 
利用 の 際 に は 、 現在 の umask 値 が 前もって マスク さ れ ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
再帰 的 な ディレクトリ 作成 関数 です 。 
mkdir () に 似 て い ます が 、 末端 ( leaf ) と なる ディレクトリ を 作成 する ため に 必要 な 中間 の 全て の ディレクトリ を 作成 し ます 。 
末端 ディレクトリ が すでに 存在 する 場合 や 、 作成 が でき なかっ た 場合 に は error 例外 を 送出 し ます 。 
mode の 標準 の 値 は 0777 ( 8 進 ) です 。 
( Windows システム に のみ 関係 する こと です が 、 Universal Naming Convention パス は 、 ` hostpath ' という 書式 の パス です ） バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
指定 さ れ た ファイル に 関係 する システム 設定 情報 を 返し ます 。 varname に は 取得 し たい 設定 名 を 指定 し ます ; これ は 定義 済み の システム 固有値 名 の 文字 列 で 、 多く の 標準 ( POSIX . 1 、 Unix 95 、 Unix 98 その他 ) で 定義 さ れ て い ます 。 
pathconf () および fpathconf () が 受理 する システム 設定 名 を 、 ホスト オペレーティングシステム で 定義 さ れ て いる 整数 値 に 対応付け て いる 辞書 です 。 
この 辞書 は システム で どの 設定 名 が 定義 さ れ て いる か を 決定 する ため に 利用 でき ます 。 利用 できる 環境 : Unix 。 
シンボリックリンク が 指し て いる パス を 表す 文字 列 を 返し ます 。 
返さ れる 値 は 絶対 パス に も 、 相対 パス に も なり 得 ます ; 相対 パス の 場合 、 os . path . join ( os . path . dirname ( path ), result ) を 使っ て 絶対 パス に 変換 する こと が でき ます 。 
利用 できる 環境 : Unix 。 
ファイル path を 削除 し ます 。 
path が ディレクトリ の 場合 、 OSError が 送出 さ れ ます ; ディレクトリ の 削除 について は rmdir () を 参照 し て ください 。 
この 関数 は 下 で 述べ られ て いる unlink () 関数 と 同一 です 。 
Windows で は 、 使用 中 の ファイル を 削除 しよ う と 試みる と 例外 を 送出 し ます ; Unix で は 、 ディレクトリ エントリ は 削除 さ れ ます が 、 記憶 装置 上 に アロケーション さ れ た ファイル 領域 は 元 の ファイル が 使わ れ なく なる まで 残さ れ ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
再帰 的 な ディレクトリ 削除 関数 です 。 
rmdir () と 同じ よう に 動作 し ます が 、 末端 ディレクトリ が うまく 削除 できる かぎり 、 パス を 構成 する 要素 の 右端 と なる ディレクトリ を 刈り込ん で ゆき 、 指定 し た パス 全体 が 削除 さ れる か エラー が 送出 さ れる まで 続け ます ( この エラー は 通常 、 指定 し た ディレクトリ の 親 ディレクトリ が 空 で ない こと を 意味 する だけ な ので 無視 さ れ ます )。 
末端 の ディレクトリ が うまく 削除 でき ない 場合 に は error を 送出 し ます 。 バージョン 1 . 5 . 2 で 新た に 追加 さ れ た 仕様 です 。 
ファイル または ディレクトリ src を dst に 名前 変更 し ます 。 
dst が ディレクトリ の 場合 、 OSError が 送出 さ れ ます 。 
Unix で は 、 dst が 存在 し 、 かつ ファイル の 場合 、 ユーザ の 権限 が ある かぎり 暗黙 の うち に 元 の ファイル が 削除 さ れ ます 。 
この 操作 は いくつ か の Unix 系 において 、 src と dst が 異なる ファイル システム 上 に ある と 失敗 する こと が あり ます 。 
ファイル 名 の 変更 が 成功 する 場合 、 この 操作 は 原子 的 ( atomic ) 操作 と なり ます ( これ は POSIX 要求 仕様 です ) Windows で は 、 dst が 既に 存在 する 場合 に は 、 たとえ ファイル の 場合 でも OSError が 送出 さ れ ます ; これ は dst が 既に 存在 する ファイル 名 の 場合 、 名前 変更 の 原子 的 操作 を 実装 する 手段 が ない から です 。 
利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
注意 : この 関数 は コピー 元 の 末端 の ディレクトリ または ファイル を 削除 する 権限 が ない 場合 に は 失敗 し ます 。 
ディレクトリ path を 削除 し ます 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
与え られ た path に対して stat () システム コール を 実行 し ます 。 
戻り 値 は オブジェクト で 、 その 属性 が stat 構造 体 の 以下 に 挙げる 各 メンバ : st _ mode ( 保護 モード ビット )、 st _ ino ( i ノード 番号 )、 st _ dev ( デバイス )、 st _ nlink ( ハード リンク 数 )、 st _ uid ( 所有 者 の ユーザ ID )、 st _ gid ( 所有 者 の グループ ID )、 st _ size ( ファイル の バイト サイズ )、 st _ atime ( 最終 アクセス 時刻 )、 st _ mtime ( 最終 更新 時刻 )、 st _ ctime ( プラットフォーム 依存 ： Unix で は 最終 メタデータ 変更 時刻 、 Windows で は 作成 時刻 ) と なっ て い ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : も し stat _ float _ times が 真 を 返す 場合 、 時間 値 は 浮動 小数点 で 秒 を 計り ます 。 
ファイル システム が サポート し て いれ ば 、 秒 の 小数点 以下 の 桁 も 含め て 返さ れ ます 。 
Mac OS で は 、 時間 は 常に 浮動 小数点 です 。 
詳細 な 説明 は stat _ float _ times を 参照 し て ください 
では 、 stat 構造 体 から 情報 を 引き出す 上 で 便利 な 関数 や 定数 を 定義 し て い ます 。 ( Windows で は 、 いくつ か の データ 要素 は ダミー の 値 が 埋め られ て い ます 。 
例えば 、 FAT や FAT 32 ファイル システム を 使っ て いる Windows システム で は 、 st _ atime の 精度 は 1 日 に 過ぎ ませ ん 。 
詳しく は お 使い の オペレーティングシステム の ドキュメント を 参照 し て ください 。 
利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
バージョン 2 . 2 で 変更 さ れ た 仕様 : 返さ れ た オブジェクト の 属性 として の アクセス 機能 を 追加 し まし た 
stat _ result が タイム スタンプ に 浮動 小数点 オブジェクト を 使う か どう か を 決定 し ます 。 
newvalue が 真 の 場合 、 以後 の stat () 呼び出し は 浮動 小数点 を 返し 、 偽 の 場合 に は 整数 を 返し ます 。 
newvalue が 省略 さ れ た 場合 、 現在 の 設定 どおり の 戻り 値 に なり ます 。 古い バージョン の Python と 互換 性 を 保つ ため 、 stat _ result に タプル として アクセス する と 、 常に 整数 が 返さ れ ます 。 
また 、 Python 2 . 2 と の 互換 性 の ため 、 タイム スタンプ に フィールド 名 を 指定 し て アクセス する と 、 整数 で 返さ れ す 。 
タイム スタンプ の 秒 を 小数点 以下 の 精度 で 求め たい アプリケーション は 、 タイム スタンプ を 浮動 小数点 型 に する ため に 、 この 関数 を 使う こと が でき ます 。 
浮動 小数点 型 の タイム スタンプ を 処理 する と 、 不 正確 な 動作 を する よう な ライブラリ を 使う 場合 、 ライブラリ が 修正 さ れる まで 、 浮動 小数点 型 を 返す 機能 を 停止 さ せ て おく べき です 。 
与え られ た path に対して statvfs () システム コール を 実行 し ます 。 
では 、 シーケンス として アクセス する 場合 に 、 statvfs 構造 体 から 情報 を 引き出す 上 便利 な 関数 や 定数 を 定義 し て い ます ; これ は 属性 として 各 フィールド に アクセス でき ない バージョン の Python で 動作 する 必要 の ある コード を 書く 際 に 便利 です 。 
src を 指し て いる シンボリックリンク を dst に 作成 し ます 。 利用 できる 環境 : Unix 。 
一時 ファイル ( temporary file ) を 生成 する 上 で ファイル 名 として 相応しい 一意 な パス 名 を 返し ます 。 
この 値 は 一時 的 な ディレクトリ エントリ を 表す 絶対 パス で 、 dir ディレクトリ の 下 か 、 dir が 省略 さ れ たり None の 場合 に は 一時 ファイル を 置く ため の 共通 の ディレクトリ の 下 に なり ます 。 
prefix が 与え られ て おり 、 かつ None で ない 場合 、 ファイル 名 の 先頭 に つけ られる 短い 接頭 辞 に なり ます 。 
アプリケーション は tempnam () が 返し た パス 名 を 使っ て 正しく ファイル を 生成 し 、 生成 し た ファイル を 管理 する 責任 が あり ます ; 一 時 ファイル の 自動 消去 機能 は 提供 さ れ て い ませ ん 。 
この 値 は 一時 ファイル を 置く ため の 共通 の ディレクトリ 下 の 一時 的 な ディレクトリ エントリ を 表す 絶対 パス です 。 
アプリケーション は tmpnam () が 返し た パス 名 を 使っ て 正しく ファイル を 生成 し 、 生成 し た ファイル を 管理 する 責任 が あり ます ; 一 時 ファイル の 自動 消去 機能 は 提供 さ れ て い ませ ん 。 
この 関数 は おそらく Windows で は 使う べき で は ない でしょ う ; Micorosoft の tmpnam () 実装 で は 、 常に 現在 の ドライブ の ルート ディレクトリ 下 の ファイル 名 を 生成 し ます が 、 これ は 一般 的 に は テンポラリ ファイル を 置く 場所 として は ひどい 場所 です ( アクセス 権限 によって は 、 この 名前 を つかっ て ファイル を 開く こと すら でき ない かも しれ ませ ん )。 
tmpnam () が テンポラリ 名 を 再 利用 し 始める まで に 生成 できる 一意 な 名前 の 最大 数 です 。 
remove () と 同じ です ; unlink () の 名前 は 伝統 的 な Unix の 関数 名 です 。 利用 できる 環境 : Macintosh 、 Unix 、 Windows 。 
path で 指定 さ れ た ファイル に 最終 アクセス 時刻 および 最終 修正 時刻 を 設定 し ます 。 times が None の 場合 、 ファイル の 最終 アクセス 時刻 および 最終 更新 時刻 は 現在 の 時刻 に なり ます 。 
walk () は 、 ディレクトリ ツリー 以下 の ファイル 名 を 、 ツリー を トップダウン と ボトムアップ の 両方向 に 歩行 する こと で 生成 し ます 。 
ディレクトリ top を 根 に 持つ ディレクトリ ツリー に 含ま れる 、 各 ディレクトリ ( top 自身 を 含む ) から 、 タプル ( dirpath , dirnames , filenames ) を 生成 し ます 。 
この リスト 内 の 名前 に は 、 ファイル 名 まで の パス が 含ま れ ない こと に 、 注意 し て ください 。 
dirpath 内 の ファイル や ディレクトリ へ の ( top から たどっ た ) フル パス を 得る に は 、 os . path . join ( dirpath , name ) し て ください 。 
オプション 引数 topdown が 真 で ある か 、 指定 さ れ なかっ た 場合 、 各 ディレクトリ から タプル を 生成 し た 後 で 、 サブ ディレクトリ から タプル を 生成 し ます 。 
topdown が 偽 の とき に dirnames を 変更 し て も 効果 は あり ませ ん 。 ボトムアップ モード で は dirnames 自身 が 生成 さ れる 前 に dirnames 内 の ディレクトリ の 情報 が 生成 さ れる から です 。 
デフォルト で は 、 os . listdir () 呼び出し から 送出 さ れ た エラー は 無視 さ れ ます 。 
オプション の 引数 onerror を 指定 する なら 、 この 値 は 関数 で なけれ ば なり ませ ん ; この 関数 は 単一 の 引数 として 、 os . error インスタンス を 伴っ て 呼び出さ れ ます 。 
この 関数 で は エラー を 報告 し て 歩行 を 続け たり 、 例外 を 送出 し て 歩行 を 中断 し たり でき ます 。 
ファイル 名 は 例外 オブジェクト の filename 属性 として 取得 できる こと に 注意 し て ください 。 
注意 : 相対 パス を 渡し た 場合 、 walk () の 回復 の 間 で カレント 作業 ディレクトリ を 変更 し ない で ください 。 walk () は カレント ディレクトリ を 変更 し ませ ん し 、 呼び出し 側 も カレント ディレクトリ を 変更 し ない と 仮定 し て い ます 。 
注意 : シンボリックリンク を サポート する システム で は 、 サブ ディレクトリ へ の リンク が dirnames リスト に 含ま れ ます が 、 walk () は その リンク を たどり ませ ん ( シンボリックリンク を たどる と 、 無限 ループ に 陥り やすく なり ます )。 
リンク さ れ た ディレクトリ を たどる に は 、 os . path . islink ( path ) で リンク 先 ディレクトリ を 確認 し 、 各 ディレクトリ に対して walk ( path ) を 実行 する と よい でしょ う 。 
以下 の 例 で は 、 最初 の ディレクトリ 以下 に ある 各 ディレクトリ に 含ま れる 、 非 ディレクトリ ファイル の バイト 数 を 表示 し ます 。 
ただし 、 CVS サブ ディレクトリ より 下 を 見 に 行き ませ ん 。 
次 の 例 で は 、 ツリー を ボトムアップ で 歩行 する こと が 不可欠 に なり ます ; rmdir () は ディレクトリ が 空 に なる 前 に 削除 さ せ ない から です : 
暗号 に関する 用途 に 適し た n バイト から なる ランダム な 文字 列 を 返し ます 。 
この 関数 は OS 固有 の 乱数 発生 源 から ランダム な バイト 列 を 生成 し て 返し ます 。 
この 関数 の 返す データ は 暗号 を 用い た アプリケーション で 十分 利用 できる 程度 に 予測 不能 です が 、 実際 の クオリティ は OS の 実装 によって 異なり ます 。 
Unix 系 の システム で は / dev / urandom へ の 問い合わせ を 行い 、 Windows で は CryptGenRandom を 使い ます 。 
乱数 発生 源 が 見つから ない 場合 、 NotImplementedError を 送出 し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
以下 の 関数 は 新しい ファイル オブジェクト を 作成 し ます 。 
ファイル 記述 子 fd に 接続 し て いる 、 開か れ た ファイル オブジェクト を 返し ます 。 
引数 mode および bufsize は 、 組み込み 関数 open () における 対応 する 引数 と 同じ 意味 を 持ち ます 。 
利用 できる 環境 : Macintosh 、 Unix 、 Windows 
command へ の 、 または command から の パイプ 入出力 を 開き ます 。 
戻り 値 は パイプ に 接続 さ れ て いる 開か れ た ファイル オブジェクト で 、 mode が ' r ' ( 標準 の 設定 です ) または ' w ' か によって 読み出し または 書き込み を 行う こと が でき ます 。 引数 bufsize は 、 組み込み 関数 open () における 対応 する 引数 と 同じ 意味 を 持ち ます 。 
バージョン 2 . 0 で 変更 さ れ た 仕様 : この 関数 は 、 Python の 初期 の バージョン で は 、 Windows 環境 下 で 信頼 でき ない 動作 を し て い まし た 。 
これ は Windows に 付属 し て 提供 さ れる ライブラリ の _ popen () 関数 を 利用 し た こと による もの です 。 
新しい バージョン の Python で は 、 Windows 付属 の ライブラリ に ある 壊れ た 実装 を 利用 し ませ ん 
更新 モード (" w + b ") で 開か れ た 新しい ファイル オブジェクト を 返し ます 。 
この ファイル は ディレクトリ エントリ 登録 に 関連付け られ て おら ず 、 この ファイル に対する ファイル 記述 子 が なくなる と 自動的 に 削除 さ れ ます 。 利用 できる 環境 : Unix 、 Windows 
以下 の popen () の 変種 は どれ も 、 bufsize が 指定 さ れ て いる 場合 に は I / O パイプ の バッファ サイズ を 表し ます 。 mode を 指定 する 場合 に は 、 文字 列 ' b ' または ' t ' で なけれ ば なり ませ ん ; これ は 、 Windows で ファイル を バイナリ モード で 開く か テキスト モード で 開く か を 決める ため に 必要 です 。 
mode の 標準 の 設定 値 は ' t ' です 。 また Unix で は これら の 変種 は いずれ も cmd を シーケンス に でき ます 。 
その 場合 、 引数 は シェル の 介在 なし に 直接 ( os . spawnv () の よう に ) 渡さ れ ます 。 
cmd が 文字 列 の 場合 、 引数 は ( os . system () の よう に ) シェル に 渡さ れ ます 。 
以下 の メソッド は 子 プロセス から リターンコード を 取得 できる よう に は し て い ませ ん 。 
cmd を 子 プロセス として 実行 し ます 。 
ファイル ・ オブジェクト ( child _ stdin , child _ stdout ) を 返し ます 。 利用 できる 環境 : Unix 、 Windows バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
ファイル オブジェクト ( child _ stdin , child _ stdout , child _ stderr ) を 返し ます 。 利用 できる 環境 : Unix 、 Windows バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
は 子 プロセス の 視点 で 名付け られ て いる ので 注意 し て ください 。 
モジュール 内 の 同じ 名前 の 関数 を 使っ て も 実現 でき ます が 、 これら の 関数 の 戻り 値 は 異なる 順序 を 持っ て い ます 。 
文字 列 形式 による システム 設定 値 ( system configuration value ) を 返し ます 。 
name に は 取得 し たい 設定 名 を 指定 し ます ; この 値 は 定義 済み の システム 値 名 を 表す 文字 列 に する こと が でき ます ; 名前 は 多く の 標準 ( POSIX . 1 、 Unix 95 、 Unix 98 その他 ) で 定義 さ れ て い ます 。 
ホスト オペレーティングシステム の 関知 する 名前 は confstr _ names 辞書 で 与え られ て い ます 。 
name の 指定 値 が ホスト システム で サポート さ れ て おら ず 、 confstr _ names に も 入っ て い ない 場合 、 errno . EINVAL を エラー 番号 として OSError を 送出 し ます 。 
過去 1 分 、 5 分 、 15 分間 で 、 システム で 走っ て いる キュー の 平均 プロセス 数 を 返し ます 。 平均 負荷 が 得 られ ない 場合 に は OSError を 送出 し ます 。 
整数 値 の システム 設定 値 を 返し ます 。 name で 指定 さ れ た 設定 値 が 定義 さ れ て い ない 場合 、 - 1 が 返さ れ ます 。 
name に関する コメント として は 、 confstr () で 述べ た 内容 が 同様 に 当てはまり ます ; 既知 の 設定 名 について の 情報 を 与える 辞書 は sysconf _ names で 与え られ て い ます 。 利用 できる 環境 : Unix 。 
以下 の データ 値 は パス 名 編集 操作 を サポート する ため に 利用 さ れ ます 。 
これら の 値 は 全て の プラットフォーム で 定義 さ れ て い ます 。 パス 名 に対する 高 レベル の 操作 は 
モジュール で 定義 さ れ て い ます 。 
現在 の ディレクトリ 参照 する ため に オペレーティングシステム で 使わ れる 文字 列 定数 です 。 例 : POSIX で は '.' 、 Machintosh で は ':' 。 
os . path から も 利用 でき ます 。 
親 ディレクトリ を 参照 する ため に オペレーティングシステム で 使わ れる 文字 列 定数 です 。 例 : POSIX で は '..' 、 Machintosh で は '::' 。 
パス 名 を 要素 に 分割 する ため に オペレーティングシステム で 利用 さ れ て いる 文字 で 、 例えば POSIX で は "/" で 、 Machintosh で は ":" です 。 
os . path から も 利用 でき ます 。 
文字 パス 名 を 要素 に 分割 する 際 に オペレーティングシステム で 利用 さ れる もう 一つ の 文字 で 、 分割 文字 が 一つ しか ない 場合 に は None に なり ます 。 
この 値 は sep が バックス ラッシュ と なっ て いる DOS や Windows システム で は "/" に 設定 さ れ て い ます 。 
ベース の ファイル 名 と 拡張 子 を 分ける 文字 。 たとえば 、 os . py で は "." です 。 
os . path から も 利用 でき ます 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
( PATH の よう な ) サーチ パス 内 の 要素 を 分割 する ため に オペレーティングシステム が 慣習 的 に 用いる 文字 で 、 POSIX における ":" や DOS および Windows における ";" に 相当 し ます 。 
exec * p *() や spawn * p *() において 、 環境 変数 辞書 内 に ' PATH ' キー が ない 場合 に 使わ れる 標準 設定 の サーチ パス です 。 
現在 の プラットフォーム 上 で 行 を 分割 ( あるいは 終端 ) する ため に 用い られ て いる 文字 列 です 。 
この 値 は 例えば POSIX で の ' n ' や MacOS で の ' r ' の よう に 、 単一 の 文字 に も なり ます し 、 例えば DOS や Windows で の ' rn ' の よう に 複数 の 文字 列 に も なり ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
プロセス を 生成 し たり 管理 する ため に 、 以下 の 関数 を 利用 する こと が でき ます 。 様々 な exec *() 関数 が 、 プロセス 内 に ロード さ れ た 新た な プログラム に 与える ため の 引数 から なる リスト を とり ます 。 
どの 場合 でも 、 新た な プログラム に 渡さ れる リスト の 最初 の 引数 は 、 ユーザ が コマンド ライン で 入力 する 引数 で は なく 、 プログラム 自身 の 名前 に なり ます 。 
C プログラマ にとって は 、 これ は プログラム の main () に 渡さ れる argv [ 0 ] に なり ます 。 
例えば 、 " os . execv ('/ bin / echo ', [' foo ', ' bar '])" は 、 標準 出力 に " bar " を 出力 し ます ; " foo " は 無視 さ れ た か の よう に 見える こと でしょ う 。 
SIGABRT シグナル を 現在 の プロセス に対して 生成 し ます 。 
Unix で は 、 標準 設定 の 動作 は コアダンプ の 生成 です ; Windows で は 、 プロセス は 即座 に 終了 コード 3 を 返し ます 。 
signal . signal () を 使っ て SIGABRT に対する シグナル ハンドラ を 設定 し て いる プログラム は 異なる 挙動 を 示す ので 注意 し て ください 。 利用 できる 環境 : Unix 、 Windows 。 
これら の 関数 は すべて 、 現在 の プロセス を 置き換える 形 で 新た な プログラム を 実行 し ます ; 現在 の プロセス は 戻り 値 を 返し ませ ん 。 
Unix で は 、 新た に 実行 さ れる 実行 コード は 現在 の プロセス 内 に ロード さ れ 、 呼び出し 側 と 同じ プロセス ID を 持つ こと に なり ます 。 
エラー は OSError 例外 として 報告 さ れ ます 。 " l " および " v " の つい た exec *() 関数 は 、 コマンド ライン 引数 を どの よう に 渡す か が 異なり ます 。 
" l " 型 は 、 コード を 書く とき に パラメタ 数 が 決まっ て いる 場合 に 、 おそらく もっとも 簡単 に 利用 でき ます 。 個々 の パラメタ は 単に execl *() 関数 の 追加 パラメタ と なり ます 。 
" v " 型 は 、 パラメタ の 数 が 可変 の 時 に 便利 で 、 リスト か タプル の 引数 が args パラメタ として 渡さ れ ます 。 
どちら の 場合 も 、 子 プロセス に 渡す 引数 は 動作 さ せよ う と し て いる コマンド の 名前 から 始める べき です が 、 これ は 強制 で は あり ませ ん 。 末尾 近く に " p " を もつ 型 ( execlp ()、 execlpe ()、 execvp ()、 および execvpe ()) は 、 プログラム file を 探す ため に 環境 変数 PATH を 利用 し ます 。 
_ exit () は 通常 、 fork () さ れ た 後 の 子 プロセス で のみ 使わ れ ます 。 
以下 の 終了 コード は 必須 で は あり ませ ん が _ exit () と共に 使う こと が でき ます 。 
一般 に 、 メール サーバ の 外部 コマンド 配送 プログラム の よう な 、 Python で 書か れ た システムプログラム に 使い ます 。 
誤っ た 個数 の 引数 が 渡さ れ た とき など 、 コマンド が 間違っ て 使わ れ た こと を 表す 終了 コード 。 
利用 できる 環境 : Unix 。 
利用 できる 環境 : Unix 。 
指定 さ れ た ユーザ が 存在 し なかっ た こと を 表す 終了 コード 。 
指定 さ れ た ホスト が 存在 し なかっ た こと を 表す 終了 コード 。 
要求 さ れ た サービス が 利用 でき ない こと を 表す 終了 コード 。 
利用 できる 環境 : Unix 。 
fork でき ない 、 pipe の 作成 が でき ない など 、 オペレーティング ・ システム ・ エラー が 検出 さ れ た こと を 表す 終了 コード 。 
利用 できる 環境 : Unix 。 
ユーザ に は 作成 でき ない 出力 ファイル を 指定 し た こと を 表す 終了 コード 。 
利用 できる 環境 : Unix 。 
一時 的 な 失敗 が 発生 し た こと を 表す 終了 コード 。 
操作 を 行う ため に 十分 な 許可 が なかっ た （ ファイル システム の 問題 を 除く ） こと を 表す 終了 コード 。 
利用 できる 環境 : Unix 。 
子 プロセス を fork し ます 。 
子 プロセス で は 0 が 返り 、 親 プロセス で は 子 プロセス の id が 返り ます 。 利用 できる 環境 : Unix 。 
子 プロセス を fork し ます 。 
この とき 新しい 擬似 端末 ( psheudo - terminal ) を 子 プロセス の 制御 端末 として 使い ます 。 親 プロセス で は ( pid , fd ) から なる ペア が 返り 、 fd は 擬似 端末 の マスタ 側 ( master end ) の ファイル 記述 子 と なり ます 。 
可 搬性 の ある アプローチ を 取る ため に は 、 
モジュール を 利用 し て ください 。 利用 できる 環境 : いくつ か の Unix 系 。 
プロセス pid を シグナル sig で kill し ます 。 
ホスト プラットフォーム で 利用 可能 な シグナル を 特定 する 定数 は 
モジュール で 定義 さ れ て い ます 。 利用 できる 環境 : Unix 。 
プロセス の `` nice 値 '' に increment を 加え ます 。 
新た な nice 値 を 返し ます 。 利用 できる 環境 : Unix 。 
プログラム の セグメント ( program segment ) を メモリ 内 で ロック し ます 。 
op ( sys / lock . h で 定義 さ れ て い ます ) に は どの セグメント を ロック する か を 指定 し ます 。 利用 できる 環境 : Unix 。 
子 プロセス を 起動 し 、 子 プロセス と の 通信 の ため に 開か れ た パイプ を 返し ます 。 
これら の 関数 は 6 . 1 . 2 節 で 記述 さ れ て い ます 。 
新た な プロセス 内 で プログラム path を 実行 し ます 。 
mode が P _ NOWAIT の 場合 、 この 関数 は 新た な プロセス の プロセス ID と なり ます 。 ; mode が P _ WAIT の 場合 、 子 プロセス が 正常 に 終了 する と その 終了 コード が 返り ます 。 
そう で ない 場合 に は プロセス を kill し た シグナル signal に対して - signal 
" l " 型 は 、 コード を 書く とき に パラメタ 数 が 決まっ て いる 場合 に 、 おそらく もっとも 簡単 に 利用 でき ます 。 個々 の パラメタ は 単に spawnl *() 関数 の 追加 パラメタ と なり ます 。 
どちら の 場合 も 、 子 プロセス に 渡す 引数 は 動作 さ せよ う と し て いる コマンド の 名前 から 始まら なく て は なり ませ ん 。 末尾 近く に " p " を もつ 型 ( spawnlp ()、 spawnlpe ()、 spawnvp ()、 および spawnvpe ()) は 、 プログラム file を 探す ため に 環境 変数 PATH を 利用 し ます 。 
環境 変数 が ( 次 の 段 で 述べる spawn * e () 型 関数 で ) 置き換え られる 場合 、 環境 変数 は PATH を 決定 する 上 の 情報 源 として 使わ れ ます 。 
利用 できる 環境 : Unix 、 Windows 。 spawnlp ()、 spawnlpe ()、 spawnvp () および spawnvpe () は Windows で は 利用 でき ませ ん 。 
バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 P _ NOWAIT 
spawn *() 関数 ファミリ に対する mode パラメタ として 取れる 値 です 。 
この 値 の いずれ か を mode として 与え た 場合 、 spawn *() 関数 は 新た な プロセス が 生成 さ れる と すぐ に 、 プロセス の ID を 戻り 値 として 返り ます 。 
spawn *() 関数 ファミリ に対する mode パラメタ として 取れる 値 です 。 
この 値 を mode として 与え た 場合 、 spawn *() 関数 は 新た な プロセス を 起動 し て 完了 する まで 返ら ず 、 プロセス が うまく 終了 し た 場合 に は 終了 コード を 、 シグナル によって プロセス が kill さ れ た 場合 に は - signal を 返し ます 。 
利用 できる 環境 : Unix 、 Windows 。 バージョン 1 . 6 で 新た に 追加 さ れ た 仕様 です 。 
spawn *() 関数 ファミリ に対する mode パラメタ として 取れる 値 です 。 
ファイル を 関連付け られ た アプリケーション を 使っ て 「 スタート 」 し ます 。 
この 動作 は 、 Windows の Explorer 上 で の ファイル を ダブル クリック や 、 コマンドプロンプト ( interactive command shell ) 上 で の ファイル 名 を start 命令 の 引数 として の 実行 と 同様 です : ファイル は 拡張 子 が 関連付け さ れ て いる アプリケーション ( が 存在 する 場合 ) を 使っ て 開か れ ます 。 
startfile () は 関連付け さ れ た アプリケーション が 起動 する と 同時に 返り ます 。 
アプリケーション が 閉じる まで 待機 さ せる ため の オプション は なく 、 アプリケーション の 終了 状態 を 取得 する 方法 も あり ませ ん 。 
path 引数 は 現在 の ディレクトリ から の 相対 で 表し ます 。 
絶対 パス を 利用 し たい なら 、 最初 の 文字 は スラッシュ ("/") で は ない ので 注意 し て ください ; も し 最初 の 文字 が スラッシュ なら 、 システム の 背後 に ある Win 32 ShellExecute () 関数 は 動作 し ませ ん 。 os . path . normpath () 関数 を 使っ て 、 Win 32 用 に 正しく コード 化 さ れ た パス に なる よう に し て ください 。 
利用 できる 環境 : Windows 。 
バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
サブ シェル 内 で コマンド ( 文字 列 ) を 実行 し ます 。 
この 関数 は 標準 C 関数 system () を 使っ て 実装 さ れ て おり 、 system () と 同じ 制限 が あり ます 。 
posix . environ 、 sys . stdin 等 に対する 変更 を 行っ て も 、 実行 さ れる コマンド の 環境 に は 反映 さ れ ませ ん 。 Unix で は 、 戻り 値 は プロセス の 終了 ステータス で 、 wait () で 定義 さ れ て いる 書式 に コード 化 さ れ て い ます 。 
( プロセス または その他 の ) 積算 時間 を 秒 で 表す 浮動 小数点 数 から なる 、 5 要素 の タプル を 返し ます 。 
タプル の 要素 は 、 ユーザ 時間 ( user time )、 システム 時間 ( system time )、 子 プロセス の ユーザ 時間 、 子 プロセス の システム 時間 、 そして 過去 の ある 固定 時点 から の 経過 時間 で 、 この 順 に 並ん で い ます 。 
Unix マニュアル ページ 
times ( 2 ) または 対応 する Windows プラットフォーム API ドキュメント を 参照 し て ください 。 利用 できる 環境 : Unix 、 Windows 。 
子 プロセス の 実行 完了 を 待機 し 、 子 プロセス の pid と 終了 コード インジケータ -- 16 ビット の 数 で 、 下位 バイト が プロセス を kill し た シグナル 番号 、 上位 バイト が 終了 ステータス ( シグナル 番号 が ゼロ の 場合 ) -- の 入っ た タプル を 返し ます ; コアダンプファイル が 生成 さ れ た 場合 、 下位 バイト の 最上 桁 ビット が 立て られ ます 。 利用 できる 環境 : Unix 。 
プロセス id pid で 与え られ た 子 プロセス の 完了 を 待機 し 、 子 プロセス の プロセス id と ( wait () と 同様 に コード 化 さ れ た ) 終了 ステータス インジケータ から なる タプル を 返し ます 。 
pid が 0 の 場合 、 現在 の プロセス グループ 内 の 任意 の 子 プロセス の 状態 に対する 要求 です 。 
pid が - 1 の 場合 、 現在 の プロセス の 任意 の 子 プロセス に対する 要求 です 。 
pid が - 1 より も 小さい 場合 、 プロセス グループ - pid 
( すなわち pid の 絶対 値 ) 内 の 任意 の プロセス に対する 要求 です 。 
子 プロセス 状態 が すぐ に 取得 でき なかっ た 場合 に ハング アップ し て しまわ ない よう に する ため の waitpid () の オプション です 。 
プロセス が 停止 さ れ た ( stop ) 場合 に 真 を 返し ます 。 利用 できる 環境 : Unix 。 
プロセス が シグナル によって 終了 し た ( exit ) 場合 に 真 を 返し ます 。 利用 できる 環境 : Unix 。 
プロセス が 
exit ( 2 ) システム コール で 終了 し た 場合 に 真 を 返し ます 。 利用 できる 環境 : Unix 。 
WIFEXITED ( status ) が 真 の 場合 、 
exit ( 2 ) システム コール に 渡さ れ た 整数 パラメタ を 返し ます 。 
そう で ない 場合 、 返さ れる 値 に は 意味 が あり ませ ん 。 利用 できる 環境 : Unix 。 
プロセス を 停止 さ せ た シグナル 番号 を 返し ます 。 利用 できる 環境 : Unix 。 
プロセス を 終了 さ せ た シグナル 番号 を 返し ます 。 利用 できる 環境 : Unix 
これら の 関数 と データ 要素 は 、 現在 の プロセス および ユーザ に対する 情報 提供 および 操作 の ため の 機能 を 提供 し て い ます 。 
環境 変数 の 値 を 表す マップ 型 オブジェクト です 。 
それ 以後 に 変更 さ れ た 環境 変数 は os . environ を 直接 変更 し ない 限り 反映 さ れ ませ ん 。 
プラットフォーム 上 で putenv () が サポート さ れ て いる 場合 、 この マップ 型 オブジェクト は 環境 変数 に対する クエリ と 同様 に 変更 する ため に 使う こと も でき ます 。 
putenv () は マップ 型 オブジェクト が 修正 さ れる 時 に 、 自動的 に 呼ば れる こと に なり ます 。 
注意 : 
putenv () を 直接 呼び出し て も os . environ の 内容 は 変わら ない ので 、 os . environ を 直接 変更 する 方 が ベター です 。 
注意 : FreeBSD と Mac OS X を 含む いつく か の プラットフォーム で は 、 environ の 値 を 変更 する と メモリ リーク の 原因 に なる 場合 が あり ます 。 
システム の putenv に関する ドキュメント を 参照 し て ください 。 
putenv () が 提供 さ れ て い ない 場合 、 この マッピング オブジェクト を 適切 な プロセス 生成 機能 に 渡し て 、 子 プロセス が 修正 さ れ た 環境 変数 を 利用 する よう に でき ます 。 
これら の 関数 は 、 `` ファイル と ディレクトリ '' ( 6 . 1 . 4 節 ) で 説明 さ れ て い ます 。 
プロセス の 制御 端末 に 対応 する ファイル 名 を 返し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス の 実行 グループ id を 返し ます 。 
この id は 現在 の プロセス で 実行 さ れ て いる ファイル の ` set id ' ビット に 対応 し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス の 実行 ユーザ id を 返し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス の 実際 の グループ id を 返し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス に 関連づけ られ た 従属 グループ id の リスト を 返し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス の 制御 端末 に ログイン し て いる ユーザ 名 を 返し ます 。 
利用 できる 環境 : Unix 。 
現在 の プロセス ・ グループ の id を 返し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス id を 返し ます 。 利用 できる 環境 : Unix , Windows .。 
親 プロセス の id を 返し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス の ユーザ id を 返し ます 。 利用 できる 環境 : Unix 。 
varname と 名づけ られ た 環境 変数 の 値 を 文字 列 value に 設定 し ます 。 
この よう な 環境 変数 へ の 変更 は 、 os . system () 、 popen () 、 fork () および execv () により 起動 さ れ た 子 プロセス に 影響 し ます 。 
利用 できる 環境 : 主 な Unix 互換 環境 、 Windows 。 
注意 : FreeBSD と Mac OS X を 含む いつく か の プラットフォーム で は 、 environ の 値 を 変更 する と メモリ リーク の 原因 に なる 場合 が あり ます 。 
システム の putenv に関する ドキュメント を 参照 し て ください 。 
現在 の プロセス に 有効 な グループ ID を セット し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス に 有効 な ユーザ ID を セット し ます 。 利用 できる 環境 : Unix 。 
現在 の プロセス に グループ id を セット し ます 。 利用 できる 環境 : Unix 。 
現在 の グループ に 関連付け られ た 従属 グループ id の リスト を groups に 設定 し ます 。 groups は シーケンス 型 で なく て は なら ず 、 各 要素 は グループ を 特定 する 整数 で なく て は なり ませ ん 。 
この 操作 は 通常 、 スーパユーザ しか 利用 でき ませ ん 。 Availability : Unix . バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
システム コール setpgrp () または setpgrp ( 0 , 0 ) の どちら か の バージョン の うち 、 ( 実装 さ れ て いれ ば ) 実装 さ れ て いる 方 を 呼び出し ます 。 
機能 について は Unix マニュアル を 参照 し て ください 。 利用 できる 環境 : Unix 
システム コール setpgid () を 呼び出し て 、 pid の id を もつ プロセス の プロセス グループ id を pgrp に 設定 し ます 。 
利用 できる 環境 : Unix 
現在 の プロセス に対して 実際 の ユーザ id および 実行 ユーザ id を 設定 し ます 。 利用 できる 環境 : Unix 
現在 の プロセス に対して 実際 の グループ id および 実行 ユーザ id を 設定 し ます 。 利用 できる 環境 : Unix 
システム コール getsid () を 呼び出し ます 。 
機能 について は Unix マニュアル を 参照 し て ください 。 利用 できる 環境 : Unix 
システム コール setsid () を 呼び出し ます 。 
現在 の プロセス の ユーザ id を 設定 し ます 。 利用 できる 環境 : Unix 
エラーコード code に 対応 する エラーメッセージ を 返し ます 。 利用 できる 環境 : Unix 、 Windows 
現在 の 数値 umask を 設定 し 、 以前 の umask 値 を 返し ます 。 利用 できる 環境 : Unix 、 Windows 
現在 の オペレーティングシステム を 特定 する 情報 の 入っ た 5 要素 の タプル を 返し ます 。 
この タプル に は 5 つ の 文字 列 :( sysname , nodename , release , version , machine ) が 入っ て い ます 。 
システム によって は 、 ノード 名 を 8 文字 、 または 先頭 の 要素 だけ に 切り詰め ます ; ホスト 名 を 取得 する 方法 として は 、 socket . gethostname () 
を 使う 方 が よい でしょ う 、 あるいは socket . gethostbyaddr ( socket . gethostname ()) でも かまい ませ ん 。 
利用 できる 環境 : Unix 互換 環境 
filename という 名前 の 標準 I / O ファイル fp が 対話 的 ( interactive ) で ある と 考え られる 場合 に 真 ( 非 ゼロ ) を 返し ます 。 
これ は " isatty ( fileno ( fp ))" が 真に なる ファイル の 場合 です 。 
グローバル な フラグ Py _ InteractiveFlag が 真 の 場合 に は 、 filename ポインタ が NULL か 、 名前 が ' stdin ' または '???' の いずれ か に 等しい 場合 に も 真 を 返し ます 。 
ファイル filename の 最終 更新 時刻 を 返し ます 。 結果 は 標準 C ライブラリ 関数 time () が 返す タイム スタンプ と 同じ 様式 で 符号 化 さ れ て い ます 。 
プロセス が fork し た 後 の 内部 状態 を 更新 する ため の 関数 です ; fork 後 Python インタプリタ を 使い 続ける 場合 、 新た な プロセス 内 で この 関数 を 呼び出さ ね ば なり ませ ん 。 
新た な プロセス に 新た な 実行 可能 物 を ロード する 場合 、 この 関数 を 呼び出す 必要 は あり ませ ん 。 
インタプリタ が スタック 空間 を 使い 尽くし た とき に 真 を 返し ます 。 
この チェック 関数 に は 信頼 性 が あり ます が 、 USE _ STACKCHECK が 定義 さ れ て いる 場合 ( 現状 で は Microsoft Visual C ++ コンパイラ で ビルド し た Windows 版 と Macintosh 版 ) に しか 利用 でき ませ ん . USE _ CHECKSTACK は 自動的 に 定義 さ れ ます ; 自前 の コード で この 定義 を 変更 し て は なり ませ ん 。 
シグナル i に対する 現在 の シグナル ハンドラ を 返し ます 。 
この 関数 は sigaction () または signal () の いずれ か に対する 薄い ラッパ です 。 
sigaction () や signal () を 直接 呼び出し て は なり ませ ん ! PyOS _ sighandler _ t は void (*)( int ) の typedef による 別名 です 。 
シグナル i に対する 現在 の シグナル ハンドラ を h に 設定 し ます ; 以前 の シグナル ハンドラ を 返し ます 。 
この 関数 は sigaction () または signal () の いずれ か に対する 薄い ラッパ です 。 
sigaction () や signal () を 直接 呼び出し て は なり ませ ん ! PyOS _ sighandler _ t は void (*)( int ) の typedef による 別名 です 。 
オーディオ デバイス に 読み書き できる よう に なる に は 、 まず 3 つ の メソッド を 正しい 順序 で 呼び出さ ね ば なり ませ ん : 
setfmt () で 出力 形式 を 設定 し 、 
channels () で チャンネル 数 を 設定 し 、 
speed () で サンプリング レート を 設定 し ます 。 
この 代わり に setparameters () メソッド を 呼び出せ ば 、 三つ の オーディオ パラメタ を 一 度 で 設定 でき ます 。 
setparameters () は 便利 です が 、 多く の 状況 で 柔軟 性 に 欠ける でしょ う 。 open () の 返す オーディオデバイスオブジェクト に は 以下 の メソッド が あり ます : 
オーディオ デバイス を 明示 的 に 閉じ ます 。 
オーディオ デバイス は 、 読み出し や 書き込み が 終了 し たら 必ず 閉じ ね ば なり ませ ん 。 
閉じ た オブジェクト を 再度 開く こと は でき ませ ん 。 
デバイス に 関連付け られ て いる ファイル 記述 子 を 返し ます 。 
オーディオ 入力 から size バイト を 読み だし 、 Python 文字 列 型 に し て 返し ます 。 
多く の Unix デバイスドライバ と 違い 、 ブロックデバイスモード ( デフォルト ) の OSS オーディオ デバイス で は 、 要求 し た 量 の データ 全体 を 取り込む まで read () が ブロック し ます 。 
Python 文字 列 data の 内容 を オーディオ デバイス に 書き込み 、 書き込ま れ た バイト 数 を 返し ます 。 
オーディオ デバイス が ブロック モード ( デフォルト ) の 場合 、 常に 文字 列 データ 全体 を 書き込み ます ( 前述 の よう に 、 これ は 通常 の Unix デバイス の 振舞い と は 異なり ます )。 
デバイス が 非 ブロック モード の 場合 、 データ の 一部 が 書き込ま れ ない こと が あり ます -- writeall () を 参照 し て ください 。 
実際 に 書き込ま れ た データ の 量 と 渡し た データ の 量 は 必ず 同じ に なる ので 、 戻り 値 は あり ませ ん 。 
以下 の メソッド の 各々 は ioctl () システム コール 一つ 一つ に 対応 し て い ます 。 
対応 関係 は はっきり し て い ます : 例えば 、 setfmt () は SNDCTL _ DSP _ SETFMT ioctl に 対応 し て い ます し 、 sync () は SNDCTL _ DSP _ SYNC に 対応 し て い ます ( この シンボル 名 は OSS の ドキュメント を 参照 する 時 に 助け に なる でしょ う )。 
根底 に ある ioctl () が 失敗 し た 場合 、 これら の 関数 は 全て IOError を 送出 し ます 。 
デバイス を 非 ブロック モード に し ます 。 
いったん 非 ブロック モード に し たら 、 ブロック モード は 戻せ ませ ん 。 
サウンド カード が サポート し て いる オーディオ 出力 形式 を ビット マスク で 返し ます 。 
典型 的 な Linux システム で は 以下 の フォーマット が あり ます : 
対数 符号 化 ( Sun の . au 形式 や / dev / audio で 使わ れ て いる 形式 ) 
対数 符号 化 
Interactive Multimedia Association で 定義 さ れ て いる 4 : 1 圧縮 形式 
符号 なし 8 ビット オーディオ 
符号 つき 16 ビット オーディオ 、 リトルエンディアンバイトオーダ ( Intel プロセッサ で 使わ れ て いる 形式 ) 
符号 つき 16 ビット オーディオ 、 ビッグエンディアンバイトオーダ ( 68 k 、 PowerPC 、 Sparc で 使わ れ て いる 形式 ) 
符号 つき 8 ビット オーディオ 
符号 なし 16 ビット リトルエンディアンオーディオ 
符号 なし 16 ビット ビッグエンディアンオーディオ 
ほとんど の システム は 、 上記 の 形式 の サブ セット しか サポート し て い ませ ん 。 
また 、 多く の デバイス が AFMT _ U 8 だけ しか サポート し て い ませ ん 。 現在 使わ れ て いる 最も 一般 的 な 形式 は AFMT _ S 16 _ LE です 。 
現在 の オーディオ 形式 を format に 設定 しよ う と 試み ます -- format について は getfmts () の リスト を 参照 し て ください 。 
実際 に デバイス に 設定 さ れ た オーディオ 形式 を 返し ます 。 
要求 通り の 形式 で ない こと も あり ます 。 AFMT _ QUERY を 渡す と 現在 デバイス に 設定 さ れ て いる オーディオ 形式 を 返し ます 。 
出力 チャネル 数 を num _ channels に 設定 し ます 。 
1 は モノラル 、 2 は ステレオ です 。 
いくつ か の デバイス で は 2 つ より 多い チャンネル を 持つ もの も あり ます し 、 ハイエンド な デバイス で は モノラル を サポート し ない もの も あり ます 。 デバイス に 設定 さ れ た チャンネル 数 を 返し ます 。 
サンプリング レート を 1 秒 あたり samplerate に 設定 しよ う と 試み 、 実際 に 設定 さ れ た レート を 返し ます 。 
たいてい の サウンド デバイス で は 任意 の サンプリング レート を サポート し て い ませ ん 。 
一般 的 な レート は 以下 の 通り です : 
レート 
/ dev / audio の デフォルト 
会話 音声 の 録音 に 使わ れる レート 
( サンプル あたり 16 ビット で 2 チャネル の 場合 ) CD 品質 の オーディオ 
( サンプル 当たり 24 ビット の 場合 ) DVD 品質 の オーディオ 
サウンド デバイス が バッファ 内 の 全て の データ を 再生 し 終える まで 待機 し ます 。 
( デバイス を 閉じる と 暗黙 の うち に sync () が 起こり ます ) OSS の ドキュメント 上 で は 、 sync () を 使う より デバイス を 一度 閉じ て 開き 直す よう 勧め て い ます 。 
再生 あるいは 録音 を 即座 に 中止 し て 、 デバイス を コマンド を 受け取れる 状態 に 戻し ます 。 
OSS の ドキュメント で は 、 reset () を 呼び出し た 後 に 一 度 デバイス を 閉じ 、 開き 直す よう 勧め て い ます 。 
ドライバ に 出力 の 一時 停止 ( pause ) が 起き そう で ある こと を 伝え 、 ドライバ が 一時 停止 を より 賢く 扱える よう に し ます 。 
短い サウンド エフェクト を 再生 し た 直後 や ユーザ 入力 待ち の 前 、 また ディスク I / O 前 など に 使う こと に なる でしょ う 。 
以下 の メソッド は 、 複数 の ioctl を 組み合わせ たり 、 ioctl と 単純 な 計算 を 組み合わせ たり し た 便宜 用 メソッド です 。 
主要 な オーディオ パラメタ 、 サンプル 形式 、 チャネル 数 、 サンプル レート を 一つ の メソッド 呼び出し で 設定 し ます 。 format 、 nchannels および samplerate に は 、 それぞれ setfmt ()、 channels () および speed () と 同じ やり方 で 値 を 設定 し ます 。 
strict の 値 が 真 の 場合 、 setparameters () は 値 が 実際 に 要求 通り に デバイス に 設定 さ れ た か どう か 調べ 、 違っ て いれ ば OSSAudioError を 送出 し ます 。 
実際 に デバイスドライバ が 設定 し た パラメタ 値 を 表す ( format , nchannels , samplerate ) から なる タプル を 返し ます ( setfmt ()、 channels () および speed () の 返す 値 と 同じ です )。 
以下 に 例 を 示し ます : ( fmt , channels , rate ) = dsp . setparameters ( fmt , channels , rate ) 
ハードウェア の バッファ サイズ を サンプル 数 で 返し ます 。 
ハードウェア バッファ 上 に 残っ て い て まだ 再生 さ れ て い ない サンプル 数 を 返し ます 。 
ブロック を 起こさ ず に ハードウェア の 再生 キュー に 書き込める サンプル 数 を 返し ます 。 
1 . 1 MacPython - OSX の 取得 と インストール 
1 . 1 . 3 設定 
1 . 1 . 2 GUI つき の スクリプト の 実行 Mac OS X に は 、 一つ だけ 知っ て おか ね ば なら ない クセ が あり ます : Aqua ウィンドウ マネージャ と やり取り する よう な ( すなわち 、 何らかの GUI を 持つ よう な ) プログラム は 、 特殊 な 方法 で 起動 せ ね ば なら ない の です 。 
GUI を 持っ た スクリプト を 実行 する に は python の 代わり に pythonw を 使っ て ください 。 
16 . 6 他 の グラフィカルユーザインタフェースパッケージ 
へ 付け加え られる たくさん の 拡張 ウィジェット が あり ます 。 
Python メガウィジェット 
モジュール を 使い Python で 高 レベル の 複合 ウィジェット を 構築 する ため の ツール キット です 。 
基本 クラス と この 基礎 の 上 に 構築 さ れ た 柔軟 で 拡張 可能 な メガウィジェット から 構成 さ れ て い ます 。 
これら の メガウィジェット は ノートブック 、 コンボ ボックス 、 選択 ウィジェット 、 ペインウィジェット 、 スクロール する ウィジェット 、 ダイアログウィンドウ など を 含み ます 。 
BLT に対する Pmw . Blt インタフェース を 持ち 、 busy 、 graph 、 stripchart 、 tabset および vector コマンド が 利用 でき ます 。 Pmw の 最初 の アイディア は 、 Michael McLennan による Tk itcl 拡張 [ incr Tk ] と Mark Ulferts による [ incr Widgets ] から 得 まし た 。 
メガウィジェット の いくつ か は itcl から Python へ 直接 変換 し た もの です 。 
は 、 新しい Tkinter ウィジェット を 、 Python で 書ける よう に する ライブラリ です 。 
WCK フレーム ワーク は 、 ウィジェット の 生成 、 設定 、 スクリーン の 外観 、 イベント 操作 における 、 完全 な 制御 を 提供 し ます 。 
Tk / Tcl レイヤー を通して データ 転送 する 必要 が なく 、 直接 Python の データ 構造 を 操作 する こと が できる ので 、 WCK ウィジェット は 非常 に 高速 で 軽量 に なり 得 ます 。 
Tk は Python にとって 唯一 の GUI という わけ で は あり ませ ん が 、 もっとも よく 使わ れ て い ます 。 
Qt 、 Tk 、 Motif および GTK + の もっとも 魅力 の ある 性質 を 一つ の パッケージ に 結合 し た GUI ツール キット です 。 
Tkinter に 依存 し ない Python クラスブラウザ が あり ます 。 wxWindows は 
より さらに ウィジェット が 豊富 で 、 その へ ヘルプ システム 、 洗練 さ れ た HTML と 画像 ビューア および 他 の 専門 分野 別 の ウィジェット 、 多数 の ドキュメント と 印刷 機能 を 持っ て い ます 。 
PyQt は sip で ラップ さ れ た Qt ツール キット へ の バインディング です 。 
PyKDE は sip で ラップ さ れ た KDE デスク トップ ライブラリ に対する インタフェース です 。 
KDE は Unix コンピュータ 用 の デスク トップ 環境 です 。 グラフィカル ・ コンポーネント は Qt に 基づい て い ます 。 
FOX は 、 グラフィカルユーザインタフェース を 簡単 かつ 効率 良く 開発 する ため の C ++ ベース の ツール キット です 。 
それ は 幅広く 、 成長 し て いる コントロール ・ コレクション で 、 3 D グラフィックス の 操作 の ため の OpenGL ウィジェット と 同様 に 、 ドラッグアンドドロップ 、 選択 の よう な 最新 の 機能 を 提供 し ます 。 
FOX は アイコン 、 画像 および ステータス ライン ・ ヘルプ や ツール チップ の よう な ユーザ にとって 便利 な 機能 も 実装 し て い ます 。 
FOX は すでに 大 規模 な コントロール ・ コレクション を 提供 し て い ます が 、 単に 既存 の コントロール を 使っ て 望み の 振る舞い を 追加 または 再 定義 する 派生 クラス を 作成 する こと によって プログラマ が 簡単 に 追加 コントロール と GUI 要素 を 構築 できる よう に する ため に 、 FOX は C ++ を 利用 し て い ます 。 
GTK ウィジェットセット の ため の 一連 の バインディング です 。 C の もの より 少し だけ 高 レベル な オブジェクト 指向 インタフェース を 提供 し ます 。 
普通 は C API を 使っ て やら なけれ ば なら ない 型 キャスト と リファレンス ・ カウント を すべて 自動的 に 行い ます 。 
GNOME に対して も 、 バインディング が あり ます 。 チュートリアル が 手 に 入り ます 。 
トー クン の 解析 に あいまい さ が 生じ た 場合 、 トー クン は 左 から 右 に 読ん で 不正 で ない トーク ン を 構築 できる 最長 の 文字 列 を 含む よう に 構築 さ れ ます 。 
7 . 5 . 1 ファイル オブジェクト ( file object ) 
オブジェクト へ の 参照 を 関数 の 内外 に 渡す 場合 に は 、 オブジェクト の 所有 権 が 参照 と共に 渡さ れる か 否 か が 常に 関数 インタフェース 仕様 の 一部 と なり ます 。 オブジェクト へ の 参照 を 返す ほとんど の 関数 は 、 参照 とともに 所有 権 も 渡し ます 。 
特に 、 PyInt _ FromLong () や Py _ BuildValue () の よう に 、 新しい オブジェクト を 生成 する 関数 は 全て 所有 権 を 相手 に 渡し ます 。 
オブジェクト が 実際 に は 新た な オブジェクト で なく て も 、 その オブジェクト に対する 新た な 参照 の 所有 権 を 得 ます 。 
例えば 、 PyInt _ FromLong () は よく 使う 値 を キャッシュ し て おり 、 キャッシュ さ れ た 値 へ の 参照 を 返す こと が あり ます 。 PyObject _ GetAttrString () の よう に 、 ある オブジェクト から 別 の オブジェクト を 抽出 する よう な 関数 も また 、 参照 とともに 所有 権 を 委譲 し ます 。 
と は いえ 、 この 規則 に は 二つ の 重要 な 例外 : PyTuple _ SetItem () と PyList _ SetItem () が あり ます 。 
これら の 関数 は 、 渡さ れ た 引数 要素 に対して 所有 権 を 乗っ取り ( take over ) ます -- たとえ 失敗 し て も です !( PyDict _ SetItem () と その 仲間 は 所有 権 を 乗っ取り ませ ん -- これら は いわば `` 普通 の '' 関数 です 。 
) Python から C 関数 が 呼び出さ れる 際 に は 、 C 関数 は 呼び出し 側 から 引数 へ の 参照 を 借用 し ます 。 
C 関数 の 呼び出し 側 は オブジェクト へ の 参照 を 所有 し て いる ので 、 借用 参照 の 生存 期間 が 保証 さ れる の は 関数 が 処理 を 返す まで です 。 
この よう に し て 借用 参照 を 保存 し たり 他 に 渡し たり し たい 場合 に のみ 、 Py _ INCREF () を 使っ て 所有 参照 に する 必要 が あり ます 。 Python から 呼び出さ れ た C 関数 が 返す 参照 は 所有 参照 で なけれ ば なり ませ ん -- 所有 権 は 関数 から 呼び出し 側 へ と 委譲 さ れ ます 。 
Python パッケージインデクス ( Python Package Index , PyPI ) は 、 distutils で パッケージ 化 さ れ た 配布 物 に関する メタデータ を 保持 し て い ます 。 
配布 物 の メタデータ を インデクス に 提出 する に は 、 Distutils の コマンド register を 使い ます 。 
register は 以下 の よう に 起動 し ます : 
Distutils は 以下 の よう な プロンプト を 出し ます : 
注意 : ユーザ 名 と パスワード を ローカル の 計算 機 に 保存 し て おく と 、 この メニュー は 表示 さ れ ませ ん 。 まだ PyPI に 登録 し た こと が なけれ ば 、 まず 登録 する 必要 が あり ます 。 
この 場合 選択肢 2 番 を 選び 、 リクエスト さ れ た 詳細 情報 を 入力 し て ゆき ます 。 
詳細 情報 を 提出 し 終える と 、 登録 情報 の 承認 を 行う ため の メール を 受け取る はず です 。 すでに 登録 を 行っ た こと が あれ ば 、 選択肢 1 を 選べ ます 。 
PyPI は 提出 さ れ た 配布 物 の ( 名前 、 バージョン ) の 各 組み合わせ について 記録 を 保持 し て い ます 。 
ある 配布 物 名 について 最初 に 情報 を 提出 し た ユーザ が 、 その 配布 物 名 の オーナ ( owner ) に なり ます 。 
オーナ は register コマンド か 、 web インタフェース を 介し て 変更 を 提出 でき ます 。 
オーナ は 他 の ユーザ を オーナ や メンテナ として 指名 でき ます 。 
メンテナ は パッケージ 情報 を 編集 でき ます が 、 他 の 人 を オーナ や メンテナ に 指名 する こと は でき ませ ん 。 デフォルト で は 、 PyPI は ある パッケージ について 全て の バージョン を 表示 し ます 。 
特定 の バージョン を 非 表示 に し たけれ ば 、 パッケージ の Hidden プロパティ を yes に 設定 し ます 。 
この 値 は web インタフェース で 編集 し なけれ ば なり ませ ん 。 
丸 括弧 形式 と は 、 式 リスト の 一 形態 で 、 丸 括弧 で 囲っ た もの です : 
丸 括弧 で 囲わ れ た 式 の リスト は 、 個々 の 式 が 表現 する もの に なり ます : リスト 内 に 少なくとも 一つ の カンマ が 入っ て い た 場合 、 タプル に なり ます ; そう で ない 場合 、 式 の リスト を 構成 し て いる 単一 の 式 自体 の 値 に なり ます 。 中身 が 空 の 丸 括弧 の ペア は 、 空 の タプルオブジェクト を 表し ます 。 
タプル は 変更 不能 な ので 、 リテラル と 同じ 規則 が 適用 さ れ ます ( すなわち 、 空 の タプル が 二 箇所 で 使わ れる と 、 それら は 同じ オブジェクト に なる こと も ある し 、 なら ない こと も あり ます )。 
タプル は 丸 括弧 で 作成 さ れる の で は なく 、 カンマ によって 作成 さ れる こと に 注意 し て ください 。 
例外 は 空 の タプル で 、 この 場合 に は 丸 括弧 が 必要 です -- 丸 括弧 の つか ない 、 `` 何 も 記述 し ない 式 ( nothing )'' を 使える よう に し て しまう と 、 文法 が あいまい な もの に なっ て しまい 、 よく ある タイプ ミス が 検出 さ れ なく なっ て しまい ます 。 
PyArg _ ParseTuple () は 、 以下 の よう に 宣言 さ れ て い ます : 
引数 arg は C 関数 から Python に 渡さ れる 引数 リスト が 入っ た タプルオブジェクト で なけれ ば なり ませ ん 。 
format 引数 は 書式 化 文字 列 で 、 
の `` 引数 の 解釈 と 値 の 構築 '' で 解説 さ れ て いる 書法 に 従わ ね ば なり ませ ん 。 残り の 引数 は 、 それぞれ の 変数 の アドレス で 、 書式 化 文字 列 から 決まる 型 に なっ て い なけれ ば なり ませ ん 。 
PyArg _ ParseTuple () は Python 側 から 与え られ た 引数 が 必要 な 型 に なっ て いる か 調べる の に対し 、 PyArg _ ParseTuple () は 呼び出し の 際 に 渡さ れ た C 変数 の アドレス が 有効 な 値 を 持つ か 調べ られ ない こと に 注意 し て ください : ここ で 間違い を 犯す と 、 コード が クラッシュ する か も しれ ませ ん し 、 少なくとも でたらめ な ビット を メモリ に 上書き し て しまい ます 。 
慎重 に ! 呼び出し 側 に 提供 さ れる オブジェクト へ の 参照 は すべて 借用 参照 ( borrowed reference ) に なり ます ; これら の オブジェクト の 参照 カウント を デクリメント し て は なり ませ ん ! 以下 に いくつ か の 呼び出し 例 を 示し ます : 
int ok ; int i , j ; long k , l ; const char * s ; int size ; ok = PyArg _ ParseTuple ( args , ""); /* 引数 なし *//* Python で の 呼び出し : f () */ 
ok = PyArg _ ParseTuple ( args , " s ", s ); /* 文字 列 *//* Python で の 呼び出し 例 : f (' whoops !') */ 
ok = PyArg _ ParseTuple ( args , " lls ", k , l , s ); /* 二つ の long と 文字 列 *//* Python で の 呼び出し 例 : f ( 1 , 2 , ' three ') */ 
ok = PyArg _ ParseTuple ( args , "( ii ) s #", i , j , s , size );/* 二つ の int と 文字 列 、 文字 列 の サイズ も 返す *//* Python で の 呼び出し 例 : f (( 1 , 2 ), ' three ') */ 
{ int left , top , right , bottom , h , v ; ok = PyArg _ ParseTuple ( args , "(( ii )( ii ))( ii )", left , top , right , bottom , h , v );/* 矩形 と 点 を 表現 する データ *//* Python で の 呼び出し 例 : f ((( 0 , 0 ), ( 400 , 300 )), ( 10 , 10 )) */} 
{ Py _ complex c ; ok = PyArg _ ParseTuple ( args , " D : myfunction ", c );/* 複素数 。 
エラー 発生 時 用 に 関数 名 も 指定 *//* Python で の 呼び出し 例 : myfunction ( 1 + 2 j ) */} 
PyArg _ ParseTupleAndKeywords () は 、 以下 の よう に 宣言 さ れ て い ます : 
arg と format パラメタ は PyArg _ ParseTuple () の もの と 同じ です 。 
kwdict パラメタ は キーワード 引数 の 入っ た 辞書 で 、 Python ランタイムシステム から 第 三 パラメタ として 受け取り ます 。 
kwlist パラメタ は 各 パラメタ を 識別 する ため の 文字 列 から なる 、 NULL 終端 さ れ た リスト です ; 各 パラメタ 名 は format 中 の 型 情報 に対して 左 から 右 の 順 に 照合 さ れ ます 。 
成功 する と PyArg _ ParseTupleAndKeywords () は 真 を 返し 、 それ 以外 の 場合 に は 適切 な 例外 を 送出 し て 偽 を 返し ます 。 
注意 : キーワード 引数 を 使っ て いる 場合 、 タプル は 入れ子 に し て 使え ませ ん ! kwlist 内 に 存在 し ない キーワード パラメタ が 渡さ れ た 場合 、 TypeError の 送出 を 引き起こし ます 。 
以下 に キーワード を 使っ た モジュール 例 を 示し ます 。 
voidinitkeywdarg ( void ){/* モジュール を 作成 し て 関数 を 追加 する */ Py _ InitModule (" keywdarg ", keywdarg _ methods );} 
pass は ヌル 操作 ( null operation ) です -- pass が 実行 さ れ て も 、 何 も 起き ませ ん 。 
pass は 、 例えば : 
def f ( arg ): pass # a function that does nothing ( yet ) class C : pass # a class with no methods ( yet ) の よう に 、 構文 法的 に は 文 が 必要 だ が 、 コード として は 何 も 実行 し たく ない 場合 の プレースホルダ として 有用 です 。 
Pen と RawPen オブジェクト は 、 demo () が メソッド と し は 除か れ ます が 、 与え られ た ペン を 操作 する 上記 の すべて の グローバル 関数 を 持っ て い ます 。 メソッド に なっ て 強力 に なっ て いる メソッド は degrees () だけ です 。 
fullcircle は デフォルト で 360 です 。 
物理 行 と は 、 利用 し て いる プラットフォーム で 行 終端 として 取り決め て いる 文字 列 で 終端 さ れ た もの です 。 
Unix で は 、 行 終端 は ASCII LF ( 行 送り : linefeed ) 文字 です 。 
Windows で は 、 ASCII 配列 の CR LF ( 復帰 : return に 続い て 行 送り ) です 。 
Macintosh で は 、 ASCII CR ( 復帰 ) 文字 です 。 
以下 に ある クラス について どう やっ て picklle 化 の 振る舞い を 変更 する か の れい を 示し ます 。 
TextReader クラス は ファイル を 開き 、 readline () メソッド が 呼ば れる たび に 行 番号 と 行 の 内容 を 返し ます 。 
TextReader インスタンス が pickle 化 さ れ た 場合 、 ファイル オブジェクト 以外 の 全て の 属性 が 保存 さ れ ます 。 
インスタンス が unpickle 化 さ れ た 際 、 ファイル は 再度 開か れ 、 以前 の ファイル 位置 から 読み出し を 再開 し ます 。 
使用 例 は 以下 の よう に なる でしょ う : 
が Python プロセス 間 で うまく 働く こと を 見 たい なら 、 先 に 進む 前 に 他 の Python セッション を 開始 し て ください 。 
以下 の 振る舞い は 同じ プロセス でも 新た な プロセス で も 起こり ます 。 
参考 : copy _ reg 
オブジェクト の インデクス 付き データベース ; pickle を 使い ます 。 
オブジェクト の 浅い コピー および 深い コピー 。 
高い パフォーマンス を 持つ 組み込み 型 整列 化 機構 。 . 
3 . 14 . 5 . 1 通常 の クラス インスタンス の pickle 化 および unpickle 化 
3 . 14 . 5 . 2 拡張 型 の pickle 化 および 
pickle 化 さ れ た クラス インスタンス が unpickle 化 さ れ た とき 、 __ init __() メソッド は 通常 呼び出さ れ ませ ん 。 
unpickle 化 の 際 に __ init __() が 呼び出さ れる 方 が 望ましい 場合 、 旧 スタイル クラス で は メソッド __ getinitargs __() を 定義 する こと が でき ます 。 
この メソッド は クラスコンストラクタ ( すなわち __ init __()) に 渡さ れる べき タプル を 返さ なけれ ば なり ませ ん 。 
__ getinitargs __() メソッド は pickle 時 に 呼び出さ れ ます ; この 関数 が 返す タプル は インスタンス の pickle 化 データ に 組み込ま れ ます 。 
新 スタイル クラス で は 、 プロトコル 2 で 呼び出さ れる __ getnewargs __() を 定義 する 事 が でき ます 。 
インスタンス 生成 時 に 内部 的 な 不変 条件 が 成立 する 必要 が あっ たり 、 （ タプル や 文字 列 の よう に ） 型 の __ new __() メソッド に 指定 する 引数 によって メモリ の 割り当て を 変更 する 必要 が ある 場合 に は __ getnewargs __() を 定義 し て ください 。 
新 スタイル クラス C の インスタンス は 、 次 の よう に 生成 さ れ ます 。 
ここ で args は 元 の オブジェクト の __ getnewargs __() メソッド を 呼び出し た 時 の 戻り 値 と なり ます 。 __ getnewargs __() を 定義 し て い ない 場合 、 args は 空 の タプル と なり ます 。 
クラス は 、 インスタンス の pickle 化 方法 に さらに 影響 を 与える こと が でき ます ; クラス が __ getstate __() メソッド を 定義 し て いる 場合 、 この メソッド が 呼び出さ れ 、 返さ れ た 状態 値 は インスタンス の 内容 として 、 インスタンス の 辞書 の 代わり に pickle 化 さ れ ます 。 
__ getstate __() メソッド が 定義 さ れ て い ない 場合 、 インスタンス の __ dict __ の 内容 が pickle 化 さ れ ます 。 unpickle 化 で は 、 クラス が __ setstate __() も 定義 し て い た 場合 、 unpickle 化 さ れ た 状態 値 とともに 呼び出さ れ ます 
3 . 6 。 
__ setstate __() メソッド が 定義 さ れ て い ない 場合 、 pickle 化 さ れ た 状態 は 辞書 型 で なけれ ば なら ず 、 その 要素 は 新た な インスタンス の 辞書 に 代入 さ れ ます 。 
クラス が __ getstate __() と __ setstate __() の 両方 を 定義 し て いる 場合 、 状態 値 オブジェクト は 辞書 で ある 必要 は なく 、 これら の メソッド は 期待 通り の 動作 を 行い ます 。 
警告 : 新しい スタイル の クラス において __ getstate __() が 負 値 を 返す 場合 、 __ setstate __() メソッド は 呼ば れ ませ ん 。 
... 化 さ れ た 状態 値 とともに 呼び出さ れ ます 
これら の メソッド は クラス インスタンス の コピー を 実装 する 際 に も ｔ 用い られ ます 
... は 期待 通り の 動作 を 行い ます 。 
この プロトコル は また 、 
で 定義 さ れ て いる 浅い コピー や 深い コピー 操作 で も 用い られ ます 。 
3 . 14 . 4 何 を pickle 化 し たり 
3 . 14 . 5 . 1 通常 の クラス インスタンス の pickle 化 および 
この 節 で は pickler / unpickler と 直列 化 対象 の オブジェクト と の 間 の インタフェース を 定義 する `` pickle 化 プロトコル '' について 記述 し ます 。 
この プロトコル は 自分 の オブジェクト が どの よう に 直列 化 さ れ たり 非 直列 化 さ れ たり する か を 定義 し 、 カスタマイズ し 、 制御 する ため の 標準 的 な 方法 を 提供 し ます 。 
この 節 で の 記述 は 、 unpickle 化 環境 を 不信 な pickle 化 データ に対して 安全 に する ため に 使う 特殊 な カスタマイズ 化 について は カバー し て い ませ ん ; 詳細 は 3 . 14 . 6 を 参照 し て ください 。 
3 . 14 . 5 . 3 外部 オブジェクト の pickle 化 および 
デフォルト で は 、 逆 pickle 化 は pickle 化 さ れ た データ 中 に 見つかっ た クラス を import する こと に なり ます 。 
自前 の unpickler を カスタマイズ する こと で 、 何 が unpickle 化 さ れ て 、 どの メソッド が 呼び出さ れる か を 厳密 に 制御 する こと は でき ます 。 
しかし 不運 な こと に 、 厳密 に なに を 行う べき か は pickle と cPickle の どちら を 使う か で 異なり ます 
3 . 10 。 
pickle モジュール で は 、 Unpickler から サブ クラス を 導出 し 、 load _ global () メソッド を 上書き する 必要 が あり ます 。 load _ global () は pickle データ 列 から 最初 の 2 行 を 読ま なけれ ば なら ず 、 ここ で 最初 の 行 は その クラス を 含む モジュール の 名前 、 2 行 目 は その インスタンス の クラス 名 に なる はず です 。 
次に この メソッド は 、 例えば モジュール を イン ポート し て 属性 を 掘り起こす など し て クラス を 探し 、 発見 さ れ た もの を unpickler の スタック に 置き ます 。 
あるいは 全て の インスタンス に対して unpickling を 許可 し たく ない なら エラー を 送出 し て ください 。 
この からくり が ハック の よう に 思える なら 、 あなた は 間違っ て い ませ ん 。 
属性 が None の 場合 、 インスタンス を unpickle しよ う と する 試み は 全て UnpicklingError を 送出 し ます 。 
属性 が 関数 の 場合 、 この 関数 は モジュール 名 または クラス 名 を 受理 し 、 対応 する クラス オブジェクト を 返さ なく て は なり ませ ん 。 
... の どちら を 使う か で 異なり ます 
注意 し て ください : ここ で 記述 さ れ て いる 機構 は 内部 の 属性 と メソッド を 使っ て おり 、 これら は Python の 将来 の バージョン で 変更 さ れる 対象 に なっ て い ます 。 
われわれ は 将来 、 この 挙動 を 制御 する ため の 、 pickle および cPickle の 両方 で 動作 する 、 共通 の インタフェース を 提供 する つもり です 。 
プレーヤー オブジェクト （ open () で 返さ れ ます ） に は 以下 の メソッド が あり ます ： 
CD - ROM ドライブ の イジェクトボタン の ロック を 解除 し て 、 ユーザ が CD キャディ を 排出 する の を 許可 し ます 。 
メソッド readda () の パラメータ num _ frames として 最適 の 値 を 返し ます 。 
最適 値 は CD - ROM ドライブ から の 連続 し た データ フロー が 許可 さ れる 値 が 定義 さ れ ます 。 
プレーヤー オブジェクト と 関連付け られ た リソース を 解放 し ます 。 
close () を 呼び出し た あと で は 、 その オブジェクト に対する メソッド は 使用 でき ませ ん 。 
CD - ROM ドライブ から キャディ を 排出 し ます 。 
CD - ROM ドライブ の 現在 の 状態 に関する 情報 を 返し ます 。 
返さ れる 情報 は 以下 の 値 から なる タプル です ： state 、 track 、 rtime 、 atime 、 ttime 、 first 、 last 、 scsi _ audio 、 cur _ block 。 rtime は 現在 の トラック の 初め から の 相対 的 な 時間 ； atime は ディスク の 初め から の 相対 的 な 時間 ； ttime は ディスク の 全 時間 です 。 
それぞれ の 値 の 詳細 について は 、 マニュアル ページ CDgetstatus ( 3 dm ) を 参照 し て ください 。 
state の 値 は 以下 の うち の どれ か 一つ です ： ERROR 、 NODISC 、 READY 、 PLAYING 、 PAUSED 、 STILL 、 CDROM 。 
特定 の トラック について の 情報 を 返し ます 。 
返さ れる 情報 は 、 トラック の 開始 時刻 と トラック の 時間 の 長 さ の 二つ の 要素 から なる タプル です 。 
分 、 秒 、 フレーム の 3 つ から なる 絶対 的 な タイム コード を 、 与え られ た CD - ROM ドライブ の 相当 する 論理 ブロック 番号 に 変換 し ます 。 
時刻 を 比較 する に は msftoblock () より も msftoframe () を 使う べき です 。 
論理 ブロック 番号 は 、 CD - ROM ドライブ によって 必要 と さ れる オフセット 値 が 違う ため 、 フレーム ナンバー と 異なり ます 。 
CD - ROM ドライブ の オーディオ CD の 特定 の トラック から 再生 を 開始 し ます 。 
CD - ROM ドライブ の ヘッド フォン 端子 と （ 備え て いる なら ） オーディオ 端子 から 出力 さ れ ます 。 
ディスク の 最後 で 再生 は 停止 し ます 。 start は 再生 を 開始 する CD の トラック ナンバー です ； play が 0 なら 、 CD は 最初 の 一時 停止 状態 に なり ます 。 
その 状態 から メソッド togglepause () で 再生 を 開始 でき ます 。 
play () と 似 て い ます が 、 開始 位置 を トラック ナンバー の 代わり に 分 、 秒 、 フレーム で 与え ます 。 
play () と 似 て い ます が 、 トラック の 終わり で 再生 を 停止 し ます 。 
play () と 似 て い ます が 、 指定 し た 絶対 的 な 時刻 から 再生 を 開始 し て 、 指定 し た トラック で 終了 し ます 。 
CD - ROM ドライブ の イジェクトボタン を ロック し て 、 ユーザ が CD キャディ を 排出 でき ない よう に し ます 。 
CD - ROM ドライブ に マウント さ れ た オーディオ CD から 、 指定 し た フレーム 数 を 読み込み ます 。 
オーディオ フレーム の データ を 示す 文字 列 を 返し ます 。 
この 文字 列 は そのまま パーザ オブジェクト の メソッド parseframe () へ 渡す こと が でき ます 。 
CD - ROM から 次に デジタルオーディオデータ を 読み込む 開始 位置 の ポインタ を 設定 し ます 。 
ポインタ は minutes 、 seconds 、 frames で 指定 し た 絶対 的 な タイム コード の 位置 に 設定 さ れ ます 。 
返さ れる 値 は ポインタ が 設定 さ れ た 論理 ブロック 番号 です 。 
ポインタ は 指定 し た 論理 ブロック 番号 に 設定 さ れ ます 。 
返さ れる 値 は ポインタ が 設定 さ れ た 論理 ブロック 番号 です 。 
ポインタ は 指定 し た トラック に 設定 さ れ ます 。 
返さ れる 値 は ポインタ が 設定 さ れ た 論理 ブロック 番号 です 。 
現在 実行 中 の 再生 を 停止 し ます 。 
再生 中 なら CD を 一時 停止 し 、 一時 停止 中 なら 再生 し ます 。 
poll () システム コール は ほとんど の Unix システム で サポート さ れ て おり 、 非常 に 多数 の クライアント に 同時に サービス を 提供 する よう な ネットワーク サーバ が 高い 拡張 性 を 持てる よう に し て い ます 。 
poll () に 高い 拡張 性 が ある の は 、 select () が ビット 対応 表 を 構築 し 、 対象 ファイル の 記述 子 に 対応 する ビット を 立て 、 その後 全て の 対応 表 の 全て の ビット を 線形 探索 する の に対し 、 poll () は 対象 の ファイル 記述 子 を 列挙 する だけ で よい から です 。 select () は O ( 最大 の ファイル 記述 子 番号 ) な の に対し 、 poll () は O ( 対象 と する ファイル 記述 子 の 数 ) で 済み ます 。 
ファイル 記述 子 を ポーリング オブジェクト に 登録 し ます 。 
これ 以降 の poll () メソッド 呼び出し で は 、 その ファイル 記述 子 に 処理 待ち 中 の I / O イベント が ある か どう か を 監視 し ます 。 fd は 整数 か 、 整数 値 を 返す fileno () メソッド を 持つ オブジェクト を 取り ます 。 
ファイル オブジェクト も 通常 fileno () を 実装 し て いる ので 、 引数 として 使う こと が でき ます 。 
eventmask は オプション の ビット マスク で 、 どの タイプ の I / O イベント を 監視 し たい か を 記述 し ます 。 この 値 は 以下 の 表 で 述べる 定数 POLLIN 、 POLLPRI 、 および POLLOUT の 組み合わせ に する こと が でき ます 。 
ビット マスク を 指定 し ない 場合 、 標準 の 値 が 使わ れ 、 3 種 の イベント 全て に対して 監視 が 行わ れ ます 。 
読み 出せる データ の 存在 
緊急 の 読み出し データ の 存在 
書き出せる か どう か : 書き出し 処理 が ブロック し ない か どう か 
何らかの エラー 状態 
ハング アップ 
無効 な 要求 : 記述 子 が 開か れ て い ない 
すでに 登録 済み の ファイル 記述 子 を 登録 し て も エラー に は なら ず 、 一 度 だけ 登録 し た 場合 と 同じ 効果 に なり ます 。 
ポーリング オブジェクト によって 追跡 中 の ファイル 記述 子 を 登録 解除 し ます 。 
register () メソッド と 同様 に 、 fd は 整数 か 、 整数 値 を 返す fileno () メソッド を 持つ オブジェクト を 取り ます 。 登録 さ れ て い ない ファイル 記述 子 を 登録 解除 しよ う と する と KeyError 例外 が 送出 さ れ ます 。 
fd は ファイル 記述 子 で 、 event は 該当 する ファイル 記述 子 について 報告 さ れ た イベント を 表す ビット マスク です -- 例えば POLLIN は 入力 待ち を 示し 、 POLLOUT は ファイル 記述 子 に対する 書き込み が 可能 を 示す 、 など です 。 
空 の リスト は 呼び出し が タイム アウト し た か 、 報告 す べき イベント が どの ファイル 記述 子 で も 発生 し なかっ た こと を 示し ます 。 
timeout が 与え られ た 場合 、 処理 を 戻す まで 待機 する 時間 の 長 さ を ミリ 秒 単位 で 指定 し ます 。 timeout が 省略 さ れ たり 、 負 の 値 で あっ たり 、 あるいは None の 場合 、 その ポーリング オブジェクト が 監視 し て いる 何らかの イベント が 発生 する まで ブロック し ます 。 
これ は （ エラー チェック も ない ） 最も 小さな サンプル で 、 メールボックス を 開い て 、 すべて の メッセージ を 取り出し 、 プリント し ます 。 
モジュール の 末尾 に 、 より 広い 範囲 の 使用 例 と なる test セクション が あり ます 。 
インスタンス の デバッグ レベル を 指定 し ます 。 
これ は デバッギング アウトプット の 表示 量 を コントロール し ます 。 
デフォルト 値 の 0 は 、 デバッギング アウトプット を 表示 し ませ ん 。 
値 を 1 と する と 、 デバッギング アウトプット の 表示 量 を 適当 な 量 に し ます 。 これ は 大体 、 リクエスト ごと 1 行 に なり ます 。 
値 を 2 以上 に する と 、 デバッギング アウトプット の 表示 量 を 最大 に し ます 。 コントロール 中 の 接続 で 送受信 さ れる 各行 を ログ に 出力 し ます 。 
POP 3 サーバー から 送ら れる グリーティングメッセージ を 返し ます 。 
user コマンド を 送出 し ます 。 応答 は パスワード 要求 を 表示 し ます 。 
POP 3 サーバー に ログオン する のに 、 より セキュア な APOP 認証 を 使用 し ます 。 
POP 3 サーバー に ログオン する のに 、 （ UNIX の r - コマンド と 同様 の ） RPOP 認証 を 使用 し ます 。 
メールボックス の 状態 を 得 ます 。 
結果 は 2 つ の integer から なる タプル と なり ます 。 ( message count , mailbox size ). 
which が 与え られる と 、 それ により メッセージ を 指定 し ます 。 
which 番 の メッセージ 全体 を 取り出し 、 その メッセージ に 既 読 フラグ を 立て ます 。 結果 は ( response , [' line ', ...], octets ) という 形式 で 表さ れ ます 。 
which 番 の メッセージ に 削除 の ため の フラグ を 立て ます 。 
ほとんど の サーバ で 、 QUIT コマンド が 実行 さ れる まで は 実際 の 削除 は 行わ れ ませ ん （ もっとも 良く 知ら れ た 例外 は Eudora QPOP で 、 その 配送 メカニズム は RFC に 違反 し て おり 、 どんな 切断 状況 で も 削除 操作 を 未 解決 に し て い ます ） 。 
メールボックス の 削除 マーク すべて を 取り消し ます 。 
何 も し ませ ん 。 
接続 保持 の ため に 使わ れ ます 。 
Signoff : commit changes , unlock mailbox , drop connection . サインオフ ： 変更 を コミット し 、 メールボックス を アン ロック し て 、 接続 を 破棄 し ます 。 
メッセージ ヘッダ と howmuch で 指定 し た 行 数 の メッセージ を 、 which で 指定 し た メッセージ 分 取り出し ます 。 
という 形式 の メッセージ 、 または ( response , [' mesgnum uid ', ...], octets ) という 形式 の リスト と なり ます 。 
POP 3 _ SSL クラス の インスタンス は 追加 の メソッド を 持ち ませ ん 。 
この サブ クラス の インター フェイス は 親 クラス と 同じ です 。 
何らかの 形式 で プロセス 間 通信 を 利用 し て いる 際 に は 常に 、 制御 フロー について 注意深く 考える 必要 が あり ます 。 
これ は この モジュール ( あるいは 
モジュール における 等価 な 機能 ) で 生成 さ れる ファイル オブジェクト の 場合 に も あてはまり ます 。 親 プロセス が 子 プロセス の 標準 出力 を 読み出し て いる 一方 で 、 子 プロセス が 大量 の データ を 標準 エラー 出力 に 書き込ん で いる 場合 、 この 子 プロセス から 出力 を 読み出そ う と する と デッドロック が 発生 し ます 。 
同様 の 状況 は 読み書き の 他 の 組み合わせ で も 生じ ます 。 
に 従う よう に し 、 子 プロセス で 以下 : 
import osimport sys # note that each of these print statements # writes a single long stringprint sys . stderr , 400 * ' this is a test \ n ' os . close ( sys . stderr . fileno ()) print sys . stdout , 400 * ' this is another test \ n ' の よう な コード に する こと でしょ う 。 
とりわけ 、 sys . stderr は 全て の データ を 書き込ん た 後 に 閉じ られ なけれ ば なら ない という こと に 注意 し て ください 。 さもなければ 、 readlines () は 返っ て き ませ ん 。 
また 、 sys . stderr . close () が stderr を 閉じ ない よう に os . close () を 使わ なけれ ば なら ない こと に も 注意 し て ください 。 
( そう で なく 、 sys . stderr に 関連付ける と 、 暗黙 の うち に 閉じ られ て しまう ので 、 それ 以降 の エラー が 出力 さ れ ませ ん )。 より 一般 的 な アプローチ を を サポート する 必要 が ある アプリケーション で は 、 パイプ 経由 の I / O を select () ループ で まとめる か 、 個々 の popen *() 関数 や Popen * クラス が 提供 する 各々 の ファイル に対して 、 個別 の スレッド を 使っ て 読み出し を 行い ます 。 
Popen 3 および Popen 4 クラス の インスタンス は 以下 の メソッド を 持ち ます : 
子 プロセス が まだ 終了 し て い ない 際 に は - 1 を 、 そう で ない 場合 に は リターンコード を 返し ます 。 
子 プロセス の 状態 コード 出力 を 待機 し て 返し ます 。 
状態 コード で は 子 プロセス の リターンコード と 、 プロセス が exit () によって 終了 し た か 、 あるいは シグナル によって 死ん だ か について の 情報 を 符号 化 し て い ます 。 
状態 コード の 解釈 を 助ける ため の 関数 は 
モジュール で 定義 さ れ て い ます ; 6 . 1 . 5 節 の W *() 関数 ファミリ を 参照 し て ください 。 
以下 の 属性 も 利用 可能 です : 
子 プロセス から の 出力 を 提供 する ファイル オブジェクト です 。 
Poepn 4 インスタンス の 場合 、 この 値 は 標準 出力 と 標準 エラー 出力 の 両方 を 提供 する オブジェクト に なり ます 。 
子 プロセス へ の 入力 を 提供 する ファイル オブジェクト です 。 
コンス トラクタ に capturestderr を 渡し た 際 に は 子 プロセス から の 標準 エラー 出力 を 提供 する ファイル オブジェクト で 、 そう で ない 場合 None に なり ます 。 
Popen 4 インスタンス で は 、 この 値 は 常に None に なり ます 。 
子 プロセス の プロセス 番号 です 。 
posix で は 以下 の データ 項目 を 定義 し て い ます : 
インタプリタ が 起動 し た 時点 の 環境 変数 文字 列 を 表現 する 辞書 です 。 
例えば 、 environ [' HOME '] は ホーム ディレクトリ の パス 名 で 、 C 言語 の getenv (" HOME ") と 等価 です 。 この 辞書 を 変更 し て も 、 execv ()、 popen () または system () など に 渡さ れる 環境 変数 文字 列 に は 影響 し ませ ん ; そうした 環境 を 変更 するする 必要 が ある 場合 、 environ を execve () に 渡す か 、 system () または popen () の 命令 文字 列 に 変数 の 代入 や export 文 を 追加 し て ください 。 
注意 : 
モジュール で は 、 もう 一つ の environ 実装 を 提供 し て おり 、 環境 変数 が 変更 さ れ た 場合 、 その 内容 を 更新 する よう に なっ て い ます 。 
os . environ を 更新 し た 場合 、 この 辞書 は 古い 内容 を 表し て いる こと に なっ て しまう ので 、 この こと に も 注意 し て ください 。 
posix モジュール 版 を 直接 アクセス する より も 、 
モジュール 版 を 使う 方 が 推奨 さ れ て い ます 。 
モジュール の ドキュメント を 参照 し て ください 。 
いくつ か の オペレーティングシステム ( AIX , HPIX , Irix および Solaris が 含ま れ ます ) は 、 int および long を 32 ビット 値 と する C プログラム モデル で 2 Gb を 超える サイズ の ファイル の サポート を 提供 し て い ます 。 
この サポート は 典型 的 に は 64 ビット 値 の オフセット 値 と 、 そこ から の 相対 サイズ を 定義 する こと で 実現 し て い ます 。 
この よう な ファイル は 時に ラージファイル ( large files ) と 呼ば れ ます 。 Python で は 、 off _ t の サイズ が long より 大きく 、 かつ long long 型 を 利用 する こと が でき て 、 少なくとも off _ t 型 と 同じ くらい 大きな サイズ で ある 場合 、 ラージファイル の サポート が 有効 に なり ます 。 
この 場合 、 ファイル の サイズ 、 オフセット および Python の 通常 整数 型 の 範囲 を 超える よう な 値 の 表現 に は Python の 長 整数 型 が 使わ れ ます 。 
例えば 、 ラージファイル の サポート は Irix の 最近 の バージョン で は 標準 で 有効 です が 、 Solaris 2 . 6 および 2 . 7 で は 、 以下 の よう に する 必要 が あり ます : 
3 . 1 インストール 後 実行 スクリプト ( postinstallation script ) 
実行 可能 な インストーラ は 、 Windows 環境 で は ごく 自然 な バイナリ 配布 形式 です 。 
インストーラ は 結構 な グラフィカルユーザインタフェース を 表示 し て 、 モジュール 配布 物 に関する いくつ か の 情報 を setup スクリプト 内 の メタデータ から 取り出し て 示し 、 ユーザ が いくつ か の オプション を 選ん だり 、 インストール を 決行 する か 取りやめる か 選ん だり できる よう に し ます 。 メタデータ は setup スクリプト から 取り出さ れる ので 、 Windows インストーラ の 作成 は 至って 簡単 で 、 以下 を 実行 する だけ です : 
あるいは 、 bdist コマンド を -- formats オプション 付き で 実行 し ます : 
( pure Python モジュール と パッケージ だけ の 入っ た ) pure モジュール 配布 物 の 場合 、 作成 さ れる インストーラ は 実行 バージョン に 依存 し ない 形式 に なり 、 foo - 1 . 0 . win 32 . exe の よう な 名前 に なり ます 。 
従って 、 サポート し たい 全て の バージョン の Python に対して 、 別々 の インストーラ を 作成 し なけれ ば なり ませ ん 。 インストーラ は 、 ターゲット と なる システム に インストール を 実行 し た 後 、 pure モジュール を 通常 ( normal ) モード と 最適 化 ( optimizing ) モード で コンパイル しよ う と 試み ます 。 
-- title オプション を 使え ば 、 タイトル を 別 の テキスト に 変更 でき ます 。 インストーラファイル は `` 配布 物 ディレクトリ ( distribution directory )''-- 通常 は dist / に 作成 さ れ ます が 、 -- dist - dir オプション で 指定 する こと も でき ます 。 
Python 2 . 3 から は 、 インストール 実行 後 スクリプト を -- install - script オプション で 指定 できる よう に なり まし た 。 
これら の 関数 は 、 インストール 後 実行 スクリプト が ディレクトリ や ファイル を 作成 し た 際 に 呼び出さ なけれ ば なり ませ ん 。 
この 関数 は アンインストーラ に 作成 さ れ た path を 登録 し 、 配布 物 を アンインストール する 際 に ファイル が 消さ れる よう に し ます 。 
安全 を 期す ため に 、 ディレクトリ は 空 の 時 に のみ 削除 さ れ ます 。 
この 関数 は 、 「 スタート メニュー 」 や 「 デスク トップ 」 といった 、 Windows における 特殊 な フォルダ 位置 を 取得 する 際 に 使え ます 。 
この 関数 は フォルダ の フル パス を 返し ます 。 
csidl _ string は 以下 の 文字 列 の いずれ か で なけれ ば なり ませ ん : " CSIDL _ APPDATA "" CSIDL _ COMMON _ STARTMENU "" CSIDL _ STARTMENU "" CSIDL _ COMMON _ DESKTOPDIRECTORY "" CSIDL _ DESKTOPDIRECTORY "" CSIDL _ COMMON _ STARTUP "" CSIDL _ STARTUP "" CSIDL _ COMMON _ PROGRAMS "" CSIDL _ PROGRAMS "" CSIDL _ FONTS " 
詳細 について は 、 SHGetSpecialFolderPath () 関数 に関する Microsoft の ドキュメント を 参照 し て ください 。 
この 関数 は ショートカット を 作成 し ます 。 
target は ショートカット によって 起動 さ れる プログラム へ の パス です 。 
これ について も 、 詳しく は IShellLink インタフェース に関する Microsoft の ドキュメント を 参照 し て ください 。 
従って 、 べき乗 演算 子 と 単項 演算 子 から なる 演算 列 が 丸 括弧 で 囲わ れ て い ない 場合 、 演算 子 は 右 から 左 へ と 評価 さ れ ます ( この 演算 規則 は 、 被 演算 子 の 評価 順序 を 縛る 規則 で は あり ませ ん )。 べき乗 演算 子 は 、 二つ の 引数 で 呼び出さ れる 組み込み 関数 pow () と 同じ 意味 付け を 持っ て い ます 。 
引数 は まず 共通 の 型 に 変換 さ れ ます 。 
結果 の 型 は 、 型 強制 後 の 引数 の 型 に なり ます 。 引数 型 を 混合 する と 、 二 項 算術 演算 における 型 強制 規則 が 適用 さ れ ます 。 
整数 や 長 整数 の 被 演算 子 の 場合 、 第 二 引数 が 負 で ない 限り 、 結果 は ( 型 強制 後 の ) 被 演算 子 と 同じ に なり ます ; 第 二 引数 が 負 の 場合 、 全て の 引数 は 浮動 小数点 型 に 変換 さ れ 、 浮動 小数点 型 が 返さ れ ます 。 
例えば 、 10 ** 2 は 100 を 返し ます が 、 10 **- 2 は 0 . 01 を 返し ます 。 ( 上述 の 仕様 の うち 、 最後 の もの は Python 2 . 2 で 追加 さ れ まし た 。 
負 の 数 を 小数 で べき乗 する と ValueError に なり ます 。 
この マーク アップ は 、 ドキュメント 中 で 述べ て いる ソフトウェア の バージョン 番号 を 設定 し ます 。 
この マーク アップ は 、 ドキュメント が 扱っ て いる ソフトウェア の `` 短い 形式 の '' バージョン 番号 を sver に し ます 。 
6 . 2 メタ 情報 マーク アップ ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
一 次 語 は 、 言語 において 最も 結合 の 強い 操作 を 表し ます 。 文法 は 以下 の よう に なり ます : 
5 . 3 . 1 属性 参照 
print は 、 式 を 逐次 的 に 評価 し 、 得 られ た オブジェクト を 標準 出力 に 書き出し ます 。 
オブジェクト が 文字 列 で なけれ ば 、 まず 文字 列 変換 規則 を 使っ て 文字 列 に 変換 さ れ 、 次いで ( 得 られ た 文字 列 か 、 オリジナル の 文字 列 が ) 書き出さ れ ます 。 
出力 系 の 現在 の 書き出し 位置 が 行頭 に ある と 考え られる 場合 を 除き 、 各 オブジェクト の 出力 前 に スペース が 一つ 出力 さ れ ます 。 
行頭 に ある 場合 と は 、 ( 1 ) 標準 出力 に まだ 何 も 書き出さ れ て い ない 場合 、 ( 2 ) 標準 出力 に 最後 に 書き出さ れ た 文字 が " n " で ある 、 または ( 3 ) 標準 出力 に対する 最後 の 書き出し 操作 が print 文 による もの で は ない 場合 、 です 。 
( こうした 理由 から 、 場合 によって は 空文字 を 標準 出力 に 書き出す と 便利 な こと が あり ます 。 
) 注意 : 組み込み の ファイル オブジェクト で ない 、 ファイル オブジェクト に 似 た 動作 を する オブジェクト で は 、 組み込み の ファイル オブジェクト が 持つ 上記 の 性質 を 適切 に エミュレート し て い ない こと が ある ため 、 当て に し ない ほう が よい でしょ う 。 
print 文 が カンマ で 終了 し て い ない 限り 、 末尾 に は 文字 " n " が 書き出さ れ ます 。 
この 仕様 は 、 文 に 予約 語 print が ある 場合 のみ の 動作 です 。 
標準 出力 は 、 組み込み モジュール sys 内 で stdout という 名前 の ファイル オブジェクト として 定義 さ れ て い ます 。 
該当 する オブジェクト が 存在 し ない か 、 オブジェクト に write () メソッド が ない 場合 、 RuntimeError 例外 が 送出 さ れ ます 。 . 
print に は 、 上 で 説明 し た 構文 の 第 二 形式 で 定義 さ れ て いる 拡張 形式 
の 直後 に くる 最初 の 式 の 値 評価 結果 は `` ファイル 類似 ( file - like )'' な オブジェクト 、 とりわけ 上 で 述べ た よう に write () メソッド を 持つ オブジェクト で なけれ ば なり ませ ん 。 
この 拡張 形式 で は 、 ファイル オブジェクト を 指定 する 式 より も 後ろ の 式 が 、 指定 さ れ た ファイル オブジェクト に 出力 さ れ ます 。 
最初 の 式 の 値 評価 結果 が None に なっ た 場合 、 sys . stdout が 出力 ファイル として 使わ れ ます 。 
致命 的 エラーメッセージ ( fatal error message ) を 出力 し て プロセス を 強制 終了 ( kill ) し ます 。 
後始末 処理 は 行わ れ ませ ん 。 
この 関数 は 、 Python インタプリタ を 使い 続ける の が 危険 で ある よう な 状況 が 検出 さ れ た とき ; 例えば 、 オブジェクト 管理 が 崩壊 し て いる と 思わ れる とき に のみ 、 呼び出さ れる よう に し なけれ ば なり ませ ん 。 
Unix で は 、 標準 C ライブラリ 関数 abort () 
を 呼び出し て core を 生成 しよ う と 試み ます 。 
現在 の プロセス を 終了 ( exit ) し ます 。 
この 関数 は Py _ Finalize () 
を 呼び出し 、 次いで 標準 C ライブラリ 関数 exit ( status ) 
を 呼び出し ます 。 
から 呼び出さ れる 後始末 処理 を 行う 関数 ( cleanup function ) を 登録 し ます 。 
後始末 関数 は 引数 無し で 呼び出さ れ 、 値 を 返し ませ ん 。 
最大 で 32 の 
後始末 処理 関数 を 登録 でき ます 。 
登録 に 成功 する と 、 Py _ AtExit () は 0 を 返し ます ; 失敗 する と - 1 を 返し ます 。 
最後 に 登録 し た 後始末 処理 関数 から 先 に 呼び出さ れ ます 。 各 関数 は 高々 一 度 しか 呼び出さ れ ませ ん 。 
Python の 内部 的 な 終了 処理 は 後始末 処理 関数 より 以前 に 完了 し て いる ので 、 func から は いかなる Python API も 呼び出し て は なり ませ ん 。 
プロファイラ は イベント を ハンドリング の 際 の time 関数 呼出し および その 値 を 保存 する ため の オーバー ヘッド を 補正 する ため の 、 定数 を 持っ て い ます 。 
デフォルト の 値 は 0 です 。 以下 の 手順 で 、 プラットフォーム に 合っ た 、 より 適切 な 定数 が 得 られ ます ( 前節 「 制限 事項 」 の 説明 を 参照 )。 
import profile # 1 . 算出 し た 補正 値 ( your _ computed _ bias ) を これ 以降 生成 する # Profile インスタンス に 適用 する 。 
profile . Profile . bias = your _ computed _ bias # 2 . 特定 の Profile インスタンス に 補正 値 を 適用 する 。 
pr = profile . Profile () pr . bias = your _ computed _ bias # 3 . インスタンス の コンス トラクタ に 補正 値 を 指定 する 。 
方法 を 選択 し たら 、 補正 値 は 小さめ に 設定 し た 方 が 良い でしょ う 。 プロファイル の 結果 に 負 の 値 が 表 われる `` 確率 が 少なく '' なる はず です 。 
... 一定 の 結果 が 得 られ たら 、 それ を 使う 方法 に は 3 通り あり ます 。 
Python 2 . 2 より 前 の バージョン で は プロファイラ の ソース コード に 補正 値 として 埋め込ま れ た 定数 を 直接 編集 する 必要 が あり まし た 。 
今 でも 同じ こと は 可能 です が 、 その 方法 は 説明 し ませ ん 。 なぜなら 、 もう ソース を 編集 する 必要 が ない から です 。 
10 . 2 旧 バージョン の プロファイラ と の 違い 
この 節 は `` マニュアル なんか 読み たく ない 人 '' の ため に 書か れ て い ます 。 
ここ で は きわめて 簡単 な 概要 説明 と アプリケーション の プロ ファイリング を 手っとり早く おこなう 方法 だけ を 解説 し ます 。 main エントリ に ある 関数 foo () を プロファイル し たい とき 、 モジュール に 次 の 内容 を 追加 し ます 。 
この よう に 書く こと で foo () を 実行 する と 同時に 一連 の 情報 ( プロファイル ) が 表示 さ れ ます 。 
この 方法 は インタプリタ 上 で 作業 を し て いる 場合 、 最も 便利 な やり方 です 。 
プロファイル の 結果 を ファイル に 残し 、 後で 検証 し たい とき は 、 run () の 2 番目 の 引数 に ファイル 名 を 指定 し ます 。 
スクリプト ファイル profile . py を 使っ て 、 別 の スクリプト を プロファイル する こと も 可能 です 。 
次 の よう に 実行 し ます 。 
profile . py は オプション として コマンド ライン 引数 を 2 つ 受け取り ます 。 
- s は 標準 出力 ( つまり 、 - o が 与え られ なかっ た 場合 ) に のみ 有効 です 。 
利用 可能 な ソート の 値 は 、 Stats の ドキュメント を ご覧 ください 。 プロファイル 内容 を 確認 する とき は 、 pstats モジュール の メソッド を 使用 し ます 。 
統計 データ の 読み込み は 次 の よう に し ます 。 
Stats クラス ( 上記 コード は この クラス の インスタンス を 生成 する だけ の 内容 です ) は p に 読み込ま れ た データ を 操作 し たり 、 表示 する ため の 各種 メソッド を 備え て い ます 。 
先 に profile . run () を 実行 し た とき 表示 さ れ た 内容 と 同じ もの は 、 3 つ の メソッド ・ コール により 実現 でき ます 。 
最初 の メソッド は モジュール 名 から ファイル 名 の 前 に 付い て いる パス 部分 を 取り除き ます 。 
2 番目 の メソッド は エントリ を モジュール 名 / 行 番号 / 名前 に もとづい て ソート し ます ( 旧 プロファイラ と の 構文 上 の 互換 性 機能 )。 
3 番目 の メソッド で 全て の 統計 情報 を 出力 し ます 。 
次 の よう な ソート ・ メソッド も 使え ます 。 
最初 の 行 で は リスト を 関数 名 で ソート し て い ます 。 2 号 目 で 情報 を 出力 し て い ます 。 
さらに 次 の 内容 も 試し て ください 。 
この よう に する と 、 関数 が 消費 し た 累計 時間 で ソート さ れ 、 さらに その 上位 10 件 だけ を 表示 し ます 。 
どの アルゴリズム が 時間 を 多く 消費 し て いる の か 知り たい とき は 、 この 方法 が 役に立つ はず です 。 ループ で 多く の 時間 を 消費 し て いる 関数 は どれ か 調べ たい とき は 、 次 の よう に し ます 。 
上記 は 関数 の 実行 で 消費 し た 時間 で ソート さ れ 、 上位 10 個 の 関数 の 情報 が 表示 さ れ ます 。 次 の 内容 も 試し て ください 。 
この よう に する と ファイル 名 で ソート さ れ 、 そのうち クラス の 初期 化 メソッド ( メソッド 名 __ init __) に関する 統計 情報 だけ が 表示 さ れ ます 。 
". 5 " は 上位 50 % だけ の 選択 を 意味 し 、 さらに その 中 から 文字 列 init を 含む もの だけ が 表示 さ れ ます 。 どの 関数 が どの 関数 を 呼び出し て いる の か を 知り たけれ ば 、 次 の よう に し ます ( p は 最後 に 実行 し た とき の 状態 で ソート さ れ て い ます )。 
この よう に する と 、 各 関数 ごと の 呼出し 側 関数 の 一覧 が 得 られ ます 。 さらに 詳しい 機能 を 知り たけれ ば マニュアル を 読む か 、 次 の 関数 の 実行 結果 から 内容 を 推察 し て ください 。 
スクリプト として 起動 し た 場合 、 pstats モジュール は プロファイル の ダンプ を 読み込み 、 分析 する ため の 統計 ブラウザ として 動き ます 。 
シンプル な 行 指向 の インターフェース ( 
を 使っ て 実装 ) と ヘルプ 機能 を 備え て い ます 。 
この プロファイラ に は 2 つ の 基本 的 な 制限 事項 が あり ます 。 
ひとつ は 、 Python インタプリタ による 呼び出し 、 リターン 、 例外 発生 という イベント の 連携 を 前提 に し て いる こと です 。 
コンパイル 済み の C コード は インタプリタ の 管理 外 で 、 プロファイラ から は `` 見え ませ ん ''。 
( 組込み 関数 を 含む ) C の コード に 費やさ れ た 時間 は 、 その C コード を 呼出し た Python 関数 の もの として 計上 さ れる こと に なり ます 。 
最も 明白 な 制限 は 、 ( 一般 に )`` クロック '' は . 001 秒 の 精度 しか ない という こと です 。 
これ 以上 の 精度 で 計測 する こと は でき ませ ん 。 
仮に 充分 な 精度 が 得 られ た として も 、 `` エラー '' が 計測 の 平均 値 に 影響 を 及ぼす こと が あり ます 。 
最初 の エラー を 取り除い た として も 、 それ が また 別 の エラー を 引き起こす 原因 と なり ます 。 もう ひとつ の 問題 として 、 イベント を 検知 し て から プロファイラ が その 時刻 を 実際 に 取得 する まで に `` いくら か の 時間 が かかる '' こと です 。 
プロファイラ が 時刻 を 取得 する ( そして その 値 を 保存 する ) まで の 間 に 、 ユーザ コード が もう一度 処理 を 実行 し た とき に も 、 同様 の 遅延 が 発生 し ます 。 
結果 的 に 多く 呼び出さ れる 関数 または 多数 の 関数 から 呼び出さ れる 関数 の 情報 に は この 種 の エラー が 蓄積 する 傾向 に あり ます 。 
この 種 の エラー による 遅延 の 蓄積 は 一般 に クロック の 精度 を 越える ( 1 クロック 以下 の タイミング ) ところ で 起き て い ます が 、 一方 で この 時間 を 累計 可能 という こと が 大きな 意味 を 持っ て い ます 。 
この プロファイラ は プラットフォーム ごと に ( 平均 値 から ) 予想 さ れる エラー による 遅延 を 補正 する 機能 を 備え て い ます 。 プロファイラ に 補正 を 施す と ( 少く とも 形式 的 に は ) 正確 さ が 増し ます が 、 ときには 数値 が 負 の 値 に なっ て しまう こと も あり ます ( 呼出し 回数 が 少く 、 確率 の 神 が あなた に 意地悪 を し た とき :-) )。 
プロファイル の 結果 に 負 の 値 が 出力 さ れ て も 驚か ない で ください 。 
これ は 補正 を おこなっ た 場合 に のみ 現れる こと で 、 実際 の 計測 結果 は 補正 を おこなわ ない 場合 より 、 より 正確 な はず だ から です 。 
Stats に は 次 の メソッド が あり ます 。 
この メソッド は Stats に ファイル 名 の 前 に 付い て いる すべて の パス 情報 を 取り除か せる ため の もの です 。 
出力 の 幅 を 80 文字 以内 に 収め たい とき に 重宝 し ます 。 
この メソッド は オブジェクト を 変更 する ため 、 取り除い た パス 情報 は 失わ れ ます 。 
パス 情報 除去 の 操作 後 、 オブジェクト が 保持 する データ エントリ は 、 オブジェクト の 初期 化 、 ロード 直後 と 同じ よう に `` ランダム に '' 並ん で い ます 。 
strip _ dirs () を 実行 し た 結果 、 2 つ の 関数 名 が 区別 でき ない ( 両者 が 同じ ファイル の 同じ 行 番号 で 同じ 関数 名 と なっ た ) 場合 、 一つ の エントリ に 合算 さ れ さ れ ます 。 
Stats クラス の この メソッド は 、 既存 の プロ ファイリング ・ オブジェクト に 情報 を 追加 し ます 。 
引数 は 対応 する バージョン の profile . run () によって 生成 さ れ た ファイル の 名前 で なく て は なり ませ ん 。 
関数 の 名前 が 区別 でき ない ( ファイル 名 、 行 番号 、 関数 名 が 同じ ) 場合 、 一つ の 関数 の 統計 情報 として 合算 さ れ ます 。 
Stats オブジェクト に 読み込ま れ た データ を 、 ファイル 名 filename の ファイル に 保存 し ます 。 
ファイル が 存在 し ない 場合 新た に 作成 さ れ 、 すでに 存在 する 場合 に は 上書き さ れ ます 。 
この メソッド は profile . Profile クラス の 同名 の メソッド と 等価 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
この メソッド は Stats オブジェクト を 指定 し た 基準 に従って ソート し ます 。 
引数 に は 通常 ソート の キー に し たい 項目 を 示す 文字 列 を 指定 し ます ( 例 : ' time ' や ' name ' など )。 2 つ 以上 の キー が 指定 さ れ た 場合 、 2 つ 目 以降 の キー は 、 それ 以前 の キー で 同等 と なっ た データ エントリ の 再 ソート に 使わ れ ます 。 
たとえば sort _ stats (' name ', ' file ') と し た 場合 、 まず すべて の エントリ が 関数 名 で ソート さ れ た 後 、 同じ 関数 名 で 複数 の エントリ が あれ ば ファイル 名 で ソート さ れる の です 。 キー 名 に は 他 の キー と 判別 可能 で ある 限り 綴り を 省略 し て 名前 を 指定 でき ます 。 
現 バージョン で 定義 さ れ て いる キー 名 は 以下 の 通り です 。 
正式 名 
内容 
呼び出し 回数 
合計 時間 
ファイル 名 
モジュール 名 
プリミティブ な 呼び出し の 回数 
行 番号 
関数 名 
関数 名 / ファイル 名 / 行 番号 
標準 名 
内部 時間 
すべて の 統計 情報 の ソート 結果 は 降順 ( 最も 多く 時間 を 消費 し た もの が 一番 上 に 来る ) と なる こと に 注意 し て ください 。 ただし 、 関数 名 、 ファイル 名 、 行 数 に関して は 昇順 ( アルファベット 順 ) に なり ます 。 
' nfl ' と ' stdname ' は やや 異なる 点 が あり ます 。 標準 名 ( standard name ) と は 表示 欄 の 名前 な の です が 、 埋め込ま れ た 行 番号 の 文字 コード 順 で ソート さ れ ます 。 
たとえば 、 ( ファイル 名 が 同じ で ) 3 、 20 、 40 という 行 番号 の エントリ が あっ た 場合 、 20 、 30 、 40 の 順 に 表示 さ れ ます 。 
一方 ' nfl ' は 行 番号 を 数値 として 比較 し ます 。 
結果 的 に 、 sort _ stats (' nfl ') は sort _ stats (' name ', ' file ', ' line ') と 指定 し た 場合 と 同じ に なり ます 。 旧 バージョン の プロファイラ と の 互換 性 の ため 、 数値 を 引数 に 使っ た - 1 、 0 、 1 、 2 の 形式 も サポート し て い ます 。 
それぞれ ' stdname '、' calls '、' time '、' cumulative ' として 処理 さ れ ます 。 
引数 を この 旧 形式 で 指定 し た 場合 、 最初 の キー ( 数値 キー ) だけ が 使わ れ 、 複数 の キー を 指定 し て も 2 番目 以降 は 無視 さ れ ます 。 
Stats クラス の この メソッド は 、 オブジェクト 内 の 情報 の リスト を 逆順 に ソート し ます 。 
これ は 旧 プロファイラ と の 互換 性 の ため に 用意 さ れ て い ます 。 
現在 は 選択 し た キー に 応じ て 昇順 、 降順 が 適切 に 選ば れる ため 、 この メソッド の 必要 性 は ほとんど ない はず です 。 
Stats クラス の この メソッド は 、 profile . run () の 項 で 述べ た プロファイル の レポート を 出力 し ます 。 
出力 する データ の 順序 は オブジェクト に対し 最後 に おこなっ た sort _ stats () による 操作 に もとづい た もの に なり ます ( add () と strip _ dirs () による 制限 に も 支配 さ れ ます )。 引数 は 一覧 に 大きな 制限 を 加える こと に なり ます 。 
初期 段階 で リスト は プロファイル し た 関数 の 完全 な 情報 を 持っ て い ます 。 
制限 の 指定 は ( 行 数 を 指定 する ) 整数 、 ( 行 の パーセンテージ を 指定 する ) 0 . 0 から 1 . 0 まで の 割合 を 指定 する 小数 、 ( 出力 する standard name に マッチ する ) 正規 表現 の いずれ か を 使っ て おこない ます 。 正規 表現 は Python 1 . 5 b 1 で 導入 さ れ た 
モジュール で 使える Perl スタイル の もの です 。 
複数 の 制限 は 指定 さ れ た 場合 、 それ は 指定 の 順 に 適用 さ れ ます 。 たとえば 次 の よう に なり ます 。 
上記 の 場合 まず 出力 する リスト は 全体 の 10 % に 制限 さ れ 、 さらに ファイル 名 の 一部 に 文字 列 .* foo : を 持つ 関数 だけ が 出力 さ れ ます 。 
こちら の 例 の 場合 、 リスト は まず ファイル 名 に .* foo : を 持つ 関数 だけ に 制限 さ れ 、 その 中 の 最初 の 10 % だけ が 出力 さ れ ます 。 print _ callers 
Stats クラス の この メソッド は 、 プロファイル の データベース の 中 から 何らかの 関数 呼び出し を おこなっ た 関数 すべて を 出力 し ます 。 
出力 の 順序 は print _ stats () によって 与え られる もの と 同じ です 。 出力 を 制限 する 引数 も 同じ です 。 
呼出し 側 関数 の 後 に パーレン で 囲ま れ て 表示 さ れる 数値 は 呼出し が 何 回 おこなわ れ た か を 示す もの です 。 
続い て パー レン なし で 表示 さ れる 数値 は 、 関数 が 消費 し た 時間 の 合計 です 。 
Stats クラス の この メソッド は 指定 し た 関数 から 呼出さ れ た 関数 の リスト を 出力 し ます 。 
呼出し 側 、 呼出さ れる 側 の 方向 は 逆 です が 、 引数 と 出力 の 順序 に関して は print _ callers () と 同じ です 。 
現 バージョン の Python の Python で は 不要 です 。 
Python が None 以外 の 使わ れ なかっ た 結果 を 表示 する とき に 使わ れ た もの で 、 旧 バージョン と の 互換 性 の ため だけ に 定義 さ れ て い ます 。 
10 . 1 プロファイラ と は 
10 . Python プロファイラ 
Permission to use , copy , modify , and distribute this Python softwareand its associated documentation for any purpose ( subject to therestriction in the following sentence ) without fee is hereby granted , provided that the above copyright notice appears in all copies , andthat both that copyright notice and this permission notice appear insupporting documentation , and that the name of InfoSeek not be used inadvertising or publicity pertaining to distribution of the softwarewithout specific , written prior permission . This permission isexplicitly restricted to the copying and modification of the softwareto remain in Python , compiled Python , or other languages ( such as C ) wherein the modified or derived code is exclusively imported into aPython module . INFOSEEK CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THISSOFTWARE , INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY ANDFITNESS . IN NO EVENT SHALL INFOSEEK CORPORATION BE LIABLE FOR ANYSPECIAL , INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVERRESULTING FROM LOSS OF USE , DATA OR PROFITS , WHETHER IN AN ACTION OFCONTRACT , NEGLIGENCE OR OTHER TORTIOUS ACTION , ARISING OUT OF OR INCONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE . この プロファイラ は 私 が Python プログラミング を 始め て から わずか 3 週間 後 に 書い た もの です 。 
その 結果 、 稚拙 な コード が 出来上がっ て しまっ た の かも しれ ませ ん が 、 なにせ 私 は まだ 初心者 な ので それ も よく わかり ませ ん :-) コード は プロ ファイリング に ふさわしい スピード を 実現 する こと に 心血 を 注ぎ まし た 。 
しかし 部分 的 な 繰り返し を 避け た ため 、 かなり 不格好 に なっ て しまっ た ところ が あり ます 。 
改善 の ため の 意見 が あれ ば 、 ぜひ jar @ netscape . com まで メール を ください 。 
アップデート と LaTeX へ の 変換 は Guido van Rossum による もの 。 
テキスト 中 に 古い プロファイラ の リファレンス も 残し て あり ます が 、 その コード は もう 含ま れ て い ませ ん 。 
10 . 1 プロファイラ と は 
10 . 1 プロファイラ と は 
Python インタプリタ は 、 プロファイル : 分析 ( profile ) や 実行 の トレース : 追跡 ( trace ) といった 機能 を 組み込む ため に 低 水準 の サポート を 提供 し て い ます 。 
この サポート は 、 プロファイル や デバッグ 、 適用 範囲 分析 ( coverage analysis ) ツール など に 使わ れ ます 。 Python 2 . 2 に なっ て から 、 この 機能 の 実装 は 実質 的 に 作り直さ れ 、 C から 呼び出す ため の インタフェース が 追加 さ れ まし た 。 
この C インタフェース は 、 プロファイル や トレース 作業 時 に 、 Python レベル の 呼び出し 可能 オブジェクト が 呼び出さ れる こと による オーバヘッド を 避け 、 直接 C 関数 呼び出し が 行える よう に し て い ます 。 
プロファイル や トレース 機能 の 本質 的 な 特性 は 変わっ て い ませ ん ; インタフェース で は と レース 関数 を スレッド ごと に インストール でき 、 トレース 関数 に 報告 さ れる 基本 イベント ( basic event ) は 以前 の バージョン において Python レベル の トレース 関数 で 報告 さ れ て い た もの と 同じ です 。 
what の 値 
arg の 意味 
常に NULL です 。 
sys . exc _ info () の 返す 例外 情報 です 。 
呼び出し 側 に 返さ れる 予定 の 値 です 。 
呼び出し て いる 関数 の 名前 です 。 
関数 や メソッド が 新た に 呼び出さ れ たり 、 ジェネレータ が 新た な エントリ の 処理 に 入っ た こと を 報告 する 際 の 、 Py _ tracefunc の what の 値 です 。 
イテレータ や ジェネレータ 関数 の 生成 は 、 対応 する フレーム 内 の Python バイト コード に 制御 の 委譲 ( control transfer ) が 起こら ない ため 報告 さ れ ない ので 注意 し て ください 。 
例外 が 送出 さ れ た 際 の Py _ tracefunc の what の 値 です 。 
現在 実行 さ れ て いる フレーム で 例外 が セット さ れ 、 何らかの バイト コード が 処理 さ れ た 後 に 、 what に この 値 が セット さ れ た 状態 で コール バック 関数 が 呼び出さ れ ます 。 
この 結果 、 例外 の 伝播 によって Python が 呼び出し スタック を 逆戻り する 際 に 、 各 フレーム から 処理 が 戻る ごと に コール バック 関数 が 呼び出さ れ ます 。 
トレース 関数 だけ が これら の イベント を 受け取り ます ; プロファイラ は この 種 の イベント を 必要 と し ませ ん 。 
行 番号 イベント を 報告 する とき に ( プロファイル 関数 で は なく ) トレース 関数 の what パラメタ として 渡す 値 です 。 
関数 呼び出し が 例外 の 伝播 なし に 返る とき に Py _ tracefunc 関数 の what パラメタ として 渡す 値 です 。 
C 関数 を 呼び出す 直前 に Py _ tracefunc 関数 の what パラメタ として 渡す 値 です 。 
C 関数 が 例外 を 送出 し た とき に Py _ tracefunc 関数 の what パラメタ として 渡す 値 です 。 
C 関数 から 戻る とき に Py _ tracefunc 関数 の what パラメタ として 渡す 値 です 。 
プロファイル 関数 を func に 設定 し ます 。 
obj パラメタ は 関数 の 第 一 パラメタ として 渡さ れ 、 何らかの Python オブジェクト か または NULL に なり ます 。 
プロファイル 関数 が スレッド 状態 を 維持 する 必要 が ある なら 、 各々 の スレッド に 異なる obj を 使う こと で 、 状態 を 記憶 し て おく 便利 で スレッドセーフ な 場所 を 提供 でき ます 。 
プロファイル 関数 は 、 モニタ さ れ て いる イベント の うち 、 行 番号 イベント を 除く 全て の イベント に対して 呼び出さ れ ます 。 
トレース 関数 を func に セット し ます 。 
PyEval _ SetProfile () に 似 て い ます が 、 トレース 関数 は 行 番号 イベント を 受け取る 点 が 違い ます 。 
言語 仕様 の 中 で は 、 その 言語 を 処理 する インタプリタ が どの よう に 起動 さ れる か まで 規定 する 必要 は ない の です が 、 完全 な Python プログラム について の 概念 を 持っ て おく と 役に立ち ます 。 
完全 な Python プログラム は 、 最小限 に 初期 化 さ れ た 環境 : 全て の 組み込み 変数 と 標準 モジュール が 利用 可能 で 、 かつ sys ( 様々 な システム サービス )、__ builtin __ ( 組み込み 関数 、 例外 、 および None )、__ main __ の 3 つ を 除く 全て の モジュール が 初期 化 さ れ て い ない 状態 で 動作 し ます 。 
__ main __ は 、 完全 な プログラム を 実行 する 際 に 、 ローカル および グローバル な 名前 空間 を 提供 する ため に 用い られ ます 。 
完全 な Python プログラム の 構文 は 、 下 の 節 で 述べる ファイル 入力 の ため の もの です 。 インタプリタ は 、 対話 的 モード ( interactive mode ) で 起動 さ れる こと も あり ます ; この 場合 、 インタプリタ は 完全 な プログラム を 読ん で 実行 する の で は なく 、 一 度 に 単一 の 実 行文 ( 複合 文 の とき も あり ます ) を 読み込ん で 実行 し ます 。 
初期 状態 の 環境 は 、 完全 な プログラム を 実行 する とき の 環境 と 同じ です ; 各 実行 文 は 、 __ main __ の 名前 空間 内 で 実行 さ れ ます 。 
Unix の 環境 下 で は 、 完全 な プログラム を インタプリタ に 渡す に は 三 通り の 方法 が あり ます : 第 一 は 、 - c string コマンドラインオプション を 使う 方法 、 第 二 は ファイル を 第 一 コマンド ライン 引数 として 指定 する 方法 、 そして 最後 は 標準 入力 から 入力 する 方法 です 。 ファイル や 標準 入力 が tty ( 端末 ) デバイス の 場合 、 インタプリタ は 対話 モード に 入り ます ; そう で ない 場合 、 ファイル を 完全 な プログラム として 実行 し ます 。 
ProgressBar オブジェクト で は 、 モー ドレス な プログレスバーダイアログ の サポート を 提供 し て い ます 。 
定量 プログレスバー ( 温度 計 スタイル ) と 不定 量 プログレスバー ( 床屋 の 螺旋 看板 スタイル ) が サポート さ れ て い ます 。 
プログレスバー の 最大 値 が ゼロ 以上 の 場合 に は 定量 インジケータ に 、 そう で ない 場合 は 不 定量 インジケータ に なり ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : 不定 量 プログレスバー の サポート を 追加 し まし た 。 
ダイアログ は 作ら れる と すぐ に 表示 さ れ ます 。 
ダイアログ の `` Cancel '' ボタン を 押す か 、 Cmd -. ( コマンド キー を 押し ながら ピリオド (".") を 押す ) か 、 あるいは ESC を タイプ する と 、 ダイアログウィンドウ を 非 表示 に し て KeyboardInterrupt を 送出 し ます ( ただし 、 この 応答 は 次に プログレスバー を 更新 する とき まで 、 すなわち 次に inc () または set () を 呼び出し て ダイアログ を 更新 する まで 発生 し ませ ん ) 。 
それ 以外 の 場合 、 プログレスバー は ProgressBar オブジェクト を 廃棄 する まで 表示 さ れ た まま に なり ます 。 
ProgressBar オブジェクト に は 以下 の 属性 と メソッド が あり ます 。 
プログレスバー の 現在 の 値 ( 整数 型 あるいは 長 整数 型 ) です 。 
プログレスバー の 通常 の アクセス の メソッド によって curval を 0 と maxval の 間 に し ます 。 
この 属性 を 直接 変更 し て は なり ませ ん 。 
プログレスバー の 最大 値 　( 整数 型 あるいは 長 整数 型 ) です ; プログレスバー ( 温度 計 , thermometer ) で は 、 curval が maxval に 等しい 時 に 全量 に 到達 し ます 。 
maxval が 0 の 場合 、 不 定量 プログレスバー ( 床屋 の 螺旋 看板 , barbar pole ) に なり ます 。 
プログレスダイアログ の タイトル バー の テキスト を newstr に 設定 し ます 。 
プログレスダイアログ 中 の プログレスボックス の テキスト を newstr に 設定 し ます 。 
max も 指定 し た 場合 、 maxval を max に し ます 。 
value は 前もって 0 と maxval の 間 に なる よう 強制 的 に 設定 さ れ ます 。 
温度 計 バー の 場合 、 変更 内容 を 反映 する よう 表示 を 更新 し ます 。 変更 によって 定量 プログレスバー から 不定 量 プログレスバー へ 、 あるいは その 逆 へ の 推移 が 起こり ます 。 
プログレスバー の curval を n だけ 増やし ます 。 n を 指定 し なけれ ば 1 だけ 増やし ます 。 
( n は 負 に も でき 、 その 場合 は curval を 減少 さ せ ます 。 
) 変更 内容 を 反映 する よう プログレスバー の 表示 を 更新 し ます 。 
プログレスバー が 不 定量 プログレスバー の 場合 、 床屋 の 螺旋 看板 ( barbar pole ) 模様 を 1 度 「 回転 」 さ せ ます 。 
増減 によって curval が 0 から maxval まで の 範囲 を 越え た 場合 、 0 と maxval の 範囲 に 収まる よう 強制 的 に 値 を 設定 し ます 。 
ProtocolError オブジェクト は トランスポート 層 で 発生 し た エラー ( URI で 指定 し た サーバ が 見つから なかっ た 場合 に 発生 する 404 ` not found ' など ) の 内容 を 示し 、 以下 の メンバ を 持ち ます : 
エラー の 原因 と なっ た URI または URL 。 
エラーコード 。 
エラーメッセージ または 診断 文字 列 。 
エラー の 原因 と なっ た HTTP / HTTPS リクエスト を 含む 文字 列 。 
ProxyHandler は 、 コンス トラクタ で 与え た 辞書 proxies に プロ キシ が 設定 さ れ て いる よう な protocol 全て について 、 メソッド 
最初 に 例示 する プログラム は 、 Python スクリプト 内 の 関数 を 実行 する ため の もの です 。 
超 高水準 インタフェース に関する 節 で 挙げ た 例 と 同様 に 、 Python インタプリタ は アプリケーション と 直接 やりとり は し ませ ん ( が 、 次 の 節 で やりとり する よう 変更 し ます )。 Python スクリプト 内 で 定義 さ れ て いる 関数 を 実行 する ため の コード は 以下 の よう に なり ます : 
この コード は argv [ 1 ] を 使っ て Python スクリプト を ロード し 、 argv [ 2 ] 内 に 指定 さ れ た 名前 の 関数 を 呼び出し ます 。 
関数 の 整数 引数 は argv 配列 中 の 他 の 値 に なり ます 。 
この プログラム を コンパイル し て リンク し ( でき た 実行 可能 形式 を call と 呼び ましょ う )、 以下 の よう な Python スクリプト を 実行 する こと に し ます : 
実行 結果 は 以下 の よう に なる はず です : 
この 程度 の 機能 を 実現 する に は プログラム が いささか 大き すぎ ます が 、 ほとんど は Python から C へ の データ 変換 や エラー 報告 の ため の コード です 。 
Python の 埋め込み という 観点 から 最も 興味深い 部分 は 以下 の コード 、 
Py _ Initialize (); pName = PyString _ FromString ( argv [ 1 ]);/* pName の エラー チェック は 省略 し て いる */ pModule = PyImport _ Import ( pName ); から 始まる 部分 です 。 
インタプリタ の 初期 化 後 、 スクリプト は PyImport _ Import () を 使っ て 読み込ま れ ます 。 
この ルーチン は Python 文字 列 を 引数 に 取る 必要 が あり 、 データ 変換 ルーチン PyString _ FromString () で 構築 し ます 。 
pFunc = PyObject _ GetAttrString ( pModule , argv [ 2 ]);/* pFunc は 新た な 参照 */ if ( pFunc PyCallable _ Check ( pFunc )) {...} Py _ XDECREF ( pFunc ); 
ひとたび スクリプト が 読み込ま れる と 、 PyObject _ GetAttrString () を 使っ て 必要 な 名前 を 取得 でき ます 。 
名前 が スクリプト 中 に 存在 し 、 取得 し た オブジェクト が 呼び出し 可能 オブジェクト で あれ ば 、 この オブジェクト が 関数 で ある と 考え て 差し支え ない でしょ う 。 
そこで プログラム は 定石 どおり に 引数 の タプル 構築 に 進み ます 。 
その後 、 Python 関数 を 以下 の コード で 呼び出し ます : 
関数 が 処理 を 戻す 際 、 pValue は NULL に なる か 、 関数 の 戻り 値 へ の 参照 が 入っ て い ます 。 
値 を 調べ た 後 に は 忘れ ず に 参照 を 解放 し て ください 。 
2 pure Python 配布 物 
単に 二つ の モジュール 、 特定 の パッケージ に 属し ない モジュール を 配布 する だけ なら 、 setup スクリプト 中 で py _ modules オプション を 使っ て 個別 に 指定 でき ます 。 もっとも 単純 な ケース で は 、 二つ の ファイル : setup スクリプト 自体 と 、 配布 し たい 単一 の モジュール 、 この 例 で は foo . py について 考え なけれ ば なり ませ ん : 
( この 節 の 全て の 図 において 、 root は 配布 物 ルート ディレクトリ を 参照 し ます 。 
) この 状況 を 扱う ため の 最小 の setup スクリプト は 以下 の よう に なり ます : 
配布 物 の 名前 は name オプション で 個々 に 指定 し 、 配布 さ れる モジュール の 一つ と 配布 物 を 同じ 名前 に する 必要 は ない こと に 注意 し て ください ( と は いえ 、 この 命名 方法 は よい なら わし でしょ う )。 
また 、 セットアップ スクリプト は 以下 の よう に なり ます ． 
モジュール の ソース ファイル は 他 の ディレクトリ に 置け ます が 、 そう し なけれ ば なら ない よう な モジュール を 沢山 持っ て いる の なら 、 モジュール を 個別 に 列挙 する より も パッケージ を 指定 し た 方 が 簡単 でしょ う 。 
二つ 以上 の モジュール を 配布 する 場合 、 とりわけ 二つ の パッケージ に 分かれ て いる 場合 、 おそらく 個々 の モジュール より も パッケージ 全体 を 指定 する 方 が 簡単 です 。 
たとえ モジュール が パッケージ 内 に 入っ て い なく て も 状況 は 同じ で 、 その 場合 は ルート パッケージ に モジュール が 入っ て いる と Distutils に 教える こと が でき 、 他 の パッケージ と 同様 に うまく 処理 さ れ ます ( ただし 、 __ init __. py が あっ て は なり ませ ん )。 最後 の 例 で 挙げ た setup スクリプト は 、 
の よう に も 書け ます ( 空文字 は ルート パッケージ を 意味 し ます ) これら 二つ の ファイル を サブ ディレクトリ 下 に 移動 し て おい て 、 インストール 先 は ルート パッケージ の まま に し て おき たい 、 例えば : 
の よう な 場合 に は 、 パッケージ 名 に は ルート パッケージ を そのまま 指定 し て おき ます が 、 ルート パッケージ に 置く ソース ファイル が どこ に ある か を Distutils に 教え なけれ ば なり ませ ん : 
もっと 典型 的 な ケース で は 、 複数 の モジュール を 同じ パッケージ ( または サブ パッケージ ) に 入れ て 配布 しよ う と 思う でしょ う 。 
例えば 、 foo と bar モジュール が パッケージ foobar に 属する 場合 、 ソース ツリー を レイアウト する 一案 として 、 以下 が 考え られ ます 。 
実際 、 Distutils で は これ を デフォルト の レイアウト として 想定 し て い て 、 setup スクリプト を 書く 際 に も 最小限 の 作業 しか 必要 あり ませ ん : 
モジュール を 入れる ディレクトリ を パッケージ の 名前 に し たく ない 場合 、 ここ でも package _ dir オプション を 使う 必要 が あり ます 。 
例えば 、 パッケージ foobar の モジュール が src に 入っ て いる と し ます : 
適切 な setup スクリプト は 、 
from distutils . core import setupsetup ( name =' foobar ', version =' 1 . 0 ', package _ dir ={' foobar ': ' src '}, packages =[' foobar '],) の よう に なる でしょ う 。 
また 、 メイン パッケージ 内 の モジュール を 配布 物 ルート 下 に 置く こと が ある かも しれ ませ ん : 
この 場合 、 setup スクリプト は 
from distutils . core import setupsetup ( name =' foobar ', version =' 1 . 0 ', package _ dir ={' foobar ': ''}, packages =[' foobar '],) の よう に なる でしょ う 。 
( 空文字 列 も 現在 の ディレクトリ を 表し ます 。 ) サブ パッケージ が ある 場合 、 packages で 明示 的 に 列挙 し なけれ ば なり ませ ん が 、 package _ dir は サブ パッケージ へ の パス を 自動的 に 展開 し ます 。 
( 別 の 言い方 を すれ ば 、 Distutils は ソース ツリー を 走査 せ ず 、 どの ディレクトリ が Python パッケージ に 相当 する の か を __ init __. py files . を 探し て 調べよ う と し ます 。 
) この よう に し て 、 デフォルト の レイアウト は サブ パッケージ 形式 に 展開 さ れ ます : 
対応 する setup スクリプト は 以下 の よう に なり ます 。 
( ここ でも 、 package _ dir を 空文字 列 に する と 現在 の ディレクトリ を 表し ます 。 
クラス 記述 オブジェクト は 、 readmodule () や readmodule ()_ ex が 返す 辞書 の 値 として 使わ れ て おり 、 以下 の データ メンバ を 提供 し て い ます 。 
クラス 記述 オブジェクト が 記述 し て いる 対象 の クラス を 定義 し て いる モジュール の 名前 です 。 
クラス の 名前 です 。 
クラス 記述 オブジェクト が 記述 しよ う と し て いる 対象 クラス の 、 直接 の 基底 クラス 群 について 記述 し て いる クラス 記述 オブジェクト の リスト です 。 
スーパクラス として 挙げ られ て いる が readmodule () が 見つけ られ なかっ た クラス は 、 クラス 記述 オブジェクト で は なく クラス 名 として リスト に 挙げ られ ます 。 
メソッド 名 を 行 番号 に 対応付ける 辞書 です 。 
クラス を 定義 し て いる class 文 が 入っ て いる ファイル の 名前 です 。 
file で 指定 さ れ た ファイル 内 に ある class 文 の 数 です 。 
readmodule _ ex () の 返す 辞書 内 で キー に 対応 する 値 として 使わ れ て いる 関数 記述 オブジェクト は 、 以下 の データ メンバ を 提供 し て い ます : 
関数 記述 オブジェクト が 記述 し て いる 対象 の 関数 を 定義 し て いる モジュール の 名前 です 。 
関数 の 名前 です 。 
関数 を 定義 し てる def 文 が 入っ て いる ファイル の 名前 です 。 
file で 指定 さ れ た ファイル 内 に ある def 文 の 数 です 。 
この ドキュメント を 読ん で いる の なら 、 モジュール ( module )、 拡張 モジュール ( extension ) など が 何 を 表す の か を よく 知っ て いる かも しれ ませ ん 。 
と は いえ 、 読者 が みな 共通 の スタート ポイント に 立っ て Distutils の 操作 を 始め られる よう に 、 ここ で 一般 的 な Python 用語 について 以下 の よう な 用語 集 を 示し て おき ます : 
モジュール ( module ) 
Python において コード を 再 利用 する 際 の 基本 単位 : すなわち 、 他 の コード から import さ れる ひとかたまり の コード です 。 
ここ で は 、 三 種類 の モジュール : pure Python モジュール 、 拡張 モジュール 、 パッケージ が 関わっ て き ます 。 
pure Python モジュール 
Python で 書か れ 、 単一 の . py ファイル 内 に 収め られ た モジュール です (. pyc かつ / または . pyo ファイル と 関連 が あり ます ) 。 
`` pure モジュール ( pure module )'' と 呼ば れる こと も あり ます 。 
拡張 モジュール ( extension module ) 
( 現状 で は 、 Distutils は Python 向け の C / C ++ 拡張 モジュール しか 扱わ ない ので 注意 し て ください 。 ) 
パッケージ ( package ) 
他 の モジュール が 入っ て いる モジュール です ; 通常 、 ファイル システム 内 の ある ディレクトリ に 収め られ 、 __ init __. py が 入っ て いる こと で 通常 の ディレクトリ と 区別 でき ます 。 
ルート パッケージ ( root package ) 
階層 的 な パッケージ の 根 ( root ) の 部分 にあたる パッケージ です 。 
( この 部分 に は __ init __. py ファイル が ない ので 、 本当 の パッケージ で は あり ませ ん が 、 便宜上 そう 呼び ます 。 
) 標準 ライブラリ の 大 部分 は ルート パッケージ に 入っ て い ます 、 また 、 多く の 小規模 な 単体 の サードパーティモジュール で 、 他 の 大 規模 な モジュール コレクション に 属し て い ない もの も ここ に 入り ます 。 
正規 の パッケージ と 違い 、 ルート パッケージ 上 の モジュール の 実体 は 様々 な ディレクトリ に あり ます : 実際 は 、 sys . path に 列挙 さ れ て いる ディレクトリ 全て が 、 ルート パッケージ に 配置 さ れる モジュール の 内容 に 影響 し ます 。 
3 . Python ラン タイム サービス 
この 章 で は 、 Python インタープリタ や Python 環境 に 深く 関連 する 各種 の 機能 を 解説 し ます 。 
以下 に 一覧 を 示し ます : 
システム パラメータ と 関数 へ の アクセス 
循環 検出 ガベージコレクタ の インターフェース 。 
弱 参照 と 弱 辞書 の サポート 。 
浮動 小数点 例外 処理 の 制御 。 
後始末 関数 の 登録 と 実行 。 
組み込み 型 の 名前 
辞書 オブジェクト の ため の クラスラッパー 。 
リスト オブジェクト の ため の クラスラッパー 。 
文字 列 オブジェクト の ため の クラスラッパー 。 
組み込み 関数 形式 に なっ て いる 全て の Python の 標準 演算 子 。 
使用 中 の オブジェクト から 、 情報 と ソース コード を 取得 する 。 
スタック トレース の 表示 や 取り出し 。 
この モジュール により テキストファイル の 各行 に ランダムアクセス でき ます 。 
Python オブジェクト から バイト ストリーム へ の 変換 、 および その 逆 。 
pickle サポート 関数 を 登録 する 。 
Python オブジェクト の 永続 化 。 
浅い コピー および 深い コピー 操作 。 
Python オブジェクト を バイト 列 に 変換 し たり 、 その 逆 を ( 異なる 拘束 条件下 で ) 行い ます 。 
警告 メッセージ を 送出 し たり 、 その 処理 方法 を 制御 し たり し ます 。 
import 文 の 実装 へ アクセス する 。 
パッケージ の 拡張 を サポート する ユーティリティ です 。 
対話 的 Python インタプリタ の ため の 基底 クラス 。 
( 完全 で は ない かも しれ ない ) Python コード を コンパイル する 。 
大き さ に 制限 の ある 別 の repr () の 実装 。 
ラン タイム 実装 オブジェクト の 作成 の インター フェイス 。 
サイト 固有 の モジュール を 参照 する 標準 の 方法 。 
ユーザー 設定 を 参照 する ため の 標準 的 な 方法 を 提供 する モジュール 
組み込み 関数 一式 
トップ レベル スクリプト が 実行 さ れる 環境 。 
Future ステートメント の 定義 
PyZipFile コンス トラクタ は ZipFile コンス トラクタ と 同じ パラメタ を 必要 と し ます 。 
インスタンス は ZipFile の メソッド の 他 に 、 追加 の メソッド を 一つ 持ち ます 。 
*. py ファイル を 探し 、 *. py ファイル に 対応 する ファイル を アーカイブ に 追加 し ます 。 
対応 する ファイル と は 、 もし あれ ば *. pyo で あり 、 そう で なけれ ば *. pyc で 、 必要 に 応じ て *. py から コンパイル し ます 。 
もし pathname が ファイル なら 、 ファイル 名 は . py で 終わっ て い なけれ ば なり ませ ん 。 また 、 (*. py に 対応 する *. py [ co ]) ファイル は アーカイブ の トップ レベル に ( パス 情報 なし で ) 追加 さ れ ます 。 
もし pathname が ディレクトリ で 、 ディレクトリ が パッケージ ディレクトリ で ない なら 、 全て の *. py [ co ] ファイル は トップ レベル に 追加 さ れ ます 。 
もし ディレクトリ が パッケージ ディレクトリ なら 、 全て の *. py [ co ] ファイル は パッケージ 名 の 名前 を もつ ファイル パス の 下 に 追加 さ れ ます 。 サブ ディレクトリ が パッケージ ディレクトリ なら 、 それら は 再帰 的 に 追加 さ れ ます basename は クラス 内部 で の 呼び出し に 使用 する ため の もの です 。 
writepy () メソッド は 以下 の よう な ファイル 名 を 持っ た アーカイブ を 生成 し ます 。 
式 を 伴わ ない 場合 、 raise は 現在 の スコープ で 最終 的 に 有効 に なっ て いる 式 を 再 送出 し ます 。 
その よう な 式 が 現在 の スコープ に 全く ない 場合 、 エラー を 示す 例外 が 送出 さ れ ます 。 
この よう に し て コンス トラクタ を 呼び出し て 生成 し た インスタンス が 例外 の 値 に なり ます 。 第 三 の オブジェクト が 存在 し 、 かつ None で なけれ ば 、 オブジェクト は トレース バック 
オブジェクト で なけれ ば なり ませ ん ( 3 . 2 節 参照 )。 また 、 例外 が 発生 し た 場所 は 現在 の 処理 位置 に 置き換え られ ます 。 
第 三 の オブジェクト が 存在 し 、 オブジェクト が トレースバックオブジェクト で も None で も なけれ ば 、 TypeError 例外 が 送出 さ れ ます 。 
コンパイル さ れ た 正規 表現 オブジェクト は 、 以下 の メソッド と 属性 を サポート し ます ： 
もし string の 先頭 の 0 個 以上 の 文字 が この 正規 表現 と マッチ すれ ば 、 対応 する MatchObject インスタンス を 返し ます 。 
もし 文字 列 が パタンー と マッチ し なけれ ば 、 None を 返し ます ； これ は 長 さ ゼロ の マッチ と は 異なる こと に 注意 し て 下さい 。 
注意 : も し マッチ を string の どこ か に 位置付け たけれ ば 、 代わり に search () を 使っ て 下さい 。 
省略 可能 な 第 2 の パラメータ pos は 、 文字 列 内 の 検索 を 始める インデッスク を 与え ます ； デフォールト で は 0 です 。 
これ は 、 文字 列 の スライシング と 完全 に 同じ 意味 だ という わけ で は あり ませ ん ； '^' パターン 文字 は 、 文字 列 の 実際 の 先頭 と 改行 の 直後 と マッチ し ます が 、 それ が 必ずしも 検索 が 開始 する インデックス で ある わけ で は ない から です 。 省略 可能 な パラメータ endpos は 、 どこ まで 文字 列 が 検索 さ れる か を 制限 し ます ； あたかも その 文字 列 が endpos 文字 長 で ある か の よう に し ます ので 、 pos から 
endpos - 1 まで の 文字 が 、 マッチ の ため に 検索 さ れ ます 。 
もし endpos が pos より 小さけれ ば 、 マッチ は 見つかり ませ ん が 、 そう で なく て 、 もし rx が コンパイル さ れ た 正規 表現 オブジェクト で あれ ば 、 
rx . match ( string , 0 , 50 ) は 
rx . match ( string [: 50 ], 0 ) と 同じ 意味 に なり ます 。 
string 全体 を 走査 し て 、 この 正規 表現 が マッチ する 位置 を 探し て 、 対応 する MatchObject インスタンス を 返し ます 。 
もし 文字 列 内 に パターン と マッチ する 位置 が ない なら ば 、 None を 返し ます ； これ は 文字 列 内 の ある 点 で 長 さ ゼロ の マッチ を 探す こと と は 異なる こと に 注意 し て 下さい 。 省略 可能 な pos と endpos パラメータ は 、 match () メソッド の もの と 同じ 意味 を 持ち ます 。 
split () 関数 と 同様 で 、 コンパイル し た パターン を 使い ます 。 
findall () 関数 と 同様 で 、 コンパイル し た パターン を 使い ます 。 
finditer () 関数 と 同様 で 、 コンパイル し た パターン を 使い ます 。 
sub () 関数 と 同様 で 、 コンパイル し た パターン を 使い ます 。 
subn () 関数 と 同様 で 、 コンパイル し た パターン を 使い ます 。 
flags 引数 は 、 RE オブジェクト が コンパイル さ れ た とき 使わ れ 、 もし flags が 何 も 提供 さ れ なけれ ば 0 です 。 
(? Pid ) で 定義 さ れ た 任意 の 記号 グループ 名 の 、 グループ 番号 へ の 辞書 マッピング です 。 
もし 記号 グループ が パターン 内 で 何 も 使わ れ て い なけれ ば 、 辞書 は 空 です 。 
RE オブジェクト が それ から コンパイル さ れ た パターン 文字 列 です 。 
一般 的 に 、 文字 列 p が A と マッチ し 、 別 の 文字 列 q が B と マッチ すれ ば 、 文字 列 pq は AB に マッチ し ます 。 
ただし 、 この 状況 が 成り立つ の は 、 A と B と の 間 に 境界 条件 が ある 場合 や 、 番号 付け さ れ た グループ 参照 の よう な 、 優先 度 の 低い 演算 を A や B が 含ま ない 場合 だけ です 。 
かくして 、 ここ で 述べる よう な 、 より 簡単 で プリミティブ な 正規 表現 から 、 複雑 な 正規 表現 を 容易 に 構築 でき ます 。 
正規 表現 に関する 理論 と 実装 の 詳細 について は 上記 の Friedl 本 か 、 コンパイラ の 構築 に関する 教科書 を 調べ て 下さい 。 以下 で 正規 表現 の 形式 に関する 簡単 な 説明 を し て おき ます 。 
通常 の 文字 は 連結 できる ので 、 last は 文字 列 ' last ' と マッチ し ます 。 
( この 節 の 以降 の 説明 で は 、 正規 表現 を 引用 符 を 使わ ず に この 表示 スタイル : special style で 書き 、 マッチ 対象 の 文字 列 は 、 ' 引用 符 で 括っ て ' 書き ます 。 
)"|" や "(" といった いくつ か の 文字 は 特殊 文字 です 。 特殊 文字 は 通常 の 文字 の 種別 を 表し たり 、 あるいは 特殊 文字 の 周辺 に ある 通常 の 文字 に対する 解釈 方法 に 影響 し ます 。 
特殊 文字 を 以下 に 示し ます : 
"." ( ドット ) デフォルト の モード で は 改行 以外 の 任意 の 文字 に マッチ し ます 。 
DOTALL フラグ が 指定 さ れ て いれ ば 改行 も 含む すべて の 文字 に マッチ し ます 。 
( キャレット ) 文字 列 の 先頭 と マッチ し ます 。 
MULTILINE モード で は 各 改行 の 直後 に マッチ し ます 。 
興味深い こと に 、 ' foo 1 nfoo 2 n ' を foo .$ で 検索 し た 場合 、 通常 の モード で は ' foo 2 ' だけ に マッチ し 、 MULTILINE モード で は ' foo 1 ' に も マッチ し ます 。 
直前 に ある RE に 作用 し て 、 RE を 0 回 以上 できるだけ 多く 繰り返し た もの に マッチ さ せる よう に し ます 。 
例えば ab * は ' a '、' ab '、 あるいは ' a ' に 任意 個数 の ' b ' を 続け た もの に マッチ し ます 。 "+" 
直前 に ある RE に 作用 し て 、 RE を 、 1 回 以上 繰り返し た もの に マッチ さ せる よう に し ます 。 
例えば ab + は ' a ' に 一つ 以上 の ' b ' が 続い た もの に マッチ し 、 ' a ' 単体 に は マッチ し ませ ん 。 "?" 
直前 に ある RE に 作用 し て 、 RE を 0 回 か 1 回 繰り返し た もの に マッチ さ せる よう に し ます 。 
例えば ab ? は ' a ' あるいは ' ab ' に マッチ し ます 。 *?, +?, ?? 
"*"、"+"、 "?" といった 修飾 子 は 、 すべて 貪欲 ( greedy ) マッチ 、 すなわち できるだけ 多く の テキスト に マッチ する よう に なっ て い ます 。 
時に は この 動作 が 望ましく ない 場合 も あり ます 。 例えば 正規 表現 .* を ' H 1 title / H 1 ' に マッチ さ せる と 、 ' H 1 ' だけ に マッチ する の で は なく 全 文字 列 に マッチ し て しまい ます 。 
"?" を 修飾 子 の 後 に 追加 する と 、 非 貪欲 ( non - greedy ) あるいは 最小 一致 ( minimal ) の マッチ に なり 、 できるだけ 少ない 文字数 の マッチ に なり ます 。 
例えば 上 の 式 で .*? を 使う と ' H 1 ' だけ に マッチ し ます 。 
前 に ある RE の m 回 の 正確 な コピー と マッチ す べき で ある こと を 指定 し ます ； マッチ 回数 が 少なけれ ば 、 RE 全体 で は マッチ し ませ ん 。 
例えば 、 a { 6 } は 、 正確 に 6 個 の " a " 文字 と マッチ し ます が 、 5 個 で は マッチ し ませ ん 。 
結果 の RE は 、 前 に ある RE を 、 m 回 から n 回 まで 繰り返し た もの で 、 できるだけ 多く 繰り返し た もの と マッチ する よう に 、 マッチ し ます 。 
例えば 、 a { 3 , 5 } は 、 3 個 から 5 個 の " a " 文字 と マッチ し ます 。 
m を 省略 する と マッチ 回数 の 下限 として 0 を 指定 し た 事 に なり 、 n を 省略 する こと は 、 上限 が 無限 で ある こと を 指定 し ます ； a { 4 ,} b は aaaab や 、 千 個 の " a " 文字 に b が 続い た もの と マッチ し ます が 、 aaab と は マッチ し ませ ん 。 
コンマ は 省略 でき ませ ん 、 そう で ない と 修飾 子 が 上 で 述べ た 形式 と 混同 さ れ て しまう から です 。 
結果 の RE は 、 前 に ある RE の m 回 から n 回 まで 繰り返し た もの で 、 できるだけ 少なく 繰り返し た もの と マッチ する よう に 、 マッチ し ます 。 
これ は 、 前 の 修飾 子 の 控え目 バージョン です 。 
例えば 、 6 文字 文字 列 ' aaaaaa ' で は 、 a { 3 , 5 } は 、 5 個 の " a " 文字 と マッチ し ます が 、 a { 3 , 5 }? は 3 個 の 文字 と マッチ する だけ です 。 
特殊 文字 を エスケープ する ("*" や "?" 等 の よう な 文字 と の マッチ を できる よう に する ) か 、 あるいは 、 特殊 シーケンス の 合図 です ; 特殊 シーケンス は 後で 議論 し ます 。 もし パターン を 表現 する のに raw string を 使用 し て い ない の で あれ ば 、 Python も 、 バックス ラッシュ を 文字 列 リテラル で の エスケープ シーケンス として 使っ て いる こと を 覚え て い て 下さい ； もし エスケープ シーケンス を Python の 構文 解析 器 が 認識 し て 処理 し なけれ ば 、 その バックス ラッシュ と それ に 続く 文字 は 、 結果 の 文字 列 に そのまま 含ま れ ます 。 
しかし 、 もし Python が 結果 の シーケンス を 認識 する の で あれ ば 、 バックス ラッシュ を 2 回 繰り返さ なけれ ば いけ ませ ん 。 
この こと は 複雑 で 理解 し にくい ので 、 最も 簡単 な 表現 以外 は 、 すべて raw string を 使う こと を ぜひ 勧め ます 。 
文字 の 集合 を 指定 する の に 使用 し ます 。 
文字 は 個々 に リスト する か 、 文字 の 範囲 を 、 2 つ の 文字 と "-" で それら を 分離 し て 指定 する こと が でき ます 。 
特殊 文字 は 集合 内 で は 有効 で は あり ませ ん 。 
例えば 、 [ akm $] は 、 文字 " a "、" k "、" m "、 あるいは "$" の どれ か と マッチ し ます ； [ a - z ] は 、 任意 の 小文字 と 、 [ a - zA - Z 0 - 9 ] は 、 任意 の 文字 や 数字 と マッチ し ます 。 
( 以下 で 定義 する ) w や S の よう な 文字 クラス も 、 範囲 に 含める こと が でき ます 。 
もし 文字 集合 に "]" や "-" を 含め たい の なら 、 その 前 に バックス ラッシュ を 付ける か 、 それ を 最初 の 文字 として 指定 し ます 。 たとえば 、 パターン []] は ']' と マッチ し ます 。 
範囲 内 に ない 文字 と は 、 その 集合 の 補 集合 を とる こと で マッチ する こと が でき ます 。 
これ は 、 集合 の 最初 の 文字 として "^" を 含める こと で 表す こと が でき ます ； 他 の 場所 に ある "^" は 、 単純 に "^" 文字 と マッチ する だけ です 。 
例えば 、 [^ 5 ] は 、 " 5 " 以外 の 任意 の 文字 と マッチ し 、 [^^] は 、 "^" 以外 の 任意 の 文字 と マッチ し ます 。 
A | B は 、 ここ で A と B は 任意 の RE です が 、 A か B の どちら か と マッチ する 正規 表現 を 作成 し ます 。 任意 個数 の RE を 、 こういう 風 に "|" で 分離 する こと が でき ます 。 
これ は グループ ( 以下 参照 ) 内部 でも 同様 に 使え ます 。 
検査 対象 文字 列 を スキャン する 中 で 、 "|" で 分離 さ れ た RE は 左 から 右 へ の 順 に 検査 さ れ ます 。 
一つ でも 完全 に マッチ し た パターン が あれ ば 、 その パターン 枝 が 受理 さ れ ます 。 この こと は 、 もし A が マッチ すれ ば 、 たとえ B による マッチ が 全体 として より 長い マッチ に なっ た として も 、 B を 決して 検査 し ない こと を 意味 し ます 。 
言い かえる と 、 "|" 演算 子 は 決して 貪欲 ( greedy ) で は あり ませ ん 。 
文字通り の "|" と マッチ する に は 、 | を 使う か 、 あるいは それ を [|] の よう に 文字 クラス 内 に 入れ ます 。 
丸 括弧 の 中 に どの よう な 正規 表現 が あっ て も マッチ し 、 また グループ の 先頭 と 末尾 を 表し ます ； グループ の 中身 は 、 マッチ が 実行 さ れ た 後 に 検索 さ れ 、 後述 する number 
特殊 シーケンス 付き の 文字 列 内 で 、 後で マッチ さ れ ます 。 
文字通り の "(" や ")" と マッチ する に は 、 ( あるいは ) を 使う か 、 それら を 文字 クラス 内 に 入れ ます ： [(] [)]。 
これ は 拡張 記法 です ( "(" に 続く "?" は 他 に は 意味 が あり ませ ん )。 
( 集合 " i "、" L "、" m "、 " s "、" u "、" x " から 1 文字 以上 )。 
グループ は 空文字 列 とも マッチ し ます ； 文字 は 、 正規 表現 全体 の 対応 する フラグ ( re . I 、 re . L 、 re . M 、 re . S 、 re . U 、 re . X ) を 設定 し ます 。 
もし この フラグ の 前 に 非 空白 文字 が ある と 、 その 結果 は 未定義 です 。 
(?:...) 正規 表現 の 丸 括弧 の 非 グループ 化 バージョン です 。 
どの よう な 正規 表現 が 丸 括弧 内 に あっ て も マッチ し ます が 、 グループ によって マッチ さ れ た サブ 文字 列 は 、 マッチ を 実行 し た あと 検索 さ れる こと も 、 あるいは 後で パターン で 参照 さ れる こと も でき ませ ん 。 
正規 表現 の 丸 括弧 と 同様 です が 、 グループ によって マッチ さ れ た サブ 文字 列 は 、 記号 グループ 名 name を 介し て アクセス でき ます 。 
グループ 名 は 、 正しい Python 識別子 で なけれ ば なら ず 、 各 グループ 名 は 、 正規 表現 内 で 一 度 だけ 定義 さ れ なけれ ば なり ませ ん 。 
記号 グループ は 、 グループ に 名前 が 付け られ て い ない 場合 の よう に 、 番号 付け さ れ た グループ で も あり ます 。 
そこで 上 の 例 で ' id ' という 名前 が つい た グループ は 、 番号 グループ 1 として 参照 する こと も でき ます 。 たとえば 、 もし パターン が (? Pid [ a - zA - Z _] w *) で あれ ば 、 この グループ は 、 マッチ オブジェクト の メソッド へ の 引数 に 、 m . group (' id ') あるいは m . end (' id ') の よう な 名前 で 、 また パターン テキスト 内 ( 例えば 、 (? P = id )) や 置換 テキスト 内 ( gid の よう に ) で 名前 で 参照 する こと が でき ます 。 
前 に name と 名前 付け さ れ た グループ に マッチ し た 、 いかなる テキスト に も マッチ し ます 。 
コメント です ； 括弧 の 内容 は 単純 に 無視 さ れ ます 。 
もし ... が 次に 続く もの と マッチ すれ ば マッチ し ます が 、 文字 列 を まったく 消費 し ませ ん 。 
これ は 先読み アサーション ( lookahead assertion ) と 呼ば れ ます 。 
例えば 、 Isaac (?= Asimov ) は 、 ' Isaac ' に ' Asimov ' が 続く 場合 だけ 、 ' Isaac ' と マッチ し ます 。 
もし ... が 次に 続く もの と マッチ し なけれ ば マッチ し ます 。 
これ は 否定 先読み アサーション ( negative lookahead assertion ) です 。 
例えば 、 Isaac (?! Asimov ) は 、 ' Isaac ' に ' Asimov ' が 続か ない 場合 のみ マッチ し ます 。 
もし 文字 列 内 の 現在 位置 の 前 に 、 現在 位置 で 終わる ... と の マッチ が あれ ば 、 マッチ し ます 。 
これ は 肯定 後 読み アサーション ( positive lookbehind assertion ) と 呼ば れ ます 。 (?= abc ) def は 、 " abcdef " に マッチ を 見つけ ます 、 という の は 後 読み が 3 文字 を バックアップ し て 、 含ま れ て いる パターン と マッチ する か どう か 検査 する から です 。 
含ま れる パターン は 、 固定 長 の 文字 列 に のみ マッチ し なけれ ば なり ませ ん 、 という こと は 、 abc や a | b は 許さ れ ます が 、 a * や a { 3 , 4 } は 許さ れ ない こと を 意味 し ます 。 
肯定 後 読み アサーション で 始まる パターン は 、 検索 さ れる 文字 列 の 先頭 と は 決して マッチ し ない こと に 注意 し て 下さい ； 多分 、 match () 関数 より は search () 関数 を 使い たい でしょ う ： 
この 例 で は ハイフン に 続く 単語 を 探し ます ： 
もし 文字 列 内 の 現在 位置 の 前 に ... と の マッチ が ない なら ば 、 マッチ し ます 。 
これ は 否定 後 読み アサーション ( negative lookbehind assertion ) と 呼ば れ ます 。 
肯定 後 読み アサーション と 同様 に 、 含ま れる パターン は 固定 長 さ の 文字 列 だけ に マッチ し なけれ ば いけ ませ ん 。 
否定 後 読み アサーション で 始まる パターン は 、 検索 さ れる 文字 列 の 先頭 と マッチ する こと が でき ます 。 
特殊 シーケンス は "" と 以下 の リスト に ある 文字 から 構成 さ れ ます 。 
もし リスト に ある の が 通常 文字 で ない なら ば 、 結果 の RE は 2 番目 の 文字 と マッチ し ます 。 
例えば 、 $ は 文字 "$" と マッチ し ます 。 
同じ 番号 の グループ の 中身 と マッチ し ます 。 
グループ は 1 から 始まる 番号 を つけ られ ます 。 
例えば 、 (.+) 1 は 、 ' the the ' あるいは ' 55 55 ' と マッチ し ます が 、 ' the end ' と は マッチ し ませ ん ( グループ の 後 の スペース に 注意 し て 下さい )。 
この 特殊 シーケンス は 最初 の 99 グループ の うち の 一つ と マッチ する の に 使う こと が できる だけ です 。 
もし number の 最初 の 桁 が 0 で ある 、 すなわち number が 3 桁 の 8 進数 で あれ ば 、 それ は グループ の マッチ と は 解釈 さ れ ず 、 8 進 数値 number を 持つ 文字 として 解釈 さ れ ます 。 
文字 クラス の "[" と "]" の 中 の 数値 エスケープ は 、 文字 として 扱わ れ ます 。 A 
文字 列 の 先頭 だけ に マッチ し ます 。 
空文字 列 と マッチ し ます が 、 単語 の 先頭 か 末尾 の 時 だけ です 。 
単語 は 英数字 あるいは 下線 文字 の 並ん だ もの として 定義 さ れ て い ます ので 、 単語 の 末尾 は 空白 あるいは 非 英数字 、 非 下線 文字 によって 表さ れ ます 。 
b は 、 w と W の 間 の 境界 として 定義 さ れ て いる ので 、 英数字 で ある と 見なさ れる 文字 の 正確 な 集合 は 、 UNICODE と LOCALE フラグ の 値 に 依存 する こと に 注意 し て 下さい 。 
文字 の 範囲 の 中 で は 、 b は 、 Python の 文字 列 リテラル と 互換 性 を 持た せる ため に 、 後退 ( backspace ) 文字 を 表し ます 。 
空文字 列 と マッチ し ます が 、 それ が 単語 の 先頭 あるいは 末尾 に ない 時 だけ です 。 
これ は b の ちょうど 反対 です ので 、 LOCALE と UNICODE の 設定 に も 影響 さ れ ます 。 
任意 の 十 進数 と マッチ し ます ； これ は 集合 [ 0 - 9 ] と 同じ 意味 です 。 
任意 の 非 数字 文字 と マッチ し ます ； これ は 集合 [^ 0 - 9 ] と 同じ 意味 です 。 
任意 の 空白 文字 と マッチ し ます ； これ は 集合 [ tnrfv ] と 同じ 意味 です 。 
任意 の 非 空白 文字 と マッチ し ます ； これ は 集合 [^ tnrfv ] と 同じ 意味 です 。 
LOCALE と UNICODE フラグ が 指定 さ れ て い ない 時 は 、 任意 の 英 数 文字 および 下線 と マッチ し ます ； これ は 、 集合 [ a - zA - Z 0 - 9 _] と 同じ 意味 です 。 
LOCALE が 設定 さ れ て いる と 、 集合 [ 0 - 9 _] プラス 現在 の ロ ケール 用 に 英数字 として 定義 さ れ て いる 任意 の 文字 と マッチ し ます 。 
もし UNICODE が 設定 さ れ て いれ ば 、 文字 [ 0 - 9 _] プラス Unicode 文字 特性 データベース で 英数字 として 分類 さ れ て いる もの と マッチ し ます 。 
LOCALE と UNICODE フラグ が 指定 さ れ て い ない 時 、 任意 の 非 英 数 文字 と マッチ し ます ； これ は 集合 [^ a - zA - Z 0 - 9 _] と 同じ 意味 です 。 
LOCALE が 指定 さ れ て いる と 、 集合 [ 0 - 9 _] に なく 、 現在 の ロ ケール で 英数字 として 定義 さ れ て い ない 任意 の 文字 と マッチ し ます 。 もし UNICODE が セット さ れ て いれ ば 、 これ は [ 0 - 9 _] および Unicode 文字 特性 データベース で 英数字 として 表さ れ て いる 文字 以外 の もの と マッチ し ます 。 
文字 列 の 末尾 と の み マッチ し ます 。 
+ Python 文字 列 リテラル によって サポート さ れ て いる 標準 エスケープ の ほとんど も 、 正規 表現 パーザ に 認識 さ れ ます ： 
8 進 エスケープ は 制限 さ れ た 形式 で 含ま れ て い ます ： もし 第 1 桁 が 0 で ある か 、 もし 8 進 3 桁 で あれ ば 、 それ は 8 進 エスケープ と みなさ れ ます 。 
そう で なけれ ば 、 それ は グループ 参照 です 。 
文字 列 リテラル について 、 8 進 エスケープ は ほとんど の 場合 3 桁 長 に なり ます 。 
以下 の 例 で は 、 ユーザ の ホーム ディレクトリ に ある . pyhist という 名前 の ヒストリ ファイル を 自動的 に 読み書き する ため に 、 readline モジュール による ヒストリ の 読み書き 関数 を どの よう に 使う か を 例示 し て い ます 。 
以下 の ソース コード は 通常 、 対話 セッション の 中 で PYTHONSTARTUP ファイル から 読み込ま れ 自動的 に 実行 さ れる こと に なり ます 。 
次 の 例 で は code . InteractiveConsole クラス を 拡張 し 、 ヒストリ の 保存 ・ 復旧 を サポート し ます 。 
Python ライブラリ リファレンス 
Python / C API の 各 関数 における 参照 カウント の 振る舞い は 、 説明 する に は 、 参照 の 所有 権 ( ownership of references ) という 言葉 で うまく 説明 でき ます 。 
所有 権 は 参照 に対する もの で 、 オブジェクト に対する もの で は あり ませ ん ( オブジェクト は 誰 に も 所有 さ れ ず 、 常に 共有 さ れ て い ます )。 
ある 参照 の " 所有 " は 、 その 参照 が 必要 なくなっ た 時点 で Py _ DECREF () を 呼び出す 役割 を 担う こと を 意味 し ます 。 
逆 に 、 ある 関数 呼び出し で 、 ある オブジェクト へ の 参照 を 呼び出さ れる 関数 に 渡す 際 に は 、 二つ の 可能 性 : 関数 が オブジェクト へ の 参照 を 盗み 取る ( steal ) 場合 と 、 そう で ない 場合 が あり ます 。 
参照 を 盗み 取る 関数 は ほとんど あり ませ ん ; 例外 として よく 知ら れ て いる の は 、 PyList _ SetItem () 
と PyTuple _ SetItem () 
で 、 これら は シーケンス に 入れる 要素 に対する 参照 を 盗み 取り ます ( しか し 、 要素 の 入る 先 の タプル や リスト の 参照 は 盗み 取り ませ ん !)。 
これら の 関数 は 、 リスト や タプル の 中 に 新た に 作成 さ れ た オブジェクト を 入れ て いく 際 の 常套 的 な 書き方 を し やすく する ため に 、 参照 を 盗み 取る よう に 設計 さ れ て い ます ; 例えば 、 ( 1 , 2 , " three ") という タプル を 生成 する コード は 以下 の よう に なり ます ( とりあえず 例外 処理 の こと は 忘れ て おき ます ; もっと よい 書き方 を 後で 示し ます ): 
ちなみに 、 PyTuple _ SetItem () は タプル に 値 を セット する ため の 唯一 の 方法 です ; タプル は 変更 不能 な データ 型 な ので 、 PySequence _ SetItem () や PyObject _ SetItem () を 使う と 上 の 操作 は 拒否 さ れ て しまい ます 。 
自分 で タプル の 値 を 入れ て いく つもり なら 、 PyTuple _ SetItem () だけ しか 使え ませ ん 。 
同じく 、 リスト に 値 を 入れ て いく コード は PyList _ New () と PyList _ SetItem () で 書け ます 。 
この コード は 以下 の よう に PySequence _ SetItem () を 使っ て も 書け ます ; これ を 見れ ば 、 二つ の 違い ( Py _ DECREF () を 別に 呼び出し て いる ) が 分かり ます : 
`` 推奨 さ れ て いる '' アプローチ の ほう が 、 コード 量 が 多い ので 奇妙 に 思う かも しれ ませ ん ね 。 
しかし 実際 に は 、 タプル や リスト を 生成 し て 値 を 入れる 際 に は 、 上記 の よう な 方法 は ほとんど 使い ませ ん 。 
より 汎用 性 の ある 関数 、 Py _ BuildValue () が あり 、 ほとんど の 主要 な オブジェクト を フォーマット 文字 列 format string の 指定 に 基づい て C の 値 から 生成 でき ます 。 
例えば 、 上 の 二 種類 の コード ブロック は 、 以下 の よう に 置き換え られ ます ( エラー チェック に も 配慮 し て い ます ): 
自作 の 関数 に 渡す 引数 の よう に 、 単に 参照 を 借りる だけ の 要素 に対して は 、 PyObject _ SetItem () と その 仲間 を 使う の が はるか に 一般 的 です 。 
その 場合 、 参照 カウント を インクリメント する 必要 が なく 、 参照 を 引き渡せる (`` 参照 を 盗み 取らせ られる '') ので 、 参照 カウント に関する 動作 は より 健全 に なり ます 。 
例えば 、 以下 の 関数 は 与え られ た 要素 を リスト 中 の 全て の 要素 の 値 に セット し ます : 
関数 の 戻り 値 の 場合 に は 、 状況 は 少し 異なり ます 。 
ほとんど の 関数 について は 、 参照 を 渡し て も その 参照 に対する 所有 権 が 変わる こと が ない 一方 で 、 ある オブジェクト に対する 参照 を 返す よう な 多く の 関数 は 、 参照 に対する 所有 権 を 呼び出し 側 に 与え ます 。 理由 は 簡単 です : 多く の 場合 、 関数 が 返す オブジェクト は その 場 で ( on the fly ) 生成 さ れる ため 、 呼び出し 側 が 得る 参照 は 生成 さ れ た オブジェクト に対する 唯一 の 参照 に なる から です 。 
従って 、 PyObject _ GetItem () や PySequence _ GetItem () の よう に 、 オブジェクト に対する 参照 を 返す 汎用 の 関数 は 、 常に 新た な 参照 を 返し ます ( 呼び出し 側 が 参照 の 所有 者 に なり ます )。 
重要 な の は 、 関数 が 返す 参照 の 所有 権 を 持てる か どう か は 、 どの 関数 を 呼び出す か だけ による 、 と 理解 する こと です -- 関数 呼び出し 時 の お飾り ( 関数 に 引数 として 渡し た オブジェクト の 型 ) は この 問題 に は 関係 あり ませ ん ! 従っ て 、 PyList _ GetItem () を 使っ て リスト 内 の 要素 を 得 た 場合 に は 、 参照 の 所有 者 に は なり ませ ん -- が 、 同じ 要素 を 同じ リスト から PySequence _ GetItem () ( 図ら ず も この 関数 は 全く 同じ 引数 を とり ます ) を 使っ て 取り出す と 、 返さ れ た オブジェクト に対する 参照 を 得 ます 。 以下 は 、 整数 から なる リスト に対して 各 要素 の 合計 を 計算 する 関数 を どの よう に し て 書ける か を 示し た 例 です ; 一つ は PyList _ GetItem () 
を 使っ て い て 、 もう 一つ は PySequence _ GetItem () 
を 使っ て い ます 。 
longsum _ list ( PyObject * list ){ int i , n ; long total = 0 ; PyObject * item ; n = PyList _ Size ( list ); if ( n 0 ) return - 1 ; /* リスト で は ない */ for ( i = 0 ; i n ; i ++) { item = PyList _ GetItem ( list , i ); /* 失敗 し ない はず */ if (! PyInt _ Check ( item )) continue ; /* 整数 で なけれ ば 読み 飛ばす */ total += PyInt _ AsLong ( item );} return total ;} 
longsum _ sequence ( PyObject * sequence ){ int i , n ; long total = 0 ; PyObject * item ; n = PySequence _ Length ( sequence ); if ( n 0 ) return - 1 ; /* 長 さ の 概念 が ない */ for ( i = 0 ; i n ; i ++) { item = PySequence _ GetItem ( sequence , i ); if ( item == NULL ) return - 1 ; /* シーケンス で ない か 、 その他 の 失敗 */ if ( PyInt _ Check ( item )) total += PyInt _ AsLong ( item ); Py _ DECREF ( item ); /* GetItem で 得 た 所有 権 を 放棄 する */} return total ;} 
今日 の 計算 機 は 有限 の ( しばしば 非常 に 限ら れ た ) メモリ サイズ しか 持た ない ので 、 参照 カウント は 重要 な 概念 です ; 参照 カウント は 、 ある オブジェクト に対して 参照 を 行っ て いる 場所 が 何 箇所 ある か を 数える 値 です 。 
参照 を 行っ て いる 場所 と は 、 別 の オブジェクト で あっ たり 、 グローバル な ( あるいは 静的 な ) C 変数 で あっ たり 、 何らかの C 関数 内 に ある ローカル な 変数 だっ たり し ます 。 
ある オブジェクト の 参照 カウント が ゼロ に なる と 、 その オブジェクト は 解放 さ れ ます 。 
その オブジェクト に 他 の オブジェクト へ の 参照 が 入っ て いれ ば 、 他 の オブジェクト の 参照 カウント は デクリメント さ れ ます 。 
デクリメント の 結果 、 他 の オブジェクト の 参照 カウント が ゼロ に なる と 、 今度 は その オブジェクト が 解放 さ れる 、 といった 具合 に 以後 続き ます 。 
( 言うまでもなく 、 互い を 参照 し あう オブジェクト について 問題 が あり ます ; 現状 で は 、 解決 策 は `` 何 も し ない '' です 。 
) 参照 カウント は 、 常に 明示 的 な やり方 で 操作 さ れ ます 。 通常 の 方法 で は 、 Py _ INCREF () 
で オブジェクト の 参照 を 1 インクリメント し 、 Py _ DECREF () 
で 1 デクリメント し ます 。 
型 固有 の デアロケータ は 、 その 型 が 複合 オブジェクト ( compound object ) 型 で ある 場合 に は 、 オブジェクト 内 の 他 の オブジェクト に対する 参照 カウント を デクリメント する よう 気 を 配る とともに 、 その他 の 必要 な ファイナライズ ( finalize ) 処理 を 実行 し ます 。 
参照 カウント が オーバフロー する こと は あり ませ ん ; という の も 、 仮想 メモリ 空間 に は 、 ( sizeof ( long ) = sizeof ( char *) と 仮定 し た 場合 ) 少なくとも 参照 カウント の 記憶 に 使わ れる ビット 数 と 同じ だけ の メモリ 上 の 位置 が ある から です 。 
従って 、 参照 カウント の インクリメント は 単純 な 操作 に なり ます 。 オブジェクト へ の ポインタ が 入っ て いる ローカル な 変数 全て について 、 オブジェクト の 参照 カウント を 必ず インクリメント し なけれ ば なら ない わけ で は あり ませ ん 。 
理論 上 は 、 オブジェクト の 参照 カウント は 、 オブジェクト を 指し示す 変数 が 生成 さ れ た とき に 1 増やさ れ 、 その 変数 が スコープ から 出 て 行っ た 際 に 1 減らさ れ ます 。 
しかし この 場合 、 二つ の 操作 は 互いに 相殺 する ので 、 結果 的 に 参照 カウント は 変化 し ませ ん 。 
参照 カウント を 使う 真 の 意義 と は 、 手持ち の 何らかの 変数 が オブジェクト を 指し て いる 間 は オブジェクト が デアロケート さ れ ない よう に する こと に あり ます 。 
オブジェクト に対して 、 一つ で も 別 の 参照 が 行わ れ て い て 、 その 参照 が 手持ち の 変数 と 同じ 間 維持 さ れる の なら 、 参照 カウント を 一時 的 に 増やす 必要 は あり ませ ん 。 
これら の 操作 は 常に 戻り 値 と なる オブジェクト の 参照 カウント を インクリメント し ます 。 
ユーザ に は 戻り 値 が 不要 に なっ たら Py _ DECREF () を 呼ぶ 責任 が 残さ れ て い ます ; と は いえ 、 すぐ に その 習慣 は 身 に 付く でしょ う 。 
この ため に ( 他 の 目的 も あり ます が )、 全て の オブジェクト に は 自身 の 型 オブジェクト に対する ポインタ が 入っ て い ます 。 
さて 、 まだ 重大 な 疑問 が 残っ て い ます : い つ Py _ INCREF ( x ) や Py _ DECREF ( x ) を 使え ば よい の でしょ う か ? まず 、 いくつ か の 用語 説明 から 始め させ て ください 。 
まず 、 オブジェクト は `` 占有 ( own )'' さ れる こと は あり ませ ん ; しか し 、 ある オブジェクト に対する 参照 の 所有 own a reference は でき ます 。 
オブジェクト の 参照 カウント は 、 その オブジェクト が 参照 を 所有 を 受け て いる 回数 と 定義 さ れ て い ます 。 
参照 の 所有 者 は 、 参照 が 必要 なくなっ た 際 に Py _ DECREF () を 呼び出す 役割 を 担い ます 。 
参照 の 所有 権 は 委譲 ( transfer ) でき ます 。 
所有 参照 ( owned reference ) の 放棄 に は 、 渡す 、 保存 する 、 Py _ DECREF () を 呼び出す 、 という 三つ の 方法 が あり ます 。 
所有 参照 を 処理 し 忘れる と 、 メモリ リーク を 引き起こし ます 。 
オブジェクト に対する 参照 は 、 借用 ( borrow ) も 可能 です 。 
1 . 2 参照 の 借用 者 は 、 Py _ DECREF () を 呼ん で は なり ませ ん 。 
借用 者 は 、 参照 の 所有 者 から 借用 し た 期間 を 超え て 参照 を 保持 し 続け て は なり ませ ん 。 
所有 者 が 参照 を 放棄 し た 後 で 借用 参照 を 使う と 、 解放 済み メモリ を 使用 し て しまう 危険 が ある ので 、 絶対 に 避け ね ば なり ませ ん 。 
参照 の 借用 が 参照 の 所有 より も 優れ て いる 点 は 、 コード が とり うる あらゆる 処理 経路 で 参照 を 廃棄 し て おく よう 注意 し なく て 済む こと です -- 別 の 言い方 を すれ ば 、 借用 参照 の 場合 に は 、 処理 の 途中 で 関数 を 終了 し て も メモリ リーク の 危険 を 冒す こと が ない 、 という こと です 。 
逆 に 、 メモリ リーク の 危険 を 冒す より も 不利 な 点 は 、 ごく まとも に 見える コード が 、 実際 に は 参照 の 借用 元 で 放棄 さ れ て しまっ た 後 に その 参照 を 使う かも しれ ない よう な 微妙 な 状況 が ある という こと です 。 Py _ INCREF () を 呼び出す と 、 借用 参照 を 所有 参照 に 変更 でき ます 。 
この 操作 は 参照 の 借用 元 の 状態 に は 影響 し ませ ん -- Py _ INCREF () は 新た な 所有 参照 を 生成 し 、 参照 の 所有 者 が 担う べき 全て の 責任 を 課し ます ( つまり 、 新た な 参照 の 所有 者 は 、 以前 の 所有 者 と 同様 、 参照 の 放棄 を 適切 に 行わ ね ば なり ませ ん )。 
... も 可能 です 。 1 . 2 
... 解放 済み メモリ を 使用 し て しまう 危険 が ある ので 、 絶対 に 避け ね ば なり ませ ん 。 
参照 カウント が 1 以上 か どう か 調べる 方法 は うまく いき ませ ん -- 参照 カウント 自体 も 解放 さ れ た メモリ 上 に ある ため 、 その 領域 が 他 の オブジェクト に 使わ れ て いる 可能 性 が あり ます ! 
1 モジュール を インストール する : install コマンド 群 
1 モジュール を インストール する : install コマンド 群 
6 . 10 参考 文献 リスト の マーク アップ ドキュメント の 各 節 の 多く に は 、 モジュール ドキュメント や 外部 ドキュメント を 指す 参考 文献 の リスト が 入っ て い ます 。 
こうした リスト は 、 seealso や seealso * 環境 を 使っ て 作成 し ます 。 
これら の 環境 で は 、 参考 文献 エントリ を 合理 的 な やり方 で 作成 する ため の 追加 の マクロ を 定義 し て い ます 。 seealso 環境 は 通常 、 節 中 で 何らかの 小節 に 入る 直前 の 場所 に 配置 し ます 。 
これ は 、 ある 節 に 関係 し た 参考 文献 リンク が 、 ドキュメント の ハイパーテキスト 解析 を 行う 際 に 小節 内 に 入り込ん で しまわ ない よう に する ため です 。 
HTML 出力 の 場合 、 この マクロ の 内容 は 本文 の 外側 の `` サイド バー '' に 表示 さ れ ます 。 
seealso * 環境 は 、 参考 文献 リスト を 主 コンテンツ の 一部 として 表示 し たい 場合 に 使う 点 が 異なり ます ; seealso * を 使う と 、 リスト を 特別 扱い し て テキスト 内 から 押し出し たり し ませ ん 。 
この 環境 は ヘッダ `` See also :'' を 作成 し 、 個々 の 参考 文献 を 記述 する ため の マーク アップ を 定義 し ます 。 
この 環境 は 主 コンテンツ の 一部 として 参考 文献 リスト を 生成 する 際 に 使い ます 。 
リスト に 特別 に ヘッダ を つける こと は なく 、 ドキュメント の 本文 から 押し出さ れる こと も あり ませ ん 。 
個々 の 参考 文献 を 記述 する ため に 、 上 と 同じ マーク アップ を 提供 し て い ます 。 
特定 の オンライン リソース へ の 参照 を 示す 場合 、 ちゃんと し た 題名 を その リソース に つけ られ ない が 、 短い 説明 を リンク の 後 に つけ たい 場合 に は seelink マクロ を 使い ます 。 
タイトル で 特定 できる よう な オンライン 上 の ドキュメント に は seetitle マクロ を 使い 、 オプション に URL を 指定 する よう に し て ください 。 
別 の モジュール へ の 参照 です 。 why は 、 なぜ その 参考 文献 が 興味 の 対象 と なる の か を 示す 短い 説明 に せ ね ば なり ませ ん 。 
モジュール 名 は name で 指定 し 、 必要 が あれ ば key で リンク キー を 指定 し ます 。 
HTML および PDF 版 で は 、 モジュール 名 部分 は 参照 先 の モジュール を 指す ハイパーリンク に なり ます 。 
注意 : 該当 の モジュール は 同じ ドキュメント 内 で 記述 さ れ て い なけれ ば なり ませ ん ( 対応 する declaremodule が 必要 です )。 
Python Enhancement Proposal ( PEP ) へ の 参照 です 。 number は PEP 編集 者 が 割り当て た 公式 PEP 番号 で なけれ ば なら ず 、 tiutle は PEP ドキュメント の 公式 版 に 書か れ て いる 人間 可読 な タイトル で なけれ ば なり ませ ん 。 
この マクロ は 、 ドキュメント 中 の 注釈 が つけ られ て いる 節 の 内容 が 関係 し て いる インタフェース や 言語 機能 PEP へ の 参照 を 読者 に 示す ため に 使い ます 。 
IETF による Request for Comment ( RFC ) を 参照 し ます 。 
それ 以外 の 点 で は 、 seepep と ほとんど 同じ です 。 
この マクロ は 、 ドキュメント 中 の 注釈 が つけ られ て いる 節 の 内容 が 関係 し て いる プロトコル や データ 形式 を 仕様 記述 し て いる RFC へ の 参照 を 読者 に 示す ため に 使い ます 。 
任意 の テキスト text を `` See also :'' リスト に 追加 し ます 。 
この マクロ は オフライン や オンライン の 資料 を url マクロ で 参照 する ため に 使え ます 。 
テキスト は 一つ か それ 以上 の 完全 な 文 で 構成 し なけれ ば なり ませ ん 。 
title という 名前 の 外部 ドキュメント に対する 参照 を 追加 し ます 。 
url を 指定 し た 場合 、 HTML 版 で は 外部 ドキュメント の タイトル 部分 が ハイパーリンク に なり 、 組版 版 の ドキュメント で は 表題 の 下 に URL が 表示 さ れ ます 。 
} 特定 の オンライン リソース で 、 意味 の ある タイトル が ない 場合 に は seeurl マクロ を 使っ て 参照 を 行い ます 。 
はっきり し た タイトル の ある オンライン ドキュメント の 場合 に は 、 seetitle マクロ を 使い 、 その オプション パラメタ に URL を 指定 し て 参照 を 行っ て ください 。 
6 . 11 索引 生成 の ため の マーク アップ ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
単一 の 回帰 テスト を 指定 ( python regrtest . py test _ spam . py ) する と 、 出力 を 最小限 に し ます 。 
すべて の リソース を 使う に は 、 python regrtest . py - uall を 実行 し ます 。 - u の オプション に all を 指定 する と 、 すべて の リソース を 有効 に し ます 。 
( よく ある 場合 です が ) 何 か 一つ を 除く 全て が 必要 な 場合 、 カンマ で 区切っ た 不要 な リソース の リスト を all の 後 に 並べ ます 。 コマンド python regrtest . py - uall ,- audio ,- largefile と する と 、 audio と largefile リソース を 除く 全て の リソース を 使っ て test . regrtest を 実行 し ます 。 
すべて の リソース の リスト と 追加 の コマンドラインオプション を 出力 する に は 、 python regrtest . py - h を 実行 し て ください 。 
10 . 9 循環 参照 ガベージコレクション を サポート する 
以下 の メソッド は Request の 全て の 公開 インタフェース を 記述 し ます 。 
従って サブ クラス で は これら 全て の メソッド を オーバライド し なけれ ば なり ませ ん 。 add _ data 
Request の データ を data に 設定 し ます 。 
HTTP リクエスト メソッド を 示す 文字 列 を 返し ます 。 
この メソッド は HTTP リクエスト だけ に対して 意味 が あり 、 現状 で は 常に (" GET ", " POST ") の うち の いずれ か の 値 を とり ます 。 
インスタンス が None で ない データ を 持つ か どう か を 返し ます 。 
インスタンス の データ を 返し ます 。 
リクエスト に 新た な ヘッダ を 追加 し ます 。 
ヘッダ は HTTP ハンドラ 以外 の ハンドラ で は 無視 さ れ ます 。 HTTP ハンドラ で は 、 引数 は サーバ に 送信 さ れる ヘッダ の リスト に 追加 さ れ ます 。 
同じ 名前 を 持つ ヘッダ を 2 つ 以上 持つ こと は でき ず 、 key の 衝突 が 生じ た 場合 、 後で 追加 し た ヘッダ が 前 に 追加 し た ヘッダ を 上書き し ます 。 
現時点 で は 、 この 機能 は HTTP の 機能 を 損ねる こと は あり ませ ん 。 という の は 、 複数 回 呼び出し た とき に 意味 を 持つ よう な ヘッダ に は 、 どれ も ただ 一つ の ヘッダ を 使っ て 同じ 機能 を 果たす ため の ( ヘッダ 特有 の ) 方法 が ある から です 。 
リダイレクト さ れ た リクエスト に は 追加 さ れ ない ヘッダ を 追加 し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
インスタンス が 名前 つき ヘッダ で ある か どう か を ( 通常 の ヘッダ と 非 リダイレクトヘッダ の 両方 を 調べ て ) 返し ます 。 
バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 get _ full _ url 
コンス トラクタ で 与え られ た URL を 返し ます 。 
URL の タイプ -- いわゆる スキーム ( scheme ) -- を 返し ます 。 
接続 を 行う 先 の ホスト 名 を 返し ます 。 
セレクタ -- サーバ に 送ら れる URL の 一部分 -- を 返し ます 。 
リクエスト が プロキシサーバ を 経由 する よう に 準備 し ます 。 
host および type は インスタンス の もと の 設定 と 置き換え られ ます 。 インスタンス の セレクタ は コンス トラクタ に 与え た もともと の URL に なり ます 。 
RFC 2965 の 定義 よる 、 始原 トランザクション の リクエスト ホスト を 返し ます 。 
Request コンス トラクタ の ドキュメント を 参照 し て ください 。 
リクエスト が RFC 2965 の 定義 における 証明 不能 リクエスト で ある か どう か を 返し ます 。 Request コンス トラクタ の ドキュメント を 参照 し て ください 。 
16 . 6 他 の グラフィカルユーザインタフェースパッケージ 
17 . 制限 実行 ( restricted execution ) 
警告 : Python 2 . 3 で は 、 既知 の 容易 に 修正 でき ない セキュリティー ホール の ため に 、 これら の モジュール は 無効 に さ れ て い ます 。 
rexec や Bastion モジュール を 使っ た 古い コード を 読む とき に 助け に なる よう 、 モジュール の ドキュメント だけ は 残さ れ て い ます 。 
制限 実行 ( restricted execution ) と は 、 信頼 できる コード と 信頼 でき ない コード を 区別 できる よう に する ため の Python における 基本 的 な フレーム ワーク です 。 
この フレーム ワーク は 、 信頼 できる Python コード ( スーパバイザ ( supervisor )) が 、 パー ミッション に 制限 の かけ られ た `` 拘束 セル ( padded cell )'' を 生成 し 、 この セル 中 で 信頼 の おけ ない コード を 実行 する という 概念 に 基づい て い ます 。 
信頼 の おけ ない コード は この 拘束 セル を 破る こと が でき ず 、 信頼 さ れ た コード で 提供 さ れ 、 管理 さ れ た インタフェース を 介し て のみ 、 傷つき やすい システム リソース と やりとり する こと が でき ます 。 `` 制限 実行 '' という 用語 は 、 `` 安全 な Python ( safe - Python )'' を 裏 から 支える もの です 。 
という の は 、 真 の 安全 を 定義 する こと は 難しく 、 制限 さ れ た 環境 を 生成 する 方法 によって 決め られる から です 。 
制限 さ れ た 環境 は 入れ子 に する こと が でき 、 この とき 内側 の セル は より 縮小 さ れる こと は ある が 決して 拡大 さ れる こと の ない 特権 を 持っ た サブ セル を 生成 し ます 。 Python の 制限 実行 モデル の 興味深い 側面 は 、 信頼 さ れ ない コード に 提供 さ れる インタフェース が 、 信頼 さ れる コード に 提供 さ れる それら と 同じ 名前 を 持つ という こと です 。 
この ため 、 制限 さ れ た 環境 で 動作 する よう 設計 さ れ た コード を 書く 上 で 特殊 な インタフェース を 学ぶ 必要 が あり ませ ん 。 
また 、 拘束 セル の 厳密 な 性質 は スーパバイザ によって 決め られる ため 、 アプリケーション によって 異なる 制限 を 課す こと が でき ます 。 
例えば 、 信頼 さ れ ない コード が 指定 し た ディレクトリ 内 の 何らかの ファイル を 読み出す が 決して 書き込ま ない という こと が `` 安全 '' と 考え られる かも しれ ませ ん 。 
この 場合 、 スーパバイザ は 組み込み の open () 関数 について 、 mode パラメタ が ' w ' の 時 に 例外 を 送出 する よう に 再 定義 でき ます 。 
また 例えば 、 `` 安全 '' と は 、 filename パラメタ に対して chroot () に 似 た 操作 を 施し て 、 ルート パス が ファイル システム 上 の 何らかの 安全 な `` 砂場 ( sandbox )'' 領域 に対する 相対 パス に なる よう に する こと かも しれ ませ ん 。 
この 場合 でも 、 信頼 さ れ ない コード は 依然として 、 もと の 呼び出し インタフェース を 持っ た まま の 組み込み の open () 関数 を 制限 環境 中 に 見出し ます 。 
ここ で は 、 関数 に対する 意味 付け ( semantics ) は 同じ です が 、 許可 さ れ ない パラメタ が 使わ れよ う と し て いる と スーパバイザ が 判断 し た 場合 に は IOError が 送出 さ れ ます 。 Python の ランタイムシステム は 、 特定 の コード ブロック が 制限 実行 モード か どう か を 、 グローバル 変数 の 中 の __ builtins __ オブジェクト の 一意 性 を もと に 判断 し ます : オブジェクト が 標準 の 
__ builtin __ モジュール ( の 辞書 ) の 場合 、 コード は 非 制限 下 に ある と みなさ れ ます 。 
基本 的 な 制限 実行 フレーム ワーク 。 
オブジェクト に対する アクセス の 制限 を 提供 する 。 
Python で 書か れ た インターネットブラウザ Grail です 。 Python で 書か れ た アプレット を サポート する ため に 、 上記 の モジュール を 使っ て い ます 。 
Grail における Python 制限 実行 モード の 利用 に関する 詳しい 情報 は 、 Web サイト で 入手 する こと が でき ます 。 
return は 、 関数 定義 内 で 構文 法的 に ネスト し て 現れ ます が 、 ネスト し た クラス 定義 内 に は 現れ ませ ん 。 
式 リスト が ある 場合 、 リスト が 値 評価 さ れ ます 。 それ 以外 の 場合 は None で 置き換え られ ます 。 
return を 使う と 、 式 リスト ( または None ) を 戻り 値 として 、 現在 の 関数 呼び出し から 抜け出し ます 。 return によって 、 finally 節 を ともなう try 文 の 外 に 処理 が 引き渡さ れる と 、 実際 に 関数 から 抜ける 前 に finally 節 が 実行 さ れ ます 。 
ジェネレータ 関数 の 場合 に は 、 return 文 の 中 に expression _ list を 入れる こと は でき ませ ん 。 
ジェネレータ 関数 の 処理 コンテキスト で は 、 単体 の return は ジェネレータ 処理 を 終了 し StopIteration を 送出 さ せる こと を 示し ます 。 
RExec クラス に は 以下 の クラス 属性 が あり ます 。 
これら の 属性 の すべて は 、 文字 列 の タプル です 。 
制限 さ れ た 環境 で 実行 する プログラム で は 利用 でき ない で あろ う 、 組み込み 関数 の 名前 を 格納 し て い ます 。 
この 変数 を オーバライド し たい サブ クラス は 、 基本 クラス から の 値 から 始め て 、 追加 し た 許さ れ ない 関数 を 連結 し て いか なけれ ば なり ませ ん - 危険 な 関数 が 新しく Python に 追加 さ れ た 時 は 、 それら も 、 この モジュール に 追加 し ます 。 
安全 に イン ポート できる 組み込み モジュール の 名前 を 格納 し て い ます 。 RExec に対する 値 は 、 (' audioop ', ' array ', ' binascii ',' cmath ', ' errno ', ' imageop ', ' marshal ', ' math ', ' md 5 ', ' operator ',' parser ', ' regex ', ' select ', ' sha ', '_ sre ', ' strop ',' struct ', ' time ') です 。 
この 変数 を オーバーライド する 場合 も 、 同様 な 注意 が 適用 さ れ ます - 基本 クラス から の 値 を 使っ て 始め ます 。 
import が 制限 さ れ た 環境 で 実行 さ れる 時 に 検索 さ れる ディレクトリー を 格納 し て い ます 。 
RExec に対する 値 は 、 ( モジュール が ロード さ れ た 時 は ) 制限 さ れ ない コード の sys . path と 同一 です 。 
モジュール 内 の 関数 の 名前 を 格納 し て い ます 。 
RExec に対する 値 は 、 (' error ', ' fstat ', ' listdir ',' lstat ', ' readlink ', ' stat ', ' times ', ' uname ', ' getpid ', ' getppid ',' getcwd ', ' getuid ', ' getgid ', ' geteuid ', ' getegid ') です 。 
ok _ sys _ names 制限 さ れ た 環境 で 実行 する プログラム で 利用 できる 、 
モジュール 内 の 関数 名 と 変数 名 を 格納 し て い ます 。 
RExec に対する 値 は 、 (' ps 1 ', ' ps 2 ',' copyright ', ' version ', ' platform ', ' exit ', ' maxint ') です 。 
モジュール が ロード する こと を 許さ れ て いる ファイル タイプ を 格納 し て い ます 。 各 ファイル タイプ は 、 
モジュール で 定義 さ れ た 整数 定数 です 。 意味 の ある 値 は 、 PY _ SOURCE 、 PY _ COMPILED および C _ EXTENSION です 。 
RExec に対する 値 は 、 ( C _ EXTENSION , PY _ SOURCE ) です 。 
サブ クラス で PY _ COMPILED を 追加 する こと は 推奨 さ れ ませ ん ； 攻撃 者 が 、 バイト コンパイル し た でっちあげ の ファイル (. pyc ) を 、 例えば 、 あなた の 公開 FTP サーバ の / tmp に 書い たり 、 / incoming に アップ ロード し たり し て 、 とにかく あなた の ファイル システム 内 に 置く こと で 、 制限 さ れ た 実行 モード から 抜け出る こと が できる かも しれ ない から です 。 
RExec インスタンス は 以下 の メソッド を サポート し ます ： 
code は 、 Python の 式 を 含む 文字 列 か 、 あるいは コンパイル さ れ た コード オブジェクト の どちら か で なけれ ば なり ませ ん 。 そして これら は 制限 さ れ た 環境 の __ main __ モジュール で 評価 さ れ ます 。 
式 あるいは コード オブジェクト の 値 が 返さ れ ます 。 
code は 、 1 行 以上 の Python コード を 含む 文字 列 か 、 コンパイル さ れ た コード オブジェクト の どちら か で なけれ ば なり ませ ん 。 そして これら は 、 制限 さ れ た 環境 の __ main __ モジュール で 実行 さ れ ます 。 
ファイル filename 内 の Python コード を 、 制限 さ れ た 環境 の __ main __ モジュール で 実行 し ます 。 
名前 が " s _" で 始まる メソッド は 、 " r _" で 始まる 関数 と 同様 です が 、 その コード は 、 標準 I / O ストリーム sys . stdin 、 sys . stderr および sys . stdout の 制限 さ れ た バージョン へ の アクセス が 許さ れ て い ます 。 
code は 、 Python 式 を 含む 文字 列 で なけれ ば なり ませ ん 。 そして 制限 さ れ た 環境 で 評価 さ れ ます 。 
code は 、 1 行 以上 の Python コード を 含む 文字 列 で なけれ ば なり ませ ん 。 そして 制限 さ れ た 環境 で 実行 さ れ ます 。 
ファイル filename に 含ま れ た Python コード を 制限 さ れ た 環境 で 実行 し ます 。 
RExec オブジェクト は 、 制限 さ れ た 環境 で 実行 さ れる コード によって 暗黙 の うち に 呼ば れる 、 さまざま な メソッド も サポート し なけれ ば なり ませ ん 。 
これら の メソッド を サブ クラス 内 で オーバライド する こと によって 、 制限 さ れ た 環境 が 強制 する ポリ シ を 変更 し ます 。 r _ import 
モジュール modulename を イン ポート し 、 もし その モジュール が 安全 で ない と みなさ れる なら 、 ImportError 例外 を 発生 し ます 。 
open () が 制限 さ れ た 環境 で 呼ば れる とき 、 呼ば れる メソッド です 。 
引数 は open () の もの と 同じ で あり 、 ファイル オブジェクト ( あるいは ファイル オブジェクト と 互換 性 の ある クラス インスタンス ) が 返さ れ ます 。 
RExec の デフォルト の 動作 は 、 任意 の ファイル を 読み取り 用 に オープン する こと を 許可 し ます が 、 ファイル に 書き込も う と する こと は 許し ませ ん 。 
より 制限 の 少ない r _ open () の 実装 について は 、 以下 の 例 を 見 て 下さい 。 
モジュール オブジェクト module を 再 ロード し て 、 それ を 再 解析 し 再 初期 化 し ます 。 
モジュール オブジェクト module を アンロード し ます ( それ を 制限 さ れ た 環境 の sys . modules 辞書 から 取り のぞき ます )。 
および 制限 さ れ た 標準 I / O ストリーム へ の アクセス が 可能 な 同等 の もの ： 
モジュール オブジェクト module を アンロード し ます 。 
再 入 可能 ロック ( reentrant lock ) と は 、 同じ スレッド が 複数 回 獲得 できる よう な 同期 プリミティブ です 。 
再 入 可能 ロック の 内部 で は 、 プリミティブロック の 使う ロック ／ アン ロック 状態 に 加え 、 `` 所有 スレッド ( owning thread )'' と `` 再帰 レベル ( recursion level )'' という 概念 を 用い て い ます 。 ロック 状態 で は 何らかの スレッド が ロック を 所有 し て おり 、 アン ロック 状態 で は いかなる スレッド も ロック を 所有 し て い ませ ん 。 
スレッド が この ロック の 状態 を ロック に する に は 、 ロック の acquire () メソッド を 呼び出し ます 。 この メソッド は 、 スレッド が ロック を 所有 する と 処理 を 戻し ます 。 
ロック の 状態 を アンロック に する に は release () メソッド を 呼び出し ます 。 acquire ()/ release () から なる ペア の 呼び出し は ネスト でき ます ; 最後 に 呼び出し た release () ( 最も 外側 の 呼び出し ペア ) だけ が 、 ロック の 状態 を アンロック に リセット し 、 acquire () で ブロック 中 の 別 の スレッド の 処理 を 進行 さ せ られ ます 。 
ブロック あり 、 または ブロック なし で ロック を 獲得 し ます 。 引数 なし で 呼び出し た 場合 : スレッド が 既に ロック を 所有 し て いる 場合 、 再帰 レベル を インクリメント し て 即座 に 処理 を 戻し ます 。 
それ 以外 の 場合 、 他 の スレッド が ロック を 所有 し て いれ ば 、 その ロック の 状態 が アン ロック に なる まで ブロック し ます 。 
その後 、 ロック の 状態 が アン ロック に なる ( いかなる スレッド も ロック を 所有 し ない 状態 に なる ) と 、 ロック の 所有 権 を 獲得 し 、 再帰 レベル を 1 に セット し て 処理 を 戻し ます 。 
ロック の 状態 が アン ロック に なる の を 待っ て いる スレッド が 複数 ある 場合 、 その 中 の 一つ だけ が ロック の 所有 権 を 獲得 でき ます 。 
引数 なし で 呼び出し た 場合 に ブロック する よう な 状況 で あっ た 場合 に は 直ちに 偽 を 返し ます 。 それ 以外 の 場合 に は 、 引数 なし で 呼び出し た とき と 同じ 処理 を 行い 真 を 返し ます 。 
再帰 レベル を デクリメント し て ロック を 解放 し ます 。 
デクリメント 後 に 再帰 レベル が ゼロ に なっ た 場合 、 ロック の 状態 を アン ロック ( いかなる スレッド に も 所有 さ れ て い ない 状態 ) に リセット し 、 ロック の 状態 が アン ロック に なる の を 待っ て ブロック し て いる スレッド が ある 場合 に は その 中 の ただ 一つ だけ が 処理 を 進行 できる よう に し ます 。 
この インターフェース の オブジェクト は XMLReader から の エラー や 警告 の 情報 を 受け取る ため に 使わ れ ます 。 
この インターフェース を 実装 し た オブジェクト を 作成 し XMLReader に 登録 する と 、 パーサ は 警告 や エラー の 通知 の ため に その オブジェクト の メソッド を 呼び出す よう に なり ます 。 
エラー に は 警告 、 回復 可能 エラー 、 回復 不能 エラー の 3 段階 が あり ます 。 
すべて の メソッド は SAXParseException だけ を パラメータ として 受け取り ます 。 
受け取っ た 例外 オブジェクト を raise する こと で 、 エラー や 警告 は 例外 に 変換 さ れる こと も あり ます 。 
パーサ が 回復 可能 な エラー を 検知 する と 呼び出さ れ ます 。 
この メソッド が 例外 を raise し ない と パース は 継続 さ れ ます が 、 アプリケーション 側 で は エラー 以降 の ドキュメント 情報 を 期待 し て い ない こと も あり ます 。 
パーサ が 処理 を 継続 し た 場合 、 入力 ドキュメント 内 の ほか の エラー を 見つける こと が でき ます 。 
パーサ が 回復 不能 な エラー を 検知 する と 呼び出さ れ ます 。 この メソッド が return し た 後 、 すぐ に パース を 停止 する こと が 求め られ て い ます 。 
パーサ が 軽微 な 警告 情報 を アプリケーション に 通知 する ため に 呼び出さ れ ます 。 
この メソッド が return し た 後 も パース を 継続 し 、 ドキュメント 情報 を アプリケーション に 送り 続ける よう 求め られ て い ます 。 この メソッド で 例外 を 発生 さ せ た 場合 、 パース は 中断 さ れ て しまい ます 。 
SAXException 例外 クラス は 以下 の メソッド を サポート し て い ます 。 
エラー 状態 を 示す 可読 メッセージ を 返し ます 。 
カプセル 化 し た 例外 オブジェクト または None を 返し ます 。 
scheduler インスタンス は 以下 の メソッド を 持っ て い ます : 
新しい イベント を スケジュール し ます 。 
引数 time は 、 コンス トラクタ へ 渡さ れ た timefunc の 戻り 値 と 互換 な 数値 型 で なけれ ば いけ ませ ん 。 
同じ time によって スケジュール さ れ た イベント は 、 それら の priority によって 実行 さ れる でしょ う 。 
時間 単位 以上 の delay で イベント を スケジュール し ます 。 
その とき 、 その他 の 関連 時間 、 その他 の 引数 、 効果 、 戻り 値 は 、 enterabs () に対する もの と 同じ です 。 
キュー から イベント を 消去 し ます 。 
もし event が キュー に ある 現在 の イベント で ない なら ば 、 この メソッド は RuntimeError を 送出 し ます 。 
もし イベント キュー が 空 なら ば 、 True を 返し ます 。 
すべて の スケジュール さ れ た イベント を 実行 し ます 。 
この 関数 は 次 の イベント を ( コンス トラクタ へ 渡さ れ た 関数 delayfunc を 使う こと で ) 待ち 、 そして それ を 実行 し 、 イベント が スケジュール さ れ なく なる まで 同じ こと を 繰り返し ます 。 action あるいは delayfunc は 例外 を 投げる こと が でき ます 。 
いずれ の 場合 も 、 スケジューラ は 一貫 し た 状態 を 維持 し 、 例外 を 伝播 する でしょ う 。 
例外 が action によって 投げ られる 場合 、 イベント は run () へ の 呼出し を 未来 に 行なわ ない でしょ う 。 イベント の シーケンス が 、 次 イベント の 前 に 、 利用 可能 時間 より 実行 時間 が 長い と 、 スケジューラ は 単に 遅れる こと に なる でしょ う 。 
イベント が 落ちる こと は あり ませ ん ; 呼出し コード は もはや 適切 で ない キャンセルイベント に対して 責任 が あり ます 。 
1 . 2 . 4 . 2 Python モード 付き の エディタ 
BBEdit で スクリプト を 作成 し て いる なら 、 保存 し た ファイル を ダブル クリック し て 起動 できる よう に 、 クリエータコード を Python に 指定 し たい と 考える でしょ う 。 
BBEdit を 立ち 上げ ます 。 
「 Edit 」 メニュー から 「 Preferences 」 を 選択 し ます 。 
スクロール リスト から 「 File Types 」 を 選択 し ます 。 
「 Add ...」 ボタン を クリック し 、 MacPython 配布 物 ディレクトリ の 下 に 移動 し て 、 PythonInterpreter を 選び 、 「 open 」 を クリック し ます 。 
設定 パネル の `` Save '' ボタン を クリック し ます 。 
Python は オープンスクリプティングアーキテクチャ ( Open ScriptingArchitecure 、 OSA 、 一般 的 に は AppleScript と 呼ば れる ) の かなり 完全 な 実装 を 行っ て い て 、 Python プログラム から スクリプト 可能 な アプリケーション を 操作 し たり 、 Python へ の インターフェース を 備え た もの に する こと が でき ます 。 
AppleScript と OSA の 様々 な コンポーネント の 記述 の ため に 、 また 、 アーキテクチャ および 用語 について の 理解 を 得る ため に 、 アップル の 文書 を 読む 必要 が あり ます 。 
" Applescript Language Guide " は 概念 の モデル および 用語 、 Standard Suite について 説明 し た 文書 です 。 
" Open Scripting Architecture " 文書 は 、 アプリケーション プログラマ の 視点 から OSA を 使用 する 方法 について 説明 し て い ます 。 
これら の 文書 は Apple ヘルプビューワ の Developer Documentation 中 の Core Technologies セクション に あり ます 。 アプリケーション を スクリプト で 操作 する 例 として 、 次 の AppleScript は 、 一番 前 の Finder ウィンドウ の 名前 を 取得 し 、 それ を 印字 し ます 。 
Python で は 以下 の コード で 同じ 事 が でき ます 。 
配布 さ れ て いる Python ライブラリ は 、 Standard Suite を 実装 し た パッケージ に 加え て 、 いくつ か の 一般 的 な アプリケーション へ の インターフェース を 実装 し た パッケージ が 含ま れ て い ます 。 アプリケーション に AppleEvent を 送る ため に は 、 アプリケーション の 用語 ( Script Editor が 「 辞書 」 と 呼ぶ もの ) に 接続 する Python パッケージ を 最初 に 作成 し なけれ ば なり ませ ん 。 
これ は 、 PythonIDE の 内部 から 、 あるいは 、 コマンド ライン から の スタンドアロン の プログラム として gensuitemodule . py モジュール を 実行 する こと により 行う こと が でき ます 。 gensuitemodule . py モジュール で 生成 さ れる 出力 は 多く の モジュール を 備え た パッケージ の ため 、 全て の Suite を プログラム の 中 で 1 つ に まとめ て 利用 できる よう に する ため に __ init __ モジュール が 追加 さ れ て い ます 。 
Python 継承 グラフ は AppleScript 継承 グラフ を 理解 する ので 、 Standard Suite を サポート し て い て 、 余分 な 引数 を 備え た 1 つ あるいは 2 つ の 変数 を 拡張 する 事 が できる よう に プログラム 辞書 が 書か れ て い た 場合 、 出力 さ れ た Suite は 、 StdSuites . Standard _ Suite から すべて を イン ポート し て 再 エクスポート し 、 さらに 拡張 機能 を もっ た メソッド を オーバーライド する モジュール Standard _ Suite を 含み ます 。 
また AppleScript クラス は Python クラス 、 そして 類 事物 その他 の もろもろ の 物 として 実装 さ れ て い ます 。 変数 を 実装 する 主要 な Python クラス は 、 さらに AppleScript クラス " application " で 宣言 さ れ た プロパティ および 要素 へ の アクセス を 許可 し ます 。 
現在 の リリース で オブジェクト 指向 的 に やろ う と する なら ば 、 例えば 、 より Python 的 な f . window ( 1 ). name . get () の 代り に f . get ( f . window ( 1 ). name ) を 利用 する 必要 が あり ます 。 AppleScript 識別子 が Python 識別子 と 同じ で ない 場合 、 名前 は 少数 の 規則 によって 判別 し ます 。 
スペース は 下線 に 置換 さ れ ます 。 
_ xx _ が 16 進 法 の 文字 値 で ある 場合 、 他 の 英数字 で ない 文字 は xx と 置換 さ れ ます 。 
あらゆる Python 予約 語 に は 下線 を 追加 し ます 。 
Python は 、 さらに Python で スクリプト 対応 アプリケーション を 作成 する 事 を サポート し て い ます 。 次 の モジュール は MacPython の AppleScript サポート に 適切 です 。 
OSA 辞書 から スタブ パッケージ を 作成 し ます 。 
Apple Event を 送る ため の 基本 的 な サポート 
Python 変数 と AppleEvent データ コンテナ 間 の 変換 
Apple Event オブジェクト モデル の Python 表現 
オープンスクリプティングアーキテクチャ ( OSA ) サーバ (`` Apple Events '') の サポート 。 
さらに 、 Finder , Terminal , Explorer , Netscape , CodeWarrior , SystemEvents そして StdSuites の サポート モジュール は 、 あらかじめ 生成 さ れ て い ます 。 
スクロールウィンドウオブジェクト は 、 次 の メソッド を 追加 し た コントロールウィンドウオブジェクト です 。 
水平 スクロール バー と 垂直 スクロール バー を 作成 し ます ( あるいは 破棄 し ます )。 
引数 は どちら が 欲しい か 指定 し ます ( デフォルト は 両方 )。 
スクロールバー は 常に 最小 値 0 、 最大 値 32767 です 。 
この メソッド は 必ず 作っ て おか なく て は いけ ませ ん 。 
現在 の スクロールバー の 位置 を 与える タプル ( x , y ) を ( 0 の 32767 間 で ) 返し て ください 。 
バー の 方向 について 全 文書 が 可視 状態 で ある こと 知らせる ため None を 返す 事 も でき ます 。 
文書 に 変更 が あっ た 場合 は この メソッド を 呼び ます 。 
この メソッド は getscrollbarvalues () を 呼ん で スクロールバー を 更新 し ます 。 
あらかじめ 与え て おく メソッド で 、 ユーザー と の 対話 により 呼ば れ ます 。 which は ' x ' か ' y ' 、 what は '-','-', ' set ','++', '+' の どれ か です 。 
' set ' の 場合 は 、 value に 新しい スクロールバー 位置 を 入れ て おき ます 。 
getscrollbarvalues () の 結果 から 値 を 計算 する の を 助ける 補助 的 な メソッド です 。 
文書 の 最小 値 と 最大 値 、 可視 部分 に関する 最 先頭 値 ( 最 左 値 ) と 最 底値 ( 最 右 値 ) を 渡す と 、 正しい 数 か None を 返し ます 。 
ウィンドウ が 最前 面 に なっ た 時 、 スクロールバー の ディム ( dimming )/ ハイライト の 面倒 を み ます 。 
この メソッド を オーバーライド する なら 、 オーバーライド し た メソッド の 最後 で オリジナル の メソッド を 呼ん で ください 。 
スクロールバー を 正しい 位置 に 移動 さ せ ます 。 
オーバーライド する 時 は 、 オーバーライド し た メソッド の 一番 最初 で オリジナル の メソッド を 呼ん で ください 。 
スクロールバー の インタラクション を 処理 し ます 。 
これ を オーバーライド する 時 は 、 オリジナル の メソッド を 最初 に 呼び出し て ください 。 非 ゼロ の 返り 値 は スクロールバー 内 が ヒット さ れ た こと を 意味 し 、 実際 に 処理 が 進む こと に なり ます 。 
2 ソース コード 配布 物 を 作成 する : sdist command 
4 . 1 Python サーチ パス の 変更 
たまに 、 3 節 で 述べ た よう な 別 の 場所 へ の インストール スキーム が 、 自分 の やり たい インストール 方法 と 違う こと が あり ます 。 
もしか する と 、 同じ ベース ディレクトリ 下 に ある ディレクトリ の うち 、 一つ か 二つ だけ を いじり たかっ たり 、 インストール スキーム を 完全 に 再 定義 し たい と 思う かも しれ ませ ん 。 どちら の 場合 に せよ 、 こうした 操作 で は カスタム の インストール スキーム を 作成 する こと に なり ます 。 
別 の 場所 へ の インストール スキーム に関する これ まで の 説明 で 、 `` オーバライド する ため の オプション '' という コラム に お気づき かも しれ ませ ん 。 
この オプション は 、 カスタム の インストール スキーム を 定義 する ため の 手段 です 。 
各 オーバライドオプション に は 、 相対 パス を 指定 し て も 、 絶対 パス を 指定 し て も 、 インストールベースディレクトリ の いずれ か を 明示 的 に 指定 し て も かまい ませ ん 。 
Unix 環境 で の 例 を もう 一つ 紹介 し ます : インストール 済み の Python が 、 / usr / local / python を prefix に し て ビルド さ れ 、 インストール さ れ て い て 、 標準 の インストール スクリプト は / usr / local / python / bin に 入る よう に なっ て いる と し ます 。 
/ usr / local / bin に 入る よう に し たけれ ば 、 絶対 パス を -- install - scripts オプション に 与え て 上書き する こと に なる でしょ う : 
( この 操作 を 行う と 、 `` prefix スキーム '' を 使っ た インストール に なり 、 prefix は Python インタプリタ が インストール さ れ て いる 場所 -- この 場合 に は / usr / local / python に なり ます 。 ) Windows 用 の Python を 管理 し て いる の なら 、 サード パーティ 製 モジュール を prefix そのもの の 下 で は なく 、 prefix の 下 に ある サブ ディレクトリ に 置き たい と 考える かも しれ ませ ん 。 
この 作業 は 、 インストール ディレクトリ の カスタマイズ と ほぼ 同じ くらい 簡単 です -- 覚え て おか ね ば なら ない の は 、 モジュール に は 二つ の タイプ 、 pure モジュール と 非 pure モジュール ( 非 pure モジュール 配布 物 内 の モジュール ) が ある という こと です 。 
指定 し た インストール 先 ディレクトリ は 、 prefix から の 相対 です 。 
もちろん 、 prefix を . pth ファイル に 入れる など し て 、 これら の ディレクトリ が Python の モジュール 検索 パス 内 に 入る よう に し なけれ ば なり ませ ん 。 
Python の モジュール 検索 パス を 修正 する 方法 は 、 4 . 1 節 を 参照 し て ください 。 インストール スキーム 全体 を 定義 し たい の なら 、 全て の インストールディレクトリオプション を 指定 し なけれ ば なり ませ ん 。 
この 作業 に は 、 相対 パス を 使っ た 指定 を 勧め ます ; 例えば 、 全て の Python モジュール 関連 ファイル を ホーム ディレクトリ 下 の python ディレクトリ の 下 に 置き 、 その ホーム ディレクトリ を マウント し て いる 各 プラットフォーム ごと に 別 の ディレクトリ を 置き たけれ ば 、 以下 の よう に インストール スキーム を 定義 し ます : 
また 、 以下 の よう に も 指定 でき ます : 
そこで 、 オプション は Distutils 設定 ファイル ( 5 参照 ) に も 指定 でき ます : 
あるいは 、 以下 の よう に も 指定 でき ます : 
これら 二つ は 、 setup スクリプト を 異なる インストールベースディレクトリ から 実行 し た 場合 に は 同じ に は なら ない ので 注意 し て ください 。 
と する と 、 最初 の 書き方 で は pure モジュール が / tmp / python / lib に 入り 、 二 番目 の 書き方 で は / tmp / lib に 入り ます 。 
( 二 番目 の ケース で は 、 インストール ベース を / tmp / python に 指定 しよ う と 考える でしょ う 。 ) 読者 は 、 設定 ファイル 例 で 、 入力 値 に $ HOME や $ PLAT を 使っ て いる こと に 気づい て いる かも しれ ませ ん ね 。 
Python インタプリタ が import 文 を 実行 する とき 、 インタプリタ は Python コード や 拡張 モジュール を モジュール 検索 パス 中 から 探し ます 。 
検索 パス の デフォルト 値 は 、 インタプリタ を ビルド する 際 に Python の バイナリ 内 に 設定 さ れ ます 。 
検索 パス は 、 sys を import し て 、 sys . path を 出力 すれ ば わかり ます 。 
sys . path 内 の 空文字 列 は 、 現在 の 作業 ディレクトリ を 表し ます 。 
ローカル で インストール さ れる パッケージ は 、 .../ site - packages / ディレクトリ に 入る の が 決まり です が 、 ユーザ は どこ か 任意 の ディレクトリ に Python モジュール を インストール し たい と 思う かも しれ ませ ん 。 
例えば 、 自分 の サイト で は 、 web サーバ に 関連 する 全て の ソフトウェア を / www に 置く という 決まり が ある かも しれ ませ ん 。 
そこで 、 アドオン の Python モジュール が / www / python 置か れる こと に なる と 、 モジュール を import する ため に は ディレクトリ を sys . path に 追加 せ ね ば なり ませ ん 。 
ディレクトリ を 検索 パス に 追加 する に は 、 いくつ か の 異なる 方法 が 存在 し ます 。 
最も 手軽 な 方法 は 、 パス 設定 ファイル を すでに Python の 検索 パス に 含ま れる ディレクトリ 、 通常 は .../ site - packages / ディレクトリ に 置く という もの です 。 
パス 設定 ファイル は 拡張 子 が . pth で 、 ファイル に は sys . path に 追加 する パス を 一行 に 一つ づつ 記述 し なけれ ば なり ませ ん 。 
( 新た な パス は 今 の sys . path の 後ろ に 追加 さ れる ので 、 追加 さ れ た ディレクトリ 内 に ある モジュール が 標準 の モジュール セット を 上書き する こと は あり ませ ん 。 
つまり 、 この メカニズム を 使っ て 、 標準 モジュール に対する 修正 版 の インストール は でき ない という こと です 。 ) パス は 絶対 パス で も 相対 パス で も よく 、 相対 パス の 場合 に は . pth ファイル の ある パス から の 相対 に なり ます 。 
site モジュール の ドキュメント 
を 読ん で ください 。 やや 便利 さ に は 欠け ます が 、 Python の 標準 ライブラリ 中 に ある site . py ファイル を 編集 する こと で も 、 sys . path を 変更 でき ます 。 
site . py は 、 - S スイッチ を 与え て 抑制 し ない かぎり 、 Python インタプリタ が 実行 さ れる 際 に 自動的 に import さ れ ます 。 
ただし 、 設定 する に は 、 単に site . py を 編集 し て 、 例えば 以下 の よう な 二 行 を 加え ます : 
しかしながら 、 ( 例えば 2 . 2 から 2 . 2 . 2 に アップ グレード する とき の よう に ) 同じ メジャー バージョン の Python を 再 インストール する と 、 site . py は 手持ち の バージョン で 上書き さ れ て しまい ます 。 
ファイル が 変更 さ れ て いる こと を 覚え て おき 、 インストール を 行う 前 に コピー を 忘れ ず とっ て おか ね ば なり ませ ん 。 また 、 sys . path を 修正 できる 二つ の 環境 変数 が あり ます 。 
PYTHONHOME を 使う と 、 インストール さ れ て いる Python の プレフィクス を 別 の 値 に 設定 でき ます 。 
例えば 、 PYTHONHOME を "/ www / python " に 設定 する と 、 検索 パス は ['', '/ www / python / lib / python 2 . 2 /', '/ www / python / lib / python 2 . 3 / plat - linux 2 ', ...] といった 具合 に なり ます 。 
PYTHONPATH を 使う と 、 sys . path の 先頭 に 一連 の パス を 追加 でき ます 。 
例えば 、 PYTHONPATH を "/ www / python :/ opt / py " に 設定 する と 、 検索 パス は ['/ www / python ', '/ opt / py '] から 始まり ます 。 
( sys . path に ディレクトリ を 追加 する に は 、 その ディレクトリ が 実在 し なけれ ば なり ませ ん ; site は 実在 し ない ディレクトリ を 除去 し ます 。 
) 最後 に 、 sys . path は ただ の 普通 の Python の リスト な ので 、 どんな Python アプリケーション も エントリ を 追加 し たり 除去 し たり といった 修正 を 行え ます 。 
セマフォ は しばしば 、 容量 に 限り の ある 資源 、 例えば データベース サーバ など を 保護 する ため に 使わ れ ます 。 
リソース の サイズ が 固定 の 状況 で は 、 常に 有限 セマフォ を 使わ ね ば なり ませ ん 。 
主 スレッド は 、 作業 スレッド を 立ち 上げる 前 に セマフォ を 初期 化 し ます : 
作業 スレッド は 、 ひとたび 立ち上がる と 、 サーバ へ 接続 する 必要 が 生じ た とき に セマフォ の acquire および release メソッド を 呼び出し ます : 
有限 セマフォ を 使う と 、 セマフォ を 獲得 回数 以上 に 解放 し て しまう という プログラム 上 の 間違い を 見逃し にくく し ます 。 
セマフォ ( semaphore ) は 、 計算 機 科学 史上 最も 古い 同期 プリミティブ の 一つ で 、 草創 期 の オランダ 計算 機 科学 者 Edsger W . Dijkstra によって 発明 さ れ まし た ( 彼 は acquire () と release () の 代わり に P () と V () を 使い まし た )。 セマフォ は acquire () で デクリメント さ れ release () で インクリメント さ れる よう な 内部 カウンタ を 管理 し ます 。 
カウンタ は 決して ゼロ より 小さく は なり ませ ん ; acquire () は 、 カウンタ が ゼロ に なっ て いる 場合 、 他 の スレッド が release () を 呼び出す まで ブロック し ます 。 
クラス Semaphore 
オプション の 引数 に は 、 内部 カウンタ の 初期 値 を 指定 し ます 。 
デフォルト は 1 です 。 
セマフォ を 獲得 し ます 。 引数 なし で 呼び出し た 場合 : acqure () 処理 に 入っ た とき に 内部 カウンタ が ゼロ より 大きけれ ば 、 カウンタ を 1 デクリメント し て 即座 に 処理 を 戻し ます 。 
acqure () 処理 に 入っ た とき に 内部 カウンタ が ゼロ の 場合 、 他 の スレッド が release () を 呼び出し て カウンタ を ゼロ より 大きく する まで ブロック し ます 。 
この 処理 は 、 適切 な インター ロック ( interlock ) を 介し て 行い 、 複数 の acquire () 呼び出し が ブロック さ れ た 場合 、 release () が 正確 に 一つ だけ を 起こせる よう に し ます 。 
この 実装 は ランダム に 一つ 選択 する だけ で も よい ので 、 ブロック さ れ た スレッド が どの 起こさ れる 順番 に 依存 し て は なり ませ ん 。 
引数 なし で 呼び出し た 場合 に ブロック する よう な 状況 で あっ た 場合 に は 直ちに 偽 を 返し ます 。 それ 以外 の 場合 に は 、 引数 なし で 呼び出し た とき と 同じ 処理 を 行い 真 を 返し ます 。 
内部 カウンタ を 1 インクリメント し て 、 セマフォ を 解放 し ます 。 
release () 処理 に 入っ た とき に カウンタ が ゼロ で あり 、 カウンタ の 値 が ゼロ より 大きく なる の を 待っ て いる 別 の スレッド が あっ た 場合 、 その スレッド を 起こし ます 。 
クラス SequenceMatcher 
オプション の 引数 isjunk は 、 None ( デフォルト の 値 です ) に する か 、 単一 の 引数 を とる 関数 に せ ね ば なり ませ ん 。 後者 の 場合 、 関数 は シーケンス の 要素 を 受け取り 、 要素 が `` junk '' で あり 、 無視 す べき で ある 場合 に 限り 真 を かえす よう に せ ね ば なり ませ ん 。 
isjunk に None を 渡す と 、 lambda x : 0 を 渡し た の と 同じ に なり ます ; すなわち 、 いかなる 要素 も 無視 し なく なり ます 。 例えば 以下 の よう な 引数 を 渡す と 、 空白 と タブ 文字 を 無視 し て 文字 の シーケンス を 比較 し ます 。 
オプション の 引数 a と b は 、 比較 さ れる 文字 列 です 。 
デフォルト で 、 それら は 空 の 文字 列 で 、 文字 列 の 要素 は ハッシュ 化 でき ます 。 
SequenceMatcher オブジェクト は 以下 の メソッド を 持ち ます 。 
比較 さ れる 2 つ の 文字 列 を 設定 し ます 。 
SequenceMatcher オブジェクト は 2 つ 目 の 文字 列 について の 詳細 な 情報 を 算定 し 、 保管 し ます 。 その ため 、 ひとつ の 文字 列 を いくつ も の 文字 列 と 比較 する 場合 、 まず set _ seq 2 () を 使っ て 文字 列 を 設定 し て おき 、 別 の 文字 列 を ひとつ づつ 比較 する ため に 、 繰り返し set _ seq () を 呼び出し ます 。 
比較 を 行う ひとつ 目 の 文字 列 を 設定 し ます 。 
比較 さ れる 2 つ 目 の 文字 列 は 変更 さ れ ませ ん 。 
比較 を 行う 2 つめ 目 の シーケンス を 設定 し ます 。 
比較 さ れる ひとつ 目 の シーケンス は 変更 さ れ ませ ん 。 
isjunk が 省略 さ れ た か None の 時 、 get _ longest _ match () は 
a [ i : i + k ] が b [ j : j + k ] と 等しい よう な ( i , j , k ) を 返し ます 。 
その 値 は 
かつ 
( i ', j ', k ') で も 、 同じ よう に なり ます 。 
さらに 
が 
でも 同様 です 。 言い換える と 、 いくつ も の マッチ 列 すべて の うち 、 a 内 で 最初 に 始まる もの を 返し ます 。 
そして その a 内 で 最初 の マッチ 列 すべて の うち b 内 で 最初 に 始まる もの を 返し ます 。 s = SequenceMatcher ( None , " abcd ", " abcd abcd ") s . find _ longest _ match ( 0 , 5 , 0 , 9 )( 0 , 4 , 5 ) 
引数 isjunk が 与え られ て いる 場合 、 上記 の 通り 、 はじめ に 再 長 の マッチ 列 を 判定 し ます 。 ブロック 内 に junk 要素 が 見当たら ない よう な 追加 条件 の 際 は これ に 該当 し ませ ん 。 
代わり に ' abcd ' に は マッチ し ます 。 
どんな 列 に も マッチ し ない 時 は 、 ( alo , blo , 0 ) を 返し ます 。 
マッチ し た シーケンス 中 で 個別 に マッチ し た シーケンス を あらわす 、 3 つ の 値 の リスト を 返し ます 。 
最後 の タプル は ダミー で 、 ( len ( a ), len ( b ), 0 ) という 値 を 持ち ます 。 これ は 
n == 0 で ある 唯一 の タプル です 。 
a を b に する ため の 方法 を 記述 する 5 つ の タプル を 返し ます 。 それぞれ の タプル は ( tag , i 1 , i 2 , j 1 , j 2 ) という 形式 で あらわさ れ ます 。 
最初 の タプル は 
a [ i 1 : i 2 ] は 
b [ j 1 : j 2 ] に 置き換え られる 
a [ i 1 : i 2 ] は 削除 さ れる 。 
この 時 、 
で ある 
b [ j 1 : j 2 ] が a [ i 1 : i 1 ] に 挿入 さ れる 。 
この 時 
で ある 。 
例 : a = " qabxcd " b = " abycdf " s = SequenceMatcher ( None , a , b ) for tag , i 1 , i 2 , j 1 , j 2 in s . get _ opcodes ():... print ("% 7 s a [% d :% d ] (% s ) b [% d :% d ] (% s )" %... ( tag , i 1 , i 2 , a [ i 1 : i 2 ], j 1 , j 2 , b [ j 1 : j 2 ])) delete a [ 0 : 1 ] ( q ) b [ 0 : 0 ] () equal a [ 1 : 3 ] ( ab ) b [ 0 : 2 ] ( ab ) replace a [ 3 : 4 ] ( x ) b [ 2 : 3 ] ( y ) equal a [ 4 : 6 ] ( cd ) b [ 3 : 5 ] ( cd ) insert a [ 6 : 6 ] () b [ 5 : 6 ] ( f ) 
[ 0 , 1 ] の 範囲 の 浮動 小数点 で 、 シーケンス の 同一 性 を 測る 値 を 返し ます 。 T が 2 つ の シーケンス それぞれ が もつ 要素 の 総数 だ と 仮定 し 、 M を マッチ し た 数 と する と 、 この 値 は 2 . 0 * M / T で あらわさ れ ます 。 
ratio () で 測定 する 同一 性 を より 素早く 、 限定 さ れ た 形 で 測り ます 。 
この メソッド は ratio () より 限定 さ れ て おり 、 これ を 超える と は 見なさ れ ませ ん が 、 高速 に 実行 し ます 。 
ratio () で 測定 する 同一 性 を 非常 に 素早く 測り ます 。 
この メソッド は ratio () より 限定 さ れ て おり 、 これ を 超える と は 見なさ れ ませ ん が 、 ratio () や quick _ ratio () より 高速 に 実行 し ます 。 
この 文字 列 全体 の マッチ 率 を 返す 3 つ の メソッド は 、 異なる 近似 値 に 基づく 異なる 結果 を 返し ます 。 
と は いえ 、 quick _ ratio () と real _ quick _ ratio () は 、 常に ratio () より 大きな 値 を 示し ます 。 s = SequenceMatcher ( None , " abcd ", " bcde ") s . ratio () 0 . 75 s . quick _ ratio () 0 . 75 s . real _ quick _ ratio () 1 . 0 
以下 の オプション と なる メソッド を 定義 し て 、 シーケンス オブジェクト を より 高度 に エミュレーション でき ます 。 
変更 不能 な シーケンス の メソッド で は 、 __ getslice __() が 定義 できる だけ です ; 変更 可能 な シーケンス で は 三つ の メソッド 全て を 定義 でき ます 。 
リリース 2 . 0 で 撤廃 さ れ まし た 。 スライス オブジェクト は __ getitem __() メソッド の パラメタ として サポート する よう に なり まし た 。 
self [ i : j ] の 値 評価 を 実現 する ため に 呼び出さ れ ます 。 
返さ れる オブジェクト は self と 同じ 型 で なけれ ば なり ませ ん 。 
スライス 表記 で i や j が ない 場合 に は 、 それぞれ ゼロ や sys . maxint に 置き換え られる ので 注意 し て ください 。 
スライス に 負 の インデクス が 用い られ た 場合 、 シーケンス の 長 さ が インデクス 値 に 加算 さ れ ます 。 
self [ i : j ] へ の 代入 を 実現 する ため に 呼び出さ れ ます 。 
i および j に関して は 、 __ getslice __() と 同じ 注釈 が あてはまり ます 。 この メソッド は 撤廃 さ れ て い ます 。 
self [ i : j ] の 削除 を 実現 する ため に 呼び出さ れ ます 。 
これら の メソッド は 、 単一 の コロン を 使っ た 単一 の スライス で 、 かつ スライス メソッド が 利用 できる とき に だけ 呼び出さ れる こと に 注意 し て ください 。 
拡張 スライス 表記 を 含ん で いる スライス 表記 や 、 スライス メソッド が ない 場合 、 __ getitem __()、__ setitem __() 、 あるいは __ delitem __() が スライス オブジェクト を 引数 として 呼び出さ れ ます 。 以下 の 例 は 、 プログラム や モジュール を 以前 の バージョン の Python に対して 互換 性 を 持た せる 方法 を 示し た もの です (__ getitem __()、 __ setitem __() 、 および __ delitem __() は 引数 として スライス オブジェクト を サポート する もの と 仮定 し ます ): 
max () を 呼び出し て いる こと に 注意 し て ください ; この 呼び出し __* slice __() メソッド 呼び出さ れる 前 に 、 負 の インデクス 値 を 処理 し て おく ため に 必要 です 。 
負 の インデクス 値 が 使わ れ た 場合 、 __* item __() メソッド は 与え られ た 値 を そのまま 使い ます が 、 __* slice __() メソッド は `` 調理 済み の ( cooked )'' 形式 に なっ た インデクス 値 を 受け取り ます 。 
負 の インデクス 値 が 使わ れる と 、 メソッド を 呼び出す 前 に 、 常に シーケンス の 長 さ を インデクス 値 に 加算 し ます ( 加算 し て も まだ 負 の 値 と なっ て い て も かまい ませ ん ); これ は 、 組み込み シーケンス 型 における 慣習 的 な 負 の インデクス 処理 方法 で 、 __* item __() メソッド でも 同様 の 処理 を 行う よう 期待 し て い ます 。 
しかし 、 ここ で は すでに 負 の インデクス 値 の 処理 を 行っ て いる ので 、 負 の インデクス を 渡す べき で は あり ませ ん ; インデクス 値 は 、 __* item __() メソッド に 渡さ れる 前 に 、 シーケンス の インデクス 集合 の 境界 に 制限 さ れ て い なけれ ば なり ませ ん 。 max ( 0 , i ) を 呼び出せ ば 、 適切 な 値 を 返す ので 便利 です 。 
10 . 7 バッファ オブジェクト 構造 体 ( buffer object 
拡張 型 で シーケンス 型 プロトコル を 実装 する ため に 使わ れる 関数 群 へ の ポインタ を 保持 する ため に 使わ れる 構造 体 です 。 
以下 の メソッド を 定義 し て 、 コンテナ オブジェクト を 実装 する こと が でき ます 。 
コンテナ は 通常 、 ( リスト や タプル の よう な ) シーケンス や 、 ( 辞書 の よう な ) マップ 型 を 指し ます が 、 他 の コンテナ も 同じ よう に 表現 する こと が でき ます 。 
最初 の 一連 の メソッド は 、 シーケンス を エミュレート し たり 、 マップ 型 を エミュレート する ため に 使わ れ ます ; その 違い として 、 シーケンス の 場合 に は 、 キー として 許さ れ て いる の が 、 シーケンス の 長 さ が N で ある とき の 0 = k N 
なる 整数 k か 、 あるいは 要素 の 範囲 を 表す スライス オブジェクト で なけれ ば なら ない という こと です 。 
( 後方 互換 性 の ため 、 __ getslice __() ( 以下 参照 ) を 定義 し て 、 拡張 さ れ て い ない 単純 な スライス を 扱う よう に も でき ます 。 
) 変更 可能 な シーケンス で は 、 Python の 標準 リスト オブジェクト の よう に 、 メソッド append ()、 count ()、 index ()、 extend ()、 insert ()、 pop ()、 remove ()、 reverse ()、 および sort () を 提供 し なけれ ば なり ませ ん 。 マップ 型 で も 、 Python の 標準 辞書 オブジェクト の よう に 、 keys ()、 values ()、 items ()、 has _ key ()、 get ()、 clear ()、 setdefault ()、 iterkeys ()、 itervalues ()、 iteritems ()、 pop ()、 popitem ()、 copy ()、 および update () といった メソッド を マップ 型 で 提供 する よう 推奨 し て い ます 。 
UserDict モジュール で は 、 これら の メソッド を __ getitem __()、 __ setitem __()、__ delitem __()、 および keys () といった 基本 セット から 作成 する 上 で 役に立つ DictMixin クラス を 提供 し て い ます 。 
最後 に 、 シーケンス 型 で は 以下 に 述べる メソッド 群 __ add __()、__ radd __()、 __ iadd __()、__ mul __()、__ rmul __()、 および __ imul __() を 定義 し て 、 ( シーケンス 間 の 結合 を 意味 する ) 加算 操作 と ( 要素 の 繰り返し を 意味 する ) 乗算 操作 を 実装 し なけれ ば なり ませ ん ; __ coerce __() や 、 その他 の 数値 演算 子 を 定義 し て は なり ませ ん 。 
マップ で も シーケンス で も 、 in 演算 子 が 有効 利用 できる よう に __ contains __() メソッド の 定義 を 推奨 し ます ; マップ 型 で は 、 in は has _ key () と 等価 で なけれ ば なり ませ ん ; シーケンス で は 、 シーケンス 内 の 値 にわたって 検索 を 行わ なけれ ば なり ませ ん 。 
さらに 、 マップ で も シーケンス で も 、 コンテナ 内 にわたる 反復 操作 が できる よう に する ため 、 __ iter __() を 実装 する よう 勧め ます ; マップ 型 の 場合 、 __ iter __() は iterkeys () と 等価 で なけれ ば なり ませ ん ; シーケンス の 場合 、 シーケンス 内 の 値 にわたって 反復 操作 を 行わ なけれ ば なり ませ ん 。 
オブジェクト の 長 さ を = 0 で ある 整数 で 返さ なけれ ば なり ませ ん 。 
また 、 オブジェクト が __ nonzero __() メソッド を 定義 し て おら ず 、 __ len __() メソッド が ゼロ を 返す 場合 に は 、 ブール 演算 コンテキスト で は 偽 で ある と みなさ れ ます 。 
self [ key ] の 値 評価 ( evaluation ) を 実現 する ため に 呼び出さ れ ます 。 
シーケンス の 場合 、 キー として 整数 と スライス オブジェクト を 受理 でき なけれ ば なり ませ ん 。 
( シーケンス 型 を エミュレート する 場合 ) 負 の インデクス の 解釈 は __ getitem __() メソッド 次第 と なり ます 。 key が 不適切 な 型 で あっ た 場合 、 TypeError を 送出 し て も かまい ませ ん ; ( 負 の インデクス 値 に対して 何らかの 解釈 を 行っ た 上 で ) key が シーケンス の インデクス 集合 外 の 値 で ある 場合 、 IndexError を 送出 し なけれ ば なり ませ ん 。 
for ループ で は 、 シーケンス の 終端 を 正しく 検出 できる よう に する ため に 、 不正 な インデクス に対して IndexError が 送出 さ れる もの と 期待 し て い ます 。 
self [ key ] に対する 代入 を 実現 する ため に 呼び出さ れ ます 。 
__ getitem __() と 同じ 注意 事項 が あてはまり ます 。 
この メソッド を 実装 できる の は 、 ある キー に対する 値 の 変更 を サポート し て いる か 、 新た な キー を 追加 できる よう な マップ の 場合 と 、 ある 要素 を 置き換える こと が できる シーケンス の 場合 だけ です 。 
不正 な key に対して は 、 __ getitem __() メソッド と 同様 の 例外 の 送出 を 行わ なけれ ば なり ませ ん 。 
self [ key ] の 削除 を 実現 する ため に 呼び出さ れ ます 。 
この メソッド を 実装 できる の は 、 キー の 削除 を サポート し て いる マップ の 場合 と 、 要素 を 削除 できる シーケンス の 場合 だけ です 。 
不正 な key に対して は 、 __ getitem __() メソッド と 同様 の 例外 の 送出 を 行わ なけれ ば なり ませ ん 。 
この メソッド は 、 コンテナ に対して イテレータ が 要求 さ れ た 際 に 呼び出さ れ ます 。 この メソッド は 、 コンテナ 内 の 全て の オブジェクト にわたる 反復 処理 が できる よう な 、 新た な イテレータオブジェクト を 返さ なけれ ば なり ませ ん 。 
マップ の 場合 、 コンテナ 内 の キー に 渡る 反復 処理 で なけれ ば なら ず 、 かつ iterkeys () によって 利用 でき なけれ ば なり ませ ん 。 イテレータオブジェクト で も この メソッド を 実装 する 必要 が あり ます ; イテレータ の 場合 、 自分 自身 を 返さ なけれ ば なり ませ ん 。 
イテレータオブジェクト に関する より 詳細 な 情報 は 、 
の `` イテレータ 型 '' を 参照 し て ください 。 
メンバシップテスト 演算 子 ( in および not in ) は 通常 、 シーケンス に 渡る 反復 処理 を 使っ て 実装 さ れ ます 。 
しかし 、 コンテナ オブジェクト で 以下 の 特殊 メソッド を 定義 し て 、 より 効率 的 な 実装 を 行っ たり 、 オブジェクト が シーケンス で なく て も よい よう に でき ます 。 
メンバシップテスト 演算 を 実現 する ため に 呼び出さ れ ます 。 
item が self 内 に 存在 する 場合 に は 真 を 、 そう で ない 場合 に は 偽 を 返さ なけれ ば なり ませ ん 。 
マップ オブジェクト の 場合 、 値 や キー と 値 の 組 で は なく 、 キー に対する メンバシップテスト を 考え なけれ ば なり ませ ん 。 
オブジェクト が シーケンス 型 プロトコル を 提供 し て いる 場合 に 1 を 返し 、 そう で ない とき に は 0 を 返し ます 。 
成功 する と シーケンス o 中 の オブジェクト の 数 を 返し 、 失敗 する と - 1 を 返し ます 。 
シーケンス 型 プロトコル を サポート し ない オブジェクト に対して は 、 Python の 式 " len ( o )" と 同じ に なり ます 。 
PySequence _ Size () の 別名 です 。 
成功 する と オブジェクト o の count 回 繰り返し を 返し 、 失敗 する と NULL を 返し ます 。 
Python の 式 " 
成功 する と o 1 と o 2 の 連結 ( concatenation ) を 返し 、 失敗 する と NULL を 返し ます 。 
o 1 が in - place 演算 を サポート する 場合 、 in - place 演算 を 行い ます 。 
成功 する と o の i 番目 の 要素 を 返し 、 失敗 する と NULL を 返し ます 。 Python の 式 " 
o [ i ]" と 同じ です 。 
成功 する と o の i 1 から i 2 まで の 間 の スライス を 返し 、 失敗 する と NULL を 返し ます 。 
o [ i 1 : i 2 ]" と 同じ です 。 
o の i 番目 の 要素 に v を 代入 し ます 。 
o の i 番目 の 要素 を 削除 し ます 。 
失敗 する と - 1 を 返し ます 。 
Python の 文 " del o [ i ]" と 同じ です 。 
o の i 1 から i 2 まで の 間 の スライス に v を 代入 し ます 。 
Python の 文 " 
シーケンス オブジェクト o の i 1 から i 2 まで の 間 の スライス を 削除 し ます 。 
Python の 文 " del o [ i 1 : i 2 ]" と 同じ です 。 
o における value の 出現 回数 、 すなわち o [ key ] == value 
と なる key の 個数 を 返し ます 。 
Python の 式 " 
o . count ( value )" と 同じ です 。 
o に value が 入っ て いる か 判定 し ます 。 
o の ある 要素 が value と 等価 ( equal ) なら ば 1 を 返し 、 それ 以外 の 場合 に は 0 を 返し ます 。 エラー が 発生 する と - 1 を 返し ます 。 
Python の 式 " 
エラー が 発生 する と - 1 を 返し ます 。 
o . index ( value )" と 同じ です 。 
任意 の シーケンス o と 同じ 内容 を 持つ リスト オブジェクト を 返し ます 。 
返さ れる リスト は 必ず 新しい リスト オブジェクト に なり ます 。 
任意 の シーケンス o と 同じ 内容 を 持つ タプルオブジェクト を 返し ます 。 
o が タプル の 場合 、 新た な 参照 を 返し ます 。 
それ 以外 の 場合 、 適切 な 内容 が 入っ た タプル を 構築 し て 返し ます 。 PyObject * 
シーケンス o が すでに タプル や リスト で あれ ば o を 返し 、 そう で なけれ ば o を タプル で 返し ます 。 
返さ れる タプル の メンバ に アクセス する に は PySequence _ Fast _ GET _ ITEM () を 使っ て ください 。 
オブジェクト が シーケンス で なけれ ば 、 m が メッセージ テキスト に なっ て いる TypeError を 送出 し ます 。 
PyObject ポインタ の 背後 に ある アレイ を 返し ます ． この 関数 で は ， o は PySequence _ Fast () の 返し た オブジェクト で あり ， NULL で ない もの と 仮定 し て い ます ． バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
o が NULL で なく 、 PySequence _ Fast () が 返し た オブジェクト で ある と 仮定 し て 、 o の 長 さ を 返し ます 。 
o の サイズ は PySequence _ Size () を 呼び出し て も 得 られ ます が 、 PySequence _ Fast _ GET _ SIZE () の 方 が o を リスト か タプル で ある と 仮定 し て 処理 する ため 、 より 高速 です 。 
7 . 2 . 5 . 2 Python オブジェクト として の 複素数 型 
シーケンス オブジェクト に対する 一般 的 な 操作 について は 前 の 章 で すでに 述べ まし た ; この 節 で は 、 Python 言語 に もともと 備わっ て いる 特定 の シーケンス オブジェクト について 扱い ます 。 
この 例 は 2 つ の 文字 列 を 比較 し ます 。 
空白 を `` junk '' と し ます 。 
ratio () は 、 [ 0 , 1 ] の 範囲 の 値 を 返し 、 シーケンス の 同一 性 を 測り ます 。 
経験 に よる と 、 ratio () の 値 が 0 . 6 を 超える と 、 シーケンス が よく 似 て いる こと を 示し ます 。 
シーケンス の どこ が マッチ し て いる かに だけ 興味 の ある 時 に は get _ matching _ blocks () が 手軽 でしょ う 。 
注意 : 最後 の タプル は 、 get _ matching _ blocks () が 常に ダミー で ある こと で 返さ れる もの です 。 ( len ( a ), len ( b ), 0 ) で あり 、 これ は 最後 の タプル の 要素 （ マッチ する よう その 数 ） が ゼロ と なる 唯一 の ケース です 。 
はじめ の シーケンス が どの よう に し て 2 番目 の もの に なる の か を 知る に は 、 get _ opcodes () を 使い ます 。 for opcode in s . get _ opcodes ():... print "% 6 s a [% d :% d ] b [% d :% d ]" % opcodeequal a [ 0 : 8 ] b [ 0 : 8 ] insert a [ 8 : 8 ] b [ 8 : 17 ] equal a [ 8 : 14 ] b [ 17 : 23 ] equal a [ 14 : 29 ] b [ 23 : 38 ] 
See also the function get _ close _ matches () in this module , which shows how simple code building on SequenceMatcher can beused to do useful work . SequenceMatcher を 使っ た 、 シンプル で 使える コード を 知る に は 、 この モジュール の 関数 get _ close _ matches () を 参照 し て ください 。 
ServerProxy インスタンス の 各 メソッド は それぞれ XML - RPC サーバ の 遠隔 手続き 呼び出し に 対応 し て おり 、 メソッド が 呼び出さ れる と 名前 と 引数 を シグネチャ として RPC を 実行 し ます ( 同じ 名前 の メソッド で も 、 異なる 引数 シグネチャ によって オーバロード さ れ ます )。 
RPC 実行 後 、 変換 さ れ た 値 を 返す か 、 または Fault オブジェクト もしくは ProtocolError オブジェクト で エラー を 通知 し ます 。 予約 メンバ system から 、 XML イントロスペクション API の 一般 的 な メソッド を 利用 する 事 が でき ます 。 
XML - RPC サーバ が サポート する メソッド 名 ( system 以外 ) を 格納 する 文字 列 の リスト を 返し ます 。 
XML - RPC サーバ で 実装 さ れ て いる メソッド の 名前 を 指定 し 、 利用 可能 な シグネチャ の 配列 を 取得 し ます 。 
シグネチャ は 型 の リスト で 、 先頭 の 型 は 戻り 値 の 型 を 示し 、 以降 は パラメータ の 型 を 示し ます 。 
XML - RPC で は 複数 の シグネチャ ( オーバロード ) を 使用 する こと が できる ので 、 単独 の シグネチャ で は なく 、 シグネチャ の リスト を 返し ます 。 シグネチャ は 、 メソッド が 使用 する 最 上位 の パラメータ に のみ 適用 さ れ ます 。 
例えば ある メソッド の パラメータ が 構造 体 の 配列 で 戻り 値 が 文字 列 の 場合 、 シグネチャ は 単に " 文字 列 , 配列 " と なり ます 。 
パラメータ が 三つ の 整数 で 戻り 値 が 文字 列 の 場合 は " 文字 列 , 整数 , 整数 , 整数 " と なり ます 。 メソッド に シグネチャ が 定義 さ れ て い ない 場合 、 配列 以外 の 値 が 返り ます 。 
Python で は 、 この 値 は list 以外 の 値 と なり ます 。 
XML - RPC サーバ で 実装 さ れ て いる メソッド の 名前 を 指定 し 、 その メソッド を 解説 する 文書 文字 列 を 取得 し ます 。 
文書 文字 列 を 取得 でき ない 場合 は 空文字 列 を 返し ます 。 
文書 文字 列 に は HTML マーク アップ が 含ま れ ます 
イントロスペクション 用 の メソッド は 、 PHP ・ C ・ Microsoft . NET の サーバ など で サポート さ れ て い ます 。 
UserLand Frontier の 最近 の バージョン で も イントロスペクション を 部分 的 に サポート し て い ます 。 
Perl , Python , Java で の イントロスペクションサポート について は XML - RPC Hacks を 参照 し て ください 。 
Set と ImmutableSet の インスタンス は ともに 、 以下 の 操作 を 備え て い ます : 
等価 な 演算 
集合 s の 濃度 ( cardinality ) 
x が s に 帰属 し て いれ ば 真 を 返す 
x が s に 帰属 し て い なけれ ば 真 を 返す 
s の すべて の 要素 が t に 帰属 し て いれ ば 真 を 返す 
t の すべて の 要素 が s に 帰属 し て いれ ば 真 を 返す 
s と t の 両方 の 要素 から なる 新しい 集合 
s と t で 共通 する 要素 から なる 新しい 集合 
s に ある が t に ない 要素 から なる 新しい 集合 
s と t の どちら か 一方 に 属する 要素 から なる 集合 
s の 浅い コピー から なる 集合 
演算 子 を 使わ ない 書き方 で ある union ()、 intersection ()、 difference ()、 および symmetric _ difference () は 任意 の イテレート 可能 オブジェクト を 引数 として 受け取る の に対し 、 演算 子 を 使っ た 書き方 の 方 で は 引数 は 集合 型 で なけれ ば なら ない ので 注意 し て ください 。 これ は エラー の 元 と なる Set (' abc ') ' cbs ' の よう な 書き方 を 排除 し 、 より 可読性 の ある Set (' abc '). intersection (' cbs ') を 選ば せる ため の 仕様 です 。 
バージョン 2 . 3 . 1 で 変更 さ れ た 仕様 : 以前 は 全て の 引数 が 集合 型 で なけれ ば なり ませ ん でし た 。 
加え て 、 Set と ImmutableSet は 集合 間 の 比較 を サポート し て い ます 。 
たとえば 、 互いに 素 な 2 つ の 集合 は 等しく あり ませ ん し 、 互い の 部分 集合 で も ない ので 、 
s の ハッシュ 値 を 返す 
以下 は Set で 利用 可能 で ある が ImmutableSet に は ない 操作 です : 
t を 加え た 要素 から なる 集合 s を 返し ます 
t でも 見つかっ た 要素 だけ を 持つ 集合 s を 返し ます 
t に あっ た 要素 を 取り除い た 後 の 集合 s を 返し ます 
s と t の どちら か 一方 に 属する 要素 から なる 集合 s を 返し ます 
要素 x を 集合 s に 加え ます 
要素 x を 集合 s から 取り除き ます ; x が なけれ ば KeyError を 送出 し ます 
要素 x が 存在 すれ ば 、 集合 s から 取り除き ます 
s から 要素 を 取り除き 、 それ を 返し ます ; 集合 が 空 なら KeyError を 送出 し ます 
集合 s から すべて の 要素 を 取り除き ます 
演算 子 を 使わ ない 書き方 で ある union _ update ()、 intersection _ update ()、 difference _ update ()、 および symmetric _ difference _ update () は 任意 の イテレート 可能 オブジェクト を 引数 として 受け取る ので 注意 し て ください 。 バージョン 2 . 3 . 1 で 変更 さ れ た 仕様 : 以前 は 全て の 引数 が 集合 型 で なけれ ば なり ませ ん でし た 。 
時に 、 配布 物 を ビルド する 際 に 必要 な 全て の 設定 を あらかじめ 書き きれ ない 状況 が 起き ます : 例えば 、 ビルド を 進める ため に 、 ユーザ に関する 情報 や 、 ユーザ の システム に関する 情報 を 必要 と する か も しれ ませ ん 。 
こうした 情報 が 単純 -- C ヘッダ ファイル や ライブラリ を 検索 する ディレクトリ の リスト の よう に -- で ある かぎり 、 ユーザ に 設定 ファイル ( configuration file ) setup . cfg を 提供 し て 編集 し て もらう の が 、 安上がり で 簡単 な 特定 方法 に なり ます 。 
設定 ファイル は また 、 あらゆる コマンド における オプション に デフォルト 値 を 与え て おき 、 インストール 作業 者 が コマンド ライン 上 や 設定 ファイル の 編集 で デフォルト 設定 を 上書き できる よう に し ます 。 
setup 設定 ファイル は setup スクリプト -- 理想 的 に は インストール 作業 者 から 見え ない もの 1 
-- と 、 作者 の 手 を 離れ て 、 全て インストール 作業 者 次第 と なる setup スクリプト の コマンド ライン 引数 と の 間 を 橋渡し する 中間 層 として 有効 です 。 
実際 、 setup . cfg ( と 、 ターゲット システム 上 に ある 、 その他 の Distutils 設定 ファイル ) は 、 setup スクリプト の 内容 より 後で 、 かつ コマンド ライン で 上書き する 前 に 処理 さ れ ます 。 
この 仕様 の 結果 、 いくつ か の 利点 が 生まれ ます : 
インストール 作業 者 は 、 作者 が setup . py に 設定 し た 項目 の いくつ か を setup . cfg を 変更 し て 上書き でき ます 。 
setu . py で は 簡単 に 設定 でき ない よう な 、 標準 で ない オプション の デフォルト 値 を 設定 でき ます 。 
インストール 作業 者 は 、 setup . cfg に 書か れ た どんな 設定 も setup . py の コマンドラインオプション で 上書き でき ます 。 
設定 ファイル の 基本 的 な 構文 は 簡単 な もの です : 
ここ で 、 command は Distutils コマンド の うち の 一つ ( 例えば build _ py , install ) で 、 option は その コマンド で サポート さ れ て いる オプション の うち の 一つ です 。 
各 コマンド に は 任意 の 数 の オプション を 設定 でき 、 一つ の 設定 ファイル 中 に は 任意 の 数 の コマンド セクション を 収め られ ます 。 
空白 行 は 無視 さ れ ます 、 "#" 文字 で 開始 し て 行末 まで 続く コメント も 同様 に 無視 さ れ ます 。 
長い オプション 設定 値 は 、 継 続行 を インデント する だけ で 複数 行 にわたって 記述 でき ます 。 ある コマンド が サポート し て いる オプション の リスト は 、 -- help オプション で 調べ られ ます 。 
例えば 以下 の よう に 。 python setup . py -- help build _ ext [...] Options for ' build _ ext ' command :-- build - lib (- b ) directory for compiled extension modules -- build - temp (- t ) directory for temporary files ( build by - products )-- inplace (- i ) ignore build - lib and put compiled extensions into thesource directory alongside your pure Python modules -- include - dirs (- I ) list of directories to search for header files -- define (- D ) C preprocessor macros to define -- undef (- U ) C preprocessor macros to undefine [...] 
コマンド ライン 上 で -- foo - bar と 綴る オプション は 、 設定 ファイル 上 で は foo _ bar と 綴る ので 注意 し て ください 。 例えば 、 拡張 モジュール を `` インプレース ( in - place )'' で ビルド し たい と し ます -- すなわち 、 pkg . ext という 拡張 モジュール を 持っ て い て 、 コンパイル 済み の 拡張 モジュール ファイル ( 例えば Unix で は ext . so ) を pure Python モジュール pkg . mod 1 および pkg . mod 2 と 同じ ソース ディレクトリ に 置き たい と し ます 。 
こんな とき に は 、 -- inplace を 使え ば 、 確実 に ビルド を 行え ます 。 
しかし 、 この 操作 で は 、 常に build _ ext を 明示 的 に 指定 し なけれ ば なら ず 、 -- inplace オプション を 忘れ ず に 与え なけれ ば なり ませ ん 。 こうした 設定 を `` 設定 し っ放し に する '' 簡単 な 方法 は 、 setup . cfg に 書い て おく やり方 で 、 設定 ファイル は 以下 の よう に なり ます : 
この 設定 は 、 明示 的 に build _ ext を 指定 する か どう か に 関わら ず 、 モジュール 配布 物 の 全て の ビルド に 影響 し ます 。 
ソース 配布 物 に setup . cfg を 含める と 、 エンド ユーザ の 手 で 行わ れる ビルド に も 影響 し ます -- この オプション の 例 に関して は setup . cfg を 含める の は おそらく よく ない アイデア でしょ う 。 という の は 、 拡張 モジュール を インプレース で ビルド する と 常に インストール し た モジュール 配布 物 を 壊し て しまう から です 。 
と は いえ 、 ある 特定 の 状況 で は 、 モジュール を インストール ディレクトリ の 下 に 正しく 構築 できる ので 、 機能 として は 有用 だ と 考え られ ます 。 
( ただ 、 インストール ディレクトリ 上 で の ビルド を 想定 する よう な 拡張 モジュール の 配布 は 、 ほとんど の 場合 よく ない 考え方 です 。 ) もう 一つ 、 例 が あり ます : コマンド によって は 、 実行 時 に ほとんど 変更 さ れ ない たくさん の オプション が あり ます ; 例えば 、 bdist _ rpm に は 、 RPM 配布 物 を 作成 する 際 に 、 `` spec '' ファイル を 作成 する ため に 必要 な 情報 を 全て 与え なけれ ば なり ませ ん 。 
この 情報 に は setup スクリプト から 与える もの も あり 、 ( インストール さ れる ファイル の リスト の よう に ) Distutils が 自動的 に 生成 する もの も あり ます 。 
しかし 、 こうした 情報 の 中 に は bdist _ rpm の オプション として 与える もの が あり 、 毎回 実行 する ごと に コマンド ライン 上 で 指定 する の が 面倒 です 。 
そこで 、 以下 の よう な 内容 が Distutils 自体 の setup . cfg に は 入っ て い ます : 
doc _ files オプション は 、 単に 空白 で 区切ら れ た 文字 列 で 、 ここ で は 可読性 の ため に 複数 行 を またぐ よう に し て い ます 。 
設定 ファイル に関する 詳細 情報 は 、 システム 管理 者 向け の この マニュアル に あり ます 。 
... から 見え ない もの 
Distutils が 自動 設定 機能 ( auto - configuration ) を サポート する まで 、 おそらく この 理想 状態 を 達成 する こと は ない でしょ う 
setup スクリプト は 、 Distutils を 使っ て モジュール を ビルド し 、 配布 し 、 インストール する 際 の 全て の 動作 の 中心 に なり ます 。 
setup スクリプト の 主 な 目的 は 、 モジュール 配布 物 について Distutils に 伝え 、 モジュール 配布 を 操作 する ため の 様々 な コマンド を 正しく 動作 さ せる こと に あり ます 。 
( Distutils が 入っ て いる の は Python 1 . 6 以降 で あり 、 Python 1 . 5 . 2 ユーザ が 他 の モジュール 配布 物 を インストール できる よう に する ため の 独立 し た パッケージ が ある こと を 思い出し て ください 。 
ここ で 示し た 、 Distutils 自身 の setup スクリプト は 、 Python 1 . 5 . 2 に Distutils パッケージ を インストール する 際 に 使い ます 。 
上 の 例 と 、 2 で 示し た ファイル 一つ から なる 小さな 配布 物 と は 、 違う ところ は 二つ しか あり ませ ん : メタデータ の 追加 と 、 モジュール で は なく パッケージ として pure Python モジュール 群 を 指定 し て いる という 点 です 。 
setup スクリプト に 与える パス 名 ( ファイル または ディレクトリ ) は 、 Unix における ファイル 名 規約 、 つまり スラッシュ ('/') 区切り で 書か ね ば なり ませ ん 。 
Distutils は この プラットフォーム 中立 の 表記 を 、 実際 に パス 名 として 使う 前 に 、 現在 の プラットフォーム に 適し た 表記 に 注意深く 変換 し ます 。 
この 機能 の おかげ で 、 setup スクリプト を 異なる オペレーティングシステム 間 にわたって 可 搬性 が ある もの に でき ます 。 言うまでもなく 、 これ は Distutils の 大きな 目標 の 一つ です 。 
この 精神 に従って 、 この ドキュメント で は 全て の パス 名 を スラッシュ 区切り に し て い ます 。 
( Mac OS プログラマ は 、 先頭 に スラッシュ が ない 場合 は 、 相対 パス を 表す という こと を 心 に 留め て おか ね ば なり ませ ん 。 
この 規約 は 、 コロン を 使っ た Mac OS で の 規約 と 逆 だ から です 。 
) もちろん 、 この 取り決め は Distutils に 渡す パス 名 だけ に 適用 さ れ ます 。 もし 、 例えば glob . glob () や os . listdir () の よう な 、 標準 の Python 関数 を 使っ て ファイル 群 を 指定 する の なら 、 パス 区切り 文字 ( path separator ) を ハード コーディング せ ず 、 以下 の よう に 可 搬性 の ある コード を 書く よう 注意 す べき です : 
20 . SGI IRIX 特有 の サービス 
この 章 で 記述 さ れ て いる モジュール は 、 SGI の IRIX オペレーティングシステム ( バージョン 4 と 5 ) 特有 の 機能 へ の インター フェイス を 提供 し ます 。 
SGI の オーディオ 機能 。 
al モジュール で 使わ れる 定数 。 
Silicon Graphics システム の CD - ROM へ の インターフェース 
グラフィカルユーザーインターフェース の ため の FORMS ライブラリ 。 
fl モジュール で 使用 さ れる 定数 。 
保存 さ れ た FORMS デザイン を ロード する 関数 。 
SGI ワークステーション の Font Manager インターフェース 。 
Silicon Graphics の Graphics Library の 関数 。 
gl モジュール で 使わ れる 定数 。 
SGI imglib ファイル の サポート 。 
JPEG ファイル の 読み書き を 行い ます 。 
5 . 6 二 項 算術 演算 ( binary arithmetic 
シフト 演算 は 、 算術 演算 より も 低い 優先 順位 を 持っ て い ます : 
シフト の 演算 子 は 整数 または 長 整数 を 引数 に とり ます 。 
引数 は 共通 の 型 に 変換 さ れ ます 。 
シフト 演算 で は 、 最初 の 引数 を 二つ 目 の 引数 に 応じ た ビット 数 だけ 、 左 または 右 に ビット シフト し ます 。 n ビット の 右 シフト は 、 pow ( 2 , n ) による 除算 として 定義 さ れ て い ます 。 
n ビット の 左 シフト は 、 pow ( 2 , n ) による 乗算 として 定義 さ れ て い ます ; 整数 の 場合 、 桁 あふれ ( overflow ) の チェック は さ れ ない ので 、 演算 によって 末端 の ビット は 捨て られ ます 。 また 、 結果 の 絶対 値 が pow ( 2 , 31 ) より も 小さく ない 場合 に は 、 符号 の 反転 が 起こり ます 。 
負 の ビット 数 で シフト を 行う と 、 ValueError 例外 を 送出 し ます 。 
5 . 20 . 1 モジュール の 内容 
shlex インスタンス は 以下 の メソッド を 持っ て い ます : 
トー クン を 一つ 返し ます 。 
トー クン が push _ token () で 使っ て スタック に 積ま れ て い た 場合 、 トー クン を スタック から ポップ し ます 。 
そう で ない 場合 、 トー クン を 一つ 入力 ストリーム から 読み出し ます 。 
読み出し 即時 に ファイル 終了 子 に 遭遇 し た 場合 、 self . eof ( 非 POSIX モード で は 空文字 列 ('')、 POSIX モード で は None ) が 返さ れ ます 。 
完全 性 の ため に ここ で 記述 さ れ て い ます )。 
shlex が ソース リクエスト ( 下 の source を 参照 し て ください ) を 検出 し た 際 、 この メソッド は その後 に 続く トーク ン を 引数 として 渡さ れ 、 ファイル 名 と 開か れ た ファイル 類似 オブジェクト から なる タプル を 返す と さ れ て い ます 。 
通常 、 この メソッド は まず 引数 から 何らかの クオート を 剥ぎ 取り ます 。 処理 後 の 引数 が 絶対 パス 名 で あっ た 場合 か 、 以前 に 有効 に なっ た ソース リクエスト が 存在 し ない 場合 か 、 以前 の ソース が ( sys . stdin の よう な ) ストリーム で あっ た 場合 、 この 結果 は そのまま に さ れ ます 。 
そう で ない 場合 で 、 処理 後 の 引数 が 相対 パス 名 の 場合 、 ソースインクルードスタック に ある 直前 の ファイル 名 から ディレクトリ 部分 が 取り出さ れ 、 相対 パス の 前 の 部分 に 追加 さ れ ます ( この 動作 は C 言語 プリプロセッサ における # include " file . h " の 扱い と 同様 です ) 。 これら の 操作 の 結果 は ファイル 名 として 扱わ れ 、 タプル の 最初 の 要素 として 返さ れ ます 。 
同時に この ファイル 名 で open () を 呼び出し た 結果 が 二つ 目 の 要素 に なり ます ( 注意 : インスタンス 初期 化 の とき と は 引数 の 並び が 逆 に なっ て い ます ！ ) この フック は ディレクトリサーチパス や 、 ファイル 拡張 子 の 追加 、 その他 の 名前 空間 に関する ハック を 実装 できる よう に する ため に 公開 さ れ て い ます 。 ` close ' フック に 対応 する もの は あり ませ ん が 、 shlex インスタンス は ソース リクエスト さ れ て いる 入力 ストリーム が EOF を 返し た 時 に は close () を 呼び出し ます 。 
ソース スタック を より 明示 的 に 操作 する に は 、 push _ source () および pop _ source () メソッド を 使っ て ください 。 push _ source 
入力 ソース ストリーム を 入力 スタック に プッシュ し ます 。 
ファイル 名 引数 が 指定 さ れ た 場合 、 以後 の エラーメッセージ 中 で 利用 する こと が でき ます 。 
sourcehook メソッド が 内部 で 使用 し て いる の と 同じ メソッド です 。 
バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 pop _ source 
この メソッド は エラーメッセージ の 論述 部分 を Unix C コンパイラエラーラベル の 形式 で 生成 し ます ; この 書式 は '"% s ", line % d : ' で 、 "% s " は 現在 の ソース ファイル 名 で 置き換え られ 、 "% d " は 現在 の 入 力行 番号 で 置き換え られ ます ( オプション の 引数 を 使っ て これら を 上書き する こと も でき ます )。 この やり方 は 、 shlex の ユーザ に対して 、 Emacs や その他 の Unix ツール 群 が 解釈 できる 一般 的 な 書式 で の メッセージ を 生成 する こと を 推奨 する ため に 提供 さ れ て い ます 。 
shlex サブ クラス の インスタンス は 、 字句 解析 を 制御 し たり 、 デバッグ に 使える よう な public な インスタンス 変数 を 持っ て い ます : 
複数 文字 から なる トーク ン を 構成 する ため に バッファ に 蓄積 し て いく よう な 文字 から なる 文字 列 です 。 
標準 で は 、 全て の ASCII 英数字 および アンダー スコア が 入っ て い ます 。 
空白 と 見なさ れ 、 読み 飛ばさ れる 文字 群 です 。 
空白 は トー クン の 境界 を 作り ます 。 
標準 で は 、 スペース 、 タブ 、 改行 ( linefeed ) および 復帰 ( carriage - return ) が 入っ て い ます 。 
エスケープ 文字 と 見なさ れる 文字 群 です 。 
これ は POSIX モード で のみ 使わ れ 、 デフォルト で は "" だけ が 入っ て い ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
文字 列 引用 符 と 見なさ れる 文字 群 です 。 
トー クン を 構成 する 際 、 同じ クオート が 再び 出現 する まで 文字 を バッファ に 蓄積 し ます ( すなわち 、 異なる クオート 形式 は シェル 中 で 互いに 保護 し 合う 関係 に あり ます )。 
標準 で は 、 ASCII 単 引用 符 および 二 重 引用 符 が 入っ て い ます 。 
quotes の うち 、 escape で 定義 さ れ た エスケープ 文字 を 解釈 する 文字 群 です 。 
これ は POSIX モード で のみ 使わ れ 、 デフォルト で は """ だけ が 入っ て い ます 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
whitespace _ split この 値 が True で あれ ば 、 トー クン は 空白 文字 で のみ で 分割 さ れ ます 。 
たとえば shlex が シェル 引数 と 同じ 方法 で 、 コマンド ライン を 解析 する の に 便利 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
現在 の 入力 ファイル 名 です 。 クラス の インスタンス 化 時 に 初期 設定 さ れる か 、 その後 の ソース リクエスト で スタック さ れ ます 。 
エラーメッセージ を 構成 する 際 に この 値 を 調べる と 便利 な こと が あり ます 。 
shlex インスタンス が 文字 を 読み出し て いる 入力 ストリーム です 。 
この メンバ 変数 は 標準 で None を 取り ます 。 
この 値 に 文字 列 を 代入 する と 、 その 文字 列 は 多く の シェル における " source " キーワード に 似 た 、 字句 解析 レベル で の インクルード 要求 として 認識 さ れ ます 。 
すなわち 、 その 直後 に 現れる トーク ン を ファイル 名 として 新た な ストリーム を 開き 、 その ストリーム を 入力 として 、 EOF に 到達 する まで 読み込ま れ ます 。 新た な ストリーム の EOF に 到達 し た 時点 で close () が 呼び出さ れ 、 入力 は 元 の 入力 ストリーム に 戻さ れ ます 。 
ソース リクエスト は 任意 の レベル の 深 さ まで スタック し て かまい ませ ん 。 
この メンバ 変数 が 数値 で 、 かつ 1 または それ 以上 の 値 の 場合 、 shlex インスタンス は 動作 に関する 冗長 な 進捗 報告 を 出力 し ます 。 
この 出力 を 使い たい なら 、 モジュール の ソース コード を 読め ば 詳細 を 学ぶ こと が でき ます 。 
ソース 行 番号 ( 遭遇 し た 改行 の 数 に 1 を 加え た もの ) です 。 
トークンバッファ です 。 
例外 を 捕捉 し た 際 に この 値 を 調べる と 便利 な こと が あり ます 。 
ファイル の 終端 を 決定 する の に 使わ れる トーク ン です 。 
非 POSIX モード で は 空文字 列 ('') 、 POSIX モード で は None が 入り ます 。 
非 POSIX モード で 動作 中 の shlex は 以下 の 規則 に 従お う と し ます 。 
ワード 内 の 引用 符 を 認識 し ない ( Do " Not " Separate は 単一 ワード Do " Not " Separate として 解析 さ れ ます ) 
エスケープ 文字 を 認識 し ない 
引用 符 で 囲ま れ た 文字 列 は 、 引用 符 内 の 全て の 文字 リテラル を 保持 する 
閉じ 引用 符 で ワード を 区切る (" Do " Separate は 、 " Do " と Separate で ある と 解析 さ れ ます ) 
whitespace _ split が False の 場合 、 wordchar 、 whitespace または quote として 宣言 さ れ て い ない 全て の 文字 を 、 単一 の 文字 トーク ン として 返す 。 
True の 場合 、 shlex は 空白 文字 で のみ 単語 を 区切る 。 
空文字 列 ('') で EOF を 送出 する 
引用 符 に 囲ん で あっ て も 、 空文字 列 を 解析 し ない 
POSIX モード で 動作 中 の shlex は 以下 の 解析 規則 に 従お う と し ます 。 
引用 符 を 取り除き 、 引用 符 で 単語 を 分解 し ない (" Do " Not " Separate " は 単一 ワード DoNotSeparate として 解析 さ れ ます ) 
escapedquotes で ない 引用 符 文字 ("'" など ) で 囲ま れ て いる 全て の 文字 の リテラル 値 を 保持 する 
引用 符 に 囲ま れ た escapedquotes に 含ま れる 文字 (""" など ) は 、 escape に 含ま れる 文字 を 除き 、 全て の 文字 の リテラル 値 を 保持 する 。 
エスケープ 文字 群 は 使用 中 の 引用 符 、 または 、 その エスケープ 文字 自身 が 直後 に ある 場合 のみ 、 特殊 な 機能 を 保持 する 。 
他 の 場合 に は エスケープ 文字 は 普通 の 文字 と みなさ れる 。 
None で EOF を 送出 する 
引用 符 に 囲ま れ た 空文字 列 ('') を 許す 
6 . 5 インラインマークアップ 
6 . 4 コード の 例示 Python ソース コード や 対話 セッション の 例 に は verbatim 環境 を 使い ます 。 
この 環境 は LaTeX の 標準 の 環境 です 。 
TeX は タブ を スペース に 変換 せ ず に 捨てる ので 、 コード 例 中 で の インデント に は スペース だけ を 使っ て ください 。 対話 セッション の 表現 に は 、 プロンプト や Python コード から の 出力 を 含める 必要 が あり ます 。 
対話 セッション に は 特殊 な マーク アップ を 行う 必要 は あり ませ ん 。 
最後 の 入 力行 または 出力 行 を 示し た 後 に 、 `` 未 使用 の '' 一 次 プロンプト を 置い て は なり ませ ん ; 以下 に やっ て は いけ ない 例 を 示し ます : 
verbatim 環境 の 中 で は 、 LaTeX の 特殊 文字 を 何らかの 特殊 な 方法 で マーク する 必要 は あり ませ ん 。 
例題 は 全体 が 等 幅 フォント で 表示 さ れ ます ; この 環境 は Python コード の 表示 で なく て も 、 コード の 表示 で さえ なく て も 使え なけれ ば なら ない ため 、 `` 整形 印刷 '' は 一切 行お う と し ませ ん 。 
verbatim で 表示 する 際 に は 、 先頭 や 末尾 に 空 行 を 入れ て は なり ませ ん 。 長い verbatim テキスト を 表示 する 場合 に は 、 平文 テキスト だけ の 入っ た 例題 の テキスト を 外部 ファイル に 入れ て 取り込め ます 。 
ファイル は 標準 マクロ verbatiminput で 取り込め ます ; この マクロ は 単一 の 引数 名 として 、 例題 テキスト の 入っ た ファイル 名 を とり ます 。 
例えば 、 example . py の 入っ た Python ソース ファイル を 取り込む に は 、 以下 の よう に し ます : 
verbatiminput を 使う と 、 取り込む ファイル に対して 特殊 な 編集 モード を 使い やすく でき ます 。 
ファイル は ドキュメント の LaTeX ファイル と 同じ ディレクトリ に 置か ね ば なり ませ ん 。 Python Documentation Special Interest Group で は 、 コード 表示 や 対話 セッション に対して 整形 印刷 を 行う ため の 数々 の アプローチ について 議論 し て き まし た ; この 話題 に関する 詳細 は 、 Python Web サイト の Doc - SIG エリア を 参照 し て ください 。 
以下 は 前述 の copytree () 関数 の ドキュメント 文字 列 を 省略 し た 実装 例 です 。 
本 モジュール で 提供 さ れる 他 の 関数 の 使い方 を 示し て い ます 。 
2 簡単 な 例 setup スクリプト は 通常 単純 な もの です が 、 Python で 書か れ て いる ため 、 スクリプト 中 で 何 か を 処理 しよ う と 考え た とき 特に 制限 は あり ませ ん 。 
と は いえ 、 setup スクリプト 中 に 何 か コスト の 大きな 処理 を 行う とき は 十分 注意 し て ください 。 
autoconf 形式 の 設定 スクリプト と は 違い 、 setup スクリプト は モジュール 配布 物 を ビルド し て インストール する 中 で 複数 回 実行 さ れる こと が あり ます 。 
foo . py という 名前 の ファイル に 収め られ て いる foo という 名前 の モジュール を 配布 し たい だけ なら 、 setup スクリプト は 以下 の よう な 単純 な もの に なり ます : 
以下 の こと に 注意 し て ください : 
Distutils に 与え なけれ ば なら ない 情報 の ほとんど は 、 setup () 関数 の キーワード 引数 として 与え ます 。 
キーワード 引数 は 二つ の カテゴリ : パッケージ の メタデータ ( パッケージ 名 、 バージョン 番号 ) 、 パッケージ に 何 が 収め られ て いる か の 情報 ( 上 の 場合 は pure Python モジュール の リスト )、 に 行き着き ます 。 
モジュール は ファイル 名 で は なく 、 モジュール 名 で 指定 し ます ( パッケージ と 拡張 モジュール について も 同じ です ) 
作者 名 、 電子 メールアドレス 、 プロジェクト の URL といった 追加 の メタデータ を 入れ て おく よう 奨め ます ( 4 の 例 を 参照 し て ください ) 
この モジュール の ソース コード 配布 物 を 作成 する に は 、 上記 の コード が 入っ た setup スクリプト setup . py を 作成 し て 、 以下 の コマンド : 
アーカイブ ファイル の 名前 は foo - 1 . 0 . targ . gz ( または . zip ) に なり 、 展開 する と ディレクトリ foo - 1 . 0 を 作成 し ます 。 エンド ユーザ が foo モジュール を インストール し たけれ ば 、 foo - 1 . 0 . tar . gz ( または . zip ) を ダウンロード し 、 パッケージ を 展開 し て 、 以下 の スクリプト を -- foo - 1 . 0 ディレクトリ 中 で -- 実行 し ます : 
この 操作 を 行う と 、 インストール さ れ て いる Python で の 適切 な サード パーティ 製 モジュール 置き場 に foo . py を 完璧 に コピー し ます ． ここ で 述べ た 簡単 な 例 で は 、 Distutils の 基本 的 な 概念 の いくつ か を 示し て い ます 。 
まず 、 開発 者 と インストール 作業 者 は 同じ 基本 インタフェース 、 すなわち setup スクリプト を 使っ て い ます 。 
二 人 の 作業 の 違い は 、 使っ て いる Distutils コマンド ( command ) に あり ます : sdist コマンド は 、 ほぼ 完全 に 開発 者 だけ が 対象 と なる 一方 、 install は どちら か と いう と インストール 作業 者 向け です ( と は いえ 、 ほとんど の 開発 者 は 自分 の コード を インストール し たく なる こと が ある でしょ う )。 ユーザ にとって 本当に 簡単 な もの に し たい の なら 、 一つ または それ 以上 の ビルド 済み 配布 物 を 作っ て あげ られ ます 。 
例えば 、 Windows マシン 上 で 作業 を し て い て 、 他 の Windows ユーザ にとって 簡単 な 配布 物 を 提供 し たい の なら 、 実行 可能 な 形式 の ( この プラットフォーム 向け の ビルド 済み 配布 物 として は もっとも 適切 な ) インストーラ を 作成 でき ます 。 これ に は bdist _ wininst を 使い ます 。 
と する と 、 実行 可能 な インストーラ 形式 、 foo - 1 . 0 . win 32 . exe が 現在 の ディレクトリ に 作成 さ れ ます 。 その他 の 有用 な 配布 形態 として は 、 bdist _ rpm に 実装 さ れ て いる RPM 形式 、 Solaris pkgtool ( bdist _ pkgtool ) 、 HP - UX swinstall ( bdist _ sdux ) が あり ます 。 
例えば 、 以下 の コマンド を 実行 する と 、 foo - 1 . 0 . noarch . rpm という 名前 の RPM ファイル を 作成 し ます : 
( bdist _ rpm コマンド は rpm コマンド を 使う ため 、 Red Hat Linux や SuSE Linux 、 Mandrake Linux といった RPM ベース の システム で 実行 し なけれ ば なり ませ ん ) どの 配布 形式 が 利用 できる か は 、 
python setup . py bdist -- help - formats を 実行 すれ ば 分かり ます 。 
SimpleXMLRPCServer クラス は SocketServer . TCPServer の サブ クラス で 、 基本 的 な スタンドアロン の XML - RPC サーバー を 作成 する 手段 を 提供 し ます 。 
XML - RPC リクエスト に 応じる 関数 を 登録 し ます 。 
引数 name が 与え られ て いる 場合 は その 値 が 、 関数 function に 関連付け られ ます 。 
オブジェクト を 登録 し 、 その オブジェクト の register _ function () で 登録 さ れ て い ない メソッド を 公開 し ます 。 
もし 、 instance が メソッド _ dispatch () を 定義 し て いれ ば 、 _ dispatch () が 、 リクエスト さ れ た メソッド 名 と パラメータ の 組 を 引数 として 呼び出さ れ ます 。 そして 、 _ dispatch () の 返り 値 が 結果 として クライアント に 返さ れ ます 。 
その API は def _ dispatch ( self , method , params )( 注意 : params は 可変 引数 リスト で は あり ませ ん ) です 。 
仕事 を する ため に 下位 の 関数 を 呼ぶ 時 に は 、 その 関数 は func (* params ) の よう に 呼ば れ ます 。 _ dispatch () の 返り 値 は クライアント へ 結果 として 返さ れ ます 。 
もし 、 instance が メソッド _ dispatch () を 定義 し て い なけれ ば 、 リクエスト さ れ た メソッド 名 が その インスタンス に 定義 さ れ て いる メソッド 名 から 探さ れ ます 。 リクエスト さ れ た メソッド 名 が ピリオド を 含む 場合 は 、 （ 訳注 ： 通常 の Python で の ピリオド の 解釈 と 同様 に ） 階層 的 に オブジェクト を 探索 し ます 。 
XML - RPC の イントロスペクション 関数 、 system . listMethods 、 system . methodHelp 、 system . methodSignature を 登録 し ます 。 
XML - RPC における 複数 の 要求 を 処理 する 関数 system . multicall を 登録 し ます 。 
以下 に 例 を 示し ます 。 
6 . 単純 文 ( simple statement ) 
単純 文 と は 、 単一 の 論理 行内 に 収め られる 文 です 。 
単一 の 行内 に は 、 複数 の 単純 文 を セミコロン で 区切っ て 入れる こと が でき ます 。 
単純 文 の 構文 は 以下 の 通り です : 
6 . 1 式 文 ( expression statement ) 
" spam " ( Monty Python ファン の 好物 です ね ) という 名 の 拡張 モジュール を 作成 する こと に し て 、 C ライブラリ 関数 system () に対する Python インタフェース を 作成 し たい と し ます 。 
この 関数 は null で 終端 さ れ た キャラクタ 文字 列 を 引数 に とり 、 整数 を 返し ます 。 
この 関数 を 以下 の よう に し て Python から 呼び出せる よう に し たい と し ます : 
これ で 、 Python API を 取り込み ます ( 必要 なら 、 モジュール の 用途 に関する 説明 や 、 著作 権 表示 を 追加 し ます )。 
Python は 、 システム によって は 標準 ヘッダ の 定義 に 影響 する よう な プリプロセッサ 定義 を 行っ て いる ので 、 Python . h は いずれ の 標準 ヘッダ より も 前 に インクルード せ ね ば なり ませ ん 。 
Python . h で 定義 さ れ て いる ユーザ から 可視 の シンボル は 、 全て 接頭 辞 " Py " または " PY " が 付い て い ます 。 ただし 、 標準 ヘッダ ファイル 内 の 定義 は 除き ます 。 
ここ で は 、 Python の 引数 リスト ( 例えば 、 単一 の 式 " ls - l ") から C 関数 に 渡す 引数 に そのまま 変換 し て い ます 。 
C 関数 は 常に 二つ の 引数 を 持ち 、 便宜 的 に self および args と 呼ば れ ます 。 self 引数 は C 関数 が Python の 関数 で は なく 組み込み メソッド を 実装 し て いる 場合 に のみ 使わ れ ます 。 
この 例 で は メソッド で は なく 関数 を 定義 し て いる ので 、 self は 常に NULL ポインタ に なり ます 。 
タプル 内 の 各 要素 は 、 呼び出し の 際 の 引数 リスト における 各 引数 に 対応 し ます 。 
引数 は Python オブジェクト です -- C 関数 で 引数 を 使っ て 何 か を 行う に は 、 オブジェクト から C の 値 に 変換 せ ね ば なり ませ ん 。 
Python API の 関数 PyArg _ ParseTuple () は 引数 の 型 を チェック し 、 C の 値 に 変換 し ます 。 
PyArg _ ParseTuple () は テンプレート 文字 列 を 使っ て 、 引数 オブジェクト の 型 と 、 変換 さ れ た 値 を 入れる C 変数 の 型 を 判別 し ます 。 
これ について は 後で 詳しく 説明 し ます 。 
PyArg _ ParseTuple () は 、 全て の 引数 が 正しい 型 を 持っ て い て 、 アドレス 渡し さ れ た 各 変数 に 各 引数 要素 を 保存 し た とき に 真 ( 非 ゼロ ) を 返し ます 。 
この 関数 は 不正 な 引数 リスト を 渡す と 偽 ( ゼロ ) を 返し ます 。 
後者 の 場合 、 関数 は 適切 な 例外 を 送出 する ので 、 呼び出し 側 は ( 例 に も ある よう に ) すぐ に NULL を 返す よう に し て ください 。 
... インタフェース を 作成 し たい と し ます 。 
この 関数 へ の インタフェース は すでに 標準 モジュール os に あり ます -- この 関数 を 選ん だ の は 、 単純 で 直接的 な 例 を 示し たい から です 。 
拡張 モジュール は 、 ext _ modules オプション を 使っ て 指定 し ます 。 package _ dir は 、 拡張 モジュール の ソース ファイル を どこ で 探す かに は 影響 し ませ ん ; pure Python モジュール の ソース のみ に 影響 し ます 。 
もっとも 単純 な ケース で は 、 単一 の C ソース ファイル で 書か れ た 単一 の 拡張 モジュール は : 
root / setup . pyfoo . c に なり ます 。 
foo 拡張 を ルート パッケージ 下 に 所属 さ せ たい 場合 、 setup スクリプト は 
from distutils . core import setupsetup ( name =' foobar ', version =' 1 . 0 ', ext _ modules =[ Extension (' foo ', [' foo . c '])],) に なり ます 。 
同じ ソースツリーレイアウト で 、 この 拡張 モジュール を foopkg の 下 に 置き 、 拡張 モジュール の 名前 を 変える に は : 
from distutils . core import setupsetup ( name =' foobar ', version = ' 1 . 0 ', ext _ modules =[ Extension (' foopkg . foo ', [' foo . c '])],) の よう に し ます 。 
スライス オブジェクト の 型 オブジェクト です 。 
types . SliceType と 同じ です 。 
ob が スライス オブジェクト の 場合 に 真 を 返し ます ; ob は NULL で あっ て は なり ませ ん 。 
指定 し た 値 から 新た な スライス オブジェクト を 返し ます 。 
パラメタ start , stop , および step は スライス オブジェクト における 同名 の 属性 として 用い られ ます 。 
これら の 値 は いずれ も NULL に でき 、 対応 する 値 に は None が 使わ れ ます 。 
新た な オブジェクト を アロケーション でき ない 場合 に は NULL を 返し ます 。 
スライス オブジェクト slice における start , stop , および step の インデクス 値 を 取得 し ます 。 この とき シーケンス の 長 さ を length と 仮定 し ます 。 
バージョン 2 . 3 以前 の Python で スライス オブジェクト を 使い たい の なら 、 PySlice _ GetIndicesEx の ソース を 適切 に 名前 変更 し て 自分 の 拡張 モジュール の ソース コード 内 に 組み込む と よい でしょ う 。 
PySlice _ GetIndices の 置き換え として 使える 関数 です 。 
境界 を はみだし た インデクス は 、 通常 の スライス を 扱う の と 同じ 一貫 し た やり方 で クリップ さ れ ます 。 成功 の とき に は 0 を 、 エラー の とき に は 例外 を セット し て - 1 を 返し ます 。 
スライス 表記 は シーケンス オブジェクト ( 文字 列 、 タプル または リスト ) における ある 範囲 の 要素 を 選択 し ます 。 
スライス 表記 は 式 として 用い たり 、 代入 や del 文 の 対象 として 用い たり でき ます 。 
スライス 表記 の 構文 は 以下 の よう に なり ます : 
上記 の 形式 的 な 構文 法 に は あいまい さ が あり ます : 式 リスト に 見える もの は 、 スライス リスト に も 見える ため 、 添字 表記 は スライス 表記 として も 解釈 さ れ うる という こと です 。 
この 場合 に は 、 ( スライス リスト の 評価 結果 が 、 適切 な スライス や 省略 表記 ( ellipsis ) に なら ない 場合 )、 スライス 表記 として の 解釈 より も 添字 表記 として の 解釈 の 方 が 高い 優先 順位 を 持つ よう に 定義 する こと で 、 構文 法 を より 難解 に する こと なく あいまい さ を 取り除い て い ます 。 
同様 に 、 スライス リスト が 厳密 に 一つ だけ の 短い スライス で 、 末尾 に カンマ が 続い て い ない 場合 、 拡張 スライス として の 解釈 より 、 単純 な スライス として の 解釈 が 優先 さ れ ます 。 
単純 な スライス に対する 意味 付け は 以下 の よう に なり ます 。 
一 次 語 の 値 評価 結果 は 、 シーケンス 型 の オブジェクト で なけれ ば なり ませ ん 。 
下 境界 および 上 境界 を 表す 式 が ある 場合 、 それら の 値 評価 結果 は 整数 で なく て は なり ませ ん ; デフォルト の 値 は 、 それぞれ ゼロ と sys . maxint です 。 
どちら か の 境界 値 が 負 で ある 場合 、 シーケンス の 長 さ が 加算 さ れ ます 。 
こうして 、 スライス は i および j を それぞれ 指定 し た 下 境界 、 上 境界 として 、 インデクス k が 
と なる 全て の 要素 を 選択 し ます 。 
選択 の 結果 、 空 の シーケンス に なる こと も あり ます 。 
また 、 辞書 は 以下 に 述べる よう に し て スライス リスト から 生成 さ れ た キー によって インデクス 指定 でき なけれ ば なり ませ ん 。 
スライス リスト に 少なくとも 一つ の カンマ が 含ま れ て いる 場合 、 キー は 各 スライス 要素 を 値 変換 し た もの から なる タプル に なり ます ; それ 以外 の 場合 、 単一 の スライス 要素 自体 を 値 変換 し た もの が キー に なり ます 。 
一 個 の 式 で でき た スライス 要素 の 変換 は 、 その 式 に なり ます 。 
省略 表記 スライス 要素 の 変換 は 、 組み込み の Ellipsis オブジェクト に なり ます 。 
適切 な スライス の 変換 は 、 スライス オブジェクト ( 3 . 2 参照 ) で 、 start , stop および step 属性 は 、 それぞれ 指定 し た 下 境界 、 上 境界 、 および とび 幅 ( stride ) に なり ます 。 式 が ない 場合 に は 、 None に 置き換え られ ます 。 
デフォルト で は 、 新旧 どちら の クラス も 、 属性 の 記憶 領域 として 使う ため の 辞書 を 持っ て い ます 。 
この 仕様 は 、 ほとんど インスタンス 変数 を 持た ない よう な オブジェクト の 場合 に は 記憶 領域 の 無駄遣い に なり ます 。 
記憶 領域 の 消費 量 は 、 大量 の インスタンス を 生成 する 際 に は 深刻 です 。 この デフォルト の 設定 は 、 新た な 形式 の クラス 定義 において __ slots __ を 定義 する こと で オーバライド でき ます 。 
__ slots _ 宣言 は インスタンス 変数 の シーケンス を 受け取り ます 。 各々 の インスタンス 上 に は 、 各 変数 の 値 を 記憶 する のに ちょうど 必要 な 量 だけ の 記憶 領域 を 確保 し ます 。 
各々 の インスタンス に対して __ dict __ が 生成 さ れる こと が ない ので 、 記憶 領域 が 節約 さ れ ます 。 
この クラス 変数 に は 、 文字 列 、 反復 可能 オブジェクト 、 あるいは インスタンス が 用いる 変数 名 を 表す 文字 列 から なる シーケンス を 代入 する こと が でき ます 。 
この 変数 が 新しい 形式 の クラス で 定義 さ れ て いる 場合 、 __ slots __ は 、 各 インスタンス に対して 宣言 さ れ た 変数 に 必要 な 記憶 領域 を 確保 し 、 __ dict __ と __ weakref __ が 自動的 に 生成 さ れ ない よう に し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
__ slots __ を 利用 する 際 の 注意 
__ dict __ 変数 が ない 場合 、 __ slots __ に 列挙 さ れ て い ない 新た な 変数 を インスタンス に 代入 する こと は でき ませ ん 。 
列挙 さ れ て い ない 変数 名 を 使っ て 代入 しよ う と し た 場合 、 AttributeError が 送出 さ れ ます 。 
新た な 変数 を 動的 に 代入 し たい の なら 、 __ slots __ を 宣言 する 際 に '__ dict __' を 変数 名 の シーケンス に 追加 し て ください 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : これ まで は 、 '__ dict __' を __ slots __ 宣言 に 追加 し て も 、 インスタンス 変数 名 として 他 に リスト さ れ て い ない 新た な 属性 の 代入 は でき ませ ん でし た 。 
__ slots __ を 定義 し て いる クラス の 各 インスタンス に __ weakref __ 変数 が ない 場合 、 インスタンス に対する 弱 参照 ( weak reference ) は サポート さ れ ませ ん 。 弱 参照 の サポート が 必要 なら 、 __ slots __ を 宣言 する 際 に '__ weakref __' を 変数 名 の シーケンス に 追加 し て ください 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : これ まで は 、 '__ weakref __' を __ slots __ 宣言 に 追加 し て も 、 弱 参照 の サポート を 有効 に でき ませ ん でし た 。 
__ slots __ は 、 クラス の レベル で 各 変数 に対する デスクリプタ ( 3 . 3 . 2 を 参照 ) を 使っ て 実装 さ れ ます 。 
その 結果 、 __ slots __ に 定義 さ れ て いる インスタンス 変数 の デフォルト 値 は クラス 属性 を 使っ て 設定 でき なく なっ て い ます ; そう し ない と 、 デスクリプタ による 代入 を クラス 属性 が 上書き し て しまう から です 。 
ある クラス で 、 基底 クラス で すでに 定義 さ れ て いる スロット を 定義 し た 場合 、 基底 クラス の スロット で 定義 さ れ て いる インスタンス 変数 は ( デスクリプタ を 基底 クラス から 直接 取得 し ない 限り ) アクセス でき なく なり ます 。 
これ により 、 プログラム の 趣意 が 不定 に なっ て しまい ます 。 
将来 は 、 この 問題 を 避ける ため に 何らかの チェック が 追加 さ れる かも しれ ませ ん 。 
__ slots __ 宣言 が 動作 する の は 、 定義 が 行わ れ た クラス だけ に 限ら れ て い ます 。 
その 結果 、 サブ クラス で は 、 __ slots __ を 定義 し ない 限り __ dict __ を 持つ こと に なり ます 。 
__ slots __ は 、 long 、 str 、 および tuple といった 、 `` 可変長 ( variable - length )'' の 組み込み 型 から 導出 さ れ た クラス で は 動作 し ませ ん 。 __ slots __ に は 、 文字 列 で ない 反復 可能 オブジェクト を 代入 する こと が でき ます 。 
辞書 型 も 使う こと が でき ます ; しかし 将来 、 辞書 の 各 キー に 相当 する 値 に 何らかの 特殊 な 意味 が 割り当て られる かも しれ ませ ん 。 
7 . 2 . 3 例 以下 は TCP / IP プロトコル の 簡単 な サンプル として 、 受信 し た データ を クライアント に そのまま 返送 する サーバ ( 接続 可能 な クライアント は 一 件 のみ ) と 、 サーバ に 接続 する クライアント の 例 を 示し ます 。 
サーバ で は 、 socket () ・ bind () ・ listen () ・ accept () を 実行 し ( 複数 の クライアント から の 接続 を 受け付ける 場合 、 accept () を 複数 回 呼び出し ます )、 クライアント で は socket () と connect () だけ を 呼び出し て い ます 。 
サーバ で は send ()/ recv () メソッド は listen 中 の ソケット で 実行 する の で は なく 、 accept () で 取得 し た ソケット に対して 実行 し て いる 点 に も 注意 し て ください 。 次 の クライアント と サーバ は 、 IPv 4 のみ を サポート し て い ます 。 
The next two examples are identical to the above two , but support bothIPv 4 and IPv 6 . The server side will listen to the first address family available ( it should listen to both instead ). On most of IPv 6 - ready systems , IPv 6 will take precedenceand the server may not accept IPv 4 traffic . The client side will try to connect to the all addresses returned as a resultof the name resolution , and sends traffic to the first one connectedsuccessfully . 次 の サンプル は 上記 の サンプル と ほとんど 同じ です が 、 IPv 4 と IPv 6 の 両方 を サポート し て い ます 。 
ソケット オブジェクト は 以下 の メソッド を 持ち ます 。 
makefile () 以外 の メソッド は 、 Unix の ソケット 用 システム コール に 対応 し て い ます 。 
接続 を 受け付け ます 。 
ソケット は アドレス に bind 済み で 、 listen 中 で ある 必要 が あり ます 。 戻り 値 は ( conn , address ) の ペア で 、 conn は 接続 を通じて データ の 送受信 を 行う ため の 新しい ソケット オブジェクト 、 address は 接続 先 で ソケット に bind し て いる アドレス を 示し ます 。 
ソケット を address に bind し ます 。 
bind 済み の ソケット を 再 バインド する 事 は でき ませ ん 。 address の フォーマット は アドレス ファミリ によって 異なり ます ( 前述 )。 
注意 : 本来 、 この メソッド は 単一 の タプル のみ を 引数 として 受け付け ます が 、 以前 は AF _ INET アドレス を 示す 二つ の 値 を 指定 する 事 が でき まし た 。 
これ は 本来 の 仕様 で は なく 、 Python 2 . 0 以降 で は 使用 する こと は でき ませ ん 。 
address で 示さ れる リモート ソケット に 接続 し ます 。 
address の フォーマット は アドレス ファミリ によって 異なり ます ( 前述 )。 注意 : 本来 、 この メソッド は 単一 の タプル のみ を 引数 として 受け付け ます が 、 以前 は AF _ INET アドレス を 示す 二つ の 値 を 指定 する 事 が でき まし た 。 
connect ( address ) と 同様 です が 、 C 言語 の connect () 関数 の 呼び出し で エラー が 発生 し た 場合 に は 例外 を 送出 せ ず に エラー を 戻り 値 として 返し ます 。 ( これ 以外 の 、 `` host not found ,'' 等 の エラー の 場合 に は 例外 が 発生 し ます 。 
) 処理 が 正常 に 終了 し た 場合 に は 0 を 返し 、 エラー 時 に は errno の 値 を 返し ます 。 
この 関数 は 、 非同期 接続 を サポート する 場合 など に 使用 する こと が でき ます 。 
注意 : 本来 、 この メソッド は 単一 の タプル のみ を 引数 として 受け付け ます が 、 以前 は AF _ INET アドレス を 示す 二つ の 値 を 指定 する 事 が でき まし た 。 これ は 本来 の 仕様 で は なく 、 Python 2 . 0 以降 で は 使用 する こと は でき ませ ん 。 
ソケット の ファイル ディスクリプタ を 整数 型 で 返し ます 。 
Unix に は この 制限 は あり ませ ん 。 
ソケット が 接続 し て いる リモート アドレス を 返し ます 。 
この 関数 は 、 リモート IPv 4 / v 6 ソケット の ポート 番号 を 調べる 場合 など に 使用 し ます 。 address の フォーマット は アドレス ファミリ によって 異なり ます ( 前述 )。 
この 関数 を サポート し て い ない システム も 存在 し ます 。 
ソケット 自身 の アドレス を 返し ます 。 
この 関数 は 、 IPv 4 / v 6 ソケット の ポート 番号 を 調べる 場合 など に 使用 し ます 。 address の フォーマット は アドレス ファミリ によって 異なり ます ( 前述 )。 
ソケット に 指定 さ れ た オプション を 返し ます ( Unix の マニュアル ページ 
getsockopt ( 2 ) を 参照 )。 
SO _* 等 の シンボル は 、 この モジュール で 定義 し て い ます 。 
buflen を 省略 し た 場合 、 取得 する オブ ション は 整数 と みなし 、 整数 型 の 値 を 戻り 値 と し ます 。 
buflen を 指定 し た 場合 、 長 さ buflen の バッファ で オプション を 受け取り 、 この バッファ を 文字 列 として 返し ます 。 
この バッファ は 、 呼び出し 元 プログラム で 
モジュール 等 を 利用 し て 内容 を 読み取る こと が でき ます 。 
ソケット を Listen し 、 接続 を 待ち ます 。 
引数 backlog に は 接続 キュー の 最大 の 長 さ ( 1 以上 ) を 指定 し ます 。 backlog の 最大 数 は システム に 依存 し ます ( 通常 は 5 )。 
ソケット に 関連付け られ た ファイル オブジェクト を 返し ます ( ファイル オブジェクト について は 2 . 3 . 9 の `` ファイル オブジェクト '' を 参照 )。 
ファイル オブジェクト は ソケット を dup () し た ファイル ディスクリプタ を 使用 し て おり 、 ソケット オブジェクト と ファイル オブジェクト は 別々 に クローズ し たり ガベージコレクション で 破棄 し たり する 事 が でき ます 。 ソケット は ブロッキング モード で なけれ ば なり ませ ん 。 
オプション 引数 の mode と bufsize に は 、 file () 組み込み 関数 と 同じ 値 を 指定 し ます 。 2 . 1 の `` 組み込み 関数 '' を 参照 し て ください 。 
ソケット から データ を 受信 し 、 文字 列 として 返し ます 。 
値 の 意味 について は Unix マニュアル ページ の 
recv ( 2 ) を 参照 し て ください 。 
ソケット から データ を 受信 し 、 結果 を タプル ( string , address ) として 返し ます 。 
string は 受信 データ の 文字 列 で 、 address は 送信 元 の アドレス を 示し ます 。 
オプション 引数 flags の 意味 は 、 上記 recv () と 同じ です 。 address の フォーマット は アドレス ファミリ によって 異なり ます ( 前述 )。 
ソケット に データ を 送信 し ます 。 
ソケット は リモート ソケット に 接続 済み で なけれ ば なり ませ ん 。 
オプション 引数 flags の 意味 は 、 上記 recv () と 同じ です 。 
send () と 異なり 、 この メソッド は string の 全 データ を 送信 する か 、 エラー が 発生 する まで 処理 を 継続 し ます 。 
正常 終了 の 場合 は None を 返し 、 エラー 発生 時 に は 例外 が 発生 し ます 。 
エラー 発生 時 、 送信 さ れ た バイト 数 を 調べる 事 は でき ませ ん 。 
この メソッド で は 接続 先 を address で 指定 する ので 、 接続 済み で は いけ ませ ん 。 
オプション 引数 flags の 意味 は 、 上記 recv () と 同じ です 。 
戻り 値 として 、 送信 し た バイト 数 を 返し ます 。 address の フォーマット は アドレス ファミリ によって 異なり ます ( 前述 )。 
ソケット の ブロッキング ・ 非 ブロッキング モード を 指定 し ます 。 flag が 0 の 場合 は 非 ブロッキング モード 、 0 以外 の 場合 は ブロッキング モード と なり ます 。 
全て の ソケット は 、 初期 状態 で は ブロッキング モード です 。 
非 ブロッキング モード で は 、 recv () メソッド 呼び出し 時 に 読み込み データ が 無かっ たり send () メソッド 呼び出し 時 に データ を 処理 する 事 が でき ない よう な 場合 に error 例外 が 発生 し ます 。 しかし 、 ブロッキング モード で は 呼び出し は 処理 が 行わ れる まで ブロック さ れ ます 。 
s . setblocking ( 0 ) は s . settimeout ( 0 ) と 、 s . setblocking ( 1 ) は s . settimeout ( None ) と それぞれ 同じ 意味 を 持ち ます 。 
ソケット の ブロッキング 処理 の タイム アウト 値 を 指定 し ます 。 
value に は 、 正 の 浮動 小数点 で 秒 数 を 指定 する か 、 もしくは None を 指定 し ます 。 浮動 小数点 値 を 指定 し た 場合 、 操作 が 完了 する 前 に value で 指定 し た 秒 数 が 経過 する と timeout が 発生 し ます 。 
タイム アウト 値 に None を 指定 する と 、 ソケット の タイム アウト を 無効 に し ます 。 
s . settimeout ( 0 . 0 ) は s . setblocking ( 0 ) と 、 s . settimeout ( None ) は s . setblocking ( 1 ) と それぞれ 同じ 意味 を 持ち ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
ソケット に 指定 さ れ た タイム アウト 値 を 取得 し ます 。 
タイム アウト 値 が 設定 さ れ て いる 場合 に は 浮動 小数点 型 で 秒 数 が 、 設定 さ れ て い なけれ ば None が 返り ます 。 
この 値 は 、 最後 に 呼び出さ れ た setblocking () または settimeout () によって 設定 さ れ ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
ソケット の ブロッキング と タイム アウト について : ソケット オブジェクト の モード は 、 ブロッキング ・ 非 ブロッキング・タイムアウト の 何れ か と なり ます 。 
初期 状態 で は 常に ブロッキング モード です 。 
ブロッキング モード で は 、 処理 が 完了 する まで ブロック さ れ ます 。 
非 ブロッキング モード で は 、 処理 を 行う 事 が でき なけれ ば ( 不幸 に も システム によって 異なる 値 の ) エラー と なり ます 。 
タイムアウトモード で は 、 ソケット に 指定 し た タイム アウト まで に 完了 し なけれ ば 処理 は 失敗 と なり ます 。 
setblocking () メソッド は 、 settimeout () の 省略 形式 です 。 内部 的 に は 、 タイムアウトモード で は ソケット を 非 ブロッキング モード に 設定 し ます 。 
ブロッキング と タイム アウト の 設定 は 、 ソケット と 同じ ネットワーク 端点 へ 接続 する ファイル ディスクリプタ に も 反映 さ れ ます 。 
ソケット の オプション を 設定 し ます ( Unix の マニュアル ページ 
setsockopt ( 2 ) を 参照 )。 
SO _* 等 の シンボル は 、 この モジュール で 定義 し て い ます 。 
value に は 、 整数 または 文字 列 を バッファ として 指定 する 事 が でき ます 。 
文字 列 を 指定 する 場合 、 文字 列 に は 適切 な ビット を 設定 する よう に し ます 。 ( 
モジュール を 利用 すれ ば 、 C の 構造 体 を 文字 列 に エン コード する 事 が でき ます 。 ) 
接続 の 片方向 、 または 両方向 を 切断 し ます 。 
how が SHUT _ RD の 場合 、 以降 は 受信 を 行え ませ ん 。 
how が SHUT _ WR の 場合 、 以降 は 送信 を 行え ませ ん 。 
how が SHUT _ RDWR の 場合 、 以降 は 送受信 を 行え ませ ん 。 
read () メソッド と write () メソッド は 存在 し ませ ん ので 注意 し て ください 。 代わり に flags を 省略 し た recv () と send () を 使う こと が でき ます 。 
7 . オプション の オペレーティングシステム サービス 
この 章 で 説明 する モジュール で は 、 特定 の オペレーティングシステム で だけ 利用 できる オペレーティングシステム 機能 へ の インターフェース を 提供 し ます 。 
この インターフェース は 、 おおむね Unix や C の インターフェース に ならっ て モデル 化 し て あり ます が 、 他 の システム 上 （ Windows や NT など ） で も 利用 できる こと が あり ます 。 
次に 概要 を 示し ます 。 
非同期 イベント に ハンドラ を 設定 し ます 。 
低 レベルネットワークインターフェース 。 
複数 の ストリーム に対して I / O 処理 の 完了 を 待機 し ます 。 
1 つ の インタープリタ の 中 で の マルチスレッド 制御 
高水準 の スレッドインタフェース 
の 代替 モジュール 。 
同期 キュー クラス 
Unix と Windows の メモリマップファイル へ の インターフェース 
DBM 形式 の データベース モジュール に対する 汎用 インタフェース 。 
BSD データベース ライブラリ へ の DBM 形式 の インタフェース 。 
どの DBM 形式 の モジュール が 与え られ た データベース を 作っ た か を 推測 する 
Berkeley DB ライブラリ へ の インタフェース 
単純 な DBM インタフェース に対する 可 搬性 の ある 実装 。 
gzip 互換 の 圧縮 ／ 解凍 ルーチン へ の 低 レベル インタフェース 
ファイル オブジェクト を 用い た gzip 圧縮 および 解凍 の ため の インタフェース 
bzip 2 互換 の 圧縮 ／ 解凍 ルーチン へ の インタフェース 
ZIP - フォーマット の アーカイブ ファイル を 読み書き する 
tar - 形式 の アーカイブ ファイル を 読み書き し ます 。 
Python の ため の GNU readline サポート 。 
GNU readline ライブラリ 向け の Python 識別子 補完 
3 setup 設定 ファイル ( setup 
6 . 1 プリアンブル 用 の マーク アップ 
6 特殊 マーク アップ 構文 Python ドキュメント の クラス で は 、 環境 や マクロ を 新た に 数多く 定義 し て い ます 。 
この 節 に は これら の 機能 について の リファレンス マニュアル が あり ます 。 
Python ドキュメント で は `` 標準 の '' LaTeX 構文 も 使っ て い ます が 、 ここ に は 含め て い ませ ん 。 
6 . 1 プリアンブル 用 の マーク アップ 
6 . 1 プリアンブル 用 の マーク アップ ご 意見 や ご 指摘 を お 寄せ に なり たい 方 は 、 
実装 で は 、 いくつ か の オブジェクト 型 に対して 、 数個 の 読み出し 専用 の 特殊 な 属性 を 追加 し て い ます 。 
それぞれ : 
オブジェクト の ( 書き込み 可能 な ) 属性 を 保存 する ため に 使わ れる 辞書 または 他 の マップ 型 オブジェクト です 。 
リリース 2 . 2 で 撤廃 さ れ まし た 。 オブジェクト の 属性 から なる リスト を 取得 する に は 、 組み込み 関数 dir () を 使っ て ください 。 
この 属性 は もう 利用 でき ませ ん 。 
クラス インスタンス が 属し て いる クラス です 。 
クラス オブジェクト の 基底 クラス から なる タプル です 。 
特殊 な 名前 を もっ た メソッド を 定義 する こと で 、 特殊 な 構文 ( 算術 演算 や 添え 字 表記 、 スライス 表記 の よう な ) 特定 の 演算 を クラス で 実装 する こと が でき ます 。 
これ は 、 個々 の クラス が Python 言語 で 提供 さ れ て いる 演算 子 に 対応 し た 独自 の 振る舞い を できる よう に する ため の 、 演算 子 の オーバロード ( operator overloading ) に対する Python の アプローチ です 。 
例えば 、 ある クラス が __ getitem __() という 名前 の メソッド を 定義 し て おり 、 x が この クラス の インスタンス で ある と する と 、 x [ i ] は x .__ getitem __( i ) と 等価 に なり ます 。 
特に 注釈 の ない 限り 、 適切 な メソッド が 定義 さ れ て い ない 場合 に この よう な 演算 を 行お う と する と 例外 が 送出 さ れ ます 。 
組み込み 型 を エミュレーション する よう な クラス を 実装 する 際 に は 、 エミューレーション の 実装 を モデル 化 しよ う と し て いる オブジェクト で 意味 の ある 範囲 だけ に とどめる こと が 重要 です 。 
例えば 、 シーケンス によって は 個々 の 要素 の 取り出し 操作 が 意味 の ある 操作 で ある 一方 、 スライス の 抽出 が 意味 を なさ ない こと が あり ます 。 
( W 3 C ドキュメントオブジェクトモデル における NodeList インタフェース が その 一 例 です 。 
SSL オブジェクト に は 、 以下 の メソッド が あり ます 。 
文字 列 s を SSL 接続 で 出力 し ます 。 戻り 値 として 、 送信 し た バイト 数 を 返し ます 。 
SSL 接続 から データ を 受信 し ます 。 n を 指定 し た 場合 は 指定 し た バイト 数 の データ を 受信 し 、 省略 時 は EOF まで 読み込み ます 。 
戻り 値 として 、 受信 し た バイト 列 の 文字 列 を 返し ます 。 
Python に は 数多く の codec が 組み込み で 付属 し ます 。 これら は C 言語 の 関数 、 対応 付け を 行う テーブル の 両方 で 提供 さ れ て い ます 。 
以下 の テーブル で は codec と 、 いくつ か の 良く 知ら れ て いる 別名 と 、 エン コーディング が 使わ れる 言語 を 列挙 し ます 。 
別名 の リスト 、 言語 の リスト と も しらみ つぶし に 網羅 さ れ て いる わけ で は あり ませ ん 。 
大文字 と 小文字 、 または アンダー スコア の 代り に ハイフン に し た だけ の 綴り も 有効 な 別名 です 。 多く の 文字 セット は 同じ 言語 を サポート し て い ます 。 
これら の 文字 セット は 個々 の 文字 ( 例えば 、 EURO SIGN が サポート さ れ て いる か どう か ) や 、 文字 の コード 部分 へ の 割り付け が 異なり ます 。 
特に 欧州 言語 で は 、 典型 的 に 以下 の 変種 が 存在 し ます : 
ISO 8859 コードセット 
Microsoft Windows コード ページ で 、 8859 コード 形式 から 導出 さ れ て いる が 、 制御 文字 を 追加 の グラフィック 文字 と 置き換え た もの 
IBM EBCDIC コード ページ 
ASCII 互換 の IBM PC コード ページ 
別名 
言語 
英語 
繁 体 字 中国語 
ヘブライ 語 
西 ヨーロッパ 言語 
ギリシャ 語 
バルト 沿岸 国 
850 , IBM 850 西 ヨーロッパ 
中央 および 東 ヨーロッパ 
ブルガリア 、 ベラルーシ 、 マケドニア 、 ロシア 、 セルビア 
トルコ 語 
ポルトガル 語 
861 , CP - IS , IBM 861 アイスランド 語 
カナダ 
アラビア 語 
デンマーク 、 ノルウェー 
ロシア 語 
タイ 語 
日本語 
韓国 語 
西 ヨーロッパ 
ギリシャ 
トルコ 
ヘブライ 
アラビア 
バルト 沿岸 国 
ベトナム 
簡体 字 中国語 
簡体 字 中国語 
日本語 , 韓国 語 , 簡体 字 中国語 , 西欧 , ギリシャ 語 
西 ヨーロッパ 
エスペラント 、 マルタ 
バルト 沿岸 国 
北欧 
ケルト 
ウクライナ 
アイスランド 
カザフ 
全て の 言語 
全て の 言語 ( BMP only ) 
codec の いくつ か は Python 特有 の もの な ので 、 それら の codec 名 は Python の 外 で は 無意味 な もの と なり ます 。 
これら の codec の 中 に は Unicode 文字 列 から バイト 文字 列 へ の 変換 を 行わ ず 、 むしろ 単一 の 引数 を もつ 全 写像 関数 は エン コーディング と みなせる という Python codec の 性質 を 利用 し た もの も あり ます 。 以下 に 列挙 し た codec で は 、 `` エン コード '' 方向 の 結果 は 常に バイト 文字 列方向 です 。 
`` デコード '' 方向 の 結果 は テーブル 内 の 被 演算 子 型 として 列挙 さ れ て い ます 。 
被 演算 子 の 型 
目的 
被 演算 子 を MIME base 64 に 変換 し ます 。 
被 演算 子 を bz 2 を 使っ て 圧縮 し ます 。 
被 演算 子 を バイト あたり 2 桁 の 16 進数 の 表現 に 変換 し ます 。 
RFC 3490 の 実装 です 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
Windows のみ : 被 演算 子 を ANSI コード ページ ( CP _ ACP ) に従って エン コード し ます 。 
PalmOS 3 . 5 の エン コーディング です 。 
RFC 3492 を 実装 し て い ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
被 演算 子 を MIME quoted printable 形式 に 変換 し ます 。 
Python ソース コード における raw Unicode リテラル として 適切 な 文字 列 を 生成 し ます 。 
被 演算 子 の シーザー 暗号 ( Caesar - cypher ) を 返し ます 。 
Python ソース コード における 文字 列 リテラル として 適切 な 文字 列 を 生成 し ます 。 
全て の 変換 に対して 例外 を 送出 し ます 。 
バイト 列 と Unicode 文字 列 と の 間 で 自動的 な 型 強制 を おこない たく ない 時 に システムエンコーディング として 使う こと が でき ます 。 
Python ソース コード における Unicode リテラル として 適切 な 文字 列 を 生成 し ます 。 
被 演算 子 の 内部 表現 を 返し ます 。 
被 演算 子 を uuencode を 用い て 変換 し ます 。 
被 演算 子 を gzip を 用い て 圧縮 し ます 。 
2 . 1 プラットフォーム による 違い 
1 . 2 節 で 述べ た よ いう に 、 Distutils を 使っ た モジュール 配布 物 の ビルド と インストール は 、 通常 は 単純 な コマンド : 
で 行い ます 。 Unix で は 、 この コマンド を シェルプロンプト で 行い ます ; Windows で は 、 コマンドプロンプトウィンドウ (`` DOS ボックス '') を 開い て 、 そこ で 行い ます ; Mac OS の 場合 、 作業 は もう少し だけ 複雑 です ( 下記 参照 ) 
setup コマンド は 常に 配布 物 ルート ディレクトリ 、 すなわち モジュール の ソース 配布 物 を 展開 し た 際 の トップ レベル の サブ ディレクトリ 内 で 実行 し なけれ ば なり ませ ん 。 
例えば 、 ある モジュール の ソース 配布 物 foo - 1 . 0 . tar . gz を Unix システム 上 に ダウンロード し た なら 、 通常 は 以下 の 操作 を 行い ます : 
Windows で は 、 おそらく foo - 1 . 0 . zip を ダウンロード し て いる でしょ う 。 
アーカイブ ファイル を C : Temp に ダウンロード し た の なら 、 ( WinZip の よう な ) グラフィカルユーザインタフェース つき の アーカイブ 操作 ソフト や 、 ( unzip や pkunzip の よう な ) コマンドラインツール を 使っ て アーカイブ を 展開 し ます 。 
次に 、 コマンドプロンプトウィンドウ (`` DOS ボックス '') を 開い て 、 以下 を 実行 し ます : 
setup . py install を 実行 する と 、 一 度 の 実行 で 全て の モジュール を ビルド し て インストール し ます 。 
段階 的 に 作業 を し たい 場合 -- ビルドプロセス を カスタマイズ し たり 、 作業 が うまく いか ない 場合 に 特に 便利 です -- に は 、 setup スクリプト に 一 度 に 一つ づつ 作業 を 行わ せる よう に でき ます 。 
この 機能 は 、 ビルド と インストール を 異なる ユーザ で 行う 場合 に も 便利 です -- 例えば 、 モジュール 配布 物 を ビルド し て おい て システム 管理 者 に 渡し て ( または 、 自分 で スーパユーザ に なっ て ) 、 インストール し たく なる かも しれ ませ ん . 最初 の ステップ で は 全て を ビルド し て おき 、 次 の ステップ で 全て を インストール する に は 、 setup スクリプト を 二 度 起動 し ます : 
この 作業 を 行っ て みれ ば 、 install コマンド を 実行 する と まず build コマンド を 実行 し 、 さらに -- この 場合 に は -- build ディレクトリ の 中 が 全て 最新 の 状態 に なっ て いる ので 、 build は 何 も 行わ なく て よい と 判断 し て いる こと が わかる でしょ う 。 インターネット から ダウンロード し た モジュール を インストール し たい だけ なら 、 上 の よう に 作業 を 分割 する 機能 は 必要 ない かも しれ ませ ん が 、 この 機能 は より 進ん だ 使い方 を する 際 に は とても 便利 です 。 
自作 の Python モジュール や 拡張 モジュール を 配布 する こと に なれ ば 、 個々 の Distutils コマンド を 自分 で 何 度 も 実行 する こと に なる でしょ う 。 
上 で 示唆 し た よう に 、 build コマンド は 、 インストール す べき ファイル を ビルドディレクトリ ( build directory ) に 置く 働き が あり ます 。 
デフォルト で は 、 ビルドディレクトリ は 配布 物 ルート 下 の build に なり ます ; システム の 処理 速度 に 強い こだわり が あっ たり 、 ソース ツリー に 指 一 本 触れ たく ない の なら 、 -- build - base オプション を 使っ て ビルドディレクトリ を 変更 でき ます 。 例えば : 
( あるいは 、 システム 全体 向け 、 あるいは 個人 用 の Distutils 設定 ファイル に ディレクティブ を 書い て 、 永続 的 に 設定 を 変え られ ます ; 5 節 を 参照 し て ください 。 
) 通常 は 必要 ない 作業 です 。 ビルドツリー の デフォルト の レイアウト は 以下 の よう に なっ て い ます : 
--- build / --- lib / または --- build / --- lib . plat / temp . plat / 
plat は 、 現在 の OS / ハードウェア プラットフォーム と Python の バージョン を 記述 する 短い 文字 列 に 展開 さ れ ます 。 
第 一 の lib ディレクトリ だけ の 形式 は 、 `` pure モジュール 配布 物 ''-- すなわち 、 pure Python モジュール だけ の 入っ た モジュール 配布 物 -- の 場合 に 使わ れ ます 。 
モジュール 配布 物 に 何らかの 拡張 モジュール ( C / C ++ で 書か れ た モジュール ) が 入っ て いる 場合 、 第 二 の plat 付き ディレクトリ が 二つ ある 形式 が 使わ れ ます 。 
この 場合 、 temp . plat 
ディレクトリ に は 、 コンパイル / リンク 過程 で 生成 さ れ 、 実際 に は インストール さ れ ない 一時 ファイル が 収め られ ます 。 
どちら の 場合 に も 、 lib ( または lib . plat 
) ディレクトリ に は 、 最終 的 に インストール さ れる こと に なる 全て の Python モジュール ( pure Python モジュール および 拡張 モジュール ) が 入り ます 。 今後 、 Python スクリプト 、 ドキュメント 、 バイナリ 実行 可能 形式 、 その他 Python モジュール や アプリケーション の インストール 作業 に 必要 な ディレクトリ が 追加 さ れる かも しれ ませ ん 。 
build コマンド を 実行 し た 後 ( 明示 的 に 実行 し た 場合 も 、 install コマンド が 代わり に 実行 し て くれ た 場合 も ) は 、 install コマンド の 仕事 は 比較的 単純 な もの : build / lib ( または build / lib . plat ) の 下 に ある もの 全て の 指定 し た インストール ディレクトリ へ の コピー 、 に なり ます 。 
インストール ディレクトリ を 選ば なかっ た 場合 -- すなわち 、 setup . py install を 実行 し た だけ の 場合 -- に は 、 install コマンド は サード パーティ 製 Python モジュール を 置く ため の 標準 の 場所 に インストール を 行い ます 。 
この 場所 は 、 プラットフォーム や 、 Python 自体 を どの よう に ビルド / インストール し た か で 変わり ます 。 
Unix や Mac OS で は 、 インストール しよ う と する モジュール 配布 物 が pure Python な の か 、 拡張 モジュール を 含む (`` 非 pure '') の か によって も 異なり ます : 
プラットフォーム 
標準 の インストール 場所 
デフォルト 値 
Unix ( 非 pure ) 
Mac OS ( 非 pure ) 
ほとんど の Linux ディストリビューション に は 、 システム の 標準 インストール 物 として Python が 入っ て いる ので 、 Linux で は 普通 、 prefix や exec - prefix は どちら も / usr に なり ます 。 
Linux ( または Unix ライク な システム ) 上 で 自分 で Python を ビルド し た 場合 、 デフォルト の prefix および exec - prefix は / usr / local に なり ます 。 
Windows で の Python の デフォルトインストールディレクトリ は 、 Python 1 . 6 a 1 、 1 . 5 . 2 、 および それ 以前 の バージョン で は C : Program FilesPython です 。 
prefix および exec - prefix は 、 Python が インストール さ れ て いる ディレクトリ と 、 実行 時 に ライブラリ を 探し に いく 場所 を 表し ます 。 
これら の ディレクトリ は 、 Windows と Mac OS で は 常に 同じ で 、 Unix で も ほぼ 常に 同じ です 。 
自分 の Python が どんな prefix や exec - prefix を 使っ て いる か は 、 Python を 対話 モード で 起動 し て 、 単純 な コマンド を いくつ か 入力 すれ ば わかり ます 。 
Windows で は 、 スタート ( すべて の ) プログラム Python 2 . 4 Python ( command line ) を 選び ます 。 Mac OS 9 で は 、 PythonInterpreter を 起動 し ます 。 
インタプリタ を 起動 する と 、 プロンプト に Python コード を 入力 でき ます 。 
例えば 、 作者 の 使っ て いる Linux システム で 、 三つ の Python 文 を 以下 の よう に 入力 する と 、 出力 から 作者 の システム の prefix と exec - prefix を 得 られ ます : 
モジュール を 標準 の 場所 に インストール し たく ない 場合 や 、 標準 の 場所 に インストール する ため の ファイル 権限 を 持っ て い ない 場合 、 3 節 に ある 、 別 の 場所 へ の インストール 方法 の 説明 を 読ん で ください 。 
インストール 先 の ディレクトリ を 大幅 に カスタマイズ しけれ ば 、 4 節 の カスタム インストール に関する 説明 を 読ん で ください 。 
4 . 2 文字 列 例外 の 廃止 
" PyExc _" の 後ろ に Python の 例外 名 が 続く 名前 を もつ グローバル 変数 として 、 すべて の 標準 Python 例外 が 利用 可能 です 。 
これら は 型 PyObject * を 持ち 、 すべて クラス オブジェクト です 。 
完璧 を 期する ため に 、 すべて の 変数 を 以下 に 列挙 し ます : 
C 名 
Python 名 
これ は 別 の 標準 例外 の ため の ベース クラス です 。 
これ は weakref . ReferenceError と 同じ です 。 
Windows で のみ 定義 さ れ て い ます 。 プリプロセッサ マクロ MS _ WINDOWS が 定義 さ れ て いる か テスト する こと で 、 これ を 使う コード を 保護 し て ください 。 
StreamReader クラス は Codec の サブ クラス で 、 以下 の メソッド を 定義 し て い ます 。 
全て の ストリーム リーダ は 、 Python の codec レジストリ と の 互換 性 を 保つ ため に 、 これら の メソッド を 定義 する 必要 が あり ます 。 クラス StreamReader 
StreamReader インスタンス の コンス トラクタ です 。 
全て の ストリーム リーダ は コンス トラクタ として この インタフェース を 提供 せ ね ば なり ませ ん 。 
キーワード 引数 を 追加 し て も 構い ませ ん が 、 Python の codec レジストリ は ここ で 定義 さ れ て いる 引数 だけ を 使い ます 。 
stream は 、 ( バイナリ で ) 読み出し 可能 な ファイル 類似 の オブジェクト で なく て は なり ませ ん 。 StreamReader は 、 errors キーワード 引数 を 受け て 、 異なっ た エラー 処理 の 仕組み を 実装 し て も 構い ませ ん 。 
定義 済み の パラメタ を 以下 に 示し ます 。 
' ignore ' 文字 を 無視 し て 、 次 の 文字 から 続け ます 。 
' replace ' 適切 な 置換 文字 で 置換 し ます 。 
errors 引数 は 、 同名 の 属性 に 代入 さ れ ます 。 
この 属性 を 変更 する と 、 StreamReader オブジェクト が 生き て いる 間 に 、 異なる エラー 処理 に 変更 でき ます 。 errors 引数 が 取り える 値 の 種類 は register _ error () で 拡張 でき ます 。 
ストリーム から の データ を デコード し 、 デコード 済 の オブジェクト を 返し ます 。 
chars は ストリーム から 読み込む 文字数 です 。 read () は chars 以上 の 文字 を 返し ませ ん が 、 それ より 少ない 文字 しか 取得 でき ない 場合 に は chars 以下 の 文字 を 返し ます 。 
size は 、 デコード する ため に ストリーム から 読み込む 、 およそ の 最大 バイト 数 を 意味 し ます 。 
デコーダ は この 値 を 適切 な 値 に 変更 でき ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 chars が 追加 さ れ まし た 。 
入力 ストリーム から 1 行 読み込み 、 デコード 済み の データ を 返し ます 。 
size が 与え られ た 場合 、 ストリーム における readline () の size 引数 に 渡さ れ ます 。 keepends が 偽 の 場合 に は 行末 の 改行 が 削除 さ れ た 行 が 返り ます 。 
バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 keepends が 追加 さ れ まし た 。 
入力 ストリーム から 全て の 行 を 読み込み 、 行 の リスト として 返し ます 。 keepends が 真 なら 、 改行 は 、 codec デコーダ の メソッド 実装 さ れ 、 リスト 要素 の 中 に 含ま れ ます 。 
sizehint が 与え られ た 場合 、 ストリーム の read () メソッド に size 引数 として 渡さ れ ます 。 
状態 保持 に 使わ れ た codec の バッファ を リセット し ます 。 ストリーム の 読み 位置 を 再 設定 し て は なら ない ので 注意 し て ください 。 
この メソッド は デコード の 際 に エラー から 復帰 できる よう に する ため の もの です 。 
ここ まで で 挙げ た メソッド の 他 に も 、 StreamReader で は 背後 に ある ストリーム の 他 の 全て の メソッド や 属性 を 継承 せ ね ば なり ませ ん 。 次に 挙げる 2 つ の 基底 クラス は 、 利便 性 の ため に 含ま れ て い ます 。 
codec レジストリ は 、 これら を 必要 と し ませ ん が 、 実際 の ところ 、 ある と 有用 な もの でしょ う 。 
StreamReaderWriter を 使っ て 、 読み書き 両方 に 使える ストリーム を ラップ でき ます 。 lookup () 関数 が 返す ファクトリ 関数 を 使っ て 、 インスタンス を 生成 する という 設計 です 。 
クラス StreamReaderWriter 
StreamReaderWriter インスタンス を 生成 し ます 。 
StreamReaderWriter インスタンス は 、 StreamReader クラス と StreamWriter クラス を 合わせ た インタフェース を 継承 し ます 。 
元 に なる ストリーム から は 、 他 の メソッド や 属性 を 継承 し ます 。 
クラス StreamRecoder 
双方向 変換 を 実装 する StreamRecoder インスタンス を 生成 し ます 。 encode と decode は フロント エンド ( read () へ の 入力 と write () から の 出力 ) を 処理 し 、 Reader と Writer は バック エンド ( ストリーム に対する 読み書き ) を 処理 し ます 。 
これら の オブジェクト を 使っ て 、 たとえば 、 Latin - 1 から UTF - 8 、 あるいは 逆 向き の 変換 を 、 透過 に 記録 でき ます 。 
stream は ファイル 的 オブジェクト で なく て は なり ませ ん 。 
encode と decode は Codec の インタフェース に 忠実 で なく て は なり ませ ん 。 Reader と Writer は 、 それぞれ StreamReader と StreamWriter の インタフェース を 提供 する オブジェクト の ファクトリ 関数 か クラス で なく て は なり ませ ん 。 
encode と decode は フロント エンド の 変換 に 必要 で 、 Reader と Writer は バック エンド の 変換 に 必要 です 。 
StreamRecoder インスタンス は 、 StreamReader と StreamWriter クラス を 合わせ た インタフェース を 定義 し ます 。 
また 、 元 の ストリーム の メソッド と 属性 も 継承 し ます 。 
StreamWriter クラス は Codec の サブ クラス で 、 以下 の メソッド を 定義 し て い ます 。 
全て の ストリーム ライタ は 、 Python の codec レジストリ と の 互換 性 を 保つ ため に 、 これら の メソッド を 定義 する 必要 が あり ます 。 クラス StreamWriter 
StreamWriter インスタンス の コンス トラクタ です 。 
全て の ストリーム ライタ は コンス トラクタ として この インタフェース を 提供 せ ね ば なり ませ ん 。 
stream は 、 ( バイナリ で ) 書き込み 可能 な ファイル 類似 の オブジェクト で なく て は なり ませ ん 。 StreamWriter は 、 errors キーワード 引数 を 受け て 、 異なっ た エラー 処理 の 仕組み を 実装 し て も 構い ませ ん 。 
定義 済み の パラメタ を 以下 に 示し ます 。 
' strict ' ValueError ( または 、 その サブ クラス ) 送出 し ます 。 
デフォルト の 動作 です 。 
' replace ' 適切 な 置換 文字 で 置換 し ます 。 
' xmlcharrefreplace ' 適切 な XML 文字 参照 で 置換 し ます 。 
' backslashreplace ' バックス ラッシュ 付き の エスケープ シーケンス で 置換 し ます 。 
この 属性 を 変更 する と 、 StreamWriter オブジェクト が 生き て いる 間 に 、 異なる エラー 処理 に 変更 でき ます 。 errors 引数 が 取り える 値 の 種類 は register _ error () で 拡張 でき ます 。 
object の 内容 を エン コード し て ストリーム に 書き出し ます 。 
文字 列 から なる リスト を 連結 し て 、 ( 必要 に 応じ て write () を 何 度 も 使っ て ) ストリーム に 書き出し ます 。 
状態 保持 に 使わ れ て い た codec の バッファ を 強制 的 に 出力 し て リセット し ます 。 この メソッド が 呼び出さ れ た 場合 、 出力 先 データ を きれい な 状態 に し 、 わざわざ ストリーム 全体 を 再 スキャン し て 状態 を 元 に 戻さ なく て も 新しく データ を 追加 できる よう に せ ね ば なり ませ ん 。 
ここ まで で 挙げ た メソッド の 他 に も 、 StreamWriter で は 背後 に ある ストリーム の 他 の 全て の メソッド や 属性 を 継承 せ ね ば なり ませ ん 。 
複数 の 文字 列 リテラル は 、 互いに 異なる 引用 符 を 使っ て い て も ( 空白 文字 で 区切っ て ) 隣接 さ せる こと が でき 、 その 意味 は 各々 の 文字 列 を 結合 し た もの と 同じ に なり ます 。 
したがって 、 " hello " ' world ' は " helloworld " と 同じ に なり ます 。 
この 機能 を 使う と 、 長い 文字 列 を 分離 し て 、 複数 行 に またがら せる 際 に 便利 です 。 また 、 部分 文字 列 ごと に コメント を 追加 する こと も でき ます 。 
例えば : re . compile ("[ A - Za - z _]" # letter or underscore "[ A - Za - z 0 - 9 _]*" # letter , digit or underscore ) 
この 機能 は 文法 レベル で 定義 さ れ て い ます が 、 スクリプト を コンパイル する 際 の 処理 として 実現 さ れる こと に 注意 し て ください 。 
実行 時 に 文字 列 表現 を 結合 し たけれ ば 、 `+' 演算 子 を 使わ なけれ ば なり ませ ん 。 
また 、 リテラル の 結合 において は 、 結合 する 各 要素 に 異なる 引用 符 形式 を 使える ( raw 文字 列 と 三重 引用 符 を 混ぜる こと さえ でき ます ) ので 注意 し て ください 。 
文字 列 変換 は 、 逆 クオート ( reverse quite , 別名 バッククオート : backward quote ) で 囲わ れ た 式 の リスト です : string _ conversion 
組み込み 関数 repr () は 、 括弧 内 の 引数 に対して 、 逆 クオート 表記 で 囲わ れ た 中身 と 全く 同じ 変換 を 実行 し ます 。 
組み込み 関数 str () は 似 た よう な 動作 を し ます が 、 もっと ユーザフレンドリ な 変換 に なり ます 。 
以下 は 8 ビット 文字 列 および Unicode オブジェクト で サポート さ れる メソッド です : 
最初 の 文字 を 大文字 に し た 文字 列 の コピー を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
width の 長 さ を もつ 中央 寄せ さ れ た 文字 列 を 返し ます 。 
パディング に は fillchar で 指定 さ れ た 値 （ デフォルト で は スペース ） が 使わ れ ます 。 バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 fillchar に 対応 
文字 列 S [ start : end ] 中 に 部分 文字 列 sub が 出現 する 回数 を 返し ます 。 
オプション 引数 start および end は スライス 表記 と 同じ よう に 解釈 さ れ ます 。 
標準 の エラー 処理 は ' strict ' で 、 エン コード に関する エラー は UnicodeError を 送出 し ます 。 
他 に 利用 できる 値 は ' ignore ' 、 ' replace ' および 関数 codecs . register _ error によって 登録 さ れ た 名前 です 。 
バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : その他 の エラーハンドリングスキーマ が サポート さ れ まし た 
文字 列 の エン コード さ れ た バージョン を 返し ます 。 
標準 の エン コーディング は 現在 の デフォルト 文字 列 エン コーディング です 。 標準 と は 異なる エラー 処理 を 行う ため に errors を 与える こと が でき ます 。 
標準 の エラー 処理 は ' strict ' で 、 エン コード に関する エラー は UnicodeError を 送出 し ます 。 
他 に 利用 できる 値 は ' ignore ' 、 ' replace ' 、 ' xmlcharrefreplace '、 ' backslashreplace ' および 関数 codecs . register _ error によって 登録 さ れ た 名前 です 。 
利用 可能 な エンコーディング の 一覧 は 、 セクション 4 . 9 . 2 を 参照 し て ください 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 :' xmlcharrefreplace ' 、 ' backslashreplace ' および その他 の エラーハンドリングスキーマ が サポート さ れ まし た 
文字 列 の 一部 が suffix で 終わる とき に True を 返し ます 。 そう で ない 場合 False を 返し ます 。 
オプション 引数 start が ある 場合 、 文字 列 の start から 比較 を 始め ます 。 
end が ある 場合 、 文字 列 の end で 比較 を 終え ます 。 
全て の タブ 文字 が 空白 で 展開 さ れ た 文字 列 の コピー を 返し ます 。 
tabsize が 与え られ て い ない 場合 、 タブ 幅 は 8 文字 分 と 仮定 し ます 。 
文字 列 中 の 領域 [ start , end ) に sub が 含ま れる 場合 、 その 最小 の インデクス を 返し ます 。 
オプション 引数 start および end は スライス 表記 と 同様 に 解釈 さ れ ます 。 
sub が 見つから なかっ た 場合 - 1 を 返し ます 。 
find () と 同様 です が 、 sub が 見つから なかっ た 場合 ValueError を 送出 し ます 。 
文字 列 中 の 全て の 文字 が 英 数 文字 で 、 かつ 1 文字 以上 ある 場合 に は 真 を 返し 、 そう で ない 場合 は 偽 を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 中 の 全て の 文字 が 英 文字 で 、 かつ 1 文字 以上 ある 場合 に は 真 を 返し 、 そう で ない 場合 は を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 中 に 数字 しか ない 場合 に は 真 を 返し 、 その他 の 場合 は 偽 を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 中 の 大 小文字 の 区別 の ある 文字 全て が 小文字 で 、 かつ 1 文字 以上 ある 場合 に は 真 を 返し 、 そう で ない 場合 は 偽 を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 が 空白 文字 だけ から なり 、 かつ 1 文字 以上 ある 場合 に は 真 を 返し 、 そう で ない 場合 は 偽 を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 が タイトル ケース 文字 列 で あり 、 かつ 1 文字 以上 ある 場合 、 例えば 大文字 は 大 小文字 の 区別 の ない 文字 の 後 に のみ 続き 、 小文字 は 大 小文字 の 区別 の ある 文字 の 後ろ に のみ 続く 場合 に は 真 を 返し ます 。 
そう で ない 場合 は 偽 を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 中 の 大 小文字 の 区別 の ある 文字 全て が 大文字 で 、 かつ 1 文字 以上 ある 場合 に は 真 を 返し 、 そう で ない 場合 は 偽 を 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
シーケンス seq 中 の 文字 列 を 結合 し た 文字 列 を 返し ます 。 
文字 列 を 結合 する とき の 区切り 文字 は 、 この メソッド を 適用 する 対象 の 文字 列 に なり ます 。 
width の 長 さ を もつ 左寄せ し た 文字 列 を 返し ます 。 パディング に は fillchar で 指定 さ れ た 文字 ( デフォルト で は スペース ） が 使わ れ ます 。 
width が len ( s ) より も 小さい 場合 、 元 の 文字 列 が 返さ れ ます 。 バージョン 2 . 4 で 変更 さ れ た 仕様 : 引数 fillchar が 追加 さ れ まし た 
文字 列 を コピー し 、 小文字 に 変換 し て 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 を コピー し 、 文字 列 の 先頭 部分 を 除去 し て 返し ます 。 
chars が 省略 さ れる か None の 場合 、 空白 文字 が 除去 さ れ ます 。 
chars が 与え られ て い て かつ None で ない 場合 、 chars は 文字 列 で なけれ ば なり ませ ん ; この メソッド を 適用 し た 対象 の 文字 列 の 先頭 部分 から chars 中 の 文字 が 除去 さ れ ます 。 バージョン 2 . 2 . 2 で 変更 さ れ た 仕様 : 引数 chars を サポート し まし た 
文字 列 を コピー し 、 部分 文字 列 old の ある 部分 全て を new に 置換 し て 返し ます 。 
オプション 引数 count が 与え られ て いる 場合 、 先頭 から count 個 の old だけ を 置換 し ます 。 
文字 列 中 の 領域 [ start , end ) に sub が 含ま れる 場合 、 その 最大 の インデクス を 返し ます 。 
オプション 引数 start および end は スライス 表記 と 同様 に 解釈 さ れ ます 。 
sub が 見つから なかっ た 場合 - 1 を 返し ます 。 
find () と 同様 です が 、 sub が 見つから なかっ た 場合 ValueError を 送出 し ます 。 
width の 長 さ を もつ 右寄せ し た 文字 列 を 返し ます 。 
sep を 区切り 文字 と し た 、 文字 列 中 の 単語 の リスト を 返し ます 。 
maxsplit が 与え られ た 場合 、 最大 で maxsplit 個 に なる よう に 分割 が 行なわ れ ます 、 最も 右側 （ の 単語 ） は 1 つ に なり ます 。 
sep が 指定 さ れ て い ない 、 あるいは None の とき 、 全て の 空白 文字 が 区切り 文字 と なり ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
文字 列 を コピー し 、 文字 列 の 末尾 部分 を 除去 し て 返し ます 。 
chars が 与え られ て い て かつ None で ない 場合 、 chars は 文字 列 で なけれ ば なり ませ ん ; この メソッド を 適用 し た 対象 の 文字 列 の 末端 部分 から chars 中 の 文字 が 除去 さ れ ます 。 バージョン 2 . 2 . 2 で 変更 さ れ た 仕様 : 引数 chars を サポート し まし た 
sep を 単語 の 境界 として 文字 列 を 単語 に 分割 し 、 分割 さ れ た 単語 から なる リスト を 返し ます 。 
( したがって 返さ れる リスト は 
maxsplit + 1 の 要素 を 持ち ます ） maxsplit が 与え られ て い ない か ゼロ の 場合 、 無 制限 に 分割 が 行なわ れ ます （ 全て の 可能 な 分割 が 行なわ れる ） 。 
連続 し た 区切り 文字 は グループ 化 さ れ ず 、 空 の 文字 列 を 区切っ て いる と 判断 さ れ ます （ 例えば "' 1 ,, 2 '. split (',')" は "[' 1 ', '', ' 2 ']" を 返し ます ） 。 
区切り 文字 を 指定 し て 空 の 文字 列 を 分割 する と 、 空 の リスト を 返し ます 。 sep が 指定 さ れ て い ない か None が 指定 さ れ て いる 場合 、 異なる 分割 アルゴリズム が 適用 さ れ ます 。 
空 の 文字 列 へ の 分割 は "['']" を 返し ます 。 
文字 列 を 改行 部分 で 分解 し 、 各行 から なる リスト を 返し ます 。 
keepends が 与え られ て い て 、 かつ その 値 が 真 で ない 限り 、 返さ れる リスト に は 改行 文字 は 含ま れ ませ ん 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
文字 列 の 一部 が prefix で 始まる とき に True を 返し ます 。 そう で ない 場合 False を 返し ます 。 
オプション 引数 start が ある 場合 、 文字 列 の start から 比較 を 始め ます 。 
end が ある 場合 、 文字 列 の end で 比較 を 終え ます 。 
文字 列 を コピー し 、 文字 列 の 先頭 および 末尾 部分 を 除去 し て 返し ます 。 
chars が 省略 さ れる か None の 場合 、 空白 文字 が 除去 さ れ ます 。 
chars が 与え られ て い て かつ None で ない 場合 、 chars は 文字 列 で なけれ ば なり ませ ん ; この メソッド を 適用 し た 対象 の 文字 列 の 両端 から chars 中 の 文字 が 除去 さ れ ます 。 バージョン 2 . 2 . 2 で 変更 さ れ た 仕様 : 引数 chars を サポート し まし た 
文字 列 を コピー し 、 大文字 は 小文字 に 、 小文字 は 大文字 に 変換 し て 返し ます 。 
文字 列 を タイトル ケース に し て 返し ます : 大文字 から 始まり 、 残り の 文字 の うち 大小 文字 の 区別 が ある もの は 全て 小文字 に し ます 。 
文字 列 を コピー し 、 オプション 引数 の 文字 列 deletechars の 中 に 含ま れる 文字 を 全て 除去 し ます 。 
None に 対応付け られ た 文字 は 削除 さ れ ます 。 
ちなみに 、 より 柔軟 性 の ある アプローチ は 、 自作 の 文字 対応 付け を 行う codec を 
モジュール を 使っ て 作成 する こと です ( 例えば encodings . cp 1251 を 参照 し て ください 。 
文字 列 を コピー し 、 大文字 に 変換 し て 返し ます 。 8 ビット 文字 列 で は 、 メソッド は ロ ケール 依存 に なり ます 。 
数値 文字 列 の 左側 を ゼロ 詰め し 、 幅 width に し て 返し ます 。 
width が len ( s ) より も 短い 場合 もと の 文字 列 自体 が 返さ れ ます 。 バージョン 2 . 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
以下 の 関数 で は 、 文字 列 が 渡さ れる はず の パラメタ に 非 文字 列 が 渡さ れ た 場合 に TypeError を 送出 し ます 。 
この PyObject の サブ タイプ は Python の 文字 列 オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の 文字 列 型 を 表現 し ます ; この オブジェクト は Python レイヤ における types . TypeType と 同じ です 。 
o が 文字 列 型 か 文字 列 型 の サブ タイプ で ある とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
o が 文字 列 型 で 、 かつ 文字 列 型 の サブ タイプ で ない とき に 真 を 返し ます 。 
v を 値 に 持つ 文字 列 オブジェクト を 返し ます 。 失敗 する と NULL を 返し ます 。 
パラメタ v は NULL で あっ て は なり ませ ん ; NULL か どう か は チェック し ませ ん 。 
値 が v で 長 さ が len の 新た な 文字 列 オブジェクト を 返し ます 。 失敗 する と NULL を 返し ます 。 
v が NULL の 場合 、 文字 列 の 中身 は 未 初期 化 の 状態 に なり ます 。 
C 関数 printf () 形式 の format 文字 列 と 可変 個 の 引数 を とり 、 書式 化 済み の 文字 列 長 を 計算 し た 上 で 、 書式 化 を 行っ た 結果 を 値 と する Python 文字 列 に し て 返し ます 。 
可変 個 の 引数 部 は C の データ 型 で なく て は なら ず 、 かつ format 文字 列 内 の 書式 指定 文字 ( format character ) に 一致 する 型 で なく て は なり ませ ん 。 
利用 できる 書式 化 文字 は 以下 の 通り です : 
書式 指定 文字 
型 
コメント 
文字 % の リテラル 。 
C の 整数 型 で 表現 さ れる 単一 の 文字 。 
C の printf ("% d ") と 全く 同じ 。 
C の printf ("% ld ") と 全く 同じ 。 
C の printf ("% i ") と 全く 同じ 。 
C の printf ("% x ") と 全く 同じ 。 
null で 終端 さ れ た C の 文字 列 。 
C ポインタ の 16 進 表記 。 printf ("% p ") と ほとんど 同じ だ が 、 プラットフォーム における printf の 定義 に 関わり なく 先頭 に リテラル 0 x が 付き ます 。 
PyString _ FromFormat () と 同じ です 。 ただし 、 こちら の 関数 は 二つ しか 引数 を とり ませ ん 。 
文字 列 オブジェクト string 内 の 文字 列 値 の 長 さ を 返し ます 。 
PyString _ Size () を マクロ で 実装 し た もの で 、 エラー チェック を 行い ませ ん 。 
string の 中身 を NUL 文字 終端 さ れ た 表現 で 返し ます 。 
ポインタ は string オブジェクト の 内部 バッファ を 指し 、 バッファ の コピー を 指す わけ で は あり ませ ん 。 
PyString _ FromStringAndSize ( NULL , size ) を 使っ て 生成 し た 文字 列 で ない 限り 、 バッファ 内 の データ は いかなる 変更 も し て は なり ませ ん 。 この 文字 列 を デアロケート し て は なり ませ ん 。 
string が Unicode オブジェクト の 場合 、 この 関数 は string の デフォルトエンコーディング 版 を 計算 し 、 デフォルトエンコーディング 版 に対して 操作 を 行い ます 。 
string が 文字 列 オブジェクト で すら ない 場合 、 PyString _ AsString () は NULL を 返し て TypeError を 送出 し ます 。 
PyString _ AsString () を マクロ で 実装 し た もの で 、 エラー チェック を 行い ませ ん 。 
文字 列 オブジェクト だけ を サポート し ます ; Unicode オブジェクト を 渡し て は なり ませ ん 。 
obj の 中身 を NUL 文字 終端 さ れ た 表現 に し て 、 出力 用 の 変数 buffer と length を 使っ て 返し ます 。 この 関数 は 文字 列 オブジェクト と Unicode オブジェクト の どちら も 入力 として 受理 し ます 。 
Unicode オブジェクト の 場合 、 オブジェクト を デフォルトエンコーディング で エン コード し た バージョン ( default encoded version ) を 返し ます 。 
length が NULL の 場合 、 値 を 返さ せる バッファ に は NUL 文字 を 入れ て は なり ませ ん ; NUL 文字 が 入っ て いる 場合 、 関数 は - 1 を 返し 、 TypeError を 送出 し ます 。 buffer は obj の 内部 文字 列 バッファ を 参照 し 、 バッファ の コピー を 参照 する わけ で は あり ませ ん 。 
PyString _ FromStringAndSize ( NULL , size ) を 使っ て 生成 し た 文字 列 で ない 限り 、 バッファ 内 の データ は いかなる 変更 も し て は なり ませ ん 。 
この 文字 列 を デアロケート し て は なり ませ ん 。 
string が Unicode オブジェクト の 場合 、 この 関数 は string の デフォルトエンコーディング 版 を 計算 し 、 デフォルトエンコーディング 版 に対して 操作 を 行い ます 。 
string が 文字 列 オブジェクト で すら ない 場合 、 PyString _ AsStringAnsSize () は NULL を 返し て TypeError を 送出 し ます 。 
新しい 文字 列 オブジェクト を * string に 作成 し 、 newpart の 内容 を string に 追加 し ます ; 呼び出し 側 は 新た な 参照 を 所有 する こと に なり ます 。 
string の 以前 の 値 に対する 参照 は 盗み 取ら れ ます 。 
新た な 文字 列 を 生成 でき なけれ ば 、 string に対する 古い 参照 は 無視 さ れ 、 * string の 値 は NULL に 設定 さ れ ます ; その 際 、 適切 な 例外 情報 が 設定 さ れ ます 。 
新しい 文字 列 オブジェクト を * string に 作成 し 、 newpart の 内容 を string に 追加 し ます 。 
こちら の バージョン の 関数 は newpart へ の 参照 を デクリメント し ます 。 
`` 変更 不能 '' で ある 文字 列 オブジェクト を サイズ 変更 する 手段 です 。 新た な 文字 列 オブジェクト を 作成 する とき に のみ 使用 し て ください ; 文字 列 が すでに コード の 他 の 部分 で 使わ れ て いる かも しれ ない 場合 に は 、 この 関数 を 使っ て は なり ませ ん 。 
入力 する 文字 列 オブジェクト の 参照 カウント が 1 で ない 場合 、 この 関数 を 呼び出す と エラー に なり ます 。 左側 値 に は 、 既存 の 文字 列 オブジェクト の アドレス を 渡し ( この アドレス に は 書き込み 操作 が 起きる かも しれ ませ ん )、 新た な サイズ を 指定 し ます 。 
成功 し た 場合 、 * string は サイズ 変更 さ れ た 文字 列 オブジェクト を 保持 し 、 0 が 返さ れ ます ; * string の 値 は 、 入力 し た とき の 値 と 異なっ て いる かも しれ ませ ん 。 
文字 列 の 再 アロケーション に 失敗 し た 場合 、 * string に 入っ て い た 元 の 文字 列 オブジェクト を 解放 し 、 * string を NULL に セット し 、 メモリ 例外 を セット し 、 - 1 を 返し ます 。 
新た な 文字 列 オブジェクト を format と args から 生成 し ます 。 
と 似 た 働き です 。 
引数 args は タプル で なけれ ば なり ませ ん 。 
引数 * string を インプレース で 隔離 ( intern ) し ます 。 
引数 は Python 文字 列 オブジェクト を 指す ポインタ へ の アドレス で なく て は なり ませ ん 。 
* string と 等しい 、 すでに 隔離 済み の 文字 列 が 存在 する 場合 、 その オブジェクト を * string に 設定 し ます ( かつ 、 元 の 文字 列 オブジェクト の 参照 カウント を デクリメント し 、 すでに 隔離 済み の 文字 列 オブジェクト の 参照 カウント を インクリメント し ます )。 
( 補足 : 参照 カウント について は 沢山 説明 し て 来 まし t が 、 この 関数 は 参照 カウント 中立 ( reference - count - neutral ) と 考え て ください ; この 関数 で は 、 関数 の 呼び出し 後 に オブジェクト に対して 参照 の 所有 権 を 持てる の は 、 関数 を 呼び出す 前 に すでに 所有 権 を 持っ て い た 場合 に 限り ます 。 
PyString _ FromString () と PyString _ InternInPlace () を 組み合わせ た もの で 、 隔離 済み の 新た な 文字 列 オブジェクト を 返す か 、 同じ 値 を 持つ すでに 隔離 済み の 文字 列 オブジェクト に対する 新た な (`` 所有 権 を 得 た '') 参照 を 返し ます 。 
size から なる エン コード 済み の バッファ s を encoding の 名前 で 登録 さ れ て いる codec に 渡し て デコード し 、 オブジェクト を 生成 し ます 。 encoding および errors は 組み込み 関数 unicode () に 与える 同名 の パラメタ と 同じ 意味 を 持ち ます 。 
codec が 例外 を 送出 し た 場合 に は NULL を 返し ます 。 
文字 列 オブジェクト を encoding の 名前 で 登録 さ れ て いる codec に 渡し て デコード し 、 Python オブジェクト を 返し ます 。 
LaTeX マーク アップ に対する 小規模 な 変更 の ほとんど は 、 マーク アップ から 表現 方法 を 切り離す ため と メンテナンス 性 の 向上 の 両方 を 狙っ て なさ れ て き た もの です 。 
1998 年 から この かた 、 まさに この 目的 の もと に 数 多く の 変更 が 行わ れ まし た ; それ 以前 は 、 変更 は あり まし た が あまり 体系 的 な やり かた で は なく 、 既存 の 内容 を 更新 する 必要 は ない と 考え られ て い まし た 。 
その 結果 、 高度 に 構造 化 さ れ 、 意味 論 的 に は LaTeX の 上 に 読み出さ れる こと に なる よう な 、 LaTeX で 実装 さ れ た マーク アップ 言語 に なっ て しまい まし た 。 
と は いえ 、 基本 的 な TeX や LaTeX による マーク アップ が 使わ れ て い なけれ ば 、 実際 の ドキュメント ソース で LaTeX が 使わ れ て いる 証拠 と なる の は マーク アップ の 構文 法 くらい です 。 この 副作用 の せい で 、 例えば LaTeX や LaTeX 2 HTML の よう な 、 ドキュメント を 操作 する ため の 標準 の `` エンジン '' を 使える に も 関わら ず 、 実際 の 変換 の ほとんど は Python に 特 化 し て 作ら れ て しまい まし た 。 
LaTeX ドキュメント クラス と LaTeX 2 HTML サポート は 、 いずれ も この ドキュメント の ため に 設計 さ れ た 特殊 な マーク アップ を 完全 に 実装 し て い ます 。 高度 に カスタマイズ さ れ た マーク アップ が 、 ドキュメント を 処理 する ため の 深遠 なる 機構 と 組み 合さっ て しまう と 、 こんな 疑問 が 出 て き ます : もっと 簡単 に でき ない の ? あるいは 、 もっと まし に なら ない の ? コミュニティ と の たくさん の 議論 を 重ね た 結果 、 我々 は 近代 的 な 構造 化 ドキュメント 生成 システム の 追求 に も 時間 を 費やす 価値 が ある という 結論 に 達し まし た 。 
この 議論 の 場 に は 、 二つ の 現実 的 な 競合 案 : 標準 化 汎用 マーク アップ 言語 ( Standard General Markup Language , SGML ) と 拡張 可能 な マーク アップ 言語 ( Extensible Markup Language , XML ) が 挙がっ て い ます 。 これら の 標準 に は 、 いずれ も 長所 と 短所 が あり 、 多く の 長所 を 共有 し て い ます 。 
SGML は ほとんど の ドキュメント 作者 、 とりわけ 普通 の テキストエディタ を 利用 し て いる 人 たち を そそら せる よう な 長所 を 持っ て い ます 。 
また 、 コンテンツ の モデル を 定義 できる という 別 の 機能 も あり ます 。 
完成 度 が 実証 さ れ て いる 多く の 高 品質 な ツール を 利用 でき ます が 、 その ほとんど は フリー で は あり ませ ん ; また これら の ツール で は 、 可 搬性 が いまだに 問題 に なっ て い ます 。 XML に は 、 多数 の 発展 中 の ツール を 使える という 利点 が あり ます 。 
残念 ながら 、 XML の 標準 自体 の 多く が まだ 発展 中 な ので 、 ツール も 当分 は それ に 追従 し なけれ ば なら ない でしょ う 。 
つまり 、 基本 XML 1 . 0 勧告 を 超え た 仕様 を 利用 する よう な 安定 し た ツール セット を 短い 期間 で 開発 する の は 不可能 です 。 
最も 重要 な 関連 標準 仕様 を の いくつ か を サポート する よう な 広範 な 種類 の 高 品質 ツール が 利用 できる と 自信 を 持っ て いえる の は は まだ 先 の 話 です 。 
将来 は ドキュメント を XML に 移行 する こと に なっ て い て 、 ドキュメント を 現在 の 形式 から 変換 し て 、 最終 的 な バージョン に 近い もの に する ツール を 開発 し て いる ところ です 。 
3 スタイル ガイド Python ドキュメント は 、 可能 な 限り 
に 準拠 する こと に なっ て い ます 。 内容 の 合理 性 と 、 オンライン で 容易 に 取得 できる こと から 、 この スタイル ガイド が 選ば れ まし た 。 
Apple の スタイル ガイド が カバー し て い ない トピック について は 、 この ドキュメント で 必要 に 応じ て 議論 し て いき ます 。 Python ドキュメント の 中 で は 、 オペレーティングシステム や プログラミング 言語 、 標準 機関 、 その他 の 名前 を 含む 沢山 の 特殊 な 名前 を 使っ て い ます 。 
こうした 名前 の 多く は かなり 古い 時期 に LaTeX マクロ に 割り当て られ 、 その 便利 さ から 長い 間 利用 さ れ つづけ て き まし た 。 
`` central processing unit '' ( 中央 処理 装置 ) の こと です 。 多く の スタイル ガイド が 、 この 語 を 最初 に 利用 する とき に は 略さ ず に 書か ね ば なら ない と し て い ます ( です から 、 どうしても この 語 を 使う 必要 が ある なら 、 必ず そう し て ください !)。 
Python ドキュメント で は 、 読者 が 最初 に どこ を 読む の か 合理 的 に 予測 する 方法 が ない ので 、 略語 の 使用 を 避け ね ば なり ませ ん 。 
代わり に `` processor ( プロセッサ )'' を 使う 方 が よい でしょ う 。 
ある 一連 の 標準 仕様 に つけ られ た 名前 です 。 
常に 大文字 だけ から なり ます 。 
この 名前 を 表現 する に は マクロ POSIX を 使用 し て ください 。 
私 たち の 好き な プログラミング 言語 の 名前 は 常に 大文字 で 始め ます 。 
ある 文字 セット と 、 それ に 対応 する 符号 化 方式 の 名前 です 。 
常に 大文字 で 始め ます 。 
1970 年代 初頭 に ATT ベル 研究所 で 開発 さ れ た オペレーティングシステム の 名前 です 。 
この 名前 を 使う に は マクロ の UNIX を 使用 し て ください 。 
4 . 文字 列 処理 
この 章 で 解説 さ れ て いる モジュール は 文字 列 を 操作 する さまざま な 処理 を 提供 し ます 。 
一般 的 な 文字 列 操作 
Perl 風 の シンタクス を 用い た 正規 表現 検索 と マッチ 操作 。 
文字 列 データ を パック さ れ た バイナリ データ として 解釈 し ます 。 
オブジェクト 同士 の 違い を 計算 する 
浮動 小数点 を フォーマット する 汎用 関数 。 
ファイル の よう に 文字 列 を 読み書き する 。 
StringIO を 高速 に し た もの だ が 、 サブ クラス 化 は でき ない 。 
テキスト の 折り返し と 詰め込み 
データ や ストリーム の エン コード ・ デコード 。 
国際 化 ドメイン 名 実装 
RFC 3453 による 文字 列 調製 
string オブジェクト の メソッド について は 、 2 . 3 . 6 節 の `` 文字 列 型 の メソッド '' も ごらん ください 。 
更 なる 組み込み オブジェクト 型 へ の サポート を 追加 する ため や 、 すでに サポート さ れ て いる 型 の 扱い を 変更 する ため に 、 Repr . repr 1 () による 動的 な ディスパッチ を 使っ て Repr を サブ クラス 化 する こと が でき ます 。 この 例 は ファイル オブジェクト の ため の 特別 な サポート を 追加 する 方法 を 示し て い ます : 
添字 表記 は 、 シーケンス ( 文字 列 、 タプル または リスト ) や マップ ( 辞書 ) オブジェクト から 、 要素 を 一つ 選択 し ます : 
( 式 リスト の 要素 が 単独 で ある 場合 を 除き 、 式 リスト は タプル で なけれ ば なり ませ ん 。 ) 一 次 語 が シーケンス の 場合 、 式 ( リスト ) の 値 評価 結果 は ( 通常 の ) 整数 で なけれ ば なり ませ ん 。 
値 が 負 の 場合 、 シーケンス の 長 さ が 加算 さ れ ます ( x [- 1 ] が x の 最後 の 要素 を 指す こと に なり ます )。 
加算 結果 は シーケンス 内 の 要素 数 より も 小さな 非負 の 整数 と なら なけれ ば なり ませ ん 。 添字 表記 は 、 添字 と 同じ シーケンス 中 の ( ゼロ から 数え た ) インデクス を 持つ 要素 を 選択 し ます 。 
文字 列 型 の 要素 は 文字 ( character ) です 。 文字 は 個別 の 型 で は なく 、 1 文字 だけ から なる 文字 列 です 。 
以下 の 表 は 、 Python における 演算 子 を 、 優先 順位 
の 最も 低い ( 結合 度 が 最も 低い ) もの から 最も 高い ( 結合 度 が 最も 高い ) もの の 順 に 並べ た もの です 。 同じ ボックス 内 に 示さ れ た 演算 子 は 同じ 優先 順位 を 持ち ます 。 
演算 子 の 文法 が 示さ れ て い ない かぎり 、 演算 子 は 全て 二 項 演算 子 です 。 
演算 子 
ラムダ 式 
ブール 演算 OR 
ブール 演算 AND 
ブール 演算 NOT 
メンバシップテスト 
アイデンティティ テスト 
比較 
ビット 単位 OR 
ビット 単位 XOR 
ビット 単位 AND 
シフト 演算 
加算 および 減算 
乗算 、 除算 、 剰余 
正 符号 、 負 符号 
ビット 単位 NOT 
属性 参照 
添字 指定 
スライス 操作 
関数 呼び出し 
式 結合 または タプル 表現 
リスト 表現 
辞書 表現 
文字 列 へ の 型 変換 
この 章 で は 、 SunOS オペレーティングシステム バージョン 5 ( Solaris バージョン 2 ) に 固有 の 機能 を 解説 し ます 。 
Python が 循環 参照 を 含む ガベージ の 検出 と コレクション を サポート する に は 、 他 の オブジェクト に対する `` コンテナ '' ( 他 の オブジェクト に は 他 の コンテナ も 含み ます ) と なる オブジェクト 型 による サポート が 必要 です 。 
他 の オブジェクト に対する 参照 を 記憶 し ない オブジェクト や 、 ( 数値 や 文字 列 の よう な ) アトム 型 ( atomic type ) へ の 参照 だけ を 記憶 する よう な 型 で は 、 ガベージコレクション に際して 特別 これ といった サポート を 提供 する 必要 は あり ませ ん 。 ここ で 説明 し て いる インタフェース の 使い方 を 示し た 例 は 、 
Python の 拡張 と 埋め込み 
の `` 循環 参照 の 収集 を サポート する '' に あり ます 。 コンテナ 型 を 作る に は 、 型 オブジェクト の tp _ flags フィールド に Py _ TPFLAGS _ HAVE _ GC フラグ が なく て は なら ず 、 tp _ traverse ハンドラ の 実装 を 提供 し なけれ ば なり ませ ん 。 
実装 する 型 の インスタンス を 変更 可能 な オブジェクト に する なら 、 tp _ clear の 実装 も 提供 し なけれ ば なり ませ ん 。 
この フラグ を セット し た 型 の オブジェクト は 、 この 節 に 述べ た 規則 に 適合 し なけれ ば なり ませ ん 。 
簡単 の ため 、 この フラグ を セット し た 型 の オブジェクト を コンテナ オブジェクト と 呼び ます 。 
コンテナ 型 の コンス トラクタ は 以下 の 二つ の 規則 に 適合 し なけれ ば なり ませ ん : 
オブジェクト の メモリ は PyObject _ GC _ New () または PyObject _ GC _ VarNew () で 確保 し なけれ ば なり ませ ん 。 
一度 他 の コンテナ へ の 参照 が 入る かも しれ ない フィールド が 全て 初期 化 さ れ たら 、 PyObject _ GC _ Track () を 呼び出さ ね ば なり ませ ん 。 
PyObject _ New () に 似 て い ます が 、 Py _ TPFLAGS _ HAVE _ GC の セット さ れ た コンテナ オブジェクト 用 です 。 
PyObject _ NewVar () に 似 て い ます が 、 Py _ TPFLAGS _ HAVE _ GC の セット さ れ た コンテナ オブジェクト 用 です 。 
PyObject _ NewVar () が 確保 し た オブジェクト の メモリ を リサイズ し ます 。 
リサイズ さ れ た オブジェクト を 返し ます 。 失敗 する と NULL を 返し ます 。 
ガベージコレクタ が 追跡 し て いる コンテナ オブジェクト の 集合 に オブジェクト op を 追加 し ます 。 
ガベージコレクタ の 動作 する 回数 は 予測 不能 な ので 、 追加 対象 に する オブジェクト は 追跡 さ れ て いる 間 ずっと 有効 な オブジェクト で なけれ ば なり ませ ん 。 
この 関数 は 、 通常 コンス トラクタ の 最後 付近 で 、 tp _ traverse ハンドラ 以降 の 全て の フィールド が 有効 な 値 に なっ た 時点 で 呼び出さ ね ば なり ませ ん 。 
PyObject _ GC _ Track () の マクロ 版 です 。 
拡張 モジュール に 使っ て は なり ませ ん 。 
同様 に 、 オブジェクト の メモリ 解放 関数 も 以下 の 二つ の 規則 に 適合 し なけれ ば なり ませ ん : 
他 の コンテナ を 参照 し て いる フィールド を 無効 化 する 前 に 、 PyObject _ GC _ UnTrack () を 呼び出さ ね ば なり ませ ん 。 
オブジェクト の メモリ は PyObject _ GC _ Del () で 解放 し なけれ ば なり ませ ん 。 
PyObject _ GC _ New () や PyObject _ GC _ NewVar () を 使っ て 確保 さ れ た メモリ を 解放 し ます 。 
ガベージコレクタ が 追跡 し て いる コンテナ オブジェクト の 集合 から オブジェクト op を 除去 し ます 。 
PyObject _ GC _ Track () を 呼び出し て 、 除去 し た オブジェクト を 再度 追跡 対象 セット に 追加 できる ので 注意 し て ください 。 
メモリ 解放 関数 ( deallocator , tp _ dealloc ハンドラ ) は 、 tp _ traverse ハンドラ が 使用 し て いる フィールド の いずれ か が 無効 化 さ れる より も 以前 に オブジェクト に対して 呼び出さ れ て い なけれ ば なり ませ ん 。 
PyObject _ GC _ UnTrack () の マクロ 版 です 。 
tp _ traverse ハンドラ は 以下 の 型 を 持つ 関数 を 引数 の 一つ として とり ます : 
tp _ traverse ハンドラ に 渡す ビジタ 関数 ( visitor function ) の 型 です 。 
この 関数 は 追跡 す べき オブジェクト を object に 、 tp _ traverse ハンドラ の 第 三 引数 を arg に し て 呼び出さ れ ます 。 
Python の コア 部分 で は 、 ガベージコレクション の 実装 に 複数 の ビジタ 関数 を 使っ て い ます 。 ユーザ が 独自 に ビジタ 関数 を 書く 必要 が ある と は 想定 さ れ て い ませ ん 。 
tp _ traverse ハンドラ は 以下 の 型 で なけれ ば なり ませ ん : 
コンテナ オブジェクト の ため の トラバーサル 関数 ( traversal function ) です 。 
実装 で は 、 self に 直接 入っ て いる 各 オブジェクト に対して visit 関数 を 呼び出さ ね ば なり ませ ん 。 この とき 、 visit へ の パラメタ は コンテナ に 入っ て いる 各 オブジェクト と 、 この ハンドラ に 渡さ れ た arg の 値 です 。 
visit 関数 は NULL オブジェクト を 引数 に 渡し て 呼び出し て は なり ませ ん 。 
visit が 非 ゼロ の 値 を 返す 場合 、 エラー が 発生 し 、 戻り 値 を そのまま 返す よう に に し なけれ ば なり ませ ん 。 
tp _ traverse ハンドラ の 作成 を 単純 化 する ため 、 Py _ VISIT () マクロ が 提供 さ れ て い ます 。 
この マクロ を 使う に は 、 tp _ traverse の 実装 で 、 引数 を visit および arg という 名前 に し て おか ね ば なり ませ ん : 
引数 o および arg を 使っ て visit コール バック を 呼び出し ます 。 visit が 非 ゼロ の 値 を 返し た 場合 、 その 値 を そのまま 返し ます 。 
この マクロ を 使え ば 、 tp _ traverse ハンドラ は 以下 の よう に なり ます : 
tp _ clear ハンドラ は inquiry 型 に する か 、 オブジェクト が 変更 不能 の 場合 に は NULL に し なけれ ば なり ませ ん 。 NULL if the object is immutable . 
循環 参照 を 形成 し て いる と おぼしき 参照 群 を 放棄 し ます 。 
変更 不可能 な オブジェクト は 循環 参照 を 直接 形成 する こと が 決して ない ので 、 この 関数 を 定義 する 必要 は あり ませ ん 。 
この メソッド を 呼び出し た 後 でも オブジェクト は 有効 な まま で なけれ ば なら ない ので 注意 し て ください ( 参照 に対して Py _ DECREF () を 呼ぶ だけ に し ない で ください )。 
ガベージコレクタ は 、 オブジェクト が 循環 参照 を 形成 し て いる こと を 検出 し た 際 に この メソッド を 呼び出し ます 。 
6 . 9 表 の マーク アップ 表 環境 に は 汎用 の 三つ の 形式 が あり 、 できる 限り この 環境 を 使う よう に し て ください 。 
こうした 環境 は 標準 の LaTeX 表 環境 を 置き換える ため の もの で は なく 、 Python ドキュメント を 作成 する ため の 処理 ツール で 処理 する 際 に 便利 な よう に 作ら れ て い ます 。 
とりわけ 、 この 表 環境 で 生成 し た HTML は 見栄え が よく なり ます ! また 、 いつか ドキュメント を XML 形式 に 変換 する 時 に も ( 9 節 、 `` 将来 の 方向 性 '' を 参照 し て ください )、 利点 が ある でしょ う 。 
各 環境 は tablecols という 形式 の 名前 が つい て い ます 。 
cols に は 、 表 の カラム 数 を 小文字 の ローマ 数字 で 指定 し ます 。 
各々 の 環境 について 、 追加 の マクロ linecols 
が 定義 さ れ て い ます 。 この 場合 cols は 表 環境 の cols に 対応 し ます 。 
サポート さ れ て いる cols に は ii 、 iii 、 iv 、 v が あり ます 。 
どの 環境 も 全て tabular 環境 の 上 に 構築 さ れ て い ます 。 
longtable 環境 に 基づく 変化 形 も 提供 さ れ て い ます 。 標準 Python ドキュメント 内 の 全て の 表 が カラム 間 に 垂直 線 を 使っ て おり 、 各 表 の マーク アップ で この 垂直 線 を 指定 し なけれ ば なら ない ので 注意 し て ください 。 
LaTeX の カラム 情報 指定 子 ( column specifier ) colspec を 使っ て 、 2 カラム の 表 を 作成 し ます 。 
カラム 情報 指定 子 に は 表 によって 適切 な カラム 分割 垂直 線 が 入る よう に 指定 を 行わ ね ば なり ませ ん が 、 表 の 外側 の 垂直 線 は 指定 し て は なり ませ ん ( この 部分 の 指定 は スタイル シート の 問題 と 考え られ て いる から です )。 
con 1 font パラメタ は 、 テーブル の 最初 の カラム の 表示 スタイル を どう する か を 指定 し ます : その 結果 として 、 最初 の カラム は col 1 font { column 1 } の よう に なり ます 。 
最初 の カラム を 特別 扱い し ない ため に 、 col 1 font を " textrm " に し て も かまい ませ ん 。 
カラム の ヘッダ は heading 1 および heading 2 から とり ます 。 
tableii に 似 て い ます が 、 ページ 境界 を 割っ て 配置 できる よう な 表 を 生成 し ます 。 
パラメタ は tableii と 同じ です 。 
tableii や longtableii 環境 内 の 単一 の 行 を 生成 し ます 。 第 一 カラム の テキスト は tableii 環境 を 始め た とき に 指定 し た col 1 font を 適用 し て 生成 し ます 。 
tableii 環境 に 似 て い ます が 、 第 三 カラム が あり ます 。 第 三 カラム の ヘッダ は heading 3 に 指定 し ます 。 
tableiii に 似 て い ます が 、 ページ 境界 を 割っ て 配置 できる よう な 表 を 生成 し ます 。 
パラメタ は tableiii と 同じ です 。 
lineii マクロ に 似 て い ます が 、 第 三 カラム が あり ます 。 
第 三 カラム の テキスト は column 3 に 指定 し ます 。 
tableiii 環境 に 似 て い ます が 、 第 四 カラム が あり ます 。 第 四 カラム の ヘッダ は heading 4 に 指定 し ます 。 
tableiv に 似 て い ます が 、 ページ 境界 を 割っ て 配置 できる よう な 表 を 生成 し ます 。 
パラメタ は tableiv と 同じ です 。 
lineiv マクロ に 似 て い ます が 、 第 四 カラム が あり ます 。 
第 四 カラム の テキスト は column 4 に 指定 し ます 。 
tableiii 環境 に 似 て い ます が 、 第 五 カラム が あり ます 。 第 五 カラム の ヘッダ は heading 5 に 指定 し ます 。 
tablev に 似 て い ます が 、 ページ 境界 を 割っ て 配置 できる よう な 表 を 生成 し ます 。 
パラメタ は tablev と 同じ です 。 
lineiv マクロ に 似 て い ます が 、 第 五 カラム が あり ます 。 
第 五 カラム の テキスト は column 5 に 指定 し ます 。 
表 に 似 た もう 一つ 環境 として synopsistable が あり ます 。 
この 環境 が 生成 する 表 は 二つ の カラム から なり 、 各行 は 別 の マクロ 定義 modulesynopsis 中 に 定義 さ れ て い ます 。 
通常 ドキュメント の 作者 が この 環境 を 使う こと は あり ませ ん が 、 localmoduletable マクロ を 使う と この 表 を 作成 し ます 。 ここ で warning モジュール の ドキュメント に ある 小さな 表 の 例 を 示し ます ; 表 の マーク アップ 自体 が かなり 識別 し やすく 作ら れ て いる ので 、 表 セル 内 の マーク アップ は 最小限 に し て い ます 。 
これ は 以下 の よう な 表 に なり ます 。 
クラス 
全て の 警告 カテゴリ の 基底 クラス です 。 
Exception の サブ クラス です 。 
warn () の 標準 の カテゴリ です 。 
機能 の 撤廃 を 警告 する カテゴリ の 基底 クラス です 。 
文法 機能 の あいまい さ を 警告 する カテゴリ の 基底 クラス です 。 
実行 時 システム 機能 の あいまい さ を 警告 する カテゴリ の 基底 クラス です 。 
最初 の カラム を 別 の マーク アップ に し た 表 を 作成 する に は 、 textrm を col 1 font の 値 に 指定 し て 、 各 エントリ を 個別 に マーク し て ください 。 表 を 垂直 方向 に 分割 する ため に 水平 線 を 追加 する に は 、 標準 の マクロ hline を 分割 し たい 行 の 間 に 入れ ます : 
\ begin { tableii }{ l | l }{ constant }{ 言語 }{ 対象 読者 }\ lineii { APL }{ マゾヒスト }\ lineii { BASIC }{ PC ハードウェア 使い の プログラム 初心者 }\ lineii { C }{\ UNIX {} \\ Linux カーネル 開発 者 }\ hline \ lineii { Python }{ 誰 でも !}\ end { tableii } 
全て の 出力 形式 で この 場所 に 水平 線 を 引ける と は 限ら ない ので 注意 し て ください 。 
今 読者 が 読ん で いる ドキュメント の 出力 形式 で は 、 上 の 表 は 以下 の よう に なり ます : 
誰 でも ! 
非 圧縮 tar アーカイブ を ファイル 名 の リスト から 作成 する 方法 ： 
gzip 圧縮 tar アーカイブ を 作成 し て メンバー 情報 の いくつ か を 表示 する 方法 ： 
見せかけ の 情報 を 持つ tar アーカイブ を 作成 する 方法 ： 
非 圧縮 tar ストリーム を sys . stdin から 抽出 する 唯一 の 方法 ： 
TarFile オブジェクト は 、 tar アーカイブ へ の インターフェース を 提供 し ます 。 
tar アーカイブ は 一連 の ブロック です 。 
アーカイブ メンバー ( 保存 さ れ た ファイル ) は 、 ヘッダーブロック と それ に 続く データブロック から 構成 さ れ て い ます 。 
ある tar アーカイブ に ファイル を 何 回 も 保存 する こと が でき ます 。 
各 アーカイブ メンバー は 、 TarInfo オブジェクト によって 表わさ れ ます 、 詳細 について は TarInfo オブジェクト ( セクション 7 . 19 . 2 ) を 見 て 下さい 。 
クラス TarFile 
( 非 圧縮 の ) tar アーカイブ name を オープン し ます 。 
fileobj は 、 TarFile を クローズ する 時 は 、 クローズ さ れ ませ ん 。 
代替 コンス トラクタ です 。 
モジュール レベル で の open () 関数 は 、 実際 は この クラス メソッド へ の ショートカット です 。 
詳細 について は セクション 7 . 19 を 見 て 下さい 。 
メンバー name に対する TarInfo オブジェクト を 返し ます 。 
もし name が アーカイブ に 見つから なけれ ば 、 KeyError が 発生 し ます 。 
注意 : も し メンバー が アーカイブ に 1 つ 以上 あれ ば 、 その 最後 に 出現 する もの が 、 最新 の バージョン で ある と みなさ れ ます 。 
TarInfo オブジェクト の リスト として アーカイブ の メンバー を 返し ます 。 
この リスト は アーカイブ 内 の メンバー と 同じ 順番 です 。 
メンバー を その 名前 の リスト として 返し ます 。 
これ は getmembers () で 返さ れる リスト と 同じ 順番 です 。 
コンテンツ の 表 を sys . stdout に 印刷 し ます 。 
もし verbose が False で あれ ば 、 メンバー 名 のみ 印刷 し ます 。 
もし それ が True で あれ ば 、 " ls - l " に 似 た 出力 を 生成 し ます ． 
TarFile が 読み込み 用 に オープン さ れ て いる 時 、 アーカイブ の 次 の メンバー を TarInfo オブジェクト として 返し ます 。 
もし それ 以上 利用 可能 な もの が なけれ ば 、 None を 返し ます 。 
メンバー を アーカイブ から 現在 の 作業 ディレクトリ に 、 その フル 名 を 使っ て 、 抽出 し ます 。 
注意 : ファイル 風 の オブジェクト は 読み出し 専用 で 以下 の メソッド を 提供 し ます ： read (), readline (), readlines (), seek (), tell (). 
ファイル name を アーカイブ に 追加 し ます 。 
name は 、 任意 の ファイル タイプ ( ディレクトリ 、 fifo 、 シンボリックリンク 等 ) です 。 
もし arcname が 与え られ て いれ ば 、 それ は アーカイブ 内 の ファイル の 代替 名 を 指定 し ます 。 デフォールト で は ディレクトリ は 再帰 的 に 追加 さ れ ます 。 
これ は 、 recursive を False に 設定 する こと で 避ける こと が でき ます 。 デフォルト は True です ． 
TarInfo オブジェクト tarinfo を アーカイブ に 追加 し ます 。 もし fileobj が 与え られ て いれ ば 、 
tarinfo . size バイト が それ から 読ま れ 、 アーカイブ に 追加 さ れ ます 。 
gettarinfo () を 使っ て TarInfo オブジェクト を 作成 する こと が でき ます 。 
注意 : Windows プラットフォーム で は 、 fileobj は 、 ファイルサイズ に関する 問題 を 避ける ため に 、 常に 、 モード ' rb ' で オープン さ れる べき です 。 
TarInfo オブジェクト を ファイル name あるいは ( その ファイル 記述 子 に os . fstat () を 使っ て ) ファイル オブジェクト fileobj の どちら か 用 に 作成 し ます 。 
TarInfo の 属性 の いくつ か は 、 addfile () を 使っ て 追加 する 前 に 修正 する こと が でき ます 。 
arcname が もし 与え られ て いれ ば 、 アーカイブ 内 の ファイル の 代替 名 を 指定 し ます 。 
TarFile を クローズ し ます 。 
書き出し モード で は 、 完了 ゼロ ブロック が 2 つ 、 アーカイブ に 追加 さ れ ます 。 
この 値 が 真 なら 、 POSIX 1003 . 1 - 1990 準拠 の アーカイブ を 作成 し ます 。 
この 値 が 偽 の 場合 ， シンボリックリンク と ハード リンク を アーカイブ に 追加 し ます 。 
真 の 場合 ， ターゲット ファイル の 内容 を アーカイブ に 追加 し ます 。 
この 値 は リンク を サポート し ない システム に は 影響 し ませ ん 。 
この 値 が 偽 の 場合 ， 空 の ブロック を アーカイブ の 終わり として 処理 し ます 。 
真 の 場合 ， 空 ( で 無効 な ) ブロック を 飛ばし て 、 できるだけ 多く の メンバ を 取得 しよ う と し ます 。 
これ は アーカイブ を 連結 し て いる 場合 や アーカイブ が 損傷 し て いる 場合 に 役に立ち ます 。 
0 ( デバッグ メッセージ なし ) から 3 ( すべて の デバッグ メッセージ あり ) まで の 値 に 設定 し ます ． 
メッセージ は sys . stdout に 出力 さ れ ます ． 
この 値 が 0 ( デフォルト の 値 です ) の 場合 ， extract () 実行 時 の 全て の エラー を 無視 し ます ． 
ただし ， デバッグ が 有効 に なっ て いる 場合 に は ， デバッグ 出力 に エラーメッセージ として 出力 し ます ． 
値 を 1 に し た 場合 ， すべて の 致命 的 な エラー に対して OSError または IOError 例外 を 送出 し ます ． 
値 を 2 に し た 場合 、 致命 的 で ない エラー も また ， 全て TarError 例外 として 送出 し ます ． 
TarInfo オブジェクト は TarFile の 一つ の メンバー を 表し ます 。 
ファイル に 必要 な ( ファイル タイプ 、 ファイルサイズ 、 時刻 、 許可 、 所有 者 等 の よう な ) すべて の 属性 を 保存 する 他 に 、 その タイプ を 決定 する の に 役に立つ いくつ か の メソッド を 提供 し ます 。 
これ に は ファイル の データ そのもの は 含ま れ ませ ん 。 
TarInfo オブジェクト は TarFile の メソッド getmember ()、 getmembers () および gettarinfo () によって 返さ れ ます 。 
クラス TarInfo 
TarInfo オブジェクト を 作成 し ます 。 
TarInfo オブジェクト を 文字 列 バッファ から 作成 し て 返し ます 。 
TarInfo オブジェクト から 文字 列 バッファ を 作成 し ます 。 
TarInfo オブジェクト に は 以下 の public な データ 属性 が あり ます ： 
アーカイブ メンバー の 名前 。 
バイト 単位 で の サイズ 。 
最終 更新 時刻 。 
許可 ビット 。 
ファイル タイプ です ． type は 普通 、 以下 の 定数 : REGTYPE , AREGTYPE , LNKTYPE , SYMTYPE , DIRTYPE , FIFOTYPE , CONTTYPE , CHRTYPE , BLKTYPE , GNUTYPE _ SPARSE の いずれ か です ． TarInfo オブジェクト の タイプ を もっと 便利 に 決定 する に は 、 下記 の is _*() メソッド を 使っ て 下さい 。 
ターゲット ファイル 名 の 名前 で 、 これ は タイプ LNKTYPE と SYMTYPE の TarInfo オブジェクト に だけ 存在 し ます 。 
ファイル メンバ を 保存 し た 元 の ユーザ の ユーザ ID です ． 
ファイル メンバ を 保存 し た 元 の ユーザ の グループ ID です ． 
ファイル メンバ を 保存 し た 元 の ユーザ の ユーザ 名 です ． 
ファイル メンバ を 保存 し た 元 の ユーザ の グループ 名 です ． 
TarInfo オブジェクト は 便利 な 照会 用 の メソッド も いくつ か 提供 し て い ます : 
Tarinfo オブジェクト が 普通 の ファイル の 場合 に 、 True を 返し ます 。 
isfile () と 同じ です 。 
ディレクトリ の 場合 に True を 返し ます 。 
シンボリックリンク の 場合 に True を 返し ます 。 
ハード リンク の 場合 に True を 返し ます 。 
キャラクタ デバイス の 場合 に True を 返し ます 。 
ブロック デバイス の 場合 に True を 返し ます 。 
FIFO の 場合 に True を 返し ます 。 
キャラクタ デバイス 、 ブロック デバイス あるいは FIFO の いずれ か の 場合 に True を 返し ます 。 
典型 的 な 使い方 を 表す 単純 な 例 を 示し ます : 
Telnet インスタンス は 以下 の メソッド を 持っ て い ます : 
expected で 指定 さ れ た 文字 列 を 読み込む か 、 timeout で 指定 さ れ た 秒 数 が 経過 する まで 読み込み ます 。 与え られ た 文字 列 に 一致 する 部分 が 見つから なかっ た 場合 、 読み込む こと が でき た もの 全て を 返し ます 。 
これ は 空 の 文字 列 に なる 可能 性 が あり ます 。 接続 が 閉じ られ 、 転送 処理 済み の データ が 得 られ ない 場合 に は EOFError が 送出 さ れ ます 。 
EOF に 到達 する まで の 全て の データ を 読み込み ます ; 接続 が 閉じ られる まで ブロック し ます 。 
EOF に 到達 し ない 限り 、 少なくとも 1 バイト の 転送 処理 済み データ を 読み込み ます 。 EOF に 到達 し た 場合 は '' を 返し ます 。 
すぐ に 読み 出せる データ が 存在 し ない 場合 に は ブロック し ます 。 
I / O による ブロック を 起こさ ず に 読み 出せる 全て の データ を 読み込み ます ( eager モード )。 接続 が 閉じ られ て おり 、 転送 処理 済み の データ として 読み 出せる もの が ない 場合 に は EOFError が 送出 さ れ ます 。 
それ 以外 の 場合 で 、 単に 読み 出せる データ が ない 場合 に は '' を 返し ます 。 IAC シーケンス 操作 中 で ない かぎり ブロック し ませ ん 。 
現在 すぐ に 読み 出せる データ を 読み出し ます 。 
接続 が 閉じ られ て おり 、 転送 処理 済み の データ として 読み 出せる もの が ない 場合 に は EOFError が 送出 さ れ ます 。 
IAC シーケンス 操作 中 で ない かぎり ブロック し ませ ん 。 
この メソッド は 決して ブロック し ませ ん 。 
SB / SE ペア ( サブ オプション 開始 ／ 終了 ) の 間 に 収集 さ れ た データ を 返し ます 。 SE コマンド によって 起動 さ れ た コール バック 関数 は これら の データ に アクセス し なけれ ば なり ませ ん 。 
この メソッド は けっして ブロック し ませ ん 。 
サーバ ホスト に 接続 し ます 。 
デバッグ レベル が 0 の とき 、 デバッグ 用 の メッセージ を 出力 し ます 。 
追加 の 引数 が 存在 する 場合 、 標準 の 文字 列 書式 化 演算 子 % を 使っ て msg 中 の 書式 指定 子 に 代入 さ れ ます 。 
デバッグ レベル を 設定 し ます 。 
debuglevel が 大きく なる ほど 、 ( sys . stdout に ) デバッグ メッセージ が たくさん 出力 さ れ ます 。 
接続 を 閉じ ます 。 
内部 的 に 使わ れ て いる ソケット オブジェクト です 。 
内部 的 に 使わ れ て いる ソケット オブジェクト の ファイル 記述 子 です 。 
接続 が 閉じ られ た 場合 、 socket . error が 送出 さ れる かも しれ ませ ん 。 
非常 に 低 機能 の telnet クライアント を エミュレート する 対話 関数 です 。 
interact () の マルチスレッド 版 です 。 
コンパイル さ れ た もの ( re . RegexObject の インスタンス ) で も 、 コンパイル さ れ て い ない もの ( 文字 列 ) でも かまい ませ ん 。 
telnet オプション が 入力 フロー から 読み込ま れる たび に 、 callback が ( 設定 さ れ て いれ ば ) 以下 の 引数 形式 : callback ( telnet socket , command ( DO / DONT / WILL / WONT ), option ) で 呼び出さ れ ます 。 
その後 telnet オプション に対して は telnetlib は 何 も 行い ませ ん 。 
テンプレート オブジェクト は 以下 の メソッド を 持っ て い ます : 
パイプライン テンプレート を 初期 状態 に 戻し ます 。 
元 の パイプライン テンプレート と 等価 の 新しい オブジェクト を 返し ます 。 
flag が 真 の 場合 、 デバッグ を オン に し ます 。 
そう で ない 場合 、 デバッグ を オフ に し ます 。 
デバッグ が オン の 時 に は 、 実行 さ れる コマンド が 印字 さ れ 、 より 多く の メッセージ を 出力 する よう に する ため に 、 シェル に set - x 命令 を 与え ます 。 
新た な アクション を パイプライン の 末尾 に 追加 し ます 。 
cmd 変数 は 有効 な bourne shell 命令 で なけれ ば なり ませ ん 。 
パイプライン の 先頭 に 新しい アクション を 追加 し ます 。 
引数 の 説明 について は append () を 参照 し て ください 。 
ファイル 類似 の オブジェクト を 返し ます 。 この オブジェクト は file を 開い て い ます が 、 パイプライン を通して 読み書き する よう に なっ て い ます 。 
mode に は ' r ' または ' w ' の いずれ か 一つ しか 与える こと が でき ない ので 注意 し て ください 。 
パイプ を通して infile を outfile に コピー し ます 。 
TestCase クラス の インスタンス は 個別 の テスト を あらわす オブジェクト です が 、 TestCase の 具象 サブ クラス に は 複数 の テスト を 定義 する 事 が でき ます -- 具象 サブ クラス は 、 特定 の fixture ( テスト 設備 ) を 示し て いる 、 と 考え て ください 。 
fixture は 、 それぞれ の テストケース ごと に 作成 ・ 解放 さ れ ます 。 
TestCase インスタンス に は 、 次 の 3 種類 の メソッド が あり ます : テスト を 実行 する ため の メソッド ・ 条件 の チェック や テスト 失敗 の レポート の ため の メソッド ・ テスト の 情報 収集 に 使用 する 問い合わせ メソッド 。 テスト を 実行 する ため の メソッド を 以下 に 示し ます : 
テスト を 実行 する 直前 に 、 fixture を 作成 する 為 に 呼び出さ れ ます 。 
この メソッド を 実行 中 に 例外 が 発生 し た 場合 、 テスト の 失敗 で は なく エラー と さ れ ます 。 デフォルト の 実装 で は 何 も 行い ませ ん 。 
テスト を 実行 し 、 結果 を 記録 し た 直後 に 呼び出さ れ ます 。 
テスト 実行 中 に 例外 が 発生 し て も 呼び出さ れ ます ので 、 内部 状態 に 注意 し て 処理 を 行っ て ください 。 
メソッド を 実行 中 に 例外 が 発生 し た 場合 、 テスト の 失敗 で は なく エラー と みなさ れ ます 。 この メソッド は 、 setUp () が 正常 終了 し た 場合 に は テスト メソッド の 実行 結果 に 関わり 無く 呼び出さ れ ます 。 
デフォルト の 実装 で は 何 も 行い ませ ん 。 
テスト を 実行 し 、 テスト 結果 を result に 指定 さ れ た テスト 結果 オブジェクト に 収集 し ます 。 
result が None か 省略 さ れ た 場合 、 一時 的 な 結果 オブジェクト を 生成 し て 使用 し ます が 呼び出し 元 に は 渡さ れ ませ ん 。 
この メソッド は 、 TestCase インスタンス の 呼び出し と 等価 です 。 
テスト 結果 を 収集 せ ず に テスト を 実行 し ます 。 
例外 が 呼び出し 元 に 通知 さ れる ため 、 テスト を デバッガ で 実行 する こと が でき ます 。 
テスト 結果 の チェック と レポート に は 、 以下 の メソッド を 使用 し て ください 。 
expr が 偽 の 場合 、 テスト 失敗 を 通知 し ます 。 msg に は エラー の 説明 を 指定 する か 、 または None を 指定 し て ください 。 
first と second 
expr が 等しく ない 場合 、 テスト 失敗 を 通知 し ます 。 エラー 内容 は msg に 指定 さ れ た 値 か 、 または None と なり ます 。 
failUnlessEqual () で は msg の デフォルト 値 は first と second を 含ん だ 文字 列 と なり ます ので 、 failUnless () の 第 一 引数 に 比較 の 結果 を 指定 する より も 便利 です 。 
first と second 
expr が 等しい 場合 、 テスト 失敗 を 通知 し ます 。 エラー 内容 は msg に 指定 さ れ た 値 か 、 または None と なり ます 。 
failUnlessEqual () で は msg の デフォルト 値 は first と second を 含ん だ 文字 列 と なり ます ので 、 failUnless () の 第 一 引数 に 比較 の 結果 を 指定 する より も 便利 です 。 
first と second を places で 与え た 小数 位 で 値 を 丸め て 差分 を 計算 し 、 ゼロ と 比較 する こと で 、 近似 的 に 等価 で ある か どう か を テスト し ます 。 
指定 小 数 位 の 比較 という もの は 指定 有効 桁 数 の 比較 で は ない ので 注意 し て ください 。 値 の 比較 結果 が 等しく なかっ た 場合 、 テスト は 失敗 し 、 msg で 指定 し た 説明 か 、 None を 返し ます 。 
first と second を places で 与え た 小数 位 で 値 を 丸め て 差分 を 計算 し 、 ゼロ と 比較 する こと で 、 近似 的 に 等価 で ない か どう か を テスト し ます 。 
指定 小 数 位 の 比較 という もの は 指定 有効 桁 数 の 比較 で は ない ので 注意 し て ください 。 値 の 比較 結果 が 等しかっ た 場合 、 テスト は 失敗 し 、 msg で 与え た 説明 か 、 None を 返し ます 。 
callable を 呼び出し 、 発生 し た 例外 を テスト し ます 。 assertRaises () に は 、 任意 の 位置 パラメータ と キーワード パラメータ を 指定 する 事 が でき ます 。 
exception で 指定 し た 例外 が 発生 し た 場合 は テスト 成功 と し 、 それ 以外 の 例外 が 発生 する か 例外 が 発生 し ない 場合 に テスト 失敗 と なり ます 。 
複数 の 例外 を 指定 する 場合 に は 、 例外 クラス の タプル を exception に 指定 し ます 。 
failIf () は failUnless () の 逆 で 、 expr が 真 の 場合 、 テスト 失敗 を 通知 し ます 。 
エラー 内容 は msg に 指定 さ れ た 値 か 、 または None と なり ます 。 
無条件 に テスト 失敗 を 通知 し ます 。 エラー 内容 は msg に 指定 さ れ た 値 か 、 または None と なり ます 。 
test () メソッド が 送出 する 例外 を 指定 する クラス 属性 。 
テストフレームワーク で 追加 情報 を 持つ 等 の 特殊 な 例外 を 使用 する 場合 、 この 例外 の サブ クラス として 作成 し ます 。 
この 属性 の 初期 値 は AssertionError です 。 
テストフレームワーク は 、 テスト 情報 を 収集 する ため に 以下 の メソッド を 使用 し ます : 
テスト オブジェクト に 含ま れる テスト の 数 を 返し ます 。 
TestCase インスタンス は 常に 1 を 返し ます 。 TestSuite クラス で は 1 以上 を 返し ます 。 
オブジェクト が 実行 する テスト の 、 デフォルト の テスト 結果 オブジェクト の 型 を 返し ます 。 
テストケース を 特定 する 文字 列 を 返し ます 。 
通常 、 id は モジュール 名 ・ クラス 名 を 含む 、 テスト メソッド の フルネーム を 指定 し ます 。 
テスト の 説明 を 一行 分 、 または 説明 が ない 場合 に は None を 返し ます 。 
デフォルト で は 、 テスト メソッド の docstring の 先頭 の 一行 、 または None を 返し ます 。 
TestLoader クラス は 、 クラス や モジュール から テストスイート を 作成 する ため に 使用 し ます 。 
通常 は この クラス の インスタンス を 作成 する 必要 は なく 、 
モジュール の モジュール 属性 defaultTestLoader を 共用 インスタンス として 使用 する こと が でき ます 。 
TestLoader オブジェクト に は 以下 の メソッド が あり ます : 
TestCase の 派生 クラス testCaseClass に 含ま れる 全 テストケース の スイート を 返し ます 。 
指定 し た モジュール に 含ま れる 全 テストケース の スイート を 返し ます 。 この メソッド は module 内 の TestCase 派生 クラス を 検索 し 、 見つかっ た クラス の テスト メソッド ごと に クラス の インスタンス を 作成 し ます 。 
警告 : Testcase クラス を 基底 クラス として クラス 階層 を 構築 する と fixture や 補助 的 な 関数 を うまく 共用 する こと が でき ます が 、 基底 クラス に 直接 インスタンス 化 でき ない テスト メソッド が ある と 、 この loadTestsFromModule を 使う こと が でき ませ ん 。 
この 場合 でも 、 fixture が 全て 別々 で 定義 が サブ クラス に ある 場合 は 使用 する こと が でき ます 。 
文字 列 で 指定 さ れる 全 テストケース を 含む スイート を 返し ます 。 
name に は `` ドット 修飾 名 '' で モジュール か テストケース クラス 、 または TestCase か TestSuite の インスタンス を 返す 呼び出し 可能 オブジェクト を 指定 し ます 。 
例えば SampleTests モジュール に TestCase から 派生 し た SampleTestCase クラス が あり 、 SampleTestCase に は テスト メソッド test _ one () ・ test _ two () ・ test _ three () が ある と し ます 。 
この 場合 、 name に ' SampleTests . SampleTestCase ' と 指定 する と 、 SampleTestCase の 三つ の テスト メソッド を 実行 する テストスイート が 作成 さ れ ます 。 
loadTestsFromName () と 同じ です が 、 名前 を 一つ だけ 指定 する の で は なく 、 複数 の 名前 の シーケンス を 指定 する 事 が でき ます 。 
戻り 値 は names 中 の 名前 で 指定 さ れる テスト 全て を 含む テストスイート です 。 
testCaseClass 中 の 全て の メソッド 名 を 含む ソート 済み シーケンス を 返し ます 。 
以下 の 属性 は 、 サブ クラス 化 または インスタンス の 属性 値 を 変更 し て TestLoader を カスタマイズ する 場合 に 使用 し ます 。 
テスト メソッド の 名前 と 判断 さ れる メソッド 名 の 接頭 語 を 示す 文字 列 。 
デフォルト 値 は ' test ' です 。 
getTestCaseNames () で メソッド 名 を ソート する 際 に 使用 する 比較 関数 。 
デフォルト 値 は 組み込み 関数 cmp () です 。 None を 指定 する と ソート を 行い ませ ん 。 
テスト の リスト から テストスイート を 構築 する 呼び出し 可能 オブジェクト 。 メソッド を 持つ 必要 は あり ませ ん 。 
デフォルト 値 は TestSuite です 。 
TestResult は 、 複数 の テスト 結果 を 記録 し ます 。 
TestCase クラス と TestSuite クラス の テスト 結果 を 正しく 記録 し ます ので 、 テスト 開発 者 が 独自 に テスト 結果 を 管理 する 処理 を 開発 する 必要 は あり ませ ん 。 
を 利用 し た テストフレームワーク で は 、 TestRunner . run () が 返す TestResult インスタンス を 参照 し 、 テスト 結果 を レポート し ます 。 TestResult インスタンス は 、 テスト の 実行 件数 と 、 テスト 中 に 発生 し た 失敗 ・ エラー の 情報 を ( testcase , traceback ) の タプル で 保持 し ます 。 
traceback は 例外 の トレース バック 情報 を フォーマット し た 文字 列 です 。 
以下 の 属性 は 、 テスト の 実行 結果 を 検査 する 際 に 使用 する こと が でき ます : 
開始 し た テスト の 数 。 
これ まで に 実行 し た テスト が 全て 成功 し て いれ ば True を 、 それ 以外 なら False を 返す 。 
以下 の メソッド は 内部 データ 管理 用 の メソッド です が 、 対話 的 に テスト 結果 を レポート する テスト ツール を 開発 する 場合 など に は サブ クラス で 拡張 する こと が でき ます 。 
test を 実行 する 直前 に 呼び出さ れ ます 。 
test の 実行 直後 に 、 テスト 結果 に 関わら ず 呼び出さ れ ます 。 
テスト 実行 中 に 、 テスト の 失敗 以外 の 例外 が 発生 し た 場合 に 呼び出さ れ ます 。 err は sys . exc _ info () が 返す タプル ( type , value , traceback ) です 。 
テスト が 失敗 し た 場合 に 呼び出さ れ ます 。 err は sys . exc _ info () が 返す タプル ( type , value , traceback ) です 。 
テスト が 失敗 し なかっ た 場合 に 呼び出さ れ ます 。 test に は 、 テストケース オブジェクト が 指定 さ れ ます 。 
TestResult オブジェクト に は 、 さらに もう 一つ の メソッド が あり ます : 
テスト 中断 の シグナル を 送り ます 。 
この メソッド が 呼び出さ れる と 、 テスト ランナー は 以降 の テスト 実行 を 中止 し 、 呼び出し 元 に 復帰 し ます 。 
TextTestRunner で は キーボード から の 割り込み で テスト を 中断 する ため に この メソッド を 使用 し て おり 、 独自 の ランナー を 実装 する 場合 に も 同じ よう に 使用 する こと が でき ます 。 
TestSuite オブジェクト は TestCase と よく 似 た 動作 を し ます が 、 実際 の テスト は 実装 せ ず 、 一 まとめ に に 実行 する テスト の グループ を まとめる ため に 使用 し ます 。 
TestSuite に は 以下 の メソッド が 追加 さ れ て い ます : 
TestCase 又は TestSuite の インスタンス を スイート に 追加 し ます 。 
シーケンス tests に 含ま れる 全て の TestCase 又は TestSuite の インスタンス を スイート に 追加 し ます 。 
run () メソッド は TestCase の run () メソッド と 若干 異なり ます : 
スイート 内 の テスト を 実行 し 、 結果 を result で 指定 し た 結果 オブジェクト に 収集 し ます 。 
TestCase . run () と 異なり 、 TestSuite . run () で は 必ず 結果 オブジェクト を 指定 する 必要 が あり ます 。 
通常 、 TestSuite の run () メソッド は TestRunner が 起動 する ため 、 ユーザ が 直接 実行 する 必要 は あり ませ ん 。 
数少ない 状況 において 、 一見 無害 に 見える 借用 参照 の 利用 が 問題 を ひきおこす こと が あり ます 。 
この 問題 は すべて 、 インタプリタ が 非 明示 的 に 呼び出さ れ 、 インタプリタ が 参照 の 所有 者 に 参照 を 放棄 さ せ て しまう 状況 と 関係 し て い ます 。 知っ て おく べき ケース の うち 最初 の 、 そして 最も 重要 な もの は 、 リスト 要素 に対する 参照 を 借り て いる 際 に 起きる 、 関係 ない オブジェクト に対する Py _ DECREF () の 使用 です 。 
例えば : 
上 の 関数 は まず 、 list [ 0 ] へ の 参照 を 借用 し 、 次に list [ 1 ] を 値 0 で 置き換え 、 最後 に さきほど 借用 し た 参照 を 出力 し て い ます 。 
何 も 問題 ない よう に 見え ます ね ? で も そう で は ない の です ! 
PyList _ SetItem () の 処理 の 流れ を 追跡 し て み ましょ う 。 
リスト は 全て の 要素 に対して 参照 を 所有 し て いる ので 、 要素 1 を 置き換える と 、 以前 の 要素 1 を 放棄 し ます 。 
ここ で 、 以前 の 要素 1 が ユーザ 定義 クラス の インスタンス で あり 、 さらに この クラス が __ del __() メソッド を 定義 し て いる と 仮定 し ましょ う 。 
この クラス インスタンス の 参照 カウント が 1 だっ た 場合 、 リスト が 参照 を 放棄 する と 、 インスタンス の __ del __() メソッド が 呼び出さ れ ます 。 クラス は Python で 書か れ て いる ので 、 __ del __() は 任意 の Python コード を 実行 でき ます 。 
この __ del __() が bug () における item に 何 か 不正 な こと を し て いる の でしょ う か ? その 通り ! buf () に 渡し た リスト が __ del __() メソッド から 操作 できる と する と 、 " del list [ 0 ]" の 効果 を 持つ よう な 文 を 実行 でき て しまい ます 。 
正しく 動作 する バージョン は 以下 の よう に なり ます : 
これ は 実際 に あっ た 話 です 。 
以前 の バージョン の Python に は 、 この バグ の 一種 が 潜ん で い て 、 __ del __() メソッド が どうして うまく 動か ない の か を 調べる ため に C デバッガ で 相当 時間 を 費やし た 人 が い まし た ... 二つ 目 は 、 借用 参照 が スレッド に 関係 し て いる ケース です 。 
通常 は 、 Python インタプリタ における 複数 の スレッド は 、 グローバル インタプリタ ロック が オブジェクト 空間 全体 を 保護 し て いる ため 、 互いに 邪魔 し 合う こと は あり ませ ん 。 
と は いえ 、 ロック は Py _ BEGIN _ ALLOW _ THREADS マクロ で 一時 的 に 解除 し たり 、 Py _ END _ ALLOW _ THREADS で 再 獲得 し たり でき ます 。 
これら の マクロ は ブロック の 起こる I / O 呼び出し の 周囲 に よく 置か れ 、 I / O が 完了 する まで の 間 に 他 の スレッド が プロセッサ を 利用 できる よう に し ます 。 
明らか に 、 以下 の 関数 は 上 の 例 と 似 た 問題 を はらん で い ます : 
voidbug ( PyObject * list ){ PyObject * item = PyList _ GetItem ( list , 0 ); Py _ BEGIN _ ALLOW _ THREADS ... ブロック が 起こる 何らかの I / O 呼び出し ... Py _ END _ ALLOW _ THREADSPyObject _ Print ( item , stdout , 0 ); /* BUG ! */} 
この クラス は 個別 の スレッド 中 で 実行 さ れる 活動 ( activity ) を 表現 し ます 。 
活動 を 決める 方法 は は 2 つ あり 、 一つ は 呼出し 可能 オブジェクト を コンス トラクタ へ 渡す 方法 、 もう 一つ は サブ クラス で run () メソッド を オーバライド する 方法 です 。 
( コンス トラクタ を 除く ) その他 の メソッド は 一切 サブ クラス で オーバライド し て は なり ませ ん 。 
言い換える なら ば 、 この クラス の __ init __() と run () メソッド だけ を オーバライド し て ください と いう こと です 。 ひとたび スレッドオブジェクト を 生成 する と 、 スレッド の start () メソッド を 呼び出し て 活動 を 開始 せ ね ば なり ませ ん 。 
start () メソッド は それぞれ の スレッド の run () メソッド を 起動 し ます 。 スレッド の 活動 が 始まる と 、 スレッド は ' 生存 中 ( alive )' で 、 ' 活動 中 ( active )' と みなさ れ ます ( これら 二つ の 概念 は ほとんど 同じ です が 、 全く 同じ という わけ で は あり ませ ん ; これら 二つ は 意図 的 に 曖昧 に 定義 さ れ て いる の です )。 
スレッド の 活動 は 、 通常 終了 、 あるいは 処理 さ れ ない 例外 が 送出 さ れ た こと で run () メソッド が 終了 する と 生存 中 で なく なり 、 かつ 活動 中 で なく なり ます 。 
isAlive () メソッド は スレッド が 生存 中 で ある か どう か 調べ ます 。 他 の スレッド は スレッド の join () メソッド を 呼び出せ ます 。 
この メソッド は 、 join () を 呼び出さ れ た スレッド が 終了 する まで 、 メソッド の 呼び出し 手 と なる スレッド を ブロック し ます 。 
この フラグ に は 、 残っ て いる スレッド が デーモンスレッド だけ に なっ た 時 に Python プログラム 全体 を 終了 さ せる という 意味 が あり ます 。 
フラグ の 初期 値 は スレッド を 生成 する 側 の スレッド から 継承 し ます 。 
`` ダミースレッド ( dumm thread )'' オブジェクト を 作成 できる 場合 が あり ます 。 
ダミースレッド は 、 `` 外来 スレッド ( alien thread )'' に 相当 する スレッドオブジェクト です 。 
ダミースレッドオブジェクト に は 限ら れ た 機能 しか なく 、 常に 生存 中 、 活動 中 かつ デーモンスレッド で ある と みなさ れ 、 join () でき ませ ん 。 
また 、 外来 スレッド の 終了 を 検出 する の は 不可能 な ので 、 ダミースレッド は 削除 でき ませ ん 。 
クラス Thread 
コンス トラクタ は 常に キーワード 引数 を 使っ て 呼び出さ ね ば なり ませ ん 。 
各 引数 は 以下 の 通り です : 
group は None に せ ね ば なり ませ ん 。 将来 ThreadGroup クラス が 実装 さ れ た とき の 拡張 用 に 予約 さ れ て いる 引数 です 。 
target は run () メソッド によって 起動 さ れる 呼出し 可能 オブジェクト です 。 
デフォルト で は 何 も 呼び出さ ない こと を 示す None に なっ て い ます 。 
name は スレッド の 名前 です 。 
デフォルト で は 、 N を 小さな 10 進数 として 、 `` Thread - N '' という 形式 の 一意 な 名前 を 生成 し ます 。 
args は target を 呼び出す とき の 引数 タプル です 。 
デフォルト は () です 。 
kwargs は target を 呼び出す とき の キーワード 引数 の 辞書 です 。 
デフォルト は {} です 。 サブ クラス で コンス トラクタ を オーバライド し た 場合 、 必ず スレッド が 何 か を 始める 前 に 基底 クラス の コンス トラクタ ( Thread .__ init __()) を 呼び出し て おか なく て は なり ませ ん 。 
スレッド の 活動 を 開始 し ます 。 この メソッド は 、 スレッドオブジェクト あたり 一 度 しか 呼び出し て は なり ませ ん 。 
start () は 、 オブジェクト の run () メソッド が 個別 の 処理 スレッド 中 で 呼び出さ れる よう に 調整 し ます 。 
スレッド の 活動 を もたらす メソッド です 。 この メソッド は サブ クラス で オーバライド でき ます 。 
標準 の run () メソッド で は 、 オブジェクト の コンス トラクタ の target 引数 に 呼び出し 可能 オブジェクト を 指定 し た 場合 、 args および kwargs の 引数 列 および キーワード 引数 とともに 呼び出し ます 。 
この メソッド は 、 join () を 呼び出さ れ た スレッド が 、 正常 終了 あるいは 処理 さ れ ない 例外 によって 終了 する か 、 オプション の タイム アウト が 発生 する まで 、 メソッド の 呼び出し 手 と なる スレッド を ブロック し ます 。 
スレッド の 名前 を 返し ます 。 
複数 の スレッド に 同じ 名前 を つけ て も かまい ませ ん 。 
名前 の 初期 値 は コンス トラクタ で 設定 さ れ ます 。 
スレッド が 生存 中 か どう か を 返し ます 。 
大雑把 な 言い方 を する と 、 スレッド は start () メソッド を 呼び出し た 瞬間 から run () メソッド が 終了 する まで の 間 生存 し て い ます 。 
スレッド の デーモン フラグ を 返し ます 。 
Python インタプリタ は 完全 に スレッド 安全 ( thread safe ) で は あり ませ ん 。 
と は いえ 、 グローバル 変数 は まだ 一つ だけ 残っ て い ます : それ は 現在 の PyThreadState 
構造 体 を 指す ポインタ です 。 
ほとんど の スレッドパッケージ が `` スレッド ごと の グローバル データ '' を 保存 する 手段 を 持っ て いる 一方 で 、 Python の 内部 的 な プラットフォーム 非 依存 の スレッド 抽象 層 は これ を サポート し て い ませ ん 。 
従って 、 現在 の スレッド 状態 を 明示 的 に 操作 する よう に し なけれ ば なり ませ ん 。 ほとんど の ケース で 、 この よう な 操作 は 十分 簡単 に でき ます 。 
グローバル インタプリタ ロック を 操作 数 ほとんど の コード は 、 以下 の よう な 単純 な 構造 を 持ち ます : 
ローカル 変数 から スレッド 状態 を 回復 する 。 この やり かた は 非常 に 一般 的 な ので 、 作業 を 単純 に する ため に 二つ の マクロ が 用意 さ れ て い ます : 
Py _ BEGIN _ ALLOW _ THREADS ... ブロック が 起きる よう な 何らかの I / O 操作 ... Py _ END _ ALLOW _ THREADS 
マクロ は 新た な ブロック 文 を 開始 し 、 隠し ローカル 変数 を 宣言 し ます ; Py _ END _ ALLOW _ THREADS 
は ブロック 文 を 終了 し ます 。 
これら の 二つ の マクロ を 使う もう ひとつ の 利点 は 、 Python を スレッドサポート なし で コンパイル し た とき 、 マクロ の 内容 、 すなわち スレッド 状態 の 退避 と ロック 操作 が 空 に なる という 点 です 。 スレッドサポート が 有効 に なっ て いる 場合 、 上記 の ブロック は 以下 の よう な コード に 展開 さ れ ます : 
PyThreadState *_ save ;_ save = PyEval _ SaveThread ();... ブロック が 起きる よう な 何らかの I / O 操作 ... PyEval _ RestoreThread (_ save ); 
より 低 水準 の プリミティブ を 使う と 、 以下 の よう に し て ほぼ 同じ 効果 を 得 られ ます : 
PyThreadState *_ save ;_ save = PyThreadState _ Swap ( NULL ); PyEval _ ReleaseLock ();... ブロック が 起きる よう な 何らかの I / O 操作 ... PyEval _ AcquireLock (); PyThreadState _ Swap (_ save ); 
上 の 二つ に は 微妙 な 違い が あり ます ; とりわけ 、 PyEval _ RestoreThread () 
は グローバル 変数 errno の 値 を 保存 し て おい て 元 に 戻す 点 が 異なり ます 。 
という の は 、 ロック 操作 が errno に 何 も し ない という 保証 が ない から です 。 
また 、 スレッドサポート が 無効 化 さ れ て いる 場合 、 PyEval _ SaveThread () 
および PyEval _ RestoreThread () は ロック を 操作 し ませ ん ; この 場合 、 PyEval _ ReleaseLock () 
および PyEval _ AcquireLock () は 利用 でき ませ ん 。 
この 仕様 は 、 スレッドサポート を 無効 化 し て コンパイル さ れ て いる インタプリタ が 、 スレッドサポート が 有効 化 さ れ た 状態 で コンパイル さ れ て いる 動的 ロード 拡張 モジュール を ロード できる よう に する ため の もの です 。 
グローバル インタプリタ ロック は 、 現在 の スレッド 状態 を 指す ポインタ を 保護 する ため に 使わ れ ます 。 
ロック を 解放 し て スレッド 状態 を 退避 する 際 、 ロック を 解放 する 前 に 現在 の スレッド 状態 ポインタ を 取得 し て おか なけれ ば なり ませ ん ( 他 の スレッド が すぐさま ロック を 獲得 し て 、 自ら の スレッド 状態 を グローバル 変数 に 保存 し て しまう かも しれ ない から です )。 逆 に 、 ロック を 獲得 し て スレッド 状態 を 復帰 する 際 に は 、 グローバル 変数 に スレッド 状態 ポインタ を 保存 する 前 に ロック を 獲得 し て おか なけれ ば なり ませ ん 。 
なぜ ここ まで 詳しく 説明 しよ う と する かお わかり でしょ う か ? それ は 、 C で スレッド を 生成 し た 場合 、 その スレッド に は グローバル インタプリタ ロック が なく 、 スレッド 状態 データ 構造 体 も ない から です 。 
この よう な スレッド が Python / C API を 利用 する に は 、 まず スレッド 状態 データ 構造 体 を 生成 し 、 次に ロック を 獲得 し 、 そして スレッド 状態 ポインタ を 保存 する といった よう に 、 自分 自身 を ブートストラップ し て 生成 し なけれ ば なり ませ ん 。 
スレッド が 作業 を 終え たら 、 スレッド 状態 ポインタ を リセット し て 、 ロック を 解放 し 、 最後 に スレッド 状態 データ 構造 体 を メモリ 解放 し なけれ ば なり ませ ん 。 スレッドデータ 構造 体 を 生成 する 際 に は 、 インタプリタ 状態 データ 構造 体 を 指定 する 必要 が あり ます 。 
インタプリタ 状態 データ 構造 体 は 、 インタプリタ 内 の 全て の スレッド 間 で 共有 さ れ て いる グローバル な データ 、 例えば モジュール 管理 データ ( codesys . modules ) を 保持 し て い ます 。 
必要 に 応じ て 、 新た な インタプリタ 状態 データ 構造 体 を 作成 する なり 、 Python メインスレッド が 使っ て いる インタプリタ 状態 データ 構造 体 を 共有 する なり でき ます ( 後者 の データ に アクセス する ため に は 、 スレッド 状態 データ 構造 体 を 獲得 し て 、 その interp メンバ に アクセス し なけれ ば なり ませ ん ; この 処理 は 、 Python が 作成 し た スレッド から 行う か 、 Python を 初期 化 し た 後 で 主 スレッド から 行わ ね ば なり ませ ん )。 
インタプリタ オブジェクト に アクセス できる という 仮定 の 下 で は 、 C の スレッド から Python を 呼び出す 際 の 典型 的 な 常套句 は 以下 の よう に なり ます 。 
この データ 構造 体 は 、 協調 動作 する 多数 の スレッド 間 で 共有 さ れ て いる 状態 ( state ) を 表現 し ます 。 
グローバルインタプリタロック も また 、 スレッド が どの インタプリタ に 属し て いる か に 関わら ず すべて の スレッド で 共有 さ れ て い ます 。 
単一 の スレッド の 状態 を 表現 する 表現 する データ 構造 体 です 。 
データ メンバ PyInterpreterState * 
interp だけ が 公開 さ れ て い て 、 スレッド の インタプリタ 状態 を 指す ポインタ に なっ て い ます 。 
グローバル インタプリタ ロック を 初期 化 し 、 獲得 し ます 。 
この 関数 は 、 主 スレッド が 第 二 の スレッド を 生成 する 以前 や 、 PyEval _ ReleaseLock () 
や PyEval _ ReleaseThread ( tstate ) 
といった 他 の スレッド 操作 に 入る より も 前 に 呼び出さ れる よう に し て おか なけれ ば なり ませ ん 。 
二 度目 に 呼び出す と 何 も 行い ませ ん 。 
この 関数 を Py _ Initialize () の 前 に 呼び出し て も 安全 です 。 
ロック を 使わ ない 状況 は 、 すでに ロック を 獲得 し て いる 状況 と 同じ です : 単一 の スレッド しか なけれ ば 、 オブジェクト へ の アクセス は 全て 安全 です 。 
従って 、 この 関数 が ロック を 初期 化 する と 、 同時に ロック を 獲得 する よう に なっ て い ます 。 
Python の thread モジュール は 、 新た な スレッド を 作成 する 前 に 、 ロック が 存在 する か 、 あるいは まだ 作成 さ れ て い ない か を 調べ 、 PyEval _ InitThreads () を 呼び出し ます 。 
この 関数 から 処理 が 戻っ た 場合 、 ロック が 作成 作成 さ れ 、 呼び出し 元 スレッド が その ロック を 獲得 し て いる 事 が 保証 さ れ て い ます 。 
どの スレッド が 現在 グローバル インタプリタ ロック を ( 存在 する 場合 ) 持っ て いる か 分から ない 時 に この 関数 を 使う の は 安全 で は あり ませ ん 。 この 関数 は コンパイル 時 に スレッドサポート を 無効 化 する と 利用 でき ませ ん 。 
PyEval _ InitThreads () を すでに 呼び出し て いる 場合 は 真 ( 非 ゼロ ) を 返し ます 。 
この 関数 は 、 ロック を 獲得 せ ず に 呼び出す こと が でき ます ので 、 シングルス レッド で 実行 し て いる 場合 に は ロック 関連 の API 呼び出し を 避ける ため に 使う こと が でき ます 。 
この 関数 は コンパイル 時 に スレッドサポート を 無効 化 する と 利用 でき ませ ん 。 
グローバル インタプリタ ロック を 獲得 し ます 。 
ロック は 前もって 作成 さ れ て い なけれ ば なり ませ ん 。 
この 関数 を 呼び出し た スレッド が すでに ロック を 獲得 し て いる 場合 、 デッドロック に 陥り ます 。 
この 関数 は コンパイル 時 に スレッドサポート を 無効 化 する と 利用 でき ませ ん 。 
グローバル インタプリタ ロック を 解放 し ます 。 
グローバル インタプリタ ロック を 獲得 し 、 現在 の スレッド 状態 を tstate に 設定 し ます 。 tstate は NULL で あっ て は なり ませ ん 。 
ロック は あらかじめ 作成 さ れ て い なけれ ば なり ませ ん 。 
この 関数 を 呼び出し た スレッド が すでに ロック を 獲得 し て いる 場合 、 デッドロック に 陥り ます 。 
現在 の スレッド 状態 を リセット し て NULL に し 、 グローバル インタプリタ ロック を 解放 し ます 。 
ロック は あらかじめ 作成 さ れ て い なけれ ば なら ず 、 かつ 現在 の スレッド が 保持 し て い なけれ ば なり ませ ん 。 
tstate は NULL で あっ て は なり ませ ん が 、 その 値 が 現在 の スレッド 状態 を 表現 し て いる か どう か を 調べる ため に だけ 使わ れ ます -- も し そう で なけれ ば 、 致命 的 エラー が 報告 さ れ ます 。 この 関数 は コンパイル 時 に スレッドサポート を 無効 化 する と 利用 でき ませ ん 。 
( インタプリタ ロック が 生成 さ れ て い て 、 スレッドサポート が 有効 の 場合 ) インタプリタ ロック を 解放 し て 、 スレッド 状態 を NULL に し 、 以前 の スレッド 状態 ( NULL に は なり ませ ん ) を 返し ます 。 
ロック が すでに 生成 さ れ て いる 場合 、 現在 の スレッド が ロック を 獲得 し て い なけれ ば なり ませ ん 。 
( インタプリタ ロック が 生成 さ れ て い て 、 スレッドサポート が 有効 の 場合 ) インタプリタ ロック を 獲得 し て 、 現在 の スレッド 状態 を tstate に 設定 し ます 。 tstate は NULL で あっ て は なり ませ ん 。 
この 関数 を 呼び出し た スレッド が すでに ロック を 獲得 し て いる 場合 、 デッドロック に 陥り ます 。 
( この 関数 は コンパイル 時 に スレッドサポート を 無効 化 する と 利用 でき ませ ん 。 
) 以下 の マクロ は 、 通常 末尾 に セミコロン を 付け ず に 使い ます ; Python ソース 配布 物 内 の 使用 例 を 見 て ください 。 
この マクロ を 展開 する と "{ PyThreadState *_ save ; _ save = PyEval _ SaveThread ();" に なり ます 。 マクロ に 開き 波 括弧 が 入っ て いる こと に 注意 し て ください ; この 波 括弧 は 後で Py _ END _ ALLOW _ THREADS マクロ と 対応 さ せ なけれ ば なり ませ ん 。 
マクロ について の 詳しい 議論 は 上記 を 参照 し て ください 。 
コンパイル 時 に スレッドサポート が 無効 化 さ れ て いる と 何 も 行い ませ ん 。 
Py _ END _ ALLOW _ THREADS この マクロ を 展開 する と " PyEval _ RestoreThread (_ save ); }" に なり ます 。 
マクロ に 開き 波 括弧 が 入っ て いる こと に 注意 し て ください ; この 波 括弧 は 事前 の Py _ BEGIN _ ALLOW _ THREADS マクロ と 対応 し て い なけれ ば なり ませ ん 。 
この マクロ を 展開 する と " PyEval _ RestoreThread (_ save );" に なり ます : 閉じ 波 括弧 の ない Py _ END _ ALLOW _ THREADS と 同じ です 。 
コンパイル 時 に スレッドサポート が 無効 化 さ れ て いる と 何 も 行い ませ ん 。 
この マクロ を 展開 する と "_ save = PyEval _ SaveThread ();" に なり ます : 閉じ 波 括弧 の ない Py _ BEGIN _ ALLOW _ THREADS と 同じ です 。 
コンパイル 時 に スレッドサポート が 無効 化 さ れ て いる と 何 も 行い ませ ん 。 
以下 の 全て の 関数 は コンパイル 時 に スレッドサポート が 有効 に なっ て いる 時 だけ 利用 でき 、 呼び出す の は インタプリタ ロック が すでに 作成 さ れ て いる 場合 だけ に し なく て は なり ませ ん 。 
新しい インタプリタ 状態 オブジェクト を 生成 し ます 。 
インタプリタ ロック を 保持 し て おく 必要 は あり ませ ん が 、 この 関数 を 次々 に 呼び出す 必要 が ある 場合 に は 保持 し て おい た ほう が よい でしょ う 。 
インタプリタ 状態 オブジェクト 内 の 全て の 情報 を リセット し ます 。 
インタプリタ ロック を 保持 し て い なけれ ば なり ませ ん 。 
インタプリタ 状態 オブジェクト を 破壊 し ます 。 
インタプリタ ロック を 保持 し て おく 必要 は あり ませ ん 。 
インタプリタ 状態 は PyInterpreterState _ Clear () で あらかじめ リセット し て おか なけれ ば なり ませ ん 。 
指定 し た インタプリタ オブジェクト に 属する 新た な スレッド 状態 オブジェクト を 生成 し ます 。 
インタプリタ ロック を 保持 し て おく 必要 は あり ませ ん が 、 この 関数 を 次々 に 呼び出す 必要 が ある 場合 に は 保持 し て おい た ほう が よい でしょ う 。 
スレッド 状態 オブジェクト 内 の 全て の 情報 を リセット し ます 。 
インタプリタ ロック を 保持 し て い なけれ ば なり ませ ん 。 
スレッド 状態 オブジェクト を 破壊 し ます 。 
インタプリタ ロック を 保持 し て い なけれ ば なり ませ ん 。 
スレッド 状態 は PyThreadState _ Clear () で あらかじめ リセット し て おか なけれ ば なり ませ ん 。 
現在 の スレッド 状態 を 返し ます 。 
インタプリタ ロック を 保持 し て い なけれ ば なり ませ ん 。 
拡張 モジュール が スレッド 固有 の 状態 情報 を 保存 できる よう な 辞書 を 返し ます 。 
各々 の 拡張 モジュール が 辞書 に 状態 情報 を 保存 する ため に は 唯一 の キー を 使わ ね ば なり ませ ん 。 
スレッド 内 で 非同期 的 に 例外 を 送出 し ます 。 
グローバル インタプリタ ロック を 保持 し た 状態 で 呼び出さ なけれ ば なり ませ ん 。 
変更 を 受け た スレッド 状態 の 数 を 返し ます ; 1 より も 大きな 数 を 返し た 場合 、 何らかの トラブル に 巻き込ま れ て いる こと に なり 、 exc を NULL に し て 再度 呼び出す こと で 効果 を 打ち消さ ね ば なり ませ ん 。 
Python の 状態 や スレッドロック に 関わら ず 、 実行 中 スレッド で Python C API の 呼び出し が 可能 と なる よう に し ます 。 
この 関数 は スレッド 内 で 何 度 でも 呼び出す こと が でき ます が 、 必ず 全て の 呼び出し に 対応 し て PyGILState _ Release () を 呼び出す 必要 が あり ます 。 
獲得 し た すべて の リソース を 開放 し ます 。 
この クラス は 、 一定 時間 経過 後 に 実行 さ れる 活動 、 すなわち タイマ 活動 を 表現 し ます 。 
Timer は Thread の サブ クラス で あり 、 自作 の スレッド を 構築 し た 一 例 でも あり ます 。 タイマ は start () メソッド を 呼び出す と スレッド として 作動 し 始め し ます 。 
( 活動 を 開始 する 前 に ) cancel () メソッド を 呼び出す と 、 タイマ を 停止 でき ます 。 
タイマ が 活動 を 実行 する まで の 待ち時間 は 、 ユーザ が 指定 し た 待ち時間 と 必ずしも 厳密 に は 一致 し ませ ん 。 例 : 
interval 秒 後 に function を 引数 args 、 キーワード 引数 kwargs つき で 実行 する よう な タイマ を 生成 し ます 。 
タイマ を ストップ し て 、 その 動作 の 実行 を キャンセル し ます 。 
この メソッド は タイマ が まだ 活動 待ち 状態 に ある 場合 に のみ 動作 し ます 。 
16 . 1 . 3 Tcl / Tk を ( 本当に 少し だけ ) 
16 . 1 . 5 Tk と Tkinter 
Tk の クラス コマンド は 、 Tkinter の クラスコンストラクタ に 対応 し て い ます 。 
オブジェクト の 親 ( master ) は 、 オブジェクト の 作成 時 に 指定 し た 新た な 名前 から 非 明示 的 に 決定 さ れ ます 。 
Tkinter で は 親 を 明示 的 に 指定 し ます 。 
Tk の 設定 オプション は 、 ハイフン を つけ た タグ と 値 の 組 から なる リスト で 指定 し ます 。 
Tkinter で は 、 オプション は キーワード 引数 に し て インスタンス の コンス トラクタ に 指定 し たり 、 config に キーワード 引数 を 指定 し て 呼び出し たり 、 インデクス 指定 を 使っ て インスタンス に 代入 し たり し て 設定 し ます 。 
オプション の 設定 について は 16 . 1 . 6 節 を 参照 し て ください 。 
　 button . fred - fg red ===== fred = Button ( panel , fg = " red "). fred configure - fg red ===== fred [" fg "] = redOR == fred . config ( fg = " red ") 
Tk で ウィジェット に アクション を 実行 さ せる に は 、 ウィジェット 名 を コマンド に し て 、 その後 に アクション 名 を 続け 、 必要 に 応じ て 引数 ( オプション ) を 続け ます 。 
Tkinter で は 、 クラス インスタンス の メソッド を 呼び出し て 、 ウィジェット の アクション を 呼び出し ます 。 
ある ウィジェット が どんな アクション ( メソッド ) を 実行 できる か は 、 Tkinter . py モジュール 内 に リスト さ れ て い ます 。 
Tk で ウィジェット を packer ( ジオメトリマネジャ ) に 渡す に は 、 pack コマンド を オプション 引数 付き で 呼び出し ます 。 
Tkinter で は Pack クラス が この 機能 すべて を 握っ て い て 、 様々 な pack の 形式 が メソッド として 実装 さ れ て い ます 。 
の ウィジェット は 全て Packer から サブ クラス 化 さ れ て いる ため 、 pack 操作 にまつわる 全て の メソッド を 継承 し て い ます 。 
Form ジオメトリマネジャ に関する 詳しい 情報 について は 
モジュール の ドキュメント を 参照 し て ください 。 
オプション は 、 色 や ウィジェット の 境界 線 幅 など を 制御 し ます 。 オプション の 設定 に は 三 通り の 方法 が あり ます : 
オブジェクト を 作成 する 時 に キーワード 引数 を 使う 
オブジェクト を 作成 し た 後 、 オプション 名 を 辞書 インデックス の よう に 扱う 
オブジェクト を 生成 し た 後 、 config () メソッド を 使っ て 複数 の 属性 を 更新 する 
オプション と その 振る舞い に関する 詳細 な 説明 は 、 該当 する ウィジェット の Tk の man マニュアル を 参照 し て ください 。 man マニュアル に は 、 各 ウィジェット の " STANDARD OPTIONS ( 標準 オプション )" と " WIDGET SPECIFIC OPTIONS ( ウィジェット 固有 の オプション )" が リスト さ れ て いる こと に 注意 し ましょ う 。 
前者 は 多く の ウィジェット に 共通 の オプション の リスト で 、 後者 は 特定 の ウィジェット に 特有 の オプション です 。 
標準 オプション の 説明 は man マニュアル の 
options ( 3 ) に あり ます 。 この ドキュメント で は 、 標準 オプション と ウィジェット 固有 の オプション を 区別 し て い ませ ん 。 
この 辞書 は 、 オプション の 名前 が キー ( 例えば ' relief ') に なっ て い て 、 値 が 5 要素 の タプル に なっ て い ます 。 bg の よう に 、 いくつ か の オプション は より 長い 名前 を 持つ 共通 の オプション に対する 同義語 に なっ て い ます ( bg は " background " を 短縮 し た もの です )。 
短縮 形 の オプション 名 を config () に 渡す と 、 5 要素 で は なく 2 要素 の タプル を 返し ます 。 
この タプル に は 、 同義 語 の 名前 と 「 本当 の 」 オプション 名 が 入っ て い ます ( 例えば (' bg ', ' background '))。 
例 
データベース 検索 用 の オプション 名 
データベース 検索 用 の オプション クラス 
現在 の 値 
もちろん 、 実際 に 出力 さ れる 辞書 に は 利用 可能 な オプション が 全て 表示 さ れ ます 。 
上 の 表示 例 は 単なる 例 に すぎ ませ ん 。 
Tk / Tcl は 長き にわたり Python の 不可欠 な 一部 で あり つづけ て い ます 。 
Tk / Tcl は 頑健 で プラットホーム に 依存 し ない ウィンドウ 構築 ツール キット で あり 、 Python プログラマ は 
モジュール や その 拡張 の 
モジュール を 使っ て 利用 でき ます 。 
モジュール は 、 Tcl / Tk 上 に 作ら れ た 軽量 な オブジェクト 指向 の レイヤ です 。 
を 使う ため に Tcl コード を 書く 必要 は あり ませ ん が 、 Tk の ドキュメント や 、 場合 によって は Tcl の ドキュメント を 調べる 必要 が ある でしょ う 。 
は Tk の ウィジェット を Python の クラス として 実装 し て いる ラッパ を まとめ た もの です 。 
加え て 、 内部 モジュール _ tkinter で は 、 Python と Tcl が やり取り できる よう な スレッド 安全 な メカニズム を 提供 し て い ます 。 Tk は Python にとって 唯一 の GUI という わけ で は あり ませ ん が 、 もっとも よく 使わ れ て い ます 。 
Python 用 の 他 の GUI ツール キット に関する 詳しい 情報 は 、 16 . 6 章 、 「 他 の ユーザインタフェースモジュール と パッケージ 」 を 参照 し て ください 。 
グラフィカルユーザインタフェース を 実現 する Tcl / Tk へ の インタフェース 
Tkinter 用 の Tk 拡張 ウィジェット 
垂直 スクロール バー を 持つ テキストウィジェット 。 
タートル グラフィックス の ため の 環境 。 
各種 の MacOS ツール ボックス へ の インターフェース を 与える モジュール 群 が あり ます 。 
対応 する モジュール が ある なら 、 その モジュール で は ツール ボックス で 宣言 さ れ た 各種 の 構造 体 の Python オブジェクト が 定義 さ れ 、 操作 は 定義 さ れ た オブジェクト の メソッド として 実装 さ れ て い ます 。 
その他 の 操作 は モジュール の 関数 として 実装 さ れ て い ます 。 
C で 可能 な 操作 が すべて Python で 可能 な わけ で は あり ませ ん し ( コール バック は よく 問題 に なり ます )、 パラメータ が Python だ と 違っ て しまう こと は よく あり ます ( 特に 入力 バッファ や 出力 バッファ )。 
全て の メソッド と 関数 は __ doc __ 文字 列 が ある ので 、 引数 と 返り 値 の 説明 を 得る 事 が でき ます 。 他 の 情報 源 として は 、 
など を 参照 し て ください 。 これら の モジュール は 全て Carbon パッケージ に 含ま れ て い ます 。 
注意 ！ これら の モジュール は まだ 文書 化 さ れ て い ませ ん 。 
これら の モジュール の どれ で も よい です が 文書 化 に 協力 し たい という 方 は 、 docs @ python . org まで 連絡 を ください 。 
Apple Event ツール ボックス へ の インタフェース 
Apple ヘルプ マネージャ へ の インタフェース 
アピアランスマネージャ へ の インタフェース 
Core Foundation へ の インタフェース 
Component Manager へ の インタフェース 
Carbon Event Manager へ の インタフェース 
Control Manager へ の インタフェース 
Dialog Manager へ の インタフェース 
Event Manager へ の インタフェース 
Font Manager へ の インタフェース 
Folder Manager へ の インタフェース 
Carbon Help Manager へ の インタフェース 
List Manager へ の インタフェース 
Menu Manager へ の インタフェース 
MultiLingual Text Editor へ の インタフェース 
QuickDraw ツール ボックス へ の インタフェース 
QuickDraw オフスクリーン API へ の インタフェース 
QuickTime ツール ボックス へ の インタフェース 
Resource Manager と ハンドル へ の インタフェース 
Carbon Scrap Manager へ の インタフェース 
Sound Manager へ の インタフェース 
TextEdit へ の インタフェース 
Window Manager へ の インタフェース 
標準 色 選択 ダイアログ へ の インターフェース 
7 . 1 外部 ツール Python ドキュメント が サポート し て いる 全て の 出力 形式 を 処理 できる よう に する に は 、 数多く の ツール が 必要 です 。 
この 節 で は 、 処理 に 使わ れ て いる 各 ツール について 列挙 し 、 各々 が い つ 必要 に なる の か 説明 し て い ます 。 
これら の ツール の いずれ か が 特定 の バージョン を 要求 し て いる か どう か は 、 Doc / README ファイル を 調べ て み て ください 。 
この プログラム は よく TeX インストール の 一部 に なっ て い ます 。 
dvips は `` デバイス 非 依存 ( device independent )'' の . dvi ファイル から PostScript を 生成 する ため に 使わ れ ます 。 
PostScript へ の 変換 を 行う 際 に 必要 です 。 
Emacs は ご ちゃ まぜ ( kitchen sink ) の 、 さらに 言う と クソ 素晴らしい ご ちゃ まぜ の プログラマ 向け エディタ です 。 
info 形式 に 変換 し たい 場合 に 、 Texinfo ドキュメント の 適切 な メニュー 階層 の 構築 を サポート する 上 で 必要 な 処理 に 関係 し て い ます 。 
FSF の emacs の 代わり に xemacs を 使う と 、 変換 が うまく いか ない こと が あり ます が 、 これ は 誰 も Emacs の Texinfo コード を メンテナンス し て 可 搬性 の ある もの に し ない から だ と 思わ れ ます 。 
LaTeX は 、 Laslie Lamport による 拡張 可能 な 大 規模 マクロ パッケージ で 、 Donald Knuth が 作成 し た 世界 規模 で 使わ れ て いる タイプセッタ TeX に 基づい て い ます 。 
PostScript 形式 へ の 変換 に 必要 で 、 HTML へ の 変換 に も 必要 です ( LaTeX 2 HTML は LaTeX が 生成 する 中間 ファイル の 一つ を 必要 と する ため です )。 
これ まで に メンテナンス さ れ た こと の ある Perl スクリプト の 中 で おそらく 最長 の スクリプト でしょ う 。 
この ツール は LaTeX ドキュメント を HTML ドキュメント に 変換 し 、 そこそこ 立派 な 仕事 を し ます 。 
HTML や GNU info 形式 へ の 変換 に 必要 です 。 
HTML から 平文 テキスト へ の 変換 機能 を 持つ テキスト モード の Web ブラウザ です 。 
howto ドキュメント を テキスト 形式 に 変換 する 際 に 使い ます 。 
どの バージョン の make も 標準 ドキュメント の 処理 に 使える はず です が 、 実験 段階 に ある Doc / tools / sgmlconv / の 処理 に は 、 少なくとも 実験 段階 に ある 間 は GNU make が 必要 です 。 
mkhowto スクリプト を 走ら せる 場合 に は 必要 あり ませ ん 。 
LaTeX の 索引 データ を フォーマット 済み の 索引 に 変換 する ため の 標準 プログラム です ; 全て の LaTeX インストール 物 に 入っ て いる はず です 。 
PDF 形式 と PostScript 形式 へ の 変換 に 必要 です 。 
Texinfo から GNU info ファイル へ の 変換 に は GNU makeinfo を 使い ます 。 
Texinfo は info へ の 変換 における 中間 形式 の 処理 に 使わ れる ので 、 info へ の 変換 に も この プログラム が 必要 です 。 
pdfTeX は 比較的 新しく 登場 し た TeX の 変種 で 、 マニュアル の PDF 版 を 生成 する ため に 使い ます 。 
通常 、 ほとんど の 大 規模 な TeX 配布 物 の 一部 として インストール さ れ て い ます 。 
pdflatex は LaTeX 形式 を 扱う pdfTeX です 。 
LaTeX 2 HTML や LaTeX 2 HTML 出力 に対する 仕上げ 作業 、 HTML から Texinfo へ の 変換 に は Perl が 必要 です 。 
HTML 形式 や GNU info 形式 へ の 変換 に 必要 です 。 
Python は Doc / tools / ディレクトリ 内 の 多く の スクリプト で 使わ れ て い ます ; 全て の 形式 へ の 変換 で 必要 です 。 
Python の ドキュメント を 書こ う と 思っ て いる の なら 、 何 も 問題 は ない はず です よ ね ! 
7 . 2 内部 用 ツール この節 で は 、 ドキュメント 処理 の 様々 な 段階 を 実装 し たり 、 ビルド 手順 全体 を 演出 する 様々 な スクリプト について 説明 し ます 。 
これら の ツール の ほとんど は 標準 ドキュメント を 構築 する という コンテキスト で のみ 有用 です が 、 汎用 的 な もの も あり ます 。 
サード パーティ 製 の ドキュメント を フォーマット する 際 に 最初 に 使う スクリプト です 。 
mkhowto は howto と manual クラス の どちら の ドキュメント に も 使え ます 。 
この ツール は 、 古い Python の ソース リリース に 入っ て いる バージョン で は なく 、 常に 最新 の バージョン を 使う よう に する の が よい でしょ う 。 
これら の ツール は 、 DVI 、 HTML 、 PDF 、 PostScript 、 および プレイン テキスト 形式 の ドキュメント 生成 に 利用 でき ます 。 
将来 の バージョン で は 、 この スクリプト で GNU info および iSilo 形式 も 扱える よう に する 予定 です 。 コマンド ライン で -- help オプション を 使っ て これら の スクリプト を 実行 すれ ば 、 利用 できる オプション を まとめ た もの を 表示 し ます 。 
7 . 1 外部 ツール 
Python インタプリタ は 、 標準 入力 や 、 プログラム の 引数 として 与え られ た スクリプト 、 対話 的 に タイプ 入力 さ れ た 命令 、 モジュール の ソース ファイル など 、 様々 な 入力 源 から 入力 を 得る こと が でき ます 。 
この 章 で は 、 それぞれ の 場合 に 用い られる 構文 法 について 説明 し て い ます 。 
この 簡単 な 例 で は 基本 的 な read - eval - print ループ を 実装 い ます 。 それ は 標準 的 な Python の 対話 インタープリタ ループ に 似 て い ます が 、 Python の もの より 便利 で は あり ませ ん 。 
インタープリタ ループ の より 完全 な 実装 について は 、 
モジュール を 参照 し て ください 。 
1 . 1 もっとも 簡単 な 場合 : ありふれ た インストール 作業 
Python の 広範 な 標準 ライブラリ は 、 プログラミング における 多く の 要求 を カバー し て い ます が 、 時に は 何らかの 新た な 機能 を サード パーティ 製 モジュール の 形 で 追加 する 必要 に 迫ら れ ます 。 
自分 が プログラム を 書く とき の サポート として 必要 な 場合 も ある し 、 自分 が 使い たい アプリケーション が たまたま Python で 書か れ て い て 、 その サポート として 必要 な 場合 も ある でしょ う 。 
この ドキュメント を 読む ため に 、 Python について 知っ て おく 必要 は あり ませ ん ; インストール し た モジュール を 調べる ため に Python の 対話 モード に ちょっと だけ 手 を 出す 必要 が あり ます が 、 それだけ です 。 
自作 の Python モジュール を 他人 が 使える よう に する ため に 配布 する 方法 を 探し て いる の なら 、 
最も 楽 な の は 、 インストール し たい モジュール 配布 物 の 特殊 な バージョン を インストール し たい プラットフォーム 向け に 誰か が すでに 用意 し て くれ て い て 、 他 の アプリケーション と 同じ よう に インストール する だけ で ある よう な 場合 です 。 
例えば Windows ユーザ 向け に は 実行 可能 形式 の インストーラ 、 RPM ベース の Linux システム ( Red Hat , SuSE , Mandrake その他 多数 ) 向け に は RPM パッケージ 、 Debian ベース の Linux システム 向け に は Debian パッケージ といった 具合 に 、 モジュール 開発 者 は ビルド 済み 配布 物 を 作成 し て いる かも しれ ませ ん 。 この よう な 場合 、 自分 の プラットフォーム に 合っ た インストーラ を ダウンロード し て 、 実行 可能 形式 なら 実行 し 、 RPM なら rpm - install する といった 、 分かり きっ た 作業 を する だけ です 。 
Python を 起動 し たり 、 setup スクリプト を 実行 する 必要 は なく 、 何 も コンパイル する 必要 は あり ませ ん -- 説明 書き を 読む 必要 すら 全く ない かも しれ ませ ん ( と は いえ 、 説明 書き を 読む の は よい こと です が )。 もちろん 、 いつも こう 簡単 と は 限り ませ ん 。 
自分 の プラットフォーム 向け の お 手軽 な インストーラ が ない モジュール 配布 物 に 興味 を 持つ こと も ある でしょ う 。 
そんな 場合 に は 、 モジュール の 作者 や メンテナ が リリース し て いる ソース 配布 物 から 作業 を はじめ ね ば なり ませ ん 。 
ソース 配布 物 から の インストール は 、 モジュール が 標準 的 な 方法 で パッケージ 化 さ れ て いる 限り さほど 大変 で は あり ませ ん 。 
この ドキュメント の 大 部分 は 、 標準 的 な ソース 配布 物 から の ビルド と インストール に関する もの です 。 
モジュール の ソース コード 配布 物 を ダウンロード し たら 、 配布 物 が 標準 の やり方 、 すなわち Distutils の やり方 に従って パッケージ さ れ て 配布 さ れ て いる か どう か すぐ に 分かり ます 。 
Distutils の 場合 、 まず 配布 物 の 名前 と バージョン 番号 が 、 例えば foo - 1 . 0 . tar . gz や widget - 0 . 9 . 7 . zip の よう に 、 ダウンロード さ れ た アーカイブ ファイル の 名前 に はっきり と 反映 さ れ ます 。 
次に 、 アーカイブ は 同様 の 名前 の ディレクトリ 、 例えば foo - 1 . 0 や widget - 0 . 9 . 7 に 展開 さ れ ます 。 
さらに 、 配布 物 に は setup スクリプト setup . py が 入っ て い ます 。 また 、 README . txt 場合 によって は README という 名前 の ファイル も 入っ て い て 、 そこ に は 、 モジュール 配布 物 の 構築 と インストール は 簡単 で 、 
別 の 言葉 で 言え ば 、 上 の コマンド こそ が 、 この マニュアル から 習得 す べき 全て という こと に なり ます 。 
2 . 3 . 1 真 値 テスト どの オブジェクト も if または while 条件 文 の 中 や 、 以下 の ブール 演算 における 被 演算 子 として 真 値 テスト を 行う こと が でき ます 。 
以下 の 値 は 偽 で ある と 見なさ れ ます : 
数値 型 における ゼロ 。 例えば 0 、 0 L 、 0 . 0 、 0 j 。 
空 の シーケンス 型 。 例えば '' 、 () 、 [] 。 
空 の マッピング 型 。 例えば {} 。 
__ nonzero __() または __ len __() メソッド が 定義 さ れ て いる よう な ユーザ 定義 クラス の インスタンス で 、 それら の メソッド が 整数 値 ゼロ または bool 値 の False を 返す とき 。 
それ 以外 の 値 は 全て 真 で ある と 見なさ れ ます -- 従っ て 、 ほとんど の 型 の オブジェクト は 常に 真 です 。 
ブール 値 の 結果 を 返す 演算 および 組み込み 関数 は 、 特に 注釈 の ない 限り 常に 偽 値 として 0 または False を 返し 、 真 値 として 1 または True を 返し ます ( 重要 な 例外 : ブール 演算 " or " 
および " and " 
は 常に 被 演算 子 の 中 の 一つ を 返し ます )。 
これら の 特殊 な メソッド に関する 追加 情報 は 
に 記載 さ れ て い ます 。 
try 文 は 、 ひとまとめ の 文 に対して 、 例外 処理 かつ / または クリーンアップ コード を 指定 し ます : 
try 文 に は 二つ の 形式 : try ... except および try ... finally が あり ます 。 
これら 二つ の 形式 を 混合 する こと は でき ませ ん ( 互いに ネスト する こと は でき ます )。 try ... except 形式 で は 、 一つ または それ 以上 の 例外 ハンドラ ( except 節 ) を 指定 し ます 。 
try 節 内 で 全く 例外 が 起き なけれ ば 、 どの 例外 ハンドラ も 実行 さ れ ませ ん 。 
try スイート 内 で 例外 が 発生 する と 、 例外 ハンドラ の 検索 が 開始 さ れ ます 。 
この 検索 で は 、 except 節 を 逐次 調べ て 、 発生 し た 例外 に 合致 する まで 続け ます 。 
式 を 伴わ ない except 節 を 使う 場合 、 最後 に 書か なけれ ば なり ませ ん ; この except 節 は 全て の 例外 に 合致 し ます 。 
式 を 伴う except 節 に対して は 、 式 が 値 評価 さ れ 、 返さ れ た オブジェクト が 例外 と `` 互換 で ある ( compatible )'' 場合 に その 節 が 合致 し ます 。 
ある 例外 に対して オブジェクト が 互換 で ある の は 、 オブジェクト が その 例外 の アイデンティティ を 持つ オブジェクト で ある か 、 ( クラス の 例外 の 場合 ) 例外 の 基底 クラス で ある か 、 例外 と 互換 性 の ある 要素 が 入っ た タプル で ある 場合 です 。 
同じ 値 を 持つ オブジェクト で ある だけ で なく 、 アイデンティティ が 合致 し なけれ ば なら ない ので 注意 し て ください 。 
except 節 は 全て 実行 可能 な ブロック を 持っ て い なけれ ば なり ませ ん 。 
ブロック の 末尾 に 到達 する と 、 通常 は try 文 全体 の 直後 に 実行 を 継続 し ます 。 
モジュール 内 の 三つ の 変数 に 代入 さ れ ます : sys . exc _ type は 、 例外 を 示す オブジェクト を 受け取り ます ; sys . exc _ value は 例外 の パラメタ を 受け取り ます ; sys . exc _ traceback は 、 プログラム 上 の 例外 が 発生 し た 位置 を 識別 する トレースバックオブジェクト 
ただし この 関数 に 対応 する 変数 の 使用 は 、 スレッド を 使っ た プログラム で 安全 に 使え ない ため 撤廃 さ れ て い ます 。 
Python 1 . 5 から は 、 例外 を 処理 し た 関数 から 戻る とき に 、 以前 の 値 ( 関数 呼び出し 前 の 値 ) に 戻さ れ ます 。 
オプション の else 節 は 、 実行 の 制御 が try 節 の 末尾 に 到達 し た 場合 に 実行 さ れ ます 。 
else 節 内 で 起き た 例外 は 、 else 節 に 先行 する except 節 で 処理 さ れる こと は あり ませ ん 。 
try ... finally 形式 で は 、 ` クリーンアップ ' ハンドラ を 指定 し ます 。 
まず try 節 が 実行 さ れ ます 。 
例外 が 全く 発生 し なけれ ば 、 finally 節 が 実行 さ れ ます 。 
例外 が try 節 内 で 発生 し た 場合 、 例外 は 一時 的 に 保存 さ れ 、 finally が 実行 さ れ た 後 、 保存 さ れ て い た 例外 が 再 送出 さ れ ます 。 
finally 節 で 別 の 例外 が 送出 さ れ たり 、 return や break 節 が 実行 さ れ た 場合 、 保存 さ れ て い た 例外 は 失わ れ ます 。 
finally 節 で の continue 文 の 使用 は 不正 と なり ます ( 理由 は 現在 の 実装 上 の 問題 に あり ます -- この 制限 は 将来 解消 さ れる かも しれ ませ ん )。 
finally 節 の 実行 中 は 、 例外 情報 を 取得 する こと は でき ませ ん 。 
try ... finally 文 の try スイート 内 で return 、 break 、 または continue 文 が 実行 さ れ た 場合 、 finally 節 も ` 抜け出る 途中 に ( on the way out )' 実行 さ れ ます 。 
例外 に関する その他 の 情報 は 4 . 2 節 に あり ます 。 
また 、 raise 文 の 使用 による 例外 の 生成 に関する 情報 は 、 6 . 9 節 に あり ます 。 
... の 末尾 に 到達 し た 場合 に 実行 さ れ ます 。 
現在 、 制御 が `` 末尾 に 到達 する '' の は 、 例外 が 発生 し たり 、 return 、 continue 、 または break 文 が 実行 さ れる 場合 を 除き ます 。 
この PyObject の サブ タイプ は Python の タプルオブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の タプル 型 を 表現 し ます ; Python レイヤ における types . TupleType 
と 同じ オブジェクト です 。 
p が タプルオブジェクト か 、 タプル 型 の サブ タイプ の インスタンス で ある 場合 に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
p が タプルオブジェクト で 、 かつ タプル 型 の サブ タイプ の インスタンス で ない 場合 に 真 を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
サイズ が len 新た な タプルオブジェクト を 返し ます 。 失敗 する と NULL を 返し ます 。 
" PyTuple _ Pack ( 2 , a , b )" は " Py _ BuildValue ("( OO )", a , b )" と 同じ です 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
タプルオブジェクト へ の ポインタ を 引数 に とり 、 その タプル の サイズ を 返し ます 。 
タプル p の サイズ を 返し ます が 、 p は 非 NULL で なく て は なら ず 、 タプルオブジェクト を 指し て い なけれ ば なり ませ ん ; エラー チェック を 行い ませ ん 。 
p の 指す タプルオブジェクト 内 の 、 位置 pos に ある オブジェクト を 返し ます 。 
PyTuple _ GetItem () に 似 て い ます が 、 引数 に対する エラー チェック を 行い ませ ん 。 
p の 指す タプルオブジェクト 内 の 、 位置 low から high まで の スライス を 取り出し て 、 タプルオブジェクト として 返し ます 。 
p の 指す タプルオブジェクト 内 の 位置 pos に 、 オブジェクト o へ の 参照 を 挿入 し ます 。 
成功 し た 場合 に は 0 を 返し ます 。 
注意 : この 関数 は o へ の 参照 を `` 盗み 取り '' ます 。 
PyTuple _ SetItem () に 似 て い ます が 、 エラー チェック を 行わ ず 、 新た な タプル に 値 を 入れる とき 以外 に は 使っ て は なり ませ ん 。 
注意 : この 関数 は o へ の 参照 を `` 盗み 取り '' ます 。 
タプル を リサイズ する 際 に 使え ます 。 newsize は タプル の 新た な 長 さ です 。 
タプル は 変更 不能 な オブジェクト という こと に なっ て いる ので 、 この 関数 は 対象 の オブジェクト に対して ただ 一つ しか 参照 が ない 時 以外 に は 使っ て は なり ませ ん 。 
タプル が コード 中 の 他 の 部分 で すでに 参照 さ れ て いる 場合 に は 、 この 関数 を 使っ て は なり ませ ん 。 
タプル は 常に 指定 サイズ の 末尾 まで 伸縮 し ます 。 
の 値 が 呼び出し 前 と 同じ に なる と 気体 し て は なり ませ ん 。 
* p が 置き換え られ た 場合 、 オリジナル の * p 
は 破壊 さ れ ます 。 
失敗 する と - 1 を 返し 、 * p を NULL に 設定 し て 、 MemoryError または SystemError を 送出 し ます 。 
バージョン 2 . 2 で 変更 さ れ た 仕様 : 使わ れ て い なかっ た 三つ 目 の パラメタ 、 last _ is _ sticky を 削除 し まし た 
12 . さあ 何 を ？ 
7 日本語 訳 について 
Distutils は 、 可能 な とき に は いつ でも 、 setup . py スクリプト を 実行 する Python インタプリタ が 提供 する 設定 情報 を 使お う と し ます 。 
例えば 、 拡張 モジュール を コンパイル する 際 に は 、 コンパイラ や リンカ の フラグ に は Python を コンパイル し た 際 と 同じ もの が 使わ れ ます 。 
通常 、 この 設定 は うまく いき ます が 、 状況 が 複雑 に なる と 不適切 な 設定 に なる こと も あり ます 。 
この 節 で は 、 通常 の Distutils の 動作 を オーバライド する 方法 について 議論 し ます 。 
C や C ++ で 書か れ た Python 拡張 を コンパイル する 際 、 しばしば 特定 の ライブラリ を 使っ たり 、 特定 の 種類 の オブジェクト コード を 生成 し たり する 上 で 、 コンパイラ や リンカ に 与える フラグ を カスタマイズ する 必要 が あり ます 。 ある 拡張 モジュール が 自分 の プラットフォーム で は テスト さ れ て い なかっ たり 、 クロス コンパイル を 行わ ね ば なら ない 場合 に は これ が 当てはまり ます 。 
Setup ファイル の 各行 に は 単一 の モジュール を 書き ます 。 
各行 は 以下 の よう な 構造 を とり ます : 
次に 、 各 フィールド について 見 て み ましょ う 。 
module は ビルド する 拡張 モジュール の 名前 で 、 Python の 識別子 名 として 有効 で なけれ ば なり ませ ん 。 
モジュール の 名前 変更 は 、 この フィールド を 変える だけ で は でき ない ( ソース コード の 編集 も 必要 です ) ので 、 この フィールド に 手 を 加える べき で は あり ませ ん 。 
sourcefile は 、 少なくとも ファイル 名 から 何 の 言語 で 書か れ て いる か が わかる よう に なっ て いる ソース コード ファイル 名 です 。 
. c で 終わる ファイル は C で 書か れ て いる と みなさ れ 、 . C 、 . cc 、 および . c ++ で 終わる ファイル は C ++ で 書か れ て いる と みなさ れ ます 。 . m や . mm で 終わる ファイル は Objective C で 書か れ て いる と みなさ れ ます 。 
cpparg は C プリプロセッサ へ の 引数 で 、 - I 、 - D 、 - U または - C の いずれ か から 始まる 文字 列 です 。 
library は . a で 終わる か 、 - l または - L の いずれ か から 始まる 文字 列 です 。 
特定 の プラットフォーム において 、 プラットフォーム 上 の 特殊 な ライブラリ が 必要 な 場合 、 Setup ファイル を 編集 し て python setup . py build を 実行 すれ ば ライブラリ を 追加 でき ます 。 
例えば 、 以下 の 行 
で 定義 さ れ た モジュール を 、 自分 の プラットフォーム 上 の 数学 ライブラリ libm . a と リンク し なけれ ば なら ない 場合 、 Setup 内 の 行 に - lm を 追加 する だけ です : 
コンパイラ や リンカ 向け の 任意 の スイッチ オプション は 、 - Xcompiler arg や - Xlinker arg オプション で 与え ます : 
- Xcompiler および - Xlinker の 後 に くる オプション は 、 それぞれ 適切 な コマンド ライン に 追加 さ れ ます 。 従って 、 上 の 例 で は 、 コンパイラ に は - o 32 オプション が 渡さ れ 、 リンカ に は - shared が 渡さ れ ます 。 
コンパイラ オプション に 引数 が 必要 な 場合 、 複数 の - Xcompiler オプション を 与え ます ; 例えば 、 - x c ++ を 渡す に は 、 Setup ファイル に は - Xcompiler - x - Xcompiler c ++ を 渡さ ね ば なり ませ ん 。 コンパイラ フラグ は 、 環境 変数 CFLAGS の 設定 で も 与え られ ます 。 
CFLAGS が 設定 さ れ て いれ ば 、 Setup ファイル 内 で 指定 さ れ て いる コンパイラ フラグ に CFLAGS の 内容 が 追加 さ れ ます 。 
この 小節 で は 、 Borland C ++ コンパイラ の バージョン 5 . 5 で Distutils を 使う ため に 必要 な 手順 について 述べ て い ます 。 まず 、 Borland の オブジェクト ファイル 形式 ( OMF ) は 、 Python 公式 サイト や ActiveState の Web サイト から ダウンロード できる バージョン の Python が 使っ て いる 形式 と は 違う こと を 知っ て おか ね ば なり ませ ん ( Python は 通常 、 Microsoft Visual C ++ で ビルド さ れ て い ます 。 
Microsoft Visual C ++ は COFF を オブジェクト ファイル 形式 に 使い ます 。 ) この ため 、 以下 の よう に し て 、 Python の ライブラリ python 24 . lib を Borland の 形式 に 変換 する 必要 が あり ます : 
coff 2 omf プログラム は 、 Borland コンパイラ に 付属 し て い ます 。 
python 24 . lib は Python インストール ディレクトリ の Libs ディレクトリ 内 に あり ます 。 
拡張 モジュール で 他 の ライブラリ ( zlib , ...) を 使っ て いる 場合 、 それら の ライブラリ も 変換 し なけれ ば なり ませ ん 。 変換 さ れ た ファイル は 、 通常 の ライブラリ と 同じ ディレクトリ に 置か ね ば なり ませ ん 。 
さて 、 Distutils は 異なる 名前 を 持つ これら の ライブラリ を どの よう に 扱う の でしょ う か ? 拡張 モジュール で ( 例えば foo という 名 の ) ライブラリ が 必要 な 場合 、 Distutils は まず _ bcpp が 後ろ に 付い た ライブラリ ( 例えば foo _ bcpp . lib ) が 見つかる か どう か 調べ 、 あれ ば その ライブラリ を 使い ます 。 
該当 する ライブラリ が なけれ ば 、 デフォルト の 名前 ( foo . lib ) を 使い ます 
。 Borland C ++ を 使っ て Distutils に 拡張 モジュール を コンパイル さ せる に は 、 以下 の よう に 入力 し ます : 
Borland C ++ コンパイラ を デフォルト に し たい なら 、 自分 用 、 または システム 全体 向け に 、 Distutils の 設定 ファイル を 書く こと を 検討 し た 方 が よい でしょ う ( 5 節 を 参照 し て ください )。 
Borland による フリー の C ++ コンパイラ に関する 情報 で 、 コンパイラ の ダウンロード ページ へ の リンク も あり ます 。 
Borland 製 の フリー の コマンド ライン C ++ を 使っ て Python を ビルド する 方法 について 述べ た ドキュメント です 。 
この 節 で は 、 Cygwin や MinGW 
これ で 、 上 で 得 られ た 情報 を もと に 、 gcc 用 の import ライブラリ を 作成 でき ます 。 
python setup . py build -- compiler = cygwin の よう に 入力 し ます 。 
また 、 非 cygwin モード の Cygwin 
や MinGW で は 、 
の よう に 入力 し ます 。 上記 の オプション や コンパイラ を デフォルト に し たい なら 、 自分 用 、 または システム 全体 向け に 、 Distutils の 設定 ファイル を 書く こと を 検討 し た 方 が よい でしょ う ( 5 節 を 参照 し て ください )。 
MinGW 環境 で 必要 な ライブラリ の ビルド に関する 情報 が あり ます 。 
Cygwin / MinGW および Borland 形式 に 変換 済み の import ライブラリ と 、 Distutils が ビルド 済み の Python の 場所 を 特定 する ため に 必要 な レジストリエントリ を 作成 する ため の スクリプト が あり ます 。 
... を 使い ます 
つまり 、 全て の 既存 の COFF ライブラリ を 同名 の OMF ライブラリ に 置き換え て も かまわ ない という こと です 
詳しく は http :// sources . redhat . com / cygwin / や http :// www . mingw . org / を 参照 し て ください 
この モード で は POSIX エミュレーション を 利用 でき ませ ん が 、 cygwin 1 . dll も 必要 なくなり ます 。 
7 日本語 訳 について 
新 形式 の 型 を 定義 する 構造 体 : PyTypeObject 構造 体 は 、 おそらく Python オブジェクト システム の 中 で 最も 重要 な 構造 体 の 一つ でしょ う 。 
この 節 で は 、 型 オブジェクト の 各 フィールド について 詳細 を 説明 し ます 。 
参照 の 手間 を 省く ため に 、 ここ で は 定義 を 繰り返し ます : 
型 オブジェクト 構造 体 は PyVarObject 構造 体 を 拡張 し た もの です 。 ob _ size フィールド は 、 ( 通常 class 文 が 呼び出す type _ new () で 生成 さ れる ) 動的 な 型 に 使い ます 。 
これら の フィールド は マクロ Py _ TRACE _ REFS が 定義 さ れ て いる 場合 のみ 存在 し ます 。 
PyObject _ HEAD _ INIT マクロ を 使う と 、 フィールド を NULL に 初期 化 し ます 。 
静的 に メモリ 確保 さ れ て いる オブジェクト で は 、 これら の フィールド は 常に NULL の まま です 。 
動的 に メモリ 確保 さ れる オブジェクト の 場合 、 これら 二つ の フィールド は 、 ヒープ 上 の 全て の 存続 中 の オブジェクト から なる 二 重 リンクリスト で オブジェクト を リンク する 際 に 使わ れ ます 。 
この こと は 様々 な デバッグ 目的 に 利用 でき ます ; 現状 で は 、 環境 変数 PYTHONDUMPREFS が 設定 さ れ て いる とき に 、 プログラム の 実行 終了 時点 で 存続 し て いる オブジェクト を 出力 する の が 唯一 の 用例 です 。 サブ タイプ は この フィールド を 継承 し ませ ん 。 
ob _ refcnt かた オブジェクト の 参照 カウント で 、 PyObject _ HEAD _ INIT は この 値 を 1 に 初期 化 し ます 。 
静的 に メモリ 確保 さ れ た 型 オブジェクト で は 、 型 の インスタンス ( ob _ type が 該当 する 型 を 指し て いる オブジェクト ) は 参照 を カウント する 対象 に は なり ませ ん 。 
動的 に メモリ 確保 さ れる 型 オブジェクト の 場合 、 インスタンス は 参照 カウント の 対象 に なり ます 。 
サブ タイプ は この フィールド を 継承 し ませ ん 。 
型 自体 の 型 、 別 の 言い方 を する と メタ タイプ です 。 PyObject _ HEAD _ INIT マクロ で 初期 化 さ れ 、 通常 は PyType _ Type に なり ます 。 
しかし 、 ( 少なくとも ) Windows で 利用 できる 動的 ロード 可能 な 拡張 モジュール で は 、 コンパイラ は 有効 な 初期 化 で は ない と 文句 を つけ ます 。 
そこで 、 なら わし として 、 PyObject _ HEAD _ INIT に は NULL を 渡し て 初期 化 し て おき 、 他 の 操作 を 行う 前 に モジュール の 初期 化 関数 で 明示 的 に この フィールド を 初期 化 する こと に なっ て い ます 。 
この 操作 は 以下 の よう に 行い ます : Foo _ Type . ob _ type = PyType _ Type ; 
上 の 操作 は 、 該当 する 型 の いかなる インスタンス 生成 より も 前 に し て おか ね ば なり ませ ん 。 
PyType _ Ready () は ob _ type が NULL か どう か 調べ 、 NULL の 場合 に は 初期 化 し ます : Python 2 . 2 で は 、 PyType _ Type に セット し ます ; in Python 2 . 2 . 1 および それ 以降 で は 基底 クラス の ob _ type フィールド に 初期 化 し ます 。 
ob _ type が 非 ゼロ の 場合 、 PyType _ Ready () は この フィールド を 変更 し ませ ん 。 Python 2 . 2 で は 、 サブ タイプ は この フィールド を 継承 し ませ ん 。 
2 . 2 . 1 と 2 . 3 以降 で は 、 サブ タイプ は この フィールド を 継承 し ます 。 
静的 に メモリ 確保 さ れ て いる 型 オブジェクト の 場合 、 この フィールド は ゼロ に 初期 化 さ れ ます 。 
動的 に メモリ 確保 さ れ て いる 型 オブジェクト の 場合 、 この フィールド は 内部 使用 さ れる 特殊 な 意味 を 持ち ます 。 サブ タイプ は この フィールド を 継承 し ませ ん 。 
型 の 名前 が 入っ て いる NUL 終端 さ れ た 文字 列 へ の ポインタ です 。 
モジュール の グローバル 変数 として アクセス できる 型 の 場合 、 この 文字 列 は 完全 な モジュール 名 、 ドット 、 そして 型 の 名前 と 続く 文字 列 に なり ます ; 組み込み 型 の 場合 、 ただ の 型 の 名前 です 。 
モジュール が ある パッケージ の サブ モジュール の 場合 、 完全 な パッケージ 名 が 完全 な モジュール 名 の 一部 に なっ て い ます 。 
ドット が 入っ て い ない 場合 、 tp _ name フィールド の 内容 全て が __ name __ 属性 に なり 、 __ module __ 属性 は ( 前述 の よう に 型 の 辞書 内 で 明示 的 に セット し ない かぎり ) 未 定義 に なり ます 。 この ため 、 こうした 型 オブジェクト は pickle 化 でき ない こと に なり ます 。 
サブ タイプ は この フィールド を 継承 し ませ ん 。 
これら の フィールド は 、 型 インスタンス の バイト サイズ を 計算 できる よう に し ます 。 
N の 値 は 通常 、 インスタンス の ob _ size フィールド に 記憶 さ れ ます 。 
ただし 例外 が いくつ か あり ます : 例えば 、 長 整数 で は 負 の 値 を ob _ size に 使っ て 、 インスタンス の 表す 値 が 負 で ある こと を 示し 、 N 自体 は abs ( ob _ size ) に なり ます 。 
従って 、 tp _ basicsize の 正しい 初期 化 パラメタ を 得る に は 、 インスタンス データ の レイアウト を 宣言 する の に 使う 構造 体 に対して sizeof 演算 子 を 使う しか あり ませ ん 。 
基本 サイズ に は 、 GC ヘッダ サイズ は 入っ て い ませ ん ( これ は Python 2 . 2 から の 新しい 仕様 です ; 2 . 1 や 2 . 0 で は 、 GC ヘッダ サイズ は tp _ basicsize に 入っ て い まし た )。 
バイト 整列 ( alignment ) に関する 注釈 : 変数 の 各 要素 を 配置 する 際 に 特定 の バイト 整列 が 必要 と なる 場合 、 tp _ basicsize の 値 に 気 を つけ なけれ ば なり ませ ん 。 
インスタンス の デストラクタ 関数 へ の ポインタ です 。 
この 関数 は ( 単 量子 None や Ellipsis の 場合 の よう に 、 インスタンス が 決して メモリ 解放 さ れ ない 型 で ない 限り ) 必ず 定義 し なけれ ば なり ませ ん 。 デストラクタ 関数 は 、 Py _ DECREF () や Py _ XDECREF () マクロ で 、 操作 後 の 参照 カウント が ゼロ に なっ た 際 に 呼び出さ れ ます 。 
呼び出さ れ た 時点 で は 、 インスタンス は まだ 存在 し ます が 、 インスタンス に対する 参照 は 全 ない 状態 です 。 
デストラクタ 関数 は インスタンス が 保持 し て いる 全て の 参照 を 解放 し 、 インスタンス が 確保 し て いる 全て の メモリ バッファ を ( バッファ の 確保 時 に 使っ た 関数 に 対応 する メモリ 解放 関数 を 使っ て ) 解放 し 、 最後 に ( か なら ず 最後 に 行う 操作 として ) その 型 の tp _ free 関数 を 呼び出し ます 。 
ある 型 が サブ タイプ を 作成 でき ない ( Py _ TPFLAGS _ BASETYPE フラグ が セット さ れ て い ない ) 場合 、 tp _ free の 代わり に オブジェクト の メモリ 解放 関数 ( deallocator ) を 直接 呼び出し て も かまい ませ ん 。 
オブジェクト の メモリ 解放 関数 は 、 インスタンス の メモリ 確保 を 行う 際 に 使っ た 関数 と 同じ ファミリ で なけれ ば なり ませ ん ; インスタンス を PyObject _ New () や PyOject _ VarNew () で メモリ 確保 し た 場合 に は 、 通常 PyObject _ Del () を 使い 、 PyObject _ GC _ New () や PyObject _ GC _ VarNew () で 確保 し た 場合 に は PyObject _ GC _ Del () を 使い ます 。 サブ タイプ は この フィールド を 継承 し ます 。 
出力 関数 は 、 インスタンス が 実体 の ある ( real ) ファイル に 出力 さ れる 場合 に のみ 呼び出さ れ ます ; ( StringIO インスタンス の よう な ) 擬似 ファイル に 出力 さ れる 場合 に は 、 インスタンス の tp _ repr や tp _ str が 指す 関数 が 呼び出さ れ 、 文字 列 へ の 変換 を 行い ます 。 
また 、 tp _ print が NULL の 場合 に も これら の 関数 が 呼び出さ れ ます 。 
tp _ repr や tp _ str と 異なる 出力 を 生成 する よう な tp _ print は 、 決して 型 に 実装 し て は なり ませ ん 。 出力 関数 は PyObject _ Print () と 同じ シグネチャ : int tp _ print ( PyObject * self , FILE * file , int flags ) で 呼び出さ れ ます 。 
self 引数 は 出力 する インスタンス を 指し ます 。 
tp _ getattr オプション の フィールド です 。 
ポインタ で 、 get - attribute - string を 行う 関数 を 指し ます 。 この フィールド は 撤廃 さ れ て い ます 。 
この フィールド を 定義 する 場合 、 tp _ getattro 関数 と 同じ よう に 動作 し 、 属性 名 は Python 文字 列 オブジェクト で は なく C 文字 列 で 指定 する よう な 関数 を 指す よう に し なけれ ば なり ませ ん 。 
シグネチャ は PyObject _ GetAttrString () と 同じ です 。 この フィールド は tp _ getattro と共に サブ タイプ に 継承 さ れ ます : すなわち 、 サブ タイプ の tp _ getattr および tp _ getattro が 共に NULL の 場合 、 サブ タイプ は 基底 タイプ から tp _ getattr と tp _ getattro を 一緒 に 継承 し ます 。 
tp _ setattr オプション の フィールド です 。 
ポインタ で 、 set - attribute - string を 行う 関数 を 指し ます 。 この フィールド は 撤廃 さ れ て い ます 。 
この フィールド を 定義 する 場合 、 tp _ setattro 関数 と 同じ よう に 動作 し 、 属性 名 は Python 文字 列 オブジェクト で は なく C 文字 列 で 指定 する よう な 関数 を 指す よう に し なけれ ば なり ませ ん 。 
シグネチャ は PyObject _ SetAttrString () と 同じ です 。 この フィールド は tp _ setattro と共に サブ タイプ に 継承 さ れ ます : すなわち 、 サブ タイプ の tp _ setattr および tp _ setattro が 共に NULL の 場合 、 サブ タイプ は 基底 タイプ から tp _ setattr と tp _ setattro を 一緒 に 継承 し ます 。 
この 関数 は self が other より も 大きけれ ば 1 、 self と other の 値 が 等しけれ ば 0 、 self が other より 小さけれ ば - 1 を 返し ます 。 
この 関数 は 、 比較 操作 中 に エラー が 生じ た 場合 、 例外 状態 を セット し て - 1 を 返さ ね ば なり ませ ん 。 この フィールド は tp _ richcompare および tp _ hash と共に サブ タイプ に 継承 さ れ ます : すなわち 、 サブ タイプ の tp _ compare 、 tp _ richcompare および tp _ hash が 共に NULL の 場合 、 サブ タイプ は 基底 タイプ から tp _ compare 、 tp _ richcompare 、 tp _ hash の 三つ を 一緒 に 継承 し ます 。 
tp _ repr オプション の フィールド です 。 
ポインタ で 、 組み込み 関数 repr () 
理想 的 に は 、 この 関数 が 返す 文字 列 は 、 適切 な 環境 で eval () に 渡し た 場合 、 同じ 値 を 持つ オブジェクト に なる よう な 文字 列 で なけれ ば なり ませ ん 。 
tp _ hash オプション の フィールド です 。 
ポインタ で 、 組み込み 関数 hash () 
tp _ call オプション の フィールド です 。 
ポインタ で 、 オブジェクト の 呼び出し を 実装 し て いる 関数 を 指し ます 。 
オブジェクト が 呼び出し 可能 で ない 場合 に は NULL に し なけれ ば なり ませ ん 。 
シグネチャ は PyObject _ Call () と 同じ です 。 サブ タイプ は この フィールド を 継承 し ます 。 
tp _ str オプション の フィールド です 。 
ポインタ で 、 組み込み の 演算 str () を 実装 し て いる 関数 を 指し ます 。 
( str が 型 の 一つ に なっ た ため 、 str () は str の コンス トラクタ を 呼び出す こと に 注意 し て ください 。 
この フィールド が 設定 さ れ て い ない 場合 、 文字 列 表現 を 返す ため に は PyObject _ Repr () が 呼び出さ れ ます 。 サブ タイプ は この フィールド を 継承 し ます 。 
tp _ getattro オプション の フィールド です 。 
ポインタ で 、 get - attribute を 実装 し て いる 関数 を 指し ます 。 シグネチャ は PyObject _ GetAttr () と 同じ です 。 
対する 通常 の 属性 検索 を 実装 し て いる PyObject _ GenericGetAttr () を この フィールド に 設定 し て おく と 往々 に し て 便利 です 。 この フィールド は tp _ getattr と共に サブ タイプ に 継承 さ れ ます : すなわち 、 サブ タイプ の tp _ getattr および tp _ getattro が 共に NULL の 場合 、 サブ タイプ は 基底 タイプ から tp _ getattr と tp _ getattro を 一緒 に 継承 し ます 。 
tp _ setattro オプション の フィールド です 。 
ポインタ で 、 set - attribute を 行う 関数 を 指し ます 。 シグネチャ は PyObject _ SetAttr () と 同じ です 。 
対する 通常 の 属性 設定 を 実装 し て いる PyObject _ GenericSetAttr () を この フィールド に 設定 し て おく と 往々 に し て 便利 です 。 この フィールド は tp _ setattr と共に サブ タイプ に 継承 さ れ ます : すなわち 、 サブ タイプ の tp _ setattr および tp _ setattro が 共に NULL の 場合 、 サブ タイプ は 基底 タイプ から tp _ setattr と tp _ setattro を 一緒 に 継承 し ます 。 
バッファ インタフェース を 実装 し て いる オブジェクト に のみ 関連 する 、 一連 の フィールド 群 が 入っ た 別 の 構造 体 を 指す ポインタ です 。 
構造 体内 の 各 フィールド は `` バッファ オブジェクト 構造 体 '' ( 10 . 7 節 ) で 説明 し ます 。 tp _ as _ buffer フィールド 自体 は 継承 さ れ ませ ん が 、 フィールド 内 に 入っ て いる フィールド は 個別 に 継承 さ れ ます 。 
この フィールド は 様々 な フラグ から なる ビット マスク です 。 
いくつ か の フラグ は 、 特定 の 状況 において 変則 的 な セマンティクス が 適用 さ れる こと を 示し ます ; その他 の フラグ は 、 型 オブジェクト ( あるいは tp _ as _ number 、 tp _ as _ sequence 、 tp _ as _ mapping 、 および tp _ as _ buffer が 参照 し て いる 拡張 機能 構造 体 : extention structure ) の 特定 の フィールド の うち 、 過去 から 現在 まで ずっと 存在 し て いる わけ で は ない もの が 有効 に なっ て いる こと を 示す ため に 使わ れ ます ; フラグ ビット が クリア で あれ ば 、 フラグ が 保護 し て いる フィールド に は アクセス し ない 代わり に 、 その 値 は ゼロ か NULL に なっ て いる と みなさ なけれ ば なり ませ ん 。 この フィールド の 継承 は 複雑 です 。 
ほとんど の フラグ ビット は 個別 に 継承 さ れ ます 。 つまり 、 基底 タイプ で ある フラグ ビット が セット さ れ て いる 場合 、 サブ タイプ は その フラグ ビット を 継承 し ます 。 
機能 拡張 の ため の 構造 体 に関する フラグ ビット は 、 その 機能 拡張 構造 体 が 継承 さ れる とき に 限定 し て 継承 さ れ ます 。 すなわち 、 基底 タイプ の フラグ ビット の 値 は 、 機能 拡張 構造 体 へ の ポインタ と 一緒 に サブ タイプ に コピー さ れ ます 。 
PyType _ HasFeature () マクロ は 型 と フラグ 値 、 tp および f を とり 、 
が 非 ゼロ か どう か 調べ ます 。 
この ビット が セット さ れ て いれ ば 、 tp _ as _ buffer が 参照 する PyBufferProcs 構造 体 に は bf _ getcharbuffer フィールド が あり ます 。 
この ビット が セット さ れ て いれ ば 、 tp _ as _ sequence が 参照 する PySequenceMethods 構造 体 に は sq _ contains フィールド が あり ます 。 
この ビット は 旧式 の もの です 。 
この シンボル が 指し示し て い た ビット は もはや 使わ れ て い ませ ん 。 
シンボル の 現在 の 定義 は ゼロ に なっ て い ます 。 
この ビット が セット さ れ て いれ ば 、 tp _ as _ sequence が 参照 する PySequenceMethods 構造 体 、 および tp _ as _ number が 参照 する PyNumberMethods 構造 体 に は in - place 演算 に関する フィールド が 入っ て い ます 。 
具体 的 に 言う と 、 PyNumberMethods 構造 体 は フィールド nb _ inplace _ add 、 nb _ inplace _ subtract 、 nb _ inplace _ multiply 、 nb _ inplace _ divide 、 nb _ inplace _ remainder 、 nb _ inplace _ power 、 nb _ inplace _ lshift 、 nb _ inplace _ rshift 、 nb _ inplace _ and 、 nb _ inplace _ xor 、 および nb _ inplace _ or を 持つ こと に なり ます ; また 、 PySequenceMethods 構造 体 は フィールド sq _ inplace _ concat および sq _ inplace _ repeat を 持つ こと に なり ます 。 Py _ TPFLAGS _ CHECKTYPES 
この ビット が セット さ れ て いれ ば 、 tp _ as _ number が 参照 する PyNumberMethods 構造 体内 で 定義 さ れ て いる 二 項 演算 子 および 三 項 演算 子 は 任意 の オブジェクト 型 を 非 演算 子 に とる よう に なり 、 必要 に 応じ て 引数 の 型 変換 を 行い ます 。 
この ビット が クリア なら 、 演算 子 は 全て の 引数 が 現在 の オブジェクト 型 と 同じ で ある よう 要求 し 、 演算 の 呼び出し 側 は 演算 に 先立っ て 型 変換 を 行う もの と 想定 し ます 。 
対象 と なる 演算 子 は nb _ add 、 nb _ subtract 、 nb _ multiply 、 nb _ divide 、 nb _ remainder 、 nb _ divmod 、 nb _ power 、 nb _ lshift 、 nb _ rshift 、 nb _ and 、 nb _ xor 、 および nb _ or です 。 
この ビット が セット さ れ て いれ ば 、 型 オブジェクト に は tp _ richcompare フィールド 、 そして tp _ traverse および tp _ clear フィールド が あり ます 。 
この ビット が セット さ れ て いれ ば 、 構造 体 に は tp _ weaklistoffset フィールド が 定義 さ れ て い ます 。 
tp _ weaklistoffset フィールド の 値 が ゼロ より 大きけれ ば 、 この 型 の インスタンス は 弱 参照 で 参照 でき ます 。 
この ビット が セット さ れ て いれ ば 、 型 オブジェクト に は tp _ iter および tp _ iternext フィールド が あり ます 。 
この ビット が セット さ れ て いれ ば 、 型 オブジェクト は Python 2 . 2 以降 で 定義 さ れ て いる 新た な フィールド : tp _ methods 、 tp _ members 、 tp _ getset 、 tp _ base 、 tp _ dict 、 tp _ descr _ get 、 tp _ descr _ set 、 tp _ dictoffset 、 tp _ init 、 tp _ alloc 、 tp _ new 、 tp _ free 、 tp _ is _ gc 、 tp _ bases 、 tp _ mro 、 tp _ cache 、 tp _ subclasses 、 および tp _ weaklist が あり ます 。 
型 オブジェクト 自体 が ヒープ に メモリ 確保 さ れる 場合 に セット さ れる ビット です 。 
型 オブジェクト 自体 が ヒープ に メモリ 確保 さ れる 場合 、 インスタンス の ob _ type フィールド は 型 オブジェクト へ の 参照 と みなさ れ ます 。 
この 場合 、 新た な インスタンス を 生成 する 度 に 型 オブジェクト を INCREF し 、 インスタンス を 解放 する たび に DECREF し ます ( サブ タイプ の インスタンス に は 適当 さ れ ませ ん ; インスタンス が ob _ type で 参照 し て いる 型 だけ が INCREF および DECREF さ れ ます )。 Py _ TPFLAGS _ BASETYPE 
型 を 別 の 型 の 基底 タイプ として 使える 場合 に セット さ れる ビット です 。 
この ビット が クリア なら ば 、 この 型 の サブ タイプ は 生成 でき ませ ん ( Java における " final " クラス に 似 た クラス に なり ます )。 
型 オブジェクト が PyType _ Ready () で 完全 に 初期 化 さ れる と セット さ れる ビット です 。 
PyType _ Ready () による 型 オブジェクト の 初期 化 処理 中 に セット さ れる ビット です 。 
オブジェクト が ガベージコレクション ( GC ) を サポート する 場合 に セット さ れる ビット です 。 
この ビット が セット さ れ て いる 場合 、 インスタンス は PyObject _ GC _ New () を 使っ て 生成 し 、 PyObject _ GC _ Del () を 使っ て 破壊 し なけれ ば なり ませ ん 。 
詳しい 情報 は XXX 節 の ガベージコレクション に関する 説明 中 に あり ます 。 
この ビット は また 、 GC に 関連 する フィールド tp _ traverse および tp _ clear が 型 オブジェクト 内 に 存在 する こと を 示し ます ; しか し 、 これら の フィールド は Py _ TPFLAGS _ HAVE _ GC が クリア で も Py _ TPFLAGS _ HAVE _ RICHCOMPARE が セット さ れ て いる 場合 に は 存在 し ます 。 
型 オブジェクト および 拡張 機能 構造 体 の 特定 の フィールド の 存在 の 有無 に 関連 する 全て の ビット から なる ビット マスク です 。 
オプション の フィールド です 。 
ポインタ で 、 この 型 オブジェクト の docstring を 与える NUL 終端 さ れ た C の 文字 列 を 指し ます 。 
この 値 は 型 オブジェクト と 型 の インスタンス における __ doc __ 属性 として 公開 さ れ ます 。 サブ タイプ は この フィールド を 継承 し ませ ん 。 
以下 の 三つ の フィールド は 、 Py _ TPFLAGS _ HAVE _ RICHCOMPARE フラグ ビット が セット さ れ て いる 場合 に のみ 存在 し ます 。 
tp _ traverse オプション の フィールド です 。 
ポインタ で 、 ガベージコレクタ の ため の トラバーサル 関数 ( traversal function ) を 指し ます 。 
Py _ TPFLAGS _ HAVE _ GC が セット さ れ て いる 場合 に のみ 使わ れ ます 。 
ガベージコレクション に関する 詳細 は 10 . 9 に あり ます 。 この フィールド は tp _ clear および Py _ TPFLAGS _ HAVE _ GC フラグ ビット と 一緒 に 継承 さ れ ます : フラグ ビット 、 tp _ traverse 、 および tp _ clear の 値 が サブ タイプ で 全て ゼロ に なっ て おり 、 かつ サブ タイプ で Py _ TPFLAGS _ HAVE _ RICHCOMPARE フラグ ビット が セット さ れ て いる 場合 に 、 基底 タイプ から 値 を 継承 し ます 。 
tp _ clear オプション の フィールド です 。 
ポインタ で 、 ガベージコレクタ における 消去 関数 ( clear function ) を 指し ます 。 
この 関数 は 、 要求 さ れ た 比較 演算 が 真 を 返す 場合 に 1 を 、 偽 を 返す 場合 に 0 を 返さ なけれ ば なり ませ ん 。 
比較 
次 の フィールド は 、 Py _ TPFLAGS _ HAVE _ WEAKREFS フラグ ビット が セット さ れ て いる 場合 に のみ 存在 し ます 。 
型 の インスタンス が 弱 参照 可能 な 場合 、 この フィールド は ゼロ より も 大きな 数 に なり 、 インスタンス 構造 体 における 弱 参照 リスト の 先頭 を 示す オフセット が 入り ます ( GC ヘッダ が ある 場合 に は 無視 し ます ); この オフセット 値 は PyObject _ ClearWeakRefs () および PyWeakref _*() 関数 が 利用 し ます 。 
次 の 二つ の フィールド は 、 Py _ TPFLAGS _ HAVE _ CLASS フラグ ビット が セット さ れ て いる 場合 に のみ 存在 し ます 。 
An optional pointer to a function that returns an iterator for theobject . Its presence normally signals that the instances of thistype are iterable ( although sequences may be iterable without thisfunction , and classic instances always have this function , even ifthey don ' t define an __ iter __() method ). This function has the same signature asPyObject _ GetIter (). サブ タイプ は この フィールド を 継承 し ます 。 
tp _ iternext オプション の フィールド です 。 
ポインタ で 、 イテレータ において 次 の 要素 を 返す か 、 イテレータ の 要素 が なくなる と StopIteration を 送出 する 関数 を 指し ます 。 
次 の tp _ weaklist まで の フィールド は 、 Py _ TPFLAGS _ HAVE _ CLASS フラグ ビット が セット さ れ て いる 場合 に のみ 存在 し ます 。 
tp _ methods オプション の フィールド です 。 
tp _ members オプション の フィールド です 。 
typedef PyObject *(* getter )( PyObject *, void *); typedef int (* setter )( PyObject *, PyObject *, void *); typedef struct PyGetSetDef { char * name ; /* 属性 名 */ getter get ; /* 属性 の get を 行う C 関数 */ setter set ; /* 属性 の set を 行う C 関数 */ char * doc ; /* オプション の docstring */ void * closure ; /* オプション の get / set 関数 用 追加 データ */} PyGetSetDef ; 
オプション の フィールド です 。 
ポインタ で 、 型 に関する プロパティ を 継承 する 基底 タイプ へ の ポインタ です 。 
この フィールド の レベル で は 、 単 継承 ( single inheritance ) だけ が サポート さ れ て い ます ; 多重 継承 は メタ タイプ の 呼び出し による 動的 な 型 オブジェクト の 生成 を 必要 と し ます 。 
型 の 辞書 は PyType _ Ready () によって この フィールド に 収め られ ます 。 
この フィールド は 通常 、 PyType _ Ready () を 呼び出す 前 に NULL に 初期 化 し て おか ね ば なり ませ ん ; あるいは 、 型 の 初期 属性 の 入っ た 辞書 で 初期 化 し て おい て も かまい ませ ん 。 
PyType _ Ready () が 型 を ひとたび 初期 化 する と 、 型 の 新た な 属性 を この 辞書 に 追加 できる の は 、 属性 が (__ add __() の よう な ) オーバロード 用 演算 で ない とき だけ です 。 サブ タイプ は この フィールド を 継承 し ませ ん ( が 、 この 辞書 内 で 定義 さ れ て いる 属性 は 異なる メカニズム で 継承 さ れ ます )。 
tp _ descr _ get オプション の フィールド です 。 
ポインタ で 、 " デスクリプタ get " 関数 を 指し ます 。 
XXX blah , blah . サブ タイプ は この フィールド を 継承 し ます 。 
tp _ descr _ set オプション の フィールド です 。 
ポインタ で 、 " デスクリプタ set " 関数 を 指し ます 。 
tp _ dictoffset 型 の インスタンス に インスタンス 変数 の 入っ た 辞書 が ある 場合 、 この フィールド は 非 ゼロ の 値 に なり 、 型 の インスタンス データ 構造 体 における インスタンス 変数 辞書 へ の オフセット が 入り ます ; この オフセット 値 は PyObject _ GenericGetAttr () が 使い ます 。 
この フィールド を tp _ dict と 混同 し ない で ください ; tp _ dict は 型 オブジェクト 自体 の 属性 の ため の 辞書 です 。 この フィールド の 値 が ゼロ より 大きけれ ば 、 値 は インスタンス 構造 体 の 先頭 から の オフセット を 表し ます 。 
値 が ゼロ より 小さけれ ば 、 インスタンス 構造 体 の 末尾 から の オフセット を 表し ます 。 
負 の オフセット を 使う コスト は 比較的 高く つく ので 、 インスタンス 構造 体 に 可変長 の 部分 が ある とき のみ 使う べき です 。 
例えば 、 str や tuple の サブ タイプ に インスタンス 辞書 を 追加 する 場合 に は 、 負 の オフセット を 使い ます 。 この 場合 、 たとえ 辞書 が 基本 の オブジェクトレイアウト に 含ま れ て い なく て も 、 tp _ basicsize フィールド は 追加 さ れ た 辞書 を 考慮 に いれ なけれ ば なら ない ので 注意 し て ください 。 
ポインタ サイズ が 4 バイト の システム で は 、 構造 体 の 最 後尾 に 辞書 が 宣言 さ れ て いる こと を 示す 場合 、 tp _ dictoffset を - 4 に し なけれ ば なり ませ ん 。 tp _ dictoffset が 負 の 場合 、 インスタンス における 実際 の 辞書 の オフセット は 以下 の よう に し て 計算 さ れ ます : 
ここ で 、 tp _ basicsize 、 tp _ itemsize および tp _ dictoffset は 型 オブジェクト から 取り出さ れ 、 ob _ size は インスタンス から 取り出さ れ ます 。 
長 整数 は 符号 を 記憶 する のに ob _ size の 符号 を 使う ため 、 ob _ size は 絶対 値 を 使い ます 。 ( この 計算 を 自分 で 行う 必要 は まったく あり ませ ん ; _ PyObject _ GetDictPtr () が やっ て くれ ます 。 
) サブ タイプ は この フィールド を 継承 し ます が 、 以下 の 規則 が ある ので 読ん で ください 。 サブ タイプ は この オフセット 値 を オーバライド でき ます ; 従っ て 、 サブ タイプ で は 辞書 の オフセット が 基底 タイプ と は 異なる 場合 が あり ます 。 
辞書 へ の オフセット 常に tp _ dictoffset で 分かる はず な ので 、 この こと は 問題 に は なら ない はず です 。 class 文 で 定義 さ れ た 型 に __ slots __ 宣言 が 全く なく 、 かつ 基底 タイプ の 全て に インスタンス 変数 辞書 が ない 場合 、 辞書 の スロット を インスタンスデータレイアウト 構造 体 に 追加 し 、 スロット の オフセット を tp _ dictoffset に 設定 し ます 。 
tp _ init オプション の フィールド です 。 
ポインタ で 、 インスタンス 初期 化 関数 を 指し ます 。 
tp _ new が 元 の 型 の サブ タイプ で ない 別 の 型 を 返す 場合 、 tp _ init は 全く 呼び出さ れ ませ ん ; tp _ new が 元 の 型 の サブ タイプ の インスタンス を 返す 場合 、 サブ タイプ の tp _ init が 呼び出さ れ ます 。 
( VERSION NOTE : ここ に 書か れ て いる 内容 は 、 Python 2 . 2 . 1 以降 で の 実装 に関する もの です 。 
Python 2 . 2 で は 、 tp _ init は NULL で ない 限り tp _ new が 返す 全て の オブジェクト に対して 常に 呼び出さ れ ます 。 ) not NULL .) サブ タイプ は この フィールド を 継承 し ます 。 
関数 の シグネチャ は 
PyObject * tp _ alloc ( PyTypeObject * self , int nitems ) です 。 
この 関数 の 目的 は 、 メモリ 確保 を メモリ 初期 化 から 分離 する こと に あり ます 。 
この 関数 は 、 インスタンス 用 の 的確 な サイズ を 持ち 、 適切 に バイト 整列 さ れ 、 ゼロ で 初期 化 さ れ 、 ただし ob _ refcnt を 1 に セット さ れ 、 ob _ type が 型 引数 ( type argument ) に セット さ れ て いる よう な メモリ ブロック を 返さ ね ば なり ませ ん 。 
静的 に 定義 する 型 の 場合 でも 、 PyType _ GenericAlloc () を 推奨 し ます 。 
この フィールド が NULL を 指し て いる 型 で は 、 型 を 呼び出し て 新た な インスタンス を 生成 でき ませ ん ; こうした 型 で は 、 おそらく ファクトリ 関数 の よう に 、 インスタンス を 生成 する 他 の 方法 が ある はず です 。 関数 の シグネチャ は 
PyObject * tp _ new ( PyTypeObject * subtype , PyObject * args , PyObject * kwds ) です 。 
引数 subtype は 生成 する オブジェクト の 型 です ; args および kwds 引数 は 、 型 を 呼び出す とき の 固定 引数 および キーワード 引数 です 。 
サブ タイプ は tp _ new 関数 を 呼び出す とき に 使う 型 と 等価 という わけ で は ない ので 注意 し て ください ; tp _ new 関数 を 呼び出す とき に 使う 型 ( と 無関係 で は ない ) サブ タイプ の こと も あり ます 。 tp _ new 関数 は 
subtype - tp _ alloc ( subtype , nitems ) を 呼び出し て オブジェクト の メモリ 領域 を 確保 し 、 初期 化 で 本当に 必要 と さ れる 処理 だけ を 行い ます 。 
省略 し たり 繰り返し たり し て も 問題 の ない 初期 化 処理 は tp _ init ハンドラ 内 に 配置 し なけれ ば なり ませ ん 。 
後者 が 例外 に なっ て いる の は 、 旧式 の 拡張 型 が Python 2 . 2 で リンク さ れ た とき に 呼び出し 可能 オブジェクト に なら ない よう に する ため の 予防 措置 です 。 
tp _ free オプション の フィールド です 。 
ポインタ で 、 インスタンス の メモリ 解放 関数 を 指し ます 。 この 関数 の シグネチャ は 少し 変更 さ れ て い ます ; Python 2 . 2 および 2 . 2 . 1 で は 、 シグネチャ は destructor : 
でし た が 、 Python 2 . 3 以降 で は 、 シグネチャ は freefunc : 
tp _ is _ gc オプション の フィールド です 。 
ポインタ で 、 ガベージコレクタ から 呼び出さ れる 関数 を 指し ます 。 ガベージコレクタ は 、 オブジェクト が ガベージ として 収集 可能 か どう か を 知る 必要 が あり ます 。 
これ を 知る に は 、 通常 は オブジェクト の 型 の tp _ flags フィールド を 見 て 、 Py _ TPFLAGS _ HAVE _ GC フラグ ビット を 調べる だけ で 十分 です 。 
しかし 、 静的 な メモリ 確保 と 動的 な メモリ 確保 が 混じっ て いる インスタンス を 持つ よう な 型 や 、 静的 に メモリ 確保 さ れ た インスタンス は 収集 でき ませ ん 。 
こうした 型 で は 、 この フィールド に 関数 を 定義 し なけれ ば なり ませ ん ; 関数 は インスタンス が 収集 可能 の 場合 に は 1 を 、 収集 不能 の 場合 に は 0 を 返さ ね ば なり ませ ん 。 シグネチャ は 
int tp _ is _ gc ( PyObject * self ) です 。 
( 上記 の よう な 型 の 例 は 、 型 オブジェクト 自体 です 。 
メタ タイプ PyType _ Type は 、 型 の メモリ 確保 が 静的 か 動的 か を 区別 する ため に この 関数 を 定義 し て い ます 。 ) サブ タイプ は この フィールド を 継承 し ます 。 
( VERSION NOTE : Python 2 . 2 で は 、 この フィールド は 継承 さ れ ませ ん でし た 。 
2 . 2 . 1 以降 の バージョン から 継承 さ れる よう に なり まし た 。 
基底 型 から なる タプル です 。 class 文 で 生成 さ れ た クラス の 場合 この フィールド が セット さ れ ます 。 
静的 に 定義 さ れ て いる 型 の 場合 に は 、 この フィールド は NULL に なり ます 。 この フィールド は 継承 さ れ ませ ん 。 
基底 クラス 群 を 展開 し た 集合 が 入っ て いる タプル です 。 集合 は 該当 する 型 自体 から はじまり 、 object で 終わり ます 。 
使用 さ れ て い ませ ん 。 
継承 さ れ ませ ん 。 
内部 で 使用 する ため だけ の もの です 。 
サブ クラス へ の 弱 参照 から なる リスト です 。 
サブ タイプ は これら の フィールド を 継承 し ませ ん 。 
メモリ 確保 の 回数 です 。 
メモリ 解放 の 回数 です 。 
同時に メモリ 確保 できる 最大 オブジェクト 数 です 。 
tp _ allocs フィールド が 非 ゼロ の 、 ( リンクリスト の ) 次 の 型 オブジェクト を 指す ポインタ です 。 
また 、 Python の ガベージコレクション で は 、 tp _ dealloc を 呼び出す の は オブジェクト を 生成 し た スレッド だけ で は なく 、 任意 の Python スレッド かも しれ ない という 点 に も 注意 し て 下さい 。 ( オブジェクト が 循環 参照 の 一部 の 場合 、 任意 の スレッド の ガベージコレクション によって 解放 さ れ て しまう かも しれ ませ ん )。 
Python API 側 から みれ ば 、 tp _ dealloc を 呼び出す スレッド は グローバル インタプリタ ロック ( GIL : Global Interpreter Lock ) を 獲得 する ので 、 これ は 問題 で は あり ませ ん 。 しかしながら 、 削除 さ れよ う と し て いる オブジェクト が 何らかの C や C ++ ライブラリ 由来 の オブジェクト を 削除 する 場合 、 tp _ dealloc を 呼び出す スレッド の オブジェクト を 削除 する こと で 、 ライブラリ の 仮定 し て いる 何らかの 規約 に 違反 し ない よう に 気 を 付ける 必要 が あり ます 。 
組み込み 型 を 記述 する 際 に 用い られる 、 オブジェクト を 表す C 構造 体 です 。 
型 オブジェクト 自身 の 型 オブジェクト です ; Python レイヤ における types . TypeType と 同じ オブジェクト です 。 
オブジェクト o が 型 オブジェクト の 場合 に 真 を 返し ます 。 標準 型 オブジェクト から 導出 さ れ た サブ タイプ ( subtype ) の インスタンス も 含み ます 。 
その他 の 場合 に は 偽 を 返し ます 。 
オブジェクト o が 型 オブジェクト の 場合 に 真 を 返し ます 。 
型 オブジェクト o に 、 型 機能 feature が 設定 さ れ て いる 場合 に 真 を 返し ます 。 
型 機能 は 各々 単 一 ビット の フラグ で 表さ れ ます 。 
型 オブジェクト が o が 循環 参照 検出 を サポート し て いる 場合 に 真 を 返し ます ; この 関数 は 型 機能 フラグ Py _ TPFLAGS _ HAVE _ GC の 設定 状態 を チェック し ます 。 バージョン 2 . 0 で 新た に 追加 さ れ た 仕様 です 。 
a が b の サブ タイプ の 場合 に 真 を 返し ます 。 
型 オブジェクト の 後始末 処理 ( finalize ) を 行い ます 。 
この 関数 は 全て の オブジェクト で 初期 化 を 完了 する ため に 呼び出さ れ なく て は なり ませ ん 。 
この 関数 は 、 基底 クラス 型 から 継承 し た スロット を 型 オブジェクト に 追加 する 役割 が あり ます 。 
成功 し た 場合 に は 0 を 返し 、 エラー の 場合 に は - 1 を 返し て 例外 情報 を 設定 し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
2 . 3 . 4 . 1 整数 型 における ビット 文字 列 演算 
Python は コンテナ の 内容 にわたって 反復 処理 を 行う 概念 を サポート し て い ます 。 
この 概念 は 2 つ の 別々 の メソッド を 使っ て 実装 さ れ て い ます ; これら の メソッド は ユーザ 定義 の クラス で 反復 を 行える よう に する ため に 使わ れ ます 。 後 に 詳しく 述べる シーケンス 型 は すべて 反復 処理 メソッド を サポート し て い ます 。 
以下 は コンテナ オブジェクト に 反復 処理 を サポート さ せる ため に 定義 し なけれ ば なら ない メソッド です : 
イテレータオブジェクト は 以下 で 述べる イテレータプロトコル を サポート する 必要 が あり ます 。 
ある コンテナ が 異なる 形式 の 反復 処理 を サポート する 場合 、 それら の 反復 処理 形式 の イテレータ を 特定 的 に 要求 する よう な メソッド を 追加 する こと が でき ます ( 複数 の 形式 で の 反復 処理 を サポート する よう な オブジェクト として 木 構造 の 例 が あり ます 。 
木 構造 は 幅優先 走査 と 深 さ 優先 走査 の 両方 を サポート し ます )。 
この メソッド は Python / C API において Python オブジェクト を 表す 型 構造 体 の tp _ iter スロット に 対応 し ます 。 
イテレータオブジェクト 自体 は 以下 の 2 の メソッド を サポート する 必要 が あり ます 。 これら の メソッド は 2 つ 合わせ て イテレータプロトコル を 成し ます : 
イテレータオブジェクト 自体 を 返し ます 。 
この メソッド は コンテナ と イテレータ の 両方 を for および in 文 で 使える よう に する ため に 必要 です 。 
この メソッド は Python / C API において Python オブジェクト を 表す 型 構造 体 の tp _ iter スロット に 対応 し ます 。 
コンテナ 内 の 次 の 要素 を 返し ます 。 
もう 要素 が 残っ て い ない 場合 、 例外 StopIteration を 送出 し ます 。 
この メソッド は Python / C API において Python オブジェクト を 表す 型 構造 体 の tp _ iternext スロット に 対応 し ます 。 
Python で は 、 いくつ か の イテレータオブジェクト を 定義 し て い ます 。 これら は 一般 的 および 特殊 化 さ れ た シーケンス 型 、 辞書 型 、 そして 他 の さらに 特殊 化 さ れ た 形式 を サポート し ます 。 
特殊 型 で ある こと は イテレータプロトコル の 実装 が 特殊 に なる こと 以外 は 重要 な こと で は あり ませ ん 。 この プロトコル の 趣旨 は 、 一度 イテレータ の next () メソッド が StopIteration 例外 を 送出 し た 場合 、 以降 の 呼び出し で も ずっと 例外 を 送出 し つづける ところ に あり ます 。 
この 特性 に 従わ ない よう な 実装 は 変則 で ある と みなさ れ ます ( この 制限 は Python 2 . 3 で 追加 さ れ まし た ; Python 2 . 2 で は 、 この 規則 に 従う と 多く の イテレータ が 変則 と なり ます )。 
Python における ジェネレータ ( generator ) は 、 イテレータプロトコル を 実装 する 簡便 な 方法 を 提供 し ます 。 
コンテナ オブジェクト の __ iter __() メソッド が ジェネレータ として 実装 さ れ て いれ ば 、 メソッド は __ iter __() および next () メソッド を 提供 する イテレータオブジェクト ( 技術 的 に は ジェネレータオブジェクト ) を 自動的 に 返し ます 。 
2 . 3 . 7 set （ 集合 ） 型 
他 の コレクション と 同様 、 sets は 
、 len ( set ) および for x in set 
順序 を 持た ない コレクション として 、 sets は 要素 の 位置 と （ 要素 の ） 挿入 位置 を 保持 し ませ ん 。 
したがって 、 sets は インデックス 、 スライス 、 その他 の 数列 的 な 振る舞い を サポート し ませ ん 。 
set および frozenset という 、 2 つ の 組み込み set 型 が あり ます 。 set は 変更 可能 な -- add () や remove () の よう な メソッド を 使っ て 内容 を 変更 でき ます 。 
変更 可能 な ため 、 ハッシュ 値 を 持た ず 、 また 辞書 の キー や 他 の set の 要素 として 用いる こと が でき ませ ん 。 
set s の 基数 
s の メンバ に x が ある か 調べる 
s の メンバ に x が ない か 調べる 
t に s の 全て の 要素 が 含ま れる か 調べる 
s に t の 全て の 要素 が 含ま れる か 調べる 
s と t に 含ま れる すべて の 要素 を 持っ た 新しい set を 作成 
s と t 共通 に 含ま れる 要素 を 持っ た 新しい set を 作成 
s に は 含ま れる が t に は 含ま れ ない 要素 を 持っ た 新しい set を 作成 
s と t の うち 、 両者 に は 含ま れ ない 要素 を 持っ た 新しい set を 作成 
s の 浅い コピー を 持っ た 新しい set を 作成 
注意 す べき 点 として 、 演算 子 で は ない バージョン の メソッド union ()、 intersection ()、+ difference ()、 symmetric _ difference ()、 issubset () および issuperset () は どの 種類 の iterable で も 引数 として 受け入れ ます 。 
対照 的 に 、 （ それぞれ の メソッド に ） 対応 する 演算 子 は 引数 に sets 型 を 要求 し ます 。 
set の インスタンス は frozenset の インスタンス と 、 その メンバ を 基 に 比較 さ れ ます 。 
例えば " set (' abc ') == frozenset (' abc ')" は True を 返し ます 。 
サブ セット と 同一 性 の 比較 は 完全 な 順序 付け 関数 によって 一般 化 さ れ ませ ん 。 
例えば 、 どの よう な 連結 さ れ て い ない 2 つ の sets が 、 等しく も なく 、 もう 一方 の サブ セット で も なけれ ば 、 以下 の コード の 全て に False を 返し ます 。 
以下 の 表 は set で 可能 な リスト 操作 です 。 これら の 操作 は 変更 不能 な frozenset の インスタンス に は 適用 さ れ ませ ん 。 
t の 要素 を 追加 し た set s を 返し ます 。 
t に も 含ま れる 要素 を 保持 し た set s を 返し ます 。 
t に 含ま れる 要素 を 削除 し た set s を 返し ます 。 
s と t に 含ま れ て いる が 、 共通 し て 含ま れ て い ない 要素 を 持っ た set s を 返し ます 。 
set s に 要素 x を 追加 し ます 
s . remove ( x ) set s から 要素 x を 削除 し ます 。 
要素 が 存在 し ない 場合 は KeyError を 投げ ます 
set s に 要素 x が 存在 し て いれ ば 削除 し ます 
s から 、 任意 の 要素 を 返し て その 要素 を 削除 し ます 。 空 の 場合 は KeyError を 投げ ます 
set s から 全て の 要素 を 削除 し ます 
注意 す べき 点 として 、 演算 子 で は ない バージョン の メソッド update ()、 intersection _ update ()、 difference _ update () および symmetric _ difference _ update () は 、 どんな iterable で も 引数 として 受け入れ ます 。 
Python / C API において 重要 な 役割 を 持つ データ 型 は 、 PyObject 型 の 他 に も いくつ か あり ます ; ほとんど は int , long , double , および char * といった 、 単なる C の データ 型 です 。 
また 、 モジュール で 公開 し て いる 関数 を 列挙 する 際 に 用い られる 静的 な テーブル や 、 新しい オブジェクト 型 における データ 属性 を 記述 し たり 、 複素数 の 値 を 記述 し たり する ため に 構造 体 を いくつ か 使っ て い ます 。 
これら の 型 について は 、 その 型 を 使う 関数 とともに 説明 し て ゆき ます 。 
2 . 3 . 10 . 2 クラス および クラス インスタンス 
関数 オブジェクト は 関数 定義 によって 生成 さ れ ます 。 
関数 オブジェクト に対する 唯一 の 操作 は 、 それ を 呼び出す こと です : 
func ( argument - list ). 関数 オブジェクト に は 実際 に は 2 つ の 種 : 組み込み 関数 と ユーザ 定義 関数 が あり ます 。 
両方 とも 同じ 操作 ( 関数 の 呼び出し ) を サポート し ます が 、 実装 は 異なる ので 、 オブジェクト の 型 も 異なり ます 。 より 詳しい 情報 は 
を 参照 し て ください 。 
この 情報 について は 
を 読ん で 下さい 。 
この オブジェクト で は スタック フレーム 、 トレース バック 、 スライス オブジェクト を 記述 し て い ます 。 
マップ 型 ( mapping ) オブジェクト は 変更 不可能 な 値 を 任意 の オブジェクト に 対応付け ます 。 
対応付け 自体 は 変更 可能 な オブジェクト です 。 
現在 の ところ は 標準 の マップ 型 、 dictionary だけ です 。 
辞書 の キー に は ほとんど 任意 の 値 を つかう こと が でき ます 。 
a 内 の 要素 の 数 です 
キー k を 持つ a の 要素 です 
a [ k ] を v に 設定 し ます 
a から 
a [ k ] を 削除 し ます 
a から 全て の 要素 を 削除 し ます 
a の ( 浅い ) コピー です 
a に キー k が あれ ば True 、 そう で なけれ ば False です 
a . has _ key ( k ) と 同じ です 
not a . has _ key ( k ) と 同じ です 
a における ( key , value ) ペア の リスト の コピー です 
a における キー の リスト の コピー です 
b によって key / value ペア を 更新 （ 上書き ） 
seq から キー を 作り 、 値 が value で ある よう な 、 新しい 辞書 を 作成 し ます 
a における 値 の リスト の コピー です 
もし 
なら 
a [ k ]、 そう で なけれ ば x を 返し ます 
a [ k ]、 そう で なけれ ば x ( が 与え られ て い た 場合 ) を 返し ます 
a [ k ] 、 そう で なけれ ば x を 返し て k を 除去 し ます 
任意 の ( key , value ) ペア を 除去 し て 返し ます 
( key , value ) ペア にわたる イテレータ を 返し ます 
マップ の キー 列 にわたる イテレータ を 返し ます 
マップ の 値 列 にわたる イテレータ を 返し ます 
k が マップ 内 に ない 場合 、 例外 KeyError を 送出 し ます 。 
これ により 、 ( value , key ) の ペア を zip () を 使っ て : " pairs = zip ( a . values (), a . keys ())" の よう に 生成 する こと が でき ます 。 
iterkeys () および itervalues () メソッド の 間 で も 同じ 関係 が 成り立ち ます :" pairs = zip ( a . itervalues (), a . iterkeys ())" は pairs と 同じ 値 に なり ます 。 同じ リスト を 生成 する もう 一つ の 方法 は " pairs = [( v , k ) for ( k , v ) in a . iteritems ()]" です 。 
k が マップ 中 に なく て も 例外 を 送出 せ ず 、 代わり に x を 返し ます 。 x は オプション です ; x が 与え られ て おら ず 、 かつ k が マップ 中 に なけれ ば 、 None が 返さ れ ます 。 
setdefault () は get () に 似 て い ます が 、 k が 見つから なかっ た 場合 、 x が 返さ れる と 同時に 辞書 の k に対する 値 として 挿入 さ れ ます 。 デフォルト で x は None です 。 
popitem () は 、 集合 アルゴリズム で よく 行わ れる よう な 、 辞書 を 取り崩し ながら の 反復 を 行う の に 便利 です 。 
fromkeys () は 、 新しい 辞書 を 返す クラス メソッド です 。 value の デフォルト 値 は None です 。 
pop () は 、 デフォルト 値 が 渡さ れ ず 、 かつ 、 キー が 見つから ない 場合 に 、 KeyError を 送出 し ます 。 
update () は その他 の マッピング オブジェクト や 反復 可能 な キー / 値 の ペア （ タプル や その他 2 つ の 要素 を 持つ 反復 可能 な 要素 ） を 受け入れ ます 。 
メソッド は 属性 表記 を 使っ て 呼び出さ れる 関数 です 。 メソッド に は 二つ の 種類 が あり ます : ( リスト へ の append () の よう な ) 組み込み メソッド と 、 クラス インスタンス の メソッド です 。 
組み込み メソッド は それ を サポート する 型 と 一緒 に 記述 さ れ て い ます 。 実装 で は 、 クラス インスタンス の メソッド に 2 つ の 読み込み 専用 の 属性 を 追加 し て い ます : 
m . im _ self は メソッド が 操作 する オブジェクト で 、 
m . im _ func は メソッド を 実装 し て いる 関数 です 。 
m ( arg - 1 , arg - 2 , ..., arg - n ) の 呼び出し は 、 
m . im _ func ( m . im _ self , arg - 1 , arg - 2 , ..., arg - n ) の 呼び出し と 完全 に 等価 です 。 
クラスインスタンスメソッド に は 、 メソッド が インスタンス から アクセス さ れる か クラス から アクセス さ れる か によって 、 それぞれ バインド または 非 バインド 　 が あり ます 。 
メソッド が 非 バインドメソッド の 場合 、 im _ self 属性 は None に なる ため 、 呼び出す 際 に は self オブジェクト を 明示 的 に 第 一 引数 として 指定 し なけれ ば なり ませ ん 。 
この 場合 、 self は 非 バインドメソッド の クラス ( サブ クラス ) の インスタンス で なけれ ば なら ず 、 そう で なけれ ば TypeError が 送出 さ れ ます 。 関数 オブジェクト と 同じく 、 メソッド オブジェクト は 任意 の 属性 を 取得 でき ます 。 
しかし 、 メソッド 属性 は 実際 に は 背後 の 関数 オブジェクト ( meth . im _ func ) に 記憶 さ れ て いる ので 、 バインド 、 ヒバインドメソッド へ の メソッド 属性 の 設定 は 許さ れ て い ませ ん 。 
メソッド 属性 の 設定 を 試みる と TypeError が 送出 さ れ ます 。 
メソッド 属性 を 設定 する ため に は 、 その 背後 の 関数 オブジェクト で 明示 的 に : 
の よう に 設定 し なけれ ば なり ませ ん 。 詳しく は 
モジュール に対する 唯一 の 特殊 な 演算 は 属性 へ の アクセス : 
m . name です 。 
ここ で m は モジュール で 、 name は m の シンボル テーブル 上 に 定義 さ れ た 名前 に アクセス し ます 。 
モジュール 属性 も 代入 する こと が でき ます 。 
( import 文 は 、 厳密 に いえ ば 、 モジュール オブジェクト に対する 演算 です ; import foo 
m .__ dict __[' a '] = 1 と 書い て 
m . a を 1 に 定義 する こと は でき ます が 、 m .__ dict __ = {} と 書く こと は でき ませ ん ) 。 
__ dict __ を 直接 編集 する の は 推奨 さ れ ませ ん 。 
インタプリタ 内 に 組み込ま れ た モジュール は 、 module ' sys ' ( built - in ) の よう に 書か れ ます 。 
ファイル から 読み出さ れ た 場合 、 module ' os ' from '/ usr / local / lib / python 2 . 4 / os . pyc ' と 書か れ ます 。 
長 整数 型 に は 精度 の 制限 が あり ませ ん 。 
浮動 小数点 型 は C で は double を 使っ て 実装 さ れ て い ます 。 しかし 使っ て いる 計算 機 が 何 で ある か 分から ない なら 、 これら の 数値 型 の 精度 に関して 断言 は でき ませ ん 。 
複素数 型 は 実数 部 と 虚数 部 を 持ち 、 それぞれ の C で は double を 使っ て 実装 さ れ て い ます 。 
複素数 z から 実数 および 虚数 部 を 取り出す に は 、 
z . real および z . imag を 使い ます 。 
数値 は 、 数値 リテラル や 組み込み 関数 や 演算 子 の 戻り 値 として 生成 さ れ ます 。 
修飾 の ない 整数 リテラル ( 16 進 表現 や 8 進 表現 の 値 も 含み ます ) は 、 通常 の 整数 値 を 表し ます 。 
値 が 通常 の 整数 で 表す に は 大き すぎる 場合 、 " L " または " l " が 末尾 に つく 整数 リテラル は 長 整数 型 を 表し ます (" L " が 望ましい です 。 
という の は " 1 l " は 11 と 非常 に 紛らわしい から です ！ ) 小数点 または 指数 表記 の ある 数値 リテラル は 浮動 小数点 数 を 表し ます 。 
数値 リテラル に " j " または " J " を つける と 実数 部 が ゼロ の 複素数 を 表し ます 。 
複素数 の 数値 リテラル は 実数 部 と 虚数 部 を 足し た もの です 。 
Python は 型 混合 の 演算 を 完全 に サポート し ます : ある 2 項 演算 子 が 互いに 異なる 数値 型 の 被 演算 子 を 持つ 場合 、 より `` 制限 さ れ た '' 型 の 被 演算 子 は 他方 の 型 に 合わせ て 広げ られ ます 。 
コンス トラクタ int () 、 long () 、 float ()、 および complex () を 使っ て 、 特定 の 型 の 数 を 生成 する こと が でき ます 。 
全て の 数値 型 （ complex は 例外 ） は 以下 の 演算 を サポート し ます 。 これら の 演算 は 優先 度 の 低い もの から 順に 並べ られ て い ます ( 同じ ボックス に ある 演算 は 同じ 優先 度 を 持っ て い ます ; 全て の 数値 演算 は 比較 演算 より も 高い 優先 度 を 持っ て い ます ): 
x と y の 加算 
x と y の 減算 
x と y の 乗算 
x と y の 除算 
の 剰余 
x の 符号 反転 
x の 符号 不変 
x の 絶対 値 または 大き さ 
x の 通常 整数 へ の 変換 
x の 長 整数 へ の 変換 
x の 浮動 小数点 数 へ の 変換 
実数 部 re 、 虚数 部 im の 複素数 。 im の デフォルト 値 は ゼロ 。 
複素数 c の 共役 複素数 
( x / y , x % y ) から なる ペア 
x の y 乗 
( 通常 および 長 ) 整数 の 割り算 で は 、 結果 は 整数 に なり ます 。 この 場合 値 は 常に マイナス 無限 大 の 方向 に 丸め られ ます : つまり 、 1 / 2 は 0 、(- 1 )/ 2 は - 1 、 1 /(- 1 ) は - 1 、 そして (- 1 )/(- 2 ) は 0 に なり ます 。 
被 演算 子 の 両方 が 長 整数 の 場合 、 計算 値 に 関わら ず 結果 は 長 整数 で 返さ れる ので 注意 し て ください 。 
浮動 小数点 数 から ( 通常 または 長 ) 整数 へ の 変換 で は 、 C における の と 同様 の 値 の 丸め または 切り詰め が 行わ れる かも しれ ませ ん ; きちんと 定義 さ れ た 変換 について は 、 
モジュール の floor () および ceil () を 参照 し て ください 。 
完全 な 記述 について は 、 2 . 1 、`` 組み込み 関数 '' を 参照 し て ください 。 
複素数 の 切り詰め 除算 演算 子 、 モジュロ 演算 子 、 および divmod ()。 
リリース 2 . 3 で 撤廃 さ れ まし た 。 適切 で あれ ば 、 abs () を 使っ て 浮動 小数点 に 変換 し て ください 。 
... 型 混合 の 数値 間 で の 比較 も 同じ 規則 に 従い ます 。 
この 結果 として 、 リスト [ 1 , 2 ] は [ 1 . 0 , 2 . 0 ] と 等しい と 見なさ れ ます 。 
タプル の 場合 も 同様 です 
インタプリタ は その他 の 種類 の オブジェクト を いくつ か サポート し ます 。 
これら の ほとんど は 1 または 2 つ の 演算 だけ を サポート し ます 。 
s の 要素 s を x と 入れ替え ます 
s の i から j 番目 まで の 要素 を t と 入れ替え ます 
s [ i : j ] = [] と 同じ です 
s [ i : j : k ] の 要素 を t と 入れ替え ます 
リスト から 
s [ i : j : k ] の 要素 を 削除 し ます 
s [ len ( s ): len ( s )] = [ x ] と 同じ です 
s [ len ( s ): len ( s )] = x と 同じ です 
と なる i の 個数 を 返し ます 
かつ 
と なる 最小 の k を 返し ます 。 
i = 0 の 場合 の 
s [ i : i ] = [ x ] と 同じ です 
と 同じ です 
del s [ s . index ( x )] と 同じ です 
s の 値 の 並び を 反転 し ます 
s の 要素 を 並べ 替え ます 
t は 入れ替える スライス と 同じ 長 さ で なけれ ば いけ ませ ん 。 
かつて の Python の C 実装 で は 、 複数 パラメタ を 受理 し 、 非 明示 的 に それら を タプル に 結合 し て い まし た 。 
この 間違っ た 機能 は Python 1 . 4 で 廃 用 さ れ 、 Python 2 . 0 の 導入 とともに エラー に する よう に なり まし た 。 
x が リスト オブジェクト で ない 場合 、 例外 を 送出 し ます 。 extend () は 実験 的 な メソッド で あり 、 リスト 以外 の 変更 可能 な シーケンス 型 で は サポート さ れ て い ませ ん 。 
x が s 中 に 見つから なかっ た 場合 ValueError を 送出 し ます 。 
　 負 の インデクス が 二 番目 または 三 番目 の パラメタ として index () メソッド に 渡さ れる と 、 これら の 値 に は スライス の インデクス と 同様 に リスト の 長 さ が 加算 さ れ ます 。 
加算 後 も まだ 負 の 場合 、 その 値 は スライス の インデクス と 同様 に ゼロ に 切り詰め られ ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 以前 は 、 index () は 開始 位置 や 終了 位置 を 指定 する のに 負 の 数 を 使う こと が でき ませ ん でし た 
insert () の 最初 の パラメタ として 負 の インデクス が 渡さ れ た 場合 、 スライス の インデクス と 同じく 、 リスト の 長 さ が 加算 さ れ ます 。 
それでも 負 の 値 を 取る 場合 、 スライス の インデクス と 同じく 、 0 に 丸め られ ます 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : 以前 は 、 すべて の 負 値 は 0 に 丸め られ て い まし た 。 
pop () メソッド は リスト および アレイ 型 のみ で サポート さ れ て い ます 。 
オプション の 引数 i は 標準 で - 1 な ので 、 標準 で は 最後 の 要素 を リスト から 除去 し て 返し ます 。 
sort () および reverse () メソッド は 大きな リスト を 並べ 替え たり 反転 し たり する 際 、 容量 の 節約 の ため に リスト を 直接 変更 し ます 。 
副作用 が ある こと を ユーザ に 思い出さ せる ため に 、 これら の 操作 は 並べ 替え または 反転 さ れ た リスト を 返し ませ ん 。 
sort () メソッド は 、 比較 を 制御 する ため に オプション の 引数 を とり ます 。 
cmp は 2 つ の 引数 ( list items ) から なる カスタム の 比較 関数 を 指定 し ます 。 これ は 始め の 引数 が 2 つ 目 の 引数 に 比べ て 小さい 、 等しい 、 大きい か に 応じ て 負数 、 ゼロ 、 正数 を 返し ます 。 
key は 1 つ の 引数 から なる 関数 を 指定 し ます 。 これ は 個々 の リスト の 要素 から 比較 の キー を 取り出す の に 使わ れ ます 。 
reverse は 真偽 値 です 。 
True が セット さ れ た 場合 、 リスト の 要素 は 個々 の 比較 が 反転 し た もの として 並び 替え られ ます 。 一般 的 に 、 key および reverse の 変換 プロセス は 同等 の cmp 関数 を 指定 する より 早く 動作 し ます 。 
これ は key および reverse が それぞれ の 要素 に 一 度 だけ 触れる 間 に 、 cmp は リスト の それぞれ の 要素 に対して 複数 回 呼ば れる こと による もの です 。 
バージョン 2 . 3 で 変更 さ れ た 仕様 : None を 渡す の と 、 cmp を 省略 し た 場合 と で 、 同等 に 扱う サポート を 追加 
バージョン 2 . 4 で 変更 さ れ た 仕様 : key および reverse の サポート を 追加 
Python 2 . 3 以降 、 sort () メソッド は 安定 し て いる こと が 保証 さ れ て い ます 。 
ソート は 等しい と さ れ た 要素 の 相対 オーダー が 変更 さ れ ない こと が 保証 さ れれ ば 、 安定 し て い ます -- これ は 複合 的 な パス （ 例えば 部署 ごと に ソート し て 、 それ を 給与 の 等級 ） で ソート を 行なう の に 役立ち ます 。 
リスト が 並べ 替え られ て いる 間 は 、 リスト の 変更 は もとより 、 その 値 の 閲覧 すら その 結果 は 未定義 です 。 
Python 2 . 3 以降 の C 実装 で は 、 この間 リスト は 空 に 見える よう に なり 、 並べ 替え 中 に リスト が 変更 さ れ た こと が 検出 さ れる と ValueError が 送出 さ れ ます 。 
文字 列 および Unicode オブジェクト に は 固有 の 操作 : % 演算 子 ( モジュロ ) が あり ます 。 
この 演算 子 は 文字 列 フォーマット 化 または 補間 演算 として も 知ら れ て い ます 。 
( format は 文字 列 または Unicode オブジェクト ) と する と 、 format 中 の % 変換 指定 は values 中 の ゼロ 個 または それ 以上 の 要素 で 置換 さ れ ます 。 
この 動作 は C 言語 における sprintf () に 似 て い ます 。 
format が Unicode オブジェクト で ある か 、 または % s 変換 を 使っ て Unicode オブジェクト が 変換 さ れる 場合 、 その 結果 も Unicode オブジェクト に なり ます 。 format が 単一 の 引数 しか 要求 し ない 場合 、 values は タプル で ない 単一 の オブジェクト でも かまい ませ ん 。 
2 . 9 それ 以外 の 場合 、 values は フォーマット 文字 列 中 で 指定 さ れ た 項目 と 正確 に 同じ 数 の 要素 から なる タプル か 、 単一 の マップ オブジェクト で なけれ ば なり ませ ん 。 
一つ の 変換 指定 子 は 2 または それ 以上 の 文字 を 含み 、 その 構成 要素 は 以下 から なり ます が 、 示し た 順 に 出現 し なけれ ば なり ませ ん : 
変換 指定 子 が 開始 する こと を 示す 文字 "%"。 
一部 の 変換 型 の 結果 に 影響 し ます 。 
最小 の フィールド 幅 ( オプション ). "*" ( アスタリスク ) を 指定 し た 場合 、 実際 の 文字 列 幅 が values タプル の 次 の 要素 から 読み出さ れ ます 。 
タプル に は 最小 フィールド 幅 や オプション の 精度 指定 の 後 に 変換 し たい オブジェクト が くる よう に し ます 。 精度 ( オプション )。 
"." ( ドット ) と その後 に 続く 精度 で 与え られ ます 。 
"*" ( アスタリスク ) を 指定 し た 場合 、 精度 の 桁 数 は タプル の 次 の 要素 から 読み出さ れ ます 。 タプル に は 精度 指定 の 後 に 変換 し たい 値 が くる よう に し ます 。 
精度 長 変換 子 ( オプション )。 
変換 型 。 
% 演算 子 の 右側 の 引数 が 辞書 の 場合 ( または その他 の マップ 型 の 場合 )、 文字 列 中 の フォーマット に は 、 辞書 に 挿入 さ れ て いる キー を 丸 括弧 で 囲い 、 文字 "%" の 直後 に くる よう に し た もの が 含ま れ て い なけれ ば なり ませ ん 。 
マップ キー は フォーマット 化 し たい 値 を マップ から 選び出し ます 。 
この 場合 、 * 指定 子 を フォーマット に 含め て は いけ ませ ん (* 指定 子 は 順番 付け さ れ た パラメタ の リスト が 必要 だ から です 。 ) 変換 フラグ 文字 を 以下 に 示し ます : 
フラグ 
値 の 変換 に ( 下 で 定義 さ れ て いる ) `` 別 の 形式 '' を 使い ます 。 
数値 型 に対して ゼロ による パディング を 行い ます 。 
変換 さ れ た 値 を 左寄せ に し ます (" 0 " と 同時に 与え た 場合 、 " 0 " を 上書き し ます ) 。 
( スペース ) 符号 付き の 変換 で 正 の 数 の 場合 、 前 に 一つ スペース を 空け ます ( そう で ない 場合 は 空文字 に なり ます )。 
変換 の 先頭 に 符号 文字 ("+" または "-") を 付け ます (" スペース " フラグ を 上書き し ます ) 。 
精度 長 変換 子 として 、 h 、 l 、 および L を 使う こと が でき ます が 、 Python で は 必要 ない ため 無視 さ れ ます 。 変換 型 を 以下 に 示し ます : 
変換 
符号 付き 10 進 整数 。 
符号 なし 8 進数 。 
符号 なし 10 進数 。 
符号 なし 16 進数 ( 小文字 )。 
符号 なし 16 進数 ( 大文字 )。 
指数 表記 の 浮動 小数点 数 ( 小文字 ). 
指数 表記 の 浮動 小数点 数 ( 大文字 ). 
10 進 浮動 小数点 数 。 
指数 部 が - 4 以上 または 精度 以下 の 場合 に は " e " 、 それ 以外 の 場合 に は " f " と 同じ 。 
指数 部 が - 4 以上 または 精度 以下 の 場合 に は " E " 、 それ 以外 の 場合 に は " F " と 同じ 。 
文字 一 文字 ( 整数 または 一文字 から なる 文字 列 を 受理 し ます )。 
文字 列 ( python オブジェクト を repr () で 変換 し ます )。 
文字 列 ( python オブジェクト を str () で 変換 し ます )。 
引数 を 変換 せ ず 、 返さ れる 文字 列 中 で は 文字 "%" に なり ます 。 
別 形式 の 出力 に し た 場合 、 変換 結果 の 先頭 の 数字 が ゼロ (" 0 ") で ない とき に は 、 数字 の 先頭 と 左側 の パディング と の 間 に ゼロ を 挿入 し ます 。 
別 形式 に し た 場合 、 変換 結果 の 先頭 の 数字 が ゼロ で ない とき に は 、 数字 の 先頭 と 左側 の パディング と の 間 に ' 0 x ' または ' 0 X ' ( フォーマット 文字 が " x " か " X " か に 依存 し ます ) が 挿入 さ れ ます 。 
% r 変換 は Python 2 . 0 で 追加 さ れ まし た 。 
オブジェクト や 与え られ た 書式 が unicode 文字 列 の 場合 、 変換 後 の 文字 列 も unicode に なり ます 。 
Python 文字 列 に は 明示 的 な 長 さ 情報 が ある ので 、 % s 変換 において ' 0 ' を 文字 列 の 末端 と 仮定 し たり は し ませ ん 。 安全 上 の 理由 から 、 浮動 小数点 数 の 精度 は 50 桁 で クリップ さ れ ます ; 絶対 値 が 1 e 25 を 超える 値 の % f による 変換 は % g 変換 で 置換 さ れ ます 
2 . 10 その他 の エラー は 例外 を 送出 し ます 。 
その他 の 文字 列 操作 は 標準 モジュール 
で 定義 さ れ て い ます 。 
... タプル で ない 単一 の オブジェクト でも かまい ませ ん 。 
従って 、 一 個 の タプル だけ を フォーマット 出力 し たい 場合 に は 出力 し たい タプル を 唯一 の 要素 と する 単一 の タプル を values に 与え なく て は なり ませ ん 。 
... 変換 で 置換 さ れ ます 
この 範囲 に関する 値 は かなり 適当 な もの です 。 
この 仕様 は 、 正しい 使い方 で は 障害 と なら ず 、 かつ 特定 の マシン における 浮動 小数点 数 の 正確 な 精度 を 知ら なく て も 、 際限 なく 長く て 意味 の ない 数字 から なる 文字 列 を 印字 し ない で すむ よう に する ため の もの です 。 
型 は 値 の 変更 不能 な シーケンス で 、 広範 な ループ 処理 に 使わ れ て い ます 。 
xrange 型 の 利点 は 、 xrange オブジェクト は 表現 する 値域 の 大き さ に かかわら ず 常に 同じ 量 の メモリ しか 占め ない という こと です 。 
はっきり し た パフォーマンス 上 の 利点 は あり ませ ん 。 
XRange オブジェクト は 非常 に 限ら れ た 振る舞い 、 すなわち 、 インデクス 検索 、 反復 、 len () 関数 のみ を サポート し て い ます 。 
組み込み 型 に は 6 つ の シーケンス 型 が あり ます : 文字 列 、 ユニ コード 文字 列 、 リスト 、 タプル 、 バッファ 、 そして xrange オブジェクト です 。 文字 列 リテラル は ' xyzzy '、" frobozz " といった よう に 、 単 引用 符 または 二 重 引用 符 の 中 に 書か れ ます 。 
文字 列 リテラル について の 詳細 は は 、 
の 第 2 章 を 読ん で 下さい 。 
Unicode 文字 列 は ほとんど 文字 列 と 同じ です が 、 u ' abc ' 、 u " def " といった よう に 先頭 に 文字 " u " を 付け て 指定 し ます 。 
リスト は [ a , b , c ] の よう に 要素 を コンマ で 区切り 角 括弧 で 囲っ て 生成 し ます 。 
タプル は a , b , c の よう に コンマ 演算 子 で 区切っ て 生成 し ます ( 角 括弧 の 中 に は 入れ ませ ん )。 丸 括弧 で 囲っ て も 囲わ なく て も かまい ませ ん が 、 空 の タプル は () の よう に 丸 括弧 で 囲わ なけれ ば なり ませ ん 。 
要素 が 一つ の タプル で は 、 例えば ( d ,) の よう に 、 要素 の 後ろ に コンマ を つけ なけれ ば なり ませ ん 。 
バッファ オブジェクト は Python の 構文 上 で は 直接 サポート さ れ て い ませ ん が 、 組み込み 関数 buffer () で 生成 する こと が でき ます 。 
バッファ オブジェクト は 結合 や 反復 を サポート し て い ませ ん 。 
xrange オブジェクト は 、 オブジェクト を 生成 する ため の 特殊 な 構文 が ない 点 で バッファ に 似 て い て 、 関数 xrange () で 生成 し ます 。 
xrange オブジェクト は スライス 、 結合 、 反復 を サポート せ ず 、 in 、 not in 、 min () または max () は 効率 的 で は あり ませ ん 。 
ほとんど の シーケンス 型 は 以下 の 演算 操作 を サポート し ます 。 
" in " および " not in " は 比較 演算 と おなじ 優先 度 を 持っ て い ます 。 
"+" および "*" は 対応 する 数値 演算 と おなじ 優先 度 です 。 
以下 の テーブル は シーケンス 型 の 演算 を 優先 度 の 低い もの から 順に 挙げ た もの です ( 同じ ボックス 内 の 演算 は 同じ 優先 度 です )。 
テーブル 内 の s および t は 同じ 型 の シーケンス です ; n 、 i および j は 整数 です : 
s の ある 要素 x と 等しい 場合 True 、 そう で ない 場合 False 
s の ある 要素 が x と 等しい 場合 False 、 そう で ない 場合 True 
s および t の 結合 
s の 浅い コピー n 個 から なる 結合 
s の 0 から 数え て i 番目 の 要素 
s の i 番目 から j 番目 まで の スライス 
s の i 番目 から j 番目 まで 、 k 毎 の スライス 
s の 長 さ 
s の 最小 の 要素 
s の 最大 の 要素 
s が 文字 列 または Unicode 文字 列 の 場合 、 演算 操作 in および not in は 部分 文字 列 の 一致 テスト と 同じ よう に 動作 し ます 。 
バージョン 2 . 3 以前 の Python で は 、 x は 長 さ 1 の 文字 列 でし た 。 Python 2 . 3 以降 で は 、 x は どの 長 さ でも かまい ませ ん 。 
n が 0 以下 の 値 の 場合 、 0 として 扱わ れ ます ( これ は s と 同じ 型 の 空 の シーケンス を 表し ます )。 
コピー は 浅い コピー な ので 注意 し て ください ; 入れ子 に なっ た データ 構造 は コピー さ れ ませ ん 。 
これ は Python に 慣れ て い ない プログラマ を よく 悩ま せ ます 。 例えば 以下 の コード を 考え ます : 
以下 の よう に する と 、 異なる リスト を 要素 と する リスト を 生成 でき ます : 上 の コード で 、 [[]] は 空 の リスト を 要素 として 含ん で いる リスト です から 、 [[]] * 3 の 3 つ の 要素 の 全て が 、 空 の リスト （ へ の 参照 ） に なり ます 。 
lists の いずれ か の 要素 を 修正 する こと で この 単一 の リスト が 変更 さ れ ます 。 
以下 の よう に する と 、 異なる 個別 の リスト を 生成 でき ます : 
i または j が 負 の 数 の 場合 、 インデクス は 文字 列 の 末端 から の 相対 インデクス に なり ます : len ( s ) + i 
または len ( s ) + j 
が 代入 さ れ ます 。 
しかし - 0 は 0 の まま な ので 注意 し て ください 。 
i が 省略 さ れ た 場合 、 0 を 使い ます 。 
j が 省略 さ れ た 場合 、 len ( s ) を 使い ます 。 
i が j 以上 の 場合 、 スライス は 空 の シーケンス に なり ます 。 
i または j が len ( s ) より 大きい 場合 、 len ( s ) を 使い ます 。 
i または j を 省略 し た 場合 、 `` 最後 ''( k の 符号 に 依存 ) を 示す 値 を 使い ます 。 
k は ゼロ に でき ない ので 注意 し て ください 。 
s と t の 両者 が 文字 列 で ある とき 、 CPython の よう な 実装 で は 、 
という 書式 で 代入 を する のに in - place optimization が 働き ます 。 
この よう な 時 、 最適 化 は 二 乗 の 実行 時間 の 低減 を もたらし ます 。 
この 最適 化 は バージョン や 実装 に 依存 し ます 。 
... は 対応 する 数値 演算 と おなじ 優先 度 です 。 
パーザ が 被 演算 子 の 型 を 識別 できる よう に する ため に 、 この よう な 優先 度 で なけれ ば なら ない の です 。 
2 . 3 . 6 . 1 文字 列 メソッド 
全て の 単項 算術 演算 ( および ビット 単位 演算 子 ) は 、 同じ 優先 順位 を 持っ て い ます : 
単項 演算 子 - ( マイナス ) は 、 引数 と なる 数値 の 符号 を 反転 ( invert ) し ます 。 
単項 演算 子 + ( プラス ) は 、 数値 引数 を 変更 し ませ ん 。 
単項 演算 子 ~ ( 逆転 ) は 、 整数 または 長 整数 の 引数 を ビット 単位 反転 ( bit - wise invert ) し ます 。 
x の ビット 単位 反転 は 、 -( x + 1 ) として 定義 さ れ て い ます 。 
この 演算 子 は 整数 に のみ 適用 さ れ ます 。 
上記 の 三つ は いずれ も 、 引数 が 正しい 型 で ない 場合 に は TypeError 例外 が 送出 さ れ ます 。 
現在 ドキュメント 化 さ れ て い ない が 、 ドキュメント 化 す べき モジュール を 以下 に ざっと 列挙 し ます 。 
どうぞ これら の ドキュメント を 寄稿 し て ください ！ ( 電子 メール で docs @ python . org に 送っ て ください )。 
この 章 の アイデア と 元 の 文章 内容 は Fredrik Lundh の ポスト による もの です ; この 章 の 特定 の 内容 は 実際 に は 改訂 さ れ て き て い ます 。 
5 . 文書 化 さ れ て い ない モジュール 
この 章 の モジュール は 、 ほとんど ( あるいは まったく ) ドキュメント 化 さ れ て い ませ ん 。 
これら の モジュール の いずれ か について ドキュメント を 寄与 し たい と 考え て いる なら 、 
まで ご 連絡 ください 。 
AppleSingle フォーマット ファイル 用 の 基本 的 な デコーダ 
BuildApplet と その 仲間 の ヘルパー モジュール 
コンパイル 済み アプリケーション に ' PYC ~' リソース を 作成 に する ヘルパー モジュール 
コードフラグメントリソース を 扱う モジュール 
open () と Internet Config の 置き換え 
多く の MacOS エラーコード 定数 定義 
スクリプト の リソース を 見つける 
Navigation Services へ の インターフェース 
CodeWarrior プロジェクト の 作成 
Netscape OSA モジュール の ラッパー 
PixMap オブジェクト の ラッパー 
デフォルト 設定 へ の サポート を 持つ アプリケーション 初期 設定 管理 プログラム 
Python インタプリタ に 特 化 し た 初期 設定 管理 プログラム 
バッファ を 用い て の 不可視 の 標準 出力 
フレーム の 継続 処理 の ため の QuickTime ムービー の フレーム 読み込み 
上 に 作ら れ た Mac 用 ウイ ジェット 
`` WorldScript - Aware Styled Text Engine '' へ の インターフェース 
7 . 3 . 2 . 1 組み込み codec ( built - in 
以下 の API は Unicode オブジェクト および 文字 列 を 入力 に 取り ( 説明 で は 、 どちら も 文字 列 と 表記 し て い ます )、 場合 に 応じ て Unicode オブジェクト か 整数 を 返す 機能 を 持っ て い ます 。 
これら の 関数 は 全て 、 例外 が 発生 し た 場合 に は NULL または - 1 を 返し ます 。 PyObject * 
二つ の 文字 列 を 結合 し て 、 新た な Unicode 文字 列 を 生成 し ます 。 
Unicode 文字 列 の リスト を 分割 し て 、 Unicode 文字 列 から なる リスト を 返し ます 。 
sep が NULL の 場合 、 全て の 空白 文字 を 使っ て 分割 を 行い ます 。 
それ 以外 の 場合 、 指定 さ れ た 文字 を 使っ て 分割 を 行い ます 。 
最大 で maxsplit 個 まで の 分割 を 行い ます 。 
maxsplit が 負 なら ば 分割 数 に 制限 を 設け ませ ん 。 
分割 結果 の リスト 内 に は 分割 文字 は 含み ませ ん 。 
Unicode 文字 列 を 改行 文字 で 区切り 、 Unicode 文字 列 から なる リスト を 返し ます 。 
CRLF は 一 個 の 改行 文字 と みなし ます 。 
keepend が 0 の 場合 、 分割 結果 の リスト 内 に 改行 文字 を 含め ませ ん 。 
errors は codecs で 通常 使わ れる の と 同じ 意味 を 持ち ます 。 
errors は NULL に し て も よく 、 デフォルト エラー 処理 の 使用 を 意味 し ます 。 
指定 し た separator で 文字 列 から なる シーケンス を 連結 ( join ) し 、 連結 結果 を Unicode 文字 列 で 返し ます 。 
substr が 指定 さ れ た 末尾 条件 ( direction == - 1 は 前方 一致 、 direction == 1 は 後方 一致 ) で str [ start : end ] と マッチ する 場合 に 1 を 返し 、 それ 以外 の 場合 に は 0 を 返し ます 。 
str [ start : end ] 中 に substr が 最初 に 出現 する 場所 を 返し ます 。 この とき 指定 さ れ た 検索 方向 direction ( direction == 1 は 順 方向 検索 、 direction == - 1 は 逆 方向 検索 ) で 検索 し ます 。 
戻り 値 は 最初 に マッチ が 見つかっ た 場所 の インデクス です ; 戻り 値 - 1 は マッチ が 見つから なかっ た こと を 表し 、 - 2 は エラー が 発生 し て 例外 情報 が 設定 さ れ て いる こと を 表し ます 。 
str [ start : end ] に substr が 重複 する こと なく 出現 する 回数 を 返し ます 。 
エラー が 発生 し た 場合 に は - 1 を 返し ます 。 
str 中 に 出現 する substr を 最大 で maxcount 個 replstr に 置換 し 、 置換 結果 を Unicode オブジェクト に し て 返し ます 。 maxcount == - 1 に する と 、 全て の substr を 置換 し ます 。 
二つ の 文字 列 を 比較 し て 、 左 引数 が 右 引数 より 小さい 場合 、 左右 引数 が 等価 の 場合 、 左 引数 が 右 引数 より 大きい 場合 、 について 、 それぞれ - 1 , 0 , 1 を 返し ます 。 
新た な 文字 列 オブジェクト を format および args から 生成 し て 返し ます ; この メソッド は 
の よう な もの です 。 
引数 args は タプル で なく て は なり ませ ん 。 
element が container 内 に ある か 調べ 、 その 結果 に 応じ て 真 または 偽 を 返し ます 。 
element は 単 要素 の Unicode 文字 に 型 強制 でき なけれ ば なり ませ ん 。 
エラー が 生じ た 場合 に は - 1 を 返し ます 。 
以下 は Python の Unicode 実装 に 用い られ て いる 基本 Unicode オブジェクト 型 です : 
この 型 は 16 ビット の 符号 なし ストレージ 型 を 表し 、 Unicode 序 数 ( Unicode ordinal ) を 保持 する ため の 基礎 単位 として Python が 内部 的 に 使い ます 。 
wchar _ t が 利用 でき 、 かつ 16 ビット で ある 場合 、 Py _ UNICODE は wchar _ t を typedef で エイリアス さ れ 、 ネイティブ プラットフォーム に対する 互換 性 を 高め ます 。 
その他 の プラットフォーム で は 全て 、 Py _ UNICODE は unsigned short の typedef による エイリアス に なり ます 。 
この PyObject の サブ タイプ は Unicode オブジェクト を 表現 し ます 。 
この PyTypeObject の インスタンス は Python の Unicode 型 を 表現 し ます 。 
以下 の API は 実際 に は C マクロ で 、 Unicode オブジェクト 内部 の 読み出し 専用 データ に対する チェック や アクセス を 高速 に 行い ます : 
o が Unicode 文字 列 型 か Unicode 文字 列 型 の サブ タイプ で ある とき に 真 を 返し ます 。 バージョン 2 . 2 で 変更 さ れ た 仕様 : サブ タイプ を 引数 に とれる よう に なり まし た 
o が Unicode 文字 列 型 で 、 かつ Unicode 文字 列 型 の サブ タイプ で ない とき に 真 を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
オブジェクト の サイズ を 返し ます 。 o は PyUnicodeObject で なけれ ば なり ませ ん ( チェック は し ませ ん )。 
オブジェクト の 内部 バッファ の サイズ を バイト 数 で 返し ます 。 
o は PyUnicodeObject で なけれ ば なり ませ ん ( チェック は し ませ ん )。 Py _ UNICODE * 
オブジェクト 内部 の Py _ UNICODE バッファ へ の ポインタ を 返し ます 。 o は PyUnicodeObject で なけれ ば なり ませ ん ( チェック は し ませ ん )。 
オブジェクト 内部 バッファ へ の ポインタ を 返し ます 。 o は PyUnicodeObject で なけれ ば なり ませ ん ( チェック は し ませ ん )。 
Unicode は 数多く の 異なる 文字 プロパティ ( character property ) を 提供 し て い ます 。 
よく 使わ れる 文字 プロパティ は 、 以下 の マクロ で 利用 でき ます 。 これら の マクロ は Python の 設定 に 応じ て 、 各 々 C の 関数 に 対応付け られ て い ます 。 
ch が 空白 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 小文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 大文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が タイトル ケース 文字 ( titlecase character ) か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 改行 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 10 進 の 数字 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 2 進 の 数字 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 数字 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が アルファベット 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
ch が 英 数 文字 か どう か に 応じ て 1 または 0 を 返し ます 。 
以下 の API は 、 高速 に 直接 文字 変換 を 行う ため に 使わ れ ます : 
ch を 小文字 に 変換 し た もの を 返し ます 。 
ch を 大文字 に 変換 し た もの を 返し ます 。 
ch を タイトル ケース 文字 に 変換 し た もの を 返し ます 。 
ch を 10 進 の 正 の 整数 に 変換 し た もの を 返し ます 。 
不可能 なら ば - 1 を 返し ます 。 
例外 を 送出 し ませ ん 。 
ch を 一 桁 の 2 進 整数 に 変換 し た もの を 返し ます 。 
不可能 なら ば - 1 を 返し ます 。 例外 を 送出 し ませ ん 。 
ch を ( 正 の ) double に 変換 し た もの を 返し ます 。 
不可能 なら ば - 1 . 0 を 返し ます 。 例外 を 送出 し ませ ん 。 
Unicode オブジェクト を 生成 し たり 、 Unicode の シーケンス として の 基本 的 な プロパティ に アクセス し たり する に は 、 以下 の API を 使っ て ください : 
size で 指定 さ れ た 長 さ を 持つ Py _ UNICODE 型 バッファ u から Unicode オブジェクト を 生成 し ます 。 
u を NULL に し て も よく 、 その 場合 オブジェクト の 内容 は 未定義 です 。 
バッファ に 必要 な 情報 を 埋める の は ユーザ の 責任 です 。 
バッファ の 内容 は 新た な オブジェクト に コピー さ れ ます 。 
バッファ が NULL で ない 場合 、 戻り 値 は 共有 さ れ た オブジェクト に なる こと が あり ます 。 
従って 、 この 関数 が 返す Unicode オブジェクト を 変更 し て よい の は u が NULL の とき だけ です 。 
Unicode オブジェクト の 内部 バッファ Py _ UNICODE に対する 読み出し 専用 の ポインタ を 返し ます 。 unicode が Unicode オブジェクト で なけれ ば NULL を 返し ます 。 
Unicode オブジェクト の 長 さ を 返し ます 。 
ある エン コード 方式 で エン コード さ れ た オブジェクト obj を Unicode オブジェクト に 型 強制 し て 、 参照 カウント を インクリメント し て 返し ます 。 型 強制 は 以下 の よう に し て 行わ れ ます : 
obj が Unicode オブジェクト の 場合 、 オブジェクト そのまま を 、 参照 カウント を インクリメント し て 返し ます 。 
注意 : Unicode オブジェクト は デコード でき ませ ん ; encoding に NULL で ない 値 を 渡す と 、 TypeError に なり ます 。 
文字 列 や その他 の char バッファ 互換 オブジェクト の 場合 、 オブジェクト は encoding に従って デコード さ れ ます 。 この とき error で 定義 さ れ た エラー 処理 を 用い ます 。 
これら 二つ の 引数 は NULL に でき 、 その 場合 デフォルト 値 が 使わ れ ます ( 詳細 は 次 の 節 を 参照 し て ください ) 
その他 の オブジェクト は 例外 を 引き起こし ます 。 
この API は 、 エラー が 生じ た とき に は NULL を 返し ます 。 
呼び出し 側 は 返さ れ た オブジェクト を decref する 責任 が あり ます 。 
PyUnicode _ FromEncodedObject ( obj , NULL , " strict ") を 行う ショートカット で 、 インタプリタ は Unicode へ の 型 強制 が 必要 な 際 に 常に この 関数 を 使い ます 。 
プラットフォーム で wchar _ t が サポート さ れ て い て 、 かつ wchar . h が 提供 さ れ て いる 場合 、 Python は 以下 の 関数 を 使っ て wchar _ t に対する インタフェース を 確立 する こと が あり ます 。 
この サポート は 、 Python 自体 の Py _ UNICODE 型 が システム の wchar _ t と 同一 の 場合 に 最適 化 を もたらし ます 。 
size の wchar _ t バッファ w から Unicode オブジェクト を 生成 し ます 。 
Unicode オブジェクト の 内容 を wchar _ t バッファ w に コピー し ます 。 
最大 で size 個 の wchar _ t 文字 を ( 末尾 の 0 - 終端 文字 を 除い て ) コピー し ます 。 
コピー し た wchar _ t 文字 の 個数 を 返し ます 。 
エラー の 時 に は - 1 を 返し ます 。 wchar _ t 文字 列 は 0 - 終端 さ れ て いる 場合 も 、 さ れ て い ない 場合 も あり ます 。 
関数 の 呼び出し 手 の 責任 で 、 アプリケーション の 必要 に 応じ て wchar _ t 文字 列 を 0 - 終端 し て ください 。 
7 . 3 . 2 . 1 組み込み codec ( built - in codec ) 
クラス TestCase 
TestCase クラス の インスタンス は 、 テスト の 最小 実行 単位 を 示し ます 。 
この クラス を ベース クラス として 使用 し 、 必要 な テスト を 具象 サブ クラス に 実装 し ます 。 
TestCase クラス で は 、 テスト ランナー が テスト を 実行 する ため の インターフェース と 、 各種 の チェック や テスト 失敗 を レポート する ため の メソッド を 実装 し て い ます 。 
クラス FunctionTestCase 
この クラス で は TestCase インターフェース の 内 、 テスト ランナー が テスト を 実行 する ため の インターフェース だけ を 実装 し て おり 、 テスト 結果 の チェック や レポート に関する メソッド は 実装 し て い ませ ん 。 既存 の テスト コード を 
による テストフレームワーク に 組み込む ため に 使用 し ます 。 
クラス TestSuite 
この クラス は 、 個々 の テストケース や テストスイート の 集約 を 示し ます 。 
通常 の テストケース と 同じ よう に テスト ランナー で 実行 する と 、 テストスイート 内 の 全て の テストケース と テストスイート を 実行 し ます 。 
テストケース・テストスイート を 追加 する ため の メソッド を 用意 し て い ます 。 
tests に は 、 スイート に 追加 する テスト の シーケンス を 指定 する 事 が でき ます 。 
クラス TestLoader 
モジュール または TestCase クラス から 、 指定 し た 条件 に従って テスト を ロード し 、 TestSuite に ラップ し て 返し ます 。 
モジュール から テスト を ロード する 場合 、 全て の TestCase 派生 クラス を 抽出 し 、 名前 が " test " で 始まる 全て の メソッド の インスタンス を 作成 し ます 。 
TestLoader の インスタンス で 、 共用 する 事 が でき ます 。 
TestLoader を カスタマイズ する 必要 が なけれ ば 、 新しい TestLoader オブジェクト を 作ら ず に この インスタンス を 使用 し ます 。 
クラス TextTestRunner 
実行 結果 を 標準 結果 に 出力 する 、 単純 な テスト ランナー 。 
いくつ か の 設定 項目 が あり ます が 、 非常 に 単純 です 。 
グラフィカル な テスト 実行 アプリケーション で は 、 独自 の テスト ランナー を 作成 し て ください 。 
テスト を 実行 する ため の コマンド ライン プログラム 。 
この 関数 を 使え ば 、 次 の よう に 簡単 に 実行 可能 な テスト モジュール を 作成 する 事 が でき ます 。 
場合 によって は 、 
モジュール を 使っ て 書か れ た 既存 の テスト が あり ます 。 
その 場合 、 モジュール は 既存 の テスト コード から unittest . TestSuite インスタンス を 自動的 に 構築 できる DocTestSuite クラス を 提供 し ます 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
8 . Unix 独特 の サービス 
本章 に 記述 さ れ た モジュール は 、 Unix オペレーティングシステム 、 あるいは それ から 変形 し た 多く の もの に 特有 する 機能 の ため の インター フェイス を 提供 し ます 。 
その 概要 を 以下 に 述べ ます 。 
最も 一般 的 な POSIX システム コール 群 ( 通常 は 
モジュール を 介し て 利用 さ れ ます )。 
パスワード データベース へ の アクセス を 提供 する ( getpwnam () など )。 
グループ データベース へ の アクセス ( getgrnam () および その 仲間 )。 
Unix パスワード を チェック する ため の 関数 crypt ()。 
共有 オブジェクト の C 関数 の 呼び出し 
ndbm を 基 に し た 基本 的 な データベース インタフェース です 。 
GNU による dbm の 再 実装 。 
POSIX スタイル の 端末 制御 。 
一般 的 な 端末 制御 操作 の ため の ユーティリティ 関数 群 。 
SGI と Linux 用 の 擬似 端末 を 制御 する 
fcntl () および ioctl () システム コール 。 
Python による Unix シェル パイプライン へ の インタフェース 。 
ロック 機構 を サポート する ファイル 類似 オブジェクト 。 
現 プロセス の リソース 使用 状態 を 提供 する ため の インタフェース 。 
Sun の NIS ( Yellow Pages ) ライブラリ へ の インタフェース 。 
Unix syslog ライブラリ ルーチン 群 へ の インタフェース 。 
外部 コマンド を 実行 する ため の ユーティリティ です 。 
例外 URLError を 送出 し ます 。 
以下 の 例 で は 、 python . org の メイン ページ を 取得 し て 、 その 最初 の 100 バイト 分 を 表示 し ます : 
今度 は CGI の 標準 入力 に データ ストリーム を 送信 し 、 CGI が 返す データ を 読み出し ます : 
上 の 例 で 使わ れ て いる サンプル の CGI は 以下 の よう に なっ て い ます : 
以下 は ベーシック HTTP 認証 の 例 です : 
import urllib 2 # ベーシック HTTP 認証 を サポート する OpenerDirector を 作成 する ... auth _ handler = urllib 2 . HTTPBasicAuthHandler () auth _ handler . add _ password (' realm ', ' host ', ' username ', ' password ') opener = urllib 2 . build _ opener ( auth _ handler )# ... urlopen から 利用 できる よう 、 グローバル に インストール する urllib 2 . install _ opener ( opener ) urllib 2 . urlopen (' http :// www . example . com / login . html ') 
build _ opener () は デフォルト で 沢山 の ハンドラ を 提供 し て おり 、 その 中 に ProxyHandler が あり ます 。 
デフォルト で は 、 ProxyHandler は scheme _ proxy という 環境 変数 を 使い ます 。 ここ で scheme は URL スキーム です 。 
例えば 、 HTTP プロ キシ の URL を 得る に は 、 環境 変数 http _ proxy を 読み出し ます 。 この 例 で は 、 デフォルト の ProxyHandler を 置き換え て プログラム 的 に 作成 し た プロ キシ URL を 使う よう に し 、 ProxyBasicAuthHandler で プロ キシ 認証 サポート を 追加 し ます 。 
proxy _ handler = urllib 2 . ProxyHandler ({' http ': ' http :// www . example . com : 3128 /'}) proxy _ auth _ handler = urllib 2 . HTTPBasicAuthHandler () proxy _ auth _ handler . add _ password (' realm ', ' host ', ' username ', ' password ') opener = build _ opener ( proxy _ handler , proxy _ auth _ handler )# 今回 は OpenerDirector を インストール する の で は なく 直接 使い ます : opener . open (' http :// www . example . com / login . html ') 以下 は HTTP ヘッダ を 追加 する 例 です : 
headers 引数 を 使っ て Request コンス トラクタ を 呼び出す 方法 の 他 に 、 以下 の よう に でき ます : 
OpenerDirector は 全て の Request に User - Agent : ヘッダ を 自動的 に 追加 し ます 。 
これ を 変更 する に は : 
import urllib 2 opener = urllib 2 . build _ opener () opener . addheaders = [(' User - agent ', ' Mozilla / 5 . 0 ')] opener . open (' http :// www . example . com /') の よう に し ます 。 
また 、 Request が urlopen () ( や OpenerDirector . open ()) に 渡さ れる 際 に は 、 いくつ か の 標準 ヘッダ ( Content - Length :, Content - Type : および Host :) も 追加 さ れる こと を 忘れ ない で ください 。 
URLopener および FancyURLopener クラス の オブジェクト は 以下 の 属性 を 持っ て い ます 。 
適切 な プロトコル を 使っ て fullurl を 開き ます 。 
この メソッド は キャッシュ と プロ キシ 情報 を 設定 し 、 その後 適切 な open メソッド を 入力 引数 つき で 呼び出し ます 。 
認識 でき ない スキーム が 与え られ た 場合 、 open _ unknown () が 呼び出さ れ ます 。 
data 引数 は urlopen () の 引数 data と 同じ 意味 を 持っ て い ます 。 
オーバライド 可能 な 、 未知 の タイプ の URL を 開く ため の インタフェース です 。 
url の コンテンツ を 取得 し 、 filename に 書き込み ます 。 
返り 値 は タプル で 、 ローカル システム における ファイル 名 と 、 応答 ヘッダ ( URL が リモート を 指し て いる 場合 ) または None ( URL が ローカル を 指し て いる 場合 ) から なり ます 。 
呼び出し 側 の 処理 は その後 filename を 開い て 内容 を 読み出さ なく て は なり ませ ん 。 
filename が 与え られ て おり 、 かつ URL が ローカル システム 上 の ファイル を 示し て いる ば あい 、 入力 ファイル 名 が 返さ れ ます 。 
URL が ローカル の ファイル を 示し て おら ず 、 かつ filename が 与え られ て い ない 場合 、 ファイル 名 は 入力 URL の 最後 の パス 構成 要素 に つけ られ た 拡張 子 と 同じ 拡張 子 を tempfile . mktemp () に つけ た もの に なり ます 。 
reporthook を 与える 場合 、 この 変数 は 3 つ の 数値 パラメタ を 受け取る 関数 で なく て は なり ませ ん 。 
引数 data は 標準 の application / x - www - form - urlencoded 形式 で なく て は なり ませ ん ; 上 の urlencode () を 参照 し て 下さい 。 
URL を オープン する オブジェクト の ユーザ エージェント を 指定 する 変数 です 。 
を 特定 の ユーザ エージェント で ある と サーバ に 通知 する に は 、 サブ クラス の 中 で この 値 を クラス 変数 として 値 を 設定 する か 、 コンス トラクタ の 中 で ベース クラス を 呼び出す 前 に 値 を 設定 し て ください 。 
FancyURLopener クラス は オーバライド 可能 な 追加 の メソッド を 提供 し て おり 、 適切 な 振る舞い を さ せる こと が でき ます : 
指定 さ れ た セキュリティ 領域 ( security realm ) 下 に ある 与え られ た ホスト において 、 ユーザ 認証 に 必要 な 情報 を 返す ため の 関数 です 。 
多く の 拡張 モジュール は 単に Python から 使える 新た な 関数 や 型 を 提供 する だけ です が 、 時に 拡張 モジュール 内 の コード が 他 の 拡張 モジュール でも 便利 な こと が あり ます 。 
例えば 、 ある モジュール で は 順序 概念 の ない リスト の よう に 動作 する `` コレクション ( collection )'' クラス を 実装 し て いる かも しれ ませ ん 。 
ちょうど リスト を 生成 し たり 操作 し たり できる C API を 備え た 標準 の Python リスト 型 の よう に 、 この 新た な コレクション 型 も 他 の 拡張 モジュール から 直接 操作 できる よう に する に は 一連 の C 関数 を 持っ て い なけれ ば なり ませ ん 。 一見 する と これ は 簡単 な こと : 単に 関数 を ( もちろん static など と は 宣言 せ ず に ) 書い て 、 適切 な ヘッダ ファイル を 提供 し 、 C API を 書け ば よい だけ 、 に 思え ます 。 
そして 実際 の ところ 、 全て の 拡張 モジュール が Python インタプリタ に 常に 静的 に リンク さ れ て いる 場合 に は うまく 動作 し ます 。 
そして 、 たとえ シンボル が グローバル 変数 として 可視 で あっ て も 、 呼び出し たい 関数 の 入っ た モジュール が まだ ロード さ れ て い ない こと だって あり ます ! 従っ て 、 可 搬性 の 点 から シンボル の 可視 性 に は 何ら 仮定 を し て は なら ない こと に なり ます 。 
つまり 拡張 モジュール 中 の 全て の シンボル は static と 宣言 せ ね ば なり ませ ん 。 例外 は モジュール の 初期 化 関数 で 、 これ は ( 1 . 4 で 述べ た よう に ) 他 の 拡張 モジュール と の 間 で 名前 が 衝突 する の を 避ける ため です 。 
CObject は C API を 介し て のみ 生成 し たり アクセス し たり でき ます が 、 他 の Python オブジェクト と 同じ よう に 受け渡し でき ます 。 
エクスポート さ れ て いる それぞれ の 名前 を 使う と 、 CObject 自体 や 、 CObject が 公表 し て いる アドレス で 示さ れる 配列 内 に 収め られ た 全て の C API ポインタ を 得 られ ます 。 
そして 、 ポインタ に対する 保存 や 取得 といった 様々 な 作業 は 、 コード を 提供 し て いる モジュール と クライアントモジュール と の 間 で は 異なる 方法 で 分散 でき ます 。 以下 の 例 で は 、 名前 を 公開 する モジュール の 作者 に ほとんど の 負荷 が 掛かり ます が 、 よく 使わ れる ライブラリ を 作る 際 に 適切 な アプローチ を 実演 し ます 。 
この アプローチ で は 、 全て の C API ポインタ ( 例 中 で は 一つ だけ です が !) を 、 CObject の 値 と なる void ポインタ の 配列 に 保存 し ます 。 
拡張 モジュール に 対応 する ヘッダ ファイル は 、 モジュール の import と C API ポインタ を 取得 する よう 手配 する マクロ を 提供 し ます ; クライアントモジュール は 、 C API に アクセス する 前 に この マクロ を 呼ぶ だけ です 。 名前 を 公開 する 側 の モジュール は 、 1 . 1 節 の spam モジュール を 修正 し た もの です 。 
関数 spam . system () は C ライブラリ 関数 system () を 直接 呼び出さ ず 、 PySpam _ System () を 呼び出し ます 。 この 関数 は もちろん 、 実際 に は ( 全て の コマンド に `` spam '' を 付ける といった よう な ) より 込み入っ た 処理 を 行い ます 。 
この 関数 PySpam _ System () は また 、 他 の 拡張 モジュール に も 公開 さ れ ます 。 関数 PySpam _ System () は 、 他 の 全て の 関数 と 同様 に static で 宣言 さ れ た 通常 の C 関数 です 。 
spam _ system () に は 取る に 足ら ない 変更 が 施さ れ て い ます : 
モジュール の 先頭 に ある 以下 の 行 
の 直後 に 、 以下 の 二 行 : 
を 必ず 追加 し て ください 。 
# define は 、 ファイル spammodule . h を インクルード し て いる の が 名前 を 公開 する 側 の モジュール で あっ て 、 クライアントモジュール で は ない こと を ヘッダ ファイル に 教える ため に 使わ れ ます 。 
最後 に 、 モジュール の 初期 化 関数 は C API の ポインタ 配列 を 初期 化 する よう 手配 し なけれ ば なり ませ ん : 
PyMODINIT _ FUNCinitspam ( void ){ PyObject * m ; static void * PySpam _ API [ PySpam _ API _ pointers ]; PyObject * c _ api _ object ; m = Py _ InitModule (" spam ", SpamMethods );/* C API ポインタ 配列 を 初期 化 する */ PySpam _ API [ PySpam _ System _ NUM ] = ( void *) PySpam _ System ;/* API ポインタ 配列 の アドレス が 入っ た CObject を 生成 する */ c _ api _ object = PyCObject _ FromVoidPtr (( void *) PySpam _ API , NULL ); if ( c _ api _ object != NULL ) PyModule _ AddObject ( m , "_ C _ API ", c _ api _ object );} 
PySpam _ API が static と 宣言 さ れ て いる こと に 注意 し て ください ; そう し なけれ ば 、 initspam () が 終了 し た とき に ポインタ アレイ は 消滅 し て しまい ます ! から くり の 大 部分 は ヘッダ ファイル spammodule . h 内 に あり 、 以下 の よう に なっ て い ます : 
# ifndef Py _ SPAMMODULE _ H # define Py _ SPAMMODULE _ H # ifdef __ cplusplusextern " C " {# endif /* spammodule の ヘッダ ファイル *//* C API 関数 */# define PySpam _ System _ NUM 0 # define PySpam _ System _ RETURN int # define PySpam _ System _ PROTO ( char * command )/* C API ポインタ の 総数 */# define PySpam _ API _ pointers 1 # ifdef SPAM _ MODULE /* この 部分 は spammodule . c を コンパイル する 際 に 使わ れる */ static PySpam _ System _ RETURN PySpam _ System PySpam _ System _ PROTO ;# else /* この 部分 は spammodule の API を 使う モジュール 側 で 使わ れる */ static void ** PySpam _ API ;# define PySpam _ System \(*( PySpam _ System _ RETURN (*) PySpam _ System _ PROTO ) PySpam _ API [ PySpam _ System _ NUM ])/* エラー による 例外 の 場合 に は - 1 を 、 成功 する と 0 を 返す */ static intimport _ spam ( void ){ PyObject * module = PyImport _ ImportModule (" spam "); if ( module != NULL ) { PyObject * c _ api _ object = PyObject _ GetAttrString ( module , "_ C _ API "); if ( c _ api _ object == NULL ) return - 1 ; if ( PyCObject _ Check ( c _ api _ object )) PySpam _ API = ( void **) PyCObject _ AsVoidPtr ( c _ api _ object ); Py _ DECREF ( c _ api _ object );} return 0 ;}# endif # ifdef __ cplusplus }# endif # endif /* ! defined ( Py _ SPAMMODULE _ H ) */ 
PySpam _ System () へ の アクセス 手段 を 得る ため に クライアントモジュール 側 が し なけれ ば なら ない こと は 、 初期 化 関数 内 で の import _ spam () 関数 ( または マクロ ) の 呼び出し です : 
PyMODINIT _ FUNCinitclient ( void ){ PyObject * m ; Py _ InitModule (" client ", ClientMethods ); if ( import _ spam () 0 ) return ;/* さらなる 初期 化 処理 は ここ に 置ける */} 
この アプローチ の 主要 な 欠点 は 、 spammodule . h が やや 難解 に なる という こと です 。 
と は いえ 、 各 関数 の 基本 的 な 構成 は 公開 さ れる もの と 同じ な ので 、 書き方 を 一 度 だけ 学べ ば すみ ます 。 最後 に 、 CObject は 、 自身 に 保存 さ れ て いる ポインタ を メモリ 確保 し たり 解放 し たり する 際 に 特に 便利 な 、 もう 一つ の 機能 を 提供 し て いる という こと に 触れ て おか ね ば なり ませ ん 。 
詳細 は 
の `` CObjects '' の 節 、 および CObjects の 実装 部分 ( Python ソース コード 配布 物 中 の ファイル Include / cobject . h および Objects / cobject . c に 述べ られ て い ます 。 
1 . 1 MacPython - OSX の 取得 と インストール 
1 . Mac OS 9 で Python を 利用 する Macintosh 上 で の Python の 使い方 は 、 特に Mac OS 9 上 において は Unix ライク な システム や Windows システム 上 で 使う の と 全く 異なっ て い ます ( MacPython - OSX に は 完全 な Unix Python が 入っ て いる ので 、 Unix ライク な システム と ほぼ 同じ 知識 を 利用 でき ます ) 。 
ほとんど の Python 文書 や 、 「 公式 の 」 文書 、 刊行 さ れ て いる 書籍 で は 、 Unix ライク な システム や Windows システム 上 で どう Python を 使う か について 述べ て いる に すぎ ず 、 MacPython - OS 9 を 初めて 利用 する 人 を 混乱 さ せる 原因 に なっ て い ます 。 
この 章 で は 、 簡単 な 入門 編 として Macintosh 上 で Python を 具体 的 に どう 使う の か を 解説 し て いき ます 。 
IDE について の 章 ( 1 . 3 節 ) は MacPython - OSX に も 関係 し て い ます 。 
1 . 2 . 2 . 1 ドラッグ ＆ ドロップ する 
この 章 の 関数 は 、 C で 書か れ た コード を プラットフォーム 間 で 可 搬性 の ある もの に する 上 で 役立つ もの から 、 C から Python モジュール を 使う もの 、 そして 関数 の 引数 を 解釈 し たり 、 C の 値 から Python の 値 を 構築 する もの まで 、 様々 な ユーティリティ 的 タスク を 行い ます 。 
この 章 の 関数 を 使う と ファイル または バッファ に ある Python ソース コード を 実行 でき ます が 、 より 詳細 な やり取り を インタプリタ と する こと は でき ない でしょ う 。 これら の 関数 の いくつ か は 引数 として 文法 の 開始 記号 を 受け取り ます 。 
使用 できる 開始 記号 は Py _ eval _ input と Py _ file _ input 、 Py _ single _ input です 。 開始 期 号 の 説明 は これら を 引数 として 取る 関数 の 後 に あり ます 。 
これら の 関数 の いくつ か が FILE * 引数 を とる こと に も 注意 し て ください 。 
注意深く 扱う 必要 が ある 特別 な 問題 に は 、 異なる C ライブラリ の FILE 構造 体 は 異なっ て い て 互換 性 が ない 可能 性 が ある という こと が 関係 し て い ます 。 
実際 に ( 少なくとも ) Windows で は 、 動的 リンク さ れる 拡張 が 異なる ライブラリ を 使う こと が 可能 で あり 、 したがって 、 FILE * 引数 が Python ラン タイム が 使っ て いる ライブラリ と 同じ ライブラリ によって 作成 さ れ た こと が 確か なら ば 、 単に これら の 関数 へ 渡す だけ という こと に 注意 す べき です 。 
標準 インタプリタ の ため の メイン プログラム 。 
Python を 組み込む プログラム の ため に これ を 利用 できる よう に し て い ます 。 
argc と argv 引数 を C プログラム の main () 関数 へ 渡さ れる もの と まったく 同じ に 作成 す べき です 。 
下記 の PyRun _ AnyFileExFlags () の closeit を 0 に 、 flags を NULL に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ AnyFileExFlags () の closeit を 0 に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ AnyFileExFlags () の flags を NULL に し て 単純 化 し た インタフェース です 。 
fp が 対話 的 デバイス ( コンソール や 端末 入力 あるいは Unix 仮想 端末 ) と 関連づけ られ た ファイル を 参照 し て いる なら ば 、 PyRun _ InteractiveLoop () の 値 を 返し ます 。 それ 以外 の 場合 は 、 PyRun _ SimpleFile () の 結果 を 返し ます 。 
filename が NULL なら ば 、 この 関数 は ファイル 名 として "???" を 使い ます 。 
下記 の PyRun _ SimpleStringFlags () の PyCompilerFlags * を NULL に し て 単純 化 し た インタフェース です 。 
__ main __ モジュール の 中 で flags に従って command に 含ま れる Python ソース コード を 実行 し ます 。 
__ main __ が まだ 存在 し ない 場合 は 作成 さ れ ます 。 正常 終了 の 場合 は 0 を 返し 、 また 例外 が 発生 し た 場合 は - 1 を 返し ます 。 
エラー が あっ て も 、 例外 情報 を 得る 方法 は あり ませ ん 。 
下記 の PyRun _ SimpleStringFileExFlags () の closeit を 0 に 、 flags を NULL に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ SimpleStringFileExFlags () の closeit を 0 に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ SimpleStringFileExFlags () の flags を NULL に し て 単純 化 し た インタフェース です 。 
Similar to PyRun _ SimpleStringFlags (), but the Python sourcePyRun _ SimpleString () と 似 て い ます が 、 Python ソース コード を メモリ 内 の 文字 列 で は なく fp から 読み込み ます 。 
filename は その ファイル の 名前 で なけれ ば なり ませ ん 。 
closeit が 真 なら ば 、 PyRun _ SimpleFileExFlags は 処理 を 戻す 前 に ファイル を 閉じ ます 。 
下記 の PyRun _ InteractiveOneFlags () の flags を NULL に し て 単純 化 し た インタフェース です 。 
対話 的 デバイス に 関連付け られ た ファイル から 文 を 一つ 読み込み 、 flags に従って 実行 し ます 。 
filename が NULL なら ば 、 "???" が 代わり に 使わ れ ます 。 
sys . ps 1 と sys . ps 2 を 使っ て 、 ユーザ に プロンプト を 提示 し ます 。 
入力 が 正常 に 実行 さ れ た とき は 0 を 返し ます 。 
例外 が 発生 し た 場合 は - 1 を 返し ます 。 
パース エラー の 場合 は Python の 一部 として 配布 さ れ て いる errcode . h インクルードファイル に ある エラーコード を 返し ます 。 ( Python . h は errcode . h を インクルード し ませ ん 。 
したがって 、 必要 なら ば 特別 に インクルード し なけれ ば なら ない こと に 注意 し て ください 。 ) 
下記 の PyRun _ InteractiveLoopFlags () の flags を 0 に し て 単純 化 し た インタフェース です 。 
対話 的 デバイス に 関連付け られ た ファイル から EOF に 達する まで 複数 の 文 を 読み込み 実行 し ます 。 
filename が NULL なら ば 、 "???" が 代わり に 使わ れ ます 。 
EOF に 達する と 0 を 返し ます 。 
下記 の PyRun _ S i m p l eParseStringFlagsFilename () の filename を NULL に 、 flags を 0 に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ S i m p l eParseStringFlagsFilename () の filename を NULL に し て 単純 化 し た インタフェース です 。 
開始 トー クン start を 使っ て str に 含ま れる Python ソース コード を flags 引数 に従って パース し ます 。 
効率 的 に 評価 可能 な コード オブジェクト を 作成 する ため に その 結果 を 使う こと が でき ます 。 コード 断片 を 何 度 も 評価 し なけれ ば なら ない 場合 に 役に立ち ます 。 
下記 の PyRun _ SimpleParseFileFlags () の flags を 0 に し て 単純 化 し た インタフェース です 。 
PyParser _ S i m p l eParseStringFlagsFilename () に 似 て い ます が 、 Python ソース コード を メモリ 内 の 文字 列 で は なく fp から 読み込み ます 。 
filename は その ファイル の 名前 で なけれ な なり ませ ん 。 PyObject * 
下記 の PyRun _ StringFlags () の flags を NULL に し て 単純 化 し た インタフェース です 。 
辞書 globals と locals で 指定 さ れる コンテキスト において 、 str に 含ま れる Python ソース コード を コンパイラ フラグ flags の もと で 実行 し ます 。 
下記 の PyRun _ FileExFlags () の closeit を 0 に し 、 flags を NULL に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ FileExFlags () の flags を NULL に し て 単純 化 し た インタフェース です 。 
下記 の PyRun _ FileExFlags () の closeit を 0 に し て 単純 化 し た インタフェース です 。 
PyRun _ String () と 似 て い ます が 、 Python ソース コード を メモリ 内 の 文字 列 で は なく fp から 読み込み ます 。 
closeit を 真に する と 、 PyRun _ FileExFlags () から 処理 を 戻す 前 に ファイル を 閉じ ます 。 filename は その ファイル の 名前 で なけれ ば なり ませ ん 。 
下記 の Py _ CompileStringFlags () の flags を NULL に し て 単純 化 し た インタフェース です 。 
str 内 の Python ソース コード を パース し て コンパイル し 、 作ら れ た コード オブジェクト を 返し ます 。 
開始 トーク ン は start によって 与え られ ます 。 これ は コンパイル 可能 な コード を 制限 する ため に 使う こと が でき 、 Py _ eval _ input 、 Py _ file _ input もしくは Py _ single _ input で ある べき です 。 
filename で 指定 さ れる ファイル 名 は コード オブジェクト を 構築 する ため に 使わ れ 、 トレース バック あるいは SyntaxError 例外 メッセージ に 出 て くる 可能 性 が あり ます 。 
コード が パース でき なかっ たり コンパイル でき なかっ たり し た 場合 に 、 これ は NULL を 返し ます 。 
これ は 任意 の 長 さ の Python ソース コード を コンパイル する とき に 使う 記号 です 。 
単一 の 文 に対する Python 文法 の 開始 記号 で 、 Py _ CompileString () 
と 一緒 に 使い ます 。 これ は 対話 式 の インタプリタ ループ の ため の 記号 です 。 
コンパイラ フラグ を 収め て おく ため の 構造 体 です 。 
コード を コンパイル する だけ の 場合 、 この 構造 体 が int flags として 渡さ れ ます 。 コード を 実行 する 場合 に は PyCompilerFlags * flags として 渡さ れ ます 。 
この 場合 、 from __ future __ import は flags の 内容 を 変更 でき ます 。 PyCompilerFlags * flags が NULL の 場合 、 cf _ flags は 0 として 扱わ れ 、 from __ future __ import による 変更 は 無視 さ れ ます 。 
この ビット を flags に セット する と 、 除算 演算 子 / は PEP 238 による 「 真 の 除算 ( true division )」 として 扱わ れ ます 。 
警告 カテゴリ を 表現 する 組み込み 例外 は 数多く あり ます 。 
この カテゴリ 化 は 警告 を グループ ごと フィルタ する 上 で 便利 です 。 
現在 以下 の 警告 カテゴリ クラス が 定義 さ れ て い ます : 
全て の 警告 カテゴリ クラス の 基底 クラス です 。 
Exception の サブ クラス です 。 
その 機能 が 廃 用 化 さ れ て いる こと を 示す 警告 カテゴリ の 基底 クラス です 。 
その 文法 機能 が あいまい で ある こと を 示す 警告 カテゴリ の 基底 クラス です 。 
その 実行 時 システム 機能 が あいまい で ある こと を 示す 警告 カテゴリ の 基底 クラス です 。 
その 構文 の 意味 付け が 将来 変更 さ れる 予定 で ある こと を 示す 警告 カテゴリ の 基底 クラス です 。 
これら は 技術 的 に は 組み込み 例外 です が 、 概念的 に は 警告 メカニズム に 属し て いる ので ここ で 記述 さ れ て い ます 。 標準 の 警告 カテゴリ を ユーザ の 作成 し た コード 上 で サブ クラス 化 する こと で 、 さらに 別 の 警告 カテゴリ を 定義 する こと が でき ます 。 
警告 カテゴリ は 常に Warning クラス の サブ クラス で なけれ ば なり ませ ん 。 
警告 フィルタ は 、 ある 警告 を 無視 す べき か 、 表示 す べき か 、 あるいは ( 例外 を 送出 する ) エラー に する べき か を 制御 し ます 。 概念的 に は 、 警告 フィルタ は 複数 の フィルタ 仕様 から なる 順番 付け られ た リスト を 維持 し て い ます ; 何らかの 特定 の 警告 が 生じる と 、 フィルタ 仕様 の 一致 する もの が 見つかる まで 、 リスト 中 の 各 フィルタ と の 照合 が 行わ れ ます ; 一致 し た フィルタ 仕様 が その 警告 の 処理 方法 を 決定 し ます 。 
フィルタ の 各 エントリ は ( action , message , category , module , lineno ) から なる タプル です 。 ここ で : 
action は 以下 の 文字 列 の うち の 一つ です : 
処理 方法 
一致 し た 警告 を 例外 に 変え ます 
一致 し た 警告 を 決して 出力 し ませ ん 
一致 し た 警告 を 常に 出力 し ます 
一致 し た 警告 の うち 、 警告 の 原因 に なっ た ソース コード 上 の 場所 ごと に 、 最初 の 警告 のみ 出力 し ます 。 
一致 し た 警告 の うち 、 警告 の 原因 に なっ た モジュール ごと に 、 最初 の 警告 のみ 出力 し ます 。 
一致 し た 警告 の うち 、 警告 の 原因 に なっ た 場所 に かかわら ず 最初 の 警告 のみ 出力 し ます 。 
message は 正規 表現 を 含む 文字 列 で 、 メッセージ は この パタン に 一致 し なけれ ば なり ませ ん ( 照合 時 に は 常に 大 小文字 の 区別 を し ない よう に コンパイル さ れ ます )。 category は クラス ( Warning の サブ クラス ) です 。 
警告 クラス は この クラス の サブ クラス に 一致 し なけれ ば なり ませ ん 。 
module は 正規 表現 を 含む 文字 列 で 、 モジュール 名 は この パタン に 一致 し なけれ ば なり ませ ん ( 照合 時 に は 常に 大 小文字 の 区別 を し ない よう に コンパイル さ れ ます )。 
lineno 整数 で 、 警告 が 発生 し た 場所 の 行 番号 に 一致 し なけれ ば なり ませ ん 、 すべて の 行 に 一致 する 場合 に は 0 に なり ます 。 
Warning クラス は 組み込み の Exception クラス から 導出 さ れ て いる ので 、 警告 を エラー に 変える に は 単に category ( message ) を raise し ます 。 警告 フィルタ は Python インタプリタ の コマンド ライン に 渡さ れる - W オプション で 初期 化 さ れ ます 。 
インタプリタ は - W オプション に 渡さ れる 全て の 引数 を sys . warnoptions ; に 変換 せ ず に 保存 し ます ; warnings モジュール は 最初 に import さ れ た 際 に これら の 引数 を 解釈 し ます ( 無効 な オプション は sys . stderr に メッセージ を 出力 し た 後 無視 さ れ ます )。 
警告 を 発する か 、 無視 する か 、 あるいは 例外 を 送出 し ます 。 
category 引数 が 与え られ た 場合 、 警告 カテゴリ クラス で なけれ ば なり ませ ん ( 上 を 参照 し て ください ); 標準 の 値 は UserWarning です 。 
message を Warning インスタンス で 代用 する こと も でき ます が 、 この 場合 category は 無視 さ れ 、 message .__ class __ が 使わ れ 、 メッセージ 文 は str ( message ) に なり ます 。 
発さ れ た 例外 が 前述 し た 警告 フィルタ によって エラー に 変更 さ れ た 場合 、 この 関数 は 例外 を 送出 し ます 。 
引数 stacklevel は Python で ラッパ 関数 を 書く 際 に 利用 する こと が でき ます 。 
こう する こと で 、 警告 が 参照 する ソース コード 部分 を 、 deprecation () 自身 で は なく deprecation () を 呼び出し た 側 に でき ます ( という の も 、 前者 の 場合 は 警告 メッセージ の 目的 を 台無し に し て しまう から です )。 
warn () の 機能 に対する 低 レベル の インタフェース で 、 メッセージ 、 警告 カテゴリ 、 ファイル 名 および 行 番号 、 そして オプション の モジュール 名 および レジストリ 情報 ( モジュール の __ warningregistry __ 辞書 ) を 明示 的 に 渡し ます 。 
モジュール 名 は 標準 で . py が 取り去ら れ た ファイル 名 に なり ます ; レジストリ が 渡さ れ なかっ た 場合 、 警告 が 抑制 さ れる こと は あり ませ ん 。 
message は 文字 列 の とき 、 category は Warning の サブ クラス で なけれ ば なり ませ ん 。 また message は Warning の インスタンス で あっ て も よく 、 この 場合 category は 無視 さ れ ます 。 
警告 を ファイル に 書き込み ます 。 
標準 の 実装 で は 、 formatwarning ( message , category , filename , lineno ) を 呼び出し 、 返さ れ た 文字 列 を file に 書き込み ます 。 file は 標準 で は sys . stderr です 。 
この 関数 は warnings . showwarning に 別 の 実装 を 代入 し て 置き換える こと が でき ます 。 
警告 を 通常 の 方法 で 書式 化 し ます 。 
返さ れる 文字 列 内 に は 改行 が 埋め込ま れ て いる 可能 性 が あり 、 かつ 文字 列 は 改行 で 終端 さ れ て い ます 。 
警告 フィルタ の リスト に エントリ を 一つ 挿入 し ます 。 
標準 で は エントリ は 先頭 に 挿入 さ れ ます ; append が 真 なら ば 、 末尾 に 挿入 さ れ ます 。 この 関数 は 引数 の 型 を チェック し 、 message および module の 正規 表現 を コンパイル し て から 、 これら を タプル に し て 警告 フィルタ の 先頭 に 挿入 し ます 。 
従って 、 以前 に 挿入 さ れ た エントリ と 後で 挿入 さ れ た エントリ の 両方 が 特定 の 警告 に 合致 し た 場合 、 後者 が 前者 の エントリ を 上書き し ます 。 
引数 が 省略 さ れる と 、 標準 で は 全て に マッチ する 値 に 設定 さ れ ます 。 
警告 フィルタ を リセット し ます 。 
これ により 、 - W コマンドラインオプション による もの を 含め 、 filterwarnings の 呼び出し による 影響 は すべて 無効 化 さ れ ます 。 
この 簡単 な 例 で は 、 アプリケーション が 以前 に 参照 し た オブジェクト を 取り出す ため に オブジェクト ID を 利用 する 方法 を 示し ます 。 
オブジェクト に 生き た まま で ある こと を 強制 する こと なく 、 オブジェクト の ID は 他 の データ 構造 の 中 で 使え ます 。 
しかし 、 そう する 場合 は 、 オブジェクト は まだ ID によって 取り出せ ます 。 import weakref _ id 2 obj _ dict = weakref . WeakValueDictionary () def remember ( obj ): oid = id ( obj )_ id 2 obj _ dict [ oid ] = objreturn oiddef id 2 obj ( oid ): return _ id 2 obj _ dict [ oid ] 
対応 する 型 オブジェクト の tp _ weaklistoffset フィールド を フィールド の オフセット に 設定 する こと も し なけれ ば なり ませ ん 。 また 、 Py _ TPFLAGS _ HAVE _ WEAKREFS を tp _ flags スロット へ 追加 する 必要 も あり ます 。 
例えば 、 インスタンス 型 は 次 の よう な 構造 に 定義 さ れ ます : 
typedef struct { PyObject _ HEADPyClassObject * in _ class ; /* クラス オブジェクト */ PyObject * in _ dict ; /* 辞書 */ PyObject * in _ weakreflist ; /* 弱 参照 の リスト */} PyInstanceObject ; 
インスタンス に対して 静的 に 宣言 さ れる 型 オブジェクト は この よう に 定義 さ れ ます : 
PyTypeObject PyInstance _ Type = { PyObject _ HEAD _ INIT ( PyType _ Type ) 0 ," module . instance ",/* 簡単 の ため に たくさん の もの を 省略 ... */ Py _ TPFLAGS _ DEFAULT | Py _ TPFLAGS _ HAVE _ WEAKREFS /* tp _ flags */ 0 , /* tp _ doc */ 0 , /* tp _ traverse */ 0 , /* tp _ clear */ 0 , /* tp _ richcompare */ offsetof ( PyInstanceObject , in _ weakreflist ), /* tp _ weaklistoffset */}; 
型 コンス トラクタ は 弱 参照 リスト を NULL に 初期 化 する 責任 が あり ます : 
static PyObject * instance _ new () {/* 簡単 の ため に 他 の 初期 化 を 省略 */ self - in _ weakreflist = NULL ; return ( PyObject *) self ;} 
さらに 一つ だけ 追加 する と 、 どんな 弱 参照 で も 取り除く ため に は 、 デストラクタ は 弱 参照 マネージャ を 呼び出す 必要 が あり ます 。 
オブジェクト の 破壊 の どんな 他 の 部分 が 起きる 前 に これ を 行う べき です が 、 弱 参照 リスト が 非 NULL で ある 場合 は これ が 要求 さ れる だけ です : 
static voidinstance _ dealloc ( PyInstanceObject * inst ){/* 必要 なら 一時 オブジェクト を 割り当て て ください 。 しかし 、 まだ 破壊 し ない で ください 。 
*/ if ( inst - in _ weakreflist != NULL ) PyObject _ ClearWeakRefs (( PyObject *) inst );/* 普通 に オブジェクト の 破壊 を 進め て ください 。 */} 
Python は 弱 参照 を 第 一 級 オブジェクト ( first - class object ) として サポート し ます 。 
弱 参照 を 直接 実装 する 二 種類 の 固有 の オブジェクト 型 が あり ます 。 
第 一 は 単純 な 参照 オブジェクト で 、 第 二 は オリジナル の オブジェクト に対して 可能 な 限り プロキシ として 振舞う オブジェクト です 。 
ob が 参照 オブジェクト か プロキシオブジェクト の 場合 に 真 を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
ob が 参照 オブジェクト の 場合 に 真 を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
ob が プロキシオブジェクト の 場合 に 真 を 返し ます 。 
ob に対する 弱 参照 オブジェクト を 返し ます 。 
この 関数 は 常に 新た な 参照 を 返し ます が 、 必ずしも 新た な オブジェクト を 作る 保証 は あり ませ ん ; 既存 の 参照 オブジェクト が 返さ れる こと も あり ます 。 
第 二 の パラメタ callback は 呼び出し 可能 オブジェクト で 、 ob が ガーベジコレクション さ れ た 際 に 通知 を 受け取り ます ; callback は 弱 参照 オブジェクト 自体 を 単一 の パラメタ として 受け取り ます 。 
callback は None や NULL に し て も かまい ませ ん 。 
ob が 弱 参照 でき ない オブジェクト の 場合 や 、 callback が 呼び出し 可能 オブジェクト 、 None 、 NULL の いずれ で も ない 場合 は 、 NULL を 返し て TypeError を 送出 し ます 。 
ob に対する 弱 参照 プロキシオブジェクト を 返し ます 。 
この 関数 は 常に 新た な 参照 を 返し ます が 、 必ずしも 新た な オブジェクト を 作る 保証 は あり ませ ん ; 既存 の 参照 オブジェクト が 返さ れる こと も あり ます 。 
ob が 弱 参照 でき ない オブジェクト の 場合 や 、 callback が 呼び出し 可能 オブジェクト 、 None 、 NULL の いずれ で も ない 場合 は 、 NULL を 返し て TypeError を 送出 し ます 。 
弱 参照 ref が 参照 し て いる オブジェクト を 返し ます 。 
被参照 オブジェクト が すでに 存続 し て い ない 場合 、 None を 返し ます 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
PyWeakref _ GetObject () に 似 て い ます が 、 マクロ で 実装 さ れ て い て 、 エラー チェック を 行い ませ ん 。 バージョン 2 . 2 で 新た に 追加 さ れ た 仕様 です 。 
while 文 は 、 式 の 値 が 真 で ある 間 、 実行 を 繰り返す ため に 使わ れ ます : 
while 文 は 式 を 繰り返し 真偽 評価 し 、 真 で あれ ば 最初 の スイート を 実行 し ます 。 式 が 偽 で あれ ば ( 最初 から 偽 に なっ て いる こと も あり え ます )、 else 節 が ある 場合 に は それ を 実行 し 、 ループ を 終了 し ます 。 
continue 文 が 最初 の スイート 内 で 実行 さ れる と 、 スイート 内 に ある 残り の 文 の 実行 を スキップ し て 、 式 の 真偽 評価 に 戻り ます 。 
論理 行 の 先頭 や 文字 列 の 内部 に ある 場合 を 除き 、 空白 文字 で ある スペース 、 タブ 、 および フォーム フィード は 、 トー クン を 分割 する ため に 自由 に 利用 する こと が でき ます 。 
二つ の トーク ン を 並べ て 書く と 別 の トーク ン として みなさ れ て しまう よう な 場合 に は 、 トー クン の 間 に 空白 が 必要 と なり ます ( 例えば 、 ab は 一つ の トーク ン です が 、 a b は 二つ の トー クン と なり ます )。 
4 . 2 Unix と Windows 
Windows で の 拡張 モジュール の ビルド に は 、 Unix と 同じ よう に 、 
パッケージ を 使っ た ビルド 作業 の 制御 と 手動 の 二 通り の アプローチ が あり ます 。 
distutils による アプローチ は ほとんど の 拡張 モジュール で うまく いき ます ; 
を 使っ た 拡張 モジュール の ビルド と パッケージ 化 について は 、 
ここ で 述べる 例題 の ファイル は 、 Python ソース コード と共に 配布 さ れ て おり 、 PCexample _ nt ディレクトリ に あり ます 。 
例題 ファイル を コピー する 
example _ nt ディレクトリ は PC ディレクトリ の サブ ディレクトリ に なっ て い ます 。 これ は PC 関連 の 全て の ファイル を ソース コード 配布 物 内 の 同じ ディレクトリ に 置く ため の 措置 です 。 
と は いえ 実際 に は 、 example _ nt ディレクトリ は PC の 下 で は 利用 でき ませ ん 。 
そこで 、 まず この ディレクトリ を 一 階層 上 に コピー し て 、 example _ nt が PC および Include と 同じ 階層 の ディレクトリ に なる よう に し ます 。 
以降 の 作業 は 、 移動 先 の 新しい ディレクトリ 内 で 行っ て ください 。 
プロジェクト を 開く 
VC ++ から 、 ファイル ワークス ペース を 開く ダイアログメニュー を 選択 し ます ( ファイル 開く で は あり ませ ん !)。 
ディレクトリ 階層 を 辿っ て 、 example _ nt 
を コピー し た ディレクトリ 内 の example . dsw を 選択 し 、 「 開く 」 を クリック し ます 。 
例題 の DLL を ビルド する 
設定 が 全て 正しく 行わ れ て いる か 調べる ため に 、 ビルド し て み ます : 
ビルド 構成 を 選び ます 。 
この ステップ は 省略 でき ます 。 
ビルド アクティブ な 構成 の 選択 を 選び 、 example - Win 32 リリース または example - Win 32 デバッグ を 選び ます 。 
この ステップ を 飛ばす と 、 VC ++ は デフォルト で デバッグ 構成 を 使い ます 。 
DLL を ビルド し ます 。 
デバッグモード なら 、 ビルド example _ d . dll の ビルド を 、 リリース モード なら ビルド example . dll を 選び ます 。 この 操作 で 。 
全て の 中間 ファイル および 最終 ファイル が 、 上 の ビルド 構成 で 選ん だ 構成 に従って Debug または Release という 名前 の ディレクトリ に 生成 さ れ ます 。 
デバッグモード の DLL を テスト する 
デバッグビルド が 成功 し たら 、 コマンドプロンプト を 起動 し 、 example _ ntDebug ディレクトリ に 移動 し て ください 。 
以下 の セッション 通り に コマンド を 実行 できる はず です ( C は DOS コマンド の プロンプト 、 は Python の プロンプト です ; ビルド 情報 や 様々 な デバッグ 出力 は 、 ここ に 示し た スクリーン 出力 と 一致 し ない こと も ある ので 注意 し て 下さい ): 
おめでとう ござい ます ! とうとう 初めて の Python 拡張 モジュール の ビルド に 成功 し まし た ね 。 
自分 用 に プロジェクト を 作成 する 
プロジェクト 用 の ディレクトリ を 適当 な 名前 で 作成 し て ください 。 
自作 の C ソース コード を ディレクトリ 内 に コピー し ます 。 
モジュール の ソース コード ファイル 名 は 必ずしも モジュール 名 と 一致 し て いる 必要 は あり ませ ん が 、 初期 化 関数 の 名前 は モジュール 名 と 一致 し て い なけれ ば なり ませ ん -- 初期 化 関数 の 名前 が initspam () なら 、 モジュール は spam という 名前 で しか import でき ませ ん 。 
initspam () は 第 一 引数 を " spam " に し て 、 Py _ InitModule () を 呼び出し ます ( この ディレクトリ に ある 、 最小限 の 内容 が 書か れ て いる example . c を 手がかり に する と よい でしょ う )。 なら わし として 、 ファイル は spam . c または spammodule . c という 名前 に し て おき ます 。 
出力 ファイル 名 は リリース モード で は smap . dll や spam . pyd 、 デバッグモード で は smap _ d . dll や spam _ d . pyd 、 に なる はず です ( 後者 は 、 システム ライブラリ spam . dll と 、 Python インタフェース と なる 自作 の モジュール と の 混同 を 避ける ため に 推奨 さ れ て い ます ) 。 さて 、 やり方 は 二 通り あり ます : 
example . dsw と example . dsp を コピー し 、 spam .* に 名前 を 変え て 、 手作業 で 編集 する 
新しく プロジェクト を 作成 する ; 説明 は 下 に あり ます 。 
どちら の 場合 も 、 example _ ntexample . def を spamspam . def に コピー し て 、 新た に でき た spam . def を 編集 し 、 二 行 目 に ` initspam ' が 入る よう に し ます 。 
自分 で 新た な プロジェクト を 作成 し た の なら 、 ここ で spam . def を プロジェクト に 追加 し て おい て ください ( この ファイル は たった 二 行 しか ない 目障り な ファイル です 。 
. def ファイル を 全く 無視 する という 方法 も あり 、 それ に は / exprt : initspam を 「 プロジェクト の オプション 」 ダイアログ に ある リンク 設定 の どこ か に 手動 で 追加 し ます )。 
新しく プロジェクト を 作成 する 
ファイル 新規 作成 プロジェクト ダイアログ を 使っ て 、 新た な プロジェクト 用 ワークス ペース を 作成 し ます 。 
Win 32 ダイナミックリンクライブラリ を 選択 し 、 名前 (" spam ") を 入れ 、 「 場所 」 が 先ほど 作成 し た spam ディレクトリ 下 に ( Python ビルドツリー の 直下 の サブ ディレクトリ で 、 Include および PC と 同じ ディレクトリ に なる はず です ) ある こと を 確かめ ます 。 
「 作成 」 を クリック し ます 。 
プロジェクト 設定 ダイアログ を 開き ます 。 
ほんの いくつ か です が 、 設定 の 変更 が 必要 です 。 
「 構成 」 ドロップダウンリスト に 「 すべて の 構成 」 が 設定 さ れ て いる か 確かめ て ください 。 
C / C ++ タブ を 選び 、 ポップアップ メニュー から 「 プリプロセッサ 」 カテゴリ を 選び ます 。 
以下 の テキスト : 
を 、 追加 の インクルードディレクトリ と ラベル さ れ た エントリ ボックス に 入力 し ます 次に 、 「 リンカ 」 タブ の 「 入力 」 カテゴリ を 選び 、 
を 追加 の ライブラリ ディレクトリ と 書か れ た テキスト ボックス に 入力 し ます 。 さて 、 構成 ごと に 特有 の 設定 を いくつ か 行う 必要 が あり ます :「 構成 」 ドロップダウンリスト から 、 Win 32 リリース を 選ん で ください 。 
「 リンク 」 タブ を クリック し 、 「 入力 」 カテゴリ を 選ん で 、 「 追加 の 依存 ファイル 」 ボックス 内 の リスト に pythonXY . lib を 追加 し ます 。 「 構成 」 ドロップダウンリスト から 、 Win 32 デバッグ に 切り替え 、 「 追加 の 依存 ファイル 」 ボックス 内 の リスト に pythonXY _ d . lib を 追加 し ます 。 
次に C / C ++ タブ を クリック し て 、 コード 生成 を カテゴリ から 選び 、 ラインタイムライブラリ に対して マルチスレッド デバッグ DLL を 選び ます 。 「 構成 」 ドロップダウンリスト から Win 32 リリース に 切り替え なおし ます 。 
ラインタイムライブラリ に対して マルチスレッド DLL を 選び ます 。 前 の 節 で 述べ た spam . def を ここ で 作成 し て おか ね ば なり ませ ん 。 
その後 、 追加 ファイル を プロジェクト に 追加 ダイアログ を 選び ます 。 
「 ファイル の 種類 」 を *.* に し て 、 spam . c と spam . def を 選び 、 OK を クリック し ます ( 一つ 一つ ファイル を 追加 し て も かまい ませ ん )。 
作っ て いる モジュール が 新た な 型 を 作成 する の なら 、 以下 の 行 : 
に 変更 し て ください 。 
また 、 以下 の 行 を モジュール 初期 化 関数 に 加え ます : 
この 操作 を 行う 詳しい 理由 は 、 
の 第 3 節 を 参照 し て ください 。 
Windows 版 の Python は Microsoft Visual C ++ で ビルド さ れ て い ます ; 他 の コンパイラ を 使う と 、 うまく 動作 し たり 、 し なかっ たり し ます ( Borland も 一見 うまく 動作 し ませ ん )。 
この 節 の 残り の 部分 は MSVC ++ 向け の 説明 です 。 Windows で DLL を 作成 する 際 は 、 pythonXY . lib を リンカ に 渡さ ね ば なり ませ ん 。 
例えば 二つ の DLL 、 spam と ni ( spam の 中 に は C 関数 が 入っ て いる と し ます ) を ビルド する に は 、 以下 の コマンド を 実行 し ます : 
最初 の コマンド で 、 三つ の ファイル : spam . obj 、 spam . dll および spam . lib が でき ます 。 
他 の モジュール ( Python 自体 を 含み ます ) から 、 自作 の 識別子 が 見える よう に する に は 、 " void _ declspec ( dllexport ) initspam ( void )" や " PyObject _ declspec ( dllexport ) * NiGetSpamData ( void )" の よう に 、 "_ declspec ( dllexport )" で 宣言 せ ね ば なり ませ ん 。 
Developer Studio は 必要 も なく 大量 の インポートライブラリ を DLL に 突っ込ん で 、 実行 形式 の サイズ を 100 K も 大きく し て しまい ます 。 
不用 な ライブラリ を 追い出し たけれ ば 、 「 プロジェクト の プロパティ 」 ダイアログ を 選び 、 「 リンカ 」 タブ に 移動 し て 、 インポートライブラリ の 無視 を 指定 し ます 。 
その後 、 適切 な msvcrtxx . lib を ライブラリ の リスト に 追加 し て ください 。 
2 . 9 . 3 コントロールウィンドウオブジェクト 
2 . 9 . 2 ウィンドウ オブジェクト ウィンドウ オブジェクト は 特に 次 の メソッド を 持ち ます 。 
ウィンドウ を 開く 時 は この メソッド を オーバーライド し ます 。 
MacOS ウィンドウ ID を self . wid に 入れ て do _ postopen () メソッド を 呼ぶ と 、 親 アプリケーション に ウィンドウ を 登録 し ます 。 
ウィンドウ を 閉じる とき に 特別 な 処理 を する 場合 は この メソッド を オーバーライド し ます 。 
親 アプリケーション から ウィンドウ の 登録 を 削除 する に は 、 do _ postclose () を 呼び ます 。 
ウィンドウ が リサイズ さ れ た 後 に 呼ば れ ます 。 
InvalRect を 呼び出す 以外 に も する こと が ある 場合 は これ を オーバーライド し ます 。 
ウィンドウ の コンテント 部分 を ユーザー が クリック する と 呼ば れ ます 。 
引数 は 位置 座標 ( ウィンドウ を 基準 )、 キーモディファイア 、 生 の イベント です 。 
ウィンドウ の アップデート イベント が 受信 さ れ た 時 に 呼ば れ ます 。 
ウィンドウ を 再 描画 し ます 。 
ウィンドウ が アクティブ 化 ( 
activate == 1 )、 非 アクティブ 化 ( 
activate == 0 ) する 際 に 呼ば れ ます 。 
フォーカス の ハイライト など を 処理 し ます 。 
この モジュール で は 、 3 種類 の writer オブジェクト インタフェース 実装 を 提供 し て い ます 。 
ほとんど の アプリケーション で は 、 NullWriter から 新しい writer クラス を 導出 する 必要 が ある でしょ う 。 
クラス NullWriter 
インタフェース 定義 だけ を 提供 する writer クラス です ; どの メソッド も 何ら 処理 を 行い ませ ん 。 
この クラス は 、 メソッド 実装 を まったく 継承 する 必要 の ない writer 全て の 基底 クラス に なり ます 。 
クラス AbstractWriter 
この writer は formatter を デバッグ する の に 利用 でき ます が 、 それ 以外 に 利用 できる ほど の もの で は あり ませ ん 。 
各 メソッド を 呼び出す と 、 メソッド 名 と 引数 を 標準 出力 に 印字 し て 呼び出さ れ た こと を 示し ます 。 
クラス DumbWriter 
単純 な writer クラス で file に 渡さ れ た ファイル オブジェクト か file が 省略 さ れ た 場合 に は 標準 出力 に 出力 を 書き込み ます 。 
出力 は maxcol で 指定 さ れ た カラム 数 で 単純 な 行 端 折り返し が 行わ れ ます 。 
この クラス は 連続 し た 段落 を 再 割り付け する の に 適し て い ます 。 
12 . 1 . 3 writer インタフェース writer を 作成 する ため の インタフェース は 、 インスタンス 化 しよ う と する 個々 の writer クラス に 依存 し ます 。 
以下 で 解説 する の は 、 インスタンス 化 さ れ た 全て の writer が サポート し なけれ ば なら ない インタフェース です 。 
ほとんど の アプリケーション で は AbstractFormatter クラス を formatter として 使う こと が でき ます が 、 通常 writer は アプリケーション 側 で 与え なけれ ば なら ない ので 注意 し て ください 。 
バッファ に 蓄積 さ れ て いる 出力 データ や デバイス 制御 イベント を フラッシュ し ます 。 
字 揃え の スタイル を 設定 し ます 。 
align の 値 は 任意 の オブジェクト を 取り え ます が 、 慣習 的 な 値 は 文字 列 または None で 、 None は writer の `` 好む '' 字 揃え を 使う こと を 表し ます 。 
慣習 的 な align の 値 は ' left '、 ' center '、' right '、 および ' justify ' です 。 new _ font 
フォント スタイル を 設定 し ます 。 
font は 、 デバイス の 標準 の フォント が 使わ れる こと を 示す None か 、 ( 
) の 形式 を とる タプル に なり ます 。 
size は フォント サイズ を 示す 文字 列 に なり ます ; 特定 の 文字 列 や その 解釈 は アプリケーション 側 で 定義 し ます 。 
italic 、 bold 、 および teletype といった 値 は ブール 値 で 、 それら の 属性 を 使う か どう か を 指定 し ます 。 
マージン レベル を 整数 値 level に 設定 し 、 論理 タグ ( logical tag ) を margin に 設定 し ます 。 
論理 タグ の 解釈 は writer の 判断 に 任さ れ ます ; 論理 タグ の 値 に対する 唯一 の 制限 は level が 非 ゼロ の 値 の 際 に 偽 で あっ て は なら ない という こと です 。 
割り付け スタイル ( spacing style ) を spacing に 設定 し ます 。 
追加 の スタイル を 設定 し ます 。 
styles の 値 は 任意 の 値 から なる タプル です ; AS _ IS 値 は 無視 さ れ ます 。 
少なくとも blankline 空 行 分 の 間隔 か 、 空 行 そのもの で 段落 を 分割 し ます 。 
blankline の 値 は 整数 に なり ます 。 
writer の 実装 で は 、 改行 を 行う 必要 が ある 場合 、 この メソッド の 呼び出し に 先立っ て send _ line _ break () の 呼び出し を 受ける 必要 あり ます ; この メソッド に は 段落 の 最後 の 行 を 閉じる 機能 は 含ま れ て おら ず 、 段落 間 に 垂直 スペース を 空ける 役割 しか あり ませ ん 。 
水平 罫線 を 出力 デバイス に 表示 し ます 。 
この メソッド へ の 引数 は 全て アプリケーション および writer 特有 の もの な ので 、 注意 し て 解釈 する 必要 が あり ます 。 
この メソッド の 実装 で は 、 すでに 改行 が send _ line _ break () によって なさ れ て いる もの と 仮定 し て い ます 。 
行 端 が 折り返さ れ 、 必要 に 応じ て 再 割り付け 解析 を 行っ た ( re - flowed ) 文字 データ を 出力 し ます 。 
この メソッド を 連続 し て 呼び出す 上 で は 、 writer は 複数 の 空白 文字 は 単一 の スペース 文字 に 縮 約さ れ て いる と 仮定 する こと が あり ます 。 
すでに 表示 用 に 書式 化 さ れ た 文字 データ を 出力 し ます 。 
これ は 通常 、 改行 文字 で 表さ れ た 改行 を 保存 し 、 新た に 改行 を 持ち込ま ない こと を 意味 し ます 。 
send _ formatted _ data () インタフェース と 違っ て 、 データ に は 改行 や タブ 文字 が 埋め込ま れ て い て も かまい ませ ん 。 
可能 なら ば 、 data を 現在 の 左 マージン の 左側 に 設定 し ます 。 
data の 値 に は 制限 が あり ませ ん ; 文字 列 で ない 値 の 扱い 方 は アプリケーション や writer に 完全 に 依存 し ます 。 この メソッド は 行 の 先頭 で のみ 呼び出さ れ ます 。 
test パッケージ 用 の テスト を 書く 場合 、 
回帰 テスト の 目的 は コード の 分解 です 。 その ため に は 以下 の いくつ か の ガイドライン に 従っ て ください : 
テストスイート は すべて の クラス 、 関数 および 定数 を 用いる べき です 。 これ は 外部 に 公開 さ れる 外部 API だけ で なく " 非公開 " コード も 含ん で い ます 。 
ホワイトボックス ・ テスト ( テスト を 書く とき に 対象 の コード を すぐ テスト する ) を 推奨 し ます 。 ブラックボックス ・ テスト ( 最終 的 に 公開 さ れ た ユーザーインターフェイス だけ を テスト する ) は 、 すべて の 境界 条件 と 極端 条件 を 確実 に テスト する に は 完全 で は あり ませ ん 。 
分岐 が 生じる テスト し 、 入力 を 調整 し て 、 コード の 全体 に 渡っ て 取り える 限り の 個々 の 処理 経路 を 確実 に たどら せる よう に し て ください 。 
テスト 対象 の コード に どんな バグ が 発見 さ れ た 場合 でも 、 明示 的 な テスト 追加 する よう に し て ください 。 そう する こと で 、 将来 コード を 変更 し た 際 に エラー が 再発 し ない よう に でき ます 。 
( 一 時 ファイル を すべて 閉じ たり 削除 し たり する といった ) テスト の 後始末 を 必ず 行っ て ください 。 import する モジュール を できる かぎり 少なく し 、 可能 な 限り 早期 に import を 行っ て ください 。 
そう する こと で 、 て テスト の 外部 依存 性 を 最小限 に し 、 モジュール の import による 副作用 から 生じる 変則 的 な 動作 を 最小限 に でき ます 。 
コード の 再 利用 を 最大限 に 行う よう に し て ください 。 時として 、 テスト の 多様 性 は どんな 型 の 入力 を 受け取る か の 違い まで 小さく なり ます 。 
例えば 以下 の よう に 、 入力 が 指定 さ れ た サブ クラス で 基底 テスト クラス を サブ クラス 化 し て 、 コード の 複製 を 最小 化 し ます : 
コード より 前 に テスト を 書く 方法 論 に関する Kent Beck の 著書 
この モジュール で の 例外 は クラス インスタンス として コード さ れ て い ます : 
ベース と なる 例外 クラス です 。 
Error public な データ メンバ として msg を 持ち 、 エラー の 詳細 が 収め られ て い ます 。 
Error から 導出 さ れ た クラス です 。 
インスタンス 変数 は 塚 さ れ て い ませ ん 。 
これら の 例外 を 補足 する 方法 を 以下 の 例 に 示し ます : 
Packer インスタンス に は 以下 の メソッド が あり ます : 
現在 の パック 処理 用 バッファ を 文字 列 で 返し ます 。 
パック 処理 用 バッファ を リセット し て 、 空文字 に し ます 。 
一般 的 に は 、 適切 な pack _ type () メソッド を 使え ば 、 一般 に 用い られ て いる ほとんど の XDR データ を パック する こと が でき ます 。 
各々 の メソッド は 一つ の 引数 を とり 、 パック し たい 値 を 与え ます 。 
単純 な データ 型 を パック する メソッド として 、 以下 の メソッド : pack _ uint () 、 pack _ int () 、 pack _ enum () 、 pack _ bool () 、 pack _ uhyper () そして pack _ hyper () が サポート さ れ て い ます 。 
単精度 ( single - precision ) の 浮動 小数点 数 value を パック し ます 。 
倍精度 ( double - precision ) の 浮動 小数点 数 value を パック し ます 。 
以下 の メソッド は 文字 列 、 バイト 列 、 不透明 データ ( opaque data ) の パック 処理 を サポート し ます : 
固定 長 の 文字 列 、 s を パック し ます 。 
n は 文字 列 の 長 さ です が 、 この 値 自体 は データ バッファ に は パック さ れ ませ ん 。 
4 バイト の アラインメント を 保証 する ため に 、 文字 列 は 必要 に 応じ て null バイト 列 で パディング さ れ ます 。 
pack _ fstring () と 同じく 、 固定 長 の 不透明 データ ストリーム を パック し ます 。 
可変長 の 文字 列 s を パック し ます 。 
文字 列 の 長 さ が 最初 に 符号 なし 整数 で パック さ れ 、 続い て pack _ fstring () を 使っ て 文字 列 データ が パック さ れ ます 。 
pack _ string () と 同じく 、 可変長 の 不透明 データ 文字 列 を パック し ます 。 
pack _ string () と 同じく 、 可変長 の バイト ストリーム を パック し ます 。 
以下 の メソッド は アレイ や リスト の パック 処理 を サポート し ます : 
一様 な 項目 から なる list を パック し ます 。 
この メソッド は サイズ 不定 、 すなわち 、 全て の リスト 内容 を 網羅 する まで サイズ が 分から ない リスト に対して 有用 です 。 
リスト の すべて の 項目 に対し 、 最初 に 符号 無し 整数 1 が パック さ れ 、 続い て リスト 中 の データ が パック さ れ ます 。 pack _ item は 個々 の 項目 を パック する ため に 呼び出さ れる 関数 です 。 
リスト の 末端 に 到達 する と 、 符号 無し 整数 0 が パック さ れ ます 。 
例えば 、 整数 の リスト を パック する に は 、 コード は 以下 の よう に なる はず です : import xdrlibp = xdrlib . Packer () p . pack _ list ([ 1 , 2 , 3 ], p . pack _ int ) 
一様 な 項目 から なる 固定 長 の リスト ( array ) を パック し ます 。 
n は リスト の 長 さ です 。 この 値 は データ バッファ に パック さ れ ませ ん が 、 len ( array ) が n と 等しく ない 場合 、 例外 ValueError が 送出 さ れ ます 。 
上 と 同様 に 、 pack _ item は 個々 の 要素 を パック 処理 する ため の 関数 です 。 
一様 の 項目 から なる 可変長 の list を パック し ます 。 
まず 、 リスト の 長 さ が 符号 無し 整数 で パック さ れ 、 つづい て 各 要素 が 上 の pack _ farray () と 同じ やり方 で パック さ れ ます 。 
Unpacker クラス は 以下 の メソッド を 提供 し ます : 
文字 列 バッファ を data で リセット し ます 。 
データ バッファ 中 の 現在 の アンパック 処理 位置 を 返し ます 。 
データ バッファ 中 の アンパック 処理 位置 を position に 設定 し ます 。 
get _ position () および set _ position () は 注意 し て 使わ なけれ ば なり ませ ん 。 
現在 の アンパック 処理 用 データ バッファ を 文字 列 で 返し ます 。 
アンパック 処理 を 終了 さ せ ます 。 
全て の データ が まだ アンパック さ れ て い なけれ ば 、 例外 Error が 送出 さ れ ます 。 
上 の メソッド に 加え て 、 Packer で パック 処理 できる データ 型 は いずれ も Unpacker で アンパック 処理 でき ます 。 
アンパック 処理 メソッド は unpack _ type () の 形式 を とり 、 引数 を とり ませ ん 。 
これら の メソッド は アンパック さ れ た データ オブジェクト を 返し ます 。 
単精度 の 浮動 小数点 数 を アンパック し ます 。 
unpack _ float () と 同様 に 、 倍精度 の 浮動 小数点 数 を アンパック し ます 。 
上 の メソッド に 加え て 、 文字 列 、 バイト 列 、 不透明 データ を アンパック する 以下 の メソッド が 提供 さ れ て い ます : 
固定 長 の 文字 列 を アンパック し て 返し ます 。 
n は 予想 さ れる 文字 列 の 長 さ です 。 
4 バイト の アラインメント を 保証 する ため に null バイト による パディング が 行わ れ て いる もの と 仮定 し て 処理 を 行い ます 。 
unpack _ fstring () と 同様 に 、 固定 長 の 不透明 データ ストリーム を アンパック し て 返し ます 。 
可変長 の 文字 列 を アンパック し て 返し ます 。 
最初 に 文字 列 の 長 さ が 符号 無し 整数 として アンパック さ れ 、 次に unpack _ fstring () を 使っ て 文字 列 データ が アンパック さ れ ます 。 
unpack _ string () と 同様 に 、 可変長 の 不透明 データ 文字 列 を アンパック し て 返し ます 。 
unpack _ string () と 同様 に 、 可変長 の バイト ストリーム を アンパック し て 返し ます 。 
以下 メソッド は アレイ および リスト の アンパック 処理 を サポート し ます 。 
一様 な 項目 から なる リスト を アンパック 処理 し て かえし ます 。 
リスト は 一 度 に 1 要素 づつ アンパック 処理 さ れ ます 、 まず 符号 無し 整数 による フラグ が アンパック さ れ ます 。 
もし フラグ が 1 なら 、 要素 は アンパック さ れ 、 返り 値 の リスト に 追加 さ れ ます 。 
フラグ が 0 で あれ ば 、 リスト の 終端 を 示し ます 。 unpack _ item は 個々 の 項目 を アンパック 処理 する ため に 呼び出さ れる 関数 です 。 
一様 な 項目 から なる 固定 長 の アレイ を アンパック し て （ リスト として ） 返し ます 。 
n は バッファ 内 に 存在 する と 期待 さ れる リスト の 要素 数 です 。 上 と 同様 に 、 unpack _ item は 各 要素 を アンパック する ため に 使わ れる 関数 です 。 
一様 な 項目 から なる 可変長 の list を アンパック し て 返し ます 。 まず 、 リスト の 長 さ が 符号 無し 整数 として アンパック さ れ 、 続い て 各 要素 が 上 の unpack _ farray () の よう に し て アンパック 処理 さ れ ます 。 
この モジュール は XML 名前 空間 勧告 に 定義 さ れ た 名前 空間 を サポート し ます 。 
XML 名前 空間 に 定義 さ れ た タグ 名 と 属性 名 は 、 名前 空間 ( 名前 空間 を 定義 し た URL ) の 後 に に スペース 置き 、 それ に 続く タグ 名 または 属性 名 として 扱わ れ ます 。 
たとえば 、 タグ が html xmlns =' http :// www . w 3 . org / TR / REC - html 40 ' の 場合 、 タグ 名 は ' http :// www . w 3 . org / TR / REC - html 40 html ' として 処理 さ れ 、 この 要素 の 中 に タグ html : a href =' http :// frob . com ' が 現れ た 場合 、 タグ 名 は ' http :// www . w 3 . org / TR / REC - html 40 a ' で 、 属性 名 は ' http :// www . w 3 . org / TR / REC - html 40 href ' と なり ます 。 古い XML 名前 空間 勧告 ドラフト に 基い た もの も 処理 可能 です が 、 警告 が 発せ られ ます 。 
この W 3 コンソーシアム 勧告 に は 、 XML 名前 空間 の 正確 な シンタクス と 処理 に 必要 な 内容 について 述べ られ て い ます 。 
xmlparser オブジェクト は 以下 の よう な メソッド を 持ち ます 。 
( XML ) 宣言 中 の システム 識別 子中 の 相対 URI を 解決 する ため の 、 基底 URI を 設定 し ます 。 
相対 識別子 の 解決 は アプリケーション に 任さ れ ます : この 値 は 関数 ExternalEntityRefHandler や NotationDeclHandler 、 UnparsedEntityDeclHandler に 引数 base として そのまま 渡さ れ ます 。 
以前 の SetBase () によって 設定 さ れ た 基底 URI を 文字 列 の 形 で 返し ます 。 
SetBase () が 呼ば れ て い ない とき に は None を 返し ます 。 
親 と なる パーザ で 解析 さ れ た 内容 が 参照 し て いる 、 外部 で 解析 さ れる エンティティ を 解析 する ため に 使える `` 子 の '' パーザ を 作成 し ます 。 
context パラメータ は 、 以下 に 記す よう に ExternalEntityRefHandler () ハンドラ 関数 に 渡さ れる 文字 列 で なけれ ば なり ませ ん 。 子 の パーザ は ordered _ attributes 、 returns _ unicode 、 specified _ attributes が 現在 の パーザ の 値 に 設定 さ れ て 生成 さ れ ます 。 
flag の 値 を デフォルト の true に する と 、 Expat は 代わり の DTD を ロード する ため 、 すべて の 引数 に None を 設定 し て ExternalEntityRefHandler を 呼び出し ます 。 
xmlparser オブジェクト は 次 の よう な 属性 を 持ち ます : 
buffer _ text が 真 の 時 に 使わ れる バッファ の サイズ です 。 
この 値 は 変更 でき ませ ん 。 バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 
この 値 を 真に する と 、 xmlparser オブジェクト が Expat から 返さ れ た もと の 内容 を バッファ に 保持 する よう に なり ます 。 これ により 可能 な とき に 何 度 も CharacterDataHandler () を 呼び出し て しまう よう な こと を 避ける こと が でき ます 。 
Expat は 通常 、 文字 列 の データ を 行末 ごと 大量 に 破棄 する ため 、 かなり パフォーマンス を 改善 できる はず です 。 
この 属性 は デフォルト で は 偽 で 、 いつ でも 変更 可能 です 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 buffer _ used 
buffer _ text が 利用 可能 な とき 、 バッファ に 保持 さ れ た バイト 数 です 。 
これら の バイト は UTF - 8 で エン コード さ れ た テキスト を 表し ます 。 
この 属性 は buffer _ text が 偽 の 時 に は 意味 が あり ませ ん 。 
バージョン 2 . 3 で 新た に 追加 さ れ た 仕様 です 。 ordered _ attributes 
この 属性 を ゼロ 以外 の 整数 に する と 、 報告 さ れる ( XML ノード の ) 属性 を 辞書 型 で は なく リスト 型 に し ます 。 
属性 は 文書 の テキスト 中 の 出現 順 で 示さ れ ます 。 
それぞれ の 属性 は 、 2 つ の リスト の エントリ : 属性 名 と その 値 、 が 与え られ ます 。 
( この モジュール の 古い バージョン で も 、 同じ フォーマット が 使わ れ て い ます 。 
) デフォルト で は 、 この 属性 は デフォルト で は 偽 と なり ます が 、 いつ でも 変更 可能 です 。 
バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 returns _ unicode 
この 属性 を ゼロ 以外 の 整数 に する と 、 ハンドラ 関数 に Unicode 文字 列 が 渡さ れ ます 。 
returns _ unicode が 0 の 時 に は 、 UTF - 8 で エン コード さ れ た データ を 含む 8 ビット 文字 列 が ハンドラ に 渡さ れ ます 。 
バージョン 1 . 6 で 変更 さ れ た 仕様 : 戻り 値 の 型 が いつ でも 変更 できる よう に 変更 さ れ た はず です specified _ attributes 
ゼロ 以外 の 整数 に する と 、 パーザ は 文書 の インスタンス で 特定 さ れる 属性 だけ を 報告 し 、 属性 宣言 から 導出 さ れ た 属性 は 報告 し ない よう に なり ます 。 
この 属性 が 指定 さ れ た アプリケーション で は 、 XML プロセッサ の 振る舞い に関する 標準 に 従う ため に 必要 と さ れる ( 文書 型 ) 宣言 によって 、 どの よう な 付加 情報 が 利用 できる の か という こと について 特に 注意 を 払わ なけれ ば なり ませ ん 。 
デフォルト で 、 この 属性 は 偽 と なり ます が 、 いつ でも 変更 可能 です 。 
バージョン 2 . 1 で 新た に 追加 さ れ た 仕様 です 。 以下 の 属性 に は 、 xmlparser オブジェクト で 最も 最近 に 起き た エラー に関する 値 が 入っ て おり 、 また Parse () または ParseFile () メソッド が xml . parsers . expat . ExpatError 例外 を 送出 し た 際 に のみ 正しい 値 と なり ます 。 
エラー が 発生 し た バイト の インデクス です 。 
エラー を 特定 する 数値 による コード です 。 
この 値 は ErrorString () に 渡し たり 、 errors オブジェクト で 定義 さ れ た 内容 と 比較 でき ます 。 
エラー の 発生 し た カラム 番号 です 。 
エラー の 発生 し た 行 番号 です 。 
以下 の 属性 は xmlparser オブジェクト が その 時 パース し て いる 位置 に関する 値 を 保持 し て い ます 。 
コール バック が パース イベント を 報告 し て いる 間 、 これら の 値 は イベント の 生成 し た 文字 列 の 先頭 の 位置 を 指し示し ます 。 
コール バック の 外 から 参照 さ れ た 時 に は 、 （ 対応 する コール バック で ある か に かかわら ず ） 直前 の パース イベント の 位置 を 示し ます 。 バージョン 2 . 4 で 新た に 追加 さ れ た 仕様 です 。 
パーサ へ の 入力 の 、 現在 の バイト インデックス 。 
パーサ へ の 入力 の 、 現在 の カラム 番号 。 
パーサ へ の 入力 の 、 現在 の 行 番号 。 
以下 に 指定 可能 な ハンドラ の リスト を 示し ます 。 
xmlparser オブジェクト o に ハンドラ を 指定 する に は 、 
を 使用 し ます 。 handlername は 、 以下 の リスト に 挙げ た 値 を とら ね ば なら ず 、 また func は 正しい 数 の 引数 を 受理 する 呼び出し 可能 な オブジェクト で なけれ ば なり ませ ん 。 
引数 は 特に 明記 し ない 限り 、 すべて 文字 列 と なり ます 。 
XML 宣言 が 解析 さ れ た 時 に 呼ば れ ます 。 
Expat が 文書 型 宣言 ! DOCTYPE ...) を 解析 し 始め た とき に 呼び出さ れ ます 。 
doctypeName は 、 与え られ た 値 が そのまま Expat に 提供 さ れ ます 。 
Expat が 文書 型 宣言 の 解析 を 終え た とき に 呼び出さ れ ます 。 この ハンドラ に は 、 Expat version 1 . 2 以上 が 必要 です 。 
それぞれ の 要素 型 宣言 ごと に 呼び出さ れ ます 。 name は 要素 型 の 名前 で あり 、 model は 内容 モデル ( content model ) の 表現 です 。 
ひとつ の 要素 型 で 宣言 さ れる 属性 ごと に 呼び出さ れ ます 。 
属性 リスト の 宣言 が 3 つ の 属性 を 宣言 し た と する と 、 この ハンドラ は ひとつ の 属性 に 1 度 づつ 、 3 度 呼び出さ れ ます 。 elname は 要素 名 で あり 、 これ に対して 宣言 が 適用 さ れ 、 attname が 宣言 さ れ た 属性 名 と なり ます 。 
文書 の インスタンス によって 属性 値 が 与え られる 必要 の ある とき に は required が true に なり ます 。 この メソッド は Expat version 1 . 95 . 0 以上 が 必要 です 。 
要素 の 開始 を 処理 する ごと に 呼び出さ れ ます 。 name は 要素 名 を 格納 し た 文字 列 で 、 attributes は その 値 に 属性 名 を 対応付ける 辞書 型 です 。 
要素 の 終端 を 処理 する ごと に 呼び出さ れ ます 。 
Called for every processing instruction . 処理 命令 を 処理 する ごと に 呼び出さ れ ます 。 
文字 データ を 処理 する とき に 呼び ださ れ ます 。 
この ハンドラ は 通常 の 文字 データ 、 CDATA セクション 、 無視 できる 空白 文字 列 の ため に 呼び出さ れ ます 。 
これら を 識別 し なけれ ば なら ない アプリケーション は 、 要求 さ れ た 情報 を 収集 する ため に StartCdataSectionHandler , EndCdataSectionHandler , and ElementDeclHandler コールバックメソッド を 使用 でき ます 。 
解析 さ れ て い ない ( NDATA ) エンティティ 宣言 を 処理 する ため に 呼び出さ れ ます 。 
この ハンドラ は Expat ライブラリ の バージョン 1 . 2 の ため だけ に 存在 し ます ; より 最近 の バージョン で は 、 代わり に EntityDeclHandler を 使用 し て ください ( 根底 に ある Expat ライブラリ 内 の 関数 は 、 撤廃 さ れ た もの で ある と 宣言 さ れ て い ます )。 
エンティティ 宣言 ごと に 呼び出さ れ ます 。 
パラメタ と 内部 エンティティ について 、 value は エンティティ 宣言 の 宣言 済み の 内容 を 与える 文字 列 と なり ます ; 外部 エンティティ の 時 に は None と なり ます 。 
記法 の 宣言 ( notation declaration ) で 呼び出さ れ ます 。 notationName , base , systemId , および publicId を 与える 場合 、 文字 列 に し ます 。 
public な 識別子 が 省略 さ れ た 場合 、 publicId は None に なり ます 。 
要素 が 名前 空間 宣言 を 含ん で いる 場合 に 呼び出さ れ ます 。 
名前 空間 宣言 は 、 宣言 が 配置 さ れ て いる 要素 に対して StartElementHandler が 呼び出さ れる 前 に 処理 さ れ ます 。 
名前 空間 宣言 を 含ん で い た エレメント の 終了 タグ に 到達 し た とき に 呼び出さ れ ます 。 
この ハンドラ は 、 要素 に関する 名前 空間 宣言 ごと に 、 StartNamespaceDeclHandler と は 逆 の 順番 で 一 度 だけ 呼び出さ れ 、 各 名前 空間 宣言 の スコープ が 開始 さ れ た こと を 示し ます 。 
この ハンドラ は 、 要素 が 終了 する 際 、 対応 する EndElementHandler が 呼ば れ た 後 に 呼び出さ れ ます 。 
コメント で 呼び出さ れ ます 。 data は コメント の テキスト で 、 先頭 の `!- 
-' と 末尾 の `- 
-' を 除き ます 。 
CDATA セクション の 開始 時 に 呼び出さ れ ます 。 
CDATA セクション の 構文 的 な 開始 と 終了 位置 を 識別 できる よう に する に は 、 この ハンドラ と StartCdataSectionHandler が 必要 です 。 
CDATA セクション の 終了 時 に 呼び出さ れ ます 。 
XML 文書 中 で 、 適用 可能 な ハンドラ が 指定 さ れ て い ない 文字 すべて に対して 呼び出さ れ ます 。 
この 文字 と は 、 検出 さ れ た こと が 報告 さ れる が 、 ハンドラ は 指定 さ れ て い ない よう な コンストラクト ( construct ) の 一部 で ある 文字 を 意味 し ます 。 
DefaultHandler と 同じ です が 、 内部 エンティティ の 展開 を 禁止 し ませ ん 。 エンティティ 参照 は デフォルト ハンドラ に 渡さ れ ませ ん 。 
XML 文書 が スタンドアロン の 文書 として 宣言 さ れ て い ない 場合 に 呼び出さ れ ます 。 外部 サブ セット や パラメタ エンティティ へ の 参照 が 存在 する が 、 XML 宣言 が XML 宣言 中 で standalone 変数 を yes に 設定 し て い ない 場合 に 起き ます 。 
この ハンドラ が 0 を 返す と 、 パーザ は XML _ ERROR _ NOT _ STANDALONE を 送出 し ます 。 
この ハンドラ が 設定 さ れ て い なけれ ば 、 パーザ は 前述 の 事態 で 例外 を 送出 し ませ ん 。 
外部 エンティティ の 参照 時 に 呼び出さ れ ます 。 base は 現在 の 基底 ( base ) で 、 以前 の SetBase () で 設定 さ れ た 値 に なっ て い ます 。 
public 、 および system の 識別子 で ある 、 systemId と publicId が 指定 さ れ て いる 場合 、 値 は 文字 列 です ; public 識別子 が 指定 さ れ て い ない 場合 、 publicId は None に なり ます 。 
XMLReader は 次 の メソッド を サポート し ます 。 : 
入力 ソース を 処理 し 、 SAX イベント を 発生 さ せ ます 。 
source オブジェクト に は システム 識別子 ( 入力 ソース を 特定 する 文字 列 - 一般 に ファイル 名 や URL )、 ファイル 風 オブジェクト 、 または InputSource オブジェクト を 指定 でき ます 。 
parse () から return さ れ た 段階 で 、 入力 データ の 処理 は 完了 、 パーサ・オブジェクト は 破棄 ないし リセット さ れ ます 。 
なお 、 現在 の 実装 は バイト ・ ストリーム のみ を サポート し て おり 、 文字 ストリーム の 処理 は 将来 の 課題 に なっ て い ます 。 
現在 の ContentHandler を 返し ます 。 
現在 の ContentHandler を セット し ます 。 
ContentHandler が セット さ れ て い ない 場合 、 コンテント・イベント は 破棄 さ れ ます 。 
現在 の DTDHandler を 返し ます 。 
現在 の DTDHandler を セット し ます 。 
DTDHandler が セット さ れ て い ない 場合 、 DTD イベント は 破棄 さ れ ます 。 
現在 の EntityResolver を 返し ます 。 
現在 の EntityResolver を セット し ます 。 
EntityResolver が セット さ れ て い ない 場合 、 外部 エンティティ として 解決 さ れる べき もの が 、 システム 識別子 として 解釈 さ れ て しまう ため 、 該当 する もの が なけれ ば 結果 的 に エラー と なり ます 。 
現在 の ErrorHandler を 返し ます 。 
現在 の エラー ・ ハンドラ を セット し ます 。 
ErrorHandler が セット さ れ て い ない 場合 、 エラー は 例外 を 発生 し 、 警告 が 表示 さ れ ます 。 
アプリケーション に エラー や 警告 の ロカール 設定 を 許可 し ます 。 
SAX パーサ にとって 、 エラー や 警告 の 地域 化 は 必須 で は あり ませ ん 。 しかし 、 パーサ は 要求 さ れ た ロカール を サポート し て い ない 場合 、 SAX 例外 を 発生 さ せ なけれ ば なり ませ ん 。 
アプリケーション は パース の 途中 で ロカール を 変更 する こと も でき ます 。 
機能 featurename の 現在 の 設定 を 返し ます 。 
その 機能 が 認識 でき ない とき は 、 SAXNotRecognizedException を 発生 さ せ ます 。 
広く 使わ れ て いる 機能 名 の 一覧 は モジュール xml . sax . handler に 書か れ て い ます 。 
機能 名 featurename に 値 value を セット し ます 。 
その 機能 が 認識 でき ない とき は 、 SAXNotRecognizedException を 発生 さ せ ます 。 
また 、 パーサ が 指定 さ れ た 機能 や 設定 を サポート し て い ない とき は 、 SAXNotSupportedException を 発生 さ せ ます 。 
属性 名 propertyname の 現在 の 値 を 返し ます 。 
その 属性 が 認識 でき ない とき は 、 SAXNotRecognizedException を 発生 さ せ ます 。 
広く 使わ れ て いる 属性 名 の 一覧 は モジュール xml . sax . handler に 書か れ て い ます 。 
属性 名 propertyname に 値 value を セット し ます 。 
その 機能 が 認識 でき ない とき は 、 SAXNotRecognizedException を 発生 さ せ ます 。 
また 、 パーサ が 指定 さ れ た 機能 や 設定 を サポート し て い ない とき は 、 SAXNotSupportedException is raised を 発生 さ せ ます 。 
ジェネレータ 関数 の 本体 は 、 ジェネレータ の next () が 例外 を 発行 する まで 繰り返し 呼び出し て 実行 し ます 。 yield 文 が 実行 さ れる と 、 現在 の ジェネレータ の 状態 は 凍結 ( freeze ) さ れ 、 expression _ list の 値 が next () の 呼び出し 側 に 返さ れ ます 。 
ここ で の `` 凍結 '' は 、 ローカル な 変数 へ の 束縛 、 命令 ポインタ ( instruction pointer )、 および 内部 実行 スタック ( internal evaluation stack ) を 含む 、 全て の ローカル な 状態 が 保存 さ れる こと を 意味 し ます : すなわち 、 必要 な 情報 を 保存 し て おき 、 次に next () が 呼び出さ れ た 際 に 、 関数 が yield 文 を あたかも もう 一つ の 外部 呼出し で ある か の よう に 処理 できる よう に し ます 。 yield 文 は 、 try ... finally 構造 の try 節 中 で 使う こと は でき ませ ん 。 
ジェネレータ が 常に 実行 再開 さ れる と は 限ら ない ので 、 finally ブロック が 常に 実行 さ れる 保証 が ない という 問題 が ある ため です 。 
注意 : Python 2 . 2 で は 、 generators 機能 が 有効 に なっ て いる 場合 に のみ yield 文 を 使え ます 。 
Python 2 . 3 で は 、 常に 有効 に なっ て い ます 。 
__ future __ import 文 を 使う と 、 この 機能 を 有効 に でき ます : 
PEP 0255 , 単純 な ジェネレータ 
Python へ の ジェネレータ と yield 文 の 導入 提案 
クラス ZipFile 
ZIP ファイル を 開き ます 。 file は ファイル へ の パス 名 ( 文字 列 ) または ファイル の よう に 振舞う オブジェクト の どちら でも かまい ませ ん 。 
mode パラメタ は 、 既存 の ファイル を 読む ため に は ' r '、 既存 の ファイル を 切り詰め たり 新しい ファイル に 書き込む ため に は ' w '、 追記 を 行う ため に は ' a ' で なく て は なり ませ ん 。 
mode が ' a ' で file が 既存 の ZIP ファイル を 参照 し て いる 場合 、 追加 する ファイル は 既存 の ファイル 中 の ZIP アーカイブ に 追加 さ れ ます 。 
file が ZIP を 参照 し て い ない 場合 、 新しい ZIP アーカイブ が 生成 さ れ 、 既存 の ファイル の 末尾 に 追加 さ れ ます 。 
この こと は 、 ある ZIP ファイル を 他 の ファイル 、 例えば python . exe に 
また 、 ZIP _ DEFLATED 定数 が 指定 さ れ て いる のに 
を 利用 する こと が でき ない 場合 、 RuntimeError が 送出 さ れ ます 。 
デフォルト 値 は ZIP _ STORED です 。 
アーカイブ ファイル を 閉じ ます 。 
close () は プログラム を 終了 する 前 に 必ず 呼び出さ なけれ ば なり ませ ん 。 さも ない と アーカイブ 上 の 重要 な レコード が 書き込ま れ ませ ん 。 
アーカイブ メンバ name に関する 情報 を 持つ ZipInfo オブジェクト を 返し ます 。 
アーカイブ に 含ま れる 各 メンバ の ZipInfo オブジェクト から なる リスト を 返し ます 。 
既存 の アーカイブ ファイル を 開い て いる 場合 、 リスト の 順番 は 実際 の ZIP ファイル 中 の メンバ の 順番 と 同じ に なり ます 。 
アーカイブ メンバ の 名前 の リスト を 返し ます 。 
アーカイブ の 目次 を sys . stdout に 出力 し ます 。 
アーカイブ 中 の ファイル の 内容 を バイト 列 に し て 返し ます 。 
アーカイブ は 読み込み または 追記 モード で 開か れ て い なく て は なり ませ ん 。 
アーカイブ 中 の 全て の ファイル を 読み 、 CRC チェックサム が 正常 か 調べ ます 。 
アーカイブ 中 で 不正 な チェックサム を もつ 最初 の ファイル の 名前 を 返し ます 。 
不正 な ファイル が なけれ ば None を 返し ます 。 
filename に 指定 し た ファイル 名 を 持つ ファイル を 、 アーカイブ 名 を arcname ( デフォルト で は filename と 同じ ) に し て アーカイブ に 収録 し ます 。 
compress _ type を 指定 し た 場合 、 コンス トラクタ を 使っ て 新た な アーカイブ エントリ を 生成 し た 際 に 使っ た compression パラメタ を 上書き し ます 。 
アーカイブ の モード は ' w ' または ' a ' で なく て は なり ませ ん 。 
文字 列 bytes を アーカイブ に 書き込み ます 。 
zinfo _ or _ arcname は アーカイブ 中 で 指定 する ファイル 名 か 、 または ZipInfo インスタンス を 指定 し ます 。 
zinfo _ or _ arcname に ZipInfo インスタンス を 指定 する 場合 、 zinfo インスタンス に は 少なくとも ファイル 名 、 日付 および 時刻 を 指定 し なけれ ば なり ませ ん 。 
ファイル 名 を 指定 し た 場合 、 日付 と 時刻 に は 現在 の 日付 と 時間 が 設定 さ れ ます 。 
アーカイブ は モード ' w ' または ' a ' で 開か れ て い なけれ ば なり ませ ん 。 
以下 の データ 属性 も 利用 する こと が でき ます 。 
使用 する デバッグ 出力 レベル 。 
この 属性 は 0 ( デフォルト 、 何 も 出力 し ない ) から 3 ( 最も 多く デバッグ 情報 を 出力 する ) まで の 値 に 設定 する こと が でき ます 。 
デバッグ 情報 は sys . stdout に 出力 さ れ ます 。 
ZipFile オブジェクト の getinfo () および infolist () メソッド は ZipInfo クラス の インスタンス を 返し ます 。 
それぞれ の インスタンス オブジェクト は ZIP アーカイブ の 一 個 の メンバ について の 情報 を 保持 し て い ます 。 インスタンス は 以下 の 属性 を 持ち ます : 
アーカイブ 中 の ファイル の 名前 。 
アーカイブ メンバ の 最終 更新 日時 。 
この 属性 は 6 つ の 値 から なる タプル です 。 : 
西暦 年 
月 ( 1 から 始まる ) 
日 ( 1 から 始まる ) 
時 ( 0 から 始まる ) 
分 ( 0 から 始まる ) 
秒 ( 0 から 始まる ) 
アーカイブ メンバ の 圧縮 形式 。 
各 アーカイブ メンバ に対する コメント 。 
拡張 フィールド データ 。 
この 文字 列 データ に 含ま れ て いる データ の 内部 構成 について は 、 
で コメント さ れ て い ます 。 
create _ system ZIP アーカイブ を 作成 し た システム を 記述 する 文字 列 。 
この アーカイブ を 作成 し た PKZIP の バージョン 。 
この アーカイブ を 展開 する 際 に 必要 な PKZIP の バージョン 。 reserved 
予約 領域 。 
ゼロ で なく て は なり ませ ん 。 
ZIP フラグ ビット列 。 
ファイル ヘッダ の ボリュームナンバ 。 
内部 属性 。 
外部 ファイル 属性 。 
header _ offset 　 ファイル ヘッダ へ の バイト 数 で 表し た オフセット 。 
ファイル データ の 開始 点 へ の バイト 数 で 表し た オフセット 。 
圧縮 前 の ファイル の CRC - 32 チェックサム 。 
compress _ size 圧縮 後 の データ の サイズ 。 
圧縮 前 の ファイル の サイズ 。 
