この 文書 に つ い て . . . 
Python  チュートリアル 
索引 
の 著作 権 は 、 Copyright 1993 ,  1994 ,  1995 ,  1996 ,  1997 ,  NikosDrakos,  Computer  Based  Learning Unit ,  University  ofLeeds ,  and  Copyright 1997 ,  1998 ,  RossMoore ,  Mathematics  Department ,  Macquarie  University , Sydney . と な っ て い ま す 。 
Python  ドキュメント の 
へ の 対応 は 、 Fred L .  Drake ,  Jr .  の 多大 な 努力 で 実現 し ま し た 。 
オリジナル の ナビゲーション アイコン は 、 Christopher  Petrilli  に よ る もの で す 。 
マーク アップ の こと を 気 に する 必要 は あ り ま せ ん ;  ドキュメンテーション チーム が 喜 ん で 手配 し ま す 。 
Python  で の プログラミング に 関 する 疑問 など 、 この ドキュメント に 書 か れ て い る 情報 の 使 い 方 に つ い て の 質問 は 、 日本  Python  ユーザ 会 メーリング リスト で 行 う と よ い で しょ う 。 
Python  ドキュメント イン デクス 
序 
リリース  2 . 4 
平成 18 年 6 月 27 日  日本 語 訳 :  Python  ドキュメント 翻訳 プロジェクト 
目次 
1 .  Python  へ の 意欲 を 高め る 
1 . 1  ここ から どこ へ 
2 .  Python  インタプリタ を 使 う 
2 . 1  インタプリタ を 起動 する 
2 . 1 . 1  引数 の 受け渡し 
2 . 1 . 2  対話 モード 
2 . 2  インタプリタ と その 環境 
2 . 2 . 1  エラー 処理 
2 . 2 . 2  実行 可能 な  Python  スクリプト 
2 . 2 . 3  ソース コード の 文字 コード 方式  ( encoding ) 
2 . 2 . 4  対話 モード 用 の 起動 時 実行 ファイル 
3 .  形式 ば ら な い  Python  の 紹介 
3 . 1  Python  を 電卓 と し て 使 う 
3 . 1 . 1  数 
3 . 1 . 2  文字 列 
3 . 1 . 3  Unicode  文字 列 
3 . 1 . 4  リスト 
3 . 2  プログラミング へ の 第 一 歩 
4 .  その 他 の 制御 フロー ツール 
4 . 1  if  文 
4 . 2  for  文 
4 . 3  range ( )  関数 
4 . 4  break  文 と  continue  文 と ループ の else  節 
4 . 5  pass  文 
4 . 6  関数 を 定義 する 
4 . 7  関数 定義 に つ い て もう 少し 
4 . 7 . 1  デフォルト の 引数 値 
4 . 7 . 2  キー ワード 引数 
4 . 7 . 3  任意 引数 リスト 
4 . 7 . 4  引数 リスト の アン パック 
4 . 7 . 5  ラムダ 形式 
4 . 7 . 6  ドキュメンテーション 文字 列 
5 .  データ 構造 
5 . 1  リスト 型 に つ い て もう 少し 
5 . 1 . 1  リスト を スタック と し て 使 う 
5 . 1 . 2  リスト を キュー と し て 使 う 
5 . 1 . 3  実用 的 な プログラミング ツール 
5 . 1 . 4  リスト の 内包 表記 
5 . 2  del  文 
5 . 3  タプル と シーケンス 
5 . 4  集合 型 
5 . 5  辞書 
5 . 6  ループ の テクニック 
5 . 7  条件 に つ い て もう 少し 
5 . 8  シーケンス と その 他 の 型 の 比較 
6 .  モジュール 
6 . 1  モジュール に つ い て もう すこし 
6 . 1 . 1  モジュール 検索 パス 
6 . 1 . 2  ` ` コンパイル ' ' さ れ た  Python  ファイル 
6 . 2  標準 モジュール 
6 . 3  dir ( )  関数 
6 . 4  パッケージ 
6 . 4 . 1  パッケージ から  * を import  する 
6 . 4 . 2  パッケージ 内 で の 参照 
6 . 4 . 3  複数 ディレクトリ 中 の パッケージ 
7 .  入力 と 出力 
7 . 1  ファンシー な 出力 の 書式 化 
7 . 2  ファイル を 読み書き する 
7 . 2 . 1  ファイル オブジェクト の メソッド 
7 . 2 . 2  pickle  モジュール 
8 .  エラー と 例外 
8 . 1  構文 エラー 
8 . 2  例外 
8 . 3  例外 を 処理 する 
8 . 4  例外 を 送出 する 
8 . 5  ユーザ 定義 の 例外 
8 . 6  後 片付け 動作 を 定義 する 
9 .  クラス 
9 . 1  用語 に つ い て 一言 
9 . 2  Python  の スコープ と 名前 空間 
9 . 3  クラス 初見 
9 . 3 . 1  クラス 定義 の 構文 
9 . 3 . 2  クラス オブジェクト 
9 . 3 . 3  インスタンス オブジェクト 
9 . 3 . 4  メソッド オブジェクト 
9 . 4  いろいろ な 注意 点 
9 . 5  継承 
9 . 5 . 1  多重 継承 
9 . 6  プライベート 変数 
9 . 7  残り の は しばし 
9 . 7 . 1  例外 は クラス で あ っ て も よ い 
9 . 8  イテレータ  ( iterator ) 
9 . 9  ジェネレータ  ( generator ) 
9 . 10  ジェネレータ 式 
10 .  標準 ライブラリミニ ツアー 
10 . 1  オペレーティング システム へ の インタフェース 
10 . 2  ファイル の ワイルド カード 表記 
10 . 3  コマンドライン 引数 
10 . 4  エラー 出力 の リダイレクト と プログラム の 終了 
10 . 5  文字 列 の パターン マッチング 
10 . 6  数学 
10 . 7  インターネット へ の アクセス 
10 . 8  日付 と 時刻 
10 . 9  データ 圧縮 
10 . 10  パフォーマンス の 計測 
10 . 1 1  品質 管理 
10 . 12  バッテリー 同梱 
11 .  標準 ライブラリミニ ツアー  -  その  2 
1 1 . 1  出力 の フォーマット 
1 1 . 2  文字 列 テンプレート 
1 1 . 3  バイナリ データ レコード の 操作 
1 1 . 4  マルチ スレッド 処理 
1 1 . 5  ログ 記録 
1 1 . 6  弱 参照 
1 1 . 7  リスト 操作 の ため の ツール 
1 1 . 8  10  進 浮動 小数 演算 
12 .  さあ 何 を ? 
A .  対話 入力 編集 と ヒストリ 置換 
A . 1  行 編集 
A . 2  ヒストリ 置換 
A . 3  キー 割り当て 
A . 4  解説 
B .  浮動 小数 点 演算 、 その 問題 と 制限 
B . 1  表現 エラー 
C .  歴史 と ライセンス 
C . 1  Python  の 歴史 
E .  用語 集 
リリース  2 . 4  , 平成 18 年 6 月 27 日  更新 
ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
この ドキュメント に つ い て . . . 
を ご覧 くださ い 。 
Python\/C API  リファレンス マニュアル 
5 . 9  比較  ( comparison ) 
Python  リファレンス マニュアル 
5 . 8  ビット 単位 演算 の 二 項 演算  ( binary bit - wise 
5 .  式  ( expression ) 
5 . 10  ブール 演算  ( boolean operation ) 
C  言語 と 違 っ て 、 Python  に お け る 比較 演算 子 は 同じ 優先 順位 を も っ て お り 、 全て の 算術 演算 子 、 シフト 演算 子 、 ビット 単位 演算 子 より も 低 く な っ て い ま す 。 
また 、 a b  c  が 数学 で 伝統 的 に 用い られ て い る の と 同じ 解釈 に な る 点 も  C  言語 と 違 い ま す : 
の よう な 書 き 方 は 、 現在 で は 古 い 書 き 方 と みな さ れ て い ま す 。  演算 子  , ,== , = ,= ,  および ! =  は 、 二 つ の オブジェクト 間 の 値 を 比較 し ま す 。 
オブジェクト は 同じ 型 で あ る 必要 は あ り ま せ ん 。  双方 の オブジェクト が 数値 で あ れ ば 、 共通 型 へ の 変換 が 行 わ れ ま す 。 
それ 以外 の 場合 、 異な る 型 の オブジェクト は 常 に  不等 で あ る と みな さ れ 、 一貫 し て は い る が 規定 さ れ て い な い 方法 で 並べ られ ま す 。  ( この よう な 比較 演算 の 変則 的 な 定義 は 、 ソート の よう な 操作 や 、 in  および not  in  と い っ た 演算 子 の 定義 を 単純 化 する ため の もの で す 。 
将来 、 異な る 型 の オブジェクト 間 に お け る 比較 規則 は 変更 さ れ る か も しれ ま せ ん 。  ) 同じ 型 の オブジェクト 間 に お け る 比較 は 、 型 に よ っ て 異な り ま す : 
数値 間 の 比較 で は 、 算術 的 な 比較 が 行 わ れ ま す 。 
文字 列 間 の 比較 で は 、 各 文字 に 対 する 等価 な 数値 型  ( 組み込 み 関数  ord ( )  の 結果 )  を 使 っ て 辞書 的 な  ( lexicographically )  比較 が 行 わ れ ま す 。 
Unicode  および  8  ビット 文字 列 は 、 この 動作 に 関 し て は 完全 に 互換 で す 。 
タプル や リスト 間 の 比較 で は 、 対応 する 各 要素 の 比較 結果 を 使 っ て 辞書 的 な 比較 が 行 わ れ ま す 。 
この ため 、 二 つ の シーケンス を 等価 に する ため に は 、 各 要素 が 完全 に 等価 で な く て は な ら ず 、 シーケンス は 同じ 型 で 同じ 長 さ を も っ て い な けれ ば な り ま せ ん 。  二 つ の シーケンス が 等価 で な い 場合 、 異な る 値 を 持 つ 最初 の 要素 間 で の 比較 に 従 っ た 順序 関係 に な り ま す 。 
例えば 、 cmp ( [ 1 , 2 , x ] ,  [ 1 , 2 , y ] )  は cmp ( x , y )  と 等し い 結果 を 返 し ま す 。 
片方 の 要素 に 対応 する 要素 が 他方 に な い 場合 、 より 短 い シーケンス が 前 に 並 び ま す  ( 例えば 、 [ 1 , 2 ]  [ 1 , 2 , 3 ]  と な り ま す ) 。 
マップ  ( 辞書 )  間 の 比較 で は 、 ( key ,  value )  から な る リスト を ソート し た もの が 等し い 場合 に 等価 に な り ま す 。 
等価 性 評価 以外 の 結果 は 一貫 し た や り かた で 解決 さ れ る か 、 定義 さ れ な い か の いずれ か で す 。 
その 他 の ほとんど の 型 の 比較 で は 、 同じ オブジェクト で な い かぎり 等価 に は な り ま せ ん 。  ある オブジェクト の 他 の オブジェクト に 対 する 大小 関係 は 任意 に 決定 さ れ 、 一 つ の プログラム の 実行 中 は 一貫 し た もの と な り ま す 。 
演算 子  in  および  not  in  は 、 集合 内 の 要素 で あ る か どう か  ( メンバシップ 、 membership )  を 調べ ま す 。 
は 、 x  が 集合  s  の メンバ で あ る 場合 に は 真 と な り 、 それ 以外 の 場合 に は 偽 と な り ま す 。 
の 否定 ( negation )  を 返 し ま す 。 
集合 メンバシップ テスト は 、 伝統 的 に は シーケンス 型 に 限定 さ れ て き ま し た ;  すなわち 、 ある オブジェクト が あ る 集合 の メンバ と な る の は 、 集合 が シーケンス 型 で あ り 、 シーケンス が オブジェクト と 等価 な 要素 を 含 む 場合 で し た 。 
しかし ながら 、 現在 で は オブジェクト が シーケンス で な く て も メンバシップ テスト を サポート し て い ま す 。 
特に 、 辞書 型 で は 、 
と 書 く こと で 、 うま い 具合 に メンバシップ テスト を サポート し て い ま す ;  他 の マップ 型 も これ に 倣 っ て い る か も しれ ま せ ん 。  リスト や タプル 型 に つ い て は 、 
x  in  y  は 
x  == y [ i ]  と な る よう な インデクス i  が 存在 する とき 、 かつ その とき に 限 り 真 に な り ま す 。 
Unicode  文字 列 また は 文字 列 型 に つ い て は 、 
は  x  が  y  の 部分 文字 列 で あ る とき 、 かつ その とき に 限 り 真 に な り ま す 。 
この 演算 と 等価 な テスト は  y . find ( x )  ! =  - 1  で す 。 
__contains_ _( )  メソッド の 定義 さ れ た ユーザ 定義 クラス で は 、 
が 真 と な る の は 
y .__contains_ _( x )  が 真 と な る とき 、 かつ その とき に 限 り ま す 。 __contains_ _( )  は 定義 し て い な い が _ _ getitem__( ) は 定義 し て い る よう な ユーザ 定義 クラス で は 、 
x  == y [ i ]  と な る よう な 非 負 の 整数 インデクス i  が 存在 する とき 、 かつ その とき に かぎり 真 と な り ま す 。 
インデクス  i  が 負 で あ る 場合 に  In dexError  例外 が 送出 さ れ る こと は あ り ま せ ん 。 
( 別 の 何 ら か の 例外 が 送出 さ れ た 場合 、 例外 は  in  から 送出 さ れ た か の よう に な り ま す ) 。  演算 子  not  in  は 、 in  の 真値 に 対 する 逆転 と し て 定義 さ れ て い ま す 。 
演算 子  is  および  is  not  は 、 オブジェクト の アイデンティティ に 対 する テスト を 行 い ま す : 
は 、  x  と  y  が 同じ オブジェクト を 指 す とき 、 かつ その とき に 限 り 真 に な り ま す 。 
は 、 is  の 真値 を 逆転 し た もの に な り ま す 。 
. . . し た もの が 等し い 場合 に 等価 に な り ま す 。 
実装 で は 、 この 演算 を リスト を 構築 し たり ソート し たり する こと な く 効率 的 に 行 い ま す 。 
. . . の いずれ か で す 。 
Python  の 初期 の バージョン で は 、 ソート さ れ た ( key ,  value )  の リスト に 対 し て 辞書 的 な 比較 を 行 っ て い ま し た が 、 これ は 等価 性 の 計算 の よう な よく あ る 操作 を 実現 する に は 非常 に コスト の 高 い 操作 で し た 。 
もっと 以前 の バージョン の  Python  で は 、 辞書 は アイデンティティ だけ で 比較 さ れ て い ま し た 。  しかし この 仕様 は 、 {} と の 比較 に よ っ て 辞書 が 空 で あ る か 確かめ られ る と 期待 し て い た 人々 を 混乱 さ せ て い ま し た 。 
Python  ドキュメント の 作成 
1  初め に 
2  ディレクトリ 構造 
3  スタイル ガイド 
4  LaTeX  入門 
4 . 1  構文 法 
4 . 2  階層 構造 
4 . 3  よく 使 わ れ る 環境 
5  ドキュメント クラス 
6  特殊 マーク アップ 構文 
6 . 1  プリアン ブル 用 の マーク アップ 
6 . 2  メタ 情報 マーク アップ 
6 . 3  情報 単位 
6 . 4  コード の 例示 
6 . 5  イン ライン マーク アップ 
6 . 6  雑多 な テキスト マーク アップ 
6 . 7  モジュール 特有 の マーク アップ 
6 . 8  ライブラリ レベル の マーク アップ 
6 . 9  表 の マーク アップ 
6 . 10  参考 文献 リスト の マーク アップ 
6 . 1 1  索引 生成 の ため の マーク アップ 
6 . 12  文法 に お け る 導出 の 表示 
6 . 13  グラフィカル インタフェース の 構成 要素 
7  処理 ツール 
7 . 1  外部 ツール 
7 . 2  内部 用 ツール 
7 . 3  Cygwin  で の 作業 
8  画像 の 取り込み 
9  将来 の 方向 性 
9 . 1  構造 化 ドキュメント 
9 . 2  議論 の 場 
ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、  この ドキュメント に つ い て . . . 
1 1 . 2 2 . 3  DateTime  オブジェクト 
Python  ライブラリ リファレンス 
1 1 . 2 2 . 2  Boolean  オブジェクト 
1 1 . 2 2 . 4  Binary  オブジェクト 
この クラス は 、 エポック から の 秒数 、 タプル で 表現 さ れ た 時刻 、 ISO  80 61 形式 の 時間 \/ 日付 文字 列 の 何れ か で 初期 化 する こと が でき ま す 。 
文字 列 を インスタンス の 新し い 時間 を 示 す 値 と し て 指定 し ま す 。 
出力 ストリーム オブジェクト  out  に 、 XML - RPC エンコーディング の DateTime 値 を 出力 し ま す 。 
また 、__cmp_ _ と __repr_ _ で 定義 さ れ る 演算 子 を 使用 する こと が でき ま す 。 
5 .  他 の アプリケーション へ の  Python  の 埋め込 み 
Python  インタプリタ の 拡張 と 埋め込 み 
4 . 3  DLL  使用 の 実際 
Python  インタプリタ の 拡張 と 埋め込 み 
5 . 1  高 水準 の 埋め込 み 
5 .  他 の アプリケーション へ の  Python  の 埋め込 み 
前章 で は 、  Python  を 拡張 する 方法 、 すなわち  C  関数 の ライブラリ を Python  に 結びつけ て 機能 を 拡張 する 方法 に つ い て 述べ ま し た 。 
同じ よう な こと を 別 の 方法 で も 実行 でき ま す :  それ は 、 自分 の  C \/ C + + アプリケーション に  Python  を 埋め込 ん で 機能 を 強化 する 、 と い う もの で す 。 
Python  の 埋め込み は  Python  の 拡張 と 似 て い ま す が 、 全く 同じ と い う わけ で は あ り ま せ ん 。 
その 違い は 、 Python  を 拡張 し た 場合 に は アプリケーション の メイン プログラム は 依然 と し て  Python  インタプリタ で あ る 一方 、  Python  を 組み込 み ん だ 場合 に は 、 メイン プログラム に は Python  が 関係 し な い --  その 代わり に 、 アプリケーション の あ る 一 部分 が 時折  Python  インタプリタ を 呼び出 し て 何 ら か の  Python  コード を 実行 さ せ る -- か も しれ な い 、 と い う こと で す 。  従 っ て 、  Python  の 埋め込み を 行 う 場合 、 自作 の メイン プログラム を 提供 し な けれ ば な り ま せ ん 。 
メイン プログラム が や ら な けれ ば な ら な い こと の 一 つ に 、  Python  インタプリタ の 初期 化 が あ り ま す 。 
とにかく 少な く とも 関数  Py _ Initialize ( )  ( Mac  OS  なら Py Mac _ Initialize ( ) )  を 呼び出 さ ね ば な り ま せ ん 。 
オプション と し て 、 Python  側 に コマンドライン 引数 を 渡 す ため に 関数 呼び出し を 行 い ま す 。 
その 後 、 アプリケーション の どこ で も インタプリタ を 呼び出せ る よう に な り ま す 。  インタプリタ を 呼び出 す に は 、 異な る いく つ か の 方法 が あ り ま す : Python  文 が 入 っ た 文字 列 を PyRun_SimpleString ( )  に 渡 す 、 stdio  ファイル ポインタ と ファイル 名  ( これ は エラー メッセージ 内 で コード を 識別 する ため だけ の もの で す )  を PyRun_SimpleFile ( )  に 渡 す 、 と い っ た 具合 で す 。 
これ まで の 各章 で 説明 し た 低 水準 の 操作 を 呼び出 し て 、 Python  オブジェクト を 構築 し たり 使用 し たり も でき ま す 。  Python  の 埋め込み を 行 っ て い る 簡単 な デモ は 、 ソース 配布 物 の Demo\/embed\/ ディレクトリ に あ り ま す 。 
参考 : 
5 . 1  高 水準 の 埋め込 み 
5 . 2  超 高 水準 の 埋め込み から 踏み出 す :  概要 
5 . 3  純粋 な 埋め込 み 
5 . 4  埋め込 ま れ た  Python  の 拡張 
5 . 5  C + + に よ る  Python  の 埋め込 み 
5 . 6  リンク に 関 する 要件 
5 . 1  高 水準 の 埋め込 み 
4 . 2  例外 
4 . 1 . 1  動的 な 機能 と の やりとり 
4 .  実行 モデル 
例外 と は 、 コード ブロック の 通常 の 制御 フロー を 中断 し て 、 エラー や その 他 の 例外 的 な 状況 を 処理 でき る よう に する ため の 手段 で す 。 
例外 は エラー が 検出 さ れ た 時点 で 送出  ( raise ) 
さ れ ま す ; 例外 は 、 エラー が 発生 部 の 周辺 の コード ブロック か 、 エラー が 発生 し た コード ブロック 直接 また は 間接 的 に 呼び出 し て い る コード ブロック で  処理  ( handle )  する こと が でき ま す 。 
Python  インタプリタ は 、 ラン タイム エラー  ( ゼロ に よ る 除算 など )  が 検出 さ れ る と 例外 を 送出 し ま す 。 
Python  プログラム から 、 raise 文 を 使 っ て 明示 的 に 例外 を 送出 する こと も でき ま す 。  例外 ハンドラ  ( exception  handler )  は 、 try  . . .  except 文 で 指定 する こと が でき ま す 。 
ある 例外 に どの  except  節 が 一致 する か の 選択 は 、 オブジェクト の アイデンティティ に 基づ い て 行 わ れ ま す 。 
except  節 は 、 同じ クラス の 例外 か 、 基底 クラス の 例外 しか 参照 し ま せ ん 。  例外 が 発行 さ れ る と 、 オブジェクト  ( None  に な る こと も あ り ま す ) が 例外 の  値  ( value )  と し て 渡 さ れ ま す ;  この オブジェクト が 例外 ハンドラ の 選択 自体 に 影響 する こと は あ り ま せ ん が 、 選択 さ れ た 例外 ハンドラ に 付帯 情報 と し て 渡 さ れ ま す 。 
例外 が クラス の 場合 、 オブジェクト は 送出 さ れ た 例外 クラス の インスタンス で な けれ ば な り ま せ ん 。 
警告 : 例外 に 対 する メッセージ は 、 Python  API  仕様 に は 含 ま れ て い ま せ ん 。 
メッセージ の 内容 は 、 ある  Python  の バージョン から 次 の バージョン に な る とき に 、 警告 なし に 変更 さ れ る 可能 性 が あ り ま す 。  したが っ て 、 複数 バージョン の インタプリタ で 動作 する よう な コード に お い て は 、 例外 メッセージ の 内容 に 依存 し た 記述 を す べ き で は あ り ま せ ん 。 
try  文 に つ い て は 、 7 . 4  節 、 raise  文 に つ い て は 6 . 9  節 も 参照 し て くださ い 。 
Copyright 2001 - 2004  Python  Software  Foundation . All rights reserved . Copyright 2000  Be Open . com . All rights reserved . Copyright 1995 - 2000  Corporation  for  National  Research  Initiatives . All rights reserved . Copyright 1991 - 1995  Stichting  Mathematisch  Centrum . All rights reserved .  Translation  Copyright 2003 , 2004 Python  Document  Japanese  Translation  Project .  All rights reserved . ライセンス および 許諾 に 関 する 完全 な 情報 は 、 この ドキュメント の 末尾 を 参照 し て くださ い 。 
概要 : 
Python  は インタプリタ 形式 の 、 オブジェクト 指向 の プログラミング 言語 で す 。 
この ドキュメント で は 、 Python  インタプリタ を 拡張 する ため に  C  や C + +  で モジュール を 書 く 方法 に つ い て 述べ ま す 。 
拡張 モジュール で は 、 新た な 関数 を 定義 でき る だけ で な く 、 新た な オブジェクト 型 と その メソッド も 定義 でき ま す 。 
この ドキュメント で は また 、 Python  インタプリタ を 別 の アプリケーション に 埋め込 み  ( embedding ) 、 拡張 言語 と し て 使 う 方法 に つ い て も 述べ ま す 。 
この ドキュメント の 最後 に は 、 オペレーティング システム 上 で  ( 実行 時 に ) 動 的 に 拡張 モジュール を ロード する 機能 が サポート さ れ て い る 場合 に 、 動的 ロード 可能 な 拡張 モジュール を コンパイル し て リンク する 方法 を 示 し ま す 。  この ドキュメント で は 、 読者 は  Python  に つ い て 基礎 的 な 知識 を 持ち合わせ て い る もの と 仮定 し て い ま す 。 
形式 ば ら な い  Python  言語 の 入門 に は 、 
を 読 ん で くださ い 。 
を 読 め ば 、 Python  言語 に つ い て より 形式 的 な 定義 を 得 られ ま す 。 
また 、 
で は 、 Python  に 広 い 適用 範囲 を もたら し て い る 既存 の オブジェクト 型 、 関数 、 および  ( 組み込 み 、 および  Python  で 書 か れ た もの の 両方 の )  モジュール に つ い て 解説 し て い ま す 。  Python\/C API  全体 の 詳し い 説明 は 、 別 の ドキュメント で あ る 、 
を 参照 し て くださ い 。 
Python  モジュール の 配布 
11  日本 語 訳 に つ い て 
エ 
CCompiler  ( distutils . ccompiler  、 ホ ・ ッ ・ 鬣ケ ) 
Command  ( distutils . cmd  、 ホ ・ ッ ・ 鬣ケ ) 
FancyGetopt  ( distutils . fancy _ getopt  、 ホ ・ ッ ・ 鬣ケ ) 
TextFile  ( distutils . text _file  、 ホ ・ ッ ・ 鬣ケ ) 
add_ include_dir ( )  ( CCompiler  、 ホ ・ 皈ス ・ テ・ ノ) 
add_ library ( )  ( CCompiler  、 ホ ・ 皈ス ・ テ・ ノ) 
add_ library_ dir ( )  ( CCompiler  、 ホ ・ 皈ス ・ テ・ ノ) 
add_link_object ( )  ( CCompiler  、 ホ ・ 皈ス ・ テ・ ノ) 
add_runtime_library_ dir ( )  ( CCompiler  、 ホ ・ 皈ス ・ テ・ ノ) 
announce ( )  ( CCompiler  、 ホ ・ 皈ス ・ テ・ ノ) 
byte_ compile ( )  ( distutils .util  ・ 筵ク ・ 蝪シ ・ 
change_root ( )  ( distutils .util  モジュール ) 
check _environ ( )  ( distutils .util  モジュール ) 
close ( )  ( TextFile  の メソッド ) 
Command  ( distutils . core  の クラス ) 
compile ( )  ( CCompiler  の メソッド ) 
convert_ path ( )  ( distutils .util  モジュール ) 
copy _file ( )  ( distutils . file_util  モジュール ) 
copy _tree ( )  ( distutils . dir_util  モジュール ) 
create_static_ lib ( )  ( CCompiler  の メソッド ) 
create_tree ( )  ( distutils . dir_util  モジュール ) 
customize_ compiler ( )  ( distutils . sysconfig  モジュール ) 
debug _print ( )  ( CCompiler  の メソッド ) 
define _macro ( )  ( CCompiler  の メソッド ) 
detect_ language ( )  ( CCompiler  の メソッド ) 
Distribution  ( distutils . core  の クラス ) 
distutils . archive_util  ( standard  モジュール ) 
distutils . bcppcompiler  ( standard  モジュール ) 
distutils . ccompiler  ( standard  モジュール ) 
distutils . cmd  (standard  モジュール ) 
distutils . command  (standard  モジュール ) 
distutils . command . bdist  ( standard  モジュール ) 
distutils . command . bdist_dumb  (standard  モジュール ) 
distutils . command . bdist _ packager  ( standard  モジュール ) 
distutils . command . bdist _rpm  ( standard  モジュール ) 
distutils . command . bdist_wininst  ( standard  モジュール ) 
distutils . command . build  (standard  モジュール ) 
distutils . command . build_clib  (standard  モジュール ) 
distutils . command . build_ext  ( standard  モジュール ) 
distutils . command . build_py  ( standard  モジュール ) 
distutils . command . build_scripts ( standard  モジュール ) 
distutils . command . clean  ( standard  モジュール ) 
distutils . command . config  ( standard  モジュール ) 
distutils . command . install  ( standard  モジュール ) 
distutils . command . install_ data ( standard  モジュール ) 
distutils . command . install_headers ( standard  モジュール ) 
distutils . command . install_ lib  (standard  モジュール ) 
distutils . command . install_scripts ( standard  モジュール ) 
distutils . command . register  ( standard  モジュール ) 
distutils . command . sdist  ( standard  モジュール ) 
distutils . core  ( standard  モジュール ) 
distutils . cygwinccompiler  ( standard  モジュール ) 
distutils . debug  ( standard  モジュール ) 
distutils . dep_util  ( standard  モジュール ) 
distutils . dir_util  ( standard  モジュール ) 
distutils . dist  ( standard  モジュール ) 
distutils . emxccompiler  ( standard  モジュール ) 
distutils . errors ( standard  モジュール ) 
distutils . extension  ( standard  モジュール ) 
distutils . fancy _ getopt  ( standard  モジュール ) 
distutils . file_util  ( standard  モジュール ) 
distutils . filelist  ( standard  モジュール ) 
distutils . log  ( standard  モジュール ) 
distutils . msvccompiler  ( standard  モジュール ) 
distutils . mwerkscompiler  ( standard  モジュール ) 
distutils . spawn ( standard  モジュール ) 
distutils . sysconfig  ( standard  モジュール ) 
distutils . text _file  ( standard  モジュール ) 
distutils . unixccompiler  ( standard  モジュール ) 
distutils .util  ( standard  モジュール ) 
distutils . version  ( standard  モジュール ) 
EXEC _ PREFIX  ( distutils . sysconfig  モジュール ) 
executable_filename ( )  ( CCompiler  の メソッド ) 
execute ( )  ( CCompiler  の メソッド ) 
execute ( )  ( distutils .util  モジュール ) 
Extension  ( distutils . core  の クラス ) 
fancy _ getopt ( )  ( distutils . fancy _ getopt  モジュール ) 
finalize_options ( )  ( Command  の メソッド ) 
find_ library _ file ( )  ( CCompiler  の メソッド ) 
gen_lib _options ( )  ( distutils . ccompiler  モジュール ) 
gen _preprocess _options ( )  ( distutils . ccompiler  モジュール ) 
generate_help ( )  ( FancyGetopt  の メソッド ) 
get_config_h_filename ( )  ( distutils . sysconfig  モジュール ) 
get_config_ var ( )  ( distutils . sysconfig  モジュール ) 
get_config_ vars ( )  ( distutils . sysconfig  モジュール ) 
get_default_ compiler ( )  ( distutils . ccompiler  モジュール ) 
get_makefile_filename ( )  ( distutils . sysconfig  モジュール ) 
get_option_order ( )  ( FancyGetopt  の メソッド ) 
get_platform ( )  ( distutils .util  モジュール ) 
get_python_inc ( )  ( distutils . sysconfig  モジュール ) 
get_python_lib ( )  ( distutils . sysconfig  モジュール ) 
getopt ( )  ( FancyGetopt  の メソッド ) 
grok_environment_error ( )  ( distutils .util  モジュール ) 
has_function ( )  ( CCompiler  の メソッド ) 
HOME  ( 環境 変数 ) 
initialize_options ( ) ( )  ( Command  の メソッド ) 
library_ dir_option ( )  ( CCompiler  の メソッド ) 
library _ filename ( )  ( CCompiler  の メソッド ) 
library _ option ( )  ( CCompiler  の メソッド ) 
link ( )  ( CCompiler  の メソッド ) 
link_ executable ( )  ( CCompiler  の メソッド ) 
link_shared_ lib ( )  ( CCompiler  の メソッド ) 
link_shared _object ( )  ( CCompiler  の メソッド ) 
make_archive ( )  ( distutils . archive_util  モジュール ) 
make_tarball ( )  ( distutils . archive_util  モジュール ) 
make_zipfile ( )  ( distutils . archive_util  モジュール ) 
mkpath ( )  ( CCompiler  の メソッド ) 
mkpath ( )  ( distutils . dir_util  モジュール ) 
move_file ( )  ( CCompiler  の メソッド ) 
move_file ( )  ( distutils . file_util  モジュール ) 
new_ compiler ( )  ( distutils . ccompiler  モジュール ) 
newer ( )  ( distutils . dep_util  モジュール ) 
newer_group ( )  ( distutils . dep_util  モジュール ) 
newer_pairwise ( )  ( distutils . dep_util  モジュール ) 
object_filenames( )  ( CCompiler  の メソッド ) 
open ( )  ( TextFile  の メソッド ) 
PLAT  ( 環境 変数 ) 
PREFIX  ( distutils . sysconfig  モジュール ) 
preprocess ( )  ( CCompiler  の メソッド ) 
readline ( )  ( TextFile  の メソッド ) 
readlines ( )  ( TextFile  の メソッド ) 
remove_tree ( )  ( distutils . dir_util  モジュール ) 
rfc 822 _escape ( )  ( distutils .util  モジュール ) 
run ( )  ( Command  の メソッド ) 
run_setup ( )  ( distutils . core  モジュール ) 
runtime_library_ dir_option ( )  ( CCompiler  の メソッド ) 
set_executables ( )  ( CCompiler  の メソッド ) 
set_include_dirs ( )  ( CCompiler  の メソッド ) 
set_libraries ( )  ( CCompiler  の メソッド ) 
set_library_ dirs ( )  ( CCompiler  の メソッド ) 
set_link_objects ( )  ( CCompiler  の メソッド ) 
set_python_build ( )  ( distutils . sysconfig  モジュール ) 
set_runtime_library_ dirs ( )  ( CCompiler  の メソッド ) 
setup ( )  ( distutils . core  モジュール ) 
shared _object_filename ( )  ( CCompiler  の メソッド ) 
show _ compilers ( )  ( distutils . ccompiler  モジュール ) 
spawn( )  ( CCompiler  の メソッド ) 
split_quoted ( )  ( distutils .util  モジュール ) 
strtobool ( )  ( distutils .util  モジュール ) 
subst_vars ( )  ( distutils .util  モジュール ) 
undefine _macro ( )  ( CCompiler  の メソッド ) 
unreadline ( )  ( TextFile  の メソッド ) 
warn ( )  ( CCompiler  の メソッド ) 
warn ( )  ( TextFile  の メソッド ) 
wrap_ text ( )  ( distutils . fancy _ getopt  モジュール ) 
PLAT  Python  モジュール の 配布 
1  Distutils の 紹介 
この ドキュメント で は 、  Python  モジュール 配布 ユーティリティ ( Python  Distribution Utilities ,`` Distutils ' ')  に つ い て 、  モジュール 開発 者 の 視点 に 立 ち 、 多く の 人々 が ビルド \/ リリース \/ インストール の 負荷 を ほとんど かけ ず に  Python  モジュール や 拡張 モジュール を 入手 でき る よう に する 方法 に つ い て 述べ ま す 。 
1  Distutils の 紹介 
1  概念 と 用語 
2  簡単 な 例 
3  Python  一般 の 用語 
4  Distutils  固有 の 用語 
2  setup  スクリプト を 書 く 
1  パッケージ を 全て 列挙 する 
2  個々 の モジュール を 列挙 する 
3  拡張 モジュール に つ い て 記述 する 
3 . 1  拡張 モジュール の 名前 と パッケージ 
3 . 2  拡張 モジュール の ソース ファイル 
3 . 3  プリ プロセッサ オプション 
3 . 4  ライブラリ オプション 
3 . 5  その 他 の 操作 
4  スクリプト を インストール する 
5  パッケージ データ を インストール する 
6  追加 の ファイル を インストール する 
7  追加 の メタデータ 
8  setup  スクリプト を デバッグ する 
3  setup  設定 ファイル  ( setup configuration file )  を 書 く 
4  ソース コード 配布 物 を 作成 する 
1  配布 する ファイル を 指定 する 
2  マニフェスト  ( manifest )  関連 の オプション 
5  ビルド 済み 配布 物 を 作成 する 
1  ダム 形式 の ビルド 済み 配布 物 を 作成 する 
2  RPM  パッケージ を 作成 する 
3  Windows  インストーラ を 作成 する 
3 . 1  インストール 後 実行 スクリプト  ( postinstallation  script ) 
6  パッケージ イン デクス に 登録 する 
7  例 
1 pure Python  配布 物  ( モジュール 形式 ) 
2 pure Python  配布 物  ( パッケージ 形式 ) 
3  単体 の 拡張 モジュール 
8  Distutils の 拡張 
1  新し い コマンド の 統合 
9  リファレンス マニュアル 
1  モジュール を インストール する :  install  コマンド 群 
2  ソース コード 配布 物 を 作成 する : sdist  command 
10  API  リファレンス 
1  distutils . core  -- Distutils  の コア 機能 
2  distutils . ccompiler-- CCompiler  ベース クラス 
3  distutils . unixccompiler--Unix  C  コンパイラ 
4  distutils . msvccompiler-- Microsoft  コンパイラ 
5  distutils . bcppcompiler-- Borland  コンパイラ 
6  distutils . cygwincompiler-- Cygwin  コンパイラ 
7  distutils . emxccompiler-- OS \/ 2  EMX  コンパイラ 
8  distutils . mwerkscompiler--  Metrowerks  CodeWarrior サポート 
9  distutils . archive_util --  アーカイブ ユーティリティ 
10  distutils . dep_util --  依存 関係 の チェック 
11  distutils . dir_util --  ディレクトリ ツリー の 操作 
12  distutils . file_util - -  1 ファイル の 操作 
13  distutils .util --  その 他 の ユーティリティ 関数 
14  distutils . dist -- Distribution  クラス 
15  distutils . extension --  Extension  クラス 
16  distutils . debug -- Distutils  デバッグ モード 
17  distutils . errors-- Distutils  例外 
18  distutils . fancy _ getopt - -  標準  getopt  モジュール の ラッパ 
19 distutils . filelist --FileList  クラス 
20  distutils . log -- シンプル な  PEP  28 2  スタイル の ロギング 
21  distutils . spawn-- サブ プロセス の 生成 
22  distutils . sysconfig -- システム 設定 情報 
23  distutils . text _file -- TextFile  クラス 
24  distutils . version --  バージョン 番号 クラス 
25  distutils . cmd  -- Distutils  コマンド の 抽象 クラス 
26  distutils . command -- Distutils  各 コマンド 
27  distutils . command . bdist --  バイナリ インストーラ の 構築 
28  distutils . command . bdist _ packager --  パッケージ の 抽象 ベース クラス 
29  distutils . command . bdist_dumb --`` ダム ' ' インストーラ を 構築 
30  distutils . command . bdist _rpm --  Redhat  RPM と SRPM 形式 の バイナリ ディストリビューション を 構築 
31  distutils . command . bdist_wininst -- Windows インストーラ の 構築 
32  distutils . command . sdist --  ソース 配布 物 の 構築 
33  distutils . command . build--  パッケージ 中 の 全 ファイル を 構築 
34  distutils . command . build_clib --  パッケージ 中 の C ライブラリ を 構築 
35  distutils . command . build_ext  --  パッケージ 中 の 拡張 を 構築 
36  distutils . command . build_py--  パッケージ 中 の . py\/. pyc ファイル を 構築 
37  distutils . command . build_scripts--  パッケージ 中 の スクリプト を 構築 
38  distutils . command . clean --  パッケージ の ビルド エリア を 消去 
39  distutils . command . config--  パッケージ の 設定 
40  distutils . command . install--  パッケージ の インストール 
41  distutils . command . install_ data- -  パッケージ 中 の データ ファイル を インストール 
42  distutils . command . install_headers- -  パッケージ から  C \/ C + +  ヘッダ ファイル を インストール 
43  distutils . command . install_ lib - -  パッケージ から  ライブラリ ファイル を インストール 
44  distutils . command . install_scripts- -  パッケージ から  スクリプト ファイル を インストール 
45  distutils . command . register - -  モジュール を Python  Package In dex に 登録 する 
46  新し い Distutils コマンド の 作成 
この ドキュメント で 扱 っ て い る 内容 は 、  Distutils  を 使 っ た  Python  モジュール の 配布 で 、 とりわけ 開発 者 \/ 配布 者 の 役割 に 重点 を 置 い て い ま す : Python  モジュール の インストール に 関 する 情報 を 探 し て い る の なら 、 
マニュアル を 参照 し て くださ い 。 
1  概念 と 用語 
D . 3  2 . 4  差分 翻訳 者 一覧  ( 敬称 略 ) 
3 . 1  オブジェクト 、 値 、 および 型 
3 .  データ モデル 
3 . 2  標準 型 の 階層 
Python  に お け る  オブジェクト  (object )  と は 、 データ を 抽象 的 に 表 し た もの で す 。 
オブジェクト が 一 度 生成 さ れ る と 、 その オブジェクト の アイデンティティ 値  は 決して 変化 する こと が あ り ま せ ん ;  アイデンティティ 値 を オブジェクト の メモリ 上 の アドレス と 考え て も かま い ま せ ん 。 
演算 子  ` is ' は 、 二 つ の オブジェクト 間 の アイデンティティ 値 を 比較 し ま す ;  関数  id ( ) 
は 、 オブジェクト の アイデンティティ 値 を 表 す 整数  ( 現在 の 実装 で は オブジェクト の メモリ 上 の アドレス ) を 返 し ま す 。  オブジェクト の  型  も また 変わ る こと が あ り ま せ ん 。 
オブジェクト の 型 は 、 その オブジェクト の サポート する 操作 ( ` ` 長 さ を 持 っ て い る か ? ' ' など )  を 決定 し 、 その 型 の オブジェクト が 取 り う る 値 に つ い て 定義 し て い ま す 。 
関数 は 、 オブジェクト の 型 ( 型 自体 も 一 つ の オブジェクト で す )  を 返 し ま す 。 
オブジェクト に よ っ て は 、 値  ( value )  を 変え る こと が でき ま す 。 
値 を 変え る こと が でき る オブジェクト は  変更 可能  ( mutable )  で あ る と い い ま す ;  値 を 一 度 設定 する と 、 その 後 は 変え る こと が でき な い オブジェクト は 変更 不能  ( immutable )  で あ る と 呼 び ま す 。  ( 変更 不能 な コンテナ オブジェクト が 変更 可能 な オブジェクト へ の 参照 を 含 ん で い る 場合 、 その 値 は 後者 の オブジェクト の 変更 に よ っ て 変わ る 場合 が あ り ま す ;  その 場合 で も 、 コンテナ の 含 ん で い る オブジェクト の 集まり は 変わ ら な い ため 、 コンテナ は 変更 不能 と 考え ま す 。 
実装 で は 、 ごみ 収集 を 遅らせ たり 、 全く 行 わ な い よう に する こと が でき ま す - -  到達 可能 な オブジェクト を ごみ 収集 処理 し て しま わ な い かぎり 、 どう 実装 する か は 実装 品質 の 問題 で す 。 
( 実装 上 の 注意 :  現在 の 実装 で は 参照 カウント  ( reference - counting )  手順 を 使 っ て お り 、 ( オプション と し て )  循環 参照 を 行 っ て い る ごみ オブジェクト を 遅延 検出 し ま す 。  この 実装 で は ほとんど の オブジェクト を 到達 不能 に な る と 同時 に 処理 する こと が でき ま す が 、 循環 参照 を 含 む ごみ オブジェクト の 収集 が 確実 に 行 わ れ る よう 保証 し て い る わけ で は あ り ま せ ん 。 
循環 参照 を 持 つ ごみ オブジェクト 収集 の 制御 に つ い て は 、 
これ ら の リソース は 、 オブジェクト が ごみ 収集 さ れ た 際 に 解放 さ れ る もの と 理解 さ れ て い ま す が 、 ごみ 収集 が 行 わ れ る 保証 は な い の で 、 こう し た オブジェクト で は 外部 リソース を 明示 的 に 解放 する 方法 、 大抵 は  close ( )  メソッド を 提供 し て い ま す 。  こう し た オブジェクト は 明示 的 に  close  する よう 強 く 奨め ま す 。 
操作 を する 際 に は 、 `try . . . finally'  文 を 使 う と 便利 で す 。  他 の オブジェクト に 対 する 参照 を も つ オブジェクト も あ り ま す ;  これ ら は コンテナ  ( container )  と 呼 ば れ ま す 。 
コンテナ オブジェクト の 例 と し て 、 タプル 、 リスト 、 および 辞書 が 挙げ られ ま す 。 
オブジェクト へ の 参照 自体 が コンテナ の 値 の 一部 で す 。 
ほとんど の 場合 、 コンテナ の 値 と い う と 、 コンテナ に 入 っ て い る オブジェクト の 値 の こと を 指 し 、 それ ら オブジェクト の アイデンティティ で は あ り ま せ ん ;  しかし ながら 、 コンテナ の 変更 可能 性 に つ い て 述べ る 場合 、 今 まさに コンテナ に 入 っ て い る オブジェクト の アイデンティティ の こと を 指 し ま す 。 
したが っ て 、 ( タプル の よう に )  変更 不能 な オブジェクト が 変更 可能 な オブジェクト へ の 参照 を 含 む 場合 、 その 値 が 変化 する の は 変更 可能 な オブジェクト が 変更 さ れ た 時 、 と い う こと に な り ま す 。  型 は オブジェクト の 動作 の ほとんど 全て に 影響 し ま す 。 
オブジェクト の アイデンティティ が 重要 か どう か で さえ 、 ある 意味 で は 型 に 左右 さ れ ま す : 変更 不能 な 型 で は 、 新た な 値 を 計算 する よう な 操作 を 行 う と 、 実際 に は 同じ 型 と 値 を 持 っ た 既存 の オブジェクト へ の 参照 を 返 す こと が あ り ま す が 、 変更 可能 な オブジェクト で は その よう な 動作 は 起こ り え ま せ ん 。 
( " c  = d =[ ] "  と する と 、  c  と  d  の 両方 に 同じ オブジェクト を 代入 し ま す ) 
. . .  も また 変わ る こと が あ り ま せ ん 。 
Python  2 . 2  以降 、 型 と クラス の 段階 的 な 統合 が 始ま っ て い る ため 、 この ドキュメント で 主張 さ れ て い る 内容 が  100 %  正確 で 完全 と い う わけ で は な くな り ま し た :  例えば 、 場合 に よ っ て は 、 ある 管理 さ れ た 条件 下 で なら 、 オブジェクト の 型 を 変更 する こと が でき ま す 。 
この マニュアル に 大幅 な 改訂 が 施 さ れ る まで は 、 この ドキュメント で の 記述 は 、 ` ` 旧 クラス 型  ( classic  class ) ' ' に 関 し て のみ 信頼 でき る 内容 と 考え ね ば な り ま せ ん 。  Python  2 . 2  および  2 . 3  で は 、 互換 性 の ため に クラシック な クラス が まだ デフォルト と な っ て い ま す 。 
1 . 10  参照 カウント 法 
1 . 9  任意 の 値 を 構築 する 
1 .  C  や  C + + 
1 . 10 . 1  Python  に お け る 参照 カウント 法 
C  や  C + + の よう な 言語 で は 、 プログラマ は ヒープ 上 の メモリ を 動的 に 確保 し たり 解放 し たり する 責任 が あ り ま す 。 
こう し た 作業 は  C  で は 関数 malloc ( )  や free ( )  で 行 い ま す 。 
そこ で 、 適切 な 時 に free ( )  を 呼び出 す こと が 重要 に な り ま す 。 
ある メモリ ブロック に 対 し て 、 free ( )  を 呼 ば な かっ た に も かかわ ら ず その アドレス を 忘却 し て しま う と 、 ブロック が 占有 し て い る メモリ は プログラム が 終了 する まで 再 利用 でき な く な り ま す 。 
これ は メモリ リーク ( memory  leak )  と 呼 ば れ て い ま す 。 
逆 に 、 プログラム が あ る メモリ ブロック に 対 し て free ( )  を 呼 ん で お き ながら 、 その ブロック を 使 い 続け よう と する と 、 別 の  malloc ( )  呼び出し に よ っ て 行 わ れ る ブロック の 再 利用 と 衝突 を 起こ し ま す 。 
例えば 、 ある 関数 が あ る メモリ ブロック を 確保 し 、 何 ら か の 計算 を 行 っ て 、 再度 ブロック を 解放 する と し ま す 。 
さて 、 関数 の 要求 仕様 を 変更 し て 、 計算 に 対 する テスト を 追加 する と 、 エラー 条件 を 検出 し 、 関数 の 途中 で 処理 を 戻 す よう に な る か も しれ ま せ ん 。 
この 途中 で の 終了 が 起き る とき 、 確保 さ れ た メモリ ブロック は 解放 し 忘れ やす い の で す 。  コード が 後 で 追加 さ れ た 場合 に は 特に そう で す 。 
この よう な メモリ リーク が 一旦 紛れ込 ん で しま う と 、 長 い 間 検出 さ れ な い まま に な る こと が よく あ り ま す :  エラー に よ る 関数 の 終了 は 、 全て の 関数 呼び出し の に 対 し て ほんの わずか な 割合 しか 起き ず 、 その 一方 で ほとんど の 近代 的 な 計算 機 は 相当 量 の 仮想 記憶 を 持 っ て い る ため 、 メモリ リーク が 明らか に な る の は 、 長 い 間 動作 し て い た プロセス が リーク を 起こ す 関数 を 何 度 も 使 っ た 場合 に 限 ら れ る から で す 。 
従 っ て 、 この 種 の エラー を 最小 限 に とどめ る よう な コーディング 規約 や 戦略 を 設け て 、 不慮 の メモリ リーク を 避け る こと が 重要 な の で す 。  Python  は malloc ( )  や free ( )  を 非常 に よく 利用 する ため 、 メモリ リーク の 防止 に 加え 、 解放 さ れ た メモリ の 使用 を 防止 する 戦略 が 必要 で す 。 
この ため に 選 ば れ た の が 参照 カウント 法  ( reference counting )  と 呼 ば れ る 手法 で す 。 
参照 カウント 法 の 原理 は 簡単 で す :  全て の オブジェクト に は カウンタ が あ り 、 オブジェクト に 対 する 参照 が どこ か に 保存 さ れ た ら カウンタ を インクリメント し 、 オブジェクト に 対 する 参照 が 削除 さ れ た ら デクリメント し ま す 。 
) 自動 ガベージ コレクション の 大きな 利点 は 、 ユーザ が free ( )  を 明示 的 に よ ば な く て よ い こと に あ り ま す 。 
( 速度 や メモリ の 有効 利用 性 も 利点 と し て 主張 さ れ て い ま す -- が 、 これ は 確たる 事実 で は あ り ま せ ん 。 
循環 参照 検出 機構 の おかげ で 、 直接 、 間接 に かかわ ら ず 循環 参照 の 生成 を 気 に せ ず に アプリケーション を 構築 でき ま す ; と い う の も 、 参照 カウント 法 だけ を 使 っ た ガベージ コレクション 実装 に と っ て 循環 参照 は 弱点 だ から で す 。 
循環 参照 は 、 ( 間接 参照 の 場合 も 含め て )  相互 へ の 参照 が 入 っ た オブジェクト から 形成 さ れ る ため 、 循環 内 の オブジェクト は 各々 非 ゼロ の 参照 カウント を 持 ち ま す 。 
典型 的 な 参照 カウント 法 の 実装 で は 、 たとえ 循環 参照 を 形成 する オブジェクト に 対 し て 他 に 全く 参照 が な い と し て も 、 循環 参照 内 の どの オブジェクト に 属 する メモリ も 再 利用 でき ま せ ん 。  循環 参照 検出 機構 は 、 ごみ と な っ た 循環 参照 を 検出 し 、 Python  で 実装 さ れ た 後 始末 関数  ( finalizer 、 __ del_ _( )  メソッド )  が 定義 さ れ て い な い かぎり 、 それ ら の メモリ を 再 利用 でき ま す 。 
後 始末 関数 が あ る 場合 、 検出 機構 は 検出 し た 循環 参照 を 
gc モジュール  に  ( 具体 的 に は この モジュール の garbage  変数 内 )  に 公開 し ま す 。 
gc  モジュール で は また 、 検出 機構  ( collect ( )  関数 )  を 実行 する 方法 や 設定 用 の インタフェース 、 実行 時 に 検出 機構 を 無効 化 する 機能 も 公開 し て い ま す 。 
循環 参照 検出 機構 は オプション の 機構 と みな さ れ て い ま す ; デフォルト で 入 っ て は い ま す が 、 Unix  プラットフォーム ( Mac  OS  X  も 含 み ま す )  で は ビルド 時 に configure  スクリプト の - - without - cycle - gc  オプション を 使 っ て 、 他 の プラットフォーム で は pyconfig . h  ヘッダ の WITH _ CYCLE _ GC 定義 を はず し て 無効 に でき ま す 。 
こう し て 循環 参照 検出 機構 を 無効 化 する と 、 gc  モジュール は 利用 でき な く な り ま す 。 
1 . 10 . 1  Python  に お け る 参照 カウント 法 
1 . 10 . 2  所有 権 に まつわ る 規則 
1 . 10 . 3  薄氷 
1 . 10 . 4  NULL  ポインタ 
A .  バグ 報告 
B .  歴史 と ライセンス 
1 . 2 . 5 . 2  モジュール 検索 パス に モジュール を 追加 する 
Macintosh モジュール リファレンス 
1 . 2 . 5  設定 を 行な う 
1 . 2 . 5 . 3  デフォルト の 起動 オプション 
import  文 を 実行 する と 、 Python  は その モジュール を sys . path  で 定義 さ れ た 場所 に 探 し に 行 き ま す 。 
Mac  上 で  sys . path  を 編集 する に は 、 EditPythonPrefs  を 起動 し て 、 一番 上 に あ る 大きめ の フィールド に パス を 入力 し ま す  ( 1  行 に  1  つづつ 書 き ま す ) 。  MacPython  で は メイン の  Python  ディレクトリ を 定義 し て い る の で 、 フォルダ を メイン  Python  ディレクトリ に 追加 する の が 最も 簡単 な 方法 で す 。 
「 My  Folder 」 と い う 名前 の フォルダ を 作 っ て 自作 の スクリプト を 入れ 、 メイン の  Python  ディレクトリ に 追加 し た けれ ば 、 " $ ( PYTHON ) : My  Folder "  を 新た な 行 に 入力 し ま す 。  OS  9  か それ 以前 の  OS  で デスクトップ を 追加 し た けれ ば 、  " StartupDriveName : Desktop  Folder "  を 新た な 行 と し て 入力 し ま す 。 
2 . 4 . 1  文字 列 リテラル 
2 . 4  リテラル  ( literal ) 
2 . 4 . 2  文字 列 リテラル の 結合  ( concatenation ) 
文字 列 リテラル は 以下 の 字句 定義 で 記述 さ れ ま す : 
上記 の 生成 規則 で 示 さ れ て い な い 文法 的 な 制限 が 一 つ あ り ま す 。  それ は 文字 列 リテラル の  stringprefix  と 残り の 部分 の 間 に 空白 を 入れ て は な ら な い と い う こと で す 。 
ソース コード 文字 セット ( source  character set )  は エンコード 宣言 で 決ま り ま す . エンコード 宣言 が な い 場合 に は  ASCII  に な り ま す . 2 . 1 . 4  節 を 参照 し て くださ い . より 平易 な 説明 :  文字 列 リテラル は 、 対応 する 一 重 引用 符  ( ')  また は 二 重 引用 符  ( " )  で 囲 わ れ ま す 。 
また 、 対応 する 三 連 の 一 重 引用 符 や 二 重 引用 符 で 囲 う こと も でき ま す  ( 通常 、 三重 クオート 文字 列 :  triple - quotedstring  と し て 参照 さ れ ま す ) 。 
バックス ラッシュ  ( )  文字 を 使 っ て 、 ある 文字 を 例えば 改行 文字 や バックス ラッシュ 自体 、 クオート 文字 と い っ た 別 の 意味 を 持 つ よう に エスケープ する こと が でき ま す 。 
文字 列 リテラル の 前 に は 、 オプション と し て  " r "  また は  " R " 一 文字 を 接頭 し て も かま い ま せ ん ;  この よう な 文字 列 は  raw  文字 列 ( raw string )  と 呼 ば れ 、 バックス ラッシュ に よ る エスケープ シーケンス の 解釈 規則 が 異な り ま す 。 
" u "  や  " U "  を 接頭 する と 、 文字 列 は  Unicode  文字 列  ( Unicode string )  に な り ま す 。 
Unicode  文字 列 は Unicode  コンソーシアム および  ISO 106 46  で 定義 さ れ て い る  Unicode  文字 セット を 使 い ま す 。 
" r "  また は  " R "  接頭 文字 が つ か な い かぎり 、 文字 列 中 の エスケープ シーケンス は 標準  C  で 使 わ れ て い る の と 同様 の 法則 に したが っ て 解釈 さ れ ま す 。  以下 に  Python  で 認識 さ れ る エスケープ シーケンス を 示 し ま す : 
エスケープ シーケンス 
意味 
備考 
無視 
バックス ラッシュ  ( ) 
一 重 引用 符  ( ') 
二 重 引用 符  ( " ) 
ASCII  端末 ベル  ( BEL ) 
ASCII  バック ス ペース  ( BS ) 
ASCII  フォーム フィード  ( FF ) 
ASCII  行送り  ( LF ) 
Unicode  データベース 中 で 名前  name  を 持 つ 文字  ( Unicode  のみ ) 
ASCII  復帰  ( CR ) 
ASCII  水平 タブ  ( TAB ) 
16 - bit  の  16  進 数値  xxxx  を 持 つ 文字  ( Unicode  のみ ) 
32 - bit  の  16  進 数値  xxxxxxxx  を 持 つ 文字  ( Unicode  のみ ) 
ASCII  水平 タブ  ( VT) 
8  進 数値  ooo  を 持 つ 文字 
16  進 数値  hh  を 持 つ 文字 
備考 : 
サロ ゲート ペア の 断片 を 形成 する 個々 の コード 単位 は 、 この エスケープ シーケンス で エンコード する こと が でき ま す 。 
Unicode  文字 は すべて この 方法 で エンコード でき ま す が 、 Python  が  16 - bit  コード 単位 を 扱 う よう に コンパイル さ れ て い る ( デフォルト の 設定 で す )  場合 、 基本 多 言語 面  ( Basic Multilingual  Plane ,  BMP )  外 の 文字 は サロ ゲート ペア  ( surrogate pair)  を 使 っ て エンコード する こと に な り ま す 。 
サロ ゲート ペア の 断片 を 形成 する 個々 の コード 単位 は この エスケープ シーケンス を 使 っ て エンコード する こと が でき ま す 。 
標準  C  と 同じく 、 最大 で  3  桁 の  8  進数 まで 受理 し ま す 。 
標準  C  と は 違 い 、 最大 で  2  桁 の  16  進数 しか 受理 さ れ ま せ ん 。 
文字 列 リテラル 中 で は ,  16  進 および  8  進 エスケープ は エスケープ の 示 す バイト 文字 に な り ま す . その バイト 文字 が ソース 文字 セット で エンコード さ れ て い る 保証 は あ り ま せ ん . Unicode  リテラル 中 で は , エスケープ 文字 は エスケープ 文字 の 表現 する 値 を 持 つ  Unicode  文字 に な り ま す . 
バックス ラッシュ も 文字 列 中 に 残 り ま す 。 
( この 挙動 は デバッグ の 際 に 便利 で す :  エスケープ シーケンス を 誤 入力 し た 場合 、 その 結果 と し て 出力 に 失敗 し て い る の が 用意 に わか り ま す )  テーブル 中 で ``( Unicode  のみ ) ' ' と 書 か れ た エスケープ シーケンス は 、 非  Unicode 文字 列 リテラル 中 で は 認識 さ れ な い エスケープ シーケンス の カテゴリ に 分類 さ れ る の で 注意 し て くださ い 。 
接頭 文字  " r "  また は  " R "  が あ る 場合 、 バックス ラッシュ の 後 に くる 文字 は その まま 文字 列 中 に 入 り 、 バックス ラッシュ は 全て 文字 列 中 に 残 さ れ ま す 。 
例えば 、 文字 列 リテラル  r " n "  は 二 つ の 文字 : バックス ラッシュ と 小 文字 の  " n "  から な る 文字 列 を 表 す こと に な り ま す 。 
引用 符 は バックス ラッシュ で エスケープ する こと が でき ま す が 、 バックス ラッシュ 自体 も 残 っ て しま い ま す ;  例えば 、 r " " "  は 不正 で な い 文字 列 リテラル で 、 バックス ラッシュ と 二 重 引用 符 から な る 文字 列 を 表 し ま す ;  r " "  は 正し く な い 文字 列 リテラル で す  ( raw  文字 列 を 奇数 個 連な っ た バックス ラッシュ で 終わ ら せ る こと は でき ま せ ん ) 。 
厳密 に い え ば 、 ( バックス ラッシュ が 直後 の クオート 文字 を エスケープ し て しま う ため )  raw  文字 列 を 単一 の バックス ラッシュ で 終わ ら せ る こと は でき な い と い う こと に な り ま す 。 
また 、 バックス ラッシュ の 直後 に 改行 が き て も 、 行 継続 を 意味 する の で は な く  、 それ ら 二 つ の 文字 と し て 解釈 さ れ る の で 注意 し て くださ い 。  " r "  および  " R "  接頭 文字 を  " u "  や " U "  と 合わせ て 使 っ た 場合 、 uXXX X  エスケープ シーケンス は 処理 さ れ ま す が 、 その 他 の バックス ラッシュ は すべて 文字 列 中 に 残 さ れ ま す  。 
例えば 、 文字 列 リテラル ur "u 0062 n "  は 、 3 つ の  Unicode  文字 : ` LATIN  SMALL  LETTER  B' ( ラテン 小 文字  B ) 、 ` REVERSE  SOLIDUS ' ( 逆向き 斜線 ) 、 および  ` LATIN  SMALL  LETTER  N' ( ラテン 小 文字  N )  を 表 し ま す 。  バックス ラッシュ の 前 に バックス ラッシュ を つけ て エスケープ する こと は でき ま す ;  しかし 、 バックス ラッシュ は 両方 とも 文字 列 中 に 残 さ れ ま す 。 
その 結果 、 uXXX X  エスケープ シーケンス は 、 バックス ラッシュ が 奇数 個 連な っ て い る 場合 に のみ 認識 さ れ ま す 。 
2 . 3  組み込 み 型 
2 . 2  非 必須 組み込 み 関数  ( Non - essential Built - in 
2 .  組み込 み オブジェクト 
2 . 3 . 1  真値 テスト 
以下 の セクション で は 、 インタプリタ に 組み込 ま れ て い る 標準 の 型 に つ い て 記述 し ま す 。 
これ まで の  Python  の 歴史 で は 、 組み込 み 型 は オブジェクト 指向 に お け る 継承 を 行 う 際 に 雛型 に でき な い と い う 点 で 、 ユーザ 定義 型 と は 異な っ て い ま し た 。 
リリース  2 . 2  から は 状況 が 変わ り 始め ま し た が 、 目標 と する ユーザ 定義 型 と 組み込 み 方 の 一元 化 は まだまだ 完成 の 域 に は 達 し て い ま せ ん 。  主要 な 組み込 み 型 は 数値 型 、 シーケンス 型 、 マッピング 型 、 ファイル クラス 、 インスタンス 型 、 および 例外 で す 。 
演算 に よ っ て は 、 複数 の 型 で サポート さ れ て い る もの が あ り ま す ; 特に 、 ほぼ 全て の オブジェクト に つ い て 、 比較 、 真値 テスト 、 ( repr ( )  関数 と 同等 、 また str ( )  関数 と は わずか に 異な る ` . . . `  形式 で の )  文字 列 へ の 変換 を 行 う こと が でき ま す 。 
オブジェクト が print 
に よ っ て 書 か れ て い る と 、 後 の 方 の 文字 列 へ の 変換 が 暗黙 に 行 わ れ ま す ( Information  on 
print  文 や その 他 の 文 に 関 する 情報 は 
および 
で 見つけ る こと が でき ま す 。 
2 . 3 . 2  ブール 演算 
2 . 3 . 3  比較 
2 . 3 . 4  数値 型 
2 . 3 . 4 . 1  整数 型 に お け る ビット 文字 列 演算 
2 . 3 . 5  イテレータ 型 
2 . 3 . 6  シーケンス 型 
2 . 3 . 6 . 1  文字 列 メソッド 
2 . 3 . 6 . 2  文字 列 フォーマット 操作 
2 . 3 . 6 . 3  XRange  型 
2 . 3 . 6 . 4  変更 可能 な シーケンス 型 
2 . 3 . 7  set ( 集合 )  型 
2 . 3 . 8  マップ 型 
2 . 3 . 9  ファイル オブジェクト 
2 . 3 . 10  他 の 組み込 み 型 
2 . 3 . 10 . 1  モジュール 
2 . 3 . 10 . 2  クラス および クラス インスタンス 
2 . 3 . 10 . 3  関数 
2 . 3 . 10 . 4  メソッド 
2 . 3 . 10 . 5  コード オブジェクト 
2 . 3 . 10 . 6  型 オブジェクト 
2 . 3 . 10 . 7  ヌル オブジェクト 
2 . 3 . 10 . 8  省略 表記 オブジェクト 
2 . 3 . 10 . 9  ブール 値 
2 . 3 . 10 . 10  内部 オブジェクト 
2 . 3 . 1 1  特殊 な 属性 
3 . 3 . 1  弱 参照 オブジェクト 
3 . 3 . 2  例 
弱 参照 オブジェクト は 属性 あるいは メソッド を 持 ち ま せ ん 。 
しかし 、 リファレント が まだ 存在 する なら ば 、 呼び出 す こと で その リファレント を 取得 でき る よう に し ま す : import  weakref  class Object : . . .  pass . . .  o= Object ( )  r=  weakref . ref (o)  o 2  =  r ( ) o  is o 2 True 
リファレント が もはや 存在 し な い なら ば 、 参照 オブジェクト の 呼び出し は None を 返 し ま す : 
弱 参照 オブジェクト が まだ 生き て い る か どう か の テスト は 、 式 
ref ( )  is  not  None を 用い て 行 わ れ ま す 。 
通常 、 参照 オブジェクト を 使 う 必要 が あ る アプリケーション コード は この パターン に 従 い ま す : 
#  r は 弱 参照 オブジェクト o  =  r ( ) if o  is  None : # リファレント が ガーベジ コレクト さ れ た print  " Object  has  been  allocated ;can't  frobnicate . " else : print  " Object  is still live ! " o . do _something _useful ( ) 
これ は WeakValueDictionary  の 実装 で 使 わ れ て お り 、 マップ 内 の 各 エントリ に よ る メモリ の オーバヘッド を 減ら し て い ま す 。 
こう し た 実装 は 、 ある 参照 に 追加 情報 を 関連 付け た い 場合 に 便利 で す し 、 リファレント を 取り出 す ため の 呼び出 し 時 に 何 ら か の 追加 処理 を 行 い た い 場合 に も 使え ま す 。  以下 の 例 で は 、 ref  の サブ クラス を 使 っ て 、 ある オブジェクト に 追加 情報 を 保存 し 、 リファレント が アクセス さ れ た とき に その 値 に 作用 を でき る よう に する ため の 方法 を 示 し て い ま す : 
11  日本 語 訳 に つ い て 
1 . 1  簡単 な 例 
1 . 2  幕間 小話 :  エラー と 例外 
1 . 3  例 に 戻 る 
1 . 4  モジュール の メソッド テーブル と 初期 化 関数 
1 . 5  コンパイル と リンク 
1 . 6  C  から  Python  関数 を 呼び出 す 
1 . 7  拡張 モジュール 関数 で の パラメタ 展開 
1 . 8  拡張 モジュール 関数 の キー ワード パラメタ 
1 . 11  C + + で の 拡張 モジュール 作成 
1 . 12  拡張 モジュール に  C  API  を 提供 する 
2 .  新し い 型 を 定義 する 
2 . 1  基本 的 な こと 
2 . 1 . 1  基本 の サンプル に データ と メソッド を 追加 する 
2 . 1 . 2  データ 属性 を こまか く 制御 する 
2 . 1 . 3  循環 ガベージ コレクション を サポート する 
2 . 2  タイプ メソッド 
2 . 2 . 1  最終 化  ( finalization )  と 解放 
2 . 2 . 3  属性 を 管理 する 
2 . 2 . 4  オブジェクト の 比較 
2 . 2 . 5  抽象 的 な プロトコル の サポート 
2 . 2 . 6  その 他 いろいろ 
3 .  distutils  に よ る  C  および  C + +  拡張 モジュール の ビルド 
3 . 1  拡張 モジュール の 配布 
4 .  Windows  上 で の  C  および  C + +  拡張 モジュール の ビルド 
4 . 1  型 どおり の アプローチ 
4 . 2 Unix  と  Windows  の 相違 点 
4 . 3  DLL  使用 の 実際 
5 . 6  リンク に 関 する 要件 
A .  バグ 報告 
B .  歴史 と ライセンス 
B . 1  Python  の 歴史 
1 .  C  や  C + + 
リリース  2 . 4  , 平成 18 年 6 月 27 日  更新  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
この ドキュメント に つ い て . . . 
Python は 拡張 性 の あ る インタプリタ 形式 の オブジェクト 指向 言語 で す 。 
簡単 な テキスト 処理 スクリプト から 対話 型 の WWW ブラウザ まで 、 幅広 い 用途 に 対応 し て い ま す 。 
Python リファレンス マニュアル 
で は 、 プログラミング 言語  Python  の 厳密 な 構文 と セマンティクス に つ い て 説明 し て い ま す が 、 Python  と とも に 配付 さ れ , Python  を すぐ に 活用 する 上 で 大いに 役立 つ 標準 ライブラリ に つ い て は 説明 し て い ま せ ん 。 
この ライブラリ に は 、 例えば ファイル I \/ O  の よう に ,  Python  プログラマ が 直接 アクセス でき な い システム 機能 へ の アクセス 機能 を 提供 する  ( C で 書 か れ た )  組み込 み モジュール や 、 日々 の プログラミング で 生じ る 多く の 問題 に 標準 的 な 解決 策 を 提供 する pure Python  で 書 か れ た モジュール が 入 っ て い ま す 。 
これ ら 数 多く の モジュール に は 、 Python プログラム に 移植 性 を 持 た せ 、 それ を 高め る と い う 明確 な 意図 が あ り ま す 。  この ライブラリ リファレンス マニュアル で は 、 Python の 標準 ライブラリ だけ で な く 、 多く の オプション の ライブラリ モジュール に つ い て 説明 し て い ま す ( ライブラリ モジュール の 中 に は , プラットフォーム で の サポート や コンパイル 時 の 設定 に よ っ て 、 使え たり 使え な かっ たり する もの が あ り ま す ) . また 、 言語 の 標準 の 型 、 組み込み の 関数 と 例外 、 Python  リファレンス マニュアル で 説明 し て い な かっ たり , 説明 不足 で あ る よう な 多く の 点 に つ い て も 説明 し て い ま す 。 
この マニュアル で は 、 読者 が  Python  言語 に つ い て 基礎 的 な 知識 を 持 っ て い る と 仮定 し て い ま す 。 
形式 ば ら ず に  Python  を 学 ん で み た けれ ば 、 
Python チュートリアル 
を 参照 し て くださ い 。 
は 、 高度 な 文法 と セマンティクス に つ い て 疑問 が あ る とき に 参照 し て くださ い 。 
最後 に 、 
Python インタプリタ の 拡張 と 組み込 み 
と 題 さ れ た マニュアル に は 、 Python に 新し い 機能 を 追加 する 方法 と 、 他 の アプリケーション に  Python  を 組み込 む 方法 が 書 か れ て い ま す 。 
UnexpectedException  ( doctest  、 ホホ羌ー )  ==  operator 
__ bases__ ( class  の 属性 ) 
__builtin__ ( 組み込 み  モジュール ) 
_ _ call_ _( )  ( Generator  の メソッド ) 
__ class__ ( instance  の 属性 ) 
__ concat__( ) (operator  モジュール ) 
__ delslice_ _( ) (operator  モジュール ) 
__dict__ (object  の 属性 ) 
__displayhook_ _ ( sys  モジュール ) 
__div__( ) (operator  モジュール ) 
_ _eq_ _( )  ( Charset  の メソッド ) 
_ _eq_ _( )  ( Header  の メソッド ) 
_ _eq_ _( ) (operator  モジュール ) 
_ _excepthook_ _ ( sys  モジュール ) 
_ _floordiv__( ) (operator  モジュール ) 
_ _future__ (standard  モジュール ) 
_ _ ge__( ) (operator  モジュール ) 
_ _ getslice_ _( ) (operator  モジュール ) 
_ _gt__( ) (operator  モジュール ) 
_ _ i add__( )  ( AddressList  の メソッド ) 
_ _ init_ _( )  ( difflib  モジュール ) 
_ _ init_ _( )  ( NullTranslations  の メソッド ) 
_ _ init_ _( )  ( Text box  の メソッド ) 
_ _ inv__( ) (operator  モジュール ) 
_ _ invert__( ) (operator  モジュール ) 
_ _ isub__( )  ( AddressList  の メソッド ) 
_ _iter_ _( ) ( container  の メソッド ) 
_ _iter_ _( )  (iterator  の メソッド ) 
_ _le__( ) (operator  モジュール ) 
_ _len__( )  ( AddressList  の メソッド ) 
_ _len__( )  ( Message  の メソッド ) 
_ _lshift__( ) (operator  モジュール ) 
_ _lt__( ) (operator  モジュール ) 
_ _main__ ( 組み込 み  モジュール ) 
_ _members__ (object  の 属性 ) 
_ _ methods__ (object  の 属性 ) 
_ _mod_ _( ) (operator  モジュール ) 
_ _mul_ _( ) (operator  モジュール ) 
_ _ne__( )  ( Header  の メソッド ) , [ Link ] 
_ _ne__( ) (operator  モジュール ) 
_ _neg_ _( ) (operator  モジュール ) 
_ _not__( ) (operator  モジュール ) 
_ _or_ _( ) (operator  モジュール ) 
_ _ pos_ _( ) (operator  モジュール ) 
_ _pow_ _( ) (operator  モジュール ) 
_ _repeat__( ) (operator  モジュール ) 
_ _repr_ _( ) ( netrc  の メソッド ) 
_ _rshift__( ) (operator  モジュール ) 
__setslice_ _( ) (operator  モジュール ) 
_ _stderr_ _ ( sys  モジュール ) 
_ _stdin__ ( sys  モジュール ) 
_ _stdout__ ( sys  モジュール ) 
_ _str_ _( )  ( AddressList  の メソッド ) 
_ _str_ _( )  ( Charset  の メソッド ) 
_ _str_ _( )  ( date  の メソッド ) 
_ _str_ _( )  ( datetime の メソッド ) 
_ _str_ _( )  ( Header  の メソッド ) 
_ _str_ _( )  ( Message  の メソッド ) 
_ _str_ _( ) ( time の メソッド ) 
_ _ sub__( )  ( AddressList  の メソッド ) 
_ _ sub__( ) (operator  モジュール ) 
_ _truediv__( ) (operator  モジュール ) 
_ _unicode__( )  ( Header  の メソッド ) 
_ _xor_ _( ) (operator  モジュール ) 
_exit ( )  (os  モジュール ) 
_ getframe( )  ( sys  モジュール ) 
_ locale  ( 組み込 み  モジュール ) 
_parse ( )  ( NullTranslations  の メソッド ) 
_structure ( )  (email . Iterators  モジュール ) 
_urlopener  ( urllib  モジュール ) 
_winreg  ( extension  モジュール ) 
a 2b_ base 64 ( ) ( binascii モジュール ) 
a 2b _hex ( ) ( binascii モジュール ) 
a 2b _ hqx ( ) ( binascii モジュール ) 
a 2b_qp( ) ( binascii モジュール ) 
a 2b _uu ( ) ( binascii モジュール ) 
ABMON _ 1  . . .  ABMON _ 12  ( locale  モジュール ) 
abort ( )  ( FTP  の メソッド ) 
abort ( )  (os  モジュール ) 
above ( )  ( Text box  の メソッド ) 
abs ( )  ( Context  の メソッド ) 
abs ( )  (operator  モジュール ) 
abspath ( )  (os . path  モジュール ) 
ac _out_buffer_ size ( asyncore  モジュール ) 
accept ( )  ( dispatcher  の メソッド ) 
accept ( )  ( socket  の メソッド ) 
accept2d year  ( time モジュール ) 
access ( )  (os  モジュール ) 
acos ( )  ( cmath  モジュール ) 
acos ( )  ( math  モジュール ) 
acosh ( )  ( cmath  モジュール ) 
acquire ( )  ( Condition  の メソッド ) 
acquire ( )  ( lock  の メソッド ) 
acquire ( )  ( Semaphore  の メソッド ) 
acquire ( )  ( Text box  の メソッド ) 
acquire ( )  ( Timer  の メソッド ) , [ Link ] 
acquire_lock ( )  (imp  モジュール ) 
activate_form ( )  ( form  の メソッド ) 
active Count ( ) ( threading  モジュール ) 
add ( )  (operator  モジュール ) 
add ( )  ( Stats  の メソッド ) 
add ( )  (TarFile  の メソッド ) 
add_alias ( )  (email . Charset  モジュール ) 
add_ box ( )  ( form  の メソッド ) 
add_browser ( )  ( form  の メソッド ) 
add_button ( )  ( form  の メソッド ) 
add_ charset ( )  (email . Charset  モジュール ) 
add_ choice ( )  ( form  の メソッド ) 
add_clock ( )  ( form  の メソッド ) 
add_codec ( )  (email . Charset  モジュール ) 
add_cookie_header ( )  ( CookieJar  の メソッド ) 
add_counter ( )  ( form  の メソッド ) 
add_data ( )  ( Request  の メソッド ) 
add_dial ( )  ( form  の メソッド ) 
add _fallback ( )  ( NullTranslations  の メソッド ) 
add_ flowing_ data ( )  ( formatter  の メソッド ) 
add _handler ( )  ( OpenerDirector  の メソッド ) 
add _header ( )  ( Message  の メソッド ) 
add _header ( )  ( Request  の メソッド ) 
add_ history ( )  ( readline  モジュール ) 
add_hor_rule ( )  ( formatter  の メソッド ) 
add_ input ( )  ( form  の メソッド ) 
add_label_ data ( )  ( formatter  の メソッド ) 
add_ lightbutton ( )  ( form  の メソッド ) 
add_line_break ( )  ( formatter  の メソッド ) 
add_ literal_data ( )  ( formatter  の メソッド ) 
add _menu( )  ( form  の メソッド ) 
add_parent ( )  ( BaseHandler  の メソッド ) 
add_ password ( )  ( HTTPPasswordMgr  の メソッド ) 
add_positioner ( )  ( form  の メソッド ) 
add_ roundbutton ( )  ( form  の メソッド ) 
add_ section ( )  ( Safe ConfigParser  の メソッド ) 
add_slider ( )  ( form  の メソッド ) 
add_ text ( )  ( form  の メソッド ) 
add_timer ( )  ( form  の メソッド ) 
add_type ( )  ( mimetypes  モジュール ) 
add_unredirected_header ( )  ( Request  の メソッド ) 
add_ valslider ( )  ( form  の メソッド ) 
addcallback ( )  ( CD  parser  の メソッド ) 
addch ( )  ( window  の メソッド ) 
addError ( )  ( Test Result  の メソッド ) 
addFailure ( )  ( Test Result  の メソッド ) 
addfile ( )  (TarFile  の メソッド ) 
addFilter ( )  ( Text box  の メソッド ) , [ Link ] 
addHandler ( )  ( Text box  の メソッド ) 
addheader ( )  ( MimeWriter  の メソッド ) 
addinfo ( )  ( Profile  の メソッド ) 
addLevelName( )  ( logging  モジュール ) 
addnstr ( )  ( window  の メソッド ) 
address_string ( )  ( Base HTTPRequestHandler  の メソッド ) 
addresslist  ( AddressList  の 属性 ) 
addstr ( )  ( window  の メソッド ) 
addSuccess ( )  ( Test Result  の メソッド ) 
addTest ( )  ( TestSuite  の メソッド ) 
addTests ( )  ( TestSuite  の メソッド ) 
adjusted ( )  ( Decimal  の メソッド ) 
adler 32 ( )  ( zlib  モジュール ) 
adpcm2 lin ( )  ( audioop  モジュール ) 
adpcm32 lin ( )  ( audioop  モジュール ) 
AF _INET  ( socket  モジュール ) 
AF _INET 6  ( socket  モジュール ) 
AF _ UNIX  ( socket  モジュール ) 
AI_*( socket  モジュール ) 
aifc ( )  ( aifc  の メソッド ) 
aifc  ( standard  モジュール ) 
aiff ( )  ( aifc  の メソッド ) 
AIFF - C , [ Link ]  AL  ( standard  モジュール ) 
al  ( 組み込 み  モジュール ) 
AL  ( 標準  モジュール ) 
alarm ( )  ( signal  モジュール ) 
all_errors ( ftplib  モジュール ) 
all _features  ( xml . sax . handler  モジュール ) 
all_properties  ( xml . sax . handler  モジュール ) 
allocate_lock ( ) ( thread  モジュール ) 
allowed_domains ( )  ( DefaultCookiePolicy  の メソッド ) 
allowremoval ( )  ( CD  player  の メソッド ) 
alt ( )  ( curses . ascii モジュール ) 
ALT _ DIGITS  ( locale  モジュール ) 
altsep (os  モジュール ) 
altzone  ( time モジュール ) 
anchor_bgn ( )  ( HTMLParser  の メソッド ) 
anchor_end ( )  ( HTMLParser  の メソッド ) 
and _() (operator  モジュール ) 
annotate ( )  ( dircache  モジュール ) 
anydbm  ( standard  モジュール ) 
api_ version  ( sys  モジュール ) 
apop ( )  ( POP 3 _ SSL  の メソッド ) 
append ( )  ( array  の メソッド ) 
append ( )  ( Header  の メソッド ) 
append ( )  ( IMAP 4_stream  の メソッド ) 
append ( )  ( SystemRandom  の メソッド ) 
append ( )  (Template  の メソッド ) 
appendChild ( )  ( Node  の メソッド ) 
appendleft ( )  ( SystemRandom  の メソッド ) 
architecture ( )  ( platform  モジュール ) 
aRepr ( repr  モジュール ) 
argv  ( sys  モジュール ) 
array ( )  ( array  モジュール ) 
array  ( 組み込 み  モジュール ) 
ArrayType  ( array  モジュール ) 
article ( )  ( NNTPDataError  の メソッド ) 
AS _IS  ( formatter  モジュール ) 
as _string ( )  ( Message  の メソッド ) 
as_tuple ( )  ( Decimal  の メソッド ) 
ascii( )  ( curses . ascii モジュール ) 
ascii_ letters ( string  モジュール ) 
ascii_lowercase  ( string  モジュール ) 
ascii_uppercase  ( string  モジュール ) 
asctime( ) ( time モジュール ) 
asin ( )  ( cmath  モジュール ) 
asin ( )  ( math  モジュール ) 
asinh( )  ( cmath  モジュール ) 
assert_()  ( TestCase  の メソッド ) 
assert_line_data ( )  ( formatter  の メソッド ) 
assertAlmostEqual ( )  ( TestCase  の メソッド ) 
assertEqual ( )  ( TestCase  の メソッド ) 
assertNotAlmostEqual ( )  ( TestCase  の メソッド ) 
assertNotEqual ( )  ( TestCase  の メソッド ) 
assertRaises ( )  ( TestCase  の メソッド ) 
ast 2 list ( )  ( parser  モジュール ) 
ast2tuple ( )  ( parser  モジュール ) 
astimezone ( )  ( datetime の メソッド ) 
ASTType ( parser  モジュール ) 
asyncore  ( 組み込 み  モジュール ) 
atan ( )  ( cmath  モジュール ) 
atan ( )  ( math  モジュール ) 
atan 2 ( )  ( math  モジュール ) 
atanh( )  ( cmath  モジュール ) 
atexit  ( standard  モジュール ) 
atime ( cd  モジュール ) 
atof ( )  ( locale  モジュール ) 
atof ( )  ( string  モジュール ) 
atoi( )  ( locale  モジュール ) 
atoi( )  ( string  モジュール ) 
atol ( )  ( string  モジュール ) 
attach ( )  ( Message  の メソッド ) 
AttlistDeclHandler ( )  ( xmlparser  の メソッド ) 
attrgetter ( )  (operator  モジュール ) 
attributes ( Node  の 属性 ) 
attributes ( XMLParser  の 属性 ) 
attron ( )  ( window  の メソッド ) 
attrset ( )  ( window  の メソッド ) 
audio  ( cd  モジュール ) 
AUDIO_ FILE _ ENCODING_ ADPCM _ G721  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ ADPCM _ G722  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ ADPCM _ G 723 _ 3  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ ADPCM _ G 723 _ 5  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ ALAW _ 8  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ DOUBLE  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ FLOAT  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ LINEAR _ 16  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ LINEAR _ 24  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ LINEAR _ 32  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ LINEAR _ 8  ( sunau  モジュール ) 
AUDIO_ FILE _ ENCODING_ MULAW _ 8  ( sunau  モジュール ) 
AUDIO_ FILE _ MAGIC  ( sunau  モジュール ) 
AUDIODEV  ( 環境 変数 ) , [ Link ] 
audioop  ( 組み込 み  モジュール ) 
authenticate ( )  ( IMAP 4_stream  の メソッド ) 
authenticators ( )  ( netrc  の メソッド ) 
avg ( )  ( audioop  モジュール ) 
avgpp ( )  ( audioop  モジュール ) 
b 16 decode ( )  ( base 64  モジュール ) 
b 16encode ( )  ( base 64  モジュール ) 
b 2a_base 64 ( ) ( binascii モジュール ) 
b 2a_hex ( ) ( binascii モジュール ) 
b 2a_hqx ( ) ( binascii モジュール ) 
b 2a_qp( ) ( binascii モジュール ) 
b 2a_uu ( ) ( binascii モジュール ) 
b 32 decode ( )  ( base 64  モジュール ) 
b 32encode ( )  ( base 64  モジュール ) 
b 64decode ( )  ( base 64  モジュール ) 
b 64encode ( )  ( base 64  モジュール ) 
backslashreplace _errors_errors ( ) ( codecs  モジュール ) 
backward ( ) ( turtle  モジュール ) 
backward_ compatible ( imageop  モジュール ) 
Base HTTPServer  ( standard  モジュール ) 
basename ( )  (os . path  モジュール ) 
basic Config ( )  ( logging  モジュール ) 
Basic Context  ( decimal  の クラス ) 
Bastion ( )  ( Bastion  モジュール ) 
Bastion  ( standard  モジュール ) 
baudrate ( )  ( curses  モジュール ) 
bdb  ( 標準  モジュール ) 
beep ( )  ( curses  モジュール ) 
Beep ( )  ( winsound  モジュール ) 
below ( )  ( Text box  の メソッド ) 
bestreadsize ( )  ( CD  player  の メソッド ) 
betavariate ( )  ( random モジュール ) 
bgn_group ( )  ( form  の メソッド ) 
bias ( )  ( audioop  モジュール ) 
bidirectional ( )  (unicodedata  モジュール ) 
binary ( )  ( xmlrpclib  モジュール ) 
binascii ( 組み込 み  モジュール ) 
bind ( )  ( dispatcher  の メソッド ) 
bind ( )  ( socket  の メソッド ) 
bind_ text domain_codeset ( )  ( gettext  モジュール ) 
bind text domain ( )  ( gettext  モジュール ) 
binhex ( ) ( binhex  モジュール ) 
binhex ( standard  モジュール ) 
binhex  ( 標準  モジュール )  bisect ( ) ( bisect  モジュール ) 
bisect  ( standard  モジュール ) 
bisect _left ( ) ( bisect  モジュール ) 
bisect_ right ( ) ( bisect  モジュール ) 
bkgd ( )  ( window  の メソッド ) 
bkgdset ( )  ( window  の メソッド ) 
blocked_domains ( )  ( DefaultCookiePolicy  の メソッド ) 
B LOCKSIZE  ( cd  モジュール ) 
blocksize ( sha  モジュール ) 
body ( )  ( NNTPDataError  の メソッド ) 
body _encode ( )  ( Charset  の メソッド ) 
body _encoding  ( email . Charset  モジュール ) 
body _ line _iterator ( )  (email . Iterators  モジュール ) 
BOM  ( codecs  モジュール ) 
BOM _ BE  ( codecs  モジュール ) 
BOM _ LE  ( codecs  モジュール ) 
BOM _ UTF 16  ( codecs  モジュール ) 
BOM _ UTF 16_ BE  ( codecs  モジュール ) 
BOM _ UTF 16_ LE  ( codecs  モジュール ) 
BOM _ UTF 32  ( codecs  モジュール ) 
BOM _ UTF 32 _ BE  ( codecs  モジュール ) 
BOM _ UTF 32 _ LE  ( codecs  モジュール ) 
BOM _ UTF 8  ( codecs  モジュール ) 
boolean ( )  ( xmlrpclib  モジュール ) 
BooleanType (types  モジュール ) 
border ( )  ( window  の メソッド ) 
bottom ( )  ( Text box  の メソッド ) 
BoundedSemaphore ( ) ( threading  モジュール ) 
box ( )  ( window  の メソッド ) 
break _ long _words  ( Text Wrapper  の 属性 ) 
BROWSER  ( 環境 変数 ) , [ Link ] 
bsddb  ( extension  モジュール ) 
bsddb  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] 
btopen ( )  ( bsddb  モジュール ) 
buffer ( )  ( 組み込 み 関数 ) , [ Link ] 
buffer_ info ( )  ( array  の メソッド ) 
buffer_ size  ( xmlparser  の 属性 ) 
buffer_ text  ( xmlparser  の 属性 ) 
buffer_used  ( xmlparser  の 属性 ) 
BufferType (types  モジュール ) 
bufsize ( )  ( audio  device  の メソッド ) 
build_ opener ( )  ( urllib 2  モジュール ) 
builtin_module_names( sys  モジュール ) 
BuiltinFunctionType (types  モジュール ) 
Builtin MethodType (types  モジュール ) 
byteorder  ( sys  モジュール ) 
byteswap ( )  ( array  の メソッド ) 
bz 2  ( 組み込 み  モジュール ) 
C _ BUILTIN ( imp  モジュール ) 
C _ EXTENSION  ( imp  モジュール ) 
calcsize ( )  ( struct  モジュール ) 
calendar ( )  ( calendar  モジュール ) 
calendar  ( standard  モジュール ) 
call ( )  ( subprocess  モジュール ) 
call ( )  (Tar Info  の メソッド ) 
CallableProxyType ( weakref  モジュール ) 
can_change_color ( )  ( curses  モジュール ) 
can_fetch ( )  ( RobotFileParser  の メソッド ) 
cancel ( )  ( scheduler  の メソッド ) 
cancel ( )  ( Timer  の メソッド ) 
capitalize ( )  ( string  の メソッド ) 
capitalize ( )  ( string  モジュール ) 
capwords ( )  ( string  モジュール ) 
cat ( )  ( nis  モジュール ) 
catalog  ( cd  モジュール ) 
category ( )  (unicodedata  モジュール ) 
cbreak ( )  ( curses  モジュール ) 
cd  ( 組み込 み  モジュール ) 
CDROM  ( cd  モジュール ) 
ceil ( )  ( math  モジュール ) center ( )  ( string  の メソッド ) 
center ( )  ( string  モジュール ) 
cgi ( standard  モジュール ) 
cgi_directories  ( CGIHTTPRequestHandler  の 属性 ) 
CGIHTTPServer  ( standard  モジュール ) 
CGIHTTPServer  ( 標準  モジュール ) 
cgitb  (standard  モジュール ) 
chain ( )  (itertools  モジュール ) 
channels ( )  ( audio  device  の メソッド ) 
CHAR _ MAX  ( locale  モジュール ) 
CharacterDataHandler ( )  ( xmlparser  の メソッド ) 
characters ( )  ( ContentHandler  の メソッド ) 
CHARSET  ( mimify  モジュール ) 
charset ( )  ( NullTranslations  の メソッド ) 
chdir ( )  (os  モジュール ) 
check ( )  ( IMAP 4_stream  の メソッド ) 
check ( ) (tabnanny  モジュール ) 
check _ forms ( )  ( fl  モジュール ) 
check _output( )  ( OutputChecker  の メソッド ) 
checkcache ( )  ( linecache  モジュール ) 
childerr ( Popen 4  の 属性 ) 
childNodes ( Node  の 属性 ) 
chmod ( )  (os  モジュール ) 
choice ( )  ( random モジュール ) 
choice ( )  ( whrandom モジュール ) 
choose_boundary ( )  ( mimetools  モジュール ) 
chown( )  (os  モジュール ) 
chroot ( )  (os  モジュール ) 
chunk (standard  モジュール ) 
circle ( ) ( turtle  モジュール ) 
Clamped ( decimal  の クラス ) 
classobj ( ) ( new  モジュール ) 
ClassType (types  モジュール ) 
clear ( )  ( CookieJar  の メソッド ) 
clear ( )  ( Event  の メソッド ) 
clear ( )  ( window  の メソッド ) 
clear_flags( )  ( Context  の メソッド ) 
clear_ history ( )  ( readline  モジュール ) 
clear _ memo ( )  ( Pickler  の メソッド ) 
clear_session_cookies ( )  ( CookieJar  の メソッド ) 
clearcache ( )  ( linecache  モジュール ) 
clearok ( )  ( window  の メソッド ) 
client_ address ( Base HTTPRequestHandler  の 属性 ) 
clock ( ) ( time モジュール ) 
clone ( )  ( Generator  の メソッド ) 
clone ( )  (Template  の メソッド ) 
cloneNode ( )  ( Node  の メソッド ) , [ Link ] 
close ( )  ( aifc  の メソッド ) , [ Link ] 
Close ( )  ( ASTVisitor  の メソッド ) 
close ( )  ( AU _read  の メソッド ) 
close ( )  ( AU _write  の メソッド ) 
close ( )  ( audio  device  の メソッド ) , [ Link ] 
close ( )  ( BaseHandler  の メソッド ) 
close ( )  ( BZ 2File  の メソッド ) 
close ( )  ( CD  player  の メソッド ) 
close ( )  ( Chunk  の メソッド ) 
close ( )  ( dispatcher  の メソッド ) 
close ( )  ( FeedParser  の メソッド ) 
close ( )  ( file  の メソッド ) 
close ( )  ( FileHandler  の メソッド )  close ( )  ( fileinput  モジュール ) 
close ( )  ( FTP  の メソッド ) 
close ( )  ( HTMLParser  の メソッド ) 
close ( )  ( HTTPSConnection  の メソッド ) 
close ( )  ( IncrementalParser  の メソッド ) 
close ( )  ( MemoryHandler  の メソッド ) 
close ( )  ( mixer  device  の メソッド ) 
close ( )  ( NTEventLogHandler  の メソッド )  close ( )  (os  モジュール ) 
close ( )  ( Profile  の メソッド ) 
close ( )  ( Queue  の メソッド ) , [ Link ] 
close ( )  ( SGMLParser  の メソッド ) 
close ( )  ( socket  の メソッド ) 
close ( )  ( SocketHandler  の メソッド ) 
close ( )  ( StringIO  の メソッド ) 
close ( )  ( SysLogHandler  の メソッド ) 
close ( )  (TarFile  の メソッド ) 
close ( )  (Tar Info  の メソッド ) 
close ( )  ( Telnet  の メソッド ) 
close ( )  ( Text box  の メソッド ) 
close ( )  ( Wave _ read  の メソッド ) 
close ( )  ( Wave _write  の メソッド ) 
close ( )  ( XMLParser  の メソッド ) 
close ( )  ( ZipFile  の メソッド ) 
close _when_done ( )  ( async _ chat  の メソッド ) 
closed  ( file  の 属性 ) 
CloseKey ( ) (_winreg  モジュール ) 
close log ( )  ( syslog  モジュール ) 
closeport ( )  ( audio  port  の メソッド ) 
clrtobot ( )  ( window  の メソッド ) 
clrtoeol ( )  ( window  の メソッド ) 
cmath  ( 組み込 み  モジュール ) 
cmd  (standard  モジュール ) 
cmd  ( 標準  モジュール ) 
cmdloop ( )  ( Cmd  の メソッド ) 
cmp ( )  ( filecmp  モジュール ) 
cmp ( )  ( 組み込 み 関数 )  cmp_op  ( dis  モジュール ) 
cmpfiles ( )  ( filecmp  モジュール ) 
code  ( ExpatError  の 属性 ) 
code ( )  ( new  モジュール ) 
code  ( standard  モジュール ) 
codecs ( standard  モジュール ) 
coded_value  ( Morsel  の 属性 ) 
codeop  (standard  モジュール ) 
codepoint 2 name  ( htmlentitydefs  モジュール ) 
CODESET  ( locale  モジュール ) 
CodeType (types  モジュール ) 
collapse_rfc 2231 _ value ( )  (email .Utils  モジュール ) 
collect ( )  ( gc  モジュール ) 
collect_ incoming_ data ( )  ( async _ chat  の メソッド ) 
collections  ( standard  モジュール ) 
color ( )  ( fl  モジュール ) 
color ( ) ( turtle  モジュール ) 
color_content ( )  ( curses  モジュール ) 
color_pair( )  ( curses  モジュール ) 
colorsys  ( standard  モジュール ) 
COLUMNS  ( 環境 変数 ) , [ Link ] 
combine ( )  ( datetime の メソッド ) 
combining ( )  (unicodedata  モジュール ) 
command  ( Base HTTPRequestHandler  の 属性 ) 
command s  ( standard  モジュール ) 
comment  ( Cookie  の 属性 ) 
COMMENT  ( tokenize  モジュール ) 
comment  ( Zip Info  の 属性 ) 
comment_url ( Cookie  の 属性 ) 
commenters ( shlex  の 属性 ) 
CommentHandler ( )  ( xmlparser  の メソッド ) 
common  ( dircmp  の 属性 ) 
common_dirs ( dircmp  の 属性 ) 
common_files  ( dircmp  の 属性 ) 
common_funny ( dircmp  の 属性 ) 
common_types ( mimetypes  モジュール ) , [ Link ] 
commonprefix ( )  (os . path  モジュール ) 
communicate ( )  ( Popen  の メソッド ) 
compare ( )  ( Context  の メソッド ) 
compare ( )  ( Decimal  の メソッド ) 
compare ( )  ( Differ  の メソッド ) 
COMPARISON _ FLAGS  ( doctest  モジュール ) 
compile ( )  ( AST  の メソッド ) 
compile ( ) ( compiler  モジュール ) 
compile ( )  ( py_ compile  モジュール ) 
compile ( )  ( re  モジュール ) 
compile ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] , [ Link ]  compile_ command ( ) ( code  モジュール ) 
compile_ command ( ) ( codeop  モジュール ) 
compile_dir ( ) ( compileall  モジュール ) 
compile_ path ( ) ( compileall  モジュール ) 
compileall  ( standard  モジュール ) 
compileast ( )  ( parser  モジュール ) 
compileFile ( ) ( compiler  モジュール ) 
compiler (  モジュール ) 
compiler . ast  (  モジュール ) 
compiler . visitor  (  モジュール ) 
complete( )  ( Completer  の メソッド ) 
completedefault ( )  ( Cmd  の メソッド ) 
complex ( )  (built - in function )  complex ( )  ( 組み込 み 関数 ) 
ComplexType (types  モジュール ) 
compress ( )  ( bz 2  モジュール ) 
compress ( )  ( BZ 2 Compressor  の メソッド ) 
compress ( )  ( Compress  の メソッド ) 
compress ( ) ( jpeg  モジュール ) 
compress ( )  ( zlib  モジュール ) 
compress_size ( Zip Info  の 属性 ) 
compress_type  ( Zip Info  の 属性 ) 
compressobj ( )  ( zlib  モジュール ) 
COMSPEC  ( 環境 変数 ) 
concat ( )  (operator  モジュール ) 
ConfigParser  ( standard  モジュール ) 
confstr ( )  (os  モジュール ) 
confstr_ names (os  モジュール ) 
connect ( )  ( dispatcher  の メソッド ) 
connect ( )  ( FTP  の メソッド ) 
connect ( )  ( HTTPSConnection  の メソッド ) 
connect ( )  ( SMTP  の メソッド ) 
connect ( )  ( socket  の メソッド ) 
connect _ex ( )  ( socket  の メソッド ) 
ConnectRegistry ( ) (_winreg  モジュール ) 
constructor ( ) ( copy _ reg  モジュール ) 
contains ( )  (operator  モジュール ) 
ContentHandler  ( xml . sax . handler  の クラス ) 
control  ( cd  モジュール ) 
controlnames ( curses . ascii モジュール ) 
controls ( )  ( mixer  device  の メソッド ) 
convert ( )  ( Charset  の メソッド ) 
Cookie  ( standard  モジュール ) 
cookiejar  ( UnknownHandler  の 属性 ) 
cookielib  (standard  モジュール ) 
copy ( )  ( Context  の メソッド ) 
copy ( )  ( hmac  の メソッド ) 
copy ( )  ( IMAP 4_stream  の メソッド ) 
copy ( )  ( md 5  の メソッド ) 
copy ( )  ( sha  の メソッド ) 
copy ( )  ( shutil  モジュール ) 
copy  ( standard  モジュール ) 
copy ( )  (Template  の メソッド ) 
copy  ( 標準  モジュール )  copy 2 ( )  ( shutil  モジュール ) 
copy _ reg  ( standard  モジュール ) 
copybinary ( )  ( mimetools  モジュール ) 
copyfile ( )  ( shutil  モジュール ) 
copyfileobj ( )  ( shutil  モジュール ) 
copyliteral ( )  ( mimetools  モジュール ) 
copymessage ( )  ( Folder  の メソッド ) 
copymode ( )  ( shutil  モジュール ) 
copyright  ( sys  モジュール ) 
copystat ( )  ( shutil  モジュール ) 
copytree ( )  ( shutil  モジュール ) 
cos ( )  ( cmath  モジュール ) 
cos ( )  ( math  モジュール ) 
cosh ( )  ( cmath  モジュール ) 
cosh ( )  ( math  モジュール ) 
count ( )  ( array  の メソッド ) 
count ( )  (itertools  モジュール ) 
count ( )  ( string  の メソッド ) 
count ( )  ( string  モジュール ) 
count Of( )  (operator  モジュール ) 
countTestCases ( )  ( TestCase  の メソッド ) 
cPickle  ( 組み込 み  モジュール ) , [ Link ] 
CRC  ( Zip Info  の 属性 ) 
crc 32 ( ) ( binascii モジュール ) 
crc 32 ( )  ( zlib  モジュール ) 
crc_ hqx ( ) ( binascii モジュール ) 
create ( )  ( IMAP 4_stream  の メソッド ) 
create_decimal ( )  ( Context  の メソッド ) 
create_socket ( )  ( dispatcher  の メソッド ) 
create_system  ( Zip Info  の 属性 ) 
create_ version  ( Zip Info  の 属性 ) 
createAttribute ( )  ( Document  の メソッド ) 
createAttributeNS ( )  ( Document  の メソッド ) 
create Comment ( )  ( Document  の メソッド ) 
createElement ( )  ( Document  の メソッド ) 
createElementNS ( )  ( Document  の メソッド ) 
CreateKey ( ) (_winreg  モジュール ) 
createLock ( )  ( Text box  の メソッド ) 
createparser ( )  ( cd  モジュール ) 
createProcessing Instruction ( )  ( Document  の メソッド ) 
createText Node ( )  ( Document  の メソッド ) 
critical ( )  ( logging  モジュール ) 
critical ( )  ( Text box  の メソッド ) 
CRNCYSTR  ( locale  モジュール ) 
crop ( )  ( imageop  モジュール ) 
cross ( )  ( audioop  モジュール ) 
crypt ( )  ( crypt  モジュール ) 
crypt  ( 組み込 み  モジュール ) , [ Link ] 
cStringIO  ( 組み込 み  モジュール ) 
csv  ( standard  モジュール ) 
ctermid ( )  (os  モジュール ) 
ctime( )  ( date  の メソッド ) 
ctime( )  ( datetime の メソッド ) 
ctime( ) ( time モジュール ) 
ctrl ( )  ( curses . ascii モジュール ) 
curdir (os  モジュール ) 
CurrentByteIn dex ( xmlparser  の 属性 ) 
CurrentColumnNumber  ( xmlparser  の 属性 ) 
currentframe( )  ( inspect  モジュール ) 
CurrentLine Number  ( xmlparser  の 属性 ) 
currentThread ( ) ( threading  モジュール ) 
curs_set ( )  ( curses  モジュール ) 
curses ( standard  モジュール ) 
curses . ascii ( standard  モジュール ) 
curses . panel ( standard  モジュール ) 
curses . text pad  (standard  モジュール ) 
curses . wrapper ( standard  モジュール ) 
cursyncup ( )  ( window  の メソッド ) 
cwd( )  ( FTP  の メソッド ) 
cycle ( )  (itertools  モジュール ) 
D _ FMT  ( locale  モジュール ) 
D_T_ FMT  ( locale  モジュール ) 
data ( Binary  の 属性 ) 
data ( Comment  の 属性 ) 
data ( MutableString  の 属性 ) 
data ( Processing Instruction  の 属性 ) 
data ( Text  の 属性 ) 
data ( UserDict  の 属性 ) 
data ( UserList  の 属性 ) 
DATASIZE  ( cd  モジュール ) 
date ( datetime の クラス ) 
date ( )  ( datetime の メソッド ) 
date ( )  ( NNTPDataError  の メソッド ) 
date_time ( Zip Info  の 属性 ) 
date_time_string ( )  ( Base HTTPRequestHandler  の メソッド ) 
datetime ( datetime の クラス ) 
datetime ( 組み込 み  モジュール ) 
day  ( date  の 属性 ) 
day  ( datetime  の 属性 ) 
DAY _ 1  . . .  DAY _ 7  ( locale  モジュール ) 
daylight ( time モジュール ) 
dbhash (standard  モジュール ) 
dbhash  ( 標準  モジュール )  dbm  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] , [ Link ] 
deactivate_form ( )  ( form  の メソッド ) 
debug ( )  ( doctest  モジュール ) , [ Link ] 
debug  ( IMAP 4_stream  の 属性 ) 
debug ( )  ( logging  モジュール ) 
debug  ( shlex  の 属性 ) 
debug ( )  (Template  の メソッド ) 
debug ( )  ( TestCase  の メソッド ) 
debug ( )  ( Text box  の メソッド ) 
debug  ( ZipFile  の 属性 ) 
debug = 0  ( TarFile  の 属性 ) 
DEBUG_ COLLECTABLE  ( gc  モジュール ) 
DEBUG_ INSTANCES  ( gc  モジュール ) 
DEBUG _ LEAK  ( gc  モジュール ) 
DEBUG _ OBJECTS  ( gc  モジュール ) 
DEBUG_ SAVEALL  ( gc  モジュール ) 
debug _src( )  ( doctest  モジュール ) 
DEBUG_ STATS  ( gc  モジュール ) 
DEBUG _ UNCOLLECTABLE  ( gc  モジュール ) 
decimal ( )  (unicodedata  モジュール ) 
DecimalException  ( decimal  の クラス ) 
decode ( )  ( base 64  モジュール ) 
decode ( )  ( Binary  の メソッド ) 
decode ( )  ( mimetools  モジュール ) 
decode ( )  ( quopri  モジュール ) 
decode ( )  ( Server Proxy  の メソッド ) 
decode ( )  ( string  の メソッド ) 
decode ( )  ( Text Wrapper  の メソッド ) 
decode ( )  ( uu  モジュール ) 
decode _header ( )  (email. Header  モジュール ) 
decode _params ( )  (email .Utils  モジュール ) 
decode _rfc 2231 ( )  (email .Utils  モジュール ) 
decodestring ( )  ( base 64  モジュール ) 
decodestring ( )  ( quopri  モジュール ) 
decomposition ( )  (unicodedata  モジュール ) 
decompress ( )  ( bz 2  モジュール ) 
decompress ( )  ( BZ 2 Decompressor  の メソッド ) 
decompress ( )  ( Decompress  の メソッド ) 
decompress ( ) ( jpeg  モジュール ) 
decompress ( )  ( zlib  モジュール ) 
decompressobj ( )  ( zlib  モジュール ) 
dedent ( )  ( text w rap  モジュール ) 
def_prog_mode ( )  ( curses  モジュール ) 
def_shell_ mode ( )  ( curses  モジュール ) 
default ( )  ( ASTVisitor  の メソッド ) 
default ( )  ( Cmd  の メソッド ) 
default_bufsize  ( xml . dom. pulldom モジュール ) 
default _ open ( )  ( BaseHandler  の メソッド ) 
Default Context  ( decimal  の クラス ) 
DefaultHandler ( )  ( xmlparser  の メソッド ) 
DefaultHandlerExpand ( )  ( xmlparser  の メソッド ) 
defaults ( )  ( Safe ConfigParser  の メソッド ) 
defaultTestLoader  ( unittest  モジュール ) 
defaultTest Result ( )  ( TestCase  の メソッド ) 
defects  ( email . Message  モジュール ) 
defpath (os  モジュール ) 
degrees ( )  ( math  モジュール ) 
del_ param ( )  ( Message  の メソッド ) 
delay _ output( )  ( curses  モジュール ) 
delayload  ( Cookie  の 属性 ) 
delch ( )  ( window  の メソッド ) 
dele ( )  ( POP 3 _ SSL  の メソッド ) 
delete ( )  ( FTP  の メソッド ) 
delete ( )  ( IMAP 4_stream  の メソッド ) 
delete_object ( )  ( FORMS object  の メソッド ) 
deleteacl ( )  ( IMAP 4_stream  の メソッド ) 
deletefolder ( )  ( MH  の メソッド ) 
DeleteKey ( ) (_winreg  モジュール ) 
deleteln ( )  ( window  の メソッド ) 
deleteparser ( )  ( CD  parser  の メソッド ) 
DeleteValue ( ) (_winreg  モジュール ) 
delimiter  ( Dialect  の 属性 ) 
delitem ( )  (operator  モジュール ) 
delslice ( )  (operator  モジュール ) 
demo( ) ( turtle  モジュール ) 
deque ( ) ( collections  モジュール ) 
dereference  ( TarFile  の 属性 ) 
derwin( )  ( window  の メソッド ) 
description ( )  ( NNTPDataError  の メソッド ) 
descriptions ( )  ( NNTPDataError  の メソッド ) 
Detach ( )  ( ASTVisitor  の メソッド ) 
DEVICE  ( standard  モジュール ) 
devnull (os  モジュール ) 
dgettext ( )  ( gettext  モジュール ) 
Dialect  ( csv  の クラス ) 
DictionaryType (types  モジュール ) 
diff _files  ( dircmp  の 属性 ) 
Differ ( difflib  の クラス ) 
difflib  (standard  モジュール ) 
digest ( )  ( hmac  の メソッド ) 
digest ( )  ( md 5  の メソッド ) 
digest ( )  ( sha  の メソッド ) 
digest _ size ( md 5  モジュール ) 
digest _ size ( sha  モジュール ) 
digit ( )  (unicodedata  モジュール ) 
digits  ( string  モジュール ) 
dir ( )  ( FTP  の メソッド ) 
dircache ( standard  モジュール ) 
dis  ( standard  モジュール ) 
disable ( )  ( gc  モジュール ) 
disable ( )  ( logging  モジュール ) 
disassemble ( )  ( dis  モジュール ) 
discard  ( Cookie  の 属性 ) 
discard_buffers ( )  ( async _ chat  の メソッド ) 
disco( )  ( dis  モジュール ) 
dispatch ( )  ( ASTVisitor  の メソッド ) 
displayhook ( )  ( sys  モジュール ) 
dist ( )  ( platform  モジュール ) 
distb ( )  ( dis  モジュール ) 
distutils  ( standard  モジュール ) 
dither2grey 2 ( )  ( imageop  モジュール ) 
dither 2mono ( )  ( imageop  モジュール ) 
div ()  (operator  モジュール ) 
divide ( )  ( Context  の メソッド ) 
DivisionByZero  ( decimal  の クラス ) 
divmod ( )  ( Context  の メソッド ) 
dl  ( extension  モジュール ) 
dllhandle  ( sys  モジュール ) 
dngettext ( )  ( gettext  モジュール ) 
do _ command ( )  ( Text box  の メソッド ) 
do _forms ( )  ( fl  モジュール ) 
do _ GET ( )  ( Simple HTTPRequestHandler  の メソッド ) 
do _ HEAD ( )  ( Simple HTTPRequestHandler  の メソッド ) 
do _ POST ( )  ( CGIHTTPRequestHandler  の メソッド ) 
doc_header  ( Cmd  の 属性 ) 
DocFileSuite ( )  ( doctest  モジュール ) 
docmd ( )  ( SMTP  の メソッド ) 
docstring  ( DocTest  の 属性 ) 
doctest  ( standard  モジュール ) 
documentElement  ( Document  の 属性 ) 
domain_initial_dot ( Cookie  の 属性 ) 
domain_return_ok ( )  ( CookiePolicy  の メソッド ) 
domain_specified  ( Cookie  の 属性 ) 
DomainLiberal  ( LWPCookieJar  の 属性 ) 
Domain RFC 2965 Match  ( LWPCookieJar  の 属性 ) 
DomainStrict  ( LWPCookieJar  の 属性 ) 
DomainStrictNoDots ( LWPCookieJar  の 属性 ) 
DomainStrictNonDomain  ( LWPCookieJar  の 属性 ) 
done ( )  ( Unpacker  の メソッド ) 
DONT _ ACCEPT _ BLANK LINE  ( doctest  モジュール ) 
DONT _ ACCEPT _ TRUE _ FOR _ 1  ( doctest  モジュール ) 
doRollover ( )  ( RotatingFileHandler  の メソッド ) 
doRollover ( )  ( TimedRotatingFileHandler  の メソッド ) 
DOTALL  ( re  モジュール ) 
doublequote ( Dialect  の 属性 ) 
doupdate ( )  ( curses  モジュール ) 
down( ) ( turtle  モジュール ) 
drain ( )  ( audio  device  の メソッド ) 
dropwhile ( )  (itertools  モジュール ) 
dst ( )  ( datetime の メソッド ) 
dst ( ) ( time の メソッド ) , [ Link ] 
DTDHandler  ( xml . sax . handler  の クラス ) 
dumbdbm  ( standard  モジュール ) 
dumbdbm  ( 標準  モジュール ) 
dummy _ thread  (standard  モジュール ) 
dummy _ threading  ( standard  モジュール ) 
dump ( )  (marshal  モジュール ) 
dump ( ) ( pickle  モジュール ) 
dump ( )  ( Pickler  の メソッド ) 
dump_ address_pair( )  ( rfc 822  モジュール ) 
dump_stats ( )  ( Stats  の メソッド ) 
dumps ( )  (marshal  モジュール ) 
dumps ( ) ( pickle  モジュール ) 
dumps ( )  ( xmlrpclib  モジュール ) 
dup ( )  (os  モジュール ) 
dup 2 ( )  (os  モジュール ) 
e  ( cmath  モジュール ) 
e  ( math  モジュール ) 
E 2 BIG  ( errno  モジュール ) 
EACCES  ( errno  モジュール ) 
EADDRINUSE  ( errno  モジュール ) 
EADDRNOTAVAIL  ( errno  モジュール ) 
EADV  ( errno  モジュール ) 
EAFNOSUPPORT  ( errno  モジュール ) 
EAGAIN  ( errno  モジュール ) 
EAI_*( socket  モジュール ) 
EALREAD Y ( errno  モジュール ) 
east _asian_width ( )  (unicodedata  モジュール ) 
EBADE  ( errno  モジュール ) 
EBADF  ( errno  モジュール ) 
EBADFD  ( errno  モジュール ) 
EBAD MSG  ( errno  モジュール ) 
EBADR  ( errno  モジュール ) 
EBADRQC  ( errno  モジュール ) 
EBADSLT  ( errno  モジュール ) 
EBFONT  ( errno  モジュール ) 
EBUSY  ( errno  モジュール ) 
ECHILD  ( errno  モジュール ) 
echo ( )  ( curses  モジュール ) 
echochar ( )  ( window  の メソッド ) 
ECHRNG  ( errno  モジュール ) 
ECOMM  ( errno  モジュール ) 
ECONNABORTED  ( errno  モジュール ) 
ECONNRE FUSED  ( errno  モジュール ) 
ECONNRESET  ( errno  モジュール ) 
EDEADLK  ( errno  モジュール ) 
EDEADLOCK  ( errno  モジュール ) 
EDESTA DDRREQ  ( errno  モジュール ) 
edit ( )  ( Text box  の メソッド ) 
EDOM ( errno  モジュール ) 
EDOTDOT  ( errno  モジュール ) 
EDQUOT  ( errno  モジュール ) 
EEXIST  ( errno  モジュール ) 
EFAULT  ( errno  モジュール ) 
EFBIG  ( errno  モジュール ) 
ehlo( )  ( SMTP  の メソッド ) 
EHOSTDOWN  ( errno  モジュール ) 
EHOSTUNREACH  ( errno  モジュール ) 
EIDRM  ( errno  モジュール ) 
EILSEQ  ( errno  モジュール ) 
EINPROGRESS  ( errno  モジュール ) 
EINTR  ( errno  モジュール ) 
EINVAL  ( errno  モジュール ) 
EIO  ( errno  モジュール ) 
EISCONN  ( errno  モジュール ) 
EISDIR  ( errno  モジュール ) 
EISNAM  ( errno  モジュール ) 
eject ( )  ( CD  player  の メソッド ) 
EL2 HLT  ( errno  モジュール ) 
EL2 NSYNC  ( errno  モジュール ) 
EL 3 HLT  ( errno  モジュール ) 
EL3 RST  ( errno  モジュール ) 
ElementDeclHandler ( )  ( xmlparser  の メソッド ) 
elements ( XMLParser  の 属性 ) 
ELIBACC  ( errno  モジュール ) 
ELIBBAD  ( errno  モジュール ) 
ELIBEXEC  ( errno  モジュール ) 
ELIBMAX  ( errno  モジュール ) 
ELIBSCN  ( errno  モジュール ) 
ELLIPSIS  ( doctest  モジュール ) 
EllipsisType (types  モジュール ) 
ELNRNG  ( errno  モジュール ) 
ELOOP  ( errno  モジュール ) 
email  ( standard  モジュール ) 
email . Charset  ( standard  モジュール ) 
email . Encoders ( standard  モジュール ) 
email . Errors ( standard  モジュール ) 
email . Generator  ( standard  モジュール ) 
email. Header  ( standard  モジュール ) 
email . Iterators ( standard  モジュール ) 
email . Message  ( standard  モジュール ) 
email . Parser  ( standard  モジュール ) 
email .Utils  ( standard  モジュール ) 
EMFILE  ( errno  モジュール ) 
emit ( )  ( BufferingHandler  の メソッド ) 
emit ( )  ( DatagramHandler  の メソッド ) 
emit ( )  ( FileHandler  の メソッド ) 
emit ( )  ( HTTPHandler  の メソッド ) 
emit ( )  ( NTEventLogHandler  の メソッド ) 
emit ( )  ( RotatingFileHandler  の メソッド ) 
emit ( )  ( SMTPHandler  の メソッド ) 
emit ( )  ( SocketHandler  の メソッド ) 
emit ( )  ( StreamHandler  の メソッド ) 
emit ( )  ( SysLogHandler  の メソッド ) 
emit ( )  ( Text box  の メソッド ) 
emit ( )  ( TimedRotatingFileHandler  の メソッド ) 
EMLINK  ( errno  モジュール ) 
empty( )  ( Queue  の メソッド ) 
empty( )  ( scheduler  の メソッド ) 
EMPTY _ NAMES PACE  ( xml . dom モジュール ) 
emptyline ( )  ( Cmd  の メソッド ) 
EMS GSIZE  ( errno  モジュール ) 
EMULTIHOP  ( errno  モジュール ) 
enable ( )  ( cgitb  モジュール ) 
enable ( )  ( gc  モジュール ) 
ENAMETOOLONG  ( errno  モジュール ) 
ENAVAIL  ( errno  モジュール ) 
enclose ( )  ( window  の メソッド ) 
encode ( )  ( base 64  モジュール )  encode ( )  ( Binary  の メソッド ) 
encode ( )  ( Header  の メソッド ) 
encode ( )  ( mimetools  モジュール ) 
encode ( )  ( quopri  モジュール ) 
encode ( )  ( Server Proxy  の メソッド ) , [ Link ] 
encode ( )  ( string  の メソッド ) 
encode ( )  ( Text Wrapper  の メソッド ) 
encode ( )  ( uu  モジュール ) 
encode _7or 8 bit ( )  (email . Encoders  モジュール )  encode _base 64 ( )  (email . Encoders  モジュール ) 
encode _noop ( )  (email . Encoders  モジュール ) 
encode _quopri( )  (email . Encoders  モジュール ) 
encode _rfc 2231 ( )  (email .Utils  モジュール ) 
encoded_header_len ( )  ( Charset  の メソッド ) 
EncodedFile ( ) ( codecs  モジュール ) 
encodePriority ( )  ( SysLogHandler  の メソッド ) 
encodestring ( )  ( base 64  モジュール ) 
encodestring ( )  ( quopri  モジュール ) 
encoding  ( file  の 属性 ) 
encodings . idna  ( standard  モジュール ) 
encodings_ map  ( mimetypes  モジュール ) , [ Link ] 
end ( )  (Template  の メソッド ) 
end_group ( )  ( form  の メソッド ) 
end _headers ( )  ( Base HTTPRequestHandler  の メソッド ) 
end_marker ( )  ( MultiFile  の メソッド ) 
end_ paragraph ( )  ( formatter  の メソッド ) 
EndCdata SectionHandler ( )  ( xmlparser  の メソッド ) 
EndDoctypeDeclHandler ( )  ( xmlparser  の メソッド ) 
endDocument ( )  ( ContentHandler  の メソッド ) 
endElement ( )  ( ContentHandler  の メソッド ) 
EndElementHandler ( )  ( xmlparser  の メソッド ) 
endElementNS ( )  ( ContentHandler  の メソッド ) 
endheaders ( )  ( HTTPSConnection  の メソッド ) 
EndNamespace DeclHandler ( )  ( xmlparser  の メソッド ) 
endpick ( )  ( gl  モジュール ) 
endpos ( MatchObject  の 属性 ) 
endPrefix Mapping ( )  ( ContentHandler  の メソッド ) 
endselect ( )  ( gl  モジュール ) 
endswith ( )  ( string  の メソッド ) 
endwin( )  ( curses  モジュール ) 
ENETDOWN  ( errno  モジュール ) 
ENETRESET  ( errno  モジュール ) 
ENETUNREACH  ( errno  モジュール ) 
ENFILE  ( errno  モジュール ) 
ENOANO  ( errno  モジュール ) 
ENOBUFS  ( errno  モジュール ) 
ENOCSI  ( errno  モジュール ) 
ENODATA  ( errno  モジュール ) 
ENODEV  ( errno  モジュール ) 
ENOENT  ( errno  モジュール ) 
ENOEXEC  ( errno  モジュール ) 
ENOL CK  ( errno  モジュール ) 
ENOLINK  ( errno  モジュール ) 
ENOMEM  ( errno  モジュール ) 
ENOMSG  ( errno  モジュール ) 
ENONET  ( errno  モジュール ) 
ENOPKG  ( errno  モジュール ) 
ENOPROTOOPT  ( errno  モジュール ) 
ENOSPC  ( errno  モジュール ) 
ENOSR  ( errno  モジュール ) 
ENOSTR  ( errno  モジュール ) 
ENOSYS  ( errno  モジュール ) 
ENOTBLK  ( errno  モジュール ) 
ENOTCONN  ( errno  モジュール ) 
ENOT DIR  ( errno  モジュール ) 
ENOT EMPTY  ( errno  モジュール ) 
ENOTNAM  ( errno  モジュール ) 
ENOTSOCK  ( errno  モジュール ) 
ENOTTY  ( errno  モジュール ) 
ENOTUNIQ  ( errno  モジュール ) 
enter ( )  ( scheduler  の メソッド ) 
enterabs ( )  ( scheduler  の メソッド ) 
entities  ( DocumentType  の 属性 ) 
Entity DeclHandler ( )  ( xmlparser  の メソッド ) 
entitydefs (htmlentitydefs  モジュール ) 
entitydefs ( XMLParser  の 属性 ) 
EntityResolver  ( xml . sax . handler  の クラス ) 
eof  ( shlex  の 属性 ) 
EOP NOT SUPP  ( errno  モジュール ) 
EOVERFLOW  ( errno  モジュール ) 
EPERM  ( errno  モジュール ) 
EPF NOSUPPORT  ( errno  モジュール ) 
epilogue  ( email . Message  モジュール ) 
EPIPE  ( errno  モジュール ) 
EPROTO  ( errno  モジュール ) 
EPROTONOSUPPORT  ( errno  モジュール ) 
EPROTOTYPE  ( errno  モジュール ) 
eq ( )  (operator  モジュール ) 
ERA  ( locale  モジュール ) 
ERA _D_ FMT  ( locale  モジュール ) 
ERA _D_T_ FMT  ( locale  モジュール ) 
ERA _ YEAR  ( locale  モジュール ) 
ERANGE  ( errno  モジュール ) 
erase ( )  ( window  の メソッド ) 
erasechar ( )  ( curses  モジュール ) 
EREMCHG  ( errno  モジュール ) 
EREMOTE  ( errno  モジュール ) 
EREMOTEIO  ( errno  モジュール ) 
ERESTART  ( errno  モジュール ) 
EROFS  ( errno  モジュール ) 
ERR  ( curses  モジュール ) 
errcode  ( Server Proxy  の 属性 ) 
errmsg  ( Server Proxy  の 属性 ) 
errno ( standard  モジュール ) 
errno ( 組み込 み  モジュール ) , [ Link ] 
error , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ]  ERROR  ( cd  モジュール ) 
error ( )  ( ErrorHandler  の メソッド ) 
error ( )  ( logging  モジュール ) 
error ( )  ( MH  の メソッド ) 
error ( )  ( OpenerDirector  の メソッド ) 
error ( )  ( Text box  の メソッド ) 
error _ leader ( )  ( shlex  の メソッド ) 
error _message_ format  ( Base HTTPRequestHandler  の 属性 ) 
ErrorByteIn dex ( xmlparser  の 属性 ) 
errorcode  ( errno  モジュール ) 
Error Code  ( xmlparser  の 属性 ) 
ErrorColumnNumber  ( xmlparser  の 属性 ) 
ErrorHandler  ( xml . sax . handler  の クラス ) 
error level = 0  ( TarFile  の 属性 ) 
ErrorLine Number  ( xmlparser  の 属性 ) 
errors ( Test Result  の 属性 ) 
ErrorString ( )  ( xml . parsers . expat  モジュール ) 
escape ( )  ( cgi モジュール ) 
escape ( )  ( re  モジュール ) 
escape  ( shlex  の 属性 ) 
escape ( )  ( xml . sax . saxutils  モジュール ) 
escapechar  ( Dialect  の 属性 ) 
escapedquotes ( shlex  の 属性 ) 
ESHUTDOWN  ( errno  モジュール ) 
ESOCKTNOSUPPORT  ( errno  モジュール ) 
ESPIPE  ( errno  モジュール ) 
ESRCH  ( errno  モジュール ) 
ESRMNT  ( errno  モジュール ) 
ESTALE  ( errno  モジュール ) 
ESTR PIPE  ( errno  モジュール ) 
ETIME  ( errno  モジュール ) 
ETIME DOUT  ( errno  モジュール ) 
Etiny ( )  ( Context  の メソッド ) 
ETOOMANYREFS  ( errno  モジュール ) 
Etop ( )  ( Context  の メソッド ) 
ETXTBSY  ( errno  モジュール ) 
EUCLEAN  ( errno  モジュール ) 
EUNATCH  ( errno  モジュール ) 
EUSERS  ( errno  モジュール ) 
eval ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
Event ( ) ( threading  モジュール ) 
EWOULDB LOCK  ( errno  モジュール ) 
EX _ CANTCREAT  (os  モジュール ) 
EX _ CONFIG  (os  モジュール ) 
EX _ DATAERR  (os  モジュール ) 
EX _ IOERR  (os  モジュール ) 
EX _ NOHOST  (os  モジュール ) 
EX _ NOINPUT  (os  モジュール ) 
EX _ NOPERM  (os  モジュール ) 
EX _ NOTFOUND  (os  モジュール ) 
EX _ NOUSER  (os  モジュール ) 
EX _ OK  (os  モジュール ) 
EX _ OSERR  (os  モジュール ) 
EX _ OSFILE  (os  モジュール ) 
EX _ PROTOCOL  (os  モジュール ) 
EX _ SOFT WARE  (os  モジュール ) 
EX _ TEMPFAIL  (os  モジュール ) 
EX _ UNAV AILABLE  (os  モジュール ) 
EX _ USAGE  (os  モジュール ) 
example  ( DocTestFailure  の 属性 ) 
example  ( UnexpectedException  の 属性 ) 
examples  ( DocTest  の 属性 ) 
exc _ clear ( )  ( sys  モジュール ) 
exc _ info ( )  ( sys  モジュール ) 
exc _ info  ( UnexpectedException  の 属性 ) 
exc _msg  ( Example  の 属性 ) 
exc _traceback  ( sys  モジュール ) 
exc_type  ( sys  モジュール ) 
exc _ value  ( sys  モジュール ) 
excepthook ( )  ( in  module sys )  excepthook ( )  ( sys  モジュール ) 
exception ( )  ( logging  モジュール ) 
exception ( )  ( Text box  の メソッド ) 
exceptions  ( standard  モジュール ) 
EXDEV  ( errno  モジュール ) 
exec _prefix  ( sys  モジュール ) 
execfile ( )  (built - in function )  execfile ( )  ( 組み込 み 関数 ) 
execl ( )  (os  モジュール ) 
execle ( )  (os  モジュール ) 
execlp( )  (os  モジュール ) 
execlpe ( )  (os  モジュール ) 
executable  ( sys  モジュール ) 
execv ()  (os  モジュール ) 
execve ( )  (os  モジュール ) 
execvp( )  (os  モジュール ) 
execvpe ( )  (os  モジュール ) 
EXFULL  ( errno  モジュール ) 
exists ( )  (os . path  モジュール ) 
exit ( )  ( sys  モジュール ) 
exit ( ) ( thread  モジュール ) 
exitfunc  ( sys  モジュール ) 
exp ( )  ( cmath  モジュール ) 
exp ( )  ( math  モジュール ) 
expand ( )  ( MatchObject  の メソッド ) 
expand_tabs ( Text Wrapper  の 属性 ) 
expandNode ( )  ( DOMEventStream  の メソッド ) 
expandtabs ( )  ( string  の メソッド ) 
expandtabs ( )  ( string  モジュール ) 
expanduser ( )  (os . path  モジュール ) 
expandvars ( )  (os . path  モジュール ) 
expect ( )  ( Telnet  の メソッド ) 
expires  ( Cookie  の 属性 ) 
expovariate ( )  ( random モジュール ) 
expr ( )  ( parser  モジュール ) 
expunge ( )  ( IMAP 4_stream  の メソッド ) 
extend ( )  ( array  の メソッド ) 
extend ( )  ( SystemRandom  の メソッド ) 
extend_ path ( )  ( pkgutil  モジュール ) 
ExtendedContext  ( decimal  の クラス ) 
extendleft ( )  ( SystemRandom  の メソッド ) 
extensions _ map  ( Simple HTTPRequestHandler  の 属性 ) 
external _attr  ( Zip Info  の 属性 ) 
External EntityParserCreate ( )  ( xmlparser  の メソッド ) 
External EntityRefHandler ( )  ( xmlparser  の メソッド ) 
extra  ( Zip Info  の 属性 ) 
extract ( )  (TarFile  の メソッド ) 
extract_cookies ( )  ( CookieJar  の メソッド ) 
extract_stack ( )  ( traceback  モジュール ) 
extract_tb ( )  ( traceback  モジュール ) 
extract _ version  ( Zip Info  の 属性 ) 
extractfile ( )  (TarFile  の メソッド ) 
extsep (os  モジュール ) 
F_BAVAIL  ( statvfs  モジュール ) 
F _ BFREE  ( statvfs  モジュール ) 
F_ BLOCKS  ( statvfs  モジュール ) 
F_ BSIZE  ( statvfs  モジュール ) 
F_ FAVAIL  ( statvfs  モジュール ) 
F _ FFREE  ( statvfs  モジュール ) 
F _ FILES  ( statvfs  モジュール ) 
F_ FLAG  ( statvfs  モジュール ) 
F _ FRSIZE  ( statvfs  モジュール ) 
F_ NAMEMAX  ( statvfs  モジュール ) 
F _ OK  (os  モジュール ) 
fabs ( )  ( math  モジュール ) 
fail ( )  ( TestCase  の メソッド ) 
failIf( )  ( TestCase  の メソッド ) 
failIfAlmostEqual ( )  ( Text TestRunner  の メソッド ) 
failIfEqual ( )  ( Text TestRunner  の メソッド ) 
failUnless ( )  ( Text TestRunner  の メソッド ) 
failUnlessAlmostEqual ( )  ( Text TestRunner  の メソッド ) 
failUnlessEqual ( )  ( Text TestRunner  の メソッド ) 
failUnlessRaises ( )  ( Text TestRunner  の メソッド ) 
failureException  ( TestCase  の 属性 ) 
failures  ( Test Result  の 属性 ) 
fatalError ( )  ( ErrorHandler  の メソッド ) 
fault Code  ( Server Proxy  の 属性 ) 
faultString  ( Server Proxy  の 属性 ) 
fcntl ( )  ( fcntl  モジュール ) 
fcntl  ( 組み込 み  モジュール ) , [ Link ] 
fdatasync ( )  (os  モジュール ) 
fdopen ( )  (os  モジュール ) 
feature_external _ ges  ( xml . sax . handler  モジュール ) 
feature_external _pes  ( xml . sax . handler  モジュール ) 
feature_ namespace _ prefixes  ( xml . sax . handler  モジュール ) 
feature_ namespaces  ( xml . sax . handler  モジュール ) 
feature_string _ interning  ( xml . sax . handler  モジュール ) 
feature_ validation  ( xml . sax . handler  モジュール ) 
feed ( )  ( FeedParser  の メソッド ) 
feed ( )  ( HTMLParser  の メソッド ) 
feed ( )  ( IncrementalParser  の メソッド ) 
feed ( )  ( SGMLParser  の メソッド ) 
feed ( )  ( XMLParser  の メソッド ) 
file  ( class descriptor  の 属性 ) 
file  ( function  descriptor  の 属性 ) 
file ( )  ( posixfile  method ) file ( )  ( 組み込 み 関数 ) 
file _offset  ( Zip Info  の 属性 ) 
file_open ( )  ( FileHandler  の メソッド ) 
file_ size ( Zip Info  の 属性 ) 
filecmp  (standard  モジュール ) 
fileinput  ( standard  モジュール ) 
filelineno( )  ( fileinput  モジュール ) 
filename  ( Cookie  の 属性 ) 
filename  ( DocTest  の 属性 ) 
filename ( )  ( fileinput  モジュール ) 
filename  ( Zip Info  の 属性 ) 
filename _only (tabnanny  モジュール ) 
fileno( )  ( audio  device  の メソッド ) , [ Link ] 
fileno( )  ( file  の メソッド ) 
fileno( )  ( mixer  device  の メソッド ) 
fileno( )  ( Profile  の メソッド ) 
fileno( )  ( socket  の メソッド ) 
fileno( )  ( Telnet  の メソッド ) 
fileopen ( )  ( posixfile  モジュール ) 
FileType (types  モジュール ) 
fill ( )  ( text w rap  モジュール ) 
filter ( )  ( curses  モジュール ) 
filter ( )  ( Filter  の メソッド ) 
filter ( )  ( fnmatch  モジュール ) 
filter ( )  ( Text box  の メソッド ) , [ Link ] 
filterwarnings ( )  ( warnings  モジュール ) 
find ( )  ( DocTestFin der  の メソッド ) 
find ( )  ( gettext  モジュール ) 
find ( )  ( Queue  の メソッド ) 
find ( )  ( string  の メソッド ) 
find ( )  ( string  モジュール ) 
find _first ( )  ( form  の メソッド ) 
find_ last ( )  ( form  の メソッド ) 
find_ longest _match ( )  ( Sequence Matcher  の メソッド ) 
find _ module ( )  (imp  モジュール ) 
find _ prefix _ at_end ( )  ( asynchat  モジュール ) 
find _user_ password ( )  ( HTTPPasswordMgr  の メソッド ) 
findall ( )  ( re  モジュール ) 
findall ( )  ( RegexObject  の メソッド ) 
findCaller ( )  ( Text box  の メソッド ) 
findfactor ( )  ( audioop  モジュール ) 
findfile ( )  ( test . test _ support  モジュール ) 
findfit ( )  ( audioop  モジュール ) 
findfont ( )  ( fm  モジュール ) 
finditer ( )  ( re  モジュール ) 
finditer ( )  ( RegexObject  の メソッド ) 
findmatch ( )  ( mailcap  モジュール ) 
findmax ( )  ( audioop  モジュール ) 
first ( )  ( dbhash  の メソッド ) 
first ( )  ( fifo  の メソッド ) 
first ( )  ( Queue  の メソッド ) 
firstChild  ( Node  の 属性 ) 
firstkey( )  ( gdbm  モジュール ) 
firstweekday ( )  ( calendar  モジュール ) 
fix ( )  ( fpformat  モジュール ) 
fix_ sentence_endings  ( Text Wrapper  の 属性 ) 
FL  ( standard  モジュール ) 
fl  ( 組み込 み  モジュール ) 
flag_ bits  ( Zip Info  の 属性 ) 
flags ( RegexObject  の 属性 ) 
flash ( )  ( curses  モジュール ) 
flatten ( )  ( Generator  の メソッド ) 
float ( )  (built - in function )  float ( )  ( 組み込 み 関数 ) , [ Link ] 
FloatType (types  モジュール ) 
flock ( )  ( fcntl  モジュール ) 
floor ( )  ( in  module math )  floor ( )  ( math  モジュール ) 
floordiv ()  (operator  モジュール ) 
flp (standard  モジュール ) 
flush ( )  ( audio  device  の メソッド ) 
flush ( )  ( BufferingHandler  の メソッド ) 
flush ( )  ( BZ 2 Compressor  の メソッド ) 
flush ( )  ( Compress  の メソッド ) 
flush ( )  ( Decompress  の メソッド ) 
flush ( )  ( file  の メソッド ) 
flush ( )  ( MemoryHandler  の メソッド ) 
flush ( )  ( Queue  の メソッド ) 
flush ( )  ( StreamHandler  の メソッド ) 
flush ( )  ( Text box  の メソッド ) 
flush ( )  ( writer  の メソッド ) 
flush_softspace ( )  ( formatter  の メソッド ) 
flushheaders ( )  ( MimeWriter  の メソッド ) 
flushinp ( )  ( curses  モジュール ) 
FlushKey ( ) (_winreg  モジュール ) 
fm  ( 組み込 み  モジュール ) 
fmod ( )  ( math  モジュール ) 
fnmatch ( )  ( fnmatch  モジュール ) 
fnmatch  (standard  モジュール ) 
fnmatchcase ( )  ( fnmatch  モジュール ) 
fontpath ( )  ( fm  モジュール ) 
forget ( )  (statcache  モジュール ) 
forget ( )  ( test . test _ support  モジュール ) 
forget_dir ( )  (statcache  モジュール ) 
forget _except_prefix ( )  (statcache  モジュール ) 
forget_prefix ( )  (statcache  モジュール ) 
fork ( )  (os  モジュール ) 
fork ( )  (pty  モジュール ) 
forkpty( )  (os  モジュール ) 
format ( )  ( Formatter  の メソッド ) 
format ( )  ( locale  モジュール ) 
format ( )  ( PrettyPrinter  の メソッド ) 
format ( )  ( Text box  の メソッド ) 
format _exc ( )  ( traceback  モジュール ) 
format _exception ( )  ( traceback  モジュール ) 
format _exception_only ( )  ( traceback  モジュール ) 
format_ list ( )  ( traceback  モジュール ) 
format_stack ( )  ( traceback  モジュール ) 
format_tb ( )  ( traceback  モジュール ) 
formataddr( )  (email .Utils  モジュール ) 
formatargspec ( )  ( inspect  モジュール ) 
formatargvalues ( )  ( inspect  モジュール ) 
formatdate ( )  (email .Utils  モジュール ) 
formatException ( )  ( Formatter  の メソッド ) 
formatter  ( HTMLParser  の 属性 ) 
formatter  ( standard  モジュール )  formatter  ( 標準  モジュール ) 
formatTime ( )  ( Formatter  の メソッド ) 
formatwarning ( )  ( warnings  モジュール )  FORMS  Library 
forward ( ) ( turtle  モジュール ) 
found_terminator ( )  ( async _ chat  の メソッド ) 
fp ( AddressList  の 属性 ) 
fpathconf ( )  (os  モジュール ) 
fpectl ( extension  モジュール ) 
fpformat  ( standard  モジュール ) 
frame ( ScrolledText  の 属性 )  frameobject 
FrameType (types  モジュール ) 
freeze_ form ( )  ( form  の メソッド ) 
freeze_object ( )  ( FORMS object  の メソッド ) 
frexp ( )  ( math  モジュール ) 
from _splittable ( )  ( Charset  の メソッド ) 
frombuf ( )  (Tar Info  の メソッド ) 
fromchild  ( Popen 4  の 属性 ) 
fromfd ( )  ( socket  モジュール ) 
fromfile ( )  ( array  の メソッド ) 
fromlist ( )  ( array  の メソッド ) 
fromordinal ( )  ( date  の メソッド ) 
fromordinal ( )  ( datetime の メソッド ) 
fromstring ( )  ( array  の メソッド ) 
fromtimestamp ( )  ( date  の メソッド ) 
fromtimestamp ( )  ( datetime の メソッド ) 
fromunicode ( )  ( array  の メソッド ) 
fromutc ( ) ( time の メソッド ) 
fstat ( )  (os  モジュール ) 
fstatvfs ( )  (os  モジュール ) 
fsync ( )  (os  モジュール ) 
ftp_open ( )  ( FTPHandler  の メソッド ) 
ftp_proxy  ( 環境 変数 ) 
ftplib  (standard  モジュール ) 
ftruncate ( )  (os  モジュール ) 
full ( )  ( Queue  の メソッド ) 
function ( )  ( new  モジュール ) 
FunctionType (types  モジュール ) 
funny_ files  ( dircmp  の 属性 ) 
gammavariate ( )  ( random モジュール ) 
garbage ( gc  モジュール ) 
gather ( )  ( Text box  の メソッド ) 
gauss ( )  ( random モジュール ) 
gc ( extension  モジュール ) 
gdbm  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] 
ge ( )  (operator  モジュール ) 
generate_tokens ( ) ( tokenize  モジュール ) 
GeneratorType (types  モジュール ) 
get ( )  ( AddressList  の メソッド ) 
get ( )  ( Message  の メソッド ) 
get ( )  ( mixer  device  の メソッド ) 
get ( )  ( Queue  の メソッド ) 
get ( )  ( Safe ConfigParser  の メソッド ) , [ Link ] 
get ( )  ( webbrowser  モジュール )  get_all ( )  ( Message  の メソッド ) 
get_begidx ( )  ( readline  モジュール ) 
get_body _encoding ( )  ( Charset  の メソッド ) 
get_boundary ( )  ( Message  の メソッド ) 
get_buffer ( )  ( Packer  の メソッド ) 
get_buffer ( )  ( Unpacker  の メソッド ) 
get_charset ( )  ( Message  の メソッド ) 
get_charsets( )  ( Message  の メソッド ) 
get_close _matches ( )  ( difflib  モジュール ) 
get_ completer ( )  ( readline  モジュール ) 
get_ completer_ delims( )  ( readline  モジュール ) 
get_content_ charset ( )  ( Message  の メソッド ) 
get_content_maintype ( )  ( Message  の メソッド ) 
get_content_ subtype ( )  ( Message  の メソッド ) 
get_content_type ( )  ( Message  の メソッド ) 
get_current_ history _ length ( )  ( readline  モジュール ) 
get_data ( )  ( Request  の メソッド ) 
get_debug ( )  ( gc  モジュール ) 
get_default_type ( )  ( Message  の メソッド ) 
get_dialect ( )  ( csv  モジュール ) 
get_directory ( )  ( fl  モジュール ) 
get_doctest ( )  ( DocTest Parser  の メソッド ) 
get_endidx ( )  ( readline  モジュール ) 
get _examples ( )  ( DocTest Parser  の メソッド ) 
get_filename ( )  ( fl  モジュール ) 
get_filename ( )  ( Message  の メソッド ) 
get_full _url( )  ( Request  の メソッド ) 
get_grouped_opcodes( )  ( Sequence Matcher  の メソッド ) 
get_history _ item ( )  ( readline  モジュール ) 
get_history _ length ( )  ( readline  モジュール ) 
get_host ( )  ( Request  の メソッド ) 
get_ident ( ) ( thread  モジュール ) 
get_line_buffer ( )  ( readline  モジュール ) 
get_magic ( )  (imp  モジュール ) 
get_main_type ( )  ( Message  の メソッド ) 
get_matching_blocks ( )  ( Sequence Matcher  の メソッド ) 
get_method ( )  ( Request  の メソッド ) 
get_mouse ( )  ( fl  モジュール ) 
get_nonstandard_attr ( )  ( Cookie  の メソッド ) 
get_nowait( )  ( Queue  の メソッド ) 
get_objects ( )  ( gc  モジュール ) 
get_opcodes( )  ( Sequence Matcher  の メソッド ) 
get_origin _req _host ( )  ( Request  の メソッド ) 
get _osfhandle ( )  ( msvcrt  モジュール ) 
get _output_ charset ( )  ( Charset  の メソッド ) 
get_param ( )  ( Message  の メソッド ) 
get_params ( )  ( Message  の メソッド ) 
get_pattern ( )  ( fl  モジュール ) 
get_payload ( )  ( Message  の メソッド ) 
get_position ( )  ( Unpacker  の メソッド ) 
get_recsrc( )  ( mixer  device  の メソッド ) 
get_referents ( )  ( gc  モジュール ) 
get_referrers ( )  ( gc  モジュール ) 
get_rgbmode ( )  ( fl  モジュール ) 
get_selector ( )  ( Request  の メソッド ) 
get_socket ( )  ( Telnet  の メソッド ) 
get_starttag_ text ( )  ( HTMLParser  の メソッド ) 
get_starttag_ text ( )  ( SGMLParser  の メソッド ) 
get_subtype ( )  ( Message  の メソッド ) 
get_suffixes ( )  (imp  モジュール ) 
get_terminator ( )  ( async _ chat  の メソッド ) 
get_threshold ( )  ( gc  モジュール ) 
get_token ( )  ( shlex  の メソッド ) 
get_type ( )  ( Message  の メソッド ) 
get_type ( )  ( Request  の メソッド ) 
get_unixfrom ( )  ( Message  の メソッド ) 
getacl ( )  ( IMAP 4_stream  の メソッド ) 
getaddr( )  ( AddressList  の メソッド ) 
getaddresses ( )  (email .Utils  モジュール ) 
getaddrinfo ( )  ( socket  モジュール ) 
getaddrlist ( )  ( AddressList  の メソッド ) 
getallmatchingheaders ( )  ( AddressList  の メソッド ) 
getargspec ( )  ( inspect  モジュール ) 
getargvalues ( )  ( inspect  モジュール ) 
getatime( )  (os . path  モジュール ) 
getAttribute ( )  ( Element  の メソッド ) 
getAttributeNode ( )  ( Element  の メソッド ) 
getAttributeNodeNS ( )  ( Element  の メソッド ) 
getAttributeNS ( )  ( Element  の メソッド ) 
GetBase ( )  ( xmlparser  の メソッド ) 
getbegyx ( )  ( window  の メソッド ) 
getboolean ( )  ( Safe ConfigParser  の メソッド ) 
getByteStream ( )  ( InputSource  の メソッド ) 
getcaps ( )  ( mailcap  モジュール ) 
getch ( )  ( msvcrt  モジュール ) 
getch ( )  ( window  の メソッド ) 
getchannels ( )  ( audio  configuration  の メソッド ) 
getCharacterStream ( )  ( InputSource  の メソッド ) 
getche ( )  ( msvcrt  モジュール ) 
getcheckinterval ( )  ( sys  モジュール ) 
getChildNodes( )  ( Node  の メソッド ) 
getChildren ( )  ( Node  の メソッド ) 
getclasstree ( )  ( inspect  モジュール ) 
getColumnNumber ( )  ( Locator  の メソッド ) 
getcomments ( )  ( inspect  モジュール ) 
getcompname ( )  ( aifc  の メソッド ) 
getcompname ( )  ( AU _read  の メソッド ) 
getcompname ( )  ( Wave _ read  の メソッド ) 
getcomptype ( )  ( aifc  の メソッド ) 
getcomptype ( )  ( AU _read  の メソッド ) 
getcomptype ( )  ( Wave _ read  の メソッド ) 
getconfig ( )  ( audio  port  の メソッド ) 
get ContentHandler ( )  ( XMLReader  の メソッド ) 
getcontext ( )  ( decimal  モジュール ) 
getcontext ( )  ( MH  の メソッド ) 
getctime( )  (os . path  モジュール ) 
getcurrent ( )  ( Folder  の メソッド ) 
getcwd( )  (os  モジュール ) 
getdate ( )  ( AddressList  の メソッド ) 
getdate_tz ( )  ( AddressList  の メソッド ) 
getdecoder ( ) ( codecs  モジュール ) 
getdefaultencoding ( )  ( sys  モジュール ) 
getdefaultlocale ( )  ( locale  モジュール ) 
getdefaulttimeout ( )  ( socket  モジュール ) 
getdlopenflags( )  ( sys  モジュール ) 
get doc( )  ( inspect  モジュール ) 
get DOMImplementation ( )  ( xml . dom モジュール ) 
get DTDHandler ( )  ( XMLReader  の メソッド ) 
getEffectiveLevel ( )  ( Text box  の メソッド ) 
getegid ( )  (os  モジュール ) 
getElementsBy TagName( )  ( Document  の メソッド ) 
getElementsBy TagName( )  ( Element  の メソッド ) 
getElementsBy TagNameNS ( )  ( Document  の メソッド ) 
getElementsBy TagNameNS ( )  ( Element  の メソッド ) 
getencoder ( ) ( codecs  モジュール ) 
getEncoding ( )  ( InputSource  の メソッド ) 
getencoding ( )  ( Message  の メソッド ) 
get EntityResolver ( )  ( XMLReader  の メソッド ) 
getenv ()  (os  モジュール ) 
getErrorHandler ( )  ( XMLReader  の メソッド ) 
geteuid ( )  (os  モジュール ) 
getEvent ( )  ( DOMEventStream  の メソッド ) 
getEventCategory ( )  ( NTEventLogHandler  の メソッド ) 
getEventType ( )  ( NTEventLogHandler  の メソッド ) 
getException ( )  ( SAXException  の メソッド ) 
getfd ( )  ( audio  port  の メソッド ) 
getFeature ( )  ( XMLReader  の メソッド ) 
getfile ( )  ( inspect  モジュール ) 
getfilesystemencoding ( )  ( sys  モジュール ) 
getfillable ( )  ( audio  port  の メソッド ) 
getfilled ( )  ( audio  port  の メソッド ) 
getfillpoint ( )  ( audio  port  の メソッド ) 
getfirst ( )  ( FieldStorage  の メソッド ) 
getfirstmatchingheader ( )  ( AddressList  の メソッド ) 
getfloat ( )  ( Safe ConfigParser  の メソッド ) 
getfloatmax ( )  ( audio  configuration  の メソッド ) 
getfqdn ( )  ( socket  モジュール ) 
getframeinfo ( )  ( inspect  モジュール ) 
getframerate ( )  ( aifc  の メソッド ) 
getframerate ( )  ( AU _read  の メソッド ) 
getframerate ( )  ( Wave _ read  の メソッド ) 
getfullname ( )  ( Folder  の メソッド ) 
getgid ( )  (os  モジュール ) 
getgrall ( ) ( grp  モジュール ) 
getgrgid ( ) ( grp  モジュール ) 
getgrnam ( ) ( grp  モジュール ) 
getgroups( )  (os  モジュール ) 
getheader ( )  ( AddressList  の メソッド ) 
getheader ( )  ( HTTPSConnection  の メソッド ) 
getheaders ( )  ( HTTPSConnection  の メソッド )  gethostbyaddr( )  ( in  module socket ) 
gethostbyaddr( )  ( socket  モジュール ) 
gethostbyname ( )  ( socket  モジュール ) 
gethostbyname _ex ( )  ( socket  モジュール )  gethostname ( )  ( in  module socket ) 
gethostname ( )  ( socket  モジュール ) 
getinfo ( )  ( audio  device  の メソッド ) 
getinfo ( )  ( ZipFile  の メソッド ) 
getinnerframes( )  ( inspect  モジュール ) 
GetInputContext ( )  ( xmlparser  の メソッド ) 
getint ( )  ( Safe ConfigParser  の メソッド ) 
getitem ( )  (operator  モジュール ) 
getkey( )  ( window  の メソッド ) 
getlast ( )  ( Folder  の メソッド ) 
getLength ( )  ( Attributes  の メソッド ) 
getLevelName( )  ( logging  モジュール ) 
getline ( )  ( linecache  モジュール ) 
getLine Number ( )  ( Locator  の メソッド ) 
getlist ( )  ( FieldStorage  の メソッド ) 
getloadavg ( )  (os  モジュール ) 
getlocale ( )  ( locale  モジュール ) 
getLogger ( )  ( logging  モジュール ) 
getLoggerClass ( )  ( logging  モジュール ) 
getlogin ( )  (os  モジュール ) 
getmaintype ( )  ( Message  の メソッド ) 
getmark ( )  ( aifc  の メソッド ) 
getmark ( )  ( AU _read  の メソッド ) 
getmark ( )  ( Wave _ read  の メソッド ) 
getmarkers ( )  ( aifc  の メソッド ) 
getmarkers ( )  ( AU _read  の メソッド ) 
getmarkers ( )  ( Wave _ read  の メソッド ) 
getmaxyx ( )  ( window  の メソッド ) 
getmcolor ( )  ( fl  モジュール ) 
getmember ( )  (TarFile  の メソッド ) 
getmembers ( )  ( inspect  モジュール ) 
getmembers ( )  (TarFile  の メソッド ) 
get Message ( )  ( SAXException  の メソッド ) 
getmessagefilename ( )  ( Folder  の メソッド ) 
get MessageID ( )  ( NTEventLogHandler  の メソッド ) 
getmodule ( )  ( inspect  モジュール ) 
getmoduleinfo ( )  ( inspect  モジュール ) 
getmodulename ( )  ( inspect  モジュール ) 
getmouse ( )  ( curses  モジュール ) 
getmro ( )  ( inspect  モジュール ) 
getmtime( )  (os . path  モジュール ) 
getname ( )  ( Chunk  の メソッド ) 
getName( )  ( Thread  の メソッド ) 
getNameByQName( )  ( AttributesNS  の メソッド ) 
getnameinfo ( )  ( socket  モジュール ) 
getNames( )  ( Attributes  の メソッド ) 
getnames( )  (TarFile  の メソッド ) 
getnamespace ( )  ( XMLParser  の メソッド ) 
getnchannels ( )  ( aifc  の メソッド ) 
getnchannels ( )  ( AU _read  の メソッド ) 
getnchannels ( )  ( Wave _ read  の メソッド ) 
getnframes( )  ( aifc  の メソッド ) 
getnframes( )  ( AU _read  の メソッド ) 
getnframes( )  ( Wave _ read  の メソッド ) 
getopt ( )  ( getopt  モジュール ) 
getopt  ( standard  モジュール ) 
getouterframes( )  ( inspect  モジュール ) 
getoutput( ) ( command s  モジュール ) 
get pagesize ( )  ( resource  モジュール ) 
getparam ( )  ( Message  の メソッド ) 
getparams ( )  ( aifc  の メソッド ) 
getparams ( )  ( al  モジュール ) 
getparams ( )  ( AU _read  の メソッド ) 
getparams ( )  ( Wave _ read  の メソッド ) 
getparyx ( )  ( window  の メソッド ) 
getpass ( )  ( getpass  モジュール ) 
getpass  ( standard  モジュール ) 
getpath ( )  ( MH  の メソッド ) 
getpeername ( )  ( socket  の メソッド ) 
getpgrp ( )  (os  モジュール ) 
getpid ( )  (os  モジュール ) 
getplist ( )  ( Message  の メソッド ) 
getpos( )  ( HTMLParser  の メソッド ) 
getppid ( )  (os  モジュール ) 
getpreferredencoding ( )  ( locale  モジュール ) 
getprofile ( )  ( MH  の メソッド ) 
get Property ( )  ( XMLReader  の メソッド ) 
getprotobyname ( )  ( socket  モジュール ) 
get PublicId ()  ( InputSource  の メソッド ) 
get PublicId ()  ( Locator  の メソッド ) 
getpwall ( )  ( pwd モジュール ) 
getpwnam ( )  ( pwd モジュール ) 
getpwuid ( )  ( pwd モジュール ) 
getQNameByName( )  ( AttributesNS  の メソッド ) 
getQNames( )  ( AttributesNS  の メソッド ) 
getqueuesize ( )  ( audio  configuration  の メソッド ) 
getquota ( )  ( IMAP 4_stream  の メソッド ) 
getquotaroot ( )  ( IMAP 4_stream  の メソッド ) 
getrandbits ( )  ( random モジュール ) 
getrawheader ( )  ( AddressList  の メソッド ) 
getreader ( ) ( codecs  モジュール ) 
getrecursion limit ( )  ( sys  モジュール ) 
getrefcount ( )  ( sys  モジュール ) 
getresponse ( )  ( HTTPSConnection  の メソッド ) 
getrlimit ( )  ( resource  モジュール ) 
getrusage ( )  ( resource  モジュール ) 
getsampfmt ( )  ( audio  configuration  の メソッド ) 
getsample ( )  ( audioop  モジュール ) 
getsampwidth ( )  ( aifc  の メソッド ) 
getsampwidth ( )  ( AU _read  の メソッド ) 
getsampwidth ( )  ( Wave _ read  の メソッド ) 
getsequences ( )  ( Folder  の メソッド ) 
getsequencesfilename ( )  ( Folder  の メソッド ) 
getservbyname ( )  ( socket  モジュール ) 
getservbyport ( )  ( socket  モジュール ) 
getsid ( )  (os  モジュール ) 
getsignal ( )  ( signal  モジュール ) 
getsize ( )  ( Chunk  の メソッド ) 
getsize ( )  (os . path  モジュール ) 
getsizes ( )  ( imgfile  モジュール ) 
getslice ( )  (operator  モジュール ) 
getsockname ( )  ( socket  の メソッド ) 
getsockopt ( )  ( socket  の メソッド ) 
getsource ( )  ( inspect  モジュール ) 
getsourcefile ( )  ( inspect  モジュール ) 
getsourcelines ( )  ( inspect  モジュール ) 
getstate ( )  ( random モジュール ) 
getstatus ( )  ( audio  port  の メソッド ) 
getstatus ( )  ( CD  player  の メソッド ) 
getstatus ( ) ( command s  モジュール ) 
getstatusoutput( ) ( command s  モジュール ) 
getstr ( )  ( window  の メソッド ) 
getSubject ( )  ( SMTPHandler  の メソッド ) 
getsubtype ( )  ( Message  の メソッド ) 
get SystemId ()  ( InputSource  の メソッド ) 
get SystemId ()  ( Locator  の メソッド ) 
getsyx ( )  ( curses  モジュール ) 
gettarinfo ( )  (TarFile  の メソッド ) 
gettempdir ( )  ( tempfile  モジュール ) 
gettempprefix ( )  ( tempfile  モジュール ) 
getTestCaseNames( )  ( TestLoader  の メソッド ) 
gettext ( )  ( gettext  モジュール ) 
gettext ( )  ( GNUTranslations  の メソッド ) 
gettext ( )  ( NullTranslations  の メソッド ) 
gettext  ( standard  モジュール ) 
gettimeout ( )  ( socket  の メソッド ) 
gettrackinfo ( )  ( CD  player  の メソッド ) 
getType ( )  ( Attributes  の メソッド ) 
gettype ( )  ( Message  の メソッド ) 
getuid ( )  (os  モジュール ) 
getuser ( )  ( getpass  モジュール ) 
getValue ( )  ( Attributes  の メソッド ) 
getvalue ( )  ( StringIO  の メソッド ) 
getValueByQName( )  ( AttributesNS  の メソッド ) 
getweakrefcount ( )  ( weakref  モジュール ) 
getweakrefs ( )  ( weakref  モジュール ) 
getwelcome( )  ( FTP  の メソッド ) 
getwelcome( )  ( NNTPDataError  の メソッド ) 
getwelcome( )  ( POP 3 _ SSL  の メソッド ) 
getwidth ( )  ( audio  configuration  の メソッド ) 
getwin( )  ( curses  モジュール ) 
getwindowsversion ( )  ( sys  モジュール ) 
getwriter ( ) ( codecs  モジュール ) 
getyx ( )  ( window  の メソッド ) 
gid  (Tar Info  の 属性 ) 
GL  ( standard  モジュール ) 
gl  ( 組み込 み  モジュール ) 
glob ( )  ( glob  モジュール ) 
glob  (standard  モジュール ) 
glob  ( 標準  モジュール )  globals ( )  (built - in function ) 
globs  ( DocTest  の 属性 ) 
gmtime( ) ( time モジュール ) 
gname  ( Tar Info  の 属性 ) 
gnu_ getopt ( )  ( getopt  モジュール ) 
gopher_ open ( )  ( GopherHandler  の メソッド ) 
gopher_proxy  ( 環境 変数 ) 
gopherlib  (standard  モジュール ) 
got  ( DocTestFailure  の 属性 ) 
goto ( ) ( turtle  モジュール ) 
grey 22grey ( )  ( imageop  モジュール ) 
grey2grey 2 ( )  ( imageop  モジュール ) 
grey2grey 4 ( )  ( imageop  モジュール ) 
grey 2mono ( )  ( imageop  モジュール ) 
grey 42 grey ( )  ( imageop  モジュール ) 
group ( )  ( MatchObject  の メソッド ) 
group ( )  ( NNTPDataError  の メソッド ) 
groupby ( )  (itertools  モジュール ) 
groupdict ( )  ( MatchObject  の メソッド ) 
groupindex ( RegexObject  の 属性 ) 
groups( )  ( MatchObject  の メソッド ) 
grp  ( 組み込 み  モジュール ) 
gt ( )  (operator  モジュール ) 
guess_all _extensions ( )  ( mimetypes  モジュール )  guess_extension ( )  ( MimeTypes  の メソッド ) 
guess_extension ( )  ( mimetypes  モジュール ) 
guess_type ( )  ( MimeTypes  の メソッド ) 
guess_type ( )  ( mimetypes  モジュール ) 
gzip  (standard  モジュール ) 
halfdelay ( )  ( curses  モジュール ) 
handle ( )  ( Base HTTPRequestHandler  の メソッド ) 
handle ( )  ( Text box  の メソッド ) , [ Link ] 
handle_accept ( )  ( dispatcher  の メソッド ) 
handle_authentication_request ( )  ( AbstractBasicAuthHandler  の メソッド ) 
handle_authentication_request ( )  ( AbstractDigestAuthHandler  の メソッド ) 
handle_cdata ( )  ( XMLParser  の メソッド ) 
handle_charref ( )  ( HTMLParser  の メソッド ) 
handle_charref ( )  ( SGMLParser  の メソッド ) 
handle_charref ( )  ( XMLParser  の メソッド ) 
handle_ close ( )  ( async _ chat  の メソッド ) 
handle_ close ( )  ( dispatcher  の メソッド ) 
handle_ comment ( )  ( HTMLParser  の メソッド ) 
handle_ comment ( )  ( SGMLParser  の メソッド ) 
handle_ comment ( )  ( XMLParser  の メソッド ) 
handle_connect ( )  ( dispatcher  の メソッド ) 
handle_data ( )  ( HTMLParser  の メソッド ) 
handle_data ( )  ( SGMLParser  の メソッド ) 
handle_data ( )  ( XMLParser  の メソッド ) 
handle_decl ( )  ( HTMLParser  の メソッド ) 
handle_decl ( )  ( SGMLParser  の メソッド ) 
handle_doctype ( )  ( XMLParser  の メソッド ) 
handle_endtag ( )  ( HTMLParser  の メソッド ) 
handle_endtag ( )  ( SGMLParser  の メソッド ) 
handle_endtag ( )  ( XMLParser  の メソッド ) 
handle_entityref ( )  ( HTMLParser  の メソッド ) 
handle_entityref ( )  ( SGMLParser  の メソッド ) 
handle_error ( )  ( dispatcher  の メソッド ) 
handle_expt ( )  ( dispatcher  の メソッド ) 
handle_image ( )  ( HTMLParser  の メソッド ) 
handle_one _request ( )  ( Base HTTPRequestHandler  の メソッド ) 
handle_pi ( )  ( HTMLParser  の メソッド ) 
handle_proc ( )  ( XMLParser  の メソッド ) 
handle_read ( )  ( async _ chat  の メソッド ) 
handle_read ( )  ( dispatcher  の メソッド ) 
handle_request ( )  ( SimpleXMLR PCRequestHandler  の メソッド ) 
handle_ special ( )  ( XMLParser  の メソッド ) 
handle_startendtag ( )  ( HTMLParser  の メソッド ) 
handle_starttag ( )  ( HTMLParser  の メソッド ) 
handle_starttag ( )  ( SGMLParser  の メソッド ) 
handle_starttag ( )  ( XMLParser  の メソッド ) 
handle_write ( )  ( async _ chat  の メソッド ) 
handle_write ( )  ( dispatcher  の メソッド ) 
handle_xml ( )  ( XMLParser  の メソッド ) 
handleError ( )  ( SocketHandler  の メソッド ) , [ Link ] 
handleError ( )  ( Text box  の メソッド ) 
handler ( )  ( cgitb  モジュール ) 
has_colors ( )  ( curses  モジュール ) 
has_data ( )  ( Request  の メソッド ) 
has _extn ( )  ( SMTP  の メソッド ) 
has _header ( )  ( Request  の メソッド ) 
has _header ( )  ( Sniffer  の メソッド ) 
has_ ic ( )  ( curses  モジュール ) 
has_ il ( )  ( curses  モジュール ) 
has_ ipv 6  ( socket  モジュール ) 
has _key( )  ( Message  の メソッド ) 
has _key( )  ( Queue  の メソッド ) 
has_nonstandard_attr ( )  ( Cookie  の メソッド ) 
has_option ( )  ( Safe ConfigParser  の メソッド ) 
has_ section ( )  ( Safe ConfigParser  の メソッド ) 
hasAttributes ( )  ( Node  の メソッド ) 
hasChildNodes( )  ( Node  の メソッド ) 
hascompare  ( dis  モジュール ) 
hasconst  ( dis  モジュール ) 
hasFeature ( )  ( DOMImplementation  の メソッド ) 
hasfree  ( dis  モジュール ) 
hashopen ( )  ( bsddb  モジュール ) 
hasjabs ( dis  モジュール ) 
hasjrel  ( dis  モジュール ) 
haslocal  ( dis  モジュール ) 
hasname  ( dis  モジュール ) 
have _unicode ( test . test _ support  モジュール ) 
head ( )  ( NNTPDataError  の メソッド ) 
header_encode ( )  ( Charset  の メソッド ) 
header_encoding  ( email . Charset  モジュール ) 
header _offset  ( Zip Info  の 属性 ) 
headers ( AddressList  の 属性 ) 
headers ( Base HTTPRequestHandler  の 属性 ) 
headers ( Server Proxy  の 属性 ) 
heapify ( )  ( heapq モジュール ) 
heapmin ( )  ( msvcrt  モジュール ) 
heappop ( )  ( heapq モジュール ) 
heappush ( )  ( heapq モジュール ) 
heapq ( standard  モジュール ) 
heapreplace ( )  ( heapq モジュール ) 
helo ( )  ( SMTP  の メソッド ) 
help ( )  ( NNTPDataError  の メソッド ) 
hexbin ( ) ( binhex  モジュール ) 
hexdigest ( )  ( hmac  の メソッド ) 
hexdigest ( )  ( md 5  の メソッド ) 
hexdigest ( )  ( sha  の メソッド ) 
hexdigits  ( string  モジュール ) 
hexlify ( ) ( binascii モジュール ) 
hexversion  ( sys  モジュール ) 
hidden ( )  ( Text box  の メソッド ) 
hide ( )  ( Text box  の メソッド ) 
hide _cookie 2  ( LWPCookieJar  の 属性 ) 
hide _form ( )  ( form  の メソッド ) 
hide _object ( )  ( FORMS object  の メソッド ) 
HIGHEST _ PROTOCOL  ( pickle  モジュール ) 
hline ( )  ( window  の メソッド ) 
hls_to_rgb ( ) ( colorsys  モジュール ) 
hmac  ( standard  モジュール ) 
HOME  ( 環境 変数 ) , [ Link ] 
hosts ( netrc  の 属性 ) 
hotshot  ( standard  モジュール ) 
hotshot . stats  ( standard  モジュール ) 
hour ( datetime  の 属性 ) 
hour( time  の 属性 ) 
hsv_to_rgb ( ) ( colorsys  モジュール ) 
HtmlDiff  ( difflib  の クラス ) 
htmlentitydefs ( standard  モジュール ) 
htmllib  (standard  モジュール ) 
HTMLParser  ( standard  モジュール ) 
htonl ( )  ( socket  モジュール ) 
htons ( )  ( socket  モジュール ) 
http_error _ 30 1 ( )  ( HTTPRedirectHandler  の メソッド ) 
http_error _ 30 2 ( )  ( HTTPRedirectHandler  の メソッド ) 
http_error _ 30 3 ( )  ( HTTPRedirectHandler  の メソッド ) 
http_error _ 30 7 ( )  ( HTTPRedirectHandler  の メソッド ) 
http_error _ 401 ( )  ( HTTPBasicAuthHandler  の メソッド ) 
http_error _ 401 ( )  ( HTTPDigestAuthHandler  の メソッド ) 
http_error _ 40 7 ( )  ( ProxyBasicAuthHandler  の メソッド ) 
http_error _ 40 7 ( )  ( ProxyDigestAuthHandler  の メソッド ) 
http_error _\\varnnn ( )  ( BaseHandler  の メソッド ) 
http_error_default ( )  ( BaseHandler  の メソッド ) 
http_open ( )  ( HTTPHandler  の メソッド ) 
HTTP _ PORT  (httplib  モジュール ) 
hypot ( )  ( math  モジュール ) 
I ( re  モジュール ) 
ibufcount ( )  ( audio  device  の メソッド ) 
id ( )  ( TestCase  の メソッド ) 
idcok ( )  ( window  の メソッド ) 
ident  ( cd  モジュール ) 
identchars ( Cmd  の 属性 ) 
idlok ( )  ( window  の メソッド ) 
ifilter ( )  (itertools  モジュール ) 
ifilterfalse ( )  (itertools  モジュール ) 
ignorableWhitespace ( )  ( ContentHandler  の メソッド ) 
ignore ( )  ( Stats  の メソッド ) 
ignore_errors ( ) ( codecs  モジュール ) 
IGNORE _ EX CEPTION _ DETAIL  ( doctest  モジュール ) 
ignore_zeros  (TarFile  の 属性 ) 
IGNORECASE  ( re  モジュール ) 
i have ( )  ( NNTPDataError  の メソッド ) 
ihooks  ( 標準  モジュール ) IllegalKeywordArgument 
imageop  ( 組み込 み  モジュール ) 
imap ( )  (itertools  モジュール ) 
imaplib  (standard  モジュール ) 
imgfile  ( 組み込 み  モジュール ) 
imghdr ( standard  モジュール ) 
immedok ( )  ( window  の メソッド ) 
imp ( 組み込 み  モジュール ) , [ Link ] 
in_table_a1 ( )  ( stringprep  モジュール ) 
in_table_b 1 ( )  ( stringprep  モジュール ) 
in_table_c 11 ( )  ( stringprep  モジュール ) 
in_table_c 11_c 12 ( )  ( stringprep  モジュール ) 
in_table_c 12 ( )  ( stringprep  モジュール ) 
in_table_c 21 ( )  ( stringprep  モジュール ) 
in_table_c 21_c 22 ( )  ( stringprep  モジュール ) 
in_table_c 22 ( )  ( stringprep  モジュール ) 
in_table_c 3 ( )  ( stringprep  モジュール ) 
in_table_c 4 ( )  ( stringprep  モジュール ) 
in_table_c 5 ( )  ( stringprep  モジュール ) 
in_table_c 6 ( )  ( stringprep  モジュール ) 
in_table_c 7 ( )  ( stringprep  モジュール ) 
in_table_c 8 ( )  ( stringprep  モジュール ) 
in_table_c 9 ( )  ( stringprep  モジュール ) 
in_table_d 1 ( )  ( stringprep  モジュール ) 
in_table_d 2 ( )  ( stringprep  モジュール ) 
INADDR_*( socket  モジュール ) 
inch ( )  ( window  の メソッド ) 
indent  ( Example  の 属性 ) 
index( )  ( array  の メソッド ) 
index ( cd  モジュール ) 
index( )  ( string  の メソッド ) 
index( )  ( string  モジュール ) 
indexOf ( )  (operator  モジュール ) 
inet_aton ( )  ( socket  モジュール ) 
inet_ntoa( )  ( socket  モジュール ) 
inet_ntop ( )  ( socket  モジュール ) 
inet_pton ( )  ( socket  モジュール ) 
Inexact  ( decimal  の クラス ) 
infile  ( shlex  の 属性 ) 
info ( )  ( logging  モジュール ) 
info ( )  ( NullTranslations  の メソッド ) 
info ( )  ( Text box  の メソッド ) 
infolist ( )  ( ZipFile  の メソッド ) 
init ( )  ( fm  モジュール ) 
init ( )  ( mimetypes  モジュール ) 
init_builtin ( )  (imp  モジュール ) 
init_color ( )  ( curses  モジュール ) 
init_ frozen ( )  (imp  モジュール ) 
init_ pair( )  ( curses  モジュール ) 
inited  ( mimetypes  モジュール ) 
initial_indent  ( Text Wrapper  の 属性 ) 
initscr ( )  ( curses  モジュール ) 
input ( )  ( fileinput  モジュール ) 
input ( )  ( 組み込 み 関数 )  input _ charset  (email . Charset  モジュール ) 
InputType  ( cStringIO  モジュール ) 
insch ( )  ( window  の メソッド ) 
insdelln ( )  ( window  の メソッド ) 
insert ( )  ( array  の メソッド ) 
insert_ text ( )  ( readline  モジュール ) 
insertBefore ( )  ( Node  の メソッド ) 
insertln ( )  ( window  の メソッド ) 
insnstr ( )  ( window  の メソッド ) 
insort ( ) ( bisect  モジュール ) 
insort_left ( ) ( bisect  モジュール ) 
insort_right ( ) ( bisect  モジュール ) 
inspect  ( standard  モジュール ) 
insstr ( )  ( window  の メソッド ) 
install ( )  ( gettext  モジュール ) 
install ( )  ( NullTranslations  の メソッド ) 
install_ opener ( )  ( urllib 2  モジュール ) 
instance ( )  ( new  モジュール ) 
instancemethod ( )  ( new  モジュール ) 
InstanceType (types  モジュール ) 
instr ( )  ( window  の メソッド ) 
instream  ( shlex  の 属性 ) 
int ( )  (built - in function )  int ( )  ( 組み込 み 関数 ) 
Int 2 AP ( )  ( imaplib  モジュール ) 
interact ( ) ( code  モジュール ) 
interact ( )  ( Interactive Console  の メソッド ) 
interact ( )  ( Telnet  の メソッド ) 
internal _attr  ( Zip Info  の 属性 ) 
Internaldate2tuple ( )  ( imaplib  モジュール ) 
internalSubset  ( DocumentType  の 属性 ) 
interrupt_main ( ) ( thread  モジュール ) 
intro  ( Cmd  の 属性 ) 
IntType (types  モジュール ) 
inv ()  (operator  モジュール ) 
Invalid Operation  ( decimal  の クラス ) 
invert ( )  (operator  モジュール ) 
ioctl ( )  ( fcntl  モジュール ) 
IP_*( socket  モジュール ) 
IPPORT _*( socket  モジュール ) 
IPPROTO _*( socket  モジュール ) 
IPV6 _*( socket  モジュール ) 
is _() (operator  モジュール ) 
is_blocked ( )  ( DefaultCookiePolicy  の メソッド ) 
is _builtin ( )  (imp  モジュール ) 
IS _ CHARACTER _ JUNK ( )  ( difflib  モジュール ) 
is_data ( )  ( MultiFile  の メソッド ) 
is _empty( )  ( fifo  の メソッド ) 
is _expired ( )  ( Cookie  の メソッド ) 
is _frozen ( )  (imp  モジュール ) 
is_jython ( test . test _ support  モジュール ) 
IS _ LINE _ JUNK ( )  ( difflib  モジュール ) 
is _linetouched ( )  ( window  の メソッド ) 
is _multipart ( )  ( Message  の メソッド ) 
is _not ( )  (operator  モジュール ) 
is _not_allowed ( )  ( DefaultCookiePolicy  の メソッド ) 
is _ resource_enabled ( )  ( test . test _ support  モジュール ) 
is_tarfile ( ) (tarfile  モジュール ) 
is _unverifiable ( )  ( Request  の メソッド ) 
is _wintouched ( )  ( window  の メソッド ) 
is _zipfile ( )  ( zipfile  モジュール ) 
isabs ( )  (os . path  モジュール ) 
isAlive ( )  ( Thread  の メソッド ) 
isalnum ( )  ( curses . ascii モジュール ) 
isalnum ( )  ( string  の メソッド ) 
isalpha ( )  ( curses . ascii モジュール ) 
isalpha ( )  ( string  の メソッド ) 
isascii( )  ( curses . ascii モジュール ) 
isatty ( )  ( Chunk  の メソッド ) 
isatty ( )  ( file  の メソッド ) 
isatty ( )  (os  モジュール ) 
isblank ( )  ( curses . ascii モジュール ) 
isblk ( )  (Tar Info  の メソッド ) 
isbuiltin ( )  ( inspect  モジュール ) 
isCallable ( )  (operator  モジュール ) 
ischr ( )  (Tar Info  の メソッド ) 
isclass ( )  ( inspect  モジュール ) 
iscntrl ( )  ( curses . ascii モジュール ) 
iscode ( )  ( inspect  モジュール ) 
iscomment ( )  ( AddressList  の メソッド ) 
isctrl ( )  ( curses . ascii モジュール ) 
isDaemon ( )  ( Thread  の メソッド ) 
isdatadescriptor ( )  ( inspect  モジュール ) 
isdev()  (Tar Info  の メソッド ) 
isdigit ( )  ( curses . ascii モジュール ) 
isdigit ( )  ( string  の メソッド ) 
isdir ( )  (os . path  モジュール ) 
isdir ( )  (Tar Info  の メソッド ) 
isenabled ( )  ( gc  モジュール ) 
isEnabledFor ( )  ( Text box  の メソッド ) 
isendwin( )  ( curses  モジュール ) 
ISEOF ( ) ( token  モジュール ) 
isexpr ( )  ( AST  の メソッド ) 
isexpr ( )  ( parser  モジュール ) 
isfifo ( )  (Tar Info  の メソッド ) 
isfile ( )  (os . path  モジュール ) 
isfile ( )  (Tar Info  の メソッド ) 
isfirstline ( )  ( fileinput  モジュール ) 
isframe( )  ( inspect  モジュール ) 
isfunction ( )  ( inspect  モジュール ) 
isgraph ( )  ( curses . ascii モジュール ) 
isheader ( )  ( AddressList  の メソッド ) 
iskeyword ( )  ( keyword  モジュール ) 
islast ( )  ( AddressList  の メソッド ) 
isleap ( )  ( calendar  モジュール ) 
islice ( )  (itertools  モジュール ) 
islink ( )  (os . path  モジュール ) 
islnk ( )  (Tar Info  の メソッド ) 
islower ( )  ( curses . ascii モジュール ) 
islower ( )  ( string  の メソッド ) 
is MappingType ( )  (operator  モジュール ) 
ismeta ( )  ( curses . ascii モジュール ) 
ismethod ( )  ( inspect  モジュール ) 
ismethoddescriptor ( )  ( inspect  モジュール ) 
ismodule ( )  ( inspect  モジュール ) 
ismount ( )  (os . path  モジュール ) 
ISNONTERMINAL ( ) ( token  モジュール ) 
isNumberType ( )  (operator  モジュール ) 
isocalendar ( )  ( date  の メソッド ) 
isocalendar ( )  ( datetime の メソッド ) 
isoformat ( )  ( date  の メソッド ) 
isoformat ( )  ( datetime の メソッド ) 
isoformat ( ) ( time の メソッド ) 
isoweekday ( )  ( date  の メソッド ) 
isoweekday ( )  ( datetime の メソッド ) 
isprint ( )  ( curses . ascii モジュール ) 
ispunct ( )  ( curses . ascii モジュール ) 
isqueued ( )  ( fl  モジュール ) 
isreadable ( )  ( pprint  モジュール ) 
isreadable ( )  ( PrettyPrinter  の メソッド ) 
isrecursive ( )  ( pprint  モジュール ) 
isrecursive ( )  ( PrettyPrinter  の メソッド ) 
isreg ( )  (Tar Info  の メソッド ) 
is ReservedKey ( )  ( Morsel  の メソッド ) 
isroutine ( )  ( inspect  モジュール ) 
isSameNode ( )  ( Node  の メソッド ) 
is SequenceType ( )  (operator  モジュール ) 
is Set ( )  ( Event  の メソッド ) 
isspace ( )  ( curses . ascii モジュール ) 
isspace ( )  ( string  の メソッド ) 
isstdin ( )  ( fileinput  モジュール ) 
issuite ( )  ( AST  の メソッド ) 
issuite ( )  ( parser  モジュール ) 
issym ( )  (Tar Info  の メソッド ) 
ISTERMINAL ( ) ( token  モジュール ) 
istitle ( )  ( string  の メソッド ) 
istraceback ( )  ( inspect  モジュール ) 
isupper ( )  ( curses . ascii モジュール ) 
isupper ( )  ( string  の メソッド ) 
isxdigit ( )  ( curses . ascii モジュール ) 
item ( )  ( NamedNode Map  の メソッド ) 
item ( )  ( NodeList  の メソッド ) 
itemgetter ( )  (operator  モジュール ) 
items ( )  ( Message  の メソッド ) 
items ( )  ( Safe ConfigParser  の メソッド ) , [ Link ] 
itemsize ( array  の 属性 ) 
itertools  ( standard  モジュール ) 
izip ( )  (itertools  モジュール ) 
java _ver ( )  ( platform  モジュール ) 
join ( )  (os . path  モジュール ) 
join ( )  ( string  の メソッド ) 
join ( )  ( string  モジュール ) 
join ( )  ( Thread  の メソッド ) 
joinfields ( )  ( string  モジュール ) 
jpeg  ( 組み込 み  モジュール ) 
js_output( )  ( Base Cookie  の メソッド ) 
js_output( )  ( Morsel  の メソッド ) 
jumpahead ( )  ( random モジュール ) 
kbhit ( )  ( msvcrt  モジュール ) 
KDEDIR  ( 環境 変数 ) 
key ( Morsel  の 属性 ) 
keyname ( )  ( curses  モジュール ) 
keypad ( )  ( window  の メソッド ) 
keys ( )  ( Message  の メソッド ) 
keys ( )  ( Queue  の メソッド ) 
keyword  (standard  モジュール ) 
kill ( )  (os  モジュール ) 
killchar ( )  ( curses  モジュール ) 
killpg ( )  (os  モジュール ) 
knee  (  モジュール ) 
knownfiles  ( mimetypes  モジュール ) 
kw list  ( keyword  モジュール ) 
LambdaType (types  モジュール ) 
LANG  ( 環境 変数 ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
LANGUAGE  ( 環境 変数 ) , [ Link ] 
last ( )  ( dbhash  の メソッド ) 
last  ( MultiFile  の 属性 ) 
last ( )  ( NNTPDataError  の メソッド ) 
last ( )  ( Queue  の メソッド ) 
last _traceback  ( sys  モジュール ) 
last_type  ( sys  モジュール ) 
last_value  ( sys  モジュール ) 
lastChild  ( Node  の 属性 ) 
lastcmd  ( Cmd  の 属性 ) 
lastgroup  ( MatchObject  の 属性 ) 
lastindex ( MatchObject  の 属性 ) 
lastpart ( )  ( MimeWriter  の メソッド ) 
LC _ ALL  ( locale  モジュール )  LC _ ALL  ( 環境 変数 ) , [ Link ] 
LC _ COLLATE  ( locale  モジュール ) 
LC _ CTYPE  ( locale  モジュール ) 
LC _ MESSAGES  ( locale  モジュール ) 
LC _ MESSAGES  ( 環境 変数 ) , [ Link ] 
LC _ MONETARY ( locale  モジュール ) 
LC _ NUMERIC  ( locale  モジュール ) 
ldexp ( )  ( math  モジュール ) 
ldgettext ( )  ( gettext  モジュール ) 
ldngettext ( )  ( gettext  モジュール ) 
le ( )  (operator  モジュール ) 
leapdays ( )  ( calendar  モジュール ) 
leaveok ( )  ( window  の メソッド ) 
left ( ) ( turtle  モジュール ) 
left_ list  ( dircmp  の 属性 ) 
left _only ( dircmp  の 属性 ) 
len ( )  (built - in function )  len ( )  ( 組み込 み 関数 ) , [ Link ] 
length  ( NamedNode Map  の 属性 ) 
length  ( NodeList  の 属性 ) 
letters ( string  モジュール ) 
level  ( MultiFile  の 属性 ) 
lgettext ( )  ( gettext  モジュール ) 
lgettext ( )  ( NullTranslations  の メソッド ) 
libc_ver ( )  ( platform  モジュール ) 
library  ( dbm  モジュール ) 
lin 2adpcm ( )  ( audioop  モジュール ) 
lin 2adpcm3 ( )  ( audioop  モジュール ) 
lin 2lin ( )  ( audioop  モジュール ) 
lin 2ulaw ( )  ( audioop  モジュール ) 
linecache ( standard  モジュール ) 
lineno ( class descriptor  の 属性 ) 
lineno ( DocTest  の 属性 ) 
lineno ( Example  の 属性 ) 
lineno ( ExpatError  の 属性 ) 
lineno ( shlex  の 属性 ) 
LINES  ( 環境 変数 ) , [ Link ] 
linesep (os  モジュール ) 
lineterminator  ( Dialect  の 属性 ) 
link ( )  (os  モジュール ) 
linkname  ( Tar Info  の 属性 ) 
list ( )  ( IMAP 4_stream  の メソッド ) 
list ( )  ( NNTPDataError  の メソッド ) 
list ( )  ( POP 3 _ SSL  の メソッド ) 
list ( )  (TarFile  の メソッド ) 
list_dialects ( )  ( csv  モジュール ) 
listallfolders ( )  ( MH  の メソッド ) 
listallsubfolders ( )  ( MH  の メソッド ) 
listdir ( )  ( dircache  モジュール ) 
listdir ( )  (os  モジュール ) 
listen ( )  ( dispatcher  の メソッド ) 
listen ( )  ( logging  モジュール ) 
listen ( )  ( socket  の メソッド ) 
listfolders ( )  ( MH  の メソッド ) 
listmessages ( )  ( Folder  の メソッド ) 
listsubfolders ( )  ( MH  の メソッド ) 
ListType (types  モジュール ) 
ljust ( )  ( string  の メソッド ) 
ljust ( )  ( string  モジュール ) 
LK _ LOCK  ( msvcrt  モジュール ) 
LK _ NBLCK  ( msvcrt  モジュール ) 
LK _ NBRLCK  ( msvcrt  モジュール ) 
LK _ RLCK  ( msvcrt  モジュール ) 
LK _ UNLCK  ( msvcrt  モジュール ) 
LNAME  ( 環境 変数 ) 
lngettext ( )  ( gettext  モジュール ) 
lngettext ( )  ( NullTranslations  の メソッド ) 
load ( )  ( Base Cookie  の メソッド ) 
load ( )  ( File CookieJar  の メソッド ) 
load ( )  ( hotshot . stats  モジュール ) 
load ( )  (marshal  モジュール ) 
load ( ) ( pickle  モジュール ) 
load ( )  ( Unpickler  の メソッド ) 
load_ compiled ( )  (imp  モジュール ) 
load_dynamic ( )  (imp  モジュール ) 
load _ module ( )  (imp  モジュール ) 
load _source ( )  (imp  モジュール ) 
loads ( )  (marshal  モジュール ) 
loads ( ) ( pickle  モジュール ) 
loads ( )  ( xmlrpclib  モジュール ) 
loadTestsFromModule ( )  ( TestLoader  の メソッド ) 
loadTestsFromName( )  ( TestLoader  の メソッド ) 
loadTestsFromNames( )  ( TestLoader  の メソッド ) 
loadTestsFromTestCase ( )  ( TestLoader  の メソッド ) 
local  ( threading  の クラス ) 
LOCALE  ( re  モジュール ) 
locale  ( standard  モジュール ) 
localeconv ()  ( locale  モジュール ) 
local Name ( Attr  の 属性 ) 
local Name ( Node  の 属性 ) 
lock ( )  ( mutex  の メソッド ) 
Lock ( ) ( threading  モジュール )  lock _held ( )  (imp  モジュール ) 
locked ( )  ( lock  の メソッド ) 
lockf ( )  ( fcntl  モジュール )  lockf ( )  ( in  module fcntl ) 
locking ( )  ( msvcrt  モジュール ) 
LockType ( thread  モジュール ) 
log ( )  ( logging  モジュール ) 
log ( )  ( math  モジュール ) 
log ( )  ( Text box  の メソッド ) 
log 10 ( )  ( cmath  モジュール ) 
log 10 ( )  ( math  モジュール ) 
log \\optional ,  base ( )  ( cmath  モジュール )  log_data_time_string ( )  ( Base HTTPRequestHandler  の メソッド ) 
log _error ( )  ( Base HTTPRequestHandler  の メソッド ) 
log _message ( )  ( Base HTTPRequestHandler  の メソッド ) 
log _request ( )  ( Base HTTPRequestHandler  の メソッド ) 
logging  ( standard  モジュール ) 
login ( )  ( FTP  の メソッド ) 
login ( )  ( IMAP 4_stream  の メソッド ) 
login ( )  ( SMTP  の メソッド ) 
login_cram _md 5 ( )  ( IMAP 4_stream  の メソッド ) 
LOGNAME  ( 環境 変数 ) , [ Link ] 
lognormvariate ( )  ( random モジュール ) 
logout ( )  ( IMAP 4_stream  の メソッド ) 
long ( )  (built - in function )  long ( )  ( 組み込 み 関数 ) , [ Link ] 
longimagedata ( )  ( rgbimg  モジュール ) 
longname ( )  ( curses  モジュール ) 
longstoimage ( )  ( rgbimg  モジュール ) 
LongType (types  モジュール ) 
lookup ( ) ( codecs  モジュール ) 
lookup ( )  (unicodedata  モジュール ) 
lookup_error ( ) ( codecs  モジュール ) 
loop ( )  ( asyncore  モジュール ) 
lower ( )  ( string  の メソッド ) 
lower ( )  ( string  モジュール ) 
lowercase  ( string  モジュール ) 
lseek ( )  (os  モジュール ) 
lshift ( )  (operator  モジュール ) 
lstat ( )  (os  モジュール ) 
lstrip ( )  ( string  の メソッド ) 
lstrip ( )  ( string  モジュール ) 
lsub ( )  ( IMAP 4_stream  の メソッド ) 
lt ( )  (operator  モジュール ) 
M  ( re  モジュール ) 
mac_ ver ( )  ( platform  モジュール ) 
machine ( )  ( platform  モジュール ) 
macros ( netrc  の 属性 ) 
mailbox  ( standard  モジュール ) 
main ( )  ( py_ compile  モジュール ) 
main ( )  (unittest  モジュール ) 
major ( )  (os  モジュール ) 
make_cookies ( )  ( CookieJar  の メソッド ) 
make_file ( )  ( difflib  モジュール ) 
make_form ( )  ( fl  モジュール ) 
make_header ( )  (email. Header  モジュール ) 
make_msgid ( )  (email .Utils  モジュール ) 
make_parser ( )  ( xml . sax  モジュール ) 
make_table ( )  ( difflib  モジュール ) 
makedev()  (os  モジュール ) 
makedirs ( )  (os  モジュール ) 
makefile ( )  ( socket  の メソッド ) 
makefolder ( )  ( MH  の メソッド ) 
makeLogRecord ( )  ( logging  モジュール ) , [ Link ] 
makePickle ( )  ( SocketHandler  の メソッド ) 
makeRecord ( )  ( Text box  の メソッド ) 
makeSocket ( )  ( DatagramHandler  の メソッド ) 
makeSocket ( )  ( SocketHandler  の メソッド ) 
maketrans ( )  ( string  モジュール ) 
map_table_b 2 ( )  ( stringprep  モジュール ) 
map_table_b 3 ( )  ( stringprep  モジュール ) 
mapcolor ( )  ( fl  モジュール ) 
maps( )  ( nis  モジュール ) 
marshal  ( 組み込 み  モジュール ) 
match ( )  ( nis  モジュール ) 
match ( )  ( re  モジュール ) 
match ( )  ( RegexObject  の メソッド ) 
math  ( 組み込 み  モジュール ) , [ Link ] , [ Link ]  max ( )  ( audioop  モジュール ) 
max ( )  ( Context  の メソッド ) 
max  ( date  の 属性 ) 
max  ( datetime  の 属性 ) 
max ( )  ( Decimal  の メソッド ) 
max  ( time  の 属性 ) 
max  ( timedelta  の 属性 ) 
max ( )  ( 組み込 み 関数 )  MAX _ INTERPOLATION _ DEPTH  ( ConfigParser  モジュール ) 
maxarray  ( Repr  の 属性 ) 
maxdeque  ( Repr  の 属性 ) 
maxdict  ( Repr  の 属性 ) 
maxfrozenset  ( Repr  の 属性 ) 
maxint  ( sys  モジュール ) 
MAXLEN  ( mimify  モジュール ) 
maxlevel  ( Repr  の 属性 ) 
maxlist  ( Repr  の 属性 ) 
maxlong  ( Repr  の 属性 ) 
maxother  ( Repr  の 属性 ) 
maxpp ( )  ( audioop  モジュール ) 
maxset  ( Repr  の 属性 ) 
maxstring  ( Repr  の 属性 ) 
maxtuple ( Repr  の 属性 ) 
maxunicode ( sys  モジュール ) 
MAXYEAR  ( datetime モジュール ) 
MB _ ICONAST ERISK  ( winsound  モジュール ) 
MB _ ICONEXCLAMATION  ( winsound  モジュール ) 
MB _ ICONHAND  ( winsound  モジュール ) 
MB _ ICONQUESTION  ( winsound  モジュール ) 
MB _ OK  ( winsound  モジュール ) 
md 5 ( )  ( md 5  モジュール ) 
md 5  ( 組み込 み  モジュール ) 
message_ from _file ( )  (email . Parser  モジュール ) 
MessageBeep ( )  ( winsound  モジュール ) 
MessageClass  ( Base HTTPRequestHandler  の 属性 ) 
methods  ( class descriptor  の 属性 ) 
MethodType (types  モジュール ) 
microsecond  ( datetime  の 属性 ) 
microsecond  ( time  の 属性 ) 
mime_decode _header ( )  ( mimify  モジュール ) 
mime_encode _header ( )  ( mimify  モジュール ) 
mimetypes ( standard  モジュール ) 
MimeWriter  ( standard  モジュール ) 
mimify ( )  ( mimify  モジュール ) 
mimify ( standard  モジュール ) 
min ( )  ( Context  の メソッド ) 
min  ( date  の 属性 ) 
min  ( datetime  の 属性 ) 
min ( )  ( Decimal  の メソッド ) 
min  ( time  の 属性 ) 
min  ( timedelta  の 属性 ) 
min ( )  ( 組み込 み 関数 )  minmax ( )  ( audioop  モジュール ) 
minor ( )  (os  モジュール ) 
minus ( )  ( Context  の メソッド ) 
minute  ( datetime  の 属性 ) 
minute  ( time  の 属性 ) 
MINYEAR  ( datetime モジュール ) 
mirrored ( )  (unicodedata  モジュール ) 
misc_header  ( Cmd  の 属性 ) 
mkd ( )  ( FTP  の メソッド ) 
mkdir ( )  (os  モジュール ) 
mkdtemp ( )  ( tempfile  モジュール ) , [ Link ] 
mkfifo ( )  (os  モジュール ) 
mknod ( )  (os  モジュール ) 
mkstemp ( )  ( tempfile  モジュール ) 
mktime( ) ( time モジュール ) 
mktime_tz ( )  (email .Utils  モジュール ) 
mktime_tz ( )  ( rfc 822  モジュール ) 
mmap ( )  ( mmap  モジュール ) 
mmap  ( 組み込 み  モジュール ) 
mod ( )  (operator  モジュール ) 
mode  ( file  の 属性 ) 
mode  ( Tar Info  の 属性 ) 
modf ( )  ( math  モジュール ) 
modified ( )  ( RobotFileParser  の メソッド ) 
module  ( class descriptor  の 属性 ) 
module  ( function  descriptor  の 属性 ) 
module ( )  ( new  モジュール ) 
modules ( sys  モジュール ) 
ModuleType (types  モジュール ) 
MON _ 1  . . .  MON _ 12  ( locale  モジュール ) 
mono2grey ( )  ( imageop  モジュール )  month ( )  ( calendar  モジュール ) 
month  ( date  の 属性 ) 
month  ( datetime  の 属性 ) 
monthcalendar ( )  ( calendar  モジュール ) 
monthrange ( )  ( calendar  モジュール ) 
more ( )  ( simple_producer  の メソッド ) 
mouseinterval ( )  ( curses  モジュール ) 
mousemask ( )  ( curses  モジュール ) 
move ( )  ( Text box  の メソッド ) 
move ( )  ( window  の メソッド ) 
movemessage ( )  ( Folder  の メソッド ) 
msftoblock ( )  ( CD  player  の メソッド ) 
msftoframe( )  ( cd  モジュール ) 
msg  (httplib  モジュール ) 
msg ( )  ( Telnet  の メソッド ) 
MSG _*( socket  モジュール ) 
msvcrt  ( 組み込 み  モジュール ) 
mt_ interact ( )  ( Telnet  の メソッド ) 
mtime( )  ( RobotFileParser  の メソッド ) 
mtime ( Tar Info  の 属性 ) 
mul ( )  ( audioop  モジュール ) 
multifile  ( standard  モジュール ) 
MULTILINE  ( re  モジュール ) 
multiply( )  ( Context  の メソッド ) 
mvderwin( )  ( window  の メソッド ) 
mvwin( )  ( window  の メソッド ) 
myrights ( )  ( IMAP 4_stream  の メソッド ) 
name  ( Attr  の 属性 ) 
name ( class descriptor  の 属性 ) 
name  ( Cookie  の 属性 ) 
name  ( DocTest  の 属性 ) 
name  ( DocumentType  の 属性 ) 
name  ( file  の 属性 ) 
name  ( function  descriptor  の 属性 ) 
name  (os  モジュール ) 
name2codepoint  (htmlentitydefs  モジュール ) 
NamedTemporaryFile ( )  ( tempfile  モジュール ) 
namelist ( )  ( ZipFile  の メソッド ) 
nameprep ( )  ( encodings . idna  モジュール ) 
namespace ( )  ( IMAP 4_stream  の メソッド ) 
namespace URI  ( Node  の 属性 ) 
napms ( )  ( curses  モジュール ) 
ndiff ( )  ( difflib  モジュール ) 
ne ( )  (operator  モジュール ) 
neg ( )  (operator  モジュール ) 
netrc  ( standard  モジュール ) 
netscape  ( LWPCookieJar  の 属性 ) 
new( )  ( hmac  モジュール ) 
new( )  ( md 5  モジュール ) 
new( )  ( sha  モジュール ) 
new ( 組み込 み  モジュール ) 
new_ alignment ( )  ( writer  の メソッド ) 
new_ font ( )  ( writer  の メソッド ) 
new_margin ( )  ( writer  の メソッド ) 
new_ module ( )  (imp  モジュール ) 
new_ panel( )  ( curses . panel  モジュール ) 
new_spacing ( )  ( writer  の メソッド ) 
new_styles ( )  ( writer  の メソッド ) 
newconfig ( )  ( al  モジュール ) 
newgroups( )  ( NNTPDataError  の メソッド ) 
newlines  ( file  の 属性 ) 
newnews( )  ( NNTPDataError  の メソッド ) 
newpad ( )  ( curses  モジュール ) 
newwin( )  ( curses  モジュール ) 
next ( )  ( csv  reader  の メソッド ) 
next ( )  ( dbhash  の メソッド ) 
next ( )  ( file  の メソッド ) 
next ( )  (iterator  の メソッド ) 
next ( )  ( mailbox  の メソッド ) 
next ( )  ( MultiFile  の メソッド ) 
next ( )  ( NNTPDataError  の メソッド ) 
next ( )  ( Queue  の メソッド ) 
next ( )  (TarFile  の メソッド ) 
nextfile ( )  ( fileinput  モジュール ) 
nextkey( )  ( gdbm  モジュール ) 
next part ( )  ( MimeWriter  の メソッド ) 
next Sibling  ( Node  の 属性 ) 
ngettext ( )  ( NullTranslations  の メソッド ) 
NI_*( socket  モジュール ) 
nice ( )  (os  モジュール ) 
nis  ( extension  モジュール ) 
nl ( )  ( curses  モジュール ) 
NL  ( tokenize  モジュール ) 
nl _ langinfo ( )  ( locale  モジュール ) 
nlargest ( )  ( heapq モジュール ) 
nlst ( )  ( FTP  の メソッド ) 
node ( )  ( platform  モジュール ) 
nodelay ( )  ( window  の メソッド ) 
nodeName ( Node  の 属性 ) 
nodeType  ( Node  の 属性 ) 
nodeValue  ( Node  の 属性 ) 
NO DISC  ( cd  モジュール ) 
noecho ( )  ( curses  モジュール ) 
NOEXPR  ( locale  モジュール ) 
nofill ( HTMLParser  の 属性 ) 
nok_builtin_names ( RExec  の 属性 ) 
noload ( )  ( Unpickler  の メソッド ) 
nonblock ( )  ( audio  device  の メソッド ) 
NoneType (types  モジュール ) 
nonl ( )  ( curses  モジュール ) 
noop ( )  ( IMAP 4_stream  の メソッド ) 
noop ( )  ( POP 3 _ SSL  の メソッド ) 
noqiflush ( )  ( curses  モジュール ) 
noraw ( )  ( curses  モジュール ) 
normalize ( )  ( Context  の メソッド ) 
normalize ( )  ( Decimal  の メソッド ) 
normalize ( )  ( locale  モジュール ) 
NORMALIZE _ WHITESPACE  ( doctest  モジュール ) 
normalvariate ( )  ( random モジュール ) 
normcase ( )  (os . path  モジュール ) 
normpath ( )  (os . path  モジュール ) 
not _() (operator  モジュール ) 
notationDecl ( )  ( DTDHandler  の メソッド ) 
NotationDeclHandler ( )  ( xmlparser  の メソッド ) 
notations  ( DocumentType  の 属性 ) 
notify ( )  ( Condition  の メソッド ) 
notifyAll ( )  ( Condition  の メソッド ) 
notimeout ( )  ( window  の メソッド ) 
NotStandaloneHandler ( )  ( xmlparser  の メソッド ) 
noutrefresh( )  ( window  の メソッド ) 
now ( )  ( datetime の メソッド ) 
NSIG  ( signal  モジュール ) 
nsmallest ( )  ( heapq モジュール ) 
ntohl ( )  ( socket  モジュール ) 
ntohs ( )  ( socket  モジュール ) 
numeric ( )  (unicodedata  モジュール ) 
nurbscurve ( )  ( gl  モジュール ) 
nurbssurface ( )  ( gl  モジュール ) 
nvarray ( )  ( gl  モジュール ) 
O_ APPEND  (os  モジュール ) 
O_ BINARY (os  モジュール ) 
O_ CREAT  (os  モジュール ) 
O_ DSYNC  (os  モジュール ) 
O_ EXCL  (os  モジュール ) 
O_ NDELAY (os  モジュール ) 
O_ NOCTTY (os  モジュール ) 
O_ NONB LOCK  (os  モジュール ) 
O_ RDONLY  (os  モジュール ) 
O_ RDWR  (os  モジュール ) 
O_ RSYNC  (os  モジュール ) 
O_ SYNC  (os  モジュール ) 
O_ TRUNC  (os  モジュール ) 
O_ WRONLY  (os  モジュール ) 
obufcount ( )  ( audio  device  の メソッド ) , [ Link ] 
obuffree ( )  ( audio  device  の メソッド ) 
octdigits  ( string  モジュール ) 
offset  ( ExpatError  の 属性 ) 
OK  ( curses  モジュール ) 
ok_builtin_modules  ( RExec  の 属性 ) 
ok _file_types ( RExec  の 属性 ) 
ok _ path  ( RExec  の 属性 ) 
ok_ posix _ names ( RExec  の 属性 ) 
ok_sys_ names ( RExec  の 属性 ) 
onecmd ( )  ( Cmd  の メソッド ) 
open ( )  ( aifc  モジュール ) 
open ( )  (anydbm  モジュール ) 
open ( )  ( cd  モジュール ) 
open ( ) ( codecs  モジュール ) 
open ( )  ( dbhash  モジュール ) 
open ( )  ( dbm  モジュール ) 
open ( )  ( dl  モジュール ) 
open ( )  ( dumbdbm  モジュール ) 
open ( )  ( gdbm  モジュール ) 
open ( )  (os  モジュール ) 
open ( )  (ossaudiodev モジュール ) 
open ( )  ( posixfile  モジュール ) 
open ( )  ( shelve  モジュール ) 
open ( )  ( sunau  モジュール ) 
open ( )  ( sunaudiodev モジュール ) 
open ( ) (tarfile  モジュール ) 
open ( )  ( Telnet  の メソッド ) 
open ( )  (Template  の メソッド ) 
open ( )  ( URLopener  の メソッド ) 
open _osfhandle ( )  ( msvcrt  モジュール ) 
open_unknown( )  ( URLopener  の メソッド ) 
opendir ( )  ( dircache  モジュール ) 
openfolder ( )  ( MH  の メソッド ) 
openfp ( )  ( sunau  モジュール ) 
openfp ( )  ( wave  モジュール ) 
OpenKey ( ) (_winreg  モジュール ) 
OpenKeyEx ( ) (_winreg  モジュール ) 
openlog ( )  ( syslog  モジュール ) 
openmessage ( )  ( Message  の メソッド ) 
openmixer ( )  (ossaudiodev モジュール ) 
openport ( )  ( al  モジュール ) 
openpty( )  (os  モジュール ) 
openpty( )  (pty  モジュール ) 
operator  ( 組み込 み  モジュール ) 
opname  ( dis  モジュール ) 
options  ( Example  の 属性 ) 
options ( )  ( Safe ConfigParser  の メソッド ) 
optionxform ( )  ( Safe ConfigParser  の メソッド ) 
optparse  ( standard  モジュール ) 
or _() (operator  モジュール ) 
ordered_attributes  ( xmlparser  の 属性 ) 
os  ( standard  モジュール ) os  ( 標準  モジュール ) , [ Link ] 
os . path  (standard  モジュール ) 
ossaudiodev ( 組み込 み  モジュール ) 
output( )  ( Base Cookie  の メソッド ) 
output( )  ( Morsel  の メソッド ) 
output_ charset  (email . Charset  モジュール ) 
output_ charset ( )  ( NullTranslations  の メソッド ) 
output_codec ( email . Charset  モジュール ) 
output_difference ( )  ( OutputChecker  の メソッド ) 
OutputString ( )  ( Morsel  の メソッド ) 
OutputType  ( cStringIO  モジュール ) 
Overflow  ( decimal  の クラス ) 
overlay ( )  ( window  の メソッド ) 
overwrite ( )  ( window  の メソッド ) 
P _ DETACH  (os  モジュール ) 
P_ NOWAIT  (os  モジュール ) 
P_ NOWAITO  (os  モジュール ) 
P _OVERLAY (os  モジュール ) 
P _ WAIT  (os  モジュール ) 
pack ( )  ( struct  モジュール ) 
pack_array ( )  ( Packer  の メソッド ) 
pack _bytes ( )  ( Packer  の メソッド ) 
pack_ double ( )  ( Packer  の メソッド ) 
pack _farray ( )  ( Packer  の メソッド ) 
pack _float ( )  ( Packer  の メソッド ) 
pack _ fopaque ( )  ( Packer  の メソッド ) 
pack _fstring ( )  ( Packer  の メソッド ) 
pack _ list ( )  ( Packer  の メソッド ) 
pack _opaque ( )  ( Packer  の メソッド ) 
pack _string ( )  ( Packer  の メソッド ) 
PAGER  ( 環境 変数 ) 
pair_content ( )  ( curses  モジュール ) 
pair_number ( )  ( curses  モジュール ) 
pardir (os  モジュール ) 
parent  ( BaseHandler  の 属性 ) 
parentNode  ( Node  の 属性 ) 
paretovariate ( )  ( random モジュール ) 
parse ( )  ( cgi モジュール ) 
parse ( ) ( compiler  モジュール ) 
parse ( )  ( DocTest Parser  の メソッド )  parse ( )  ( Parser  の メソッド ) 
parse ( )  ( RobotFileParser  の メソッド ) 
parse ( )  ( xml . dom. minidom モジュール ) 
parse ( )  ( xml . dom. pulldom モジュール ) 
parse ( )  ( xml . sax  モジュール ) 
Parse ( )  ( xmlparser  の メソッド ) 
parse ( )  ( XMLReader  の メソッド ) 
parse_and_ bind ( )  ( readline  モジュール ) 
parse_header ( )  ( cgi モジュール ) 
parse_multipart ( )  ( cgi モジュール ) 
parse_qs( )  ( cgi モジュール ) 
parse_qsl( )  ( cgi モジュール ) 
parseaddr( )  (email .Utils  モジュール ) 
parseaddr( )  ( rfc 822  モジュール ) 
parsedate ( )  (email .Utils  モジュール ) 
parsedate ( )  ( rfc 822  モジュール ) 
parsedate_tz ( )  (email .Utils  モジュール ) 
parsedate_tz ( )  ( rfc 822  モジュール ) 
parseFile ( ) ( compiler  モジュール ) 
ParseFile ( )  ( xmlparser  の メソッド ) 
ParseFlags( )  ( imaplib  モジュール ) 
parseframe( )  ( CD  parser  の メソッド ) 
parser  ( 組み込 み  モジュール ) 
ParserCreate ( )  ( xml . parsers . expat  モジュール ) 
parsesequence ( )  ( Folder  の メソッド ) 
parsestr ( )  ( Parser  の メソッド ) 
parseString ( )  ( xml . dom. minidom モジュール ) 
parseString ( )  ( xml . dom. pulldom モジュール ) 
parseString ( )  ( xml . sax  モジュール ) 
partial ( )  ( IMAP 4_stream  の メソッド ) 
pass_()  ( POP 3 _ SSL  の メソッド ) 
path  ( Base HTTPRequestHandler  の 属性 ) 
path  ( Cookie  の 属性 ) 
path (os  モジュール ) 
path  ( sys  モジュール ) 
PATH  ( 環境 変数 ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
path_ return_ok ( )  ( CookiePolicy  の メソッド ) 
pathconf ( )  (os  モジュール ) 
pathconf_ names (os  モジュール ) 
pathname 2url( )  ( urllib  モジュール ) 
pathsep (os  モジュール ) 
pattern ( RegexObject  の 属性 ) 
pause ( )  ( signal  モジュール ) 
PAUSED  ( cd  モジュール ) 
pdb  (standard  モジュール ) 
pformat ( )  ( pprint  モジュール ) 
pformat ( )  ( PrettyPrinter  の メソッド ) 
pi  ( cmath  モジュール ) 
pi  ( math  モジュール ) 
pick ( )  ( gl  モジュール ) 
pickle ( ) ( copy _ reg  モジュール ) 
pickle  ( standard  モジュール )  pickle  ( 標準  モジュール ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
pid  ( Popen  の 属性 ) 
pid  ( Popen 4  の 属性 ) 
pipe ( )  (os  モジュール ) 
pipes ( standard  モジュール ) 
PKG _ DIRECTORY ( imp  モジュール ) 
pkgutil  ( standard  モジュール ) 
platform ( )  ( platform  モジュール ) 
platform  ( standard  モジュール ) 
platform  ( sys  モジュール ) 
play ( )  ( CD  player  の メソッド ) 
playabs ( )  ( CD  player  の メソッド ) 
PLAYING ( cd  モジュール ) 
PlaySound ( )  ( winsound  モジュール ) 
playtrack ( )  ( CD  player  の メソッド ) 
playtrackabs ( )  ( CD  player  の メソッド ) 
plock ( )  (os  モジュール ) 
plus ( )  ( Context  の メソッド ) 
pm ( )  ( pdb  モジュール ) 
pnum  ( cd  モジュール ) 
poll ( )  ( LogRecord  の メソッド ) 
poll ( )  ( Popen  の メソッド ) 
poll ( )  ( Popen 4  の メソッド ) 
poll ( ) ( select  モジュール ) 
pop ( )  ( array  の メソッド ) 
pop ( )  ( fifo  の メソッド ) 
pop ( )  ( MultiFile  の メソッド ) 
pop ( )  ( SystemRandom  の メソッド ) 
pop _ font ( )  ( formatter  の メソッド ) 
pop _margin ( )  ( formatter  の メソッド ) 
pop _source ( )  ( shlex  の メソッド ) 
pop_style ( )  ( formatter  の メソッド ) 
popen ( )  (os  モジュール ) 
popen ( )  ( platform  モジュール ) 
popen 2 ( )  (os  モジュール ) 
popen 2 ( )  ( popen 2  モジュール ) 
popen 2  ( standard  モジュール ) 
popen 3 ( )  (os  モジュール ) 
popen 3 ( )  ( popen 2  モジュール ) 
popen 4 ( )  (os  モジュール ) 
popen 4 ( )  ( popen 2  モジュール ) 
popleft ( )  ( SystemRandom  の メソッド ) 
poplib  (standard  モジュール ) 
port ( Cookie  の 属性 ) 
port_specified  ( Cookie  の 属性 ) 
posix  ( TarFile  の 属性 ) 
posix  ( 組み込 み  モジュール ) 
posixfile  ( 組み込 み  モジュール ) 
post ( )  ( audio  device  の メソッド ) 
post ( )  ( NNTPDataError  の メソッド ) 
post _mortem ( )  ( pdb  モジュール ) 
post cmd ( )  ( Cmd  の メソッド ) 
postloop ( )  ( Cmd  の メソッド ) 
pow ( )  ( math  モジュール ) 
pow ( )  (operator  モジュール ) 
power ( )  ( Context  の メソッド ) 
pprint ( )  ( pprint  モジュール ) 
pprint ( )  ( PrettyPrinter  の メソッド ) 
pprint  ( standard  モジュール ) 
prcal ( )  ( calendar  モジュール ) 
preamble  ( email . Message  モジュール ) 
precmd ( )  ( Cmd  の メソッド ) 
prefix  ( Attr  の 属性 ) 
preloop ( )  ( Cmd  の メソッド ) 
preorder ( )  ( ASTVisitor  の メソッド ) 
prepare_ input _source ( )  ( xml . sax . saxutils  モジュール ) 
prepend ( )  (Template  の メソッド ) 
preventremoval ( )  ( CD  player  の メソッド ) 
previous ( )  ( dbhash  の メソッド ) 
previous ( )  ( Queue  の メソッド ) 
previous Sibling  ( Node  の 属性 ) 
print_ callees ( )  ( Stats  の メソッド ) 
print_ callers ( )  ( Stats  の メソッド ) 
print_directory ( )  ( cgi モジュール ) 
print_environ ( )  ( cgi モジュール ) 
print_environ_usage ( )  ( cgi モジュール ) 
print _exception ( )  ( traceback  モジュール ) 
print _ form ( )  ( cgi モジュール ) 
print_last ( )  ( traceback  モジュール ) 
print_stack ( )  ( traceback  モジュール ) 
print_stats ( )  ( Stats  の メソッド ) 
print_tb ( )  ( traceback  モジュール ) 
printable  ( string  モジュール ) 
printdir ( )  ( ZipFile  の メソッド ) 
prmonth ( )  ( calendar  モジュール ) 
process _message ( )  ( SMTP Server  の メソッド ) 
processing Instruction ( )  ( ContentHandler  の メソッド ) 
Processing InstructionHandler ( )  ( xmlparser  の メソッド ) 
processor ( )  ( platform  モジュール ) 
profile  ( standard  モジュール ) 
prompt  ( Cmd  の 属性 ) 
prompt _user_ passwd( )  ( FancyURLopener  の メソッド ) 
propagate ( logging  モジュール ) 
property_ declaration_handler  ( xml . sax . handler  モジュール ) 
property_ dom_node  ( xml . sax . handler  モジュール ) 
property _ lexical _handler  ( xml . sax . handler  モジュール ) 
property _ xml_string  ( xml . sax . handler  モジュール ) 
protocol_ version  ( Base HTTPRequestHandler  の 属性 ) 
PROTOCOL _ VERSION  ( IMAP 4_stream  の 属性 ) 
proxy ( )  ( weakref  モジュール ) 
ProxyType ( weakref  モジュール ) 
ProxyTypes ( weakref  モジュール ) 
prstr ( )  ( fm  モジュール ) 
ps 1  ( sys  モジュール ) 
ps 2  ( sys  モジュール ) 
pstats  ( 標準  モジュール ) 
ptime ( cd  モジュール ) 
pty ( standard  モジュール ) 
punctuation  ( string  モジュール ) 
push ( )  ( async _ chat  の メソッド ) 
push ( )  ( fifo  の メソッド ) 
push ( )  ( Interactive Console  の メソッド ) 
push ( )  ( MultiFile  の メソッド ) 
push_alignment ( )  ( formatter  の メソッド ) 
push_ font ( )  ( formatter  の メソッド ) 
push_margin ( )  ( formatter  の メソッド ) 
push_source ( )  ( shlex  の メソッド ) 
push_style ( )  ( formatter  の メソッド ) 
push_token ( )  ( shlex  の メソッド ) 
push_with _producer ( )  ( async _ chat  の メソッド ) 
put( )  ( Queue  の メソッド ) 
put_nowait( )  ( Queue  の メソッド ) 
putch ( )  ( msvcrt  モジュール ) 
putenv ()  (os  モジュール ) 
putheader ( )  ( HTTPSConnection  の メソッド ) 
putp ( )  ( curses  モジュール ) 
putrequest ( )  ( HTTPSConnection  の メソッド ) 
putsequences ( )  ( Folder  の メソッド ) 
putwin( )  ( window  の メソッド ) 
pwlcurve ( )  ( gl  モジュール ) 
py _ compile  ( standard  モジュール ) 
PY _ COMPILED  (imp  モジュール ) 
PY _ FROZEN  ( imp  モジュール ) 
PY _ RESO URCE  (imp  モジュール ) 
PY _ SOURCE  (imp  モジュール ) 
pyclbr ( standard  モジュール ) 
pydoc ( standard  モジュール ) 
pyexpat  ( 組み込 み  モジュール ) 
python_build ( )  ( platform  モジュール ) 
python_compiler ( )  ( platform  モジュール ) 
PYTHON _ DOM ( 環境 変数 ) 
python_version ( )  ( platform  モジュール ) 
python_version_tuple ( )  ( platform  モジュール ) 
PYTHON DOCS  ( 環境 変数 ) 
PYTHONPATH  ( 環境 変数 ) , [ Link ] , [ Link ] , [ Link ] 
PYTHON STARTUP  ( 環境 変数 ) , [ Link ] , [ Link ] 
PYTHONY 2 K  ( 環境 変数 ) , [ Link ] , [ Link ] 
PyZipFile  ( zipfile  の クラス ) 
qdevice ( )  ( fl  モジュール ) 
qenter ( )  ( fl  モジュール ) 
qiflush ( )  ( curses  モジュール ) 
qread ( )  ( fl  モジュール ) 
qreset ( )  ( fl  モジュール ) 
qsize ( )  ( Queue  の メソッド ) 
qtest ( )  ( fl  モジュール ) 
quantize ( )  ( Context  の メソッド ) 
quantize ( )  ( Decimal  の メソッド ) 
Query InfoKey ( ) (_winreg  モジュール ) 
query params ( )  ( al  モジュール ) 
Query Value ( ) (_winreg  モジュール ) 
Query ValueEx ( ) (_winreg  モジュール ) 
Queue  ( standard  モジュール ) 
quick_ratio ( )  ( Sequence Matcher  の メソッド ) 
quit ( )  ( FTP  の メソッド ) 
quit ( )  ( NNTPDataError  の メソッド ) 
quit ( )  ( POP 3 _ SSL  の メソッド ) 
quit ( )  ( SMTP  の メソッド ) 
quopri ( standard  モジュール ) 
quote ( )  (email .Utils  モジュール ) 
quote ( )  ( rfc 822  モジュール ) 
quote ( )  ( urllib  モジュール ) 
QUOTE _ ALL  ( csv  モジュール ) 
QUOTE _ MINIMAL  ( csv  モジュール ) 
QUOTE _ NONE  ( csv  モジュール ) 
QUOTE _ NONNUMERIC  ( csv  モジュール ) 
quote_plus ( )  ( urllib  モジュール ) 
quoteattr ( )  ( xml . sax . saxutils  モジュール ) 
quotechar  ( Dialect  の 属性 ) 
quotes ( shlex  の 属性 ) 
quoting  ( Dialect  の 属性 ) 
r_eval ( )  ( RExec  の メソッド ) 
r_ exec ( )  ( RExec  の メソッド ) 
r_ execfile ( )  ( RExec  の メソッド ) 
r_import ( )  ( RExec  の メソッド ) 
R _ OK  (os  モジュール ) 
r_ open ( )  ( RExec  の メソッド ) 
r_reload ( )  ( RExec  の メソッド ) 
r_unload ( )  ( RExec  の メソッド ) 
radians ( )  ( math  モジュール ) 
radians ( ) ( turtle  モジュール ) 
RADIXCHAR  ( locale  モジュール ) 
randint ( )  ( random モジュール ) 
randint ( )  ( whrandom モジュール ) 
random( )  ( random モジュール ) 
random ( standard  モジュール ) 
random( )  ( whrandom モジュール ) 
randrange ( )  ( random モジュール ) 
ratecv ()  ( audioop  モジュール ) 
ratio ( )  ( Sequence Matcher  の メソッド ) 
raw ( )  ( curses  モジュール ) 
raw _ input ( )  ( Interactive Console  の メソッド ) 
raw _ input ( )  ( 組み込 み 関数 ) 
re  ( MatchObject  の 属性 ) 
re  ( standard  モジュール )  re  ( 標準  モジュール ) , [ Link ] , [ Link ] 
read ( )  ( array  の メソッド ) 
read ( )  ( audio  device  の メソッド ) , [ Link ] 
read ( )  ( BZ 2File  の メソッド ) 
read ( )  ( Chunk  の メソッド ) 
read ( )  ( file  の メソッド ) 
read ( )  ( HTTPSConnection  の メソッド ) 
read ( )  ( IMAP 4_stream  の メソッド ) 
read ( )  ( imgfile  モジュール ) 
read ( )  ( LogRecord  の メソッド ) 
read ( )  ( MimeTypes  の メソッド ) 
read ( )  ( MultiFile  の メソッド )  read ( )  (os  モジュール ) 
read ( )  ( Queue  の メソッド ) 
read ( )  ( RobotFileParser  の メソッド ) 
read ( )  ( Safe ConfigParser  の メソッド ) 
read ( )  ( StreamReader  の メソッド ) 
read ( )  ( ZipFile  の メソッド ) 
read_all ( )  ( Telnet  の メソッド ) 
read _byte ( )  ( Queue  の メソッド ) 
read _eager ( )  ( Telnet  の メソッド ) 
read _ history _ file ( )  ( readline  モジュール ) 
read _ init_file ( )  ( readline  モジュール ) 
read _lazy ( )  ( Telnet  の メソッド ) 
read _mime_types ( )  ( mimetypes  モジュール ) 
read _sb_data ( )  ( Telnet  の メソッド ) 
read _some( )  ( Telnet  の メソッド ) 
read_token ( )  ( shlex  の メソッド ) 
read _until ( )  ( Telnet  の メソッド ) 
read _ very _ eager ( )  ( Telnet  の メソッド ) 
read _ very _ lazy ( )  ( Telnet  の メソッド ) 
readable ( )  ( async _ chat  の メソッド ) 
readable ( )  ( dispatcher  の メソッド ) 
readda ( )  ( CD  player  の メソッド ) 
reader ( )  ( csv  モジュール ) 
readfp( )  ( MimeTypes  の メソッド ) 
readfp( )  ( Safe ConfigParser  の メソッド ) 
readframes( )  ( aifc  の メソッド ) 
readframes( )  ( AU _read  の メソッド ) 
readframes( )  ( Wave _ read  の メソッド ) 
readline ( )  ( BZ 2File  の メソッド ) 
readline ( )  ( file  の メソッド ) 
readline ( )  ( IMAP 4_stream  の メソッド ) 
readline ( )  ( MultiFile  の メソッド ) 
readline ( )  ( Queue  の メソッド ) 
readline ( )  ( StreamReader  の メソッド ) 
readline  ( 組み込 み  モジュール )  readlines ( )  ( BZ 2File  の メソッド ) 
readlines ( )  ( file  の メソッド ) 
readlines ( )  ( MultiFile  の メソッド ) 
readlines ( )  ( StreamReader  の メソッド ) 
readlink ( )  (os  モジュール ) 
readmodule ( )  ( pyclbr  モジュール ) 
readmodule _ex ( )  ( pyclbr  モジュール ) 
readsamps ( )  ( audio  port  の メソッド ) 
readscaled ( )  ( imgfile  モジュール ) 
READ Y ( cd  モジュール ) 
real _quick_ratio ( )  ( Sequence Matcher  の メソッド ) 
realpath ( )  (os . path  モジュール ) 
reason  (httplib  モジュール ) 
reccontrols ( )  ( mixer  device  の メソッド ) 
recent ( )  ( IMAP 4_stream  の メソッド ) 
rectangle ( )  ( curses . text pad  モジュール ) 
recv ()  ( dispatcher  の メソッド ) 
recv ()  ( socket  の メソッド ) 
recvfrom ( )  ( socket  の メソッド ) 
redirect  redirect_request ( )  ( HTTPRedirectHandler  の メソッド ) 
redisplay ( )  ( readline  モジュール ) 
redraw _ form ( )  ( form  の メソッド ) 
redraw _object ( )  ( FORMS object  の メソッド ) 
redrawln ( )  ( window  の メソッド ) 
redraw win( )  ( window  の メソッド ) 
ReferenceType ( weakref  モジュール ) 
refilemessages ( )  ( Folder  の メソッド ) 
refill_buffer ( )  ( async _ chat  の メソッド ) 
refresh( )  ( window  の メソッド ) 
register ( )  ( atexit  モジュール ) 
register ( ) ( codecs  モジュール ) 
register_dialect ( )  ( csv  モジュール ) 
register_error ( ) ( codecs  モジュール ) 
register _function ( )  ( SimpleXMLR PCRequestHandler  の メソッド ) 
register _function ( )  ( SimpleXMLR PCServer  の メソッド ) 
register_ instance ( )  ( SimpleXMLR PCRequestHandler  の メソッド ) 
register_ instance ( )  ( SimpleXMLR PCServer  の メソッド ) 
register_ introspection_functions ( )  ( SimpleXMLR PCRequestHandler  の メソッド ) , [ Link ] 
register_multicall_functions ( )  ( SimpleXMLR PCRequestHandler  の メソッド ) , [ Link ] 
register _optionflag ( )  ( doctest  モジュール ) 
register DOMImplementation ( )  ( xml . dom モジュール ) 
RegLoadKey ( ) (_winreg  モジュール ) 
release ( )  ( Condition  の メソッド ) 
release ( )  ( Semaphore  の メソッド ) 
release ( )  ( Text box  の メソッド ) 
release ( )  ( Timer  の メソッド ) , [ Link ] 
release_lock ( )  (imp  モジュール ) 
reload ( )  (built - in function )  reload ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
remainder ( )  ( Context  の メソッド ) 
remainder_near ( )  ( Context  の メソッド ) 
remainder_near ( )  ( Decimal  の メソッド ) 
remove ( )  ( array  の メソッド ) 
remove_ history _ item ( )  ( readline  モジュール ) 
remove_option ( )  ( Safe ConfigParser  の メソッド ) 
remove_ section ( )  ( Safe ConfigParser  の メソッド ) 
removeAttribute ( )  ( Element  の メソッド ) 
removeAttributeNode ( )  ( Element  の メソッド ) 
removeAttributeNS ( )  ( Element  の メソッド ) 
removecallback ( )  ( CD  parser  の メソッド ) 
removeChild ( )  ( Node  の メソッド ) 
removedirs ( )  (os  モジュール ) 
removeFilter ( )  ( Text box  の メソッド ) , [ Link ] 
removeHandler ( )  ( Text box  の メソッド ) 
removemessages ( )  ( Folder  の メソッド ) 
rename ( )  ( FTP  の メソッド ) 
rename ( )  ( IMAP 4_stream  の メソッド ) 
rename ( )  (os  モジュール ) 
renames( )  (os  モジュール ) 
reorganize ( )  ( gdbm  モジュール ) 
repeat ( )  (itertools  モジュール ) 
repeat ( )  (operator  モジュール ) 
repeat ( )  ( Timer  の メソッド ) 
replace ( )  ( date  の メソッド ) 
replace ( )  ( datetime の メソッド ) 
replace ( )  ( string  の メソッド ) 
replace ( )  ( string  モジュール ) 
replace ( )  ( Text box  の メソッド ) 
replace ( ) ( time の メソッド ) 
replace _errors ( ) ( codecs  モジュール ) 
replace _ header ( )  ( Message  の メソッド ) 
replace _ history _ item ( )  ( readline  モジュール ) 
replace _ whitespace  ( Text Wrapper  の 属性 ) 
replace Child ( )  ( Node  の メソッド ) 
report ( )  ( dircmp  の メソッド ) 
REPORT _ CDIFF  ( doctest  モジュール ) 
report_failure ( )  ( DocTestRunner  の メソッド ) 
report_full _closure ( )  ( dircmp  の メソッド ) 
REPORT _ NDIFF  ( doctest  モジュール ) 
REPORT _ ONLY _ FIRST _ FAILURE  ( doctest  モジュール ) 
report_ partial_closure ( )  ( dircmp  の メソッド ) 
report_start ( )  ( DocTestRunner  の メソッド ) 
report_success ( )  ( DocTestRunner  の メソッド ) 
REPORT _ UDIFF  ( doctest  モジュール ) 
report_unbalanced ( )  ( SGMLParser  の メソッド ) 
report_unexpected _exception ( )  ( DocTestRunner  の メソッド ) 
REPORTING_ FLAGS  ( doctest  モジュール ) 
repr ( )  ( Repr  の メソッド ) 
repr ( )  ( repr  モジュール ) 
repr ( standard  モジュール ) 
repr 1 ( )  ( Repr  の メソッド ) 
request ( )  ( HTTPSConnection  の メソッド ) 
request _ version  ( Base HTTPRequestHandler  の 属性 ) 
requires ( )  ( test . test _ support  モジュール ) 
reserved  ( Zip Info  の 属性 ) 
reset ( )  ( audio  device  の メソッド ) 
reset ( )  ( DOMEventStream  の メソッド ) 
reset ( )  ( IncrementalParser  の メソッド ) 
reset ( )  ( Packer  の メソッド ) 
reset ( )  ( SGMLParser  の メソッド )  reset ( )  (statcache  モジュール ) 
reset ( )  ( StreamReader  の メソッド ) 
reset ( )  ( StreamWriter  の メソッド ) 
reset ( )  (Template  の メソッド )  reset ( ) ( turtle  モジュール ) 
reset ( )  ( Unpacker  の メソッド ) 
reset ( )  ( XMLParser  の メソッド ) 
reset_prog_mode ( )  ( curses  モジュール ) 
reset_shell_ mode ( )  ( curses  モジュール ) 
resetbuffer ( )  ( Interactive Console  の メソッド ) 
resetlocale ( )  ( locale  モジュール ) 
resetparser ( )  ( CD  parser  の メソッド ) 
resetwarnings ( )  ( warnings  モジュール ) 
resize ( )  ( Queue  の メソッド ) 
resolution  ( date  の 属性 ) 
resolution  ( datetime  の 属性 ) 
resolution  ( time  の 属性 ) 
resolution  ( timedelta  の 属性 ) 
resolveEntity ( )  ( EntityResolver  の メソッド ) 
resource  ( 組み込 み  モジュール ) 
response ( )  ( IMAP 4_stream  の メソッド ) 
responses ( Base HTTPRequestHandler  の 属性 ) 
restore ( )  ( difflib  モジュール ) 
retr ( )  ( POP 3 _ SSL  の メソッド ) 
retrbinary ( )  ( FTP  の メソッド ) 
retrieve ( )  ( URLopener  の メソッド ) 
retrlines ( )  ( FTP  の メソッド ) 
return_ok ( )  ( CookiePolicy  の メソッド ) 
returncode  ( Popen  の 属性 ) 
returns_unicode  ( xmlparser  の 属性 ) 
reverse ( )  ( array  の メソッド ) 
reverse ( )  ( audioop  モジュール ) 
reverse_order ( )  ( Stats  の メソッド ) 
revert ( )  ( File CookieJar  の メソッド ) 
rewind ( )  ( aifc  の メソッド ) 
rewind ( )  ( AU _read  の メソッド ) 
rewind ( )  ( Wave _ read  の メソッド ) 
rewindbody ( )  ( AddressList  の メソッド ) 
rexec  ( standard  モジュール ) 
rexec  ( 標準  モジュール ) 
rfc 296 5  ( LWPCookieJar  の 属性 ) 
rfc 822  ( standard  モジュール )  rfc 822  ( 標準  モジュール ) 
rfile  ( Base HTTPRequestHandler  の 属性 ) 
rfind ( )  ( string  の メソッド ) 
rfind ( )  ( string  モジュール ) 
rgb_to_hls ( ) ( colorsys  モジュール ) 
rgb_to_hsv () ( colorsys  モジュール ) 
rgb_to_yiq ( ) ( colorsys  モジュール ) 
rgbimg  ( 組み込 み  モジュール ) 
right ( ) ( turtle  モジュール ) 
right _ list  ( dircmp  の 属性 ) 
right _only ( dircmp  の 属性 ) 
rindex( )  ( string  の メソッド ) 
rindex( )  ( string  モジュール ) 
rjust ( )  ( string  の メソッド ) 
rjust ( )  ( string  モジュール ) 
rlcompleter  ( standard  モジュール ) 
rlecode _hqx ( ) ( binascii モジュール ) 
rledecode _hqx ( ) ( binascii モジュール ) 
RLIMIT _ AS  ( resource  モジュール ) 
RLIMIT _ CORE  ( resource  モジュール ) 
RLIMIT _ CPU  ( resource  モジュール ) 
RLIMIT _ DATA  ( resource  モジュール ) 
RLIMIT _ FSIZE  ( resource  モジュール ) 
RLIMIT _ MEM LOCK  ( resource  モジュール ) 
RLIMIT _ NOFILE  ( resource  モジュール ) 
RLIMIT _ NPROC  ( resource  モジュール ) 
RLIMIT _ OFILE  ( resource  モジュール ) 
RLIMIT _ RSS  ( resource  モジュール ) 
RLIMIT _ STACK  ( resource  モジュール ) 
RLIMIT _ VMEM  ( resource  モジュール ) 
RLock ( ) ( threading  モジュール ) 
rmd ( )  ( FTP  の メソッド ) 
rmdir ( )  (os  モジュール ) 
rms ( )  ( audioop  モジュール ) 
rmtree ( )  ( shutil  モジュール ) 
rnopen ( )  ( bsddb  モジュール ) 
robotparser  ( standard  モジュール ) 
rotate ( )  ( SystemRandom  の メソッド ) 
Rounded ( decimal  の クラス ) 
rpop ( )  ( POP 3 _ SSL  の メソッド ) 
rset ( )  ( POP 3 _ SSL  の メソッド ) 
rshift ( )  (operator  モジュール ) 
rsplit ( )  ( string  の メソッド ) 
rsplit ( )  ( string  モジュール ) 
rstrip ( )  ( string  の メソッド ) 
rstrip ( )  ( string  モジュール ) 
RTLD _ LAZY ( dl  モジュール ) 
RTLD _ NOW  ( dl  モジュール ) 
ruler  ( Cmd  の 属性 ) 
run ( )  ( DocTestRunner  の メソッド ) 
run ( )  ( pdb  モジュール ) 
run ( )  ( Profile  の メソッド ) 
run ( )  ( profile  モジュール ) 
run ( )  ( scheduler  の メソッド ) 
run ( )  ( TestCase  の メソッド ) 
run ( )  ( TestSuite  の メソッド ) 
run ( )  ( Thread  の メソッド ) 
run_docstring _ examples ( )  ( doctest  モジュール ) 
run_suite ( )  ( test . test _ support  モジュール ) 
run_unittest ( )  ( test . test _ support  モジュール ) 
runcall ( )  ( pdb  モジュール ) 
runcall ( )  ( Profile  の メソッド ) 
runcode ( )  ( Interactive Console  の メソッド ) 
runctx ( )  ( Profile  の メソッド ) 
runctx ( )  ( profile  モジュール ) 
runeval ( )  ( pdb  モジュール ) 
runsource ( )  ( Interactive Console  の メソッド ) 
RUSAGE _ BOTH  ( resource  モジュール ) 
RUSAGE _ CHILDREN  ( resource  モジュール ) 
RUSAGE _ SELF  ( resource  モジュール ) 
S  ( re  モジュール ) 
s _eval ( )  ( RExec  の メソッド ) 
s _ exec ( )  ( RExec  の メソッド ) 
s _ execfile ( )  ( RExec  の メソッド ) 
S _ IFMT ( )  (stat  モジュール ) 
S _ IMODE ( )  (stat  モジュール ) 
s _import ( )  ( RExec  の メソッド ) 
S _IS BLK ( )  (stat  モジュール ) 
S _ISCHR ( )  (stat  モジュール ) 
S _ ISDIR ( )  (stat  モジュール ) 
S _IS FIFO ( )  (stat  モジュール ) 
S _ ISLNK ( )  (stat  モジュール ) 
S _ ISREG ( )  (stat  モジュール ) 
S _ ISSOCK ( )  (stat  モジュール ) 
s_reload ( )  ( RExec  の メソッド ) 
s_unload ( )  ( RExec  の メソッド ) 
safe_substitute ( )  (Template  の メソッド ) 
saferepr ( )  ( pprint  モジュール ) 
same_files  ( dircmp  の 属性 ) 
same_quantum ( )  ( Context  の メソッド ) 
same_quantum ( )  ( Decimal  の メソッド ) 
samefile ( )  (os . path  モジュール ) 
sameopenfile ( )  (os . path  モジュール ) 
samestat ( )  (os . path  モジュール ) 
sample ( )  ( random モジュール ) 
save ( )  ( File CookieJar  の メソッド ) 
save_bgn ( )  ( HTMLParser  の メソッド ) 
save_end ( )  ( HTMLParser  の メソッド ) 
scanf ( )  ( re  モジュール ) 
sched  (standard  モジュール ) 
sci ( )  ( fpformat  モジュール ) 
script_ from _examples ( )  ( doctest  モジュール ) 
scroll ( )  ( window  の メソッド ) 
ScrolledText  ( standard  モジュール ) 
scrollok ( )  ( window  の メソッド ) 
search ( )  ( IMAP 4_stream  の メソッド ) 
search ( )  ( re  モジュール ) 
search ( )  ( RegexObject  の メソッド ) 
SEARCH _ ERROR  (imp  モジュール ) 
second  ( datetime  の 属性 ) 
second  ( time  の 属性 ) 
section_divider ( )  ( MultiFile  の メソッド ) 
sections ( )  ( Safe ConfigParser  の メソッド ) 
secure ( Cookie  の 属性 ) 
seed ( )  ( random モジュール ) 
seed ( )  ( whrandom  の メソッド ) 
seed ( )  ( whrandom モジュール ) 
seek ( )  ( BZ 2File  の メソッド ) 
seek ( )  ( CD  player  の メソッド ) 
seek ( )  ( Chunk  の メソッド ) 
seek ( )  ( file  の メソッド ) 
seek ( )  ( MultiFile  の メソッド ) 
seek ( )  ( Queue  の メソッド ) 
SEEK_ CUR  ( posixfile  モジュール ) 
SEEK_ END  ( posixfile  モジュール ) 
SEEK_ SET  ( posixfile  モジュール ) 
seekblock ( )  ( CD  player  の メソッド ) 
seektrack ( )  ( CD  player  の メソッド ) 
select ( )  ( gl  モジュール ) 
select ( )  ( IMAP 4_stream  の メソッド ) 
select ( ) ( select  モジュール ) 
select  ( 組み込 み  モジュール ) 
Semaphore ( ) ( threading  モジュール ) 
send ( )  ( DatagramHandler  の メソッド ) 
send ( )  ( dispatcher  の メソッド ) 
send ( )  ( HTTPSConnection  の メソッド ) 
send ( )  ( IMAP 4_stream  の メソッド ) 
send ( )  ( socket  の メソッド ) 
send ( )  ( SocketHandler  の メソッド ) 
send_error ( )  ( Base HTTPRequestHandler  の メソッド ) 
send_ flowing_ data ( )  ( writer  の メソッド ) 
send _header ( )  ( Base HTTPRequestHandler  の メソッド ) 
send_hor_rule ( )  ( writer  の メソッド ) 
send_ label_ data ( )  ( writer  の メソッド ) 
send_ line_break ( )  ( writer  の メソッド ) 
send_ literal_data ( )  ( writer  の メソッド ) 
send_ paragraph ( )  ( writer  の メソッド ) 
send_query ( )  ( gopherlib  モジュール ) 
send_ response ( )  ( Base HTTPRequestHandler  の メソッド ) 
send_selector ( )  ( gopherlib  モジュール ) 
sendall ( )  ( socket  の メソッド ) 
sendcmd ( )  ( FTP  の メソッド ) 
sendmail ( )  ( SMTP  の メソッド ) 
sendto ( )  ( socket  の メソッド ) 
sep (os  モジュール ) 
sequence 2 ast ( )  ( parser  モジュール ) 
sequence Includes( )  (operator  モジュール ) 
Sequence Matcher  ( difflib  の クラス ) 
server_ version  ( Base HTTPRequestHandler  の 属性 ) 
server_ version  ( Simple HTTPRequestHandler  の 属性 ) 
set ( )  ( Event  の メソッド ) 
set ( )  ( mixer  device  の メソッド ) 
set ( )  ( Morsel  の メソッド ) 
set ( )  ( Safe ConfigParser  の メソッド ) , [ Link ] 
set_allowed_domains ( )  ( DefaultCookiePolicy  の メソッド ) 
set_blocked_domains ( )  ( DefaultCookiePolicy  の メソッド ) 
set_boundary ( )  ( Message  の メソッド ) 
set_call_back ( )  ( FORMS object  の メソッド ) 
set_charset ( )  ( Message  の メソッド ) 
set_ completer ( )  ( readline  モジュール ) 
set_ completer_ delims( )  ( readline  モジュール ) 
set_cookie ( )  ( CookieJar  の メソッド ) 
set_cookie_ if_ok ( )  ( CookieJar  の メソッド ) 
set_debug ( )  ( gc  モジュール ) 
set_debuglevel ( )  ( FTP  の メソッド ) 
set_debuglevel ( )  ( HTTPSConnection  の メソッド ) 
set_debuglevel ( )  ( NNTPDataError  の メソッド ) 
set_debuglevel ( )  ( POP 3 _ SSL  の メソッド ) 
set_debuglevel ( )  ( SMTP  の メソッド ) 
set_debuglevel ( )  ( Telnet  の メソッド ) 
set_default_type ( )  ( Message  の メソッド ) 
set_event_ call_back ( )  ( fl  モジュール ) 
set_form_position ( )  ( form  の メソッド ) 
set_graphics_mode ( )  ( fl  モジュール ) 
set_history _ length ( )  ( readline  モジュール ) 
set_location ( )  ( Queue  の メソッド ) 
set_nonstandard_attr ( )  ( Cookie  の メソッド ) 
set_ok ( )  ( CookiePolicy  の メソッド ) 
set_option_negotiation _callback ( )  ( Telnet  の メソッド ) 
set_output_ charset ( )  ( NullTranslations  の メソッド ) 
set_param ( )  ( Message  の メソッド ) 
set_pasv ()  ( FTP  の メソッド ) 
set_payload ( )  ( Message  の メソッド ) 
set_policy ( )  ( CookieJar  の メソッド ) 
set_position ( )  ( Unpacker  の メソッド ) 
set_pre _ input _hook ( )  ( readline  モジュール ) 
set_proxy ( )  ( Request  の メソッド ) 
set_recsrc( )  ( mixer  device  の メソッド ) 
set_seq 1 ( )  ( Sequence Matcher  の メソッド ) 
set_seq 2 ( )  ( Sequence Matcher  の メソッド ) 
set_seqs ( )  ( Sequence Matcher  の メソッド ) 
set_server_ documentation ( )  ( DocXMLR PCRequestHandler  の メソッド ) , [ Link ] 
set_server_ name ( )  ( DocXMLR PCRequestHandler  の メソッド ) , [ Link ] 
set_server_title ( )  ( DocXMLR PCRequestHandler  の メソッド ) , [ Link ] 
set_spacing ( )  ( formatter  の メソッド ) 
set_startup_hook ( )  ( readline  モジュール ) 
set_terminator ( )  ( async _ chat  の メソッド ) 
set_threshold ( )  ( gc  モジュール ) 
set_trace ( )  ( pdb  モジュール ) 
set_type ( )  ( Message  の メソッド ) 
set_unittest _ reportflags( )  ( doctest  モジュール ) 
set_unixfrom ( )  ( Message  の メソッド ) 
set_url( )  ( RobotFileParser  の メソッド ) 
set_userptr ( )  ( Text box  の メソッド ) 
setacl ( )  ( IMAP 4_stream  の メソッド ) 
setAttribute ( )  ( Element  の メソッド ) 
setAttributeNode ( )  ( Element  の メソッド ) 
setAttributeNodeNS ( )  ( Element  の メソッド ) 
setAttributeNS ( )  ( Element  の メソッド ) 
SetBase ( )  ( xmlparser  の メソッド ) 
setblocking ( )  ( socket  の メソッド ) 
setByteStream ( )  ( InputSource  の メソッド ) 
setcbreak ( ) (tty  モジュール ) 
setchannels ( )  ( audio  configuration  の メソッド ) 
setCharacterStream ( )  ( InputSource  の メソッド ) 
setcheckinterval ( )  ( sys  モジュール ) 
setcomptype ( )  ( aifc  の メソッド ) 
setcomptype ( )  ( AU _write  の メソッド ) 
setcomptype ( )  ( Wave _write  の メソッド ) 
setconfig ( )  ( audio  port  の メソッド ) 
setContentHandler ( )  ( XMLReader  の メソッド ) 
setcontext ( )  ( decimal  モジュール ) 
setcontext ( )  ( MH  の メソッド ) 
setcurrent ( )  ( Folder  の メソッド ) 
setDaemon ( )  ( Thread  の メソッド ) 
setdefaultencoding ( )  ( sys  モジュール ) 
setdefaulttimeout ( )  ( socket  モジュール ) 
setdlopenflags( )  ( sys  モジュール ) 
setDocumentLocator ( )  ( ContentHandler  の メソッド ) 
setDTDHandler ( )  ( XMLReader  の メソッド ) 
setegid ( )  (os  モジュール ) 
setEncoding ( )  ( InputSource  の メソッド ) 
setEntityResolver ( )  ( XMLReader  の メソッド ) 
setErrorHandler ( )  ( XMLReader  の メソッド ) 
seteuid ( )  (os  モジュール ) 
setFeature ( )  ( XMLReader  の メソッド ) 
setfillpoint ( )  ( audio  port  の メソッド ) 
setfirstweekday ( )  ( calendar  モジュール ) 
setfloatmax ( )  ( audio  configuration  の メソッド ) 
setfmt ( )  ( audio  device  の メソッド ) 
setFormatter ( )  ( Text box  の メソッド ) 
setframerate ( )  ( aifc  の メソッド ) 
setframerate ( )  ( AU _write  の メソッド ) 
setframerate ( )  ( Wave _write  の メソッド ) 
setgid ( )  (os  モジュール ) 
setgroups( )  (os  モジュール ) 
setinfo ( )  ( audio  device  の メソッド ) 
setitem ( )  (operator  モジュール ) 
setlast ( )  ( Folder  の メソッド ) 
setLevel ( )  ( Text box  の メソッド ) , [ Link ] 
setliteral ( )  ( SGMLParser  の メソッド ) 
setliteral ( )  ( XMLParser  の メソッド ) 
setlocale ( )  ( locale  モジュール ) 
setLocale ( )  ( XMLReader  の メソッド ) 
setLoggerClass ( )  ( logging  モジュール ) 
setlogmask ( )  ( syslog  モジュール ) 
setmark ( )  ( aifc  の メソッド ) 
set Max Conns ( )  ( CacheFTPHandler  の メソッド ) 
setmode ( )  ( msvcrt  モジュール ) 
setName( )  ( Thread  の メソッド ) 
setnchannels ( )  ( aifc  の メソッド ) 
setnchannels ( )  ( AU _write  の メソッド ) 
setnchannels ( )  ( Wave _write  の メソッド ) 
setnframes( )  ( aifc  の メソッド ) 
setnframes( )  ( AU _write  の メソッド ) 
setnframes( )  ( Wave _write  の メソッド ) 
setnomoretags( )  ( SGMLParser  の メソッド ) 
setnomoretags( )  ( XMLParser  の メソッド ) 
setoption ( ) ( jpeg  モジュール ) 
setparameters ( )  ( audio  device  の メソッド ) 
setparams ( )  ( aifc  の メソッド ) 
setparams ( )  ( al  モジュール ) 
setparams ( )  ( AU _write  の メソッド ) 
setparams ( )  ( Wave _write  の メソッド ) 
setpath ( )  ( fm  モジュール ) 
setpgid ( )  (os  モジュール ) 
setpgrp ( )  (os  モジュール ) 
setpos( )  ( aifc  の メソッド ) 
setpos( )  ( AU _read  の メソッド ) 
setpos( )  ( Wave _ read  の メソッド ) 
setprofile ( )  ( sys  モジュール ) 
setprofile ( ) ( threading  モジュール ) 
set Property ( )  ( XMLReader  の メソッド ) 
setPublicId ()  ( InputSource  の メソッド ) 
setqueuesize ( )  ( audio  configuration  の メソッド ) 
setquota ( )  ( IMAP 4_stream  の メソッド ) 
setraw ( ) (tty  モジュール ) 
setrecursion limit ( )  ( sys  モジュール ) 
setregid ( )  (os  モジュール ) 
setreuid ( )  (os  モジュール ) 
setrlimit ( )  ( resource  モジュール ) 
sets ( standard  モジュール ) 
setsampfmt ( )  ( audio  configuration  の メソッド ) 
setsampwidth ( )  ( aifc  の メソッド ) 
setsampwidth ( )  ( AU _write  の メソッド ) 
setsampwidth ( )  ( Wave _write  の メソッド ) 
setscrreg ( )  ( window  の メソッド ) 
setsid ( )  (os  モジュール ) 
setslice ( )  (operator  モジュール ) 
setsockopt ( )  ( socket  の メソッド ) 
setstate ( )  ( random モジュール ) 
setSystemId ()  ( InputSource  の メソッド ) 
setsyx ( )  ( curses  モジュール ) 
setTarget ( )  ( MemoryHandler  の メソッド ) 
setTimeout ( )  ( CacheFTPHandler  の メソッド ) 
settimeout ( )  ( socket  の メソッド ) 
settrace ( )  ( sys  モジュール ) 
settrace ( ) ( threading  モジュール ) 
settscdump ( )  ( sys  モジュール ) 
setuid ( )  (os  モジュール ) 
setUp( )  ( TestCase  の メソッド ) 
setupterm ( )  ( curses  モジュール ) 
SetValue ( ) (_winreg  モジュール ) 
SetValueEx ( ) (_winreg  モジュール ) 
setwidth ( )  ( audio  configuration  の メソッド ) 
sgmllib  (standard  モジュール )  sgmllib  ( 標準  モジュール ) 
sha  ( 組み込 み  モジュール ) 
shelve  ( standard  モジュール ) 
shelve  ( 標準  モジュール ) 
shlex  ( standard  モジュール ) 
shortDescription ( )  ( TestCase  の メソッド ) 
shouldFlush ( )  ( BufferingHandler  の メソッド ) 
shouldFlush ( )  ( MemoryHandler  の メソッド ) 
show ( )  ( Text box  の メソッド ) 
show _ choice ( )  ( fl  モジュール ) 
show _file_selector ( )  ( fl  モジュール ) 
show _ form ( )  ( form  の メソッド ) 
show _ input ( )  ( fl  モジュール ) 
show _ message ( )  ( fl  モジュール ) 
show _object ( )  ( FORMS object  の メソッド ) 
show _question ( )  ( fl  モジュール ) 
showsyntaxerror ( )  ( Interactive Console  の メソッド ) 
showtraceback ( )  ( Interactive Console  の メソッド ) 
show warning ( )  ( warnings  モジュール ) 
shuffle ( )  ( random モジュール ) 
shutdown( )  ( IMAP 4_stream  の メソッド ) 
shutdown( )  ( logging  モジュール ) 
shutdown( )  ( socket  の メソッド ) 
shutil  ( standard  モジュール ) 
SIG *  ( signal  モジュール ) 
SIG _ DFL  ( signal  モジュール ) 
SIG _ IGN  ( signal  モジュール ) 
signal ( )  ( signal  モジュール ) 
signal  ( 組み込 み  モジュール ) , [ Link ] 
SimpleXMLR PCServer  ( standard  モジュール ) 
sin ( )  ( cmath  モジュール ) 
sin ( )  ( math  モジュール ) 
sinh( )  ( cmath  モジュール ) 
sinh( )  ( math  モジュール ) 
site  ( standard  モジュール ) 
sitecustomize (  モジュール ) , [ Link ] 
size ( )  ( FTP  の メソッド ) 
size ( )  ( Queue  の メソッド ) 
size ( Tar Info  の 属性 ) 
sizeofimage ( )  ( rgbimg  モジュール ) 
skip ( )  ( Chunk  の メソッド ) 
skipinitialspace  ( Dialect  の 属性 ) 
skippedEntity ( )  ( ContentHandler  の メソッド ) 
slave ( )  ( NNTPDataError  の メソッド ) 
sleep ( ) ( time モジュール ) 
slice ( )  (built - in function ) slice ( )  ( 組み込 み 関数 ) , [ Link ] 
SliceType (types  モジュール ) 
smtpd  (standard  モジュール ) 
smtplib  (standard  モジュール ) 
SND _ ALIAS  ( winsound  モジュール ) 
SND _ ASYNC  ( winsound  モジュール ) 
SND _ FILENAME  ( winsound  モジュール ) 
SND _ LOOP  ( winsound  モジュール ) 
SND _ MEMORY ( winsound  モジュール ) 
SND _ NODEFAULT  ( winsound  モジュール ) 
SND _ NOSTOP  ( winsound  モジュール ) 
SND _ NOWAIT  ( winsound  モジュール ) 
SND _ PURGE  ( winsound  モジュール ) 
sndhdr ( standard  モジュール ) 
sniff ( )  ( Sniffer  の メソッド ) 
SO_*( socket  モジュール ) 
SOCK _ DG RAM  ( socket  モジュール ) 
SOCK _ RAW  ( socket  モジュール ) 
SOCK _ RDM  ( socket  モジュール ) 
SOCK _ SEQ PACKET  ( socket  モジュール ) 
SOCK_ STREAM  ( socket  モジュール ) 
socket ( )  ( IMAP 4_stream  の メソッド ) 
socket ( )  ( socket  モジュール ) 
socket ( SocketServer  protocol )  socket  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] 
socketpair( )  ( socket  モジュール ) 
SocketServer  ( standard  モジュール ) 
SocketType  ( socket  モジュール ) 
softspace  ( file  の 属性 ) 
SOL _*( socket  モジュール ) 
SOMAX CONN  ( socket  モジュール ) 
sort ( )  ( IMAP 4_stream  の メソッド ) 
sort_stats ( )  ( Stats  の メソッド ) 
sortTest MethodsUsing  ( TestLoader  の 属性 ) 
source  ( Example  の 属性 ) 
source  ( shlex  の 属性 ) 
sourcehook ( )  ( shlex  の メソッド ) 
span ( )  ( MatchObject  の メソッド ) 
spawn( )  (pty  モジュール ) 
spawnl ( )  (os  モジュール ) 
spawnle ( )  (os  モジュール ) 
spawnlp ( )  (os  モジュール ) 
spawnlpe ( )  (os  モジュール ) 
spawnv ()  (os  モジュール ) 
spawnve ( )  (os  モジュール ) 
spawnvp( )  (os  モジュール ) 
spawnvpe ( )  (os  モジュール ) 
specified_attributes  ( xmlparser  の 属性 ) 
speed ( )  ( audio  device  の メソッド ) 
split ( )  (os . path  モジュール ) 
split ( )  ( re  モジュール ) 
split ( )  ( RegexObject  の メソッド ) 
split ( )  ( shlex  モジュール ) 
split ( )  ( string  の メソッド ) 
split ( )  ( string  モジュール ) 
splitdrive ( )  (os . path  モジュール ) 
splitext ( )  (os . path  モジュール ) 
splitfields ( )  ( string  モジュール ) 
splitlines ( )  ( string  の メソッド ) 
sprintf-style  formatting  sqrt ( )  ( cmath  モジュール ) 
sqrt ( )  ( Context  の メソッド ) 
sqrt ( )  ( Decimal  の メソッド ) 
sqrt ( )  ( math  モジュール ) 
ssl( )  ( IMAP 4_stream  の メソッド ) 
ssl( )  ( socket  モジュール ) 
ST _ ATIME  ( stat  モジュール ) 
ST _ CTIME  ( stat  モジュール ) 
ST _ DEV  ( stat  モジュール ) 
ST _ GID  ( stat  モジュール ) 
ST _INO ( stat  モジュール ) 
ST _ MODE  ( stat  モジュール ) 
ST _ MTIME  ( stat  モジュール ) 
ST _ NLINK  ( stat  モジュール ) 
ST _ SIZE  ( stat  モジュール ) 
ST _ UID  ( stat  モジュール ) 
stack ( )  ( inspect  モジュール ) 
standard_b 64decode ( )  ( base 64  モジュール ) 
standard_b 64encode ( )  ( base 64  モジュール ) 
standend ( )  ( window  の メソッド ) 
standout ( )  ( window  の メソッド ) 
starmap ( )  (itertools  モジュール ) 
start ( )  ( MatchObject  の メソッド ) 
start ( )  ( Profile  の メソッド ) 
start ( )  ( Thread  の メソッド ) 
start_color ( )  ( curses  モジュール ) 
start _new_thread ( ) ( thread  モジュール ) 
startbody ( )  ( MimeWriter  の メソッド ) 
StartCdata SectionHandler ( )  ( xmlparser  の メソッド ) 
StartDoctypeDeclHandler ( )  ( xmlparser  の メソッド ) 
startDocument ( )  ( ContentHandler  の メソッド ) 
startElement ( )  ( ContentHandler  の メソッド ) 
StartElementHandler ( )  ( xmlparser  の メソッド ) 
startElementNS ( )  ( ContentHandler  の メソッド ) 
startfile ( )  (os  モジュール ) 
startmultipartbody ( )  ( MimeWriter  の メソッド ) 
StartNamespace DeclHandler ( )  ( xmlparser  の メソッド ) 
startPrefix Mapping ( )  ( ContentHandler  の メソッド ) 
startswith ( )  ( string  の メソッド ) 
startTest ( )  ( Test Result  の メソッド ) 
starttls ( )  ( SMTP  の メソッド ) 
stat ( )  ( NNTPDataError  の メソッド ) 
stat ( )  (os  モジュール ) 
stat ( )  ( POP 3 _ SSL  の メソッド ) 
stat  ( standard  モジュール ) stat ( )  (statcache  モジュール ) 
stat  ( 標準  モジュール ) 
stat_float_times( )  (os  モジュール ) 
statcache ( standard  モジュール ) 
status  (httplib  モジュール ) 
status ( )  ( IMAP 4_stream  の メソッド ) 
statvfs ( )  (os  モジュール ) 
statvfs ( standard  モジュール ) 
statvfs  ( 標準  モジュール ) 
stderr  ( Popen  の 属性 ) 
stderr  ( sys  モジュール ) 
stdin  ( Popen  の 属性 ) 
stdin  ( sys  モジュール ) 
st dout  ( Popen  の 属性 )  st dout  ( sys  モジュール ) 
stereocontrols ( )  ( mixer  device  の メソッド ) 
STILL  ( cd  モジュール ) 
stop ( )  ( CD  player  の メソッド ) 
stop ( )  ( Profile  の メソッド ) 
stop ( )  ( Test Result  の メソッド ) 
stopListening ( )  ( logging  モジュール ) 
stopTest ( )  ( Test Result  の メソッド ) 
storbinary ( )  ( FTP  の メソッド ) 
store ( )  ( IMAP 4_stream  の メソッド ) 
storlines ( )  ( FTP  の メソッド ) 
str ( )  ( locale  モジュール ) 
strcoll ( )  ( locale  モジュール ) 
strerror ( )  (os  モジュール ) 
strftime( )  ( date  の メソッド ) 
strftime( )  ( datetime の メソッド ) 
strftime( ) ( time の メソッド ) 
strftime( ) ( time モジュール ) 
strict_domain ( LWPCookieJar  の 属性 ) 
strict_errors ( ) ( codecs  モジュール ) 
strict_ns_domain ( LWPCookieJar  の 属性 ) 
strict_ns_set_initial_ dollar  ( LWPCookieJar  の 属性 ) 
strict_ns_set_path  ( LWPCookieJar  の 属性 ) 
strict_ns_unverifiable ( LWPCookieJar  の 属性 ) 
strict_rfc 2965 _unverifiable ( LWPCookieJar  の 属性 ) 
string  ( MatchObject  の 属性 ) 
string  ( standard  モジュール )  string  ( 標準  モジュール ) , [ Link ] , [ Link ] 
StringIO  ( standard  モジュール ) 
stringprep  (standard  モジュール ) 
StringType (types  モジュール ) 
StringTypes(types  モジュール ) 
strip ( )  ( string  の メソッド ) 
strip ( )  ( string  モジュール ) 
strip_dirs ( )  ( Stats  の メソッド ) 
stripspaces  ( Text box  の 属性 ) 
strptime( ) ( time モジュール ) 
struct  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] 
struct_time( time モジュール ) 
strxfrm ( )  ( locale  モジュール ) 
sub ( )  (operator  モジュール ) 
sub ( )  ( re  モジュール ) 
sub ( )  ( RegexObject  の メソッド ) 
subdirs ( dircmp  の 属性 ) 
subn ( )  ( re  モジュール ) 
subn ( )  ( RegexObject  の メソッド ) 
Subnormal  ( decimal  の クラス ) 
subpad ( )  ( window  の メソッド ) 
subprocess  ( standard  モジュール ) 
subscribe ( )  ( IMAP 4_stream  の メソッド ) 
subsequent_indent  ( Text Wrapper  の 属性 ) 
substitute ( )  (Template  の メソッド ) 
substract ( )  ( Context  の メソッド ) 
subwin( )  ( window  の メソッド ) 
suffix _ map  ( mimetypes  モジュール ) , [ Link ] 
suite ( )  ( parser  モジュール ) 
suiteClass  ( TestLoader  の 属性 ) 
summarize ( )  ( DocTestRunner  の メソッド ) 
sunau  ( standard  モジュール ) 
SUN AUDIODEV  ( standard  モジュール ) 
sunaudiodev ( 組み込 み  モジュール ) , [ Link ]  SUN AUDIODEV  ( 標準  モジュール ) 
super  ( class descriptor  の 属性 ) 
supports_unicode _filenames (os . path  モジュール ) 
swapcase ( )  ( string  の メソッド ) 
swapcase ( )  ( string  モジュール ) 
sym ( )  (Tar Info  の メソッド ) 
sym_ name  (symbol  モジュール ) 
symbol  ( standard  モジュール ) 
symlink ( )  (os  モジュール ) 
sync ( )  ( audio  device  の メソッド ) 
sync ( )  ( dbhash  の メソッド ) 
sync ( )  ( gdbm  モジュール ) 
sync ( )  ( Queue  の メソッド ) , [ Link ] 
syncdown( )  ( window  の メソッド ) 
syncok ( )  ( window  の メソッド ) 
syncup ( )  ( window  の メソッド ) 
syntax _error ( )  ( XMLParser  の メソッド ) 
sys  ( 組み込 み  モジュール ) 
sys_ version  ( Base HTTPRequestHandler  の 属性 ) 
sysconf ( )  (os  モジュール ) 
sysconf_ names (os  モジュール ) 
syslog ( )  ( syslog  モジュール ) 
syslog  ( 組み込 み  モジュール ) 
system ( )  (os  モジュール ) 
system ( )  ( platform  モジュール ) 
system . list Methods ( )  ( Server Proxy  の メソッド ) 
system . methodHelp ( )  ( Server Proxy  の メソッド ) 
system . methodSignature ( )  ( Server Proxy  の メソッド ) 
system_alias ( )  ( platform  モジュール ) 
systemId  ( DocumentType  の 属性 ) 
T_ FMT  ( locale  モジュール ) 
T_ FMT _ AMPM  ( locale  モジュール ) 
tabnanny ( standard  モジュール ) 
tagName ( Element  の 属性 ) 
takewhile ( )  (itertools  モジュール ) 
tan ( )  ( cmath  モジュール ) 
tan ( )  ( math  モジュール ) 
tanh( )  ( cmath  モジュール ) 
tanh( )  ( math  モジュール ) 
TAR _ GZIPPED  (tarfile  モジュール ) 
TAR _ PLAIN (tarfile  モジュール ) 
tarfile  ( standard  モジュール ) 
TarFile  (tarfile  の クラス ) 
target  ( Processing Instruction  の 属性 ) 
tb_lineno( )  ( traceback  モジュール ) 
tcdrain ( )  ( termios  モジュール ) 
tcflow ( )  ( termios  モジュール ) 
tcflush ( )  ( termios  モジュール ) 
tcgetattr ( )  ( termios  モジュール ) 
tcgetpgrp ( )  (os  モジュール ) 
Tcl ( )  (Tkinter  モジュール ) 
TCP _*( socket  モジュール ) 
tcsendbreak ( )  ( termios  モジュール ) 
tcsetattr ( )  ( termios  モジュール ) 
tcsetpgrp ( )  (os  モジュール ) 
tearDown( )  ( TestCase  の メソッド ) 
tee ( )  (itertools  モジュール ) 
tell ( )  ( aifc  の メソッド ) , [ Link ] 
tell ( )  ( AU _read  の メソッド ) 
tell ( )  ( AU _write  の メソッド ) 
tell ( )  ( BZ 2File  の メソッド ) 
tell ( )  ( Chunk  の メソッド ) 
tell ( )  ( file  の メソッド ) 
tell ( )  ( MultiFile  の メソッド ) 
tell ( )  ( Queue  の メソッド ) 
tell ( )  ( Wave _ read  の メソッド ) 
tell ( )  ( Wave _write  の メソッド ) 
telnetlib  (standard  モジュール ) 
TEMP  ( 環境 変数 ) 
tempdir ( tempfile  モジュール ) 
tempfile  ( standard  モジュール ) 
template  ( string  の 属性 ) 
template  ( tempfile  モジュール ) 
tempnam ( )  (os  モジュール ) 
TemporaryFile ( )  ( tempfile  モジュール ) 
termattrs ( )  ( curses  モジュール ) 
termios  ( 組み込 み  モジュール ) 
termname ( )  ( curses  モジュール ) 
test ( )  ( mutex  の メソッド ) 
test  ( standard  モジュール ) 
test  ( UnexpectedException  の 属性 ) 
test . test _ support ( standard  モジュール ) 
testandset ( )  ( mutex  の メソッド ) 
testfile ( )  ( doctest  モジュール ) 
TESTFN  ( test . test _ support  モジュール ) 
test MethodPrefix  ( TestLoader  の 属性 ) 
testmod ( )  ( doctest  モジュール ) , [ Link ] 
tests ( imghdr モジュール ) 
testsource ( )  ( doctest  モジュール ) , [ Link ] 
testsRun  ( Test Result  の 属性 ) 
text domain ( )  ( gettext  モジュール ) 
THOUSEP  ( locale  モジュール ) 
thread ( )  ( IMAP 4_stream  の メソッド ) 
Thread  ( threading  の クラス ) 
thread  ( 組み込 み  モジュール ) 
threading  ( standard  モジュール ) 
tie ( )  ( fl  モジュール ) 
tigetflag ( )  ( curses  モジュール ) 
tigetnum ( )  ( curses  モジュール ) 
tigetstr ( )  ( curses  モジュール ) 
time ( datetime の クラス ) 
time( )  ( datetime の メソッド ) 
time( ) ( time モジュール ) 
time ( 組み込 み  モジュール )  Time2 Internaldate ( )  ( imaplib  モジュール ) 
timedelta ( datetime の クラス ) 
timegm ( )  ( calendar  モジュール ) 
timeit ( standard  モジュール ) 
timeit ( )  ( Timer  の メソッド ) 
timeout ( )  ( window  の メソッド ) 
Timer ( threading  の クラス ) 
times( )  (os  モジュール ) 
timetuple ( )  ( date  の メソッド ) 
timetuple ( )  ( datetime の メソッド ) 
timetz ( )  ( datetime の メソッド ) 
timezone  ( time モジュール ) 
title ( )  ( string  の メソッド ) 
Tix  ( standard  モジュール ) 
tix _ addbitmapdir ( ) ( tix Command  の メソッド ) 
tix _ cget ( ) ( tix Command  の メソッド ) 
tix_ configure ( ) ( tix Command  の メソッド ) 
tix _ filedialog ( ) ( tix Command  の メソッド ) 
tix _ getbitmap ( ) ( tix Command  の メソッド ) 
tix _ getimage ( ) ( tix Command  の メソッド ) 
TIX _ LIBRARY ( 環境 変数 ) 
tix _ option_get ( ) ( tix Command  の メソッド ) 
tix _ resetoptions ( ) ( tix Command  の メソッド ) 
Tkinter  ( standard  モジュール ) 
TMP  ( 環境 変数 ) 
TMP _ MAX  (os  モジュール ) 
TMPDIR  ( 環境 変数 ) 
tmpfile ( )  (os  モジュール ) 
tmpnam ( )  (os  モジュール ) 
to_eng_ string ( )  ( Context  の メソッド ) 
to_eng_ string ( )  ( Decimal  の メソッド ) 
to_ integral ( )  ( Context  の メソッド ) 
to_ integral ( )  ( Decimal  の メソッド ) 
to _sci_string ( )  ( Context  の メソッド ) 
to_splittable ( )  ( Charset  の メソッド ) 
To ASCII ( )  ( encodings . idna  モジュール ) 
tobuf ( )  (Tar Info  の メソッド ) 
tochild  ( Popen 4  の 属性 ) 
today ( )  ( date  の メソッド ) 
today ( )  ( datetime の メソッド ) 
tofile ( )  ( array  の メソッド ) 
togglepause ( )  ( CD  player  の メソッド ) 
tok_ name ( token  モジュール ) 
token  ( shlex  の 属性 ) 
token  ( standard  モジュール ) 
tokeneater ( ) (tabnanny  モジュール ) 
tokenize ( standard  モジュール ) 
tokenize ( ) ( tokenize  モジュール ) 
tolist ( )  ( array  の メソッド ) 
tolist ( )  ( AST  の メソッド ) 
tomono ( )  ( audioop  モジュール ) 
toordinal ( )  ( date  の メソッド ) 
toordinal ( )  ( datetime の メソッド ) 
top ( )  ( POP 3 _ SSL  の メソッド ) 
top ( )  ( Text box  の メソッド ) 
top _panel( )  ( curses . panel  モジュール ) 
toprettyxml ( )  ( Node  の メソッド ) 
tostereo ( )  ( audioop  モジュール ) 
tostring ( )  ( array  の メソッド ) 
totuple ( )  ( AST  の メソッド ) 
touchline ( )  ( window  の メソッド ) 
touchwin( )  ( window  の メソッド ) 
tounicode ( )  ( array  の メソッド ) 
ToUnicode ( )  ( encodings . idna  モジュール ) 
tovideo( )  ( imageop  モジュール ) 
toxml ( )  ( Node  の メソッド ) 
tparm ( )  ( curses  モジュール ) 
trace ( )  ( inspect  モジュール ) 
traceback  (standard  モジュール ) 
tracebacklimit  ( sys  モジュール ) 
TracebackType (types  モジュール ) 
tracer ( ) ( turtle  モジュール ) 
transfercmd ( )  ( FTP  の メソッド ) 
translate ( )  ( string  の メソッド ) 
translate ( )  ( string  モジュール ) 
translate _references ( )  ( XMLParser  の メソッド ) 
translation ( )  ( gettext  モジュール ) 
truediv ()  (operator  モジュール ) 
truncate ( )  ( file  の メソッド ) 
truth ( )  (operator  モジュール ) 
ttob ( )  ( imgfile  モジュール ) 
ttob ( )  ( rgbimg  モジュール ) 
tty ( standard  モジュール ) 
ttyname ( )  (os  モジュール ) 
tuple2ast ( )  ( parser  モジュール ) 
TupleType (types  モジュール ) 
turnoff_ sigfpe ( )  ( fpectl  モジュール ) 
turnon_sigfpe ( )  ( fpectl  モジュール ) 
turtle  ( standard  モジュール ) 
type  ( Tar Info  の 属性 ) type ( )  ( 組み込 み 関数 ) , [ Link ] 
typeahead ( )  ( curses  モジュール ) 
typecode ( array  の 属性 ) 
typed_subpart _iterator ( )  (email . Iterators  モジュール ) 
types ( standard  モジュール ) types ( 標準  モジュール ) , [ Link ] 
types_map  ( mimetypes  モジュール ) , [ Link ] 
TypeType (types  モジュール ) 
TZ  ( 環境 変数 ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
tzinfo  ( datetime の クラス ) 
tzinfo  ( datetime  の 属性 ) 
tzinfo  ( time  の 属性 ) 
tzname ( )  ( datetime の メソッド ) 
tzname ( ) ( time の メソッド ) , [ Link ] 
tzname ( time モジュール ) 
tzset ( ) ( time モジュール ) 
U  ( re  モジュール ) 
ugettext ( )  ( GNUTranslations  の メソッド ) 
ugettext ( )  ( NullTranslations  の メソッド ) 
uid ( )  ( IMAP 4_stream  の メソッド ) 
uid  (Tar Info  の 属性 ) 
uidl ( )  ( POP 3 _ SSL  の メソッド ) 
ulaw 2lin ( )  ( audioop  モジュール ) 
umask ( )  (os  モジュール ) 
uname ( )  (os  モジュール ) 
uname ( )  ( platform  モジュール ) 
uname  ( Tar Info  の 属性 ) 
UnboundMethodType (types  モジュール ) 
unconsumed_tail ( Queue  の 属性 ) 
unctrl ( )  ( curses  モジュール ) 
unctrl ( )  ( curses . ascii モジュール ) 
Underflow  ( decimal  の クラス ) 
undoc_header  ( Cmd  の 属性 ) 
unescape ( )  ( xml . sax . saxutils  モジュール ) 
unfreeze_ form ( )  ( form  の メソッド ) 
unfreeze_object ( )  ( FORMS object  の メソッド ) 
ungetch ( )  ( curses  モジュール ) 
ungetch ( )  ( msvcrt  モジュール ) 
ungetmouse ( )  ( curses  モジュール ) 
ungettext ( )  ( GNUTranslations  の メソッド ) 
ungettext ( )  ( NullTranslations  の メソッド ) 
unhexlify ( ) ( binascii モジュール ) 
UNICODE  ( re  モジュール ) 
unicodedata ( standard  モジュール ) 
UnicodeType (types  モジュール ) 
unidata_version  ( unicodedata  モジュール ) 
unified_diff ( )  ( difflib  モジュール ) 
uniform ( )  ( random モジュール ) 
uniform ( )  ( whrandom モジュール ) 
unittest  ( standard  モジュール ) 
unixfrom  ( AddressList  の 属性 ) 
unknown_charref ( )  ( SGMLParser  の メソッド ) 
unknown_charref ( )  ( XMLParser  の メソッド ) 
unknown_endtag ( )  ( SGMLParser  の メソッド ) 
unknown_endtag ( )  ( XMLParser  の メソッド ) 
unknown_entityref ( )  ( SGMLParser  の メソッド ) 
unknown_entityref ( )  ( XMLParser  の メソッド ) 
unknown_open ( )  ( BaseHandler  の メソッド ) 
unknown_open ( )  ( HTTPError Processor  の メソッド ) 
unknown_open ( )  ( UnknownHandler  の メソッド ) 
unknown_starttag ( )  ( SGMLParser  の メソッド ) 
unknown_starttag ( )  ( XMLParser  の メソッド ) 
unlock ( )  ( mutex  の メソッド ) 
unmimify ( )  ( mimify  モジュール ) 
unpack ( )  ( struct  モジュール ) 
unpack_array ( )  ( Unpacker  の メソッド ) 
unpack _bytes ( )  ( Unpacker  の メソッド ) 
unpack_ double ( )  ( Unpacker  の メソッド ) 
unpack _farray ( )  ( Unpacker  の メソッド ) 
unpack _float ( )  ( Unpacker  の メソッド ) 
unpack _ fopaque ( )  ( Unpacker  の メソッド ) 
unpack _fstring ( )  ( Unpacker  の メソッド ) 
unpack _ list ( )  ( Unpacker  の メソッド ) 
unpack _opaque ( )  ( Unpacker  の メソッド ) 
unpack _string ( )  ( Unpacker  の メソッド ) 
unparsed Entity Decl ( )  ( DTDHandler  の メソッド ) 
Unparsed Entity DeclHandler ( )  ( xmlparser  の メソッド ) 
unqdevice ( )  ( fl  モジュール ) 
unquote ( )  (email .Utils  モジュール ) 
unquote ( )  ( rfc 822  モジュール ) 
unquote ( )  ( urllib  モジュール ) 
unquote_plus ( )  ( urllib  モジュール ) 
unregister ( )  ( LogRecord  の メソッド ) 
unregister_dialect ( )  ( csv  モジュール ) 
unsubscribe ( )  ( IMAP 4_stream  の メソッド ) 
untouchwin( )  ( window  の メソッド ) 
unused_data ( Queue  の 属性 ) 
up ( ) ( turtle  モジュール ) 
update ( )  ( hmac  の メソッド ) 
update ( )  ( md 5  の メソッド ) 
update ( )  ( sha  の メソッド ) 
update_panels ( )  ( curses . panel  モジュール ) 
upper ( )  ( string  の メソッド ) 
upper ( )  ( string  モジュール ) 
uppercase  ( string  モジュール ) 
urandom( )  (os  モジュール ) 
url ( Server Proxy  の 属性 ) 
url2 pathname ( )  ( urllib  モジュール ) 
urlcleanup ( )  ( urllib  モジュール ) 
urldefrag ( )  ( urlparse  モジュール ) 
urlencode ( )  ( urllib  モジュール ) 
urljoin ( )  ( urlparse  モジュール ) 
urllib  (standard  モジュール ) 
urllib  ( 標準  モジュール ) urllib 2  ( standard  モジュール ) 
urlopen ( )  ( urllib  モジュール ) 
urlopen ( )  ( urllib 2  モジュール ) 
urlparse  ( standard  モジュール ) 
urlparse ( )  ( urlparse  モジュール ) urlparse  ( 標準  モジュール ) 
urlretrieve ( )  ( urllib  モジュール ) 
urlsafe_b64decode ( )  ( base 64  モジュール ) 
urlsafe_b 64encode ( )  ( base 64  モジュール ) 
urlsplit ( )  ( urlparse  モジュール ) 
urlunparse ( )  ( urlparse  モジュール ) 
urlunsplit ( )  ( urlparse  モジュール ) 
use_default_colors ( )  ( curses  モジュール ) 
use_env ()  ( curses  モジュール ) 
use_rawinput  ( Cmd  の 属性 ) 
UseForeign DTD ( )  ( xmlparser  の メソッド ) 
user ( )  ( POP 3 _ SSL  の メソッド ) 
user  ( standard  モジュール ) 
USER  ( 環境 変数 ) 
UserDict  ( standard  モジュール ) 
UserList  ( standard  モジュール ) 
USERNAME  ( 環境 変数 ) 
userptr ( )  ( Text box  の メソッド ) 
UserString  ( standard  モジュール ) 
utcfromtimestamp ( )  ( datetime の メソッド ) 
utcnow ( )  ( datetime の メソッド ) 
utcoffset ( )  ( datetime の メソッド ) 
utcoffset ( ) ( time の メソッド ) , [ Link ] 
utctimetuple ( )  ( datetime の メソッド ) 
utime( )  (os  モジュール ) 
uu  ( standard  モジュール ) 
uu  ( 標準  モジュール )  V 
value  ( Cookie  の 属性 ) 
value  ( Morsel  の 属性 ) 
value_decode ( )  ( Base Cookie  の メソッド ) 
value _encode ( )  ( Base Cookie  の メソッド ) 
values ( )  ( Message  の メソッド ) 
varray ( )  ( gl  モジュール ) 
vbar ( ScrolledText  の 属性 ) 
VERBOSE  ( re  モジュール ) 
verbose  (tabnanny  モジュール ) 
verbose  ( test . test _ support  モジュール ) 
verify ( )  ( SMTP  の メソッド ) 
version  ( Cookie  の 属性 ) 
version  ( curses  モジュール ) 
version  (httplib  モジュール ) 
version  ( marshal  モジュール ) 
version ( )  ( platform  モジュール ) 
version  ( sys  モジュール ) 
version  ( URLopener  の 属性 ) 
version _info  ( sys  モジュール ) 
version_string ( )  ( Base HTTPRequestHandler  の メソッド ) 
vline ( )  ( window  の メソッド ) 
vnarray ( )  ( gl  モジュール ) 
voidcmd ( )  ( FTP  の メソッド ) 
volume ( Zip Info  の 属性 ) 
vonmisesvariate ( )  ( random モジュール ) 
W_ OK  (os  モジュール ) 
wait( )  ( Condition  の メソッド ) 
wait( )  ( Event  の メソッド ) 
wait( )  (os  モジュール ) 
wait( )  ( Popen  の メソッド ) 
wait( )  ( Popen 4  の メソッド ) 
waitpid ( )  (os  モジュール ) 
walk ( ) ( compiler  モジュール ) 
walk ( ) ( compiler . visitor  モジュール ) 
walk ( )  ( Message  の メソッド ) 
walk ( )  (os  モジュール ) 
walk ( )  (os . path  モジュール ) 
want  ( Example  の 属性 ) 
warn ( )  ( warnings  モジュール ) 
warn_explicit( )  ( warnings  モジュール ) 
warning ( )  ( ErrorHandler  の メソッド ) 
warning ( )  ( logging  モジュール ) 
warning ( )  ( Text box  の メソッド ) 
warnings  ( standard  モジュール ) 
warnoptions  ( sys  モジュール ) 
wasSuccessful ( )  ( Test Result  の メソッド ) 
wave  ( standard  モジュール ) 
weakref  ( extension  モジュール ) 
webbrowser  ( standard  モジュール ) 
weekday ( )  ( calendar  モジュール ) 
weekday ( )  ( date  の メソッド ) 
weekday ( )  ( datetime の メソッド ) 
weibullvariate ( )  ( random モジュール ) 
WEXITSTATUS ( )  (os  モジュール ) 
wfile  ( Base HTTPRequestHandler  の 属性 ) 
what ( )  ( imghdr モジュール ) 
what ( )  ( sndhdr モジュール ) 
whathdr( )  ( sndhdr モジュール ) 
whichdb  (standard  モジュール ) 
whichdb ( )  ( whichdb  モジュール ) 
whitespace _ split  ( shlex  の 属性 ) 
whrandom ( standard  モジュール ) 
width ( Text Wrapper  の 属性 ) 
width ( ) ( turtle  モジュール ) 
WIFEXITED ( )  (os  モジュール ) 
WIFSIGNALED ( )  (os  モジュール ) 
WIFSTOPPED ( )  (os  モジュール ) 
Wimp$ ScrapDir  ( 環境 変数 ) 
win 32 _ ver ( )  ( platform  モジュール ) 
window ( )  ( Text box  の メソッド ) 
winsound  ( 組み込 み  モジュール ) 
winver  ( sys  モジュール ) 
WNOHANG  (os  モジュール ) 
wordchars ( shlex  の 属性 ) 
wrap ( )  ( text w rap  モジュール ) 
wrap ( )  ( Text Wrapper  の メソッド ) 
wrapper ( )  ( curses . wrapper  モジュール ) 
writable ( )  ( async _ chat  の メソッド ) 
writable ( )  ( dispatcher  の メソッド ) 
write ( )  ( array  の メソッド ) 
write ( )  ( audio  device  の メソッド ) , [ Link ] 
write ( )  ( BZ 2File  の メソッド ) 
write ( )  ( file  の メソッド ) 
write ( )  ( Generator  の メソッド ) 
write ( )  ( imgfile  モジュール ) 
write ( )  ( Interactive Console  の メソッド ) 
write ( )  ( LogRecord  の メソッド ) 
write ( )  (os  モジュール ) 
write ( )  ( Queue  の メソッド ) 
write ( )  ( Safe ConfigParser  の メソッド ) 
write ( )  ( StreamWriter  の メソッド ) 
write ( )  ( Telnet  の メソッド )  write ( ) ( turtle  モジュール ) 
write ( )  ( ZipFile  の メソッド ) 
write_byte ( )  ( Queue  の メソッド ) 
write_history _ file ( )  ( readline  モジュール ) 
writeall ( )  ( audio  device  の メソッド ) 
writeframes( )  ( aifc  の メソッド ) 
writeframes( )  ( AU _write  の メソッド ) 
writeframes( )  ( Wave _write  の メソッド ) 
writeframesraw ( )  ( aifc  の メソッド ) 
writeframesraw ( )  ( AU _write  の メソッド ) 
writeframesraw ( )  ( Wave _write  の メソッド ) 
writelines ( )  ( BZ 2File  の メソッド ) 
writelines ( )  ( file  の メソッド ) 
writelines ( )  ( StreamWriter  の メソッド ) 
writepy ( )  ( PyZipFile  の メソッド ) 
writerow ( )  ( csv  writer  の メソッド ) 
writerows ( )  ( csv  writer  の メソッド ) 
writesamps ( )  ( audio  port  の メソッド ) 
writestr ( )  ( ZipFile  の メソッド ) 
writexml ( )  ( Node  の メソッド ) 
WSTOPSIG ( )  (os  モジュール ) 
WTERMSIG ( )  (os  モジュール ) 
X  ( re  モジュール ) 
X _ OK  (os  モジュール ) 
xatom ( )  ( IMAP 4_stream  の メソッド ) 
xdrlib  (standard  モジュール ) 
xgtitle ( )  ( NNTPDataError  の メソッド ) 
xhdr( )  ( NNTPDataError  の メソッド ) 
X HTML _ NAMES PACE  ( xml . dom モジュール ) 
xml . dom ( standard  モジュール ) 
xml . dom. minidom ( standard  モジュール ) 
xml . dom. pulldom ( standard  モジュール ) 
xml . parsers . expat ( standard  モジュール ) 
xml . sax  ( standard  モジュール ) 
xml . sax . handler  ( standard  モジュール ) 
xml . sax . saxutils  ( standard  モジュール ) 
xml . sax . xmlreader  ( standard  モジュール ) 
XML _ NAMES PACE  ( xml . dom モジュール ) 
xmlcharrefreplace _errors_errors ( ) ( codecs  モジュール ) 
xmllib  (standard  モジュール ) 
XMLNS _ NAMES PACE  ( xml . dom モジュール ) 
XMLParserType  ( xml . parsers . expat  モジュール ) 
xmlrpclib  (standard  モジュール ) 
xor ( )  (operator  モジュール ) 
xover ( )  ( NNTPDataError  の メソッド ) 
xpath ( )  ( NNTPDataError  の メソッド ) 
xrange ( )  (built - in function )  xrange ( )  ( 組み込 み 関数 ) , [ Link ] 
XRangeType (types  モジュール ) 
xreadlines ( )  ( BZ 2File  の メソッド ) 
xreadlines ( )  ( file  の メソッド ) 
year  ( date  の 属性 ) 
year  ( datetime  の 属性 ) 
YESEXPR  ( locale  モジュール ) 
yiq_to_rgb ( ) ( colorsys  モジュール ) 
zfill ( )  ( string  の メソッド )  zfill ( )  ( string  モジュール ) 
日本 語 訳 :  Python  ドキュメント 翻訳 プロジェクト 
Python  に は 様々 な 著者 に よ り 寄稿 さ れ た 非常 に 多く の ドキュメント 類 が あ り ま す 。 
ドキュメント の 作者 は 、 この ガイド と  Python  配布 物 で 提供 さ れ て い る 雛形 ファイル を 組み合わせ て 使 い 、 ドキュメント 全体 や ドキュメント の 各 セクション を 作成 し たり 維持 し たり でき ま す 。  Python  の ドキュメント を 寄贈 し た い と 思 っ て い る なら 、 その ため に LaTeX を わざわざ 学 ぶ 必要 は あ り ま せ ん ;  平文 で の 寄贈 も 大 歓迎 で す 。 
1  初め に  Python  の ドキュメント は 、 この フリー な プログラミング 言語 の 長所 で あ る と 考え られ て き ま し た 。 
その 理由 は 多々 あ り ま す が 、 最も 重要 な の は 、 Python  の 作者 で あ る  Guido van  Rossum  が 、 言語 や その ライブラリ の ドキュメント の 提供 と 、 ドキュメント の 作成 と 維持 の 手助け する 上 で の ユーザ コミュニティ の 継続 的 な 参加 に 早期 から 関わ っ て い た こと で す 。  コミュニティ の 参加 に は 、 バグ 報告 の 作成 から 、 単に ドキュメント を より 完全 で 利用 し やす い もの に でき る 場合 に 素朴 な 提案 を する と い っ た こと まで 、 いく つ も の や りかた が あ り ま す 。 
筆者 自身 、 ドキュメント の 維持 に 参加 し て い る 中 で 、 こう し た コミュニティ から 寄せ られ る 入力 全て が 有用 だ と 確信 さ せ られ ま し た 。  この ドキュメント は 、 Python  の ドキュメント の 作者 、 あるいは 潜在 的 な 作者 向け の もの で す 。 
もっと 具体 的 に い う と 、 標準 ドキュメント に 貢献 し たり 、 標準 ドキュメント と 同じ ツール を 使 っ て 別 の ドキュメント を 開発 する 人々 向け で す 。 
この ガイド は  Python  以外 の トピック に  Python  ドキュメント 作成 ツール を 使 う 作者 に と っ て は あまり 有用 で は な く 、 ツール を 全く 使用 し な い 作者 に も あまり 有用 で は な い で しょ う 。  この ガイド に 書 か れ て い る こと は 、 Python  ドキュメント 作成 ツール を 使 う 著者 の 支援 を 目的 と し て い ま す 。 
ガイド に は 、 標準 ドキュメント の ソース 配布 に 関 する 情報 、 ドキュメント タイプ に 関 する 議論 、 ドキュメント クラス 中 で 定義 さ れ て い る マーク アップ に つ い て の リファレンス 、 ドキュメント を 処理 する 上 で 必要 な 外部 ツール の リスト 、 ドキュメント リソース と 共 に 提供 さ れ て い る ツール に 関 する リファレンス が 入 っ て い ま す 。 
ガイド の 末尾 に は 、 Python  ドキュメント の 将来 の 方向 性 と 、 詳細 な 情報 を どこ で 取得 でき る か に つ い て 議論 し た 章 も あ り ま す 。  仮 に 、 あなた が  Python  の ドキュメント を 寄贈 し た い と 思 っ て い る 一方 で 、 LaTeX  を 学 ん だり 、 この ドキュメント に 書 か れ て い る マーク アップ 構造 を 学 ん だり する 時間 や 気力 を 持 て な い と し て も 、 あなた を  Python  プロジェクト へ の 協力 者 と し て 迎え入れ る 余地 は あ り ま す 。 
既存 の ドキュメント を 改善 し たり 、 欠け て い る ドキュメント を 提供 し て もらえ る なら 、 現在 の ドキュメント 製作 チーム が いつ で も 喜 ん で マーク アップ を 行 い 、 テキスト を 組み込 み ま す 。 
手助け し た い と い う 気持ち を お 持 ち なら 、 この ドキュメント に 書 か れ て い る こと を 障害 の よう に 思 わ な い で くださ い ね ! 
B . 2  翻訳 者 一覧  ( 敬称 略 ) 
B .  バグ 報告 
A . 6  SGI  特有 の 拡張 モジュール 
C .  歴史 と ライセンス 
3 . 2  標準 型 の 階層 
3 . 1  オブジェクト 、 値 、 および 型 
3 . 3  特殊 メソッド 名 
以下 は  Python  に 組み込 ま れ て い る 型 の リスト で す 。 
( C 、 Java 、 また は 実装 に 使 わ れ て い る その 他 の 言語 で 書 か れ た )  拡張 モジュール で は 、 その 他 に 新た な 型 を 定義 する こと が でき ま す 。 
将来 の バージョン の Python  で は 、 型 の 階層 に 新た な 型  ( 整数 を 使 っ て 効率 的 に 記憶 さ れ る 有理 数 型 、 など )  を 追加 する こと が でき る か も しれ ま せ ん 。 
以下 に 説明 する 型 の いく つ か に は 、 ` 特殊 属性  ( special  attribute ) ' と 題 さ れ た 段落 が 連ね られ て い ま す 。 
これ ら の 属性 は 実装 へ の アクセス 手段 を 提供 する もの で 、 一般 的 な 用途 に 利用 する ため の もの で は あ り ま せ ん 。 
特殊 属性 の 定義 は 将来 変更 さ れ る 可能 性 が あ り ま す 。 
この 型 に は 単一 の 値 しか あ り ま せ ん 。 
( 演算 子 に よ っ て は 、 インタプリタ が 関連 の あ る 演算 を 試 し たり 、 他 の 代替 操作 を 行 い ま す 。 
)  真値 は 真 ( true ) で す 。 
真値 は 真 ( true ) で す 。 
数値 リテラル に よ っ て 作成 さ れ たり 、 算術 演算 や 組み込み の 算術 関数 に よ っ て 返さ れ る オブジェクト で す 。 
数値 オブジェクト は 変更 不能 で す ; 一 度 値 が 生成 さ れ る と 、 二 度 と 変更 さ れ る こと は あ り ま せ ん 。 
Python の 数値 オブジェクト は い う まで も な く 数学 で 言 う ところ の 数値 と 強 く 関係 し て い ま す が 、 コンピュータ 内 で 数値 を 表現 する 際 に 伴 う 制限 を 受け て い ま す 。 
Python  は 整数 、 浮動 小数 点数 、 複素 数 の 間 で 区別 を 行 っ て い ま す : 
整数 型  ( integer ) 
整数 型 は 、 全て の 数  ( whole numbers )  を 表 す 数学 的 集合 内 に お け る 要素 を 表現 する 型 で す 。 
以下 に 三 つ の 整数 型 を 示 し ま す : 
( 通常 の )  整数 型  ( plaininteger ) 
長 整数 型  ( long  integer ) 
長 整数 は 無限 の 定義 域 を 持 ち 、 利用 可能 な  ( 仮想 )  メモリ サイズ の 制限 のみ を うけ ま す 。 
長 整数 は シフト 演算 や マスク 演算 の ため に バイナリ 表現 を も つ もの と 仮定 さ れ ま す 。  負 の 数 は 符号 ビット が 左 に 無限 に 延び て い る よう な 錯覚 を 与え る  2  の 補数 表現 の 変型 で 表 さ れ ま す 。 
ブール 型  ( boolean ) 
ブール 型 は 、 真値  False  また は  True  を 表現 し ま す 。 
整数 表 現 に 関 する 規則 は 、 シフト 演算 や マスク 演算 に お い て 、 負 の 整数 も 含め て 最も 有 意義 な 解釈 が でき る よう に 、 かつ 通常 の 整数 と 長 整数 と の 間 で 定義 域 を 切り替え る 際 に でき る だけ 混乱 し な い よう に 決め られ て い ま す 。 
左 シフト 以外 の 演算 で は 、 演算 結果 が オーバフロー を 起こ さ ず に 整数 の 定義 域 の 値 に な る 場合 は 、 長 整数 を 使 っ た 場合 で も 、 被 演算 子 に 整数 と 長 整数 を 混合 し た 場合 で も 同じ 結果 に な り ま す 。 
浮動 小数 点数 型  ( floating  point  number ) 
この 型 は 計算 機 レベル で 倍 精度 と さ れ て い る 浮動 小数 点数 を 表現 し ま す 。 
複素数 型  ( complex number ) 
この 型 は 、 計算 機 レベル で 倍 精度 と さ れ て い る 浮動 小数 点 を  2  つ 一 組 に し て 複素数 を 表現 し ま す 。 
浮動 小数 点 に つ い て 述べ た の と 同じ 性質 が 当てはま り ま す 。 
複素数  z  の 実数 部 および 虚数 部 は 、 それぞれ 読み出し 専用 属性  z . real  および  z . imag で 取り出 す こと が でき ま す 。 
シーケンス 型  ( sequence ) 
を 使 う と 、 シーケンス の 要素数 を 返 し ま す 。  シーケンス の 長 さ が  n  の 場合 、 インデクス は  0 ,  1 , . . . ,  n - 1 から な る 集合 で す 。 
シーケンス は スライス 操作  ( slice )  も サポート し て い ま す : 
a [ i : j ]  と する と 、 i  = k  j  で あ る インデクス  k を も つ 全て の 要素 を 選択 し ま す 。 
式 表現 と し て スライス を 用い た 場合 、 スライス は 同じ 型 を も つ 新た な シーケンス を 表 し ま す 。 
シーケンス は 、 変更 可能 な もの か 、 そう で な い か で 区別 さ れ て い ま す : 
変更 不能 な シーケンス  ( immutable sequence ) 
変更 不能 な シーケンス 型 の オブジェクト は 、 一 度 生成 さ れ る と その 値 を 変更 する こと が でき ま せ ん 。 
( オブジェクト に 他 の オブジェクト へ の 参照 が 入 っ て い る 場合 、 参照 さ れ て い る オブジェクト は 変更 可能 な オブジェクト で も よ く 、 その 値 は 変更 さ れ る 可能 性 が あ り ま す ; しかし 、 変更 不能 な オブジェクト が 直接 参照 し て い る オブジェクト の 集合 自体 は 、 変更 する こと が でき ま せ ん 。  ) 
以下 の 型 は 変更 不能 な シーケンス 型 で す : 
文字 列 型  ( string ) 
文字 列 の 各 要素 は 文字  ( character )  で す 。 
文字 型  ( charactertype ) は 存在 し ま せ ん ;  単一 の 文字 は 、 要素 が 一 つ だけ の 文字 列 と し て 表現 さ れ ま す 。  各 文字 は  ( 少な く とも )  8 - bit  の バイト 列 を 表現 し ま す 。 
組み込 み 関数  chr ( ) 
および ord ( ) 
を 使 う と 、 文字 と 非 負 の 整数 で 表 さ れ た バイト 値 の 間 で 変換 を 行え ま す 。 
0 - 127  の 値 を 持 つ バイト 値 は 、 通常  同じ  ASCII  値 を も つ 文字 を 表現 し て い ま す が 、 値 を どう 解釈 する か は プログラム に ゆだね られ て い ま す 。 
文字 列 データ 型 は また 、 例えば ファイル から 読み出 さ れ た データ を 記憶 する と い っ た 用途 で 、 バイト 値 の アレイ を 表現 する ため に 用い られ ま す 。 
( ネイティブ の 文字 セット が  ASCII で な い システム で は 、 chr ( )  や ord ( )  が  ASCII  と  EBCDIC  と の 間 で 対応 付け を 行 っ て お り 、 文字 列 間 の 比較 で  ASCII  順 が 守 ら れ る 限り 、 文字 列 の 内部 表現 と し て  EBCDIC  を 使 っ て も かま い ま せ ん 。  誰 か 他 に もっと ま し な ルール を お 持ち で す か ? ) 
Unicode  文字 列 型 
Unicode  オブジェクト の 各 要素 は  Unicode  コード 単位 で す 。 
Unicode  コード 単位 と は 、 単一 の  Unicode  オブジェクト で 、 Unicode  序数 を 表現 する  16 - bit  また は  32 - bit  の 値 を 保持 でき る もの で す  ( この 序数 の 最大 値 は  sys . maxunicode  で 与え られ て お り 、 コンパイル 時 に Python  が どう 設定 さ れ て い る か に 依存 し ま す ) 。 
Unicode  オブジェクト 内 に サロゲート ペア  ( surrogate pair)  が あ っ て も よ く 、 Python  は サロ ゲート ペア を 二 つ の 別々 の  Unicode  要素 と し て 報告 し ま す 。 
組み込 み 関数  unichr ( ) 
は 、 コード 単位 と 非 負 の 整数 で 表 さ れ た Unicode  標準  3 . 0  で 定義 さ れ た  Unicode  序数 と の 間 で 変換 を 行 い ま す 。 
他 の 文字 エンコード 形式 と の 相互 変換 は 、  Unicode  メソッド  encode  および 組み込 み 関数  unicode ( ) 
で 行 う こと が でき ま す 。  タプル 型  ( tuple ) 
タプル の 要素 は 任意 の  Python  オブジェクト に でき ま す 。  二 つ また は それ 以上 の 要素 から な る タプル は 、 個々 の 要素 を 表現 する 式 を カンマ で 区切 っ て 構成 し ま す 。 
単一 の 要素 から な る タプル ( 単 集合  ` singleton')  を 作 る に は 、 要素 を 表現 する 式 の 直後 に カンマ を つけ ま す  ( 単一 の 式 だけ で は タプル を 形成 し ま せ ん 。  これ は 、 式 を グループ 化 する の に 丸括弧 を 使え る よう に し な けれ ば な ら な い から で す )  。 
要素 の 全く な い 丸括弧 の 対 を 作 る と 空 の タプル に な り ま す 。 
変更 可能 な シーケンス 型  ( mutable sequence ) 
変更 可能 な シーケンス は 、 作成 し た 後 で 変更 する こと が でき ま す 。 
変更 可能 な シーケンス で は 、 添字 表記 や スライス 表記 を 使 っ て 指定 さ れ た 要素 に 代入 を 行 う こと が でき 、 del ( delete )  文 を 使 っ て 要素 を 削除 する こと が でき ま す 。 
Python  に 最初 から 組み込 ま れ て い る 変更 可能 な シーケンス 型 は 、 今 の ところ 一 つ だけ で す : 
リスト 型  ( list ) 
リスト の 要素 は 任意 の  Python  オブジェクト に でき ま す 。 
拡張 モジュール  array 
で は 、 別 の 変更 可能 な シーケンス 型 を 提供 し て い ま す 。 
マップ 型  ( mapping ) 
Python  に 最初 から 組み込 ま れ て い る マップ 型 は 、 今 の ところ 一 つ だけ で す : 
辞書 型  ( dictionary ) 
ほとんど どんな 値 で も インデクス と し て 使え る よう な 、 有限 個 の オブジェクト から な る 集合 を 表 し ま す 。 
、 gdbm
、 および bsddb 
で は 、 別 の マップ 型 を 提供 し て い ま す 。 
呼び出し 可能 型  ( callabletype ) 
関数 呼び出 し 操作  ( 5 . 3 . 4  節 、 ` ` 呼び出 し  ( call ) ' ' 参照 )  を 行 う こと が でき る 型 で す : 
ユーザ 定義 関数  ( user - defined function ) 
ユーザ 定義 関数 オブジェクト は 、 関数 定義 を 行 う こと で 生成 さ れ ま す ( 7 . 5  節 、 ` ` 関数 定義 ' '  参照 ) 。 
関数 は 、 仮 引数 ( formal  parameter )  リスト と 同じ 数 の 要素 が 入 っ た 引数 リスト と とも に 呼び出 さ れ ま す 。 
特殊 属性 : 
関数 の ドキュメンテーション 文字 列 で す 。  ドキュメンテーション が な い 場合 は  None  に な り ま す 。 
書き込み 可能 
func_ doc  の 別名 で す 。 
関数 の 名前 で す 。 
func_ name  の 別名 で す 。 
_ _module__ 関数 が 定義 さ れ て い る モジュール の 名前 で す 。 
モジュール 名 が な い 場合 は  None  に な り ま す 。 
デフォルト 値 を 持 つ 引数 に 対 する デフォルト 値 が 収め られ た タプル で 、 デフォルト 値 を 持 つ 引数 が な い 場合 に は  None に な り ま す 。 
コンパイル さ れ た 関数 本体 を 表現 する コード オブジェクト で す 。 
関数 の グローバル 変数 の 入 っ た 辞書  ( へ の 参照 )  で す  --  この 辞書 は 、 関数 が 定義 さ れ て い る モジュール の グローバル な 名前 空間 を 決定 し ま す 。 
読み出し 専用 
任意 の 関数 属性 を サポート する ため の 名前 空間 が 収め られ て い ま す 。 
None  また は 関数 の 個々 の 自由 変数 ( 引数 以外 の 変数 )  に 対 し て 値 を 結び付け て い る セル  ( cell )  群 から な る タプル に な り ま す 。 
「 書き込み 可能 」  と ラベル さ れ て い る 属性 の ほとんど は 、 代入 さ れ た 値 の 型 を チェック し ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : func_ name  は 書き込み 可能 に な り ま し た 
関数 オブジェクト は また 、 任意 の 属性 を 設定 し たり 取得 し たり でき ま す 。  この 機能 は 、 例えば 関数 に メタデータ を 付与 し た い 場合 など に 使え ま す 。 
関数 の  get  や  set  に は 、 通常 の ドット 表記 を 使 い ま す 。 
現在 の 実装 で は 、 ユーザ 定義 の 関数 で のみ 属性 を サポート し て い る の で 注意 し て 下さ い 。 
組み込 み 関数 の 属性 は 将来 サポート する 予定 で す 。 
関数 定義 に 関 する その 他 の 情報 は 、 関数 の コード オブジェクト から 得 られ ま す ;  後述 の 内部 型  ( internaltype )  に 関 する 説明 を 参照 し て くださ い 。 
ユーザ 定義 メソッド  ( user - defined  method ) 
ユーザ 定義 の メソッド オブジェクト は 、 クラス や クラス インスタンス ( あるいは  None )  を 任意 の 呼び出し 可能 オブジェクト  ( 通常 は ユーザ 定義 関数 )  と 結合 し  ( combine )  ま す 。 
クラス や インスタンス から 他 の ユーザ 定義 メソッド オブジェクト を 取得 する 方法 で ユーザ 定義 メソッド オブジェクト を 生成 し た 場合 、 その 動作 は 関数 オブジェクト の 場合 と 同様 で す が 、 新た な インスタンス の im_func  属性 は もと の メソッド オブジェクト の 属性 で は な く 、 新た な インスタンス の 属性 に な り ま す 。 
クラス や インスタンス から クラス メソッド オブジェクト を 取得 する 方法 で ユーザ 定義 メソッド オブジェクト を 生成 し た 場合 、 im_self  属性 は クラス 自体  ( im_class  属性 と 同じ )  と な り 、 im_func  属性 は クラス メソッド の 根底 に あ る 関数 オブジェクト に な り ま す 。 
場合 に よ っ て は 、 属性 を ローカル な 変数 に 代入 し て お き 、 その 変数 を 使 っ て 関数 呼び出し を 行 う と 効果 的 な 最適 化 に な り ま す 。  また 、 上記 の 変換 は ユーザ 定義 関数 に 対 し て のみ 起こ る の で 注意 し て くださ い ; その 他 の 呼び出し 可能 オブジェクト  ( および 呼び出し 可能 で な い 全て の オブジェクト )  は 、 変換 を 受け ず に 取り出 さ れ ま す 。 
それ から 、 クラス インスタンス の 属性 に な っ て い る ユーザ 定義 関数 は 、 結合 メソッド に 変換 でき な い と 知 っ て お く こと も 重要 で す ;  結合 メソッド へ の 変換 が 行 わ れ る の は 、 関数 が クラス の 一 属性 で あ る 場合  だけ  で す 。 
ジェネレータ 関数  ( generator function ) 
yield  文  ( 6 . 8  節 、 ``yield  文' '  参照 ) を 使 う 関数 また は メソッド は 、 ジェネレータ 関数  ( generator function )  と 呼 ば れ ま す 。 
この よう な 関数 は 、 呼び出 さ れ た 際 に 、 常 に イテレータ オブジェクト を 返 し ま す 。  この イテレータ オブジェクト は 関数 の 本体 を 実行 する ため に 用い られ ま す :  イテレータ の  next ( ) メソッド を 呼び出 す と 、 yield  文 で 値 を 出力 する 処理 まで 関数 の 実行 が 行 わ れ ま す 。 
関数 が  return  文 を 実行 する か 、 関数 を 最後 まで 実行 し 終え る と 、 StopIteration  例外 が 送出 さ れ 、 イテレータ が 返 す 値 の 集合 は そこ で 終わ り ま す 。 
組み込 み 関数  ( built - in function ) 
組み込 み 関数 オブジェクト は  C  関数 へ の ラッパ で す 。 
組み込 み メソッド  ( built - in  method ) 
実際 に は 組み込 み 関数 を 別 の 形 で 隠蔽 し た もの で 、 こちら の 場合 に は C  関数 に 渡 さ れ る 何 ら か の オブジェクト を 非 明示 的 な 外部 引数 と し て 持 っ て い ま す 。 
組み込 み メソッド の 例 は 、 alist  を リスト オブジェクト と し た とき の 
alist . append ( )  で す 。  この 場合 に は 、 読み出し 専用 の 属性 __self_ _ は alist  で 表 さ れ る オブジェクト に な り ま す 。 
クラス 型  ( classtype ) 
クラス 型 、 あるいは  ` ` 新し い クラス 型  ( new-style class ) ' ' や 呼び出し 可能 オブジェクト で す 。 
クラス 型 オブジェクト は 通常 、 その クラス の 新た な インスタンス を 生成 する 際 の ファクトリ クラス と し て 振舞 い ま す が 、 _ _new_ _( )  を オーバライド し て 、 バリエーション を 持 た せ る こと も でき ま す 。 
呼び出し の 際 に 使 わ れ た 引数 は _ _new_ _( )  に 渡 さ れ 、 さらに 典型 的 な 場合 で は 新た な インスタンス を 初期 化 する ため に  __init_ _( )  に 渡 さ れ ま す 。 
旧 クラス 型  ( classic  class ) 
( 旧 )  クラス オブジェクト は 後 で 詳し く 説明 し ま す 。 
クラス オブジェクト が 呼び出 さ れ る と 、 新た に クラス インスタンス  ( 後述 )  が 生成 さ れ 、 返 さ れ ま す 。 
この 操作 に は 、 クラス の  __init_ _( )  メソッド の 呼び出 し  ( 定義 さ れ て い る 場合 )  が 含 ま れ て い ま す 。 
呼び出し の 際 に 使 わ れ た 引数 は 、 すべて  __init_ _( )  メソッド に 渡 さ れ ま す 。 
_ _ init_ _( )  メソッド が な い 場合 、 クラス は 引数 なし で 呼び出 さ な けれ ば な り ま せ ん 。 
クラス インスタンス  ( classinstance ) 
クラス インスタンス は 後 で 詳し く 説明 し ま す 。 
クラス インスタンス は クラス が __ call_ _( )  メソッド を 持 っ て い る 場合 に のみ 呼び出 す こと が でき ま す ;  x ( arguments )  と する と 、 x ._ _ call_ _( arguments )  呼び出し を 短 く 書け ま す 。 
モジュール  ( module ) 
モジュール は import  文 で import  し ま す  ( 6 . 12  節 、 ` `import  文' '  参照 ) 。 
モジュール オブジェクト は 、 辞書 オブジェクト  ( モジュール 内 で 定義 さ れ て い る 関数 が  func _ globals  属性 で 参照 し て い る 辞書 で す )  で 実装 さ れ た 名前 空間 を 持 っ て い ま す 。 
クラス 
要求 し て い る 属性 が 静的 メソッド オブジェクト の 場合 、 静的 メソッド オブジェクト で ラップ さ れ た オブジェクト に 変換 さ れ ま す 。 
クラス から 取り出 し た 属性 と 実際 に __dict_ _ に 入 っ て い る もの が 異な る よう な 他 の 場合 に つ い て は 、 3 . 3 . 2  節 を 参照 し て くださ い 。 
クラス 属性 を 代入 する と 、 その クラス の 辞書 だけ が 更新 さ れ 、 基底 クラス の 辞書 は 更新 し ま せ ん 。 
クラス オブジェクト を 呼び出 す  ( 上記 を 参照 )  と 、 クラス インスタンス を 生成 し ま す  ( 下記 を 参照 ) 。 
特殊 属性 : __name__ は クラス 名 で す ;_ _module__ は クラス が 定義 さ れ て い る モジュール の 名前 で す ;__dict_ _ は クラス の 名前 空間 が 入 っ た 辞書 で す ;__bases__ は 基底 クラス の 入 っ た  ( 空 、 あるいは 単 要素 を 取りえ る )  タプル で 、 基底 クラス リスト の 順番 に な っ て い ま す ; __doc_ _ は クラス の ドキュメンテーション 文字 列 で す 。  ドキュメンテーション 文字 列 が な い 場合 に は  None  に な り ま す 。 
クラス インスタンス 
クラス インスタンス は クラス オブジェクト  ( 上記 参照 )  を 呼び出 し て 生成 し ま す 。 
クラス インスタンス は 辞書 で 実装 さ れ た 名前 空間 を 持 っ て お り 、 属性 参照 の 時 に は この 辞書 が 最初 に 検索 さ れ ま す 。 
辞書 内 に 属性 が 見つか ら ず 、 かつ インスタンス の クラス に 該当 する 属性 名 が あ る 場合 、 検索 は クラス 属性 に まで 広げ られ ま す 。  見つか っ た クラス 属性 が ユーザ 定義 関数 オブジェクト や 、 インスタンス の クラス  ( C  と し ま す )  や その 基底 クラス に 関連 付け られ て い る 非 結合 の ユーザ 定義 メソッド オブジェクト の 場合 、 im_class  属性 が  C  で  im_self  属性 が インスタンス に な っ て い る 結合 ユーザ 定義 メソッド オブジェクト に 変換 さ れ ま す 。 
静的 メソッド や クラス メソッド オブジェクト も また 、 C  から 取り出 し た 場合 と 同様 に 変換 さ れ ま す ; 上記 の  ` ` クラス ' ' を 参照 し て くださ い 。 
クラス から 取り出 し た 属性 と 実際 に __dict_ _ に 入 っ て い る もの が 異な る よう な 他 の 場合 に つ い て は 、 3 . 3 . 2  節 を 参照 し て くださ い 。  クラス 属性 が 見つか ら ず 、 かつ オブジェクト の クラス が _ _ getattr_ _( )  メソッド を 持 っ て い る 場合 、 この メソッド を 呼び出 し て 属性 名 の 検索 を 充足 さ せ ま す 。 
属性 の 代入 や 削除 を 行 う と 、 インスタンス の 辞書 を 更新 し ま す が 、 クラス の 辞書 を 更新 する こと は あ り ま せ ん 。 
クラス で __setattr_ _( )  や__ delattr_ _( )  メソッド が 定義 さ れ て い る 場合 、 直接 インスタンス の 辞書 を 更新 する 代わり に これ ら の メソッド が 呼び出 さ れ ま す 。 
クラス インスタンス は 、 ある 特定 の 名前 の メソッド を 持 っ て い る 場合 、 数値 型 や シーケンス 型 、 あるいは マップ 型 の よう に 振舞 う こと が でき ま す 。 
3 . 3  節 、  `` 特殊 メソッド 名 ' '  を 参照 し て くださ い 。 
特殊 属性 : __dict_ _ は 属性 の 辞書 で す ;__class_ _ は インスタンス の クラス で す 。  ファイル  ( file ) 
ファイル 
オブジェクト は 開 か れ た ファイル を 表 し ま す 。 
ファイル オブジェクト は 組み込 み 関数  open ( ) 
や 、 os . popen ( ) , os . fdopen ( ) ,  および  socke  オブジェクト の makefile ( ) 
メソッド  ( その 他 の 拡張 モジュール で 提供 さ れ て い る 関数 や メソッド )  で 生成 さ れ ま す 。 
sys . stdin , sys . st dout  および sys . stderr  と い っ た オブジェクト は 、 インタプリタ の 標準 入力 
ファイル オブジェクト に 関 する 完全 な 記述 に つ い て は 、 
インタプリタ が 内部 的 に 使 っ て い る いく つ か の 型 は 、 ユーザ に 公開 さ れ て い ま す 。  これ ら の 定義 は 将来 の インタプリタ の バージョン で は 変更 さ れ る 可能 性 が あ り ま す が 、 ここ で は 記述 の 完全 性 の ため に 触れ て お き ま す 。 
コード オブジェクト 
コード オブジェクト は  バイト コンパイル さ れ た  ( byte- compiled ) 実行 可能 な  Python  コード 、 別名  バイトコード  ( bytecode )  を 表現 し ま す 。  コード オブジェクト と 関数 オブジェクト の 違い は 、 関数 オブジェクト が 関数 の グローバル 変数  ( 関数 を 定義 し て い る モジュール の グローバル )  に 対 し て 明示 的 な 参照 を 持 っ て い る の に 対 し 、 コード オブジェクト に は コンテキスト が な い と い う こと で す ;  また 、 関数 オブジェクト で は デフォルト 引数値 を 記憶 でき ま す が 、 コード オブジェクト で は でき ま せ ん ( 実行 時 に 計算 さ れ る 値 を 表現 する ため ) 。 
関数 オブジェクト と 違 い 、 コード オブジェクト は 変更 不 可能 で 、 変更 可能 な オブジェクト へ の 参照 を ( 直接 、 間接 に 関わ ら ず )  含 み ま せ ん 。 
以下 の フラグ ビット が  co_flags  で 定義 さ れ て い ま す :  0 x 0 4  ビット は 、 関数 が  " * arguments "  構文 を 使 っ て 任意 の 数 の 固定 引数 を 受理 でき る 場合 に 立て られ ま す ; 0 x 0 8  ビット は 、 関数 が  " * *keywords "  構文 を 使 っ て キー ワード 引数 を 受理 でき る 場合 に 立て られ ま す ; 0 x 20  ビット は 、 関数 が ジェネレータ で あ る 場合 に 立て られ ま す 。 
将来 機能  ( future  feature )  宣言  ( " from _ _future__import division " ) も また 、 co_flags  の ビット を 立て る こと で 、 コード オブジェクト が 特定 の 機能 を 有効 に し て コンパイル さ れ て い る こと を 示 し ま す :  0 x 2000  ビット は 、 関数 が 将来 機能 を 有効 に し て コンパイル さ れ て い る 場合 に 立て られ ま す ;  以前 の バージョン の  Python  で は 、 0 x 10  および  0 x 1000  ビット が 使 わ れ て い ま し た 。  co_flags  の その 他 の ビット は 将来 に 内部 的 に 利用 する ため に 予約 さ れ て い ま す 。 
フレーム  ( frame)  オブジェクト 
フレーム オブジェクト は 実行 フレーム  ( execution  frame)  を 表 し ま す 。 
実行 フレーム は トレース バック オブジェクト 内 に 出現 し ま す  ( 下記 参照 ) 。 
読み出し 専用 の 特殊 属性 : f_back  は  ( 呼び出 し 側 に と っ て の )  以前 の スタック フレーム で す 。  呼び出 し 側 が スタック フレーム の 最 下段 で あ る 場合 に は  None  で す ; f_code  は 現在 の フレーム で 実行 し よう と し て い る コード オブジェクト で す ; f_ locals  は ローカル 変数 を 検索 する ため に 使 わ れ る 辞書 で す ; f _ globals  は グローバル 変数 用 で す ; f_builtins  は 組み込み の  ( Python  固有 の )  名前 で す ; f _restricted  は 、 関数 が 制限 つ き 実行  ( restricted  execution )  モード で 実行 さ れ て い る か どう か を 示 す フラグ で す ; f_lasti  は 厳密 な 命令 コード  ( コード オブジェクト 中 の バイト コード 文字 列 へ の インデクス )  で す 。 
書き込み 可能 な 特殊 属性 : f_trace  が  None  で な い 場合 、 各 ソース コード 行 の 先頭 で 呼び出 さ れ る 関数 に な り ま す ; f _exc_type , f _exc _ value , f _exc _traceback  は 、 現在 の フレーム で もっとも 最近 捕捉 さ れ た 例外 を 表 し ま す ;f_lineno  は フレーム 中 に おけ る 現在 の 行 番号 で す  -- トレース 関数 ( trace  function )  側 で この 値 に 書き込み を 行 う と 、 指定 し た 行 に ジャンプ し ま す  ( 最 下段 の 実行 フレーム に い る とき のみ )  。 
デバッガ で は 、 f _fileno  を 書き込 む こと で 、 ジャンプ 命令  ( Set  Next  Statement  命令 と も 呼 ば れ ま す )  を 実装 でき ま す 。 
トレース バック  ( traceback )  オブジェクト 
トレース バック オブジェクト は 例外 の スタック トレース を 表現 し ま す 。 
トレース バック オブジェクト は 例外 が 発生 し た 際 に 生成 さ れ ま す 。 
例外 ハンドラ を 検索 し て 実行 スタック を 戻 っ て い く 際 、 戻 っ た レベル 毎 に 、 トレース バック オブジェクト が 現在 の トレース バック の 前 に 挿入 さ れ ま す 。 
例外 ハンドラ に 入 る と 、 スタック トレース を プログラム 側 で 利用 でき る よう に な り ま す ( 7 . 4  節` `try  文 ' '  を 参照 ) 。 
トレース バック は  sys . exc _traceback  と し て 得 る こと が でき 、 sys . exc _ info ( )  が 返 す タプル の 三 番 目 の 要素 と し て も 得 られ ま す . インタフェース と し て は 後者 の 方 が 推奨 さ れ て い ま す が 、 これ は プログラム が マルチ スレッド を 使 っ て い る 場合 に 正し く 動作 する から で す 。  プログラム に 適切 な ハンドラ が な い 場合 、 スタック トレース は  ( うま く 書式 化 さ れ て )  標準 エラー ストリーム に 書き出 さ れ ま す ;  インタプリタ が 対話 的 に 実行 さ れ て い る 場合 、 sys . last _traceback  と し て 得 る こと も でき ま す 。 
読み出し 専用 の 特殊 属性 :tb_next  は スタック トレース 内 の ( 例外 の 発生 し て い る フレーム に 向か っ て )  次 の レベル で す 。  次 の レベル が 存在 し な い 場合 に は  None  に な り ま す ;tb_frame  は 現在 の レベル に おけ る 実行 フレーム を 指 し ま す ;tb_lineno  は 例外 の 発生 し た 行 番号 で す ;tb_lasti  は 厳密 な 命令 コード で す 。 
トレース バック 内 の 行 番号 や 最後 に 実行 さ れ た 命令 は 、 try  文内 で 例外 が 発生 し 、 かつ 対応 する  except  節 や  finally  節 が な い 場合 に は 、 フレーム オブジェクト 内 の 行 番号 と は 異な る か も しれ ま せ ん 。 
スライス  ( slice )  オブジェクト 
スライス オブジェクト は  拡張 スライス 構文  ( extendedslicesyntax ) が 使 わ れ た 際 に スライス を 表現 する ため に 使 わ れ ま す 。 
拡張 スライス 構文 と は 、 二 つ の コロン や 、 コンマ で 区切 ら れ た 複数 の スライス や 省略 符号  (ellipse ) を 使 っ た スライス で 、 例えば  a [ i : j : step ] 、 a [ i : j , k : l ]  、 あるいは  a [ . . . , i : j ]  で す 。  スライス オブジェクト は 組み込 み 関数 slice ( ) 
で 生成 さ れ ま す 。 
読み出し 専用 の 特殊 属性 :  start  は 下 境界  ( lower bound )  で す ; stop  は 上 境界  ( upper bound )  で す ;  step  は ステップ 値 ( step  value )  で す ;  それぞれ 省略 さ れ て い る 場合 に は  None  に な り ま す 。 
これ ら の 属性 は 任意 の 型 の 値 を と る こと が でき ま す 。 
スライス オブジェクト は メソッド を 一 つ サポート し ま す : 
この メソッド は 単一 の 整数 引数  length  を 取 り 、 length  個 の 要素 から な る シーケンス に 適用 し た 際 に スライス オブジェクト から 提供 する こと に な る 、 拡張 スライス に 関 する 情報 を 計算 し ま す 。 
静的 メソッド  ( static  method )  オブジェクト 
静的 メソッド は 、 上 で 説明 し た よう な 関数 オブジェクト から メソッド オブジェクト へ の 変換 を 阻止 する ため の 方法 を 提供 し ま す 。 
静的 メソッド オブジェクト は 他 の 何 ら か の オブジェクト 、 通常 は ユーザ 定義 メソッド オブジェクト を 包 む ラッパ で す 。 
静的 メソッド を クラス や クラス インスタンス から 取得 する と 、 実際 に 返 さ れ る オブジェクト は ラップ さ れ た オブジェクト に な り 、 それ 以上 は 変換 の 対象 に は な り ま せ ん 。 
静的 メソッド オブジェクト は 通常 呼び出し 可能 な オブジェクト を ラップ し ま す が 、 静的 オブジェクト 自体 は 呼び出 す こと が でき ま せ ん 。 
静的 オブジェクト は 組み込 み コンストラクタ staticmethod ( )  で 生成 さ れ ま す 。 
クラス メソッド オブジェクト 
クラス メソッド オブジェクト は 、 静的 メソッド オブジェクト に 似 て 、 別 の オブジェクト を 包 む ラッパ で あ り 、 その オブジェクト を クラス や クラス インスタンス から 取り出 す 方法 を 代替 し ま す 。 
この よう に し て 取得 し た クラス メソッド オブジェクト の 動作 に つ い て は 、 上 の  `` ユーザ 定義 メソッド  ( user - defined  method ) ' ' で 説明 さ れ て い ま す 。 
クラス メソッド オブジェクト は 組み込み の コンストラクタ  classmethod ( )  で 生成 さ れ ま す 。 
この 文書 に つ い て . . . 
この ドキュメント は 、 
LaTeX2 HTML  変換 ツール を 使 っ て 生成 さ れ て い ま す 。 
A . . 2  翻訳 者 一覧 
1 .  はじめ に 
1 .  はじめ に 
2 . 1  組み込 み 関数 
2 . 2  非 必須 組み込 み 関数  ( Non - essential Built - in Functions ) 
2 . 4  組み込 み 例外 
2 . 5  組み込 み 定数 
3 .  Python  ラン タイム  サービス 
3 . 1  sys-- システム パラメータ と 関数 
3 . 2  gc-- ガベージ コレクタ  インターフェース 
3 . 3  weakref --  弱 参照 
3 . 3 . 3  拡張 型 に お け る 弱 参照 
3 . 4  fpectl--  浮動 小数 点 例外 の 制御 
3 . 4 . 1  例 
3 . 4 . 2  制限 と 他 に 考慮 す べ き こと 
3 . 5  atexit --  終了 ハンドラ 
3 . 5 . 1  atexit  例 
3 . 6 types--  組み込 み 型 の 名前 
3 . 7  UserDict --  辞書 オブジェクト の ため の クラス ラッパー 
3 . 8  UserList -- リスト オブジェクト の ため の クラス ラッパー 
3 . 9  UserString  - -  文字 列 オブジェクト の ため の クラス ラッパー 
3 . 10  operator --  関数 形式 の 標準 演算 子 
3 . 10 . 1  演算 子 から 関数 へ の 対応 表 
3 . 11  inspect --  使用 中 オブジェクト の 情報 を 取得 する 
3 . 1 1 . 1  型 と メンバ 
3 . 1 1 . 2  ソース 参照 
3 . 1 1 . 3  クラス と 関数 
3 . 1 1 . 4  インタープリタ  スタック 
3 . 12  traceback -- スタック トレース の 表示 や 取り出 し 
3 . 12 . 1  トレース バック の 例 
3 . 13  linecache-- テキスト ライン に ランダム アクセス する 
3 . 14  pickle-- Python  オブジェクト の 整列 化 
3 . 1 4 . 1  他 の  Python  モジュール と の 関係 
3 . 1 4 . 2  データ ストリーム の 形式 
3 . 1 4 . 3  使用 法 
3 . 1 4 . 4  何 を  pickle  化 し たり  unpickle  化 でき る の か ? 
3 . 1 4 . 5  pickle  化 プロトコル 
3 . 1 4 . 6  Unpickler  を サブ クラス 化 する 
3 . 1 4 . 7  例 
3 . 15  cPickle-- より 高速 な  pickle
3 . 16  copy _ reg --pickle サポート 関数 を 登録 する 
3 . 17  shelve  -- Python  オブジェクト の 永続 化 
3 . 17 . 1  制限 事項 
3 . 17 . 2  使用 例 
3 . 18  copy --  浅 い コピー および 深 い コピー 操作 
3 . 19 marshal --  内部 使用 向け の  Python  オブジェクト 整列 化 
3 . 20  warnings --  警告 の 制御 
3 . 2 0 . 1  警告 カテゴリ 
3 . 2 0 . 2  警告 フィルタ 
3 . 2 0 . 3  利用 可能 な 関数 
3 . 21 imp--import 内部 へ アクセス する 
3 . 21 . 1  例 
3 . 22  pkgutil --  パッケージ 拡張 ユーティリティ 
3 . 23  code --  インタプリタ 基底 クラス 
3 . 23 . 1  対話 的 な インタプリタ オブジェクト 
3 . 23 . 2  対話 的 な コンソール オブジェクト 
3 . 24  codeop -- Python コード を コンパイル する 
3 . 25  pprint --  データ 出力 の 整然 化 
3 . 25 . 1  PrettyPrinter  オブジェクト 
3 . 26  repr-- もう 一 つ の repr ( ) の 実装 
3 . 2 6 . 1  Repr オブジェクト 
3 . 2 6 . 2  Repr オブジェクト を サブ クラス 化 する 
3 . 27  new--  ラン タイム 内部 オブジェクト の 作成 
3 . 28  site-- サイト 固有 の 設定 フック 
3 . 29 user -- ユーザー 設定 の フック 
3 . 30 _ _builtin__--  組み込 み 関数 
3 . 31 _ _main__--  トップ レベル の スクリプト 環境 
3 . 32 _ _future__-- Future  ステートメント の 定義 
4 .  文字 列 処理 
4 . 1  string  - -  一般 的 な 文字 列 操作 
4 . 1 . 2  テンプレート 文字 列 
4 . 1 . 3  文字 列 操作 関数 
4 . 1 . 4  撤廃 さ れ た 文字 列 関数 
4 . 2  re  --  正規 表現 操作 
4 . 2 . 1  正規 表現 の シンタクス 
4 . 2 . 2  マッチング  vs  検索 
4 . 2 . 3  モジュール  コンテンツ 
4 . 2 . 4  正規 表現 オブジェクト 
4 . 2 . 5  MatchObject  オブジェクト 
4 . 2 . 6  例 
4 . 3  struct --  文字 列 データ を パック さ れ た バイナリ データ と し て 解釈 する 
4 . 4  difflib --  差異 の 計算 を 助け る 
4 . 4 . 1  Sequence Matcher オブジェクト 
4 . 4 . 2  Sequence Matcher  の 例 
4 . 4 . 3  Differ  オブジェクト 
4 . 4 . 4  Differ  の 例 
4 . 5  fpformat--  浮動 小数 点 の 変換 
4 . 6  StringIO-- ファイル の よう に 文字 列 を 読み書き する 
4 . 7  cStringIO- -  高速 化 さ れ た  StringIO 
4 . 8  text w rap -- テキスト の 折り返し と 詰め込 み 
4 . 9  codecs--codec  レジストリ と 基底 クラス 
4 . 9 . 1  Codec  基底 クラス 
4 . 9 . 2  標準 エンコーディング 
4 . 9 . 3  encodings . idna -- アプリケーション に お け る 国際 化 ドメイン 名  ( IDNA ) 
4 . 10 unicodedata--Unicode  データベース 
4 . 11  stringprep --  インターネット の ため の 文字 列 調製 
5 .  各種 サービス 
5 . 1  pydoc--  ドキュメント 生成 と オン ライン ヘルプ システム 
5 . 2  doctest --  対話 モード を 使 っ た 使用 例 の 内容 を テスト する 
5 . 2 . 1  簡単 な 利用 法 :  docstring  中 の 例題 を チェック する 
5 . 2 . 2  簡単 な 利用 法 :  テキスト ファイル 中 の 例題 を チェック する 
5 . 2 . 7  基本  API 
5 . 2 . 8  単位 テスト  API 
5 . 2 . 9  拡張  API 
5 . 2 . 10  デバッグ 
5 . 2 . 1 1  提言  5 . 2 . 12  進 ん だ 使 い 方 
5 . 3 unittest --  単体 テスト フレームワーク 
5 . 3 . 1  基礎 的 な 例 
5 . 3 . 2  テスト の 構成 
5 . 3 . 3  既存 テスト コード の 再 利用 
5 . 3 . 4  クラス と 関数 
5 . 3 . 5  TestCase  オブジェクト 
5 . 3 . 6  TestSuite  オブジェクト 
5 . 3 . 7  Test Result オブジェクト 
5 . 3 . 8  TestLoader  オブジェクト 
5 . 4  test -- Python 用 回帰 テスト パッケージ 
5 . 4 . 1  test パッケージ の ため の ユニット テスト を 書 く 
5 . 4 . 2  test . regrtest を 使 っ て テスト を 実行 する 
5 . 4 . 3  test . test _ support--  テスト の ため の ユーティリティ 関数 
5 . 5  decimal - -  10 進 浮動 小数 点数 の 算術 演算 
5 . 5 . 2  Decimal  オブジェクト 
5 . 5 . 3  Context  オブジェクト 
5 . 5 . 4  シグナル 
5 . 5 . 5  浮動 小数 点数 に 関 する 注意 
5 . 5 . 6  スレッド を 使 っ た 処理 
5 . 5 . 7  レシピ 
5 . 6  math--  数学 関数 
5 . 7  cmath--  複素数 の ため の 数学 関数 
5 . 8  random- -  擬似 乱数 を 生成 する 
5 . 9  whrandom- -  擬似 乱数 生成 器 
5 . 10  bisect --  配列 二 分 法 アルゴリズム 
5 . 10 . 1  使用 例 
5 . 11  collections --  高 性能 な コンテナ ・ データ 型 
5 . 1 1 . 1  レシピ 
5 . 12  heapq-- ヒープ キュー アルゴリズム 
5 . 12 . 1  理論 
5 . 13 array --  効率 の よ い 数値 アレイ 
5 . 14  sets-- ユニーク な 要素 の 順序 なし コレクション 
5 . 1 4 . 1  Set  オブジェクト 
5 . 1 4 . 2  使用 例 
5 . 1 4 . 3  不変 に 自動 変換 する ため の プロトコル 
5 . 15 itertools --  効率 的 な ループ 実行 の ため の イテレータ 生成 関数 
5 . 15 . 1  Itertool 関数 
5 . 15 . 2  例 
5 . 15 . 3  レシピ 
5 . 16  ConfigParser - - 設定 ファイル の 構文 解析 器 
5 . 16 . 1  Raw ConfigParser  オブジェクト 
5 . 16 . 2  ConfigParser  オブジェクト 
5 . 16 . 3  Safe ConfigParser  オブジェクト 
5 . 17  fileinput  - - 複数 の 入力 ストリーム を また い だ 行 の 繰り返 し 処理 を サポート する 。 
5 . 18  calendar- -  一般 的 な カレンダー に 関 する 関数 群 
5 . 19  cmd  --  行 指向 の コマンド インタープリタ の サポート 
5 . 1 9 . 1  Cmd オブジェクト 
5 . 20  shlex - -  単純 な 字句 解析 
5 . 2 0 . 1  モジュール の 内容  5 . 2 0 . 2  shlex  オブジェクト 
5 . 2 0 . 3  解析 規則 
6 .  汎用 オペレーティング システム サービス 
6 . 1 os --  雑多 な オペレーティング システム インタフェース 
6 . 1 . 1  プロセス の パラメタ 
6 . 1 . 2  ファイル オブジェクト の 生成 
6 . 1 . 3  ファイル 記述 子 の 操作 
6 . 1 . 4  ファイル と ディレクトリ 
6 . 1 . 5  プロセス 管理 
6 . 1 . 6  雑多 な システム 情報 
6 . 1 . 7  雑多 な 関数 
6 . 2  os . path - - 共通 の パス 名 操作 
6 . 3  dircache--  キャッシュ さ れ た ディレクトリ 一覧 の 生成 
6 . 4  stat --stat ( )  の 返 す 内容 を 解釈 する 
6 . 5  statcache-- os . stat ( )  の 最適 化 
6 . 6  statvfs-- os . statvfs ( )  で 使 わ れ る 定数 群 
6 . 7  filecmp -- ファイル および ディレクトリ の 比較 
6 . 7 . 1  dircmp  クラス 
6 . 8  subprocess -- サブ プロセス 管理 
6 . 8 . 1  subprocess  モジュール を 使 う 
6 . 8 . 2  Popen  オブジェクト 
6 . 8 . 3  古 い 関数 を  subprocess  モジュール で 置き換え る 
6 . 9  popen 2 - -  アクセス 可能 な  I \/ O  ストリーム を 持 つ 子 プロセス 生成 
6 . 9 . 1  Popen 3  および  Popen 4  オブジェクト 
6 . 9 . 2  フロー 制御 の 問題 
6 . 10  datetime- -  基本 的 な 日付 型 および 時間 型 
6 . 10 . 1  利用 可能 な データ 型 
6 . 10 . 2  timedelta  オブジェクト 
6 . 10 . 3  date  オブジェクト 
6 . 10 . 4  datetime オブジェクト 
6 . 10 . 5  time オブジェクト 
6 . 10 . 6  tzinfo  オブジェクト 
6 . 10 . 7  strftime( )  の 振る舞い 
6 . 11 time- -  時刻 データ へ の アクセス と 変換 
6 . 12  sched--  イベントスケジューラ 
6 . 12 . 1  スケジューラ オブジェクト 
6 . 13  mutex  --  排他 制御 
6 . 13 . 1  mutex  オブジェクト 
6 . 14  getpass --  可搬 性 の あ る パスワード 入力 機構 
6 . 15  curses--  文字 セル 表示 の ため の 端末 操作 
6 . 15 . 1  関数 
6 . 15 . 2  Window  オブジェクト 
6 . 15 . 3  定数 
6 . 16  curses . text pad -- curses  プログラム の ため の テキスト 入力 ウィ ジェット 
6 . 16 . 1  Text box  オブジェクト 
6 . 17  curses . wrapper-- curses  プログラム の ため の 端末 ハンドラ 
6 . 19  curses . panel-- curses  の ため の パネル スタック 拡張 
6 . 1 9 . 1  関数 
6 . 1 9 . 2  Panel  オブジェクト 
6 . 20  getopt - - コマンドライン オプション の パーザ 
6 . 21  optparse -- より 強力 な コマンドライン オプション 解析 器 
6 . 21 . 3  リファレンス ガイド 
6 . 21 . 4  オプション 処理 コール バック 
6 . 22  tempfile --  一時 的 な ファイル や ディレクトリ の 生成 
6 . 23 errno--  標準 の  errno システム シンボル 
6 . 24  glob --Unix  形式 の パス 名 の パターン 展開 
6 . 25  fnmatch--Unix  ファイル 名 の パターン マッチ 
6 . 26  shutil --  高 レベル な ファイル 操作 
6 . 2 6 . 1  使用 例 
6 . 27  locale- -  国際 化 サービス 
6 . 2 7 . 1  ロケール の 背景 、 詳細 、 ヒント 、 助言 および 補足 説明 
6 . 2 7 . 2  Python  拡張 の 作者 と 、 Python  を 埋め込 む よう な プログラム に 関 し て 
6 . 2 7 . 3  メッセージ カタログ へ の アクセス 
6 . 28  gettext  --  多 言語 対応 に 関 する 国際 化 サービス 
6 . 28 . 2  クラス に 基づ い た  API 
6 . 28 . 3  プログラム や モジュール を 国際 化 する 
6 . 28 . 4  謝辞 
6 . 29  logging  -- Python  用 ロギング 機能 
6 . 2 9 . 1  Logger  オブジェクト 
6 . 2 9 . 2  基本 的 な 使 い 方 
6 . 2 9 . 3  複数 の 出力 先 に ログ を 出力 する 
6 . 2 9 . 4  ログ イベント を ネットワーク 越し に 送受信 する 
6 . 2 9 . 5  Handler  オブジェクト 
6 . 2 9 . 6  Formatter  オブジェクト 
6 . 2 9 . 7  Filter  オブジェクト 
6 . 2 9 . 8  LogRecord  オブジェクト 
6 . 2 9 . 9  スレッド 安全 性 
6 . 2 9 . 10  環境 設定 
6 . 30  platform - -  実行 中 プラットフォーム の 固有 情報 を 参照 する 
6 . 3 0 . 1  クロス  プラットフォーム 
6 . 3 0 . 2  Java  プラットフォーム 
6 . 3 0 . 3  Windows  プラットフォーム 
6 . 3 0 . 4  Mac  OS  プラットフォーム 
6 . 3 0 . 5  Unix  プラットフォーム 
7 .  オプション の オペレーティング システム サービス 
7 . 1  signal --  非 同期 イベント に ハンドラ を 設定 する 
7 . 1 . 1  例 
7 . 2  socket--  低 レベル ネットワーク インターフェース 
7 . 2 . 1  socket  オブジェクト 
7 . 2 . 2  SSL  オブジェクト 
7 . 2 . 3  例 
7 . 3  select -- I\/ O  処理 の 完了 を 待機 する 
7 . 3 . 1  ポーリング オブジェクト 
7 . 4  thread --  マルチ スレッド の コントロール 
7 . 5  threading  - -  高 水準 の スレッド インタフェース 
7 . 5 . 1  Lock  オブジェクト 
7 . 5 . 2  RLock  オブジェクト 
7 . 5 . 3  Condition  オブジェクト 
7 . 5 . 4  Semaphore  オブジェクト 
7 . 5 . 5  Event  オブジェクト 
7 . 5 . 6  Thread  オブジェクト 
7 . 5 . 7  Timer  オブジェクト 
7 . 6  dummy _ thread --thread  の 代替 モジュール 
7 . 7  dummy _ threading  --threading  の 代替 モジュール 
7 . 8  Queue - -  同期 キュー クラス 
7 . 8 . 1  キュー オブジェクト 
7 . 9  mmap -- メモリ マップ ファイル 
7 . 10 anydbm--  DBM  形式 の データベース へ の 汎用 アクセス インタフェース 
7 . 11  dbhash-- BSD  データベース ライブラリ へ の  DBM  形式 の インタフェース 
7 . 1 1 . 1  データベース オブジェクト 
7 . 12  whichdb --  どの DBM モジュール が データベース を 作 っ た か を 推測 する 
7 . 13  bsddb --  Berkeley  DB  ライブラリ へ の インタフェース 
7 . 13 . 1  ハッシュ 、 BTree 、 および レコード オブジェクト 
7 . 14  dumbdbm- -  可搬 性 の あ る  DBM  実装 
7 . 1 4 . 1  Dumbdbm  オブジェクト 
7 . 15  zlib --gzip  互換 の 圧縮 
7 . 16  gzip --gzip  ファイル の サポート 
7 . 17  bz 2 --bzip 2  互換 の 圧縮 ライブラリ 
7 . 17 . 1  ファイル の 圧縮 ( 解凍 ) 
7 . 17 . 2  逐次 的 な 圧縮 ( 解凍 ) 
7 . 17 . 3  一括 圧縮 ( 解凍 ) 
7 . 18  zipfile --  ZIP  アーカイブ の 処理 
7 . 18 . 1  ZipFile  オブジェクト 
7 . 18 . 2  PyZipFile  オブジェクト 
7 . 18 . 3  Zip Info  オブジェクト 
7 . 19 tarfile --tar  アーカイブ ファイル を 読み書き する 
7 . 1 9 . 1  TarFile  オブジェクト 
7 . 1 9 . 2  Tar Info  オブジェクト 
7 . 1 9 . 3  例 
7 . 20  readline -- GNU  readline  の インタフェース 
7 . 2 0 . 1  例 
7 . 21 rlcompleter -- GNU  readline 向け 補完 関数 
7 . 21 . 1  Completer オブジェクト 
8 .  Unix 独特 の サービス 
8 . 1  posix  - -  最も 一般 的 な  POSIX  システム コール 群 
8 . 1 . 1  ラージ ファイル の サポート 
8 . 1 . 2  モジュール の 内容 
8 . 2  pwd--  パスワード データベース へ の アクセス を 提供 する 
8 . 3  grp --  グループ データベース へ の アクセス 
8 . 4  crypt--Unix  パスワード を チェック する ため の 関数 
8 . 5  dl --  共有 オブジェクト の C 関数 の 呼び出 し 
8 . 5 . 1  Dl オブジェクト 
8 . 6  dbm-- UNIX  dbm の シンプル な インタフェース 
8 . 7  gdbm-- GNU  に よ る  dbm  の 再 実装 
8 . 8  termios -- POSIX  スタイル の 端末 制御 
8 . 8 . 1  使用 例 
8 . 9 tty--  端末 制御 の ため の 関数 群 
8 . 10 pty--  擬似 端末 ユーティリティ 
8 . 11  fcntl-- fcntl ( )  および  ioctl ( )  システム コール 
8 . 12  pipes-- シェル パイプライン へ の インタフェース 
8 . 12 . 1  テンプレート オブジェクト 
8 . 13  posixfile --  ロック 機構 を サポート する ファイル 類似 オブジェクト 
8 . 14  resource  --  リソース 使用 状態 の 情報 
8 . 1 4 . 1  リソース の 制限 
8 . 1 4 . 2  リソース の 使用 状態 
8 . 15  nis -- Sun  の  NIS  ( Yellow  Pages )  へ の インタフェース 
8 . 16  syslog --Unix  syslog  ライブラリ ルーチン 群 
8 . 17  commands --  コマンド 実行 ユーティリティ 
9 .  Python デバッガ 
9 . 1  デバッガ コマンド 
9 . 2  どの よう に 動作 し て い る か 
10 .  Python  プロファイラ 
10 . 1  プロファイラ と は 
10 . 2  旧 バージョン の プロファイラ と の 違い 
10 . 3  インスタント ・ ユーザ ・ マニュアル 
10 . 4  決定 論 的 プロファイリング と は 何 か ? 
10 . 5  リファレンス ・ マニュアル 
10 . 5 . 1  Stats  クラス 
10 . 6  制限 事項 
10 . 7  キャリブレーション ( 補正 ) 
10 . 8  拡張  --  プロファイラ の 改善 
10 . 9  hotshot-- ハイ パフォーマンス ・ ロギング ・ プロファイラ 
10 . 9 . 1  プロファイル ・ オブジェクト 
10 . 9 . 2  hotshot  データ の 利用 
10 . 9 . 3  使用 例 
10 . 10 timeit --  小さな コード 断片 の 実行 時間 計測 
10 . 10 . 1  コマンドライン ・ インターフェース 
10 . 10 . 2  使用 例 
11 .  インターネット プロトコル と その 支援 
1 1 . 1  webbrowser - - 便利 な ウェブ ブラウザ コントローラー 
1 1 . 1 . 1  ブラウザ コントローラー オブジェクト 
1 1 . 2  cgi -- CGI  ( ゲートウェイ インタフェース 規格 )  の サポート 
1 1 . 2 . 1  はじめ に 
1 1 . 2 . 2  cgi モジュール を 使 う 
1 1 . 2 . 3  高 水準 インタフェース 
1 1 . 2 . 4  古 い クラス 群 
1 1 . 2 . 5  関数 
1 1 . 2 . 6  セキュリティ へ の 配慮 
1 1 . 2 . 7  CGI  スクリプト を  Unix  システム に インストール する 
1 1 . 2 . 8  CGI  スクリプト を テスト する 
1 1 . 2 . 9  CGI  スクリプト を デバッグ する 
1 1 . 2 . 10  よく あ る 問題 と 解決 法 
1 1 . 3  cgitb-- CGI  スクリプト の トレース バック 管理 機構 
1 1 . 4  urllib -- URL  に よ る 任意 の リソース へ の アクセス 
1 1 . 4 . 1  URLopener  オブジェクト 
1 1 . 4 . 2  使用 例 
1 1 . 5  urllib 2 - - URL  を 開 く ため の 拡張 可能 な ライブラリ 
1 1 . 5 . 1  Request  オブジェクト 
1 1 . 5 . 2  OpenerDirector  オブジェクト 
1 1 . 5 . 3  BaseHandler  オブジェクト 
1 1 . 5 . 4  HTTPRedirectHandler  オブジェクト 
1 1 . 5 . 5  HTTPCookieProcessor  オブジェクト 
1 1 . 5 . 6  ProxyHandler  オブジェクト 
1 1 . 5 . 7  HTTPPasswordMgr  オブジェクト 
1 1 . 5 . 8  AbstractBasicAuthHandler  オブジェクト 
1 1 . 5 . 9  HTTPBasicAuthHandler  オブジェクト 
1 1 . 5 . 10  ProxyBasicAuthHandler  オブジェクト 
1 1 . 5 . 11  AbstractDigestAuthHandler  オブジェクト 
1 1 . 5 . 12  HTTPDigestAuthHandler  オブジェクト 
1 1 . 5 . 13  ProxyDigestAuthHandler  オブジェクト 
1 1 . 5 . 14  HTTPHandler  オブジェクト 
1 1 . 5 . 15  HTTPSHandler  オブジェクト 
1 1 . 5 . 16  FileHandler  オブジェクト 
1 1 . 5 . 17  FTPHandler  オブジェクト 
1 1 . 5 . 18  CacheFTPHandler  オブジェクト 
1 1 . 5 . 19  GopherHandler  オブジェクト 
1 1 . 5 . 20  UnknownHandler  オブジェクト 
1 1 . 5 . 21  HTTPError Processor  オブジェクト 
1 1 . 5 . 22  例 
1 1 . 6 httplib -- HTTP  プロトコル クライアント 
1 1 . 6 . 1  HTTPConnection  オブジェクト 
1 1 . 6 . 2  HTTPResponse  オブジェクト 
1 1 . 6 . 3  例 
1 1 . 7  ftplib -- FTP プロトコル クライアント 
1 1 . 7 . 1  FTP  オブジェクト 
1 1 . 8  gopherlib --gopher  プロトコル の クライアント 
1 1 . 9  poplib -- POP 3  プロトコル クライアント 
1 1 . 9 . 1  POP 3  オブジェクト 
1 1 . 9 . 2  POP 3  の 例 
1 1 . 10  imaplib --  IMAP 4  プロトコル クライアント 
1 1 . 10 . 1  IMAP 4  オブジェクト 
1 1 . 10 . 2  IMAP 4  の 使用 例 
1 1 . 11 nntplib -- NNTP  プロトコル クライアント 
1 1 . 1 1 . 1  NNTP  オブジェクト 
1 1 . 12  smtplib --  SMTP  プロトコル  クライアント 
1 1 . 12 . 1  SMTP  オブジェクト 
1 1 . 12 . 2  SMTP  使用 例 
1 1 . 13  smtpd--  SMTP  サーバ 
1 1 . 13 . 1  SMTP Server  オブジェクト 
1 1 . 13 . 2  Debugging Server  オブジェクト 
1 1 . 1 3 . 3  PureProxy  オブジェクト 
1 1 . 14 telnetlib -- Telnet  クライアント 
1 1 . 1 4 . 1  Telnet  オブジェクト 
1 1 . 15 urlparse -- URL  を 解析 し て 構成 要素 に する 
1 1 . 16  SocketServer -- ネットワーク サーバ 構築 の ため の フレームワーク 
1 1 . 17  Base HTTPServer - -  基本 的 な 機能 を 持 つ  HTTP  サーバ 
1 1 . 18  Simple HTTPServer -- 簡潔 な  HTTP  リクエスト ハンドラ 
1 1 . 19  CGIHTTPServer -- CGI  実行 機能 付き  HTTP  リクエスト 処理 機構 
1 1 . 20  cookielib -- HTTP  クライアント 用 の  Cookie  処理 
1 1 . 2 0 . 1  CookieJar  および  File CookieJar  オブジェクト 
1 1 . 2 0 . 2  File CookieJar  の サブ クラス と  web  ブラウザ と の 連携 
1 1 . 2 0 . 3  CookiePolicy  オブジェクト 
1 1 . 2 0 . 4  DefaultCookiePolicy  オブジェクト 
1 1 . 2 0 . 5  Cookie  オブジェクト 
1 1 . 2 0 . 6  使用 例 
1 1 . 21  Cookie -- HTTP の 状態 管理 
1 1 . 21 . 1  Cookie オブジェクト 
1 1 . 21 . 2  Morsel オブジェクト 
1 1 . 21 . 3  例 
1 1 . 22  xmlrpclib --  XML - RPC  クライアント アクセス 
1 1 . 2 2 . 1  Server Proxy  オブジェクト 
1 1 . 2 2 . 5  Fault  オブジェクト 
1 1 . 2 2 . 6  ProtocolError  オブジェクト 
1 1 . 2 2 . 7  MultiCall  オブジェクト 
1 1 . 2 2 . 8  補助 関数 
1 1 . 2 2 . 9  クライアント の サンプル 
1 1 . 23  SimpleXMLR PCServer - -  基本 的 な XML - RPC サーバー 
1 1 . 23 . 1  SimpleXMLR PCServer  オブジェクト 
1 1 . 24  DocXMLR PCServer --  セルフ - ドキュメンティング  XML - RPC  サーバ 
1 1 . 2 4 . 1  DocXMLR PCServer  オブジェクト 
1 1 . 25  asyncore  --  非 同期 ソケット ハンドラ 
1 1 . 25 . 1  asyncore の 例 : 簡単 な HTTP クライアント 
1 1 . 26  asynchat--  非 同期 ソケット  コマンド \/ レスポンス  ハンドラ 
1 1 . 2 6 . 1  asynchat -  補助 クラス と 関数 
1 1 . 2 6 . 2  asynchat  使用 例 
12 .  インターネット 上 の データ の 操作 
12 . 1  formatter --  汎用 の 出力 書式 化 機構 
12 . 1 . 1  formatter  インタフェース 
12 . 1 . 2  formatter  実装 
12 . 1 . 3  writer  インタフェース 
12 . 1 . 4  writer  実装 
12 . 2 email - -  電子 メール と  MIME  処理 の ため の パッケージ 
12 . 2 . 1  電子 メール メッセージ の 表現 
12 . 2 . 2  電子 メール メッセージ を 解析 ( パース ) する 
12 . 2 . 3  MIME  文書 を 生成 する 
12 . 2 . 4  電子 メール および  MIME  オブジェクト を ゼロ から 作成 する 
12 . 2 . 5  国際 化 さ れ た ヘッダ 
12 . 2 . 6  文字 セット の 表現 
12 . 2 . 7  エンコーダ 
12 . 2 . 8  例外 および 障害 クラス 
12 . 2 . 9  雑用 ユーティリティ 
12 . 2 . 10  イテレータ 
12 . 2 . 1 1  パッケージ の 履歴 
12 . 2 . 12  mimelib  と の 違い 
12 . 2 . 13  使用 例 
12 . 3  mailcap --mailcap  ファイル の 操作 
12 . 4  mailbox - -  様々 な メール ボックス 形式 の 読み出し 
12 . 4 . 1  Mailbox  オブジェクト 
12 . 5  mhlib -- MH  の メイル ボックス へ の アクセス 機構 
12 . 5 . 1  MH  オブジェクト 
12 . 5 . 2  Folder  オブジェクト 
12 . 5 . 3  Message  オブジェクト 
12 . 6  mimetools -- MIME  メッセージ を 解析 する ため の ツール 
12 . 6 . 1  Message  オブジェクト の 追加 メソッド 
12 . 7  mimetypes-- ファイル 名 を  MIME  型 へ マップ する 
12 . 7 . 1  Mime 型  オブジェクト 
12 . 8  MimeWriter --  汎用  MIME  ファイル ライター 
12 . 8 . 1  MimeWriter  オブジェクト 
12 . 9  mimify- -  電子 メイル メッセージ の  MIME  処理 
12 . 10  multifile --  個別 の 部分 を 含 ん だ ファイル 群 の サポート 
12 . 10 . 1  MultiFile  オブジェクト 
12 . 10 . 2  MultiFile  の 例 
12 . 11  rfc 822  - - RFC  28 2 2  準拠 の メイル ヘッダ 読み出し 
12 . 1 1 . 1  Message  オブジェクト 
12 . 1 1 . 2  AddressList  オブジェクト 
12 . 12  base 64  - - RFC  35 4 8 :  Base 16 ,  Base 32 ,  Base 64  テータ の 符号 化 
12 . 13  binascii--  バイナリ データ と  ASCII データ と の 間 で の 変換 
12 . 14  binhex -- binhex 4  形式 ファイル の エンコード および デコード 
12 . 1 4 . 1  注記 
12 . 15  quopri -- MIME  quoted - printable  形式 データ の エンコード および デコード 
12 . 16  uu -- uuencode 形式 の エンコード と デコード 
12 . 17  xdrlib -- XDR  データ の エンコード および デコード 
12 . 17 . 1  Packer  オブジェクト 
12 . 17 . 2 Unpacker  オブジェクト 
12 . 17 . 3  例外 
12 . 18  netrc-- netrc  ファイル の 処理 
12 . 18 . 1  netrc  オブジェクト 
12 . 19  robotparser-- robots . txt  の ため の パーザ 
12 . 20  csv -- CSV  ファイル の 読み書き 
12 . 2 0 . 1  モジュール の 内容 
12 . 2 0 . 2  Dialect  クラス と 書式 化 パラメタ 
12 . 2 0 . 3  reader  オブジェクト 
12 . 2 0 . 4  writer  オブジェクト 
12 . 2 0 . 5  使用 例 
13 .  構造 化 マーク アップ ツール 
13 . 1  HTMLParser-- HTML  および  X HTML  の シンプル な パーザ 
13 . 1 . 1  HTML  パーザ アプリケーション の 例 
13 . 2  sgmllib --  単純 な  SGML  パーザ 
13 . 3  htmllib -- HTML  文書 の 解析 器 
13 . 3 . 1  HTMLParser  オブジェクト 
13 . 4  htmlentitydefs-- HTML  一般 エンティティ の 定義 
13 . 5  xml . parsers . expat--  Expat  を 使 っ た 高速 な  XML  解析 
13 . 5 . 2  ExpatError  例外 
13 . 5 . 3  例 
13 . 5 . 4  内容 モデル の 記述 
13 . 5 . 5  Expat  エラー 定数 
13 . 6  xml . dom- -  文書 オブジェクト モデル  ( DOM)  API 
13 . 6 . 1  モジュール の 内容 
13 . 6 . 2  DOM  内 の オブジェクト 
13 . 6 . 3  適合 性 
13 . 7  xml . dom. minidom- -  軽量 な  DOM  実装 
13 . 7 . 1  DOM  オブジェクト 
13 . 7 . 2  DOM  の 例 
13 . 7 . 3  minidom と  DOM  標準 
13 . 8  xml . dom. pulldom- -  部分 的 な  DOM  ツリー 構築 の サポート 
13 . 8 . 1  DOMEventStream  オブジェクト 
13 . 9  xml . sax -- SAX 2  パーサ の サポート 
13 . 9 . 1  SAXException  オブジェクト 
13 . 10  xml . sax . handler-- SAX  ハンドラ の 基底 クラス 
13 . 10 . 1  ContentHandler  オブジェクト 
13 . 10 . 2  DTDHandler  オブジェクト 
13 . 10 . 3  EntityResolver  オブジェクト 
13 . 10 . 4  ErrorHandler  オブジェクト 
13 . 1 1  xml . sax . saxutils -- SAX  ユーティリティ 
13 . 12  xml . sax . xmlreader--  XML  パーサ の インターフェース 
13 . 12 . 1  XMLReader  オブジェクト 
13 . 12 . 2  IncrementalParser  オブジェクト 
13 . 1 2 . 3  Locator  オブジェクト 
13 . 1 2 . 4  InputSource  オブジェクト 
13 . 12 . 5  The Attributes  インターフェース 
13 . 1 2 . 6  AttributesNS  インターフェース 
13 . 13  xmllib --  XML  ドキュメント の パーサ 
13 . 13 . 1  XML  名前 空間 
14 .  マルチメディア サービス 
1 4 . 1  audioop --  生 の 音声 データ を 操作 する 
1 4 . 2  imageop --  生 の 画像 データ を 操作 する 
1 4 . 3  aifc -- AIFF および AIFC ファイル の 読み書き 
1 4 . 4  sunau -- Sun  AU ファイル の 読み書き 
1 4 . 4 . 1  AU _read  オブジェクト 
1 4 . 4 . 2  AU _write  オブジェクト 
1 4 . 5  wave  -- WAV ファイル の 読み書き 
1 4 . 5 . 1  Wave _ read  オブジェクト 
1 4 . 5 . 2  Wave _write  オブジェクト 
1 4 . 6  chunk -- IFF チャンク データ の 読み込 み 
1 4 . 7  colorsys--  色 体系 間 の 変換 
1 4 . 8  rgbimg --`` SGI  RGB ' ' ファイル を 読み書き する 
1 4 . 9  imghdr--  画像 の 形式 を 決定 する 
1 4 . 10  sndhdr-- サウンド ファイル の 識別 
1 4 . 11 ossaudiodev- - OSS 互換 オーディオ デバイス へ の アクセス 
1 4 . 1 1 . 1  オーディオ デバイス オブジェクト 
1 4 . 1 1 . 2  ミキサ デバイス オブジェクト 
15 .  暗号 関連 の サービス 
15 . 1  hmac -- メッセージ 認証 の ため の 鍵 付き ハッシュ 化 
15 . 2  md 5 - - MD 5  メッセージ ダイジェスト アルゴリズム 
15 . 3  sha -- SHA - 1  メッセージ ダイジェスト アルゴリズム 
16 .  Tk を 用い た グラフィカル ユーザ インターフェイス 
16 . 1  Tkinter -- Tcl \/ Tk  へ の  Python  インタフェース 
16 . 1 . 1  Tkinter  モジュール 
16 . 1 . 2  Tkinter  お 助け 手帳  ( life preserver ) 
16 . 1 . 3  Tcl \/ Tk  を  ( 本当 に 少し だけ )  見渡 し て み る 
16 . 1 . 4  基本 的 な  Tk  プログラム と  Tkinter  と の 対応 関係 
16 . 1 . 5  Tk  と  Tkinter  は どの よう に 関わ っ て い る の か 
16 . 1 . 6  簡単 な リファレンス 
16 . 2  Tix  -- Tk の 拡張 ウィ ジェット 
16 . 2 . 1  Tix を 使 う 
16 . 2 . 2  Tix ウィ ジェット 
16 . 2 . 3  Tix コマンド 
16 . 3  ScrolledText  --  スクロール する テキストウィ ジェット 
16 . 4  turtle-- Tk の ため の タートル グラフィックス 
16 . 4 . 1  Pen と RawPen オブジェクト 
16 . 5 . 1  メニュー 
16 . 5 . 2  基本 的 な 編集 と ナビゲーション 
16 . 5 . 3  構文 の 色づけ 
16 . 6  他 の グラフィカル ユーザ インタフェース パッケージ 
17 .  制限 実行  ( restricted  execution ) 
17 . 1  rexec - -  制限 実行 の フレームワーク 
17 . 1 . 1  RExec  オブジェクト 
17 . 1 . 2  制限 さ れ た 環境 を 定義 する 
17 . 1 . 3  例 
17 . 2  Bastion --  オブジェクト に 対 する アクセス の 制限 
18 .  Python 言語 サービス 
18 . 1  parser-- Python 解析 木 に アクセス する 
18 . 1 . 1  AST オブジェクト を 作成 する 
18 . 1 . 2  AST オブジェクト を 変換 する 
18 . 1 . 3  AST オブジェクト に 対 する 問い合わせ 
18 . 1 . 4  例外 と エラー 処理 
18 . 1 . 5  AST オブジェクト 
18 . 1 . 6  例 
18 . 2 symbol -- Python 解析 木 と 共 に 使 わ れ る 定数 
18 . 3  token -- Python 解析 木 と 共 に 使 わ れ る 定数 
18 . 4  keyword -- Python キー ワード チェック 
18 . 5  tokenize-- Python ソース の ため の トーク ナイザ 
18 . 6 tabnanny--  あいまい な インデント の 検出 
18 . 7  pyclbr-- Python  クラス ブラウザー サポート 
18 . 7 . 1  クラス 記述 オブジェクト 
18 . 7 . 2  関数 記述 オブジェクト  ( Function  Descriptor Object ) 
18 . 8  py_ compile  -- Python ソース ファイル の コンパイル 
18 . 9  compileall-- Python ライブラリ を バイト コンパイル 
18 . 10  dis -- Python バイトコード の 逆 アセン ブラ 
18 . 10 . 1  Python バイトコード 命令 
18 . 11  distutils -- Python  モジュール の 構築 と インストール 
1 9 .  Python  コンパイラ パッケージ 
1 9 . 1  基本 的 な インターフェイス 
1 9 . 2  制限 
1 9 . 3  Python  抽象 構文 
1 9 . 3 . 1  AST  ノード 
1 9 . 3 . 2  代入 ノード 
1 9 . 3 . 3  サンプル 
1 9 . 4  Visitor  を 使 っ て  AST  を わたり歩 く 
1 9 . 5  バイト コード 生成 
20 .  SGI  IRIX  特有 の サービス 
20 . 1  al -- SGI の オーディオ 機能 
20 . 1 . 1  コンフィギュレーション オブジェクト 
20 . 1 . 2  ポート オブジェクト 
20 . 2  AL -- al モジュール で 使 わ れ る 定数 
20 . 3  cd -- SGI システム の CD - ROM へ の アクセス 
20 . 3 . 1  プレーヤー オブジェクト 
20 . 3 . 2  パーザ オブジェクト 
20 . 4  fl - - グラフィカル ユーザー インターフェース の ため の FORMS ライブラリ 
20 . 4 . 1  fl モジュール に 定義 さ れ て い る 関数 
20 . 4 . 2  フォーム オブジェクト 
20 . 4 . 3  FORMS オブジェクト 
20 . 5  FL -- fl モジュール で 使用 さ れ る 定数 
20 . 6  flp- - 保存 さ れ た FORMS デザイン を ロード する 関数 
20 . 7  fm -- Font  Manager  インターフェース 
20 . 8  gl -- Graphics  Library  インターフェース 
20 . 9  DEVICE  -- gl モジュール で 使 わ れ る 定数 
20 . 10  GL  -- gl モジュール で 使 わ れ る 定数 
20 . 11  imgfile -- SGI  imglib  ファイル の サポート 
20 . 12  jpeg -- JPEG ファイル の 読み書き を 行 う 
21.  SunOS  特有 の サービス 
21. 1  sunaudiodev- - Sun オーディオ ハードウェア へ の アクセス 
21. 1 . 1  オーディオ デバイス オブジェクト 
21. 2  SUN AUDIODEV  - - sunaudiodev で 使 わ れ る 定数 
22 .  MS  Windows  特有 の サービス 
22 . 1  msvcrt -  MS  VC + + 実行 時 システム の 有用 な ルーチン 群 
22 . 1 . 1  ファイル 操作 関連 
22 . 1 . 2  コンソール  I \/ O  関連 
22 . 1 . 3  その 多 の 関数 
22 . 2  _ winreg  -  Windows  レジストリ へ の アクセス 
22 . 2 . 1  レジストリ ハンドル オブジェクト 
22 . 3  winsound -- Windows  用 の 音声 再生 インタフェース 
A .  ドキュメント 化 さ れ て い な い モジュール 
A . 1  フレームワーク 
A . 2  雑多 な 有用 ユーティリティ 
A . 3  プラットフォーム 特有 の モジュール 
A . 4  マルチメディア 関連 
A . 5  撤廃 さ れ た もの 
A . 6  SGI  特有 の 拡張 モジュール 
B .  バグ 報告 
Python  ライブラリ リファレンス 
1 .  はじめ に 
リリース  2 . 4  , 平成 18 年 6 月 27 日  更新  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
この ライブラリ リファレンス マニュアル で は 、 Macintosh 用 の Python 拡張 に 関 し て 詳し く 記述 し ま す 。 
Python の 肩 の こ ら な い 入門 編 が 必要 なら 、 
を 読 ん で くださ い 。 
は 、 構文 や 意味 論 に 関 する 疑問 を 解決 する ため 、 それ なり に 分か っ た 人 が 読 む べ き もの で す 。 
最後 に ひと つ 。 
インタプリタ の 拡張 と 組み込 み  Extending  and  Embedding  the Python  Interpreter 
と い う 名 の マニュアル で は 、 Python へ 新た に 拡張 機能 を 追加 する 方法 と 、 他 の アプリケーション に 組み込 む 方法 に つ い て 述べ て い ま す 。 
1 .  C  や  C + +  に よ る  Python  の 拡張 
1 . 1  簡単 な 例 
1 .  C  や  C + +  に よ る  Python  の 拡張 
グローバル モジュール イン デクス 
モジュール 名 の 後ろ に あ る 注釈 は 、 利用 でき る プラットフォーム を 表 し て い ま す 。 
ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
C . 3  差分 翻訳 者 一覧  ( 敬称 略 ) 
1 .  Mac  OS  9 で Python を 利用 する 
1 . 1  MacPython - OSX の 取得 と インストール 
1 . 1 . 1  Python  スクリプト の 実行 方法 
1 . 1 . 2  GUI  つき の スクリプト の 実行 
1 . 1 . 3  設定 
1 . 2  MacPython - OS 9  の 取得 と インストール 
1 . 2 . 1  対話 型 インタプリタ を 使 う 
1 . 2 . 2  Python スクリプト の 走 ら せ 方 
1 . 2 . 3  コマンドライン 引数 を シミュレート する 
1 . 2 . 4  Python スクリプト を 作成 する 
1 . 3  統合 開発 環境 
1 . 3 . 1  ` ` Python  Interactive ' ' ウィンドウ を 使 う 
1 . 3 . 2  Python スクリプト を 書 く 
1 . 3 . 3  統合 開発 環境 の 中 から スクリプト を 実行 する 
1 . 3 . 4  ` ` Save  as ' ' と `` Save  as  Applet ' ' の 違い 
2 .  MacPython  モジュール 
2 . 1  mac -- os  モジュール の 実装 
2 . 2  macpath-- MacOS  の パス 操作 関数 
2 . 3  macfs- - 様々 な ファイル システム 関連 の サービス 
2 . 3 . 1  FSSpec  オブジェクト 
2 . 3 . 2  エイリアス オブジェクト 
2 . 3 . 3  FInfo  オブジェクト 
2 . 4  ic  - - インターネット 設定 へ の アクセス 
2 . 4 . 1  IC  オブジェクト 
2 . 5  MacOS -- Mac  OS  インタプリタ 機能 へ の アクセス 
2 . 6  macostools -- ファイル 操作 を 便利 に する ルーチン 集 
2 . 7  findertools --finder  の Apple Events インターフェース 
2 . 8  EasyDialogs--  基本 的 な  Macintosh  ダイアログ 
2 . 8 . 1  プログレス バー オブジェクト 
2 . 9  FrameWork --  対話 型 アプリケーション ・ フレームワーク 
2 . 9 . 1  アプリケーション オブジェクト 
2 . 9 . 2  ウィンドウ オブジェクト 
2 . 9 . 3  コントロール ウィンドウ オブジェクト 
2 . 9 . 4  スクロール ウィンドウ オブジェクト 
2 . 9 . 5  ダイアログ ウィンドウ オブジェクト 
2 . 10  autoGIL --  イベント ループ 中 の グローバル インタープリタ の 取り扱い 
3 .  MacPython  OSA  モジュール 
3 . 1  gensuitemodule -- OSA  スタプ 作成 パッケージ 
3 . 2  aetools -- OSA  クライアント の サポート 
3 . 3  aepack -- Python 変数 と AppleEvent データ コンテナ 間 の 変換 
3 . 4  aetypes-- AppleEvent  オブジェクト 
3 . 5  Mini AEFrame- - オープン スクリプティング アーキテクチャ サーバ の サポート 
3 . 5 . 1  AEServer  オブジェクト 
4 .  MacOS  ツール ボックス モジュール 
4 . 2  Carbon . AH -- Apple  ヘルプ 
4 . 3  Carbon . App--  アピアランス マネージャ 
4 . 25  ColorPicker--  色 選択 ダイアログ 
5 .  文書 化 さ れ て い な い モジュール 
5 . 1  applesingle -- AppleSingle  デコーダー 
5 . 2 buildtools --BuildApplet と その 仲間 の ヘルパー モジュール 
5 . 3  py _ resource  -- Python  コード から の リソース 生成 
5 . 4  cfmfile --  コード フラグメント リソース を 扱 う モジュール 
5 . 5  icopen -- open ( ) と  Internet  Config  の 置き換え 
5 . 6  macerrors-- MacOS の エラー 
5 . 7  macresource  --  スクリプト の リソース を 見つけ る 
5 . 8  Nav -- Nav Services  の 呼出 し 
5 . 9  mkcwproject -- CodeWarrior  プロジェクト の 作成 
5 . 10  nsremote-- Netscape  OSA モジュール の ラッパー 
5 . 11  Pix MapWrapper-- Pix Map オブジェクト の ラッパー 
5 . 12  preferences -- アプリケーション 初期 設定 管理 プログラム 
5 . 13 pythonprefs-- Python  の 初期 設定 管理 プログラム 
5 . 14  quietconsole --  不可視 の 標準 出力 
5 . 15  videoreader-- Quick Time  ムービー の 読み込 み 
5 . 16  W -- FrameWork  上 に 作 ら れ た ウイジェット 
5 . 17  waste-- Apple 製 で は な い  TextEdit  の 置き換え 
A .  歴史 と ライセンス 
A . 1  Python  の 歴史 
Macintosh モジュール リファレンス 
Python  は インタプリタ 形式 の 、 オブジェクト 指向 な 高 レベル プログラミング 言語 で 、 動的 な セマンティクス を 持 っ て い ま す 。 
Python  の 高 レベル な 組み込 み データ 構造 は 、 動的 な 型付け 機能 や 動的 な 結合 機能 と 組み合わせ る こと で 、 迅速 な アプリケーション 開発 や 既存 の ソフトウェア コンポーネント 間 を つな ぐ スクリプト 言語 、 また は 糊  ( glue )  言語 と し て  Python  を 魅力 的 な 存在 に し て い ま す 。 
Python  は 単純 で 学び やす い 文法 な の で 、 可読 性 が 高ま り 、 プログラム の メンテナンス に かか る コスト を 低減 し ま す 。 
Python  は 、 プログラム の モジュール 化 や 再 利用 を 助け る モジュール と パッケージ を サポート し ま す 。 
Python  インタプリタ と 多数 の 標準 ライブラリ は 、 ほとんど の プラットフォーム で ソース コード 形式 で も バイナリ 形式 で も 無料 で 入手 する こと が でき 、 無料 で 配布 する こと が でき ま す 。  この リファレンス マニュアル で は 、 Python  言語 の 文法 と 、 ` ` コア と な る セマンティクス ' ' に つ い て 記述 し ま す 。 
この マニュアル は そっけな い 書 き 方 か も しれ ま せ ん が 、 的確 かつ 完璧 な 記述 を 目指 し て い ま す 。  必須 で な い 組み込 み オブジェクト 型 や 組み込 み 関数 、 組み込 み モジュール に 関 する セマンティクス は 、 
で 述べ られ て い ま す 。 
形式 ば ら な い  Python  言語 入門 に は 、 
C  言語 あるいは  C + +  プログラマ 向け に は 、 この マニュアル と は 別 に 二 つ の マニュアル が あ り ま す : 
Python  インタプリタ の 拡張 と 埋め込 み 
で は 、 Python  拡張 モジュール を 書 く ため の 高 レベル な 様式 に つ い て 述べ て い ま す 。  また 、 
Python\/C API  リファレンス マニュアル 
で は 、 C \/ C + +  プログラマ が 利用 でき る インタフェース に つ い て 詳細 に 記述 し て い ま す 。 
・ 
__abs__( ) ( numeric object  、 ホ ・ 皈ス ・ テ・ ノ) 
_ _ add__( ) ( numeric object  、 ホ ・ 皈ス ・ テ・ ノ) 
__and_ _( ) ( numeric object  、 ホ ・ 皈ス ・ テ・ ノ) 
__builtin__ ( チネ、 ゜ケ モジュール ) , [ Link ] 
_ _ call_ _( ) (object  の メソッド ) 
__coerce_ _( ) ( numeric object  の メソッド ) 
__ complex_ _ ( ) ( numeric object  の メソッド ) 
__contains_ _( ) ( container object  の メソッド ) 
__ del_ _( ) (object  の メソッド ) 
__ delattr_ _( ) (object  の メソッド ) 
__ delete__( ) (object  の メソッド ) 
__ delitem__( ) ( container object  の メソッド ) 
__ delslice_ _( ) ( sequence  object  の メソッド ) 
__div__( ) ( numeric object  の メソッド ) 
__divmod_ _( ) ( numeric object  の メソッド ) 
_ _eq_ _( ) (object  の メソッド ) 
_ _float__( ) ( numeric object  の メソッド ) 
_ _floordiv__( ) ( numeric object  の メソッド ) 
_ _ ge__( ) (object  の メソッド ) 
_ _ get__( ) (object  の メソッド ) 
_ _ getattr_ _( ) (object  の メソッド ) 
_ _ getattribute__( ) (object  の メソッド ) 
_ _ getitem__( ) ( container object  の メソッド ) 
_ _ getslice_ _( ) ( sequence  object  の メソッド ) 
_ _gt__( ) (object  の メソッド ) 
_ _ hash_ _( ) (object  の メソッド ) 
_ _hex_ _ ( ) ( numeric object  の メソッド ) 
_ _ i add__( ) ( numeric object  の メソッド ) 
_ _iand_ _( ) ( numeric object  の メソッド ) 
_ _ idiv__( ) ( numeric object  の メソッド ) 
_ _ ifloordiv__( ) ( numeric object  の メソッド ) 
_ _ ilshift__( ) ( numeric object  の メソッド ) 
_ _ i mod_ _( ) ( numeric object  の メソッド ) 
_ _i mport__( )  ( 組み込 み 関数 ) 
_ _ imul_ _( ) ( numeric object  の メソッド ) 
_ _ init_ _( ) (object  の メソッド )  __init_ _. py 
_ _ int__( ) ( numeric object  の メソッド ) 
_ _ invert__( ) ( numeric object  の メソッド ) 
_ _ ior_ _( ) ( numeric object  の メソッド ) 
_ _ipow_ _( ) ( numeric object  の メソッド ) 
_ _ irshift__( ) ( numeric object  の メソッド ) 
_ _ isub__( ) ( numeric object  の メソッド ) 
_ _iter_ _( ) ( container object  の メソッド ) 
_ _ itruediv__( ) ( numeric object  の メソッド ) 
_ _ ixor_ _( ) ( numeric object  の メソッド ) 
_ _le__( ) (object  の メソッド ) 
_ _len__( ) ( container object  の メソッド ) 
_ _ long _ _( ) ( numeric object  の メソッド ) 
_ _lshift__( ) ( numeric object  の メソッド ) 
_ _lt__( ) (object  の メソッド ) 
_ _main__ ( 組み込 み  モジュール ) , [ Link ] , [ Link ] 
_ _mod_ _( ) ( numeric object  の メソッド ) 
_ _mul_ _( ) ( numeric object  の メソッド ) 
_ _ne__( ) (object  の メソッド ) 
_ _neg_ _( ) ( numeric object  の メソッド ) 
_ _oct__( ) ( numeric object  の メソッド ) 
_ _or_ _( ) ( numeric object  の メソッド ) 
_ _ pos_ _( ) ( numeric object  の メソッド ) 
_ _pow_ _( ) ( numeric object  の メソッド ) 
_ _ radd__( ) ( numeric object  の メソッド ) 
_ _rand_ _( ) ( numeric object  の メソッド ) 
_ _rcmp__( ) (object  の メソッド ) 
_ _rdiv__( ) ( numeric object  の メソッド ) 
_ _rdivmod_ _( ) ( numeric object  の メソッド ) 
_ _repr_ _( ) (object  の メソッド ) 
_ _rfloordiv__( ) ( numeric object  の メソッド ) 
_ _rlshift__( ) ( numeric object  の メソッド ) 
_ _rmod_ _( ) ( numeric object  の メソッド ) 
_ _rmul_ _( ) ( numeric object  の メソッド ) 
_ _ror_ _( ) ( numeric object  の メソッド ) 
_ _rpow_ _( ) ( numeric object  の メソッド ) 
_ _rrshift__( ) ( numeric object  の メソッド ) 
_ _rshift__( ) ( numeric object  の メソッド ) 
_ _rsub__( ) ( numeric object  の メソッド ) 
_ _rtruediv__( ) ( numeric object  の メソッド ) 
_ _rxor_ _( ) ( numeric object  の メソッド ) 
__set__( ) (object  の メソッド ) 
__setattr_ _( ) (object  method ) __setattr_ _( ) (object  の メソッド ) 
__setitem__( ) ( container object  の メソッド ) 
__setslice_ _( ) ( sequence  object  の メソッド ) 
_ _str_ _( ) (object  の メソッド ) 
_ _ sub__( ) ( numeric object  の メソッド ) 
_ _truediv__( ) ( numeric object  の メソッド ) 
_ _unicode__( ) (object  の メソッド ) 
_ _xor_ _( ) ( numeric object  の メソッド ) 
abs ( )  ( 組み込 み 関数 ) 
array  ( 標準  モジュール ) 
bsddb  ( 標準  モジュール ) 
chr ( )  ( 組み込 み 関数 ) , [ Link ] 
cmp ( )  ( 組み込 み 関数 ) 
compile ( )  ( 組み込 み 関数 ) 
complex ( )  ( 組み込 み 関数 ) 
divmod ( )  ( 組み込 み 関数 ) , [ Link ] 
キー ワード 
キー ワード , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
eval ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
execfile ( )  ( 組み込 み 関数 ) 
キー ワード , [ Link ] , [ Link ] , [ Link ] 
float ( )  ( 組み込 み 関数 ) 
キー ワード , [ Link ] 
gdbm  ( 標準  モジュール ) 
globals ( )  ( 組み込 み 関数 ) 
hex ( )  ( 組み込 み 関数 ) 
id ( )  ( 組み込 み 関数 ) 
indices ( )  (slice  の メソッド ) 
input ( )  ( 組み込 み 関数 ) 
int ( )  ( 組み込 み 関数 ) 
len ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
locals ( )  ( 組み込 み 関数 ) 
long ( )  ( 組み込 み 関数 ) 
oct ( )  ( 組み込 み 関数 ) 
open ( )  ( 組み込 み 関数 ) 
ord ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
pow ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] , [ Link ] 
range ( )  ( 組み込 み 関数 ) 
raw _ input ( )  ( 組み込 み 関数 ) 
repr ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
slice ( )  ( 組み込 み 関数 ) 
str ( )  ( 組み込 み 関数 ) , [ Link ] 
sys  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] , [ Link ] 
type ( )  ( 組み込 み 関数 ) 
unichr ( )  ( 組み込 み 関数 ) 
unicode ( )  ( 組み込 み 関数 ) , [ Link ] 
except ・ ュ。 
Python  2 . 4  ドキュメント  -  June  27 ,  2006 
Python  ドキュメント 
チュートリアル 
( ここ から 読 み 始め て くださ い ) 
Python  更新 情報  ( 英語 ) 
( 一 つ 前 の メジャー リリース から の 変更 ) 
( 全 ドキュメント に す ばや く アクセス でき ま す )  ライブラリ リファレンス 
( 枕 の 下 に いつ も 置 い て お き ま しょ う )  Macintosh  モジュール リファレンス 
( Macintosh  を 使 っ て い る なら これ も )  Python  モジュール の インストール 
( 管理 者 向け )  Python  モジュール の 配布 
( 開発 者 , パッケージ 作成 者 向け ) 
リファレンス マニュアル 
( 弁語 士 向け )  拡張 と 埋め込 み 
( C \/ C + +  プログラマ 向け チュートリアル )  Python\/C API 
( C \/ C + +  プログラマ 向け リファレンス )  Python  ドキュメント の 作成 
( ドキュメント 作者 用 の 情報 ) 
ドキュメント 作成 本部  ( 英語 ) 
( すべて の 人 に ) 
Python  How - To  ガイド  ( 英語 ) 
( 専門 的 な 話題 ) 
Python  ライブラリ リファレンス 
Python  言語 の コア 部分 で は 、 これ ら の 型 に 対 し て リテラル 表現 形式 を 与え 、 意味 づけ 上 の いく つ か の 制約 を 与え て い ま す が 、 完全 に その 意味 づけ を 定義 し て い る わけ で は あ り ま せ ん 。 
( 一方 で 、 言語 の コア 部分 で は 演算 子 の スペル や 優先 順位 の よう な 構文 法 的 な 属性 を 定義 し て い ま す 。 )  この ライブラリ に は また 、 組み込 み 関数 と 例外 が 納め られ て い ま す  - - 組み込 み 関数 および 例外 は 、 全て の  Python  で 書 か れ た コード 上 で 、 import  文 を 使 わ ず に 使 う こと が でき る オブジェクト で す 。 
ある モジュール は  C  言語 で 書 か れ 、 Python  インタプリタ に 組み込 ま れ て い ま す ;  一方 別 の モジュール は  Python  で 書 か れ 、 ソース コード の 形式 で 取り込 ま れ ま す 。 
つまり 、 この マニュアル を 最初 から 読 み 始め 、 読み 飽き 始め た ところ で 次 の 章 に 進 め ば 、 Python  ライブラリ で 利用 でき る モジュール や サポート し て い る アプリケーション 領域 の 概要 を そこそこ 理解 でき る と い う こと で す 。 
もちろん 、 この マニュアル を 小説 の よう に 読 む 必要 は あ り ま せ ん - -  ( マニュアル の 先頭 部分 に あ る )  目次 に ざっと 目 を 通 し たり 、 ( 最 後尾 に あ る )  索引 で お 目当て の 関数 や モジュール 、 用語 を 探 す こと だ って でき ま す 。 
もし ランダム な 項目 に つ い て 勉強 し て み た い の なら 、 ランダム に ページ を 選 び  ( 
参照 ) 、 そこ から 1 ,  2  節読 む こと も でき ま す 。 
Python  モジュール の インストール 
7  日本 語 訳 に つ い て 
1 .  導入 
1 . 1  本 マニュアル に おけ る 表記 法 
2 .  字句 解析 
2 . 1  行 構造 
2 . 1 . 1  論理 行  ( logical  line ) 
2 . 1 . 2  物理 行  ( physical  line ) 
2 . 1 . 3  コメント 
2 . 1 . 4  エンコード 宣言  ( encoding  declaration ) 
2 . 1 . 5  明示 的 な 行 継続 
2 . 1 . 6  非 明示 的 な 行 継続 
2 . 1 . 7  空行 
2 . 1 . 8  インデント 
2 . 1 . 9  トークン 間 の 空白 
2 . 2  その 他 の トークン 
2 . 3  識別 子  ( identifier )  および キー ワード  ( keyword ) 
2 . 3 . 1  キー ワード  ( keyword ) 
2 . 3 . 2  予約 済み の 識別 子種  ( reserved  classes of  identifiers) 
2 . 4 . 3  数値 リテラル 
2 . 4 . 4  整数 および 長 整数 リテラル 
2 . 4 . 5  浮動 小数 点数 リテラル 
2 . 4 . 6  虚数  ( imaginary )  リテラル 
2 . 5  演算 子  (operator ) 
2 . 6  デリミタ  ( delimiter ) 
3 . 3 . 1  基本 的 な カスタマイズ 
3 . 3 . 2  属性 値 アクセス を カスタマイズ する 
3 . 3 . 3  クラス 生成 を カスタマイズ する 
3 . 3 . 4  呼び出し 可能 オブジェクト を エミュレート する 
3 . 3 . 5  コンテナ を エミュレート する 
3 . 3 . 6  シーケンス 型 エミュレーション で 使 わ れ る その 他 の メソッド 
3 . 3 . 7  数値 型 を エミュレーション する 
3 . 3 . 8  型 強制 規則  ( coercion  rule ) 
4 . 1  名前 づけ と 束縛  ( naming  and  binding ) 
4 . 1 . 1  動的 な 機能 と の やりとり 
5 . 1  算術 変換  ( arithmetic  conversion ) 
5 . 2  アトム 、 原子 的 要素  ( atom) 
5 . 2 . 1  識別 子  ( identifier 、 また は 名前  ( name) ) 
5 . 2 . 2  リテラル 
5 . 2 . 3  丸括弧 形式  ( parenthesized  form ) 
5 . 2 . 4  リスト 表現 
5 . 2 . 5  ジェネレータ 式 
5 . 2 . 6  辞書 表現 
5 . 2 . 7  文字 列 変換 
5 . 3  一 次 語  ( primary ) 
5 . 3 . 1  属性 参照 
5 . 3 . 2  添字 表記  ( subscription ) 
5 . 3 . 3  スライス 表記  ( slicing ) 
5 . 3 . 4  呼び出 し  ( call ) 
5 . 4  べ き 乗 演算  ( power  operator ) 
5 . 5  単項 算術 演算  ( unary arithmetic  operation ) 
5 . 6  二 項 算術 演算  ( binary arithmetic  operation ) 
5 . 7  シフト 演算  ( shifting  operation ) 
5 . 8  ビット 単位 演算 の 二 項 演算  ( binary bit - wise  operation ) 
5 . 1 1  ラムダ  ( lambda ) 
5 . 12  式 の リスト 
5 . 13  評価 順序 
5 . 14  まとめ 
6 .  単純 文  ( simple statement ) 
6 . 1  式文  ( expression  statement ) 
6 . 2  Assert  文  ( assert statement ) 
6 . 3  代入 文  ( assignment statement ) 
6 . 3 . 1  累算 代入 文  ( augmented assignment statement ) 
6 . 4  pass  文 
6 . 5  del  文 
6 . 6  print  文 
6 . 7  return 文 
6 . 8  yield  文 
6 . 9  raise  文 
6 . 10  break  文 
6 . 11  continue  文 
6 . 12 import  文 
6 . 12 . 1  future  文  ( future statement ) 
6 . 13  global  文 
6 . 14  exec  文 
7 .  複合 文  ( compound  statement ) 
7 . 1  if  文 
7 . 2  while  文 
7 . 3  for  文 
7 . 4  try  文 
7 . 5  関数 定義 
7 . 6  クラス 定義 
8 .  トップ レベル 要素 
8 . 1  完全 な  Python  プログラム 
8 . 2  ファイル 入力 
8 . 3  対話 的 入力 
8 . 4  式 入力 
Python  リファレンス マニュアル 
1  はじめ に 
Email : distutils - sig@python . org  日本 語 訳 :  Python  ドキュメント 翻訳 プロジェクト 
平成 18 年 6 月 27 日 
この ドキュメント で は 、  Python  モジュール 配布 ユーティリティ ( Python  Distribution Utilities ,`` Distutils ' ')  に つ い て 、  エンド ユーザ の 視点 に 立 ち 、 サード パーティ 製 の モジュール や 拡張 モジュール の 構築 や インストール に よ っ て 標準 の  Python  に 機能 を 追加 する 方法 に つ い て 述べ ま す 。 
1 . 1  もっとも 簡単 な 場合 :  ありふれ た インストール 作業 
1 . 2  新し い 標準 :  Distutils 
2  標準 的 な ビルド ・ インストール 作業 
2 . 1  プラットフォーム に よ る 違い 
2 . 2  ビルド 作業 と インストール 作業 を 分割 する 
2 . 3  ビルド の 仕組み 
2 . 4  インストール の 仕組み 
3  別 の 場所 へ の インストール 
3 . 1  別 の 場所 へ の インストール :  home  スキーム 
3 . 2  別 の 場所 へ の インストール : Unix  ( prefix  スキーム ) 
3 . 3  別 の 場所 へ の インストール  ( prefix  を 使 う 方法 ) :  Windows 
4  カスタム の インストール 
4 . 1  Python  サーチ パス の 変更 
5  Distutils  設定 ファイル 
5 . 1  設定 ファイル の 場所 と 名前 
5 . 2  設定 ファイル の 構文 
6  拡張 モジュール の ビルド :  小技 と 豆 知識 
6 . 1  コンパイラ \/ リンカ の フラグ を いじ る に は 
6 . 2  Windows  で 非  Microsoft  コンパイラ を 使 っ て ビルド する に は 
3 . 1  sys-- システム パラメータ と 関数 
3 . 2  gc - - ガベージ コレクタ  インターフェース 
3 . 3  weakref  - - 弱 参照 
3 . 4  fpectl - - 浮動 小数 点 例外 の 制御 
3 . 5  atexit - - 終了 ハンドラ 
3 . 6 types- - 組み込 み 型 の 名前 
3 . 7  UserDict  - - 辞書 オブジェクト の ため の クラス ラッパー 
3 . 8  UserList  - - リスト オブジェクト の ため の クラス ラッパー 
3 . 9  UserString  - - 文字 列 オブジェクト の ため の クラス ラッパー 
3 . 10  operator  - - 関数 形式 の 標準 演算 子 
3 . 11  inspect  - - 使用 中 オブジェクト の 情報 を 取得 する 
3 . 12  traceback  -- スタック トレース の 表示 や 取り出 し 
3 . 13  linecache- - テキスト ライン に ランダム アクセス する 
3 . 16  copy _ reg -- pickle サポート 関数 を 登録 する 
3 . 17  shelve  -- Python  オブジェクト の 永続 化 
3 . 18  copy --  浅 い コピー および 深 い コピー 操作 
3 . 19 marshal  - - 内部 使用 向け の  Python  オブジェクト 整列 化 
3 . 20  warnings  - - 警告 の 制御 
3 . 21 imp--import 内部 へ アクセス する 
3 . 22  pkgutil  - - パッケージ 拡張 ユーティリティ 
3 . 23  code - - インタプリタ 基底 クラス 
3 . 24  codeop -- Python コード を コンパイル する 
3 . 25  pprint  - - データ 出力 の 整然 化 
3 . 26  repr - - もう 一 つ の repr ( ) の 実装 
3 . 27  new- - ラン タイム 内部 オブジェクト の 作成 
3 . 28  site- - サイト 固有 の 設定 フック 
3 . 29 user -- ユーザー 設定 の フック 
3 . 30 _ _builtin__ -- 組み込 み 関数 
3 . 31 _ _main__-- トップ レベル の スクリプト 環境 
3 . 32 _ _future__-- Future  ステートメント の 定義 
4 . 1  string  - - 一般 的 な 文字 列 操作 
4 . 2  re  --  正規 表現 操作 
4 . 3  struct  - - 文字 列 データ を パック さ れ た バイナリ データ と し て 解釈 する 
4 . 4  difflib - - 差異 の 計算 を 助け る 
4 . 5  fpformat - - 浮動 小数 点 の 変換 
4 . 6  StringIO - - ファイル の よう に 文字 列 を 読み書き する 
4 . 7  cStringIO - - 高速 化 さ れ た  StringIO 
4 . 8  text w rap -- テキスト の 折り返し と 詰め込 み 
4 . 9  codecs-- codec  レジストリ と 基底 クラス 
4 . 9 . 3  encodings . idna - - アプリケーション に お け る 国際 化 ドメイン 名  ( IDNA ) 
4 . 10 unicodedata-- Unicode  データベース 
4 . 11  stringprep -- インターネット の ため の 文字 列 調製 
5 . 1  pydoc- - ドキュメント 生成 と オン ライン ヘルプ システム 
5 . 2  doctest  - - 対話 モード を 使 っ た 使用 例 の 内容 を テスト する 
5 . 2 . 1  簡単 な 利用 法 :  docstring  中 の 例題 を チェック する 
5 . 2 . 2  簡単 な 利用 法 :  テキスト ファイル 中 の 例題 を チェック する 
5 . 3 unittest  - - 単体 テスト フレームワーク 
5 . 4  test  -- Python 用 回帰 テスト パッケージ 
5 . 4 . 3  test . test _ support- - テスト の ため の ユーティリティ 関数 
5 . 5  decimal  - - 10 進 浮動 小数 点数 の 算術 演算 
5 . 6  math - - 数学 関数 
5 . 7  cmath - - 複素数 の ため の 数学 関数 
5 . 8  random - - 擬似 乱数 を 生成 する 
5 . 9  whrandom - - 擬似 乱数 生成 器 
5 . 10  bisect  - - 配列 二 分 法 アルゴリズム 
5 . 11  collections  - - 高 性能 な コンテナ ・ データ 型 
5 . 12  heapq- - ヒープ キュー アルゴリズム 
5 . 13 array  - - 効率 の よ い 数値 アレイ 
5 . 14  sets-- ユニーク な 要素 の 順序 なし コレクション 
5 . 15 itertools  - - 効率 的 な ループ 実行 の ため の イテレータ 生成 関数 
5 . 16  ConfigParser - - 設定 ファイル の 構文 解析 器 
5 . 17  fileinput  - - 複数 の 入力 ストリーム を また い だ 行 の 繰り返 し 処理 を サポート する 。 
5 . 18  calendar - - 一般 的 な カレンダー に 関 する 関数 群 
5 . 19  cmd  - - 行 指向 の コマンド インタープリタ の サポート 
5 . 20  shlex - - 単純 な 字句 解析 
6 . 1 os - - 雑多 な オペレーティング システム インタフェース 
6 . 2  os . path - - 共通 の パス 名 操作 
6 . 3  dircache- - キャッシュ さ れ た ディレクトリ 一覧 の 生成 
6 . 4  stat  --stat ( )  の 返 す 内容 を 解釈 する 
6 . 5  statcache- -os . stat ( )  の 最適 化 
6 . 6  statvfs- -os . statvfs ( )  で 使 わ れ る 定数 群 
6 . 7  filecmp -- ファイル および ディレクトリ の 比較 
6 . 9  popen 2  - - アクセス 可能 な  I \/ O  ストリーム を 持 つ 子 プロセス 生成 
6 . 10  datetime- - 基本 的 な 日付 型 および 時間 型 
6 . 11 time- - 時刻 データ へ の アクセス と 変換 
6 . 12  sched-- イベントスケジューラ 
6 . 13  mutex  - - 排他 制御 
6 . 14  getpass - -  可搬 性 の あ る パスワード 入力 機構 
6 . 15  curses- - 文字 セル 表示 の ため の 端末 操作 
6 . 16  curses . text pad -- curses  プログラム の ため の テキスト 入力 ウィ ジェット 
6 . 17  curses . wrapper-- curses  プログラム の ため の 端末 ハンドラ 
6 . 19  curses . panel-- curses  の ため の パネル スタック 拡張 
6 . 20  getopt - - コマンドライン オプション の パーザ 
6 . 21  optparse - - より 強力 な コマンドライン オプション 解析 器 
6 . 22  tempfile --  一時 的 な ファイル や ディレクトリ の 生成 
6 . 23 errno - - 標準 の  errno システム シンボル 
6 . 24  glob --Unix  形式 の パス 名 の パターン 展開 
6 . 25  fnmatch--Unix  ファイル 名 の パターン マッチ 
6 . 26  shutil  - - 高 レベル な ファイル 操作 
6 . 27  locale - - 国際 化 サービス 
6 . 28  gettext  - - 多 言語 対応 に 関 する 国際 化 サービス 
6 . 29  logging  -- Python  用 ロギング 機能 
7 . 1  signal  - - 非 同期 イベント に ハンドラ を 設定 する 
7 . 2  socket- - 低 レベル ネットワーク インターフェース 
7 . 3  select  -- I\/ O  処理 の 完了 を 待機 する 
7 . 4  thread  - - マルチ スレッド の コントロール 
7 . 5  threading  - - 高 水準 の スレッド インタフェース 
7 . 6  dummy _ thread -- thread  の 代替 モジュール 
7 . 7  dummy _ threading  -- threading  の 代替 モジュール 
7 . 8  Queue  - - 同期 キュー クラス 
7 . 10 anydbm--  DBM  形式 の データベース へ の 汎用 アクセス インタフェース 
7 . 11  dbhash-- BSD  データベース ライブラリ へ の  DBM  形式 の インタフェース 
7 . 12  whichdb - - どの DBM モジュール が データベース を 作 っ た か を 推測 する 
7 . 13  bsddb --  Berkeley  DB  ライブラリ へ の インタフェース 
7 . 14  dumbdbm- - 可搬 性 の あ る  DBM  実装 
7 . 15  zlib -- gzip  互換 の 圧縮 
7 . 16  gzip -- gzip  ファイル の サポート 
7 . 17  bz 2 -- bzip 2  互換 の 圧縮 ライブラリ 
7 . 18  zipfile --  ZIP  アーカイブ の 処理 
7 . 20  readline - - GNU  readline  の インタフェース 
7 . 21 rlcompleter - - GNU  readline 向け 補完 関数 
8 . 1  posix  - - 最も 一般 的 な  POSIX  システム コール 群 
8 . 2  pwd - - パスワード データベース へ の アクセス を 提供 する 
8 . 3  grp -- グループ データベース へ の アクセス 
8 . 4  crypt--Unix  パスワード を チェック する ため の 関数 
8 . 5  dl  - - 共有 オブジェクト の C 関数 の 呼び出 し 
8 . 6  dbm- - UNIX  dbm の シンプル な インタフェース 
8 . 7  gdbm-- GNU  に よ る  dbm  の 再 実装 
8 . 8  termios - - POSIX  スタイル の 端末 制御 
8 . 9 tty - - 端末 制御 の ため の 関数 群 
8 . 10 pty - - 擬似 端末 ユーティリティ 
8 . 11  fcntl- - fcntl ( )  および  ioctl ( )  システム コール 
8 . 12  pipes-- シェル パイプライン へ の インタフェース 
8 . 13  posixfile  - - ロック 機構 を サポート する ファイル 類似 オブジェクト 
8 . 14  resource  - - リソース 使用 状態 の 情報 
8 . 15  nis -- Sun  の  NIS  ( Yellow  Pages )  へ の インタフェース 
8 . 16  syslog --Unix  syslog  ライブラリ ルーチン 群 
8 . 17  commands - - コマンド 実行 ユーティリティ 
10 . 9  hotshot - - ハイ パフォーマンス ・ ロギング ・ プロファイラ 
10 . 10 timeit - - 小さな コード 断片 の 実行 時間 計測 
1 1 . 1  webbrowser - - 便利 な ウェブ ブラウザ コントローラー 
1 1 . 2  cgi -- CGI  ( ゲートウェイ インタフェース 規格 )  の サポート 
1 1 . 3  cgitb-- CGI  スクリプト の トレース バック 管理 機構 
1 1 . 4  urllib -- URL  に よ る 任意 の リソース へ の アクセス 
1 1 . 5  urllib 2 - - URL  を 開 く ため の 拡張 可能 な ライブラリ 
1 1 . 6 httplib -- HTTP  プロトコル クライアント 
1 1 . 7  ftplib -- FTP プロトコル クライアント 
1 1 . 8  gopherlib -- gopher  プロトコル の クライアント 
1 1 . 9  poplib -- POP 3  プロトコル クライアント 
1 1 . 10  imaplib - - IMAP 4  プロトコル クライアント 
1 1 . 11 nntplib -- NNTP  プロトコル クライアント 
1 1 . 12  smtplib -- SMTP  プロトコル  クライアント 
1 1 . 13  smtpd-- SMTP  サーバ 
1 1 . 14 telnetlib -- Telnet  クライアント 
1 1 . 15 urlparse - - URL  を 解析 し て 構成 要素 に する 
1 1 . 16  SocketServer -- ネットワーク サーバ 構築 の ため の フレームワーク 
1 1 . 17  Base HTTPServer  - - 基本 的 な 機能 を 持 つ  HTTP  サーバ 
1 1 . 18  Simple HTTPServer  -- 簡潔 な  HTTP  リクエスト ハンドラ 
1 1 . 19  CGIHTTPServer -- CGI  実行 機能 付き  HTTP  リクエスト 処理 機構 
1 1 . 20  cookielib -- HTTP  クライアント 用 の  Cookie  処理 
1 1 . 21  Cookie -- HTTP の 状態 管理 
1 1 . 23  SimpleXMLR PCServer  - - 基本 的 な XML - RPC サーバー 
1 1 . 24  DocXMLR PCServer  - - セルフ - ドキュメンティング  XML - RPC  サーバ 
1 1 . 25  asyncore  - - 非 同期 ソケット ハンドラ 
1 1 . 26  asynchat - - 非 同期 ソケット  コマンド \/ レスポンス  ハンドラ 
12 . 1  formatter  - - 汎用 の 出力 書式 化 機構 
12 . 2 email  - - 電子 メール と  MIME  処理 の ため の パッケージ 
12 . 3  mailcap --mailcap  ファイル の 操作 
12 . 4  mailbox - - 様々 な メール ボックス 形式 の 読み出し 
12 . 5  mhlib -- MH  の メイル ボックス へ の アクセス 機構 
12 . 6  mimetools -- MIME  メッセージ を 解析 する ため の ツール 
12 . 7  mimetypes-- ファイル 名 を  MIME  型 へ マップ する 
12 . 8  MimeWriter  - - 汎用  MIME  ファイル ライター 
12 . 9  mimify - - 電子 メイル メッセージ の  MIME  処理 
12 . 10  multifile  - - 個別 の 部分 を 含 ん だ ファイル 群 の サポート 
12 . 11  rfc 822  - - RFC  28 2 2  準拠 の メイル ヘッダ 読み出し 
12 . 12  base 64  - - RFC  35 4 8 :  Base 16 ,  Base 32 ,  Base 64  テータ の 符号 化 
12 . 13  binascii - - バイナリ データ と  ASCII データ と の 間 で の 変換 
12 . 14  binhex -- binhex 4  形式 ファイル の エンコード および デコード 
12 . 15  quopri - - MIME  quoted - printable  形式 データ の エンコード および デコード 
12 . 16  uu - -uuencode 形式 の エンコード と デコード 
12 . 17  xdrlib -- XDR  データ の エンコード および デコード 
12 . 18  netrc-- netrc  ファイル の 処理 
13 . 1  HTMLParser-- HTML  および  X HTML  の シンプル な パーザ 
13 . 2  sgmllib  - - 単純 な  SGML  パーザ 
13 . 3  htmllib -- HTML  文書 の 解析 器 
13 . 4  htmlentitydefs-- HTML  一般 エンティティ の 定義 
13 . 5  xml . parsers . expat- - Expat  を 使 っ た 高速 な  XML  解析 
13 . 6  xml . dom - - 文書 オブジェクト モデル  ( DOM)  API 
13 . 7  xml . dom. minidom - - 軽量 な  DOM  実装 
13 . 8  xml . dom. pulldom - - 部分 的 な  DOM  ツリー 構築 の サポート 
13 . 9  xml . sax - - SAX 2  パーサ の サポート 
13 . 10  xml . sax . handler-- SAX  ハンドラ の 基底 クラス 
13 . 1 1  xml . sax . saxutils -- SAX  ユーティリティ 
13 . 12  xml . sax . xmlreader- - XML  パーサ の インターフェース 
13 . 13  xmllib -- XML  ドキュメント の パーサ 
1 4 . 1  audioop --  生 の 音声 データ を 操作 する 
1 4 . 2  imageop  -- 生 の 画像 データ を 操作 する 
1 4 . 3  aifc -- AIFF および AIFC ファイル の 読み書き 
1 4 . 4  sunau  - - Sun  AU ファイル の 読み書き 
1 4 . 5  wave  - - WAV ファイル の 読み書き 
1 4 . 6  chunk -- IFF チャンク データ の 読み込 み 
1 4 . 7  colorsys - - 色 体系 間 の 変換 
1 4 . 8  rgbimg --`` SGI  RGB ' ' ファイル を 読み書き する 
1 4 . 9  imghdr - - 画像 の 形式 を 決定 する 
1 4 . 10  sndhdr-- サウンド ファイル の 識別 
1 4 . 11 ossaudiodev- - OSS 互換 オーディオ デバイス へ の アクセス 
15 . 1  hmac  - - メッセージ 認証 の ため の 鍵 付き ハッシュ 化 
15 . 2  md 5  - - MD 5  メッセージ ダイジェスト アルゴリズム 
15 . 3  sha -- SHA - 1  メッセージ ダイジェスト アルゴリズム 
16 . 1  Tkinter -- Tcl \/ Tk  へ の  Python  インタフェース 
16 . 2  Tix  -- Tk の 拡張 ウィ ジェット 
16 . 3  ScrolledText  --  スクロール する テキストウィ ジェット 
16 . 4  turtle-- Tk の ため の タートル グラフィックス 
17 . 1  rexec  - - 制限 実行 の フレームワーク 
17 . 2  Bastion --  オブジェクト に 対 する アクセス の 制限 
18 . 1  parser -- Python 解析 木 に アクセス する 
18 . 2 symbol  -- Python 解析 木 と 共 に 使 わ れ る 定数 
18 . 3  token -- Python 解析 木 と 共 に 使 わ れ る 定数 
18 . 4  keyword  -- Python キー ワード チェック 
18 . 5  tokenize -- Python ソース の ため の トーク ナイザ 
18 . 6 tabnanny - - あいまい な インデント の 検出 
18 . 7  pyclbr-- Python  クラス ブラウザー サポート 
18 . 8  py_ compile  -- Python ソース ファイル の コンパイル 
18 . 9  compileall -- Python ライブラリ を バイト コンパイル 
18 . 10  dis -- Python バイトコード の 逆 アセン ブラ 
18 . 11  distutils -- Python  モジュール の 構築 と インストール 
20 . 1  al -- SGI の オーディオ 機能 
20 . 2  AL -- al モジュール で 使 わ れ る 定数 
20 . 3  cd -- SGI システム の CD - ROM へ の アクセス 
20 . 4  fl - - グラフィカル ユーザー インターフェース の ため の FORMS ライブラリ 
20 . 5  FL -- fl モジュール で 使用 さ れ る 定数 
20 . 6  flp- - 保存 さ れ た FORMS デザイン を ロード する 関数 
20 . 7  fm - - Font  Manager  インターフェース 
20 . 8  gl - - Graphics  Library  インターフェース 
20 . 9  DEVICE  -- gl モジュール で 使 わ れ る 定数 
20 . 10  GL  -- gl モジュール で 使 わ れ る 定数 
20 . 11  imgfile -- SGI  imglib  ファイル の サポート 
20 . 12  jpeg - - JPEG ファイル の 読み書き を 行 う 
21. 1  sunaudiodev- - Sun オーディオ ハードウェア へ の アクセス 
21. 2  SUN AUDIODEV  - - sunaudiodev で 使 わ れ る 定数 
22 . 1  msvcrt - MS  VC + + 実行 時 システム の 有用 な ルーチン 群 
22 . 2  _ winreg  - Windows  レジストリ へ の アクセス 
22 . 3  winsound  -- Windows  用 の 音声 再生 インタフェース 
1 .  Mac  OS  9 で Python を 利用 する 
2 . 1  mac  - -os  モジュール の 実装 
2 . 2  macpath-- MacOS  の パス 操作 関数 
2 . 3  macfs- - 様々 な ファイル システム 関連 の サービス 
2 . 4  ic  - - インターネット 設定 へ の アクセス 
2 . 5  MacOS - - Mac  OS  インタプリタ 機能 へ の アクセス 
2 . 6  macostools -- ファイル 操作 を 便利 に する ルーチン 集 
2 . 7  findertools --finder  の Apple Events インターフェース 
2 . 8  EasyDialogs - - 基本 的 な  Macintosh  ダイアログ 
2 . 9  FrameWork - - 対話 型 アプリケーション ・ フレームワーク 
2 . 10  autoGIL  - - イベント ループ 中 の グローバル インタープリタ の 取り扱い 
3 . 1  gensuitemodule - - OSA  スタプ 作成 パッケージ 
3 . 2  aetools -- OSA  クライアント の サポート 
3 . 3  aepack  -- Python 変数 と AppleEvent データ コンテナ 間 の 変換 
3 . 4  aetypes-- AppleEvent  オブジェクト 
3 . 5  Mini AEFrame- - オープン スクリプティング アーキテクチャ サーバ の サポート 
4 . 25  ColorPicker - - 色 選択 ダイアログ 
ブール 演算 は 、 全て の  Python  演算 子 の 中 で 、 最も 低 い 優先 順位 に な っ て い ま す : 
ブール 演算 の コンテキスト や 、 式 が 制御 フロー 文中 で 使 わ れ る 最 に は 、 以下 の 値 :  None  、 すべて の 数値 型 に お け る ゼロ 、 空 の シーケンス  ( 文字 列 、 タプル 、 および リスト )  、 空 の マップ 型  ( 辞書 )  、 は 偽  ( false )  で あ る と 解釈 さ れ ま す 。 
それ 以外 の 値 は 真 ( true )  で あ る と 解釈 さ れ ま す 。  演算 子  not  は 、 引数 が 偽 で あ る 場合 に は  1  を 、 それ 以外 の 場合 に は  0  に な り ま す 。 
式 
は 、 まず  x  を 評価 し ま す ; x  が 偽 なら 、 x  の 値 を 返 し ま す ;  それ 以外 の 場合 に は 、 y  の 値 を 評価 し 、 その 結果 を 返 し ま す 。 
は 、 まず  x  を 評価 し ま す ;  x  が 真 なら 、 x  の 値 を 返 し ま す ;  それ 以外 の 場合 に は 、 y  の 値 を 評価 し 、 その 結果 を 返 し ま す 。 
( and  も  not  も 、 返 す 値 を  0  や  1  に 制限 する の で は な く 、 最後 に 評価 し た 引数 の 値 を 返 す の で 注意 し て くださ い 。  この 仕様 は 、 例えば  s  を 文字 列 と し て 、 s  が 空 文字 列 の 場合 に デフォルト の 値 に 置き換え る よう な 場合 に 、 s or  ' foo'  と 書 く と 期待 通り の 値 に な る ため に 便利 な こと が あ り ま す 。 
not  は 、 式 の 値 で な く 独自 に 値 を 作成 し て 返 す の で 、 引数 と 同じ 型 の 値 を 返 す よう な 処理 に 煩わ さ れ る こと は あ り ま せ ん 。  例えば 、  not  ' foo' は 、 ' ' で は な く  0  に な り ま す ) 
Cmd インスタンス は 、 次 の メソッド を 持 ち ま す : 
プロンプト を 繰り返 し 出 し 、 入力 を 受け取 り 、 受け取 っ た 入力 から 取り去 っ た 先頭 の 語 を 解析 し 、 その 行 の 残り を 引数 と し て アクション メソッド へ ディスパッチ し ま す 。  オプション の 引数 は 、 最初 の プロンプト の 前 に 表示 さ れ る バナー あるいは 紹介 用 の 文字 列 で す ( これ は クラス メンバ intro を オーバーライド し ま す ) 。 
モジュール が ロード さ れ て い る なら 、 入力 は 自動 的 に bash の よう な 履歴 リスト 編集 機能 を 受け継 ぎ ま す ( 例えば 、 Control - P は 直前 の コマンド へ の スクロール バック 、 Control - N は 次 の もの へ 進 む 、 Control - F は カーソル を 右 へ 非 破壊 的 に 進め る 、 Control - B は カーソル を 非 破壊 的 に 左 へ 移動 さ せ る 等 ) 。 
入力 の ファイル 終端 は 、 文字 列 ' EOF ' と し て 渡 さ れ ま す 。  メソッド do _foo ( ) を 持 っ て い る 場合 に 限 っ て 、 インタープリタ の インスタンス は コマンド 名 " foo " を 認識 し ま す 。 
特別 な 場合 と し て 、 文字 " ? " で 始ま る 行 は メソッド do _help ( ) へ ディスパッチ し ま す 。 
プロンプト に 答え て タイプ し た か の よう に 引数 を 解釈 実行 し ま す 。 
これ を オーバーライド する こと が あ る か も しれ ま せ ん が 、 通常 は 必要 な い で しょ う 。  便利 な 実行 フック に つ い て は 、 precmd ( ) と post cmd ( ) メソッド を 参照 し て くださ い 。 
戻 り 値 は 、 インタープリタ に よ る コマンド の 解釈 実行 を やめ る か どう か を 示 す フラグ で す 。 
コマンド  str  に 対応 する  do_*( )  メソッド が あ る 場合 、 その メソッド の 返り 値 が 返 さ れ ま す 。  そう で な い 場合 は  default ( )  メソッド から の 返り 値 が 返 さ れ ま す 。 
プロンプト に 空行 が 入力 さ れ た とき に 呼び出 さ れ る メソッド 。 
この メソッド が オーバーライド さ れ て い な い なら 、 最後 に 入力 さ れ た 空行 で な い コマンド が 繰り返 さ れ ま す 。 
コマンド の 先頭 の 語 が 認識 さ れ な い とき に 、 入力 行 に 対 し て 呼び出 さ れ ま す 。 
この メソッド が オーバーライド さ れ て い な い なら 、 エラー メッセージ を 表示 し て 戻 り ま す 。 
利用 可能 な コマンド 固有 の complete_*( ) が 存在 し な い とき に 、 入力 行 を 補完 する ため に 呼び出 さ れ る メソッド 。 
デフォルト で は 、 空行 を 返 し ま す 。 
コマンド 行 line が 解釈 実行 さ れ る 直前 、 しかし 入力 プロンプト が 作 ら れ 表示 さ れ た 後 に 実行 さ れ る フック メソッド 。 
この メソッド は Cmd 内 の スタブ で あ っ て 、 サブ クラス で オーバーライド さ れ る ため に 存在 し ま す 。 
戻 り 値 は onecmd ( ) メソッド が 実行 する コマンド と し て 使 わ れ ま す 。  precmd ( ) の 実装 で は 、 コマンド を 書き換え る か も しれ な い し 、 あるいは 単に 変更 し て い な い line を 返 す か も しれ ま せ ん 。 
コマンド ディスパッチ が 終わ っ た 直後 に 実行 さ れ る フック メソッド 。 
この メソッド の 戻 り 値 は 、 stop に 対応 する 内部 フラグ の 新し い 値 と し て 使 わ れ ま す 。  偽 を 返 す と 、 実行 を 続け ま す 。 
cmdloop ( ) が 呼び出 さ れ た とき に 一 度 だけ 実行 さ れ る フック メソッド 。 
cmdloop ( ) が 戻 る 直前 に 一 度 だけ 実行 さ れ る フック メソッド 。  この メソッド は Cmd 内 の スタブ で あ っ て 、 サブ クラス で オーバーライド さ れ る ため に 存在 し ま す 。 
Cmd の サブ クラス の インスタンス は 、 公開 さ れ た インスタンス 変数 を いく つ か 持 っ て い ま す : 
入力 を 求め る ため に 表示 さ れ る プロンプト 。 
コマンド の 先頭 の 語 と し て 受け入れ られ る 文字 の 文字 列 。 
最後 の 空 で な い コマンド プリ フィックス 。 
紹介 また は バナー と し て 表示 さ れ る 文字 列 。 
cmdloop ( ) メソッド に 引数 を 与え る ため に 、 オーバーライド さ れ る か も しれ ま せ ん 。 
ヘルプ の 出力 に 文書 化 さ れ た コマンド の 部分 が あ る 場合 に 表示 する ヘッダ 。 
ヘルプ の 出力 に その 他 の ヘルプ 見出し が あ る ( すなわち 、 do_*( ) メソッド に 対応 し て い な い help_*( ) メソッド が 存在 する ) 場合 に 表示 する ヘッダ 。 
ヘルプ の 出力 に 文書 化 さ れ て い な い コマンド の 部分 が あ る ( すなわち 、 対応 する help_*( ) メソッド を 持 た な い do_*( ) メソッド が 存在 する ) 場合 に 表示 する ヘッダ 。 
ヘルプ メッセージ の ヘッダ の 下 に 、 区切り 行 を 表示 する ため に 使 わ れ る 文字 。 
空 の とき は 、 ルーラ 行 が 表示 さ れ ま せ ん 。 
デフォルト で は 、 " = " で す 。 
フラグ 、 デフォルト で は 真 。 
真 なら ば 、 cmdloop ( ) は プロンプト を 表示 し て 次 の コマンド 読み込 む ため に raw _ input ( ) を 使 い ま す 。 
偽 なら ば 、 sys . st dout . write ( ) と sys . stdin . readline ( ) が 使 わ れ ま す 。  ( これ が 意味 する の は 、 
を import  する こと に よ っ て 、 それ を サポート する システム 上 で は 、 インタープリタ が 自動 的 に  Emacs 形式 の 行 編集 と コマンド 履歴 の キー ストローク を サポート する と い う こと で す 。 ) 
ConfigParser クラス は Raw ConfigParser の インターフェース を いく つ か の メソッド に つ い て 拡張 し 、 省略 可能 な 引数 を 追加 し て い ま す 。 
section の option 変数 を 取得 し ま す 。 
raw が 真 で な い 時 に は 、 全て の " % " 置換 は コンストラクタ に 渡 さ れ た デフォルト 値 か 、 vars  が 与え られ て い れ ば それ を 元 に し て 展開 さ れ て から 返 さ れ ま す 。 
指定 し た section  内 の 各 オプション に 対 し て 、 ( name ,  value )  の ペア から な る リスト を 返 し ま す 。 
省略 可能 な 引数 は get ( ) メソッド と 同じ 意味 を 持 ち ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
1 . 2 . 5 . 2  モジュール 検索 パス に モジュール を 追加 する 
EditPythonPrefs  を 使 う と 、  Python  の 振る舞い を 自分 の 好み に 合わせ られ ま す 。 
EditPythonPrefs  に は 二 つ の 用途 が あ り ま す 。  ひと つ は 環境 設定 を 行 う と い う 普通 の 使 い 方 、 もう ひと つ は  Python  の エンジン を ドロップ し て 、 使 い た い インタプリタ の バージョン を 制御 する と い う もの で す 。 
後者 は 、 たとえば 普段 は プログラム が 正常 終了 し た 時 に は 出力 ウィンドウ を 閉じ る よう に し て お き た い けれど も 、 出力 ウィンドウ を 閉じ な い よう な PythonInterpreter  の コピー を もう ひと つ 作 っ て お き た い よう な 場合 に 便利 で す 。  デフォルト の 設定 を 変更 する に は 、  EditPythonPrefs  を ダブル クリック し ま す 。 
インタプリタ の どれ か ひと つ の 設定 だけ を 変更 し た けれ ば 、 インタプリタ を EditPythonPrefs  の 上 に ドロップ し ま す 。 
同じ や り 方 を 使 え ば 、 EditPythonPrefs  を 使 っ て  Python IDE  や 作成 し た アプレット の 設定 を 変更 でき ま す  -  節 や  1 . 3 . 4  節 を 参照 し て くださ い 。 
1 . 3 . 1  ` ` Python  Interactive ' ' ウィンドウ を 使 う 
Python IDE ( 統合 開発 環境 )  は 独立 し た アプリケーション で 、 Python  コード の テキスト エディタ や 、 クラス ブラウザ 、 グラフィカル デバッガ など と し て 動作 し ま す 。 
1 . 3 . 3  統合 開発 環境 の 中 から スクリプト を 実行 する 
1 . 3 . 4  ` ` Save  as ' ' と `` Save  as  Applet ' ' の 違い  Python  スクリプト を 書 い た ら 、 ファイル を  「 アプレット 」 と し て も 保存 でき ま す  ( ``File ' ' メニュー の ` ` Save  as  applet ' ' を 選 び ま す )  。 
アプレット と し て 保存 する と 、 ファイル や フォルダ を スクリプト に ドロップ する こと で 、 コマンドライン 引数 で 渡 す の と 同じ よう に スクリプト に ファイル や フォルダ を 渡せ る と い う 、 大きな 利点 が あ り ま す 。 
詳し く は Python の 標準 ドキュメント を 参照 し て くださ い 。  スクリプト を アプレット と し て 保存 し て も 、  Python  が インストール さ れ て い な い システム で は 実行 でき な い の で 注意 し て くださ い 。 
1 . 3 . 2  Python スクリプト を 書 く 
1 . 3 . 4  ` ` Save  as ' ' と 
Python IDE の 最 前面 の ウィンドウ で 全部 実行 ( run all ) ボタン を 押 す と 、 その ウィンドウ の スクリプト を 実行 でき ま す 。 
しかし 、 仮 に  Python  の 習慣 通り に  " if __name__== "_ _main__" : "  と 書 い て も 、 スクリプト は デフォルト で は 「 _ _main__」 に  な ら な い  こと に 注意 し て お き ま しょ う 。 
そう い う 風 に 動作 さ せ る に は 、 ドキュメント ウィンドウ の 一番 右上 の 小さな 黒 い 三角 形 から 、 `` Run  as __main__' ' オプション を 選 ば ね ば な り ま せ ん 。 
この オプション は アプリケーション で は な く ファイル  に 関連 付け られ て い る の で 注意 し て くださ い 。 
と は い え 、 この オプション は 保存 後 も その まま 残 り ま す 。  止め た けれ ば 、 再度 この オプション を 選 ん で くださ い 。 
Python IDE  は 、 対話 的 に 使 う だけ で な く 、 Python  プログラム を 書き上げ たり 、 順次 保存 し たり でき 、 全体 や 一 部分 の 実行 も でき ま す 。  「 File 」 メニュー の 適当 な メニュー アイテム を 選択 すれ ば 新た に スクリプト を 作成 し たり 、 前 に 保存 し た スクリプト を 開 い たり 、  現在 開 い て い る スクリプト を 保存 し たり でき ま す 。 
デフォルト で は 、 ファイル の Python IDE  を クリエータコード に し て 保存 し ま す 。  従 っ て 、 ファイル の アイコン を ダブル クリック する と ファイル を 編集 用 に 開 き ま す 。 
この 動作 を 変更 し て 、 PythonInterpreter  で 開 い て 実行 する よう し た い と 思 う 場合 も あ る で しょ う 。 
そう する に は 、 単に 「 save  options 」 から 「 Python  Interpreter 」 を 選 ぶ だけ で す 。 
この オプション は アプリケーション で は な く ファイル  に 関連 付け られ て い る の で 注意 し て くださ い 。 
MimeWriter  インスタンス に は 以下 の メソッド が あ り ま す : 
MIME メッセージ に 新し い ヘッダ 行 を 追加 し ま す 。 
key は 、 その ヘッダ の 名前 で あ り 、 そして  value で 、 その ヘッダ の 値 を 明示 的 に 与え ま す 。 
省略 可能 な 引数  prefix は 、 ヘッダ が 挿入 さ れ る 場所 を 決定 し ま す ; " 0 "  は 最後 に 追加 する こと を 意味 し 、 " 1 "  は 先頭 へ の 挿入 で す 。 
デフォールト は 最後 に 追加 する こと で す 。 
今 まで 集め られ た ヘッダ すべて が 書 か れ ( そして 忘れ られ ) る よう に し ま す 。  これ は 、 もし 全く 本体 が 必要 で な い 場合 に 役 に 立 ち ま す 。 
例えば 、 ヘッダ の よう な 情報 を 保管 する ため に ( 誤 っ て ) 使用 さ れ た 、 型  message\/rfc 822  の サブ パート 用 。 
メッセージ の 本体 に 書 く の に 使用 でき る ファイル の よう な オブジェクト を 返 し ま す 。 
コンテント - 型 は 、 与え られ た ctype  に 設定 さ れ 、 省略 可能 な パラメータ  plist は 、 コンテント - 型 定義 の ため の 追加 の パラメータ を 与え ま す 。  prefix  は 、 その デフォールト が 先頭 へ の 挿入 以外 は  addheader ( )  で の よう に 働 き ま す 。 
メッセージ 本体 を 書 く の に 使 う こと が でき る ファイル の よう な オブジェクト を 返 し ま す 。 
サブ パート は 、 next part ( ) を 使 っ て 作成 する べ き で す 。 
マルチ パート メッセージ の 個々 の パート を 表 す 、  MimeWriter の 新し い インスタンス を 返 し ま す 。 
これ は 、 その パート を 書 く の に も 、 また 複雑 な マルチ パート を 再帰 的 に 作成 する の に も 使 う こと が でき ま す 。 
メッセージ は 、 next part ( )  を 使 う 前 に , 最初  startmultipartbody ( )  で 初期 化 し な けれ ば な り ま せ ん 。 
これ は 、 マルチ パート メッセージ の 最後 の パート を 指定 する の に 使 う こと が でき 、 マルチ パート メッセージ を 書 く とき は  いつ で も 使 う べ き で す 。 
MultiFile  インスタンス に は 以下 の メソッド が あ り ま す : 
一行 データ を 読 み ま す 。 
その 行 が  ( セクション 分割 子 や 終了 マーカ や 本物 の EOF  で な い )  データ の 場合 、 行 データ を 返 し ま す 。 
その 行 が もっとも 最近 スタック に プッシュ さ れ た 境界 パターン に マッチ し た 場合 、 ' ' を 返 し 、 マッチ し た 内容 が 終了 マーカ か そう で な い か に よ っ て  self . last  を 1  か  0  に 設定 し ま す 。 
行 が その 他 の スタック さ れ て い る 境界 パターン に マッチ し た 場合 、 エラー が 送出 さ れ ま す 。 
背後 の ストリーム オブジェクト に おけ る ファイル の 終端 に 到達 し た 場合 、 全て の 境界 が スタック から 除去 さ れ て い な い 限り この メソッド は  Error  を 送出 し ま す 。 
この パート の 残り の 全て の 行 を 文字 列 の リスト と し て 返 し ま す 。 
次 の セクション まで の 全て の 行 を 読 み ま す 。 
読 ん だ 内容 を 単一 の ( 複数 行 に わた る )  文字 列 と し て 返 し ま す 。 
この メソッド に は size  引数 を と ら な い の で 注意 し て くださ い ! 
ファイル を  seek  し ま す 。 
seek  する 際 の インデクス は 現在 の セクション の 開始 位置 から の 相対 位置 に な り ま す 。  pis  および  whence  引数 は ファイル の  seek  に お け る 引数 と 同じ よう に 解釈 さ れ ま す 。 
現在 の セクション の 先頭 に 対 し て 相対 的 な ファイル 位置 を 返 し ま す 。 
次 の セクション まで 行 を 読み飛ば し ま す  ( すなわち 、 セクション 分割 子 また は 終了 マーカ が 消費 さ れ る まで 行 データ を 読 み ま す ) 。 
次 の セクション が あ っ た 場合 に は 真 を 、 終了 マーカ が 発見 さ れ た 場合 に は 偽 を 返 し ま す 。 
最も 最近 スタック に プッシュ さ れ た 境界 パターン を 最 有効 化 し ま す 。 
str  が データ の 場合 に 真 を 返 し 、 セクション 分割 子 の 可能 性 が あ る 場合 に は 偽 を 返 し ま す 。 
この メソッド は 行 の 先頭 が  ( 全て の  MIME  境界 が 持 っ て い る ) '--' 以外 に な っ て い る か を 調べ る よう に 実装 さ れ て い ま す が 、 導出 クラス で 上書き でき る よう に 宣言 さ れ て い ま す 。 
この テスト は 実際 の 境界 テスト に お い て 高速 性 を 保 つ ため に 使 わ れ て い る の で 注意 し て くださ い ;  この テスト が 常 に  false  を 返 す 場合 、 テスト が 失敗 する の で は な く 、 単に 処理 が 遅 く な る だけ で す 。 
境界 文字 列 を スタック に プッシュ し ま す 。 
この 境界 文字 列 の 適切 に 修飾 さ れ た バージョン が 入力 ファイル 中 に 見つか っ た 場合 、 セクション 分割 子 また は 終了 マーカ で あ る と 解釈 さ れ ま す 。 
それ 以降 の 全て の データ 読み出し は 、 pop ( )  を 呼 ん で 境界 文字 列 を 除去 する か 、 next ( )  を 呼 ん で 境界 文字 列 を 再 有効 化 し な い かぎり 、 ファイル 終端 を 示 す 空 文字 列 を 返 し ま す 。  一 つ 以上 の 境界 を プッシュ する こと は 可能 で す 。 
もっとも 最近 プッシュ さ れ た 境界 に 遭遇 する と  EOF  が 返 り ま す ;  その 他 の 境界 に 遭遇 する と エラー が 送出 さ れ ま す 。 
セクション 境界 を ポップ し ま す 。 
この 境界 は もはや  EOF  と し て 解釈 さ れ ま せ ん 。 
境界 を セクション 分割 子 に し ま す 。 
標準 で は 、 この メソッド は ( 全て の  MIME  境界 が 持 っ て い る ) '- 
- ' を 境界 文字 列 の 先頭 に 追加 し ま す が 、 これ は 導出 クラス で 上書き でき る よう に 宣言 さ れ て い ま す 。 
末尾 の 空白 は 無視 さ れ る こと から 考え て 、 この メソッド で は  LF  や  CR - LF  を 追加 する 必要 は あ り ま せ ん 。 
境界 文字 列 を 終了 マーカ 行 に し ま す 。 
標準 で は 、 この メソッド は ( MIME  マルチ パート データ の メッセージ 終了 マーカ の よう に )  '- 
- ' を 境界 文字 列 の 先頭 に 追加 し 、 かつ ' - 
- ' を 境界 文字 列 の 末尾 に 追加 し ま す が 、 これ は 導出 クラス で 上書き でき る よう に 宣言 さ れ て い ま す 。 
末尾 の 空白 は 無視 さ れ る こと から 考え て 、 この メソッド で は  LF  や  CR - LF  を 追加 する 必要 は あ り ま せ ん 。 
最後 に 、 MultiFile  インスタンス は 二 つ の 公開 さ れ た インスタンス 変数 を 持 っ て い ま す : 
現在 の パート に お け る 入れ子 の 深 さ で す 。 
最後 に 見つか っ た ファイル 終了 イベント が メッセージ 終了 マーカ で あ っ た 場合 に 真 と な り ま す 。 
クラス Queue は キュー オブジェクト を 実装 し て お り 、 以下 の メソッド を 持 っ て い ま す 。 
この クラス は 、 他 の キュー 構造 ( 例えば スタック ) を 実装 する ため に 派生 さ せ られ る ま す が 、 継承 可能 な インタフェース は ここ で は 説明 し ま せ ん 。 
詳し い こと は ソース コード を 見 て くださ い 。 
公開 メソッド は 次 の もの で す : 
キュー の 大まか な サイズ を 返 し ま す 。 
マルチ スレッド セマンティクス に お い て 、 この 値 は 信頼 でき ま せ ん 。 
キュー が 空 なら True を 返 し 、 そう で な い なら False を 返 し ま す 。  マルチ スレッド セマンティクス に お い て 、 この 値 は 信頼 でき ま せ ん 。 
キュー が 満杯 なら True を 返 し 、 そう で な い なら False を 返 し ま す 。  マルチ スレッド セマンティクス に お い て 、 この 値 は 信頼 でき ま せ ん 。 
item を キュー に 入れ ま す 。 
もし オプション 引数 block が True で timeout が None ( デフォルト ) なら ば 、 フリー スロット が 利用 可能 に な る まで ブロック し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 : thetimeout  parameter 
put ( item ,  False ) と 同じ 意味 で す 。 
キュー から アイテム を 取り除 き 、 それ を 返 し ま す 。 
もし オプション 引数 block が True で timeout が None ( デフォルト ) なら ば 、 アイテム が 利用 可能 に な る まで ブロック し ま す 。 
もし timeout が 正 の 値 の 場合 、 最大 で timeout 秒間 ブロック し 、 その 時間 内 で アイテム が 利用 可能 に な ら な けれ ば 、 例外 Empty を 送出 し ま す 。 
他方 ( block が False ) 、 直ちに アイテム が 利用 でき る なら ば 、 それ を 返 し ま す 。  でき な い なら ば 、 例外 Empty を 送出 し ま す ( この 場合 timeout は 無視 さ れ ま す ) 。 
get ( False ) と 同じ 意味 で す 。 
Raw ConfigParser クラス の インスタンス は 以下 の メソッド を 持 ち ま す : 
インスタンス 全体 で 使 わ れ る デフォルト 値 の 辞書 を 返 し ま す 。 
利用 可能 な セクション の リスト を 返 し ま す 。  DEFAULT は この リスト に 含 ま れ ま せ ん 。 
section と い う 名前 の セクション を インスタンス に 追加 し ま す 。 
同名 の セク  ション が 存在 し た 場合 、 Duplicate SectionError が 発生 し ま す 。  has_ section 
指定 し た セクション が コンフィ グレーション ファイル に 存在 する か を 返 し ま す 。 
DEFAULT セクション は 存在 する と みな さ れ ま せ ん 。 
section で 指定 し た セクション で 利用 でき る オプション の リスト を 返 し ま す 。 
与え られ た セクション が 存在 し て かつ オプション が 与え られ て い れ ば  True  を 返 し 、 そう で な けれ ば  False  を 返 し ま す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
ファイル 名 の リスト を 読 ん で 解析 を こころ み 、 うま く 解析 でき た ファイル 名 の リスト を 返 し ま す 。 
もし filenames が 文字 列 か ユニ コード 文字 列 なら 、 1 つ の ファイル 名 と し て 扱 わ れ ま す 。 
filenames で 指定 さ れ た ファイル が 開け な い 場合 、 その ファイル は 無視 さ れ ま す 。  この 挙動 は 設定 ファイル が 置 か れ る 可能 性 の あ る 場所 ( 例えば 、 カレント ディレクトリ 、 ホーム ディレクトリ 、 システム 全体 の 設定 を 行 う ディレクトリ ) を 設定 し て 、 そこ に 存在 する 設定 ファイル を 読 む こと を 想定 し て 設計 さ れ て い ま す 。 
設定 ファイル が 存在 し な かっ た 場合 、 ConfigParser  の インスタンス は 空 の データ セット を 持 ち ま す 。 
初期 値 の 設定 ファイル を 先 に 読み込 ん で お く 必要 が あ る アプリケーション で は 、 readfp() ) を read ( ) の 前 に 呼び出 す こと で その よう な 動作 を 実現 でき ま す : 
バージョン  2 . 4  で  変更  さ れ た 仕様 : うま く 解析 でき た ファイル 名 の リスト を 返 す 
fp で 与え られ る ファイル か ファイル の よう な オブジェクト を 読み込 ん で 構文 解析 し ま す ( readline ( ) メソッド だけ を 使 い ま す ) 。 
もし filename が 省略 さ れ て fp が name 属性 を 持 っ て い れ ば filename の 代わり に 使 わ れ ま す 。 
ファイル 名 の 初期 値 は " ? ? ? " で す 。  get 
section の option を 整数 と し て 評価 する 関数 で す 。 
section の option を 浮動 小数 点数 と し て 評価 する 関数 で す 。 
指定 し た  section  の option  値 を ブール 値 に 型 強制 する 便宜 メソッド で す 。 
option  と し て 受理 でき る 値 は 、 真 ( True )  と し て は " 1 " 、  " yes " 、  " true " 、  " on "  、 偽  ( False )  と し て は " 0 " 、  " no " 、  " false " 、  " off "  で す 。 
これ ら の 文字 列 値 に 対 し て は 大 文字 小 文字 の 区別 を し ま せ ん 。 
その 他 の 値 の 場合 に は  ValueError  を 送出 し ま す 。 
与え られ た section の それぞれ の オプション に つ い て ( name ,  value ) ペア の リスト を 返 し ま す 。 
与え られ た セクション が 存在 し て い れ ば 、 オプション を 指定 さ れ た 値 に 設定 し ま す 。  セクション が 存在 し な けれ ば  No SectionError  を 発生 さ せ ま す 。 
Raw ConfigParser  ( あるいは raw  パラメータ を セット し た ConfigParser )  を 文字 列 型 で な い 値 の  内部 的 な  格納 場所 と し て 使 う こと は 可能 で す が 、 すべて の 機能  ( 置換 や ファイル へ の 出力 を 含 む )  が サポート さ れ る の は 文字 列 を 値 と し て 使 っ た 場合 だけ で す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
設定 を 文字 列 表現 に 変換 し て ファイル オブジェクト に 書き出 し ま す 。 
この 文字 列 表現 は read ( ) で 読み込 む こと が でき ま す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
指定 さ れ た section から 指定 さ れ た option を 削除 し ま す 。  セクション が 存在 し な けれ ば 、 No SectionError  を 起こ し ま す 。 
存在 する オプション を 削除 し た 時 は  True  を 、 そう で な い 時 は  False  を 返 し ま す 。 
バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。  remove_ section 
指定 さ れ た section を 設定 から 削除 し ま す 。  もし 指定 さ れ た セクション が 存在 すれ ば True 、 そう で な けれ ば False を 返 し ま す 。 
入力 ファイル 中 に 見つか っ た オプション 名 か , クライアント コード から 渡 さ れ た オプション 名  option  を , 内部 で 利用 する 形式 に 変換 し ま す 。 
デフォルト で は option を 全て 小 文字 に 変換 し た 名前 が 返 さ れ ま す 。 
サブルクラス で は この 関数 を オーバーライド する こと で この 振舞い を 替え る こと が でき ま す 。  たとえば 、 この メソッド を str ( ) に 設定 する こと で 大小 文字 の 差 を 区別 する よう に 変更 する こと が でき ま す 。 
Repr インスタンス は 様々 な オブジェクト 型 の 表現 に サイズ 制限 を 与え る ため に 使え る いく つ か の メンバー と 、 特定 の オブジェクト 型 を 書式 化 する メソッド を 提供 し ま す 。 
再帰 的 な 表現 を 作 る 場合 の 深 さ 制限 。 
デフォルト は 6 で す 。 
指定 さ れ た オブジェクト 型 に 対 する エントリ 表現 の 数 に つ い て の 制限 。 
長 整数 の 表現 の おけ る 文字 数 の 最大 値 。 
中央 の 数字 が 抜け落ち ま す 。 
デフォルト は 40 で す 。 
文字 列 の 表現 に お け る 文字 数 の 制限 。 
文字 列 の ` ` 通常 の ' ' 表現 は 文字 の 材料 だ と い う こと に 注意 し て くださ い :  表現 に エスケープ シーケンス が 必要 と さ れ る 場合 は 、 表現 が 短縮 さ れ た とき に これ ら は マングル さ れ ま す 。 
デフォルト は 30 で す 。 
この 制限 は Repr オブジェクト に 利用 でき る 特定 の 書式 化 メソッド が な い オブジェクト 型 の サイズ を コントロール する ため に 使 わ れ ま す 。  maxstring と 同じ よう な や り 方 で 適用 さ れ ま す 。 
デフォルト は 20 で す 。 
インスタンス が 強制 する 書式 化 を 使 う 組み込 み repr ( ) と 等価 な もの 。 
repr ( ) が 使 う 再帰 的 な 実装 。 
これ は どの 書式 化 メソッド を 呼び出 す か を 決定 する ため に obj の 型 を 使 い 、 それ を obj と level に 渡 し ま す 。 
再帰 呼び出し に お い て level の 値 に 対 し て 
level -  1 を 与え る 再帰 的 な 書式 化 を 実行 する ため に 、 型 に 固有 の メソッド は repr 1 ( ) を 呼び出 し ま す 。 
型名 に 基づ く 名前 を も つ メソッド と し て 、 特定 の 型 に 対 する 書式 化 メソッド は 実装 さ れ ま す 。 
メソッド 名 で は 、 type は string . join ( string . split(type (obj ) .__name__, '_') ) に 置き換え られ ま す 。  これ ら の メソッド へ の ディスパッチ は repr 1 ( ) に よ っ て 処理 さ れ ま す 。 
再帰 的 に 値 の 書式 を 整え る 必要 が あ る 型 固有 の メソッド は 、 " self . repr 1 ( subobj ,  level -  1 ) " を 呼び出 し ま す 。 
次 の 例 は 最低 限 必要 な メール アドレス ( ` To' と ` From ' ) を 含 ん だ メッセージ を 送信 する もの で す 。 
この 例 で は RFC  822 ヘッダ の 加工 も し て い ま せ ん 。 
メッセージ に 含 ま れ る ヘッダ は 、 メッセージ に 含 ま れ る 必要 が あ り 、 特に 、 明確 な ' To ' 、 と ' From ' アドレス は メッセージ ヘッダ に 含 ま れ て い る 必要 が あ り ま す 。 
SMTP クラス インスタンス は 次 の メソッド を 提供 し ま す : 
コネクション 間 で やりとり さ れ る メッセージ 出力 の レベル を セット し ま す 。 
メッセージ の 冗長 さ は level に 応 じ て 決ま り ま す 。 
ホスト 名 と ポート 番号 を もと に 接続 し ま す 。 
サーバ へ コマンド cmd を 送信 し ま す 。 
応答 待ち の とき に 、 サーバ へ の コネクション が 失 わ れ る と 、 SMTP ServerDisconnected が 上が り ま す 。 
SMTP サーバ に " HELO " コマンド で 身元 を 示 し ま す 。 
デフォルト で は hostname 引数 は ローカル ホスト を 指 し ま す 。 
通常 は sendmail ( ) が 呼びだ す ため 、 これ を 明示 的 に 呼び出 す 必要 は あ り ま せ ん 。 
" EHLO " を 利用 し 、 E SMTP サーバ に 身元 を 明か し ま す 。 
デフォルト で は hostname 引数 は ローカル ホスト を 指 し ま す 。 
また 、 E SMTP オプション の ため に 応答 を 調べ た もの は 、 has _extn ( ) に 備え て 保存 さ れ ま す 。 
has _extn ( ) を メール を 送信 する 前 に 使 わ な い 限り 、 明示 的 に この メソッド を 呼び出 す 必要 が あ る べ き で は な く 、 sendmail ( ) が 必要 と し た 場合 に 呼 ば れ ま す 。 
、  has _extn 
name が 拡張 SMTP サービス セット に 含 ま れ て い る 場合 に は True を 返 し 、 そう で な けれ ば False を 返 し ま す 。  大小 文字 は 区別 さ れ ま せ ん 。 
" VRFY " を 利用 し て SMTP サーバ に アドレス の 妥当 性 を チェック し ま す 。  妥当 で あ る 場合 は コード 250 と 完全 な RFC  822 アドレス ( 人名 ) の タプル を 返 し ま す 。 
それ 以外 の 場合 は 、 400 以上 の エラー コード と エラー 文字 列 を 返 し ま す 。 
注意 : ほとんど の サイト は スパマー の 裏 を か く ため に SMTP の " VRFY " は 使用 不可 に な っ て い ま す 。 
サーバ が " HELO " に 返答 でき な かっ た 。 
サーバ が ユーザ 名 \/ パスワード で の 認証 に 失敗 し た 。 
どんな 認証 方法 も 見付か ら な かっ た 。 
TLS ( Transport Layer  Security ) モード で SMTP コネクション を 出 し 、 全て の SMTP コマンド は 暗号 化 さ れ ま す 。 
これ は ehlo ( ) を もう 一 度 呼びだ す とき に する べ き で す 。 
keyfile と certfile が 提供 さ れ た 場合 に 、 
モジュール の ssl ( ) 関数 が 通 る よう に な り ま す 。 
メール を 送信 し ま す 。 
必要 な 引数 は RFC  822 の from アドレス 文字 列 、 RFC  822 の to アドレス 文字 列 の リスト 、 メッセージ 文字 列 で す 。  送信 側 は " MAIL  FROM " コマンド で 使用 さ れ る mail _options の ESMTP オプション ( " 8 bitmime " の よう な ) の リスト を 得 る か も しれ ま せ ん 。 
全て の " RCPT " コマンド で 使 わ れ る べ き E SMTP オプション ( 例えば " DSN " コマンド ) は 、 rcpt_options を 通 し て 利用 する こと が でき ま す 。 
( もし 送信 先 別 に E SMTP オプション を 使 う 必要 が あ れ ば 、 メッセージ を 送 る ため に mail 、 rcpt 、 data と い っ た 下位 レベル の メソッド を 使 う 必要 が あ り ま す 。 ) 
注意 : 配送 エージェント は from _addr、 to_ addrs 引数 を 使 い 、 メッセージ の エンベロープ を 構成 し ま す 。  SMTP は メッセージ ヘッダ を 修正 し ま せ ん 。 
まだ セッション が 無 い 場合 は 、 " EHLO " また は " HELO " コマンド で セッション を 作 り ま す 。  ESMTP の 場合 は " EHLO " が 先 に 試 さ れ ま す 。 
また 、 サーバ が ESMTP 対応 なら ば 、 メッセージ サイズ と それぞれ 指定 さ れ た オプション も 渡 し ま す 。 
( feature オプション が あ れ ば サーバ の 広告 を セット し ま す ) " EHLO " が 失敗 し た 場合 は 、 E SMTP オプション の 無 い " HELO " が 試 さ れ ま す 。  この メソッド は メール が 受け入れ られ た とき は 普通 に 戻 り ま す が 、 そう で な い 場合 は 例外 を 投げ ま す 。 
この メソッド が 例外 を 投げ られ な けれ ば 、 誰 か が 送信 し た メール を 得 る べ き で す 。 
また 、 例外 を 投げれ な かっ た 場合 は 、 拒絶 さ れ た 受取 人 ごと へ の 1 つ の エントリー と 共 に 、 辞書 を 返 し ま す 。 
各 エントリー は 、 サーバー に よ っ て 送 ら れ た SMTP エラー コード および エラー メッセージ の タプル を 含 ん で い ま す 。  この メソッド は 次 の 例外 を 上げ る こと が あ り ま す : 
全て の 受信 を 拒否 さ れ 、 誰 に も メール が 届け られ ま せ ん で し た 。 
例外 オブジェクト の recipients 属性 は 、 受信 拒否 に つ い て の 情報 の 入 っ た 辞書 オブジェクト で す 。  ( 辞書 は 少な く とも 一 つ は 受信 さ れ た とき に 似 て い ま す ) 。 
サーバ が " HELP " に 返答 し ま せ ん で し た 。 
サーバ が from _addr を 弾 き ま し た 。 
サーバ が 予期 し な い エラー コード を 返 し ま し た 。  ( 受信 拒否 以外 ) 
また 、 この 他 の 注意 と し て 、 例外 が 上が っ た 後 も コネクション は 開 い た まま に な っ て い ま す 。 
SMTP セッション を 終了 し 、 コネクション を 閉じ ま す 。 
下位 レベル の メソッド は 標準 SMTP \/ ESMTP コマンド " HELP " 、  " RSET " 、 " NOOP " 、 " MAIL " 、 " RCPT " 、 " DATA " に 対応 し て い ま す 。 
通常 これ ら は 直接 呼 ぶ 必要 は な く 、 また 、 ドキュメント も あ り ま せ ん 。 
詳細 は モジュール の コード を 調べ て くださ い 。 
Safe ConfigParser  は  ConfigParser  と 同様 の 拡張 インターフェイス を も っ て い ま す が 、 以下 の よう な 機能 が 追加 さ れ て い ま す : 
open ( ) に よ っ て 返さ れ る Wave _ read オブジェクト に は 、 以下 の メソッド が あ り ま す : 
ストリーム を 閉じ 、 この オブジェクト の インスタンス を 使用 でき な く し ま す 。 
これ は オブジェクト の ガベージ コレクション 時 に 自動 的 に 呼び出 さ れ ま す 。 
オーディオ チャンネル 数 ( モノラル なら 1 、 ステレオ なら 2 ) を 返 し ま す 。 
サンプル サイズ を バイト 数 で 返 し ま す 。 
サンプリングレート を 返 し ま す 。 
オーディオ フレーム 数 を 返 し ま す 。 
圧縮 形式 を 返 し ま す ( ' NONE ' だけ が サポート さ れ て い る 形式 で す ) 。 
getcomptype ( ) を 人 に 判読 可能 な 形 に し た もの で す 。  通常 、 ' NONE ' に 対 し て ' not  compressed ' が 返 さ れ ま す 。 
get * ( ) メソッド が 返 す の と 同じ ( nchannels ,  sampwidth ,  framerate , nframes , comptype ,  compname ) の タプル を 返 し ま す 。 
現在 の ポインタ から n 個 の オーディオ フレーム の 値 を 読み込 ん で 、 バイト ごと に 文字 に 変換 し て 文字 列 を 返 し ま す 。 
ファイル の ポインタ を オーディオ ストリーム の 先頭 に 戻 し ま す 。 
以下 の 2 つ の メソッド は 
モジュール と の 互換 性 の ため に 定義 さ れ て い ま す が 、 何 も 面白 い こと は し ま せ ん 。 
None を 返 し ま す 。 
エラー を 発生 し ま す 。 
以下 の 2 つ の メソッド は 共通 の ` ` 位置 ' ' を 定義 し て い ま す 。 `` 位置 ' ' は 他 の 関数 と は 独立 し て 実装 さ れ て い ま す 。 
ファイル の ポインタ を 指定 し た 位置 に 設定 し ま す 。 
ファイル の 現在 の ポインタ 位置 を 返 し ま す 。 
open ( ) に よ っ て 返さ れ る Wave _write オブジェクト に は 、 以下 の メソッド が あ り ま す : 
nframes が 正し い か 確認 し て 、 ファイル を 閉じ ま す 。  この メソッド は オブジェクト の 削除 時 に 呼び出 さ れ ま す 。 
チャンネル 数 を 設定 し ま す 。 
サンプル サイズ を n バイト に 設定 し ま す 。 
サンプリングレート を n に 設定 し ま す 。 
フレーム 数 を n に 設定 し ま す 。 
あと から フレーム が 書き込 ま れ る と フレーム 数 は 変更 さ れ ま す 。 
圧縮 形式 と その 記述 を 設定 し ま す 。 
tuple は ( nchannels ,  sampwidth , framerate ,  nframes , comptype ,  compname ) で 、 それぞれ set* ( ) の メソッド の 値 に ふさわし い もの で な けれ ば な り ま せ ん 。 
全て の 変数 を 設定 し ま す 。 
ファイル の 中 の 現在 位置 を 返 し ま す 。  Wave _ read . tell ( ) と Wave _ read . setpos ( ) メソッド で お 断 り し た こと が この メソッド に も 当てはま り ま す 。 
nframes の 修正 なし に オーディオ フレーム を 書き込 み ま す 。 
オーディオ フレーム を 書き込 ん で nframes を 修正 し ま す 。 
writeframes ( ) や writeframesraw ( ) メソッド を 呼び出 し た あと で 、 どんな パラメータ を 設定 し よう と し て も 不正 と な る こと に 注意 し て 下さ い 。  そう する と wave . Error を 発生 し ま す 。 
Python  ドキュメント に つ い て 
Python  ドキュメント は 、 もともと  Guido van  Rossum  一人 の 手 で 書 か れ た もの で す が 、 ここ 数 年 で は だんだん と  Python  コミュニティ 自体 の 取り組み に な っ て き て い ま す 。 
ドキュメント に 関 する 一般 的 な コメント や 質問 は 、 電子 メール なら docs@python . org  に 送 っ て くださ い 。 
この ドキュメント に 書 か れ て い る 情報 の 使 い 方 に 関 する 質問 は 、 Python  の ニュース グループ 、  comp . lang . python 、 また は Python  メーリング リスト  ( ニュース グループ と 橋渡し さ れ て い て 、 同じ 情報 が 流れ ま す )  に 送 っ て くださ い 。 
上 で 挙げ た チャネル で は いずれ も 、 決して  HTML  メール を 送 ら な い よう に し て くださ い 。  よろしく お 願 い し ま す 。 
ユーザ 名 \/ パスワード を 取得 し 、 再度 サーバ へ の リクエスト を 試み る こと で 、 サーバ から の 認証 リクエスト を 処理 し ま す 。 
authreq  は リクエスト に お い て レルム に 関 する 情報 が 含 ま れ て い る ヘッダ の 名前 、 host  は 認証 を 行 う 対象 の ホスト 名 、 req  は  ( 失敗 し た )  Request  オブジェクト 、 そして  headers  は エラー ヘッダ で な く て は な り ま せ ん 。 
6 . 6  バッファ プロトコル  ( buffer  protocol ) 
6 . 5  イテレータ プロトコル  ( iterator  protocol ) 
6 .  抽象 オブジェクトレイヤ  ( abstract objects
7 .  具象 オブジェクト  ( concreteobject ) 
文字 ベース の 入力 と し て 使え る 読み出し 専用 メモリ 上 の 位置 へ の ポインタ を 返 し ま す 。 
obj  引数 は 単一 セグメント から な る 文字 バッファ インタフェース を サポート し て い な けれ ば な り ま せ ん 。 
成功 する と  0 を 返 し 、 buffer  を メモリ の 位置 に 、 buffer_len  を バッファ の 長 さ に 設定 し ま す 。 
エラー の 際 に は  - 1  を 返 し 、 TypeError  を セット し ま す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
任意 の データ を 収め た 読み出し 専用 の メモリ 上 の 位置 へ の ポインタ を 返 し ま す 。 
obj  引数 は 単一 セグメント から な る 読み出し 可能 バッファ インタフェース を サポート し て い な けれ ば な り ま せ ん 。 
成功 する と  0 を 返 し 、 buffer  を メモリ の 位置 に 、 buffer_len  を バッファ の 長 さ に 設定 し ま す 。 
エラー の 際 に は  - 1  を 返 し 、 TypeError  を セット し ま す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
o  が 単一 セグメント から な る 読み出し 可能 バッファ インタフェース を サポート し て い る 場合 に  1  を 返 し ま す 。 
それ 以外 の 場合 に は 0  を 返 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
書き込み 可能 な メモリ 上 の 位置 へ の ポインタ を 返 し ま す 。 
obj  引数 は 単一 セグメント から な る 文字 バッファ インタフェース を サポート し て い な けれ ば な り ま せ ん 。 
成功 する と  0 を 返 し 、 buffer  を メモリ の 位置 に 、 buffer_len  を バッファ の 長 さ に 設定 し ま す 。 
エラー の 際 に は  - 1  を 返 し 、 TypeError  を セット し ま す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
authreq  は リクエスト に お い て レルム に 関 する 情報 が 含 ま れ て い る ヘッダ の 名前 、 host  は 認証 を 行 う 対象 の ホスト 名 、 req  は  ( 失敗 し た )  Request  オブジェクト 、 そして  headers  は エラー ヘッダ で な く て は な り ま せ ん 。 
6 .  抽象 オブジェクトレイヤ  ( abstract objects layer ) 
5 . 5  引数 の 解釈 と 値 の 構築 
6 . 1  オブジェクト プロトコル  (object  protocol ) 
6 .  抽象 オブジェクトレイヤ  ( abstract objects layer ) 
この 章 で 説明 する 関数 は 、 Python  オブジェクト と の やりとり を 型 や ( 数値 型 全て 、 シーケンス 型 全て と い っ た )  大まか な オブジェクト 型 の 種類 に 関係 な く 行 い ま す 。 
関数 を 適用 対象 で な い オブジェクト に 対 し て 使 っ た 場合 、  Python  の 例外 が 送出 さ れ る こと に な り ま す 。 
6 . 1  オブジェクト プロトコル  (object  protocol ) 
6 . 2  数値 型 プロトコル  ( number  protocol ) 
6 . 3  シーケンス 型 プロトコル  ( sequence  protocol ) 
6 . 4  マップ 型 プロトコル  ( mapping  protocol ) 
6 . 1  オブジェクト プロトコル  (object  protocol ) 
Jes 俍  Cea Avi
Gerhard  H 醺 ing 
Fran 槢 is  Pinard 
Hern 睹  Martez Foffani 
。 「 ・ ィ 。 シ ・ 讌ッ ・ ゥ 。 「 隕 ・ ィ ・ オ ・ ハ ・  「  ェエ サ 、 ヒ 、 ハ 、 熙ソ 、 、 ハ 蓮 
AddressList  インスタンス は 以下 の メソッド を 持 ち ま す : 
アドレス リスト 中 の アドレス の 数 を 返 し ま す 。 
アドレス リスト の 正規 化  ( canonicalize )  さ れ た 文字 列 表現 を 返 し ま す 。 
アドレス は カンマ で 分割 さ れ た  " name "  host @ domain  形式 に な り ま す 。 
二 つ の  AddressList  被 演算 子 中 の 双方 に 含 ま れ る アドレス に つ い て 、 重複 を 除 い た  ( 集合 和 の )  全て の アドレス を 含 む 新た な  AddressList  インスタンス を 返 し ま す 。 
_ _ add__( )  の イン プレース 演算 版 で す ;  AddressList  インスタンス と 右側 値  alist  と の 集合 和 を と り 、 その 結果 を インスタンス 自体 と 置き換え ま す 。 
左側 値 の AddressList  インスタンス の アドレス の うち 、 右側 値 中 に 含 ま れ て い な い もの 全て を 含 む  ( 集合 差分 の )  新た な  AddressList  インスタンス を 返 し ま す 。 
_ _ sub__( )  の イン プレース 演算 版 で 、 alist  に も 含 ま れ て い る アドレス を 削除 し ま す 。 
最後 に 、 AddressList  インスタンス は  public  な インスタンス 変数 を 一 つ 持 ち ま す : 
アドレス あたり 一 つ の 文字 列 ペア で 構成 さ れ る タプル から な る リスト で す 。 
各 メンバ 中 で は 、 最初 の 要素 は 正規 化 さ れ た 名前 部分 で 、 二 つ 目 は 実際 の 配送 アドレス  ( "@"  で 分割 さ れ た ユーザ 名  と  ホスト . ドメイン から な る ペア )  で す 。 
8 . 3  高度 な デバッガ サポート  ( advanced  debugger  support) 
8 . 2  プロファイル と トレース  ( profiling  and 
8 .  初期 化  ( initialization ) 、 終了 処理  ( finalization ) 、 スレッド 
9 .  メモリ 管理 
以下 の 関数 は 高度 な デバッグ ツール で の 使用 の ため だけ の もの で す 。 
インタプリタ  interp  に 関連 付け られ て い る スレッド から な る リスト の うち 、 先頭 に あ る  PyThreadState  オブジェクト を 返 し ま す 。 
AppleEvent ハンドラ を インストール し ま す 。  classe と type は 4 文字 の OSA クラス と タイプ の 指定 子 で 、 ワイルド カード '* * * *' も 使え ま す 。 
対応 する AppleEvent を 受け る と パラメータ が デコード さ れ 、 与え た コール バック が 呼び出 さ れ ま す 。 
与え た コール バック は 、 OSA ダイレクト オブジェクト を 1 番 目 の パラメータ と し て 呼び出 さ れ ま す 。 
他 の パラメータ は 4 文字 の 指定 子 を 名前 に し た キー ワード 引数 と し て 渡 さ れ ま す 。 
他 に 3 つ の キー ワード ・ パラメータ が 渡 さ れ ま す 。  つまり 、 _ class と_type は クラス と タイプ 指定 子 で 、 _attributes は AppleEvent 属性 を 持 つ 辞書 で す 。 
与え た メソッド の 返り 値 は aetools . packevent ( ) で パック さ れ 、 リプライ と し て 送 ら れ ま す 。 
現在 の クラス 設計 に は いく つ か 重大 な 問題 が あ る こと に 注意 し て くださ い 。 
引数 に 名前 で は な い 4 文字 の 指定 子 を 持 つ AppleEvent は まだ 実装 さ れ て い な い し 、 イベント の 送信 側 に エラー を 返 す こと も でき ま せ ん 。 
この 問題 は 将来 の リリース まで 先送り に さ れ て い ま す 。 
newconfig ( ) で 返 さ れ る コンフィギュレーション オブジェクト に は 以下 の メソッド が あ り ま す : 
キュー サイズ を 返 し ま す 。 
キュー サイズ を 設定 し ま す 。 
サンプル サイズ を 返 し ま す 。 
サンプル サイズ を 設定 し ま す 。 
チャンネル 数 を 返 し ま す 。 
チャンネル 数 を 設定 し ま す 。 
サンプル の フォーマット を 返 し ま す 。 
サンプル の フォーマット を 設定 し ま す 。 
浮動 小数 点数 で サンプル データ の 最大 値 を 返 し ま す 。 
浮動 小数 点数 で サンプル データ の 最大 値 を 設定 し ま す 。 
openport ( ) で 返 さ れ る ポート オブジェクト に は 以下 の メソッド が あ り ま す : 
ポート を 閉じ ま す 。 
ファイル ディスク リプタ を 整数 で 返 し ま す 。 
バッファ に 存在 する サンプル の 数 を 返 し ま す 。 
バッファ の 空き に 入れ る こと の でき る サンプル の 数 を 返 し ま す 。 
必要 なら ブロック し て 、 キュー から 指定 の サンプル 数 を 読み込 み ま す 。  生 データ を 文字 列 と し て ( 例えば 、 サンプル サイズ が 2 バイト なら サンプル 当たり 2 バイト が big- endian ( high  byte 、 low  byte ) で ) 返 し ま す 。 
必要 なら ブロック し て 、 キュー に サンプル を 書き込 み ま す 。 
サンプル は readsamps ( ) で 返 さ れ る 値 の よう に エンコード さ れ て い な けれ ば な り ま せ ん 。 
`fill point ' を 返 し ま す 。 
`fill point ' を 設定 し ま す 。 
現在 の ポート の コンフィギュレーション を 含 ん だ コンフィギュレーション オブジェクト を 返 し ま す 。 
コンフィギュレーション を 引数 に 取 り 、 その コンフィギュレーション に 設定 し ま す 。 
最後 の エラー に つ い て の ステイタス の 情報 を 返 し ま す 。 
エイリアス  ( Alias )  レコード の 生 データ で す 。  リソース へ の 書き込み や 他 の プログラム へ の 転送 に 適 し た 形式 で す 。 
エイリアス を 解決 し ま す 。 
エイリアス が 相対 エイリアス と し て 作成 さ れ て い る 場合 は 、 どこ から の 相対 か を 示 す ファイル を 渡 さ ね ば な り ま せ ん 。 
エイリアス が 指し示 す ファイル の  FSSpec  と 、 Alias  オブジェクト 自体 が 検索 処理 中 に 変更 さ れ た か どう か を 示 す フラグ を 返 し ま す 。 
ファイル は 実在 し な い が 、 ファイル まで の パス は 実在 する 場合 、 有効 な  FSSpec  を 返 し ま す 。 
C の ルーチン GetAlias Info ( ) へ の インタフェース で す 。 
エイリアス を 、 file  に 指定 し た ファイル を 指 す よう に 更新 し ま す 。 
file 2  を 指定 し て い れ ば 、 相対 エイリアス を 作成 し ま す 。 
今 の ところ 、 リソース は Alias  オブジェクト と し て 直接 操作 でき ま せ ん 。 
その ため 、 Update ( ) を 呼 ん だ 後 か 、 Resolve ( ) で エイリアス に 変更 が あ っ た と 分か っ た 後 は 、 Python プログラム 側 で Alias  オブジェクト から data の 値 を 取りだ し 、 リソース を 修正 し て お く 責任 が あ り ま す 。 
10 . 1  オブジェクト を ヒープ 上 に メモリ 確保 する 
10 .  オブジェクト 実装 サポート  (object implementation 
10 . 2  共通 の オブジェクト 構造 体  ( common object 
戻 り 値 : 
新た な 参照 . 
借り た 参照 . 
新た に メモリ 確保 さ れ た オブジェクト  op  に 対 し 、 型 と 初期 状態 で の 参照  ( initial  reference )  を 初期 化 し ま す 。 
初期 化 さ れ た オブジェクト を 返 し ま す 。 
type  から その オブジェクト が 循環 参照 ガベージ 検出 の 機能 を 有 する 場合 、 検出 機構 が 監視 対象 と する オブジェクト の セット に 追加 さ れ ま す 。  オブジェクト の 他 の フィールド に は 影響 を 及ぼ し ま せ ん 。 
PyObject_ Init ( )  の 全て の 処理 を 行 い 、 可変 サイズ オブジェクト の 場合 に は 長 さ 情報 も 初期 化 し ま す 。 
C  構造 体型  TYPE  と  Python  型 オブジェクト type  を 使 っ て 新た な  Python  オブジェクト を メモリ 確保 し ま す 。 
Python  オブジェクト ヘッダ で 定義 さ れ て い な い フィールド は 初期 化 さ れ ま せ ん ; オブジェクト の 参照 カウント は  1  に な り ま す 。 
メモリ 確保 の サイズ は 型 オブジェクト の  tp_ basicsize  で 決定 し ま す 。 
Python  オブジェクト ヘッダ で 定義 さ れ て い な い フィールド は 初期 化 さ れ ま せ ん 。 
確保 さ れ た メモリ は 、 TYPE  構造 体 に 加え 、 vartype  の tp_itemsize フィールド で 指定 さ れ て い る サイズ 中 の  size  フィールド を 収容 でき ま す 。 
この 関数 は 、 例えば タプル の よう に 生成 時 に サイズ を 決定 でき る オブジェクト を 実装 する 際 に 便利 で す 。 
一連 の 複数 の フィールド に 対 する アロケーション 操作 を 一 つ に し て 埋め込 む と 、 アロケーション 回数 が 減 り 、 メモリ 管理 の 処理 効率 が 向上 し ま す 。 
PyObject _ New ( )  や  PyObject _ NewVar ( )  で 確保 さ れ た メモリ を 解放 し ま す 。 
この 関数 は 、 通常 オブジェクト の 型 に 指定 さ れ て い る  tp_dealloc  ハンドラ 内 で 呼び出 し ま す 。 
この 関数 を 呼び出 し た 後 で は 、 オブジェクト の メモリ 領域 は もはや 有効 な Python  オブジェクト を 表現 し て は い な い の で 、 オブジェクト の フィールド に 対 し て アクセス し て は な り ま せ ん 。 
安全 性 と 引き換え に パフォーマンス を 高め る ため の PyObject _ New ( ) の マクロ 版 で す 。 
type  が  NULL  か どう か チェック し ま せ ん 。 
安全 性 と 引き換え に パフォーマンス を 高め る ため の PyObject _ NewVar ( ) の マクロ 版 で す 。 
type  が  NULL  か どう か チェック し ま せ ん 。 
PyObject _ Del ( ) の マクロ 版 で す 。 
name  と 関数 の テーブル に 基づ い て 新た な モジュール オブジェクト を 生成 し 、 生成 さ れ た モジュール オブジェクト を 返 し ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : 以前 の バージョン の  Python  で は 、 methods  引数 の 値 と し て NULL  を サポート し て い ま せ ん で し た 
doc が  NULL で な い 場合 、 モジュール の  docstring  と し て 使 わ れ ま す 。 
self  が NULL で な い 場合 、 モジュール 内 の 各 関数 の 第 一 引数 と し て 渡 さ れ ま す  ( NULL の 時 に は 第 一 引数 も  NULL に な り ま す ) 。 
( この 関数 は 実験 的 な 機能 の ため に 追加 さ れ た もの で 、 現在 の  Python  の バージョン で 使 わ れ て は い な い はず で す 。 
) apiver  に 渡 し て よ い 値 は 、 PYTHON _ API_ VERSION  で 定義 さ れ て い る 定数 だけ で す 。 
注意 : この 関数 の ほとんど の 用途 は 、 代わり に Py _ InitModule 3 ( ) を 使え る はず で す ;  本当 に この 関数 を 使 い た い とき に だけ 利用 し て くださ い 
Python  から は  None  に 見え る オブジェクト で す 。 
この 値 へ の アクセス は 、 この オブジェクト へ の ポインタ を 評価 する Py _ None  マクロ を 使 わ ね ば な り ま せ ん 。 
6 .  汎用 オペレーティング システム サービス 
本章 に 記述 さ れ た モジュール は 、 ファイル の 取り扱い や 時間 計測 の よう な ( ほぼ ) すべて の オペレーティング システム で 利用 可能 な 機能 に インターフェース を 提供 し ま す 。 
これ ら の インターフェース は 、 Unix もしくは C の インターフェース を 基 に 作 ら れ ま す が 、 ほとんど の 他 の システム で 同様 に 利用 可能 で す 。 
概要 を 以下 に 記述 し ま す 。 
雑多 な オペレーティング システム インタフェース 。 
共通 の パス 名 操作 。 
キャッシュ メカニズム を 備え た ディレクトリ 一覧 生成 。 
ファイル の stat  を 調べ 、 その 結果 を 記憶 し ま す 。 
os . statvfs ( )  の 返 す 値 を 解釈 する ため に 使 わ れ る 定数 群 。 
ファイル 群 を 効率 的 に 比較 し ま す 。 
サブ プロセス 管理 
アクセス 可能 な  I \/ O  ストリーム を 持 つ 子 プロセス 生成 。 
基本 的 な 日付 型 および 時間 型 。 
時刻 データ へ の アクセス と 変換 
一般 的 な 目的 の ため の イベントスケジューラ 
排他 制御 の ため の ロック と キュー 
ポータブル な パスワード と ユーザー ID の 検索 
可搬 性 の あ る 端末 操作 を 提供 する  curses  ライブラリ へ の インタフェース . 
curses  ウィンドウ 内 で の  Emacs  ライク な 入力 編集 機能 。 
curses  プログラム の ため の 端末 設定 ラッパ 。 
ASCII  文字 に 関 する 定数 および 集合 帰属 関数 。 
curses  ウィンドウ に 深 さ の 概念 を 追加 する パネル スタック 拡張 。 
ポータブル な コマンドライン オプション の パーザ 。  長短 の 両方 の 形式 を サポート し ま す 。 
より 便利 で 柔軟 性 に 富 ん だ 強力 な コマンドライン 解析 ライブラリ 
一時 的 な ファイル や ディレクトリ を 生成 。 
標準 の  errno システム シンボル 。 
Unix  シェル 形式 の パス 名 の パターン 展開 。 
Unix  シェル 形式 の ファイル 名 の パターン マッチ 。 
コピー を 含 む 高 レベル な ファイル 操作 。 
国際 化 サービス 。 
多 言語 対応 に 関 する 国際 化 サービス 。 
PEP  282  に 基づ く Python  用 の ロギング モジュール 。 
実行 中 プラットフォーム から でき る だけ 多く の 固有 情報 を 取得 する 
2  標準 的 な ビルド ・ インストール 作業 
3 . 1  別 の 場所 へ の インストール :  home  スキーム 
しばしば 、 サード パーティ 製  Python  モジュール を インストール する ため の 標準 の 場所 以外 に モジュール を インストール し な けれ ば な ら な かっ たり 、 単に そう し た く な る とき が あ り ま す 。 
例えば Unix  システム で は 、 標準 の サード パーティ 製 モジュール ディレクトリ に 対 する 書き込み 権限 を 持 っ て い な い か も しれ ま せ ん 。 
また は 、 ある モジュール を 、 ローカル で 使 っ て い る  Python  に 標準 の モジュール の 一部 と し て 組み込 む 前 に テスト し て み た い と 思 う か も しれ ま せ ん 。 
既存 の 配布 物 を アップグレード する 際 に は 特に そう で しょ う : 実際 に アップグレード する 前 に 、 既存 の スクリプト の 基本 と な る 部分 が 新た な バージョン で も 動作 する か 確認 し た い はず で す 。  Distutils  の  install  コマンド は 、 別 の 場所 へ 配布 物 を インストール する 作業 を 単純 で 苦労 の な い 作業 に する よう に 設計 さ れ て い ま す 。 
基本 的 な アイデア は 、 インストール 先 の ベース ディレクトリ を 指定 し て お き 、 install  コマンド が その ベース ディレクトリ 下 に ファイル 群 を インストール する ため の 一連 の ディレクトリ  ( インストール スキーム :  installation  scheme )  を 作成 する と い う もの で す 。 
詳細 は プラットフォーム に よ っ て 異な る の で 、 以下 の 節 から 自分 の プラットフォーム に 当てはま る もの を 読 ん で くださ い 。 
` ` home  スキーム ' ' の 背後 に あ る 考え 方 は 、 Python  モジュール を 個人 用 の モジュール 置き場 で ビルド し 、 維持 する と い う もの で す 。 
この スキーム の 名前 は  Unix の 「 ホーム 」 ディレクトリ の 概念 から と り ま し た 。  と い う の も 、 Unix の ユーザ に と っ て 、 自分 の ホーム ディレクトリ を \/ usr\/ や \/ usr\/ local \/  の よう に レイアウト する の は よく あ る こと だ から で す 。 
と は い え 、 この スキーム は どの オペレーティング システム の ユーザ で も 使え ま す 。  新た な モジュール の インストール は 単純 で 、 
pythonsetup . py install -- home =dir  の よう に し ま す 。 
この とき 、 - - home  オプション を 使 っ て ディレクトリ を 指定 し ま す 。 
面倒 臭 がり の 人 は 、 単に チルダ ( ~)  を タイプ する だけ で かま い ま せ ん ;  install  コマンド が チルダ を ホーム ディレクトリ に 展開 し て くれ ま す : 
- - home  オプション は 、 インストール の ベース ディレクトリ を 指定 し ま す 。 
ファイル は インストール ベース 下 の 以下 の ディレクトリ に 保存 さ れ ま す : 
ファイル の 種類 
インストール 先 ディレクトリ 
オーバライド する ため の オプション 
pure  モジュール 配布 物 
非  pure  モジュール 配布 物 
スクリプト 
データ 
バージョン  2 . 4  で  変更  さ れ た 仕様 : - - home  は Unix で しか サポート さ れ て い ま せ ん で し た 
ある インストール 済み の  Python  を 使 っ て モジュール の ビルド \/ インストール を  ( 例えば  setup  スクリプト を 実行 し て )  行 い た い けれど も 、 別 の インストール 済み の  Python  の サード パーティ 製 モジュール 置き場 ( あるいは 、 そう 見え る よう な ディレクトリ 構造 )  に 、 ビルド さ れ た モジュール を インストール し た い 場合 に は 、 `` prefix  スキーム ' ' が 便利 で す 。 
そんな 作業 は まったく あ り え そう に な い 、 と 思 う なら 、 確か に その 通り で す  --`` home  スキーム ' ' を 先 に 説明 し た の も その ため で す 。 
と は い え 、 prefix  スキーム が 有用 な ケース は 少な く とも 二 つ あ り ま す 。  まず 、 多く の  Linux  ディストリビューション は 、  Python  を \/ usr\/ local で は な く  \/ usr  に 置 い て い る こと を 考え て くださ い 。 
この 場合 は 、 Python  は ローカル の 計算 機 ごと の アド オン  ( add - on )  で は な く 、 `` システム ' ' の 一部 と な っ て い る の で 、 \/ usr  に 置 く の は 全く 正当 な こと で す 。 
しかし ながら 、  Python  モジュール を ソース コード から インストール し て い る と 、 モジュール を  \/ usr\/ lib\/python 2 . X 
で は な く  \/ usr\/ local \/ lib\/python 2 . X 
に 置 き た い と 思 う か も しれ ま せ ん 。 
これ を 行 う に は 
から モジュール を 探 す で しょ う が 、 モジュール は 別 の 場所 、 例えば \/ mnt\/@server\/export\/lib\/python 2 . X 
に インストール し な けれ ば な ら な い か も しれ ま せ ん 。 
この 場合 に は 、 
の よう に し ま す 。  どちら の 場合 も 、 - - prefix  オプション で イン ストール ベース ディレクトリ を 決め 、 - - exec - prefix  で プラットフォーム 固有 の ファイル 置き 場 名 と し て 使 う 、 プラットフォーム 固有 インストール ベース ディレクトリ を 決め ま す 。 
( プラットフォーム 固有 の ファイル と は 、 現状 で は 単に 非  pure  モジュール 配布 物 の こと を 意味 し ま す が 、  C  ライブラリ や バイナリ 実行 可能 形式 など に 拡張 さ れ る か も しれ ま せ ん 。 
)  - - exec - prefix  が 指定 さ れ て い な けれ ば 、 デフォルト の - - prefix に な り ま す 。 
ファイル は 以下 の よう に インストール さ れ ま す : 
- - prefix  や - - exec - prefix  が 実際 に 他 の インストール 済み  Python  の 場所 を 指 し て い る 必要 は あ り ま せ ん ; 上 に 挙げ た ディレクトリ が まだ 存在 し な けれ ば 、 インストール 時 に 作成 さ れ ま す 。  ちなみ に 、 prefix  スキーム が 重要 な 本当 の 理由 は 、 単に 標準 の  Unix  インストール が  prefix  スキーム を 使 っ て い る から で す 。 
ただし 、 その とき に は 、 -- prefix  や - - exec - prefix  は  Python  自体 が  sys . prefix  や sys . exec _prefix  を 使 っ て 決め ま す 。 
と い う わけ で 、 読者 は  prefix  スキーム を 決して 使 う こと は あ る まい と 思 っ て い る か も しれ ま せ ん が 、 pythonsetup . py install  を オプション を 何 も つけ ず に 実行 し て い れ ば 、 常 に  prefix  スキーム を 使 っ て い る こと に な る の で す 。  拡張 モジュール を 別 の インストール 済み  Python  に インストール し て も 、 拡張 モジュール の ビルド 方法 に よ る 影響 を 受け る こと は あ り ま せ ん : 特に 、 拡張 モジュール を コンパイル する 際 に は 、 setup  スクリプト を 実行 する 際 に 使 う  Python  インタプリタ と 一緒 に インストール さ れ て い る  Python  ヘッダ ファイル  ( Python . h  と その 仲間 たち )  を 使 い ま す 。 
上 で 述べ て き た や り 方 で イン ストール さ れ た 拡張 モジュール を 実行 する インタプリタ と 、 インタプリタ を ビルド する 際 に 用い た 別 の インタプリタ と の 互換 性 を 保証 する の は ユーザ の 責任 で す 。 
これ を 行 う に は 、 二 つ の インタプリタ が 同じ バージョン の  Python  ( ビルド が 違 っ て い たり 、 同じ ビルド の コピー と い う こと も あ り 得 ま す )  で あ る か どう か を 確かめ ま す 。 
( もちろん 、 - - prefix  や - - exec - prefix  が 別 の インストール 済み  Python  の 場所 すら 指 し て い な けれ ば どう に も な り ま せ ん 。  ) 
Windows  は ユーザ の ホーム ディレクトリ と い う 概念 が な く 、 Windows  環境 下 で 標準 的 に インストール さ れ た  Python  は Unix より も 単純 な 構成 を し て い る の で 、  Windows  で 追加 の パッケージ を 別 の 場所 に 入れ る 場合 に は 、 伝統 的 に - - prefix  が 使 わ れ て き ま し た 。 
と する と 、 モジュール を 現在 の ドライブ の TempPython  ディレクトリ に インストール し ま す インストール ベース ディレクトリ は 、 -- prefix  オプション だけ で 決ま り ま す ;- - exec - prefix  オプション は 、 Windows で は サポート さ れ て い ま せ ん 。  ファイル は 以下 の よう な 構成 で イン ストール さ れ ま す : 
2  ソース コード 配布 物 を 作成 する : sdist  command 
1  distutils . core  -- Distutils  の コア 機能 
1 . 1  インク ルード ファイル 
1 . 2  オブジェクト 、 型 および 参照 カウント 
1 . 2 . 1  参照 カウント 
1 . 2 . 2  型 
1 . 3  例外 
1 . 4  Python  の 埋め込 み 
2 .  超 高 レベル レイヤ 
3 .  参照 カウント 
4 .  例外 処理 
4 . 1  標準 例外 
4 . 2  文字 列 例外 の 廃止 
5 .  ユーティリティ 関数 
5 . 1  オペレーティング システム 関連 の ユーティリティ 
5 . 2  プロセス 制御 
5 . 3  モジュール の import
5 . 4  データ 整列 化  ( datamarshalling )  の サポート 
5 . 5  引数 の 解釈 と 値 の 構築 
7 .  具象 オブジェクト  ( concreteobject )  レイヤ 
7 . 1  基本 オブジェクト  ( fundamental object ) 
7 . 1 . 1  型 オブジェクト (type object ) 
7 . 1 . 2  None  オブジェクト 
7 . 2  数値 型 オブジェクト  ( numeric object ) 
7 . 2 . 1  ( 通常 ) 整数 型 オブジェクト  ( plaininteger object ) 
7 . 2 . 2  Bool  型 オブジェクト 
7 . 2 . 3  長 整数 型 オブジェクト  ( long  integer object ) 
7 . 2 . 4  浮動 小数 点 型 オブジェクト  ( floating  point  object ) 
7 . 2 . 5  浮動 小数 点 オブジェクト  ( complex number object ) 
7 . 3  シーケンス オブジェクト  ( sequence  object ) 
7 . 3 . 1  文字 列 オブジェクト  ( string  object ) 
7 . 3 . 2  Unicode  オブジェクト  ( Unicode object ) 
7 . 3 . 4  タプル オブジェクト  ( tuple object ) 
7 . 4  マップ 型 オブジェクト  ( mapping  object ) 
7 . 4 . 1  辞書 オブジェクト  ( dictionary object ) 
7 . 5  その 他 の オブジェクト 
7 . 5 . 1  ファイル オブジェクト  ( file object ) 
7 . 5 . 2  インスタンス オブジェクト  ( instance  object ) 
7 . 5 . 3  メソッド オブジェクト  ( method  object ) 
7 . 5 . 4  モジュール オブジェクト  ( module object ) 
7 . 5 . 5  イテレータ オブジェクト  ( iterator object ) 
7 . 5 . 6  デスク リプタ オブジェクト  ( descriptor object ) 
7 . 5 . 7  スライス オブジェクト  ( slice  object ) 
7 . 5 . 8  弱 参照 オブジェクト  ( weak  reference  object ) 
7 . 5 . 9  C オブジェクト  ( CObject ) 
7 . 5 . 10  セル オブジェクト  ( cell object ) 
7 . 5 . 1 1  ジェネレータ オブジェクト 
7 . 5 . 12  DateTime  オブジェクト 
8 .  初期 化  ( initialization ) 、 終了 処理  ( finalization ) 、 スレッド 
8 . 1  スレッド 状態  ( thread  state )  と グローバル インタプリタ ロック  ( global interpreter  lock ) 
8 . 2  プロファイル と トレース  ( profiling  and tracing ) 
9 . 1  概要 
9 . 2  メモリ インタフェース 
9 . 3  例 
10 .  オブジェクト 実装 サポート  (object implementation  support) 
10 . 2  共通 の オブジェクト 構造 体  ( common object  structure ) 
10 . 3  型 オブジェクト 
10 . 4  マップ 型 オブジェクト 構造 体  ( mapping  object  structure ) 
10 . 5  数値 オブジェクト 構造 体  ( number object  structure ) 
10 . 6  シーケンス オブジェクト 構造 体  ( sequence  object  structure ) 
10 . 7  バッファ オブジェクト 構造 体  ( buffer object  structure ) 
10 . 8  イテレータ プロトコル を サポート する 
10 . 9  循環 参照 ガベージ コレクション を サポート する 
2 . 9 . 1  アプリケーション オブジェクト  アプリケーション オブジェクト の メソッド は 各種 あ り ま す が 、 次 の メソッド を あげ て お き ま す 。 
アプリケーション で メニュー を 使 う 必要 が あ る 場合 、 この メソッド を オーバーライド し ま す 。 
属性  menubar  に メニュー を 追加 し ま す 。 
この メソッド を オーバーライド する こと で 、 アプリケーション の 説明 を 記述 する テキスト 文字 列 を 返 し ま す 。 
代わり に 、 do_about ( )  メソッド を オーバーライド すれ ば 、 もっと 凝 っ た ` ` アバウト ' ' メッセージ を 出 す 事 が でき ま す 。 
この ルーチン が メイン イベント ループ で 、 作成 し た アプリケーション が 動き 出 す ため に は これ を 呼 ぶ こと に な り ま す 。 
代わり に self . _quit ( ) を 呼 ん で くださ い 。  イベント ループ は 小さな パーツ に 分割 さ れ て い て 、 各々 を オーバーライド でき る よう に な っ て い ま す 。 
これ ら の メソッド は 、 デフォルト で ウィンドウ と ダイアログ や 、 ドラッグ と リサイズ の 操作 、  AppleEvent 、 非 FrameWork の ウィンドウ に 関 する ウィンドウ の 操作 など に 関 する イベント を 分岐 する こと など まで 面倒 を み て くれ ま す 。  原則 と し て 、 全て の イベント ハンドラ は 、 イベント が 完全 に 取り扱 わ れ た 場合 は  1  を 返 さ な く て は いけ ま せ ん し 、 それ 以外 で は  0  を 返 さ な く て は いけ ま せ ん ( 例えば 、 前面 の ウィンドウ は  FrameWork  ウィンドウ で は な い 場合 を 考え て くださ い ) 。 
非 同期 で イベント 操作 を し た い 場合 は 、 非 ゼロ の 引数 で この メソッド を 呼 ん で くださ い 。 
こう する こと で 、 イベント が 生 じ た 時 に 、 内部 の インタプリタ の ループ で 、 アプリケーション イベント ハンドラ  async_dispatch  が 呼 ば れ る こと に な り ま す 。 
する と 、 長 時間 の 計算 を 行 っ て い る 場合 で も 、 FrameWork ウィンドウ が アップデート さ れ 、 ユーザー インターフェース が 動 き 続け る よう に な り ま す 。  ただし 、 インタプリタ の 動作 が 減速 し 、 非 リエントラント の コード  ( 例えば FrameWork 自身 など ) に 奇妙 な 動作 が 見 られ る か も しれ ま せ ん 。 
デフォルト で は  async_dispatch  は すぐ に  our_dispatch  を 呼 び ま す が 、 この メソッド を オーバーライド する と 、 特定 の イベント を 非 同期 で 操作 し て も 良 く な り ま す 。 
処理 し な い イベント は  Sioux  など に 渡 さ れ る こと に な り ま す 。  on あるいは off 値 が 返 さ れ ま す 。 
実行 中 の mainloop ( )  呼び出し を 、 次 の 適当 な タイミング で 終了 さ せ ま す 。 
ユーザー が 文字  c  を タイプ し た 時 に 呼 ば れ ま す 。 
イベント の 全 詳細 は event 構造 体 の 中 に あ り ま す 。 
この メソッド は ウィンドウ オブジェクト 内 で 使 う ため に も 提供 さ れ て い ま す 。 
この オブジェクト の ウィンドウ が 最 前面 に あ る 場合 は 、 アプリケーション 全般 に つ い て 本 ハンドラ を オーバーライド し ま す 。  do_dialogevent 
イベント ループ 内部 で 最初 に 呼 ば れ て 、 モードレス ダイアログ イベント を 処理 し ま す 。 
デフォルト で は メソッド は 単に イベント を 適切 な ダイアログ に 分岐 する だけ で す ( 関連 し た ダイアログ ウィンドウ オブジェクト を 経由 し て で は あ り ま せ ん ) 。 
特別 に ダイアログ イベント ( キーボード ショート カット など ) を 処理 する 必要 が あ る 場合 に オーバーライド し て くださ い 。 
イベント が 無 い 場合 に メイン イベント ループ から 呼 ば れ ま す 。 
null  イベント も 渡 さ れ ま す ( つまり マウス 位置 など を 監視 する こと が でき ま す ) 。 
5 . 4  データ 整列 化  ( datamarshalling ) 
これ ら の 関数 は 独自 の 拡張 モジュール 用 の 関数 や メソッド を 作成 する 際 に 便利 で す 。 
詳し い 情報 や 用例 は 
例外 と し て 、 括弧 で 囲 わ れ て い な い 書式 化 単位 文字 列 が 単一 の アドレス 引数 に 対応 する 場合 が いく つ か あ り ま す 。 
以下 の 説明 で は 、 引用 符 の つ い た 形式 は 書式 化 単位 で す ; ( 丸 ) 括弧 で 囲 っ た 部分 は 書式 化 単位 に 対応 する  Python  の オブジェクト 型 で す ;  [ 角 ]  括弧 は 値 を アドレス 渡し する 際 に 使 う  C  の 変数 型 で す 。 
" s "  ( 文字 列 型 また は  Unicode  オブジェクト 型 )  [ const  char* ] 
Python  の 文字 列 また は  Unicode  オブジェクト を 、 キャラクタ 文字 列 を 指 す  C  の ポインタ に 変換 し ま す 。 
変換 先 の 文字 列 自体 の 記憶 領域 を 提供 する 必要 は あ り ま せ ん ; キャラクタ 型 ポインタ 変数 の アドレス を 渡 す と 、 すでに 存在 し て い る 文字 列 へ の ポインタ を その 変数 に 記録 し ま す 。 
C  文字 列 は  NUL  で 終端 さ れ て い ま す 。 
Python  の 文字 列 型 は 、 NUL  バイト が 途中 に 埋め込 ま れ て い て は な り ま せ ん ;  もし 埋め込 ま れ て い れ ば TypeError  例外 を 送出 し ま す 。  Unicode  オブジェクト は デフォルト エンコーディング を 使 っ て C  文字 列 に 変換 さ れ ま す 。 
変換 に 失敗 する と  Unicode Error  を 送出 し ま す 。 
" s # "  ( 文字 列 型 、 Unicode  オブジェクト 型 また は 任意 の 読み出し バッファ 互換 型 ) [ const  char* ,int ]  これ は  " s "  の 変化 形 で 、 値 を 二 つ の 変数 に 記録 し ま す 。 
一 つ 目 の 変数 は キャラクタ 文字 列 へ の ポインタ で 、 二 つ 目 は その 長 さ で す 。 
この 書式 化 単位 の 場合 に は 、 Python  文字 列 に  null  バイト が 埋め込 ま れ て い て も かま い ま せ ん 。 
Unicode  オブジェクト の 場合 、 デフォルト エンコーディング で の 変換 が 可能 なら ば 、 変換 し た オブジェクト から 文字 列 へ の ポインタ を 返 し ま す 。 
その 他 の 読み出し バッファ 互換 オブジェクト は 生 の 内部 データ 表現 へ の 参照 を 返 し ま す 。 
" z "  ( 文字 列 型 また は  None )  [ const  char* ] 
" s "  に 似 て い ま す が 、 Python  オブジェクト は  None  で も よ く 、 その 場合 に は  C  の ポインタ は  NULL に セット さ れ ま す 。 
" z # "  ( 文字 列 型 、 None 、 また は 任意 の 読み出し バッファ 互換 型 )  [ const  char* ,int ] 
" s # "  の  " s "  を  " z "  に し た よう な 意味 で す 。 
" u "  ( Unicode  オブジェクト 型 )  [ Py _ UNICODE * ] 
Python  の  Unicode  オブジェクト を 、 NUL  で 終端 さ れ た  16  ビット の Unicode  ( UTF - 16 )  データ に 変換 し ま す 。 
" s "  と 同様 に 、 Unicode  データ バッファ 用 に 記憶 領域 を 提供 する 必要 は あ り ま せ ん ; Py _ UNICODE  型 ポインタ 変数 の アドレス を 渡 す と 、 すでに 存在 し て い る Unicode  データ へ の ポインタ を その 変数 に 記録 し ま す 。 
" u # "  ( Unicode  オブジェクト 型 )  [ Py _ UNICODE * ,int ] 
" es "  ( 文字 列 型 、 Unicode  オブジェクト 型 また は 任意 の 読み出し バッファ 互換 型 ) [ const  char* encoding ,  char **buffer ] 
これ は  " s "  の 変化 形 で 、 Unicode  オブジェクト や  Unicode  に 変換 可能 な オブジェクト を キャラクタ 型 バッファ に エンコード する ため に 用い られ ま す 。 
NUL  バイト が 埋め込 ま れ て い な い 文字 列 で のみ 動作 し ま す 。  この 書式 化 単位 に は 二 つ の 引数 が 必要 で す 。 
一 つ 目 は 入力 に のみ 用い られ 、 NUL  で 終端 さ れ た エンコード 名 文字 列 を 指 す  const  char *  型 で な けれ ば な り ま せ ん 。 
指定 し た エンコード 名 を  Python  が 理解 でき な い 場合 に は 例外 を 送出 し ま す 。 
第 二 の 引数 は  char * *  で な けれ ば な り ま せ ん ;  この 引数 が 参照 し て い る ポインタ の 値 は 、 引数 に 指定 し た テキスト の 内容 が 入 っ た バッファ へ の ポインタ に な り ま す 。 
テキスト は 最初 の 引数 に 指定 し た エンコード 方式 で エンコード さ れ ま す 。 
PyArg _ ParseTuple ( )  を 使 う と 、 必要 な サイズ の バッファ を 確保 し 、 その バッファ に エンコード 後 の データ を コピー し て 、 *buffer  が この 新た に 確保 さ れ た 記憶 領域 を 指 す よう に 変更 し ま す 。 
呼び出 し 側 に は 、 確保 さ れ た バッファ を 使 い 終わ っ た 後 に PyMem_ Free ( )  で 解放 する 責任 が あ り ま す 。 
" et "  ( 文字 列 型 、 Unicode  オブジェクト 型 また は 文字 列 バッファ 互換 型 )  [ const  char* encoding ,  char **buffer ] 
" es "  と 同じ で す 。  ただし 、 8  ビット 幅 の 文字 列 オブジェクト を エンコード し 直 さ ず に 渡 し ま す 。 
その 代わ り 、 実装 で は 文字 列 オブジェクト が パラメタ に 渡 し た エンコード を 使 っ て い る もの と 仮定 し ま す 。 
" es # "  ( 文字 列 型 、 Unicode  オブジェクト 型 また は 文字 列 バッファ 互換 型 )  [ const  char* encoding ,  char **buffer , int*buffer_length ] 
" s # "  の 変化 形 で 、 Unicode  オブジェクト や  Unicode  に 変換 可能 な オブジェクト を キャラクタ 型 バッファ に エンコード する ため に 用い られ ま す 。 
" es "  書式 化 単位 と 違 っ て 、 この 変化 形 は バイト が 埋め込 ま れ て い て も かま い ま せ ん 。  この 書式 化 単位 に は 三 つ の 引数 が 必要 で す 。 
一 つ 目 は 入力 に のみ 用い られ 、 NUL  で 終端 さ れ た エンコード 名 文字 列 を 指 す  const  char *  型 か NULL で な けれ ば な り ま せ ん 。  NULL の 場合 に は デフォルト エンコーディング を 使 い ま す 。 
指定 し た エンコード 名 を  Python  が 理解 でき な い 場合 に は 例外 を 送出 し ま す 。 
第 二 の 引数 は  char * *  で な けれ ば な り ま せ ん ;  この 引数 が 参照 し て い る ポインタ の 値 は 、 引数 に 指定 し た テキスト の 内容 が 入 っ た バッファ へ の ポインタ に な り ま す 。 
テキスト は 最初 の 引数 に 指定 し た エンコード 方式 で エンコード さ れ ま す 。 
呼び出 し 側 に は 、 確保 さ れ た バッファ を 使 い 終わ っ た 後 に PyMem_ Free ( )  で 解放 する 責任 が あ り ま す 。 *buffer  が 非  NULL  の ポインタ  ( すでに メモリ 確保 済み の バッファ )  を 指 し て い る 場合 、 PyArg _ ParseTuple ( )  は この メモリ 位置 を バッファ と し て 用い 、 *buffer_length  の 初期 値 を バッファ サイズ と し て 用い ま す 。 
PyArg _ ParseTuple ( )  は 次 に エンコード 済み の データ を バッファ に コピー し て 、 NUL  で 終端 し ま す 。 
バッファ の 大き さ が 足り な けれ ば  ValueError  が セット さ れ ま す 。  どちら の 場合 も 、 *buffer_length  は 終端 の  NUL  バイト を 含 ま な い エンコード 済 み データ の 長 さ に セット さ れ ま す 。 
" et # "  ( 文字 列 型 、 Unicode  オブジェクト 型 また は 文字 列 バッファ 互換 型 )  [ const  char* encoding ,  char **buffer ] 
" es # "  と 同じ で す 。  ただし 、 文字 列 オブジェクト を エンコード し 直 さ ず に 渡 し ま す 。 
その 代わ り 、 実装 で は 文字 列 オブジェクト が パラメタ に 渡 し た エンコード を 使 っ て い る もの と 仮定 し ま す 。 
" b "  ( 整数 型 )  [ char ] 
Python  の 整数 型 を 、  C  の  char  型 の 小さな 整数 に 変換 し ま す 。 
" B "  ( 整数 型 )  [ unsigned  char ] 
Python  の 整数 型 を 、 オーバフロー チェック を 行 わ ず に 、  C  の unsigned  char  型 の 小さな 整数 に 変換 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
" h "  ( 整数 型 )  [ shortint ] 
Python  の 整数 型 を 、  C  の  shortint  型 に 変換 し ま す 。 
" H "  ( 整数 型 )  [ unsigned shortint ] 
Python  の 整数 型 を 、 オーバフロー チェック を 行 わ ず に 、  C  の unsigned shortint  型 に 変換 し ま す 。 
" i "  ( 整数 型 )  [ int ] 
Python  の 整数 型 を 、  C  の int  型 に 変換 し ま す 。 
" I "  ( 整数 型 )  [ unsignedint ] 
Python  の 整数 型 を 、 オーバフロー チェック を 行 わ ず に 、  C  の unsignedint  型 に 変換 し ま す 。 
" l "  ( 整数 型 )  [ long  int ] 
Python  の 整数 型 を 、  C  の  long  int  型 に 変換 し ま す 。 
" k "  ( 整数 型 )  [ unsigned long ] 
Python  の 整数 型 を 、 オーバフロー チェック を 行 わ ず に 、  C  の unsigned long  int  型 に 変換 し ま す 。 
" L "  ( 整数 型 )  [ PY_ LONG _ LONG ] 
Python  の 整数 型 を 、  C  の  long  long  型 に 変換 し ま す 。 
この 書式 化 単位 は 、 long  long  型  ( また は  Windows  の _ int 64  型 )  が サポート さ れ て い る プラットフォーム で のみ 利用 でき ま す 。 
Convert a  Python integer to  a C  long  long .  This  format  isonly  available  on  platforms that  support long  long  (or_ int 64  on  Windows ) .  " K "  ( 整数 型 )  [ unsigned  PY_ LONG _ LONG ] 
Python  の 整数 型 を 、 オーバフロー チェック を 行 わ ず に 、  C  の unsigned long  long  型 に 変換 し ま す 。 
この 書式 化 単位 は 、 unsigned long  long  型  ( また は  Windows  の unsigned _ int 64  型 )  が サポート さ れ て い る プラットフォーム で のみ 利用 でき ま す 。 
" c "  ( 長 さ  1  の 文字 列 型 )  [ char ] 
長 さ  1  の 文字 列 と し て 表現 さ れ て い る  Python  キャラクタ を C  の  char  型 に 変換 し ま す 。 
" f "  ( 浮動 小数 点 型 )  [ float ] 
Python  の 浮動 小数 点 型 を 、  C  の  float  型 に 変換 し ま す 。 
" d "  ( 浮動 小数 点 型 )  [ double ] 
Python  の 浮動 小数 点 型 を 、  C  の  double  型 に 変換 し ま す 。 
" D "  ( 複素数 型 )  [ Py _ complex ] 
Python  の 複素数 型 を 、  C  の  Py _ complex  構造 体 に 変換 し ま す 。 
" O "  ( オブジェクト )  [ PyObject* ] 
Python  オブジェクト を  ( 一切 変換 を 行 わ ず に )  C  の  Python  オブジェクト 型 ポインタ に 保存 し ま す 。 
これ に よ り 、 C  プログラム は 実際 の オブジェクト を 受け渡し さ れ ま す 。 
オブジェクト の 参照 カウント は 増加 し ま せ ん 。 
保存 さ れ る ポインタ が  NULL に な る こと は あ り ま せ ん 。 
" O ! "  ( オブジェクト ) [typeobject ,  PyObject* ] 
Python  オブジェクト を  C  の  Python  オブジェクト 型 ポインタ に 保存 し ま す 。 
" O "  に 似 て い ま す が 、 二 つ の  C  の 引数 を と り ま す :  一 つ 目 の 引数 は Python  の 型 オブジェクト へ の アドレス で 、 二 つ 目 の 引数 は オブジェクト へ の ポインタ が 保存 さ れ て い る  ( PyObject *  の )  C  の 変数 へ の アドレス で す 。 
Python  オブジェクト が 指定 し た 型 で は な い 場合 、 TypeError  を 送出 し ま す 。 
" O "  ( オブジェクト )  [ converter , anything ] 
Python  オブジェクト を  converter  関数 を 介 し て  C  の 変数 に 変換 し ま す 。 
二 つ の 引数 を と り ま す :  一 つ 目 は 関数 で 、 二 つ 目 は  ( 任意 の 型 の )  C  変数 へ の アドレス を void  * 型 に 変換 し た もの で す 。 
converter  は 以下 の よう に し て 呼び出 さ れ ま す : 
ここ で  object  は 変換 対象 の  Python  オブジェクト で 、 address  は  PyArg _ Parse * ( )  に 渡 し た  void *  型 の 引数 で す 。 
戻り 値  status  は 変換 に 成功 し た 際 に  1 、 失敗 し た 場合 に は  0  に な り ま す 。 
変換 に 失敗 し た 場合 、 converter  関数 は 例外 を 送出 し な く て は な り ま せ ん 。 
" S "  ( 文字 列 型 )  [ PyStringObject* ] 
" O "  に 似 て い ま す が 、 Python  オブジェクト は 文字 列 オブジェクト で な けれ ば な り ま せ ん 。 
オブジェクト が 文字 列 オブジェクト で な い 場合 に は TypeError を 送出 し ま す 。 
C  変数 は  PyObject *  で 宣言 し て お い て も かま い ま せ ん 。 
" U "  ( Unicode  文字 列 型 )  [ PyUnicodeObject* ] 
" O "  に 似 て い ま す が 、 Python  オブジェクト は  Unicode  オブジェクト で な けれ ば な り ま せ ん 。 
オブジェクト が  Unicode  オブジェクト で な い 場合 に は TypeError を 送出 し ま す 。 
" t # "  ( 読み出し 専用 キャラクタ バッファ )  [ char* ,int ] 
" s # "  に 似 て い ま す が 、 読み出し 専用 バッファ インタフェース を 実装 し て い る 任意 の オブジェクト を 受理 し ま す 。 
char *  変数 は バッファ の 最初 の バイト を 指 す よう に セット さ れ 、 int  は バッファ の 長 さ に セット さ れ ま す 。 
単一 セグメント から な る バッファ オブジェクト だけ を 受理 し ま す ; それ 以外 の 場合 に は  TypeError  を 送出 し ま す 。 
" w "  ( 読み書き 可能 な キャラクタ バッファ )  [ char* ] 
" s "  と 同様 で す が 、 読み書き 可能 な バッファ インタフェース を 実装 し て い る 任意 の オブジェクト を 受理 し ま す 。 
呼び出 し 側 は 何 ら か の 別 の 手段 で バッファ の 長 さ を 決定 する か 、 あるいは " w # "  を 使 わ ね ば な り ま せ ん 。 
単一 セグメント から な る バッファ オブジェクト だけ を 受理 し ま す ; それ 以外 の 場合 に は  TypeError  を 送出 し ま す 。 
" w # "  ( 読み書き 可能 な キャラクタ バッファ )  [ char* ,int ] 
" s # "  に 似 て い ま す が 、 読み書き 可能 な バッファ インタフェース を 実装 し て い る 任意 の オブジェクト を 受理 し ま す 。 
char *  変数 は バッファ の 最初 の バイト を 指 す よう に セット さ れ 、 int  は バッファ の 長 さ に セット さ れ ま す 。 
" ( items ) "  ( タプル )  [ matching - items ] 
オブジェクト は items  に 入 っ て い る 書式 化 単位 の 数 だけ の 長 さ を 持 つ Python  の シーケンス 型 で な く て は な り ま せ ん 。 
各  C  引数 は  items  内 の 個々 の 書式 化 単位 に 対応 づけ でき ね ば な り ま せ ん 。 
シーケンス の 書式 化 単位 は 入れ子 構造 に でき ま す 。 
注意 : Python  の バージョン  1 . 5 . 2  より 以前 は 、 この 書式 化 指定 文字 列 は パラメタ 列 で は な く 、 個別 の パラメタ が 入 っ た タプル で な けれ ば な り ま せ ん で し た 。 
この ため 、 以前 は  TypeError  を 引き起こ し て い た よう な コード が 現在 は 例外 を 出 さ ず に 処理 さ れ る か も しれ ま せ ん 。 
と は い え 、 既存 の コード に と っ て これ は 問題 な い と 思 わ れ ま す 。 
Python  整数 型 を 要求 し て い る 場所 に  Python  長 整数 型 を 渡 す の は 可能 で す ;  しかし ながら 、 適切 な 値域 チェック は まったく 行 わ れ ま せ ん  - - 値 を 受け取 る ため の フィールド が 、 値 全て を 受け取 る に は 小さ すぎ る 場合 、 上 桁 の ビット 群 は 暗黙 の うち に 切り詰め られ ま す  ( 実際 の ところ 、 この セマンティクス は  C  の ダウン キャスト  ( downcast )  から 継承 し て い ま す --  その 恩恵 は 人 それぞれ か も しれ ま せ ん が ) 。  その 他 、 書式 化 文字 列 に お い て 意味 を 持 つ 文字 が いく つ か あ り ま す 。 
それ ら の 文字 は 括弧 に よ る 入れ子 内 に は 使え ま せ ん 。 
以下 に 文字 を 示 し ま す : 
Python  引数 リスト 中 で 、 この 文字 以降 の 引数 が オプション で あ る こと を 示 し ま す 。 
オプション の 引数 に 対応 する  C  の 変数 は デフォルト の 値 で 初期 化 し て お か ね ば な り ま せ ん --  オプション の 引数 が 省略 さ れ た 場合 、 PyArg _ ParseTuple ( )  は 対応 する  C  変数 の 内容 に 手 を 加え ま せ ん 。 
この 文字 が あ る と 、 書式 化 単位 の 記述 は そこ で 終わ り ま す ; コロン 以降 の 文字 列 は 、 エラー メッセージ に お け る 関数 名 ( PyArg _ ParseTuple ( )  が 送出 する 例外 の ` ` 付属 値  ( associated value ) ' ')  と し て 使 わ れ ま す 。 
この 文字 が あ る と 、 書式 化 単位 の 記述 は そこ で 終わ り ま す ; セミコロン 以降 の 文字 列 は 、 デフォルト エラー メッセージ を 置き換え る  エラー メッセージ と し て 使 わ れ ま す 。 
言 う まで も な く 、 " : "  と " ; "  は 相互 に 排他 の 文字 で す 。 
呼び出 し 側 に 提供 さ れ る  Python  オブジェクト の 参照 は 全て  借り た  ( borrowed )  もの で す ;  オブジェクト の 参照 カウント を デクリメント し て は な り ま せ ん ! 以下 の 関数 に 渡 す 補助 引数  ( additional argument )  は 、 書式 化 文字 列 から 決定 さ れ る 型 へ の アドレス で な けれ ば な り ま せ ん ;  補助 引数 に 指定 し た アドレス は 、 タプル から 入力 さ れ た 値 を 保存 する ため に 使 い ま す 。 
上 の 書式 化 単位 の リスト で 説明 し た よう に 、 補助 引数 を 入力 値 と し て 使 う 場合 が いく つ か あ り ま す ;  その 場合 、 対応 する 書式 化 単位 の 指定 する 形式 に 従 う よう に せ ね ば な り ま せ ん 。  変換 を 正し く 行 う ため に は 、 arg  オブジェクト は 書式 化 文字 に 一致 し な けれ ば な ら ず 、 かつ 書式 化 文字 列 内 の 書式 化 単位 に 全て 値 が 入 る よう に せ ね ば な り ま せ ん 。 
成功 する と 、 PyArg _ Parse * ( )  関数 は 真 を 返 し ま す 。  それ 以外 の 場合 に は 偽 を 返 し 、 適切 な 例外 を 送出 し ま す 。 
固定 引数 のみ を 引数 に と る 関数 の パラメタ を 解釈 し て 、 ローカル な 変数 に 変換 し ま す 。 
成功 する と 真 を 返 し ま す ; 失敗 する と 偽 を 返 し 、 適切 な 例外 を 送出 し ま す 。 
PyArg _ ParseTuple ( )  と 同じ で す が 、 可変 長 の 引数 で は な く  va_list  を 引数 に と り ま す 。 
固定 引数 および キー ワード 引数 を と る 関数 の パラメタ を 解釈 し て 、 ローカル な 変数 に 変換 し ま す 。 
成功 する と 真 を 返 し ま す ; 失敗 する と 偽 を 返 し 、 適切 な 例外 を 送出 し ま す 。 
PyArg _ ParseTupleAndKeywords ( )  と 同じ で す が 、 可変 長 の 引数 で は な く  va_list  を 引数 に と り ま す 。 
` ` 旧 形式 ' '  の 関数 に お け る 引数 リスト を 分析 する ため に 使 わ れ る 関数 で す  - -  旧 形式 の 関数 は 、 引数 解釈 手法 に METH _ OLDARGS  を 使 い ま す 。 
新た に 書 か れ る コード で の パラメタ 解釈 に は この 関数 の 使用 は 奨め られ ず 、 標準 の インタプリタ に お け る ほとんど の コード が もはや 引数 解釈 の ため に この 関数 を 使 わ な い よう に 変更 済み で す 。 
この 関数 を 残 し て い る の は 、 この 関数 が 依然 と し て 引数 以外 の タプル を 分析 する 上 で 便利 だ から で す が 、 この 目的 に お い て は 将来 も 使 わ れ つづけ る か も しれ ま せ ん 。 
パラメータ 取得 を 簡単 に し た 形式 で 、 引数 の 型 を 指定 する 書式 化 文字 列 を 使 い ま せ ん 。 
パラメタ の 取得 に この 手法 を 使 う 関数 は 、 関数 宣言 テーブル 、 また は メソッド 宣言 テーブル 内 で METH _ VARARGS  と し て 宣言 し な く て は な り ま せ ん 。 
実 引数 の 入 っ た タプル は  args  に 渡 し ま す ; この タプル は 本当 の タプル で な く て は な り ま せ ん 。 
タプル の 長 さ は 少な く とも  min  で 、 max  を 超え て は な り ま せ ん ; min  と  max  が 等し く て も かま い ま せ ん 。 
補助 引数 を 関数 に 渡 さ な く て は な ら ず 、 各 補助 引数 は PyObject *  変数 へ の ポインタ で な く て は な り ま せ ん ;  これ ら の 補助 引数 に は 、 args  の 値 が 入 り ま す ;  値 の 参照 は 借り た 参照 で す 。 
この 例 に おけ る PyArg_UnpackTuple ( )  呼び出し は 、 PyArg _ ParseTuple ( )  を 使 っ た 以下 の 呼び出 し : 
PyArg _ ParseTuple ( args,  " O | O : ref " , object ,  callback )  と 全く 等価 で す 。 
バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
PyArg _ Parse * ( )  ファミリ の 関数 が 受け取 る の と 似 た 形式 の 書式 化 文字 列 および 値列 に 基づ い て 、 新た な 値 を 生成 し ま す 。 
生成 し た 値 を 返 し ま す 。  エラー の 場合 に は NULL  を 返 し ま す ; NULL  を 返 す 場合 、 例外 を 送出 する で しょ う 。 
Py _ BuildValue ( )  は 常 に タプル を 生成 する と は 限 り ま せ ん 。 
この 関数 が タプル を 生成 する の は 、 書式 化 文字 列 に 二 つ 以上 の 書式 化 単位 が 入 っ て い る とき だけ で す 。 
書式 化 文字 列 が 空 の 場合 、 None  を 返 し ま す ;  書式 化 単位 が 厳密 に 一 つ だけ 入 っ て い る 場合 、 書式 化 単位 で 指定 さ れ て い る 何 ら か の オブジェクト 単体 を 返 し ま す 。 
サイズ が ゼロ や  1  の タプル を 返 す よう に 強制 する に は 、 丸括弧 で 囲 わ れ た 書式 化 文字 列 を 使 い ま す 。  書式 化 単位  " s "  や  " s # "  の 場合 の よう に 、 オブジェクト を 構築 する 際 に データ を 供給 する ため に メモリ バッファ を パラメタ と し て 渡 す 場合 に は 、 指定 し た データ は コピー さ れ ま す 。 
Py _ BuildValue ( ) が 生成 し た オブジェクト は 、 呼び出 し 側 が 提供 し た バッファ を 決して 参照 し ま せ ん 。 
これ ら の 文字 を 使 う と 、 長 い 書式 化 文字 列 を ちょっと だけ 読 み やす く でき ま す 。 
" s "  ( 文字 列 型 )  [ char* ] 
null  終端 さ れ た  C  文字 列 から  Python  オブジェクト に 変換 し ま す 。 
C  文字 列 ポインタ が  NULL の 場合 、  None  に な り ま す 。 
" s # "  ( 文字 列 型 )  [ char* ,int ] 
C  文字 列 と その 長 さ から  Python  オブジェクト に 変換 し ま す 。 
C  文字 列 ポインタ が  NULL の 場合 、 長 さ は 無視 さ れ  None  に な り ま す 。 
" s "  と 同じ で す 。 
" s # "  と 同じ で す 。 
null  終端 さ れ た  Unicode  ( UCS - 2  また は  UCS - 4 )  データ の バッファ から Python  オブジェクト に 変換 し ま す 。 
Unicode  バッファ ポインタ が  NULL の 場合 、  None  に な り ま す 。 
null  終端 さ れ た  Unicode  ( UCS - 2  また は  UCS - 4 )  データ の バッファ と その 長 さ から  Python  オブジェクト に 変換 し ま す 。 
Unicode  バッファ ポインタ が  NULL の 場合 、 長 さ は 無視 さ れ None  に な り ま す 。 
通常 の  C  の int  を  Python  の 整数 オブジェクト に 変換 し ま す 。 
" i "  と 同じ で す 。 
C  の  long  int  を  Python  の 整数 オブジェクト に 変換 し ま す 。 
文字 を 表 す 通常 の  C  の int  を 、 長 さ  1  の  Python  の 文字 列 オブジェクト に 変換 し ま す 。 
C  の  double  を  Python  の 浮動 小数 点数 に 変換 し ま す 。 
" d "  と 同じ で す 。 
" D "  ( 複素数 型 )  [ Py _ complex * ] 
C  の  Py _ complex  構造 体 を  Python  の 複素数 に 変換 し ま す 。 
Python  オブジェクト を 手 を 加え ず に 渡 し ま す  ( ただし 、 参照 カウント は 1  インクリメント し ま す ) 。 
渡 し た オブジェクト が  NULL  ポインタ の 場合 、 この 引数 を 生成 する の に 使 っ た 何 ら か の 呼び出し が エラー に な っ た の が 原因 で あ る と 仮定 し て 、 例外 を セット し ま す 。  従 っ て この とき  Py _ BuildValue ( )  は  NULL  を 返 し ま す が Py _ BuildValue ( )  自体 は 例外 を 送出 し ま せ ん 。 
例外 を まだ 送出 し て い な けれ ば SystemError  を セット し ま す 。 
" S "  ( オブジェクト )  [ PyObject* ] 
" O "  と 同じ で す 。 
" N "  ( オブジェクト )  [ PyObject* ] 
" O "  と 同じ で す 。  ただし 、 オブジェクト の 参照 カウント を インクリメント し ま せ ん 。 
オブジェクト が 引数 リスト 内 の オブジェクト コンストラクタ 呼び出し に よ っ て 生成 さ れ て い る 場合 に 便利 で す 。 
anything  を  converter  関数 を 介 し て  Python  オブジェクト に 変換 し ま す 。 
この 関数 は anything  ( void  *  と 互換 の 型 で な けれ ば な り ま せ ん )  を 引数 に し て 呼び出 さ れ 、 ` ` 新た な ' '  オブジェクト を 返 す か 、 失敗 し た 場合 に は  NULL  を 返 す よう に し な けれ ば な り ま せ ん 。 
" ( items ) "  ( タプル 型 )  [ matching - items ] 
C  の 値 から な る 配列 を 、 同じ 要素 数 を 持 つ  Python  の タプル に 変換 し ま す 。 
" [ items ] "  ( リスト 型 )  [ matching - items ] 
C  の 値 から な る 配列 を 、 同じ 要素 数 を 持 つ  Python  の リスト に 変換 し ま す 。 
" {items} "  ( 辞書 型 )  [ matching - items ] 
C  の 値 から な る 配列 を  Python  の 辞書 に 変換 し ま す 。 
一連 の ペア から な る C  の 値 が 、 それぞれ キー および 値 と な っ て 辞書 に 追加 さ れ ま す 。 
書式 化 文字 列 に 関 する エラー が 生じ る と 、 SystemError  例外 を セット し て  NULL  を 返 し ま す 。 
1 . 2 . 2 . 2  クリエータ を セット し て ダブル クリック する 
1 . 2  MacPython - OS 9  の 取得 と インストール 
1 . 2 . 4  Python スクリプト を 作成 する 
1 . 2 . 3  コマンドライン 引数 を シミュレート する  MacPython - OS 9  で コマンドライン 引数 を シミュレート する に は  2  つ の 方法 が あ り ま す 。 
インタプリタ オプション を 使 う 場合 
スクリプト を 起動 する 時 、 オプション キー を 押 し ながら 行 い ま す 。 
Python  インタプリタ オプション の ダイアログ ボックス が 現われ ま す 。 
` ` Set Unix - style command  line . . ' ' ボタン を クリック し ま す 。 
` ` Argument ' ' フィールド に 引数 を タイプ し ま す 。 
` ` OK ' ' を クリック し ま す 。 
` ` Run' ' を クリック し ま す 。 
ドラッグ \& ドロップ を 使 う 場合 。  スクリプト を アプレット と し て 保存 し た 場合  ( 1 . 3 . 4  節 参照 ) 、  「 ドラッグ \& ドロップ 」 で コマンドライン 引数 も シミュレート でき ま す 。 
この 場合 、 アプレット に ドロップ し た ファイル の 名前 が  sys . argv  に 追加 さ れ 、 ドロップ し た ファイル 名 は スクリプト 側 から は コマンドライン で タイプ さ れ た か の よう に 見え ま す 。 
Unix  システム と 同様 、 sys . srgv  の 最初 の 要素 は アプレット 自体 へ の パス に な り ま す 。  残り の 要素 は アプレット に ドロップ し た ファイル の 名前 で す 。 
Assert  文 
は 、 プログラム 内 に デバッグ 用 アサーション ( debugging  assertion )  を 仕掛け る ため の 便利 な 方法 で す : 
単純 な 形式  " assert  expression "  は 、 
と 等価 で す 。  拡張 形式  " assert  expression 1 , expression 2 "  は 、 
と 等価 で す 。 
上記 の 等価 関係 は 、 __debug_ _ と AssertionError 
が 、 同名 の 組み込 み 変数 を 参照 し て い る と い う 前提 の 上 に 成り立 っ て い ま す 。 
現在 の 実装 で は 、 組み込 み 変数 __debug_ _ は 通常 は  1  で あ り 、 インタプリタ に  ( コマンドライン オプション  - O  で )  最適 化 を 要求 する と 0  に な り ま す 。 
現状 の コード 生成 器 は 、 コンパイル 時 に 最適 化 が 要求 さ れ て い る と  assert  文 に 対 する コード を 全く 出力 し ま せ ん 。 
実行 に 失敗 し た 式 の ソース コード を エラー メッセージ 内 に 入れ る 必要 は あ り ま せ ん ;  メッセージ は スタック トレース 内 で 表示 さ れ ま す 。 __debug_ _ へ の 代入 は 不正 な 操作 で す 。 
組み込 み 変数 の 値 は 、 インタプリタ が 開始 する とき に 決定 さ れ ま す 。 
6 . 2  Assert  文  ( assert
6 . 3 . 1  累算 代入 文  ( augmented assignment 
代入 文 
は 、 名前 を 値 に  ( 再 )  束縛 し たり 、 変更 可能 な オブジェクト の 属性 や 要素 を 変更 し たり する ため に 使 わ れ ま す : 
( 末尾 の 三 つ の シンボル の 構文 に つ い て は 5 . 3  節 を 参照 し て くださ い 。  ) 代入 文 は 式 の リスト  ( これ は 単一 の 式 で も 、 カンマ で 区切 ら れ た 式 リスト で も よ く 、 後者 は タプル に な る こと を 思い出 し て くださ い )  を 評価 し 、 得 られ た 単一 の 結果 オブジェクト を ターゲット  (target )  の リスト に 対 し て 左 から 右 へ と 代入 し て ゆ き ま す 。 
代入 は ターゲット  ( リスト )  の 形式 に 従 っ て 再帰 的 に 行 わ れ ま す 。 
ターゲット が 変更 可能 な オブジェクト  ( 属性 参照 、 添字 表記 、 また は スライス ) の 一部 で あ る 場合 、 この 変更 可能 な オブジェクト は 最終 的 に 代入 を 実行 し て 、 その 代入 が 有効 な 操作 で あ る か 判断 し な けれ ば な り ま せ ん 。  代入 が 不 可能 な 場合 に は 例外 を 発行 する こと も でき ま す 。 
型 ごと に み られ る 規則 や 、 送出 さ れ る 例外 は 、 その オブジェクト 型 定義 で 与え られ て い ま す  ( 3 . 2  節 を 参照 し て くださ い ) . 
ターゲット リスト へ の オブジェクト の 代入 は 、 以下 の よう に し て 再帰 的 に 定義 さ れ て い ま す 。 
ターゲット リスト が 単一 の ターゲット から な る 場合 :  オブジェクト は その ターゲット に 代入 さ れ ま す 。 
ターゲット リスト が 、 カンマ で 区切 ら れ た 複数 の ターゲット から な る リスト の 場合 :  オブジェクト は ターゲット リスト 中 の ターゲット 数 と 同じ 数 の 要素 から な る シーケンス で な けれ ば な ら ず 、 その 各 要素 は 左 から 右 へ と 対応 する ターゲット に 代入 さ れ ま す 。 
( これ は  Python  1 . 5 で 緩和 さ れ た 規則 で す ;  以前 の バージョン で は 、 代入 する オブジェクト は タプル で な けれ ば な り ま せ ん で し た 。 
文字 列 も シーケンス な の で 、 今 で は " a ,  b =  " xy " "  の よう な 代入 は 文字 列 が 正し い 長 さ を 持 つ 限り 正規 の 操作 に な り ま す 。 ) 
単一 の ターゲット へ の 単一 の オブジェクト の 代入 は 、 以下 の よう に し て 再帰 的 に 定義 さ れ て い ま す 。 
ターゲット が 識別 子  ( 名前 )  の 場合 : 
名前 が 現在 の コード ブロック 内 の  global  文 に 書 か れ て い な い 場合 :  名前 は 現在 の ローカル 名前 空間 内 の オブジェクト に 束縛 さ れ ま す 。 
それ 以外 の 場合 :  名前 は 現在 の グローバル 名前 空間 内 の オブジェクト に 束縛 さ れ ま す 。 
名前 が すでに 束縛 済み の 場合 、 再 束縛  ( rebind )  が おこな わ れ ま す 。 
再 束縛 に よ っ て 、 以前 その 名前 に 束縛 さ れ て い た オブジェクト の 参照 カウント  ( reference count )  が ゼロ に な っ た 場合 、 オブジェクト は 解放  ( deallocate )  さ れ 、 デストラクタ  ( destructor 
)  が  ( 存在 すれ ば )  呼び出 さ れ ま す 。 
ターゲット が 丸括弧 や 角 括弧 で 囲 わ れ た ターゲット リスト の 場合 : オブジェクト は ターゲット リスト 中 の ターゲット 数 と 同じ 数 の 要素 から な る シーケンス で な けれ ば な ら ず 、 その 各 要素 は 左 から 右 へ と 対応 する ターゲット に 代入 さ れ ま す 。 
ターゲット が 属性 参照 の 場合 :  参照 さ れ て い る 一 次 語 の 式 が 値 評価 さ れ ま す 。 
値 は 代入 可能 な 属性 を 伴 う オブジェクト で な けれ ば な り ま せ ん ;  そう で な けれ ば 、  TypeError  が 送出 さ れ ま す 。 
次 に 、 この オブジェクト に 対 し て 、 被 代入 オブジェクト を 指定 し た 属性 に 代入 し て よ い か 問い合わせ ま す ;  代入 を 実行 でき な い 場合 、 例外  ( 通常 は  AttributeError  で す が 、 必然 で は あ り ま せ ん ) を 送出 し ま す 。 
ターゲット が 添字 表記 の 場合 :  参照 さ れ て い る 一 次 語 の 式 が 値 評価 さ れ ま す 。 
まず 、 値 は 変更 可能 な シーケンス オブジェクト  ( 例えば リスト ) か 、 マップ オブジェクト  ( 例えば 辞書 )  で な けれ ば な り ま せ ん 。 
次 に 、 添字 表記 の 表 す 式 が 値 評価 さ れ ま す 。 
一 次 語 が 変更 可能 な シーケンス オブジェクト  ( 例えば リスト )  の 場合 、 まず 添字 は 整数 で な けれ ば な り ま せ ん 。 
添字 が 負数 の 場合 、 シーケンス の 長 さ が 加算 さ れ ま す 。 
添字 は 最終 的 に 、 シーケンス の 長 さ より も 小さな 非 負 の 整数 で な く て は な り ま せ ん 。  次 に 、 添字 を インデクス に 持 つ 要素 に 非 代入 オブジェクト を 代入 し て よ い か 、 シーケンス に 問い合わせ ま す 。 
範囲 を 超え た インデクス に 対 し て は In dexError  が 送出 さ れ ま す  ( 添字 指定 さ れ た シーケンス に 代入 を 行 っ て も 、 リスト 要素 の 新た な 追加 は でき ま せ ん ) 。 
一 次 語 が マップ オブジェクト  ( 例えば 辞書 )  の 場合 、 まず 添字 は マップ の キー 型 と 互換 性 の あ る 型 で な く て は な り ま せ ん 。  次 に 、 添字 を 被 代入 オブジェクト に 関連 付け る よう な キー \/ データ の 対 を 生成 する よう マップ オブジェクト に 問い合わせ ま す 。 
この 操作 で は 、 既存 の キー \/ 値 の 対 を 同じ キー と 別 の 値 で 置き換え て も よ く 、 ( 同じ 値 を 持 つ キー が 存在 し な い 場合 )  新た な キー \/ 値 の 対 を 挿入 し て も かま い ま せ ん 。 
ターゲット が スライス の 場合 :  参照 さ れ て い る 一 次 語 の 式 が 値 評価 さ れ ま す 。 
まず 、 値 は 変更 可能 な シーケンス オブジェクト  ( 例えば リスト ) で な けれ ば な り ま せ ん 。 
被 代入 オブジェクト は 同じ 型 を 持 っ た シーケンス オブジェクト で な けれ ば な り ま せ ん 。 
次 に 、 スライス の 下 境界 と 上 境界 を 示 す 式 が あ れ ば 評価 さ れ ま す ;  デフォルト 値 は それぞれ ゼロ と シーケンス の 長 さ で す 。 
上下 境界 は 整数 に な ら な けれ ば な り ま せ ん 。 
いずれ か の 境界 が 負数 に な っ た 場合 、 シーケンス の 長 さ が 加算 さ れ ま す 。 
最終 的 に 、 境界 は ゼロ から シーケンス の 長 さ まで の 内包 に な る よう に クリップ さ れ ま す 。 
最後 に 、 スライス を 被 代入 オブジェクト で 置き換え て よ い か シーケンス オブジェクト に 問い合わせ ま す 。 
オブジェクト で 許 さ れ て い る 限り 、 スライス の 長 さ は 被 代入 シーケンス の 長 さ と 異な っ て い て よ く 、 この 場合 に は ターゲット シーケンス の 長 さ が 変更 さ れ ま す 。 
( 現在 の 実装 で は 、 ターゲット の 構文 は 式 の 構文 と 同じ で あ る と みな さ れ て お り 、 無効 な 構文 は コード 生成 フェーズ 中 に 詳細 な エラー メッセージ を 伴 っ て 拒否 さ れ ま す 。 
) 警告 :  代入 の 定義 で は 、 左辺 値 と 右辺 値 が オーバラップ する よう な 代入 ( 例えば 、 " a ,  b = b ,  a "  を 行 う と 、 二 つ の 変数 を 入れ 替え ま す )  を 定義 し て も  ` 安全  ( safe ) '  に 代入 でき ま す が 、 代入 対象 と な る 変数 群  の 間 で  オーバラップ が あ る 場合 は 安全 で は あ り ま せ ん ! 例えば 、 以下 の プログラム は  " [ 0 ,  2 ] "  を 出力 し て しま い ま す : 
1 1 . 2 6 . 1  asynchat -  補助 クラス と 関数 
以下 の サンプル は 、 async _ chat で HTTP リクエスト を 読み込 む 処理 の 一部 で す 。 
Web サーバ は 、 クライアント から の 接続 毎 に http_request _handler オブジェクト を 作成 し ま す 。 
次 の 簡単 な 例 で は 、 ある モジュール を import  し た 時 に カウンタ を 初期 化 し て お き 、 プログラム が 終了 する とき に アプリケーション が この モジュール を 明示 的 に 呼び出 さ な く て も カウンタ が 更新 さ れ る よう に する 方法 を 示 し て い ま す 。 
register ( )  に 指定 し た 固定 引数 と キー ワード パラメタ は 登録 し た 関数 を 呼び出 す 際 に 渡 さ れ ま す 。 
アトム の 形 に な っ て い る 識別 子  ( identifier )  は 名前  ( name )  で す 。 
名前 づけ や 束縛 に つ い て は 、 4 . 1  節 を 参照 し て くださ い 。  名前 が あ る オブジェクト に 束縛 さ れ て い る 場合 、 名前 アトム を 評価 する と その オブジェクト に な り ま す 。 
名前 が 束縛 さ れ て い な い 場合 、 アトム を 評価 し よう と する と NameError  例外 を 送出 し ま す 。 
プライベート な 名前 の 難号 化  ( mangling ) : 
クラス 定義 内 に テキスト の 形 で 書 か れ た 識別 子 で 、 二 つ 以上 の アンダース コア から 始ま り 、 末尾 が 二 つ 以上 の アンダース コア に な っ て い な い もの は 、 その クラス の  プライベート な 名前  ( private name )  と みな さ れ ま す 。  プライベート な 名前 は 、 コード が 生成 さ れ る 前 に 、 より 長 い 形式 の 名前 に 変換 さ れ ま す 。 
この 変換 で は 、 クラス 名 の 先頭 に あ る アンダース コア を 全て はぎと り 、 先頭 に アンダース コア を 一 つ 挿入 し て 、 名前 の 前 に 付加 し ま す 。 
例えば 、 クラス  Ham  内 の 識別 子 _ _spam  は 、 _ Ham_ _spam  に 変換 さ れ ま す 。 
変換 は 識別 子 が 使 わ れ て い る 構文 的 コンテキスト と は 独立 し て い ま す 。 
変換 さ れ た 名前 が 非常 に 長 い ( 25 5  文字 以上 )  の 場合 に は 、 実装 に よ っ て は 名前 の 切り詰め が 起き る か も しれ ま せ ん 。 
クラス 名 が アンダース コア だけ から 成り立 つ 場合 に は 、 変換 は 行 わ れ ま せ ん 。 
Python  で は 、 文字 列 リテラル と 、 様々 な 数値 リテラル を サポート し て い ま す : 
リテラル を 評価 する と 、 指定 し た 型  ( 文字 列 、 整数 、 長 整数 、 浮動 小数 点数 、 複素数 )  の 指定 し た 値 を 持 つ オブジェクト に な り ま す 。 
浮動 小数 点 や 虚数  ( 複素数 )  リテラル の 場合 、 値 は 近似 値 に な る 場合 が あ り ま す 。 
同じ 値 を 持 つ 複数 の リテラル を 評価 し た 場合 、 ( それ ら の リテラル が プログラム の 同じ 場所 由来 の もの で あ っ て も 、 そう で な く て も )  同じ オブジェクト を 指 し て い る か 、 まったく 同じ 値 を 持 つ 別 の オブジェクト に な り ま す 。 
アトム  ( 原子 的 要素 :  atom)  は 、 式 を 構成 する 基本 単位 で す 。 
もっとも 単純 な アトム は 、 識別 子 また は リテラル に な り ま す 。 
逆 クオート や 丸括弧 、 波括弧 、 また は 角 括弧 で 囲 わ れ た 形式  ( form )  も また 、 文法 的 に は アトム に 分類 さ れ ま す 。 
アトム の 構文 定義 は 以下 の よう に な り ま す : 
5 . 2 . 1  識別 子  ( identifier 、 また は 名前  ( name) ) 
3 . 3 . 2 . 1  新し い 形式 の クラス の ため の 別 の 属性 アクセス 
以下 の メソッド を 定義 し て 、 クラス インスタンス へ の 属性 値 アクセス  ( 属性 値 の 使用 、 属性 値 へ の 代入 、 x . name  の 削除 )  の 意味 を カスタマイズ する こと が でき ま す 。 
属性 値 の 検索 を 行 っ た 結果 、 通常 の 場所 に 属性 値 が 見つか ら な かっ た 場合  ( すなわち 、 self  の インスタンス 属性 で な く 、 かつ クラス ツリー に も 見つか ら な かっ た 場合 )  に 呼び出 さ れ ま す 。  この メソッド は  ( 計算 さ れ た )  属性 値 を 返 す か 、 AttributeError 例外 を 送出 し な けれ ば な り ま せ ん 。 
少な く とも インスタンス 変数 に 対 し て は 、 値 を インスタンス の 属性 値 辞書 に 挿入 し な い よう に し て  ( 代わり に 他 の オブジェクト に 挿入 する こと で ) 属性 値 が 完全 に 制御 さ れ て い る よう に 見せかけ られ る こと に 注意 し て くださ い 。 
新形式 の クラス で 実際 に 完全 な 制御 を 行 う 方法 は 、 以下 の _ _ getattribute__( )  メソッド を 参照 し て くださ い 。 
属性 値 へ の 代入 が 試み られ た 際 に 呼び出 さ れ ま す 。 
この メソッド は 通常 の 代入 メカニズム  ( すなわち 、 インスタンス 辞書 へ の 値 の 代入 ) の 代わり に 呼び出 さ れ ま す 。 
name  は 属性 名 で 、 value  は その 属性 に 代入 する 値 で す 。 
__setattr_ _( )  の 中 で イン スタンス 属性 値 へ の 代入 が 必要 な 場合 、 単に  " self . name = value "  と し て は な り ま せ ん --  この よう に する と 、 自分 自身 に 対 する 再帰 呼び出し が おき て しま い ま す 。 
その 代わり に 、 インスタンス 属性 の 辞書 に 値 を 挿入 し て くださ い 。 
例えば 、 " self .__dict__[ name ] = value "  と し ま す 。  新し い 形式 の クラス で は 、 インスタンス 辞書 に アクセス する の で は な く 、 基底 クラス の メソッド を 同じ 属性 名 で 呼び出 し ま す 。 
例えば 、 " object .__setattr_ _( self ,  name ,  value ) "  と し ま す 。 __ delattr_ _
__setattr_ _( )  に 似 て い ま す が 、 代入 で は な く 値 の 削除 を 行 い ま す 。 
この メソッド を 実装 する の は 、 オブジェクト に と っ て " del obj . name 
"  が 意味 が あ る 場合 だけ に し な けれ ば な り ま せ ん 。 
3 . 3 . 2 . 1  新し い 形式 の クラス の ため の 別 の 属性 アクセス 
3 . 3 . 2 . 2  デスク リプタ  ( descriptor )  の 実装 
3 . 3 . 2 . 3  デスク リプタ を 呼び出 す 
属性 参照 は 、 一 次 語 の 後ろ に ピリオド と 名前 を 連ね た もの で す : 
一 次 語 の 値 評価 結果 は 、 例えば モジュール 、 リスト 、 インスタンス と い っ た 、 属性 参照 を サポート する 型 で な けれ ば な り ま せ ん 。 
オブジェクト は 次 に 、 指定 し た 名前 が 識別 子 名 と な っ て い る よう な 属性 を 生成 する よう 問い合わせ さ れ ま す 。 
問い合わせ た 属性 が 得 られ な い 場合 、 例外 AttributeError  が 送出 さ れ ま す 。 
それ 以外 の 場合 、 オブジェクト は 属性 オブジェクト の 型 と 値 を 決定 し 、 生成 し て 返 し ま す 。 
同じ 属性 参照 を 複数 回 評価 し た とき 、 互い に 異な る 属性 オブジェクト に な る こと が あ り ま す 。 
この インターフェース は 
Attributesinterface  ( セクション 13 . 12 . 5 参照 )  の サブ タイプ で す 。 
修飾 名 の 値 を 返 す 。 
修飾 名  name  に 対応 する  ( namespace , localname )  の ペア を 返 す 。 
( namespace ,  localname )  の ペア に 対応 する 修飾 名 を 返 す 。 
すべて の 属性 の 修飾 名 を 返 す 。 
Attributes  オブジェクト は  copy ( ) 、 get ( ) 、 has _key ( ) 、 items ( ) 、 keys ( ) 、 values ( )  など を 含 む 、 マッピング ・ プロトコル の 一部 を 実装 し た もの で す 。 
さらに 次 の メソッド も 提供 さ れ て い ま す 。 :
属性 の 数 を 返 す 。 
属性 の 名前 を 返 す 。 
属性 名  name  の タイプ を 返 す 。  通常 は  ' CDATA '。 
属性  name  の 値 を 返 す 。 
上述 の open ( ) に よ っ て 返さ れ る AU _read オブジェクト に は 、 以下 の メソッド が あ り ま す : 
( これ は オブジェクト の ガベージ コレクション 時 に 自動 的 に 呼び出 さ れ ま す 。 ) 
オーディオ チャンネル 数 ( モノラル なら 1 、 ステレオ なら 2 ) を 返 し ま す 。 
圧縮 形式 を 返 し ま す 。 'ULAW' 、 ' ALAW' 、 ' NONE ' が サポート さ れ て い る 形式 で す 。 
getcomptype ( ) を 人 に 判読 可能 な 形 に し た もの で す 。 
上述 の 形式 に 対 し て 、 それぞれ ' CCITT  G . 71 1  u - law '、 ' CCITT  G . 71 1  A - law '、 'not  compressed ' が サポート さ れ て い ま す 。 
get * ( ) メソッド が 返 す の と 同じ ( nchannels ,  sampwidth ,  framerate , nframes , comptype ,  compname ) の タプル を 返 し ま す 。 
n 個 の オーディオ フレーム の 値 を 読み込 ん で 、 バイト ごと に 文字 に 変換 し た 文字 列 を 返 し ま す 。 
データ は linear 形式 で 返 さ れ ま す 。 
もし 元 の データ が u - LAW 形式 なら 、 変換 さ れ ま す 。 
tell ( ) で 返 さ れ る 値 を pos と し て 使用 し な けれ ば な り ま せ ん 。 
返 さ れ る 値 は ファイル の 実際 の 位置 に 対 し て 何 も 操作 は し ま せ ん 。 
以下 の 2 つ の メソッド は 
モジュール と の 互換 性 の ため に 定義 さ れ て い ま す が 、 何 も 面白 い こと は し ま せ ん 。 
上述 の open ( ) に よ っ て 返さ れ る Wave _write オブジェクト に は 、 以下 の メソッド が あ り ま す : 
サンプル サイズ を ( バイト 数 で ) 設定 し ま す 。 
フレーム レート を 設定 し ま す 。 
フレーム 数 を 設定 し ま す 。 
あと から フレーム が 書き込 ま れ る と フレーム 数 は 変更 さ れ ま す 。 
圧縮 形式 と その 記述 を 設定 し ま す 。 ' NONE ' と 'ULAW ' だけ が 、 出力 時 に サポート さ れ て い る 形式 で す 。 
全て の 変数 を 設定 し ま す 。 
ファイル の 中 の 現在 位置 を 返 し ま す 。  AU _read . tell ( ) と AU _read . setpos ( ) メソッド で お 断 り し た こと が この メソッド に も 当てはま り ま す 。 
writeframes ( ) や writeframesraw ( ) メソッド を 呼び出 し た あと で 、 どんな パラメータ を 設定 し よう と し て も 不正 と な る こと に 注意 し て 下さ い 。 
オーディオ デバイス オブジェクト は open ( ) で 返 さ れ 、 この オブジェクト に は 以下 の メソッド が 定義 さ れ て い ま す ( control オブジェクト は 除 き ま す 。  これ に は getinfo ( ) 、 setinfo ( ) 、 fileno ( ) 、 drain ( ) だけ が 定義 さ れ て い ま す ) : 
この メソッド は デバイス を 明示 的 に 閉じ ま す 。 
オブジェクト を 削除 し て も 、 それ を 参照 し て い る もの が あ っ て 、 すぐ に 閉じ て くれ な い 場合 に 便利 で す 。 
閉じ られ た デバイス を 使 う こと は でき ま せ ん 。 
デバイス に 関連 づけ られ た ファイル ディスク リプタ を 返 し ま す 。 
これ は 、 後述 の SIGPOLL の 通知 を 組み立て る の に 使 わ れ ま す 。 
この メソッド は 全て の 出力 中 の プロセス が 終了 する まで 待 っ て 、 それ から 制御 が 戻 り ま す 。  この メソッド の 呼び出し は そう 必要 で は あ り ま せ ん : オブジェクト を 削除 する と 自動 的 に オーディオ デバイス を 閉じ て 、 暗黙 の うち に 吐き出 し ま す 。 
この メソッド は 全て の 出力 中 の もの を 捨て去 り ま す 。 
ユーザ の 停止 命令 に 対 する 反応 の 遅れ ( 1 秒 まで の 音声 の バッファ リング に よ っ て 起こ り ま す ) を 避け る の に 使 わ れ ま す 。 
この メソッド は 入出力 の ボリューム 値 など の 情報 を 引き出 し て 、 オーディオ ステータス の オブジェクト 形式 で 返 し ま す 。 
この オブジェクト に は 何 も メソッド は あ り ま せ ん が 、 現在 の デバイス の 状態 を 示 す 多く の 属性 が 含 ま れ ま す 。 
属性 の 名称 と 意味 は sun\/audioio . h と 
audio ( 7 I ) に 記載 が あ り ま す 。 
メンバー 名 は 相当 する C の もの と は 少し 違 っ て い ま す : ステータス オブジェクト は 1 つ の 構造 体 で す 。 
その 中 の 構造 体 で あ る play の メンバー に は 名前 の 初め に " o _ " が つ い て い て 、 record に は " i _ " が つ い て い ま す 。 
その ため 、 C の メンバー で あ る play . sample_rate は o_ sample_rate と し て 、 record . gain は i _gain と し て 参照 さ れ 、 monitor_gain は その まま monitor_gain で 参照 さ れ ま す 。 
この メソッド は 録音 側 で バッファ リング さ れ る サンプル 数 を 返 し ま す 。 
つまり 、 プログラム は 同じ 大き さ の サンプル に 対 する read ( ) の 呼び出し を ブロック し ま せ ん 。 
この メソッド は 再生 側 で バッファ リング さ れ る サンプル 数 を 返 し ま す 。 
残念 ながら 、 この 数値 は ブロック なし に 書き込め る サンプル 数 を 調べ る の に は 使え ま せ ん 。  と い う の は 、 カーネル の 出力 キュー の 長 さ は 可変 だ から で す 。 
この メソッド は オーディオ 入力 から size の サイズ の サンプル を 読み込 ん で 、 Python の 文字 列 と し て 返 し ま す 。 
この 関数 は 必要 な データ が 得 られ る まで 他 の 操作 を ブロック し ま す 。 
この メソッド は オーディオ デバイス の ステータス パラメータ を 設定 し ま す 。 
パラメータ status は getinfo ( ) で 返 さ れ たり 、 プログラム で 変更 さ れ た オーディオ ステータス オブジェクト で す 。 
パラメータ と し て オーディオ サンプル を Python 文字 列 を 受け取 り 、 再生 し ま す 。  もし 十分 な バッファ の 空き が あ れ ば すぐ に 制御 が 戻 り 、 そう で な い なら ブロック さ れ ま す 。 
オーディオ デバイス は SIGPOLL を 介 し て 様々 な イベント の 非 同期 通知 に 対応 し て い ま す 。 
Python で これ を どの よう に し たら でき る か 、 例 を 挙げ ま す : 
6 . 3 . 1  累算 代入 文  ( augmented assignment statement )  累算 代入 文 は 、 二 項 演算 と 代入 文 を 組み合わせ て 一 つ の 文 に し た もの で す : 
累算 代入 文 は 、 ターゲット  ( 通常 の 代入 文 と 違 っ て 、 アン パック は 起こ り ま せ ん )  と 式 リスト を 評価 し 、 それ ら 二 つ の 被 演算 子 間 で 特定 の 累算 代入 型 の 二 項 演算 を 行 い 、 結果 を もと の ターゲット に 代入 し ま す 。 
ターゲット は 一 度 しか 評価 さ れ ま せ ん 。  x  + =  1  の よう な 累算 代入 式 は 、 x  =  x  +  1  の よう に 書き換え て ほぼ 同様 の 動作 に でき ま す が 、 厳密 に 等価 に は な り ま せ ん 。 
累算 代入 の 方 で は 、 x  は 一 度 しか 評価 さ れ ま せ ん 。 
同様 に 、 累算 代入 で 行 わ れ る 二 項 演算 は 、 場合 に よ っ て イン プレース 演算  が 行 わ れ る こと を 除 き 、 通常 の 二 項 演算 と 同じ で す 。  属性 参照 の ターゲット の 場合 、 代入 前 の 初期 値 は  getattr ( )  で 取り出 さ れ 、 演算 結果 は  setattr ( )  で 代入 さ れ ま す 。 
二 つ の メソッド が 同じ 変数 を 参照 する と い う 必然 性 は な い の で 注意 し て くださ い 。 
例えば : 
class  A : x  =  3  # class variablea = A ( ) a . x  + =  1  #  writes a . x  as  4  leaving  A . x  as  3  の よう に 、 getattr ( )  が クラス 変数 を 参照 し て い て も 、 setattr ( )  は インスタンス 変数 へ の 書き込み を 行 っ て しま い ま す 。 
1 . 2  幕間 小話 :  エラー と 例外 
1 . 4  モジュール の メソッド テーブル と 初期 化 関数 
先ほど の 関数 の 例 に 戻 る と 、 今度 は 以下 の 実行 文 を 理解 でき る はず で す : 
この 実行 文 は 、 PyArg _ ParseTuple ( )  が セット する 例外 に よ っ て 、 引数 リスト に 何 ら か の エラー が 生 じ た とき に NULL  ( オブジェクト へ の ポインタ を 返 す タイプ の 関数 に お け る エラー 標示 値 )  を 返 し ま す 。 
エラー で な けれ ば 、 引数 と し て 与え た 文字 列 値 は ローカル な 変数  command  に コピー さ れ て い ま す 。 
この 操作 は ポインタ 代入 で あ り 、 ポインタ が 指 し て い る 文字 列 に 対 し て 変更 が 行 わ れ る と は 想定 さ れ て い ま せ ん  ( 従 っ て 、 標準  C  で は 、 変数  command  は " const  char* command "  と し て 適切 に 定義 せ ね ば な り ま せ ん ) 。  次 の 文 で は 、 PyArg _ ParseTuple ( )  で 得 た 文字 列 を 渡 し て  Unix  関数  system ( )  を 呼び出 し て い ま す : 
spam . system ( )  は sts  を  Python  オブジェクト と し て 返さね ば な り ま せ ん 。 
これ に は 、 PyArg _ ParseTuple ( ) の 逆 と も い う べ き 関数 Py _ BuildValue ( )  を 使 い ま す : Py _ BuildValue ( )  は 書式 化 文字 列 と 任意 の 数 の  C  の 値 を 引数 に と り 、 新た な  Python  オブジェクト を 返 し ま す 。  Py _ BuildValue ( )  に 関 する 詳し い 情報 は 後 で 示 し ま す 。 
上 の 場合 で は 、 Py _ BuildValue ( )  は 整数 オブジェクト を 返 し ま す 。 
( そう 、 整数 で すら 、  Python  に お い て は ヒープ 上 の オブジェクト な の で す !  ) 何 ら 有用 な 値 を 返 さ な い 関数  ( void  を 返 す 関数 )  に 対応 する  Python  の 関数 は None  を 返 さ ね ば な り ま せ ん 。 
関数 に  None  を 返 さ せ る に は 、 以下 の よう な 慣用 句 を 使 い ま す ( この 慣用 句 は Py _ RETURN _ NONE  マクロ に 実装 さ れ て い ま す ) : 
Py _ None  は 特殊 な  Pyhton  オブジェクト で あ る  None  に 対応 する  C  で の 名前 で す 。 
これ まで 見 て き た よう に ほとんど の コンテキスト で  ` ` エラー ' ' を 意味 する  NULL  ポインタ と は 違 い 、 None  は 純粋 な Python  の オブジェクト で す 。 
BaseHandler  オブジェクト は 直接 的 に 役 に 立 つ  2  つ の メソッド と 、 その 他 と し て 導出 クラス で 使 わ れ る こと を 想定 し た メソッド を 提供 し ま す 。 
以下 は 直接 的 に 使 う ため の メソッド で す : 
親 オブジェクト と し て 、 director  を 追加 し ま す 。 
全て の 親 オブジェクト を 削除 し ま す 。 
以下 の メンバ および メソッド は  BaseHandler  から 導出 さ れ た クラス で のみ 使 わ れ ま す : 
注意 : 慣習 的 に 、 
protocol _request ( )  や 
protocol _ response ( )  と い っ た メソッド を 定義 し て い る サブ クラス は * Processor  と 名づけ 、 その 他 は * Handler と 名づけ る こと に な っ て い ま す 
有効 な  OpenerDirector  で す 。  この 値 は 違 う プロトコル を 使 っ て  URL  を 開 く 場合 や エラー を 処理 する 際 に 使 わ れ ま す 。 
この メソッド は  BaseHandler  で は 定義 さ れ て  い ま せ ん 。  しかし 、 全て の  URL  を キャッチ さ せ た い なら 、 サブ クラス で 定義 する 必要 が あ り ま す 。 
この メソッド が 定義 さ れ て い た 場合 、 OpenerDirector  から 呼び出 さ れ ま す 。  この メソッド は  OpenerDirector  の  メソッド open ( )  が 返 す 値 に つ い て 記述 さ れ て い る よう な ファイル 類似 の オブジェクト か 、 None  を 返 さ な く て は な り ま せ ん 。 
この メソッド が 送出 する 例外 は 、 真 に 例外 的 な こと が 起き な い 限り 、 URLError  を 送出 し な けれ ば な り ま せ ん  ( 例えば 、 MemoryError  を  URLError  を マップ し て は いけ ま せ ん ) 。 
この メソッド は プロトコル 固有 の オープン メソッド が 呼び出 さ れ る 前 に 呼び出 さ れ ま す 。  protocol _ open ( 
戻 り 値 は  default _ open  と 同じ で な けれ ば な り ま せ ん 。 
この メソッド は  BaseHandler  で は 定義 さ れ て  い ま せ ん 。  しかし その 他 の 処理 さ れ な かっ た  HTTP  エラー を 処理 する 機能 を も た せ た い なら 、 サブ クラス で 定義 する 必要 が あ り ま す 。 
この メソッド は エラー に 遭遇 し た OpenerDirector  から 自動 的 に 呼び出 さ れ ま す 。  その 他 の 状況 で は 普通 呼び出 す べ き で は あ り ま せ ん 。 
nnn は  3  桁 の  10  進数 から な る  HTTP  エラー コード で な く て は な り ま せ ん 。 
戻 り 値 も また 、 urlopen ( )  の 戻 り 値 と 同じ インタフェース を 実装 し た オブジェクト で な けれ ば な り ま せ ん 。 
この クラス は 、 文字 列 ( NUL を 含 む ) で 初期 化 する こと が でき ま す 。  Binary の 内容 は 、 属性 で 参照 し ま す 。 
Binary インスタンス が カプセル 化 し て い る バイナリ データ 。 
この データ は 8 bit クリーン で す 。 
以下 の メソッド は 、 主に 内部 的 に マーシャル \/ アンマーシャル 時 に 使用 さ れ ま す : 
指定 さ れ た base 64 文字 列 を デコード し 、 インスタンス の データ と し ま す 。 
バイナリ 値 を base 64 で エンコード し 、 出力 ストリーム オブジェクト  out に 出力 し ま す 。 
また 、__cmp_ _ で 定義 さ れ る 演算 子 を 使用 する こと が でき ま す 。 
5 . 5  単項 算術 演算  ( unary arithmetic 
二 項 算術 演算 は 、 慣習 的 な 優先 順位 を 踏襲 し て い ま す 。 
演算 子 の いずれ か は 、 特定 の 非 数値 型 に も 適用 さ れ る の で 注意 し て くださ い 。 
べ き 乗  ( power )  演算 子 を 除 き 、 演算 子 に は 二 つ の レベル 、 すなわち 乗算 的  ( multiplicatie )  演算 子 と 加算 的  ( additie )  演算 子 しか あ り ま せ ん : 
*  ( 乗算 :  multiplication )  演算 は 、 引数 間 の 積 に な り ま す 。 
引数 の 組 は 、 双方 とも に 数値 型 で あ る か 、 片方 が 整数  ( 通常 の 整数 また は 長 整数 )  型 で 他方 が シーケンス 型 か の どちら か で な けれ ば な り ま せ ん 。  前者 の 場合 、 数値 は 共通 の 型 に 変換 さ れ た 後 乗算 さ れ ま す 。 
後者 の 場合 、 シーケンス の 繰り返 し 操作 が 行 わ れ ま す 。  繰り返し 数 を 負 に する と 、 空 の シーケンス に な り ま す 。 
\/  ( 除算 :  division )  および \/\/( 切り捨て 除算 :  floor  division ) は 、 引数 間 の 商 に な り ま す 。 
数値 引数 は まず 共通 の 型 に 変換 さ れ ま す 。 
整数 また は 長 整数 の 除算 結果 は 、 同じ 型 の 整数 に な り ま す ;  この 場合 、 結果 は 数学 的 な 除算 に 関数  ` floor ' を 適用 し た もの に な り ま す 。 
ゼロ に よ る 除算 を 行 う と  ZeroDivisionError  例外 を 送出 し ま す 。 
%  ( モジュロ :  modulo)  演算 は 、 第 一 引数 を 第 二 引数 で 除算 し た とき の 剰余 に な り ま す 。 
数値 引数 は まず 共通 の 型 に 変換 さ れ ま す 。 
右 引 数値 が ゼロ の 場合 に は 、 ZeroDivisionError  例外 が 送出 さ れ ま す 。 
引数 値 は 浮動 小数 点 で も よく 。  例えば  3 . 14 % 0 . 7  は  0 . 34  に な り ま す  ( 3 . 14  は  4 * 0 . 7  +  0 . 34  だ から で す ) 。 
モジュロ 演算 子 は 常 に 第 二 引数 と 同じ 符号  ( また は ゼロ ) の 結果 に な り ま す ;  モジュロ 演算 の 結果 の 絶対 値 は 、 常 に 第 二 引数 の 絶対 値 より も 小さ く な り ま す 。 
整数 に よ る 除算 演算 や モジュロ 演算 は 、 恒等 式 :  x  = =  ( x\/ y) * y  +  ( x % y )  と 関係 し て い ま す 。 
整数 除算 や モジュロ は また 、 組み込 み 関数  divmod ( ) : divmod ( x ,  y ) ==  ( x\/ y ,  x % y )  と 関係 し て い ま す 。 
これ ら の 恒等 関係 は 浮動 小数 点 の 場合 に は 維持 さ れ ま せ ん ; x \/ y  が  floor ( x \/ y )  や  floor ( x \/ y )  -  1  に 置き換え られ た 場合 、 これ ら の 恒等 式 は 近似 性 を 維持 し ま す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。 
切り捨て 除算 演算 子 、 モジュロ 演算 子 、 および divmod ( )  関数 は 、 複素数 に 対 し て は もはや 定義 さ れ て い ま せ ん 。 
目的 に 合 う なら ば 、 代わり に  abs ( )  を 使 っ て 浮動 小数 点 に 変換 し て くださ い 。 
+  ( 加算 )  演算 は 、 引数 を 加算 し た 値 を 返 し ま す 。  引数 は 双方 とも 数値 型 か 、 双方 とも 同じ 型 の シーケンス で な けれ ば な り ま せ ん 。 
前者 の 場合 、 数値 は 共通 の 型 に 変換 さ れ 、 加算 さ れ ま す 。 
後者 の 場合 、 シーケンス は 結合  ( concatenate )  さ れ ま す 。 
-  ( 減算 )  演算 は 、 引数 間 で 減算 を 行 っ た 値 を 返 し ま す 。 
数値 引数 は まず 共通 の 型 に 変換 さ れ ま す 。 
. . . の 絶対 値 より も 小さ く な り ま す 。  5 . 2 
例えば 、 Python  の 浮動 小数 点 型 が IEEE 754  倍 精 度数 型 に な っ て い る プラットフォーム を 仮定 する と 、 - 1 e - 100  %  1 e 100  は  1 e 100  と 同じ 符号 に な る はず な の に 、 計算 結果 は  - 1 e - 100  +  1 e 100  と な り ま す 。  これ は 数値 計算 的 に は 厳密 に  1 e 100  と 等価 で す 。 
math モジュール の 関数  fmod ( )  は 、 最初 の 引数 と 符号 が 一致 する よう な 値 を 返 す の で 、 上記 の 場合 に は  - 1 e - 100  を 返 し ま す 。  どちら の アプローチ が 適切 か は 、 アプリケーション に 依存 し ま す 。 
. . . 置き換え られ た 場合 、 これ ら の 恒等 式 は 近似 性 を 維持 し ま す 。 
x  が  y  の 整数 倍 に 非常 に 近 い 場合 、 丸め 誤差 に よ っ て  floor ( x \/ y )  は  ( x - x % y ) \/ y  より も 大きな 値 に な る 可能 性 が あ り ま す 。 
その よう な 場合 、  Python  は divmod ( x , y ) [ 0 ] * y  +  x % y  が  x  に 非常 に 近 く な る と い う 関係 を 保 つ ため に 、 後者 の 値 を 返 し ま す 。 
一般 に は 、 bisect ( )  関数 は 数値 データ を 分類 する の に 役 に 立 ち ま す 。 
この 例 で は 、 bisect ( )  を 使 っ て 、 ( たとえば ) 順序 の つ い た 数値 の 区切り 点 の 集合 に 基づ い て 、 試験 全体 の 成績 の 文字 を 調べ ま す 。 
区切り 点 は  85  以上 は  ` A' 、  75 . . 84  は ` B' 、 など で す 。 grades= " FEDCBA "  breakpoints=  [ 30 ,  44 ,  66 ,  75 ,  85 ]  from  bisect import bisect  defgrade ( total ) : . . .  returngrades[ bisect ( breakpoints ,  total ) ] . . . grade ( 66 ) ' C ' map (grade ,  [ 33 , 99 ,  77 ,  44 ,  12 ,  88 ] ) [ ' E ' , ' A ' , ' B ', ' D ' , ' F' , ' A'] 
通常 および 長 整数 型 で は さらに 、 ビット 文字 列 に 対 し て のみ 意味 の あ る 演算 を サポート し て い ま す 。 
演算 
結果 
注釈 
ビット 単位 の  x  と  y  の  論理 和 
ビット 単位 の  x  と  y  の  論理 積 
x  の  n  ビット 左 シフト 
x  の  n  ビット 右 シフト 
x  の ビット 反転 
注釈 : 
負値 の シフト 数 は 不正 で あ り 、 ValueError  が 送出 さ れ ま す 。 
n  ビット の 左 シフト は 、 オーバフロー チェック を 行 わ な い pow ( 2 , n )  に よ る 乗算 と 等価 で す 。 
n  ビット の 右 シフト は 、 オーバフロー チェック を 行 わ な い pow ( 2 , n )  に よ る 除算 と 等価 で す 。 
以下 の 三 つ の ビット 単位 演算 に は 、 それぞれ 異な る 優先 順位 レベル が あ り ま す : 
演算 子 は 、 引数 間 で ビット 単位 の  AND  を と っ た 値 に な り ま す 。  引数 は 整数 また は 長 整数 で な けれ ば な り ま せ ん 。 
引数 は 共通 の 型 に 変換 さ れ ま す 。 
^  演算 子 は 、 引数 間 で ビット 単位 の  XOR  ( 排他 的  OR )  を と っ た 値 に な り ま す 。  引数 は 整数 また は 長 整数 で な けれ ば な り ま せ ん 。 
引数 は 共通 の 型 に 変換 さ れ ま す 。 
|  演算 子 は 、 引数 間 で ビット 単位 の  OR  ( 非 排他 的  OR )  を と っ た 値 に な り ま す 。 
引数 は 整数 また は 長 整数 で な けれ ば な り ま せ ん 。 
スペース 、 タブ 、 フォーム フィード 、 および コメント のみ を 含 む 論理 行 は 無視 さ れ ま す  ( すなわち 、 NEW LINE  トークン は 生成 さ れ ま せ ん ) 。 
文 を 対話 的 に 入力 し て い る 際 に は 、 空行 の 扱い は 行 読み込 み - 評価 - 出力 ( read -eval - print )  ループ の 実装 に よ っ て 異な る か も しれ ま せ ん 。 
標準 的 な 実装 で は 、 完全 な 空行 で でき た 論理 行  ( すなわち 、 空白 文字 も コメント も 全く 含 ま な い 空行 )  は 、 複数 行 から な る 実行 文 の 終端 を 示 し ま す 。 
コード オブジェクト は 、 関数 本体 の よう な  ` ` 擬似 コンパイル さ れ た ' ' Python  の 実行 可能 コード を 表 す ため に 実装 系 に よ っ て 使 わ れ ま す 。  コード オブジェクト は グローバル な 実行 環境 へ の 参照 を 持 た な い 点 で 関数 オブジェクト と は 異な り ま す 。 
コード オブジェクト は 組み込 み 関数  compile ( )  に よ っ て 返さ れ 、 関数 オブジェクト の  func_code  属性 と し て 取り出 す こと が でき ま す 。 
を 読 ん で 下さ い 。 
この オブジェクト は 拡張 スライス 表記 に よ っ て 使 わ れ ま す  ( 
を 参照 し て くださ い ) 。 
特殊 な 操作 は 何 も サポート し て い ま せ ん 。 
省略 表記 オブジェクト は 一 つ だけ で 、 その 名前 は Ellipsis  ( 組み込 み 名 )  で す 。 Ellipsis  と 書き表 さ れ ま す 。 
ファイル オブジェクト 
ファイル 操作 が  I \/ O  関連 の 理由 で 失敗 し た 場合 例外  IOError が 送出 さ れ ま す 。 
この 理由 に は 例えば  seek ( )  を 端末 デバイス に 行 っ たり 、 読み出し 専用 で 開 い た ファイル に 書き込み を 行 う と い っ た 、 何 ら か の 理由 に よ っ て その ファイル で 定義 さ れ て い な い 操作 を 行 っ た よう な 場合 も 含 ま れ ま す 。  ファイル は 以下 の メソッド を 持 ち ま す : 
ファイル を 閉じ ま す 。 
閉じ られ た ファイル は それ 以後 読み書き する こと は でき ま せ ん 。  ファイル が 開 か れ て い る こと が 必要 な 操作 は 、 ファイル が 閉じ られ た 後 は すべて  ValueError  を 送出 し ま す 。 
close  を 一 度 以上 呼び出 し て も かま い ま せ ん 。 
stdio  の  fflush ( )  の よう に 、 内部 バッファ を フラッシュ し ま す 。 
ファイル 類似 の オブジェクト に よ っ て は 、 この 操作 は 何 も 行 い ま せ ん 。 
背後 に あ る 実装 系 が オペレーティング システム に  I \/ O  操作 を 要求 する ため に 用い る 、 整数 の  `` ファイル 記述 子 ' '  を 返 し ま す 。 
この 値 は 他 の 用途 と し て 、 
モジュール や  os . read ( ) や その 仲間 の よう な 、 ファイル 記述 子 を 必要 と する 低 レベル の インタフェース で 役 に 立 ち ま す 。 
注意 : ファイル 類似 の オブジェクト が 実際 の ファイル に 関連 付け られ て い な い 場合 、 この メソッド を 提供 す べ き で は あ り ま せ ん 。 
ファイル が tty ( また は 類似 の )  デバイス に 接続 さ れ て い る 場合  True  を 返 し 、 そう で な い 場合  False  を 返 し ま す 。 
注意 : ファイル 類似 の オブジェクト が 実際 の ファイル に 関連 付け られ て い な い 場合 、 この メソッド を 実装 す べ き で は あ り ま せ ん 。 
ファイル オブジェクト は それ 自身 が イテレータ で す 。  すなわち 、 iter ( f )  は  ( f  が 閉じ られ て い な い 限り )  f  を 返 し ま す 。 
for  ループ  ( 例えば  for  line  in  f : print  line )  の よう に ファイル が イテレータ と し て 使 わ れ た 場合 、 next ( )  メソッド が 繰り返 し 呼び出 さ れ ま す 。 
個 の メソッド は 次 の 入力 行 を 返 す か 、 また は  EOF  に 到達 し た とき に StopIteration  を 送出 し ま す 。 
ファイル 内 の 各行 に 対 する for  ループ  ( 非常 に よく あ る 操作 で す )  を 効率 的 な 方法 で 行 う ため に 、 next ( )  メソッド は 隠蔽 さ れ た 先 読 み バッファ を 使 い ま す 。 
先 読 み バッファ を 使 っ た 結果 と し て 、 ( readline ( )  の よう な )  他 の ファイル メソッド と  next ( )  を 組み合わせ て 使 う と うま く 動作 し ま せ ん 。 
しかし 、 seek ( )  を 使 っ て ファイル 位置 を 絶対 指定 し なお す と 、 先読 み バッファ は フラッシュ さ れ ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
最大 で  size  バイト を ファイル から 読み込 み ま す  ( size  バイト を 取得 する 前 に  EOF  に 到達 し た 場合 、 それ 以下 の 長 さ に な り ま す ) size  引数 が 負 で あ る か 省略 さ れ た 場合 、 EOF  に 到達 する まで の 全て の データ を 読み込 み ま す 。 
読み出 さ れ た バイト 列 は 文字 列 オブジェクト と し て 返さ れ ま す 。 
直後 に  EOF  に 到達 し た 場合 、 空 の 文字 列 が 返 さ れ ま す 。 
( 端末 の よう な ある 種 の ファイル で は 、  EOF  に 到達 し た 後 で ファイル を 読み つづけ る こと に も 意味 が あ り ま す 。 
)  この メソッド は 、 size  バイト に 可能 な 限り 近く データ を 取得 する ため に 、 背後 の  C  関数 fread ( )  を  1  度 以上 呼び出 す か も しれ な い の で 注意 し て くださ い 。 
また 、 非 ブロック ・ モード で は 、 size  パラメータ が 与え られ な く て も 、 要求 さ れ た より も 少な い データ が 返 さ れ る 場合 が あ る こと に 注意 し て くださ い 。 
ファイル から 一行 を 読み出 し ま す 。 
末尾 の 改行 文字 は 文字 列 中 に 残 さ れ ま す ( で す が 、 ファイル が 不 完全 な 行 で 終わ っ て い る 場合 は 何 も 残 ら な い か も しれ ま せ ん ) 。 
注意 : stdio  の fgets( )  と 違 い 、 入力 中 に ヌル 文字  ( ' 0 ' )  が 含 ま れ て い れ ば 、 ヌル 文字 を 含 ん だ 文字 列 が 返 さ れ ま す 。 
readline ( )  を 使 っ て に 到達 する まで 読み出 し 、 EOF 読み出 さ れ た 行 を 含 む リスト を 返 し ま す 。 
オプション の  sizehint  引数 が 存在 すれ ば 、 EOF まで 読み出 す 代わり に 完全 な 行 を 全体 で 大体  sizehint  バイト に な る よう に ( おそらく 内部 バッファ サイズ を 切り詰め て )  読み出 し ま す 。 
ファイル 類似 の インタフェース を 実装 し て い る オブジェクト は 、 sizehint  を 実装 でき な い か 効率 的 に 実装 でき な い 場合 に は 無視 し て も かま い ま せ ん 。 
個 の メソッド は  iter ( f )  と 同じ 結果 を 返 し ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。 
代わり に  " for  line  in file "  を 使 っ て くださ い 。 
stdio  の fseek ( )  と 同様 に 、 ファイル の 現在 位置 を 返 し ま す 。  whence  引数 は オプション で 、 標準 の 値 は  0 ( 絶対 位置 指定 )  で す ;  他 に 取り得 る 値 は  1  ( 現在 の ファイル 位置 から 相対 的 に  seek  する )  および  2  ( ファイル の 末端 から 相対 的 に seek  する )  で す 。 
戻 り 値 は あ り ま せ ん 。 
ファイル を 追記 モード ( モード  ' a ' また は  ' a + ' )  で 開 い た 場合 、 書き込み を 行 う まで に 行 っ た seek ( )  操作 は すべて 元 に 戻 さ れ る の で 注意 し て くださ い 。 
ファイル が 追記 のみ の 書き込み モード  ( 'a ')  で 開 か れ た 場合 、 この メソッド は 実質 何 も 行 い ま せ ん が 、 読み込み が 可能 な 追記 モード ( ' a + ' )  で 開 か れ た ファイル で は 役 に 立 ち ま す 。 
ファイル を テキスト モード  ('t ')  で 開 い た 場合 、 tell ( )  が 返 す オフセット のみ が 正し い 値 に な り ま す 。 
他 の オフセット 値 を 使 っ た 場合 、 その 振る舞い は 未 定義 で す 。  全て の ファイル オブジェクト が  seek  でき る と は 限 ら な い の で 注意 し て くださ い 。 
stdio  の  ftell ( )  と 同様 、 ファイル の 現在 位置 を 返 し ま す 。 
ファイル の サイズ を 切り詰め ま す 。 
オプション の  size  が 存在 すれ ば 、 ファイル は  ( 最大 で )  指定 さ れ た サイズ に 切り詰め られ ま す 。 
標準 設定 の サイズ の 値 は 、 現在 の ファイル 位置 まで の ファイル サイズ で す 。 
現在 の ファイル 位置 は 変更 さ れ ま せ ん 。 
指定 さ れ た サイズ が ファイル の 現在 の サイズ を 越え る 場合 、 その 結果 は プラットフォーム 依存 な の で 注意 し て くださ い :  可能 性 と し て は 、 ファイル は 変更 さ れ な い か 、 指定 さ れ た サイズ まで ゼロ で 埋め られ る か 、 指定 さ れ た サイズ まで 未 定義 の 新た な 内容 で 埋め られ る か 、 が あ り ま す 。  利用 可能 な 環境 :  Windows ,  多く の  Unix  系 。 
文字 列 を ファイル に 書き込 み ま す 。 
バッファ リング に よ っ て 、 flush ( )  また は  close ( )  が 呼び出 さ れ る まで 実際 に ファイル 中 に 文字 列 が 書き込 ま れ な い こと も あ り ま す 。 
文字 列 から な る シーケンス を ファイル に 書き込 み ま す 。 
ファイル は イテレータ プロトコル を サポート し ま す 。 
各 反復 操作 で は 
現在 の ファイル オブジェクト の 状態 を 示 す ブール 値 で す 。 
この 値 は 読み出し 専用 の 属性 で す ;  close ( )  メソッド が この 値 を 変更 し ま す 。  全て の ファイル 類似 オブジェクト で 利用 可能 と は 限 り ま せ ん 。 
この ファイル が 使 っ て い る エンコーディング で す 。 
Unicode  文字 列 が ファイル に 書き込 ま れ る 際 、 Unicode  文字 列 は この エンコーディング を 使 っ て バイト 文字 列 に 変換 さ れ ま す 。  さらに 、 ファイル が 端末 に 接続 さ れ て い る 場合 、 この 属性 は 端末 が 使 っ て い る と おぼし き エンコーディング ( この 情報 は 端末 が うま く 設定 さ れ て い な い 場合 に は 不 正確 な こと も あ り ま す ) を 与え ま す 。 
この 属性 は 読み出し 専用 で 、 すべて の ファイル 類似 オブジェクト に あ る と は 限 り ま せ ん 。 
また この 値 は  None  の こと も あ り 、 この 場合 、 ファイル は Unicode  文字 列 の 変換 の ため に システム の デフォルト エンコーディング を 使 い ま す 。 
ファイル の  I \/ O  モード で す 。 
ファイル が 組み込 み 関数  open ( )  で 作成 さ れ た 場合 、 この 値 は 引数  mode  の 値 に な り ま す 。 
この 値 は 読み出し 専用 の 属性 で 、 全て の ファイル 類似 オブジェクト に 存在 する と は 限 り ま せ ん 。 
ファイル オブジェクト が  open ( )  を 使 っ て 生成 さ れ た 時 の ファイル の 名前 で す 。 
そう で な けれ ば 、 ファイル オブジェクト 生成 の 起源 を 示 す 何 ら か の 文字 列 に な り 、 " . . . "  の 形式 を と り ま す 。 
この 値 は 読み出し 専用 の 属性 で 、 全て の ファイル 類似 オブジェクト に 存在 する と は 限 り ま せ ん 。 
Python  を ビルド する とき 、 -- with -universal - newlines  オプション が configure  に 指定 さ れ た 場合 ( デフォルト ) 、 この 読み出し 専用 の 属性 が 存在 し ま す 。  一般 的 な 改行 に 変換 する 読み出し モード で 開 か れ た ファイル に お い て 、 この 属性 は ファイル の 読み出し 中 に 遭遇 し た 改行 コード を 追跡 し ま す 。 
取り得 る 値 は  ' r '、 'n' 、 'rn' 、 None  ( 不明 また は 、 まだ 改行 し て い な い ) 、 見つか っ た 全て の 改行 文字 を 含 む タプル の いずれ か で す 。  最後 の タプル は 、 複数 の 改行 慣例 に 遭遇 し た こと を 示 し ま す 。 
一般 的 な 改行 文字 を 使 う 読み出し モード で 開 か れ て い な い ファイル の 場合 、 この 属性 の 値 は  None  で す 。 
print  文 を 使 っ た 場合 、 他 の 値 を 出力 する 前 に スペース 文字 を 出力 する 必要 が あ る か どう か を 示 す ブール 値 で す 。  ファイル オブジェクト を シミュレート 仕様 と する クラス は 書き込み 可能 な softspace  属性 を 持 た な けれ ば な ら ず 、 この 値 は ゼロ に 初期 化 さ れ な けれ ば な り ま せ ん 。 
この 値 は  Python  で 実装 さ れ て い る ほとんど の クラス で 自動 的 に 初期 化 さ れ ま す  ( 属性 へ の アクセス 手段 を 上書き する よう な オブジェクト で は 注意 が 必要 で す ) ;  C  で 実装 さ れ た 型 で は 、 書き込み 可能 な  softspace  属性 を 提供 し な けれ ば な り ま せ ん 。 
注意 : この 属性 は  print  文 を 制御 する ため に 用い られ ま す が 、 print  の 内部 状態 を 乱 さ な い ため に 、 その 実装 を 行 う こと は でき ま せ ん 。 
file ( )  は  Python  2 . 2  で 新し く 追加 さ れ ま し た 。 
古 い バージョン の 組み込 み 関数  open ( )  は file ( ) の 別名 で す 。 
. . . 何 も 残 ら な い か も しれ ま せ ん ) 。 
改行 を 残 す 利点 は 、 空 の 文字 列 が 返 る と EOF  を 示 し 、 紛らわし く な く な る から で す 。 
また 、 ファイル の 最後 の 行 が 改行 で 終わ っ て い る か そう で な い  ( あ り え る こと で す ! )  か ( 例えば 、 ファイル を 行 単位 で 読 み ながら その 完全 な コピー を 作成 し た 場合 に は 問題 に な り ま す )  を 調べ る こと が でき ま す 。 
この オブジェクト は 明示 的 に 値 を 返 さ な い 関数 に よ っ て 返さ れ ま す 。 
この オブジェクト に は 特有 の 操作 は あ り ま せ ん 。 
ヌル オブジェクト は 一 つ だけ で 、 None  ( 組み込 み 名 )  と 名づけ られ て い ま す 。  None  と 書き表 さ れ ま す 。 
型 オブジェクト は 様々 な オブジェクト 型 を 表 し ま す 。 
オブジェクト の 型 は 組み込 み 関数  type ( )  で アクセス さ れ ま す 。 
型 オブジェクト に は 特有 の 操作 は あ り ま せ ん 。 
標準 モジュール 
に は 全て の 組み込 み 型名 が 定義 さ れ て い ま す 。 
型 は type 'int ' の よう に 書き表 さ れ ま す 。 
7 . 2 . 1  ( 通常 ) 整数 型 オブジェクト  ( plaininteger 
7 . 2 . 3  長 整数 型 オブジェクト  ( long  integer 
7 . 2 . 2  Bool  型 オブジェクト  Python  の  Bool  型 は 整数 の サブ クラス と し て 実装 さ れ て い ま す 。 
ブール 型 の 値 は 、 Py _ False  と  Py _ True  の  2  つ しか あ り ま せ ん 。 
従 っ て 、 通常 の 生成 \/ 削除 関数 は ブール 型 に は あてはま り ま せ ん 。 
と は い え 、 以下 の マクロ が 利用 でき ま す 。 
o  が  PyBool_Type  の 場合 に 真 を 返 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。  PyObject * 
Python  に お け る  False  オブジェクト で す 。 
この オブジェクト は メソッド を 持 ち ま せ ん 。 
参照 カウント の 点 で は 、 他 の オブジェクト と 同様 に 扱 う 必要 が あ り ま す 。 
Python  に お け る  True  オブジェクト で す 。 
Py _ False  に 適切 な 参照 カウント の インクリメント を 行 っ て 、 関数 から 返 す ため の マクロ で す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。  Py _ RETURN _ TRUE 
Py _ True  に 適切 な 参照 カウント の インクリメント を 行 っ て 、 関数 から 返 す ため の マクロ で す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
v  の 値 に 応じ て Py _ True  また は Py _ False  を 返 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
この クラス は 全て の Python の 値 で 初期 化 する こと が でき 、 生成 さ れ る インスタンス は 指定 し た 値 の 真偽 値 に よ っ て のみ 決ま り ま す 。 
Boolean と い う 名前 から 想像 さ れ る 通り に 各種 の Python 演算 子 を 実装 し て お り 、 __cmp__( ) ,__repr_ _( ) , __int__( ) , __nonzero_ _( ) で 定義 さ れ る 演算 子 を 使用 する こと が でき ま す 。  以下 の メソッド は 、 主に 内部 的 に アンマーシャル 時 に 使用 さ れ ま す : 
出力 ストリーム オブジェクト  out  に 、 XML - RPC エンコーディング の Boolean 値 を 出力 し ま す 。 
x  が 偽 なら  y  、 そう で な けれ ば  x 
x  が 偽 なら  x  、 そう で な けれ ば  y 
x  が 偽 なら  True  、 そう で な けれ ば  False 
これ ら の 演算 子 は 、 演算 を 行 う 上 で 必要 が な い 限り 、 二 つ 目 の 引数 を 評価 し ま せ ん 。 
" not "  は 非 ブール 演算 子 より も 低 い 演算 優先 度 な の で 、 not  a== b 
は  not  ( a== b )  と 評価 さ れ 、 
は 構文 エラー と な り ま す 。 
break  文 は  for  ループ や  while  ループ 内 の ネスト で 構文 法 的 に のみ 現れ ま す が 、 ループ 内 の 関数 定義 や クラス 定義 に は 現れ ま せ ん 。 
break  文 は 、 文 を 囲 う 最も 内側 の ループ を 終了 さ せ 、 ループ に オプション の else  節 が あ る 場合 に は else  節 に 飛 び ま す 。 
for  ループ を  break  に よ っ て 終了 する と 、 ループ 制御 ターゲット は その 時 の 値 を 保持 し ま す 。 
break  が finally  節 を 伴 う  try  文 の 外側 に 処理 を 渡 す 際 に は 、 ループ を 実際 に 抜け る 前 に その finally  節 が 実行 さ れ ま す 。 
ブラウザ コントローラー に は 2 つ の メソッド が 定義 さ れ て い て 、 モジュール レベル の 便利 な 2 つ の 関数 に 相当 し ま す : 
この コントローラー で ハンドル さ れ た ブラウザ で url を 表示 し ま す 。 
new が true なら 、 可能 で あ れ ば ブラウザ の 新し い ウィンドウ が 開 き ま す 。 
可能 で あ れ ば 、 この コントローラー で ハンドル さ れ た ブラウザ の 新し い ウィンドウ で url を 開 き ま す が 、 そう で な い 場合 は ブラウザ の ただ 1 つ の ウィンドウ で url を 開 き ま す 。 
インスタンス 化 し た ハッシュ 、 B - Tree ,  および レコード オブジェクト は 辞書 型 と 同じ メソッド を サポート する よう に な り ま す 。 
加え て 、 以下 に 列挙 し た メソッド も サポート し ま す 。  バージョン  2 . 3 . 1  で  変更  さ れ た 仕様 : 辞書 型 メソッド を 追加 し ま し た 
データベース の 背後 に あ る ファイル を 閉じ ま す 。 
オブジェクト は アクセス でき な く な り ま す 。 
これ ら の オブジェクト に は oepn  メソッド が な い ため 、 再度 ファイル を 開 く ため に は 、 新た な  bsddb  モジュール を 開 く 関数 を 呼び出 さ な く て は な り ま せ ん 。 
DB  ファイル に 収め られ て い る キー から な る リスト を 返 し ま す 。 
リスト 内 の キー の 順番 は 決ま っ て お ら ず 、 あて に は な り ま せ ん 。 
特に 、 異な る ファイル 形式 の  DB  間 で は 返 さ れ る リスト の 順番 が 異な り ま す 。 
引数  key が  DB  ファイル に キー と し て 含 ま れ て い る 場合  1  を 返 し ま す 。 
カーソル を  key  で 示 さ れ る 要素 に 移動 し 、 キー 及び 値 から な る タプル を 返 し ま す 。 
( bopen  を 使 っ て 開 か れ る )  B - Tree データベース で は 、 key  が 実際 に は データベース 内 に 存在 し な かっ た 場合 、 カーソル は 並び順 が  key  の 次 に 来る よう な 要素 を 指 し 、 その 場所 の キー 及び 値 が 返 さ れ ま す 。 
他 の データベース で は 、 データベース 中 に  key  が 見つか ら な かっ た 場合  KeyError  が 送出 さ れ ま す 。 
カーソル を  DB  ファイル の 最初 の 要素 に 設定 し 、 その 要素 を 返 し ま す 。 
B - Tree  データベース の 場合 を 除 き 、 ファイル 中 の キー の 順番 は 決ま っ て い ま せ ん 。  データベース が 空 の 場合 、 この メソッド は  bsddb .error  を 発生 さ せ ま す 。 
カーソル を  DB  ファイル の 次 の 要素 に 設定 し 、 その 要素 を 返 し ま す 。 
B - Tree  データベース の 場合 を 除 き 、 ファイル 中 の キー の 順番 は 決ま っ て い ま せ ん 。 
カーソル を  DB  ファイル の 直前 の 要素 に 設定 し 、 その 要素 を 返 し ま す 。 
B - Tree  データベース の 場合 を 除 き 、 ファイル 中 の キー の 順番 は 決ま っ て い ま せ ん 。 
( hashopen ( )  で 開 か れ る よう な )  ハッシュ 表 データベース で は サポート さ れ て い ま せ ん 。 
カーソル を  DB  ファイル の 最後 の 要素 に 設定 し 、 その 要素 を 返 し ま す 。 
ファイル 中 の キー の 順番 は 決ま っ て い ま せ ん 。 
( hashopen ( )  で 開 か れ る よう な )  ハッシュ 表 データベース で は サポート さ れ て い ま せ ん 。  データベース が 空 の 場合 、 この メソッド は  bsddb .error  を 発生 さ せ ま す 。 
ディスク 上 の ファイル を データベース に 同期 さ せ ま す 。 
以下 は プログラム 例 で す : 
10 . 6  シーケンス オブジェクト 構造 体  ( sequence  object 
10 . 8  イテレータ プロトコル を サポート する 
バッファ インタフェース は 、 ある オブジェクト の 内部 データ を 一連 の データ チャンク  ( chunk )  と し て 見せ る モデル を 外部 から 利用 でき る よう に し ま す 。  各 チャンク は ポインタ \/ データ 長 から な る ペア で 指定 し ま す 。 
チャンク は セグメント ( segment )  と 呼 ば れ 、 メモリ 内 に 不 連続 的 に 配置 さ れ る もの と 想定 さ れ て い ま す 。  バッファ インタフェース を 利用 でき る よう に し た く な い オブジェクト で は 、 PyTypeObject  構造 体 の  tp_as_buffer  メンバ を NULL に し な く て は な り ま せ ん 。 
利用 でき る よう に する 場合 、 tp_as_buffer  は PyBufferProcs  構造 体 を 指 さ ね ば な り ま せ ん 。  注意 : 
PyTypeObject  構造 体 の  tp_flags  メンバ の 値 を  0  で な く  Py _ TPFLAGS _ DEFAULT  に し て お く こと が とても 重要 で す 。 
この 設定 は 、 PyBufferProcs  構造 体 に  bf _ getcharbuffer  スロット が 入 っ て い る こと を  Python  ラン タイム に 教え ま す 。 
Python  の 古 い バージョン に は  bf _ getcharbuffer  メンバ が 存在 し な い の で 、 古 い 拡張 モジュール を 使 お う と し て い る 新し い バージョン の Python  インタプリタ は 、 この メンバ が あ る か どう か テスト し て から 使え る よう に する 必要 が あ る の で す 。 
バッファ プロトコル の 実装 を 定義 し て い る 関数 群 へ の ポインタ を 保持 する の に 使 わ れ る 構造 体 で す 。  最初 の スロット は bf _ getreadbuffer  で 、 getreadbufferproc  型 で す 。 
この スロット が  NULL の 場合 、 オブジェクト は 内部 データ の 読み出し を サポート し ま せ ん 。 
その よう な 仕様 に は 意味 が な い の で 、 実装 を 行 う 側 は この スロット に 値 を 埋め る はず で す が 、 呼び出 し 側 で は 非  NULL  の 値 か どう か きちんと 調べ て お く べ き で す 。  次 の スロット は  bf _ getwritebuffer  で 、 getwritebufferproc  型 で す 。 
オブジェクト が 返 す バッファ に 対 し て 書き込み を 許可 し な い 場合 は この スロット を NULL  に でき ま す 。  第 三 の スロット は  bf _ getsegcount  で 、 getsegcountproc  型 で す 。 
この スロット は  NULL  で あ っ て は な ら ず 、 オブジェクト に いく つ セグメント が 入 っ て い る か を 呼び出 し 側 に 教え る ため に 使 わ れ ま す 。 
PyString_Type  や  PyBuffer_Type オブジェクト の よう な 単純 な オブジェクト に は 単一 の セグメント しか 入 っ て い ま せ ん 。  最後 の スロット は  bf _ getcharbuffer  で 、 getcharbufferproc  で す 。 
例えば 、 オブジェクト が 浮動 小数 点数 を 保持 する よう に 設定 さ れ た アレイ の 場合 、 呼び出 し 側 が  bf _ getcharbuffer  を 使 っ て  8  ビット 文字 列 と し て データ を 取り出 そ う と する と 例外 を 送出 する よう に でき ま す 。  この 、 内部 バッファ を  ` ` テキスト ' ' と し て 取り出 す と い う 概念 は 、 本質 的 に は バイナリ で 、 文字 ベース の 内容 を 持 っ た オブジェクト 間 の 区別 に 使 わ れ ま す 。 
注意 : 現在 の ポリシ で は 、 文字  ( character )  は マルチ バイト 文字 で も かま わ な い と 決め て い る よう に 思 わ れ ま す 。 
従 っ て 、 サイズ  N  の バッファ が  N  個 の キャラクタ から な る と は かぎ ら な い こと に な り ま す 。 
型 構造 体 中 の フラグ ビット で 、 bf _ getcharbuffer  スロット が 既知 の 値 に な っ て い る こと を 示 し ま す 。 
この フラグ ビット が セット さ れ て い た と し て も 、 オブジェクト が バッファ インタフェース を サポート し て い る こと や 、 bf _ getcharbuffer  スロット が  NULL で な い こと を 示 す わけ で は あ り ま せ ん 。 
読み出し 可能 な バッファ セグメント へ の ポインタ を 返 し ま す 。 
この 関数 は 例外 を 送出 し て も よ く 、 送出 する 場合 に は  - 1  を 返 さ ね ば な り ま せ ん 。 
segment  に 渡 す 値 は ゼロ また は 正 の 値 で 、 bf _ getsegcount スロット 関数 が 返 す セグメント 数 より も 必ず 小さな 値 で な けれ ば な り ま せ ん 。 
成功 する と 、 バッファ メモリ の サイズ を 返 し 、 * ptrptr  を バッファ メモリ を 指 す ポインタ 値 に セット し ま す 。 
読み出し 可能 な バッファ セグメント へ の ポインタ を  * ptrptr
に 返 し 、 セグメント の 長 さ を 関数 の 戻 り 値 と し て 返 し ま す 。 
エラー に よ る 例外 の 場合 に は  - 1  を - 1  を 返 さ ね ば な り ま せ ん 。 
オブジェクト が 呼び出し 専用 バッファ しか サポート し て い な い 場合 に は TypeError  を 、 segment  が 存在 し な い セグメント を 指 し て い る 場合 に は  SystemError  を 送出 し な けれ ば な り ま せ ん 。 
バッファ を 構成 する メモリ セグメント の 数 を 返 し ま す 。 
lenp  が  NULL で な い 場合 、 この 関数 の 実装 は 全て の セグメント の サイズ  ( バイト 単位 )  の 合計 値 を  * lenp  を 介 し て 報告 し な けれ ば な り ま せ ん 。 
この 関数 呼び出し は 失敗 さ せ られ ま せ ん 。 
セグメント  segment  の メモリ バッファ を  ptrptr  に 入れ 、 メモリ バッファ の サイズ を 返 し ま す 。 
が メモリ バッファ を 表 す 値 に な る よう に セット さ れ ま す 。 
7 . 3 . 2 . 2  メソッド および スロット 関数  ( slot function ) 
C  で 実装 さ れ た  Python  オブジェクト は 、 ` ` バッファ インタフェース ( buffer interface ) ' ' と 呼 ば れ る 一連 の 関数 を 公開 し て い る こと が あ り ま す 。 
これ ら の 関数 は 、 ある オブジェクト の データ を 生  ( raw )  の バイト 列 形式 で 公開 する ため に 使 い ま す 。 
この オブジェクト の 使い 手 は 、 バッファ インタフェース を 使 う こと で 、 オブジェクト を あらかじめ コピー し て お く 必要 なし に 、 オブジェクト の データ に 直接 アクセス でき ま す 。  バッファ インタフェース を サポート する オブジェクト の 例 と し て 、 文字 列 型 と アレイ  ( array )  型 の 二 つ が あ り ま す 。 
文字 列 オブジェクト は 、 その 内容 を バッファ インタフェース の バイト 単位 形式 で 公開 し て い ま す 。 
アレイ も その 内容 を 公開 し て い ま す が 、 注意 する 必要 が あ る の は アレイ の 要素 は 複数 バイト の 値 に な り う る 、 と い う こと で す 。  バッファ インタフェース の 使い 手 の 一 例 と し て 、 ファイル オブジェクト の write ( )  メソッド が あ り ま す 。 
バッファ インタフェース を 介 し て バイト 列 を 公開 し て い る オブジェクト は 全て 、 ファイル へ の 書き出し が でき ま す 。 
` ` バッファ オブジェクト ' ' は ヘッダ ファイル  bufferobject . h  の 中 で 定義 さ れ て い ま す  ( この ファイル は  Python . h  が インク ルード し て い ま す ) 。 
バッファ オブジェクト は 、  Python  プログラミング の レベル から は 文字 列 オブジェクト と 非常 に よく 似 て い る よう に 見え ま す : スライス 、 インデクス 指定 、 結合 、 その 他 標準 の 文字 列 操作 を サポート し て い ま す 。 
しかし 、 バッファ オブジェクト の データ は 二 つ の データ ソース : 何 ら か の メモリ ブロック か 、 バッファ インタフェース を 公開 し て い る 別 の オブジェクト 、 の いずれ か に 由来 し て い ま す 。  バッファ オブジェクト は 、 他 の オブジェクト の バッファ インタフェース から Python  プログラマ に データ を 公開 する 方法 と し て 便利 で す 。 
バッファ オブジェクト は ゼロ コピー な スライス 機構  ( zero - copy slicing  mechanism )  と し て も 使 わ れ ま す 。 
ブロック メモリ を 参照 する と い う バッファ オブジェクト の 機能 を 使 う こと で 、 任意 の データ を きわめて 簡単 に Python  プログラマ に 公開 でき ま す 。 
メモリ ブロック は 巨大 で も かま い ま せ ん し 、 C  拡張 モジュール 内 の 定数 配列 で も かま い ま せ ん 。  また 、 オペレーティング システム ライブラリ 側 に 渡 す 前 の 、 操作 用 の 生 の ブロック メモリ で も かま い ま せ ん し 、 構造 化 さ れ た データ を ネイティブ の メモリ 配置 形式 で やりとり する ため に も 使え ま す 。 
この  PyObject  の サブ タイプ は バッファ オブジェクト を 表現 し ま す 。 
Python  バッファ 型  ( buffertype )  を 表現 する PyTypeObject  で す ; Python  レイヤ に お け る types . BufferType 
と 同じ オブジェクト で す  。 
この 定数 は 、 PyBuffer_ FromObject ( )  また は の  PyBuffer_ FromReadWriteObject ( )  size  パラメタ に 渡 し ま す 。 
この パラメタ を 渡 す と 、 PyBufferObject  は 指定 さ れ た  offset  から バッファ の 終わり まで を  base  オブジェクト と し て 参照 し ま す 。 
この パラメタ を 使 う こと で 、 関数 の 呼び出 し 側 が  base  オブジェクト の サイズ を 調べ る 必要 が なくな り ま す 。 
引数 が PyBuffer_Type  型 の とき に 真 を 返 し ま す 。 
新た な 読み出し 専用 バッファ オブジェクト を 返 し ま す 。 
base  が 読み出し 専用 バッファ に 必要 な バッファ プロトコル を サポート し て い な い 場合 や 、 厳密 に 一 つ の バッファ セグメント を 提供 し て い な い 場合 に は TypeError  を 送出 し 、 offset  が ゼロ 以下 の 場合 に は ValueError  を 送出 し ま す 。 
バッファ オブジェクト は は  base  オブジェクト に 対 する 参照 を 保持 し 、 バッファ オブジェクト の の 内容 は  base  オブジェクト の  offset から  size  バイト の バッファ インタフェース へ の 参照 に な り ま す 。 
size  が  Py _ END _ OF _ BUFFER  の 場合 、 新た に 作成 する バッファ オブジェクト の 内容 は  base  から 公開 さ れ て い る バッファ の 末尾 まで に わた り ま す 。 
新た な 書き込み 可能 バッファ オブジェクト を 返 し ま す 。 
パラメタ および 例外 は  PyBuffer_ FromObject  と 同じ で す 。 
base  オブジェクト が 書き込み 可能 バッファ に 必要 な バッファ プロトコル を 公開 し て い な い 場合 、 TypeError  を 送出 し ま す 。 
メモリ 上 の 指定 さ れ た 場所 から 指定 さ れ た サイズ の データ を 読み 出せ る 、 新た な 読み出し 専用 バッファ オブジェクト を 返 し ま す 。 
この 関数 が 返 す バッファ オブジェクト が 存続 する 間 、 ptr  で 与え られ た メモリ バッファ が デアロケート さ れ な い よう に する の は 呼び出 し 側 の 責任 で す 。 
size  が ゼロ 以下 の 場合 に は ValueError  を 送出 し ま す 。 
size  に は  Py _ END _ OF _ BUFFER  を 指定 し て は な り ま せ ん ;  指定 する と 、 ValueError  を 送出 し ま す 。 
PyBuffer_ FromMemory ( )  に 似 て い ま す が 、 書き込み 可能 な バッファ を 返 し ま す 。 
size  バイト の メモリ バッファ を 独自 に 維持 する 新た な 書き込み 可能 バッファ オブジェクト を 返 し ま す 。 
size  が ゼロ また は 正 の 値 で な い 場合 、 ValueError  を 送出 し ま す 。 
( PyObject_ AsWriteBuffer ( )  が 返 す よう な ) メモリ バッファ は 特に 整列 さ れ て い な い の で 注意 し て 下さ い 。 
1 . 8  拡張 モジュール 関数 の キー ワード パラメタ 
Py _ BuildValue ( )  は 、 PyArg _ ParseTuple ( ) の 認識 する 一連 の 書式 化 単位 に 似 た 書式 化 単位 を 認識 し ま す 。  ただし ( 関数 へ の 出力 で は な く 、 入力 に 使 わ れ る )  引数 は ポインタ で は な く 、 ただ の 値 で な けれ ば な り ま せ ん 。 
書式 化 文字 列 が 空 なら 、 None  を 返 し ま す 。  きっかり 一 つ の 書式 化 単位 なら 、 その 書式 化 単位 が 記述 し て い る 何 ら か の オブジェクト に な り ま す 。 
サイズ が  0  や  1  の タプル 返 さ せ た い の なら 、 書式 化 文字 列 を 丸括弧 で 囲 い ま す 。  以下 に 例 を 示 し ま す  ( 左 に 呼び出 し 例 を 、 右 に 構築 さ れ る  Python  値 を 示 し ま す ) : 
3 . 1  拡張 モジュール の 配布 
4 . 1  型 どおり の アプローチ 
4 .  Windows  上 で の  C  および  C + +  拡張 モジュール の ビルド 
この 章 で は  Windows  向け の  Python  拡張 モジュール を  Microsoft  Visual  C + + を 使 っ て 作成 する 方法 に つ い て 簡単 に 述べ 、 その 後 に 拡張 モジュール の ビルド が どの よう に 動作 する の か に つ い て 詳し い 背景 を 述べ ま す 。 
この 説明 は 、 Python  拡張 モジュール を 作成 する  Windows  プログラマ と 、 Unix  と  Windows  の 双方 で うま く ビルド でき る よう な ソフトウェア の 作成 に 興味 が あ る  Unix  プログラマ の 双方 に と っ て 有用 で す 。  モジュール の 作者 に は 、 この 節 で 説明 し て い る 方法 より も 、  distutils  に よ る アプローチ で 拡張 モジュール を ビルド する よう 勧め ま す 。 
また 、 Python  を ビルド し た 際 に 使 わ れ た  C  コンパイラ が 必要 で す ; 通常 は  Microsoft  Visual  C + + で す 。 
注意 : この 章 で は 、 Python  の バージョン 番号 が 符号 化 さ れ て 入 っ て い る たくさん の ファイル 名 に つ い て 触れ ま す 。 
これ ら の ファイル 名 は " XY "  で 表 さ れ る バージョン 名 付き で 表現 さ れ ま す ; " X "  は 使 っ て い る  Python  リリース の メジャー バージョン 番号 、 " Y "  は マイナー バージョン 番号 で す 。 
例えば 、  Python  2 . 2 . 1  を 使 っ て い る なら 、 " XY "  は 実際 に は " 22 "  に な り ま す 。 
3 . 1  拡張 モジュール の 配布 
3 .  distutils  に よ る  C  および  C + +  拡張 モジュール の ビルド 
Python  1 . 4  に な っ て から 、 動的 に リンク さ れ る よう な 拡張 モジュール を ビルド する ため の メイク ファイル を 作成 する よう な 、 特殊 な メイク ファイル を Unix  向け に 提供 する よう に な り ま し た 。 
Python  2 . 0  から は この 機構  ( いわゆる  Makefile . pre . in  および  Setup  ファイル の 関係 ファイル ) は サポート さ れ な く な り ま し た 。  インタプリタ 自体 の カスタマイズ は ほとんど 使 わ れ ず 、  distutils  で 拡張 モジュール を ビルド でき る よう に な っ た から で す 。 
distutils  を 使 っ た 拡張 モジュール の ビルド に は 、 ビルド を 行 う 計算 機上 に distutils  を インストール し て い る こと が 必要 で す 。  Python  2 . x  に は  distutils  が 入 っ て お り 、  Python  1 . 5  用 に は 個別 の パッケージ が あ り ま す 。 
distutils  は バイナリ パッケージ の 作成 も サポート し て い る の で 、 ユーザ が 拡張 モジュール を インストール する 際 に 、 必ず しも コンパイラ が 必要 と い う わけ で は あ り ま せ ん 。  distutils  ベース の パッケージ に は 、 駆動 スクリプト  ( driver  script ) と な る  setup . py  が 入 っ て い ま す 。 
setup . py  は 普通 の  Python  プログラム ファイル で 、 ほとんど の 場合 以下 の よう な 見かけ に な っ て い ま す : 
この  setup . py  と ファイル  demo. c  が あ る とき 、 以下 の コマンド 
を 実行 する と 、 demo. c  を コンパイル し て 、 " demo "  と い う 名前 の 拡張 モジュール を build  ディレクトリ 内 に 生成 し ま す 。 
システム に よ っ て は モジュール ファイル は build\/ lib . system サブ ディレクトリ に 生成 さ れ 、 demo . so や  demo. pyd と い っ た 名前 に な る こと が あ り ま す 。  setup . py  内 で は 、 コマンド の 実行 は すべて  " setup "  関数 を 呼び出 し て 行 い ま す 。 
この 関数 は 可変 個 の キー ワード 引数 を と り ま す 。  例 で は その 一部 を 使 っ て い る に すぎ ま せ ん 。 
もっと 具体 的 に い う と 、 例 の 中 で は パッケージ を ビルド する ため の メタ 情報 と 、 パッケージ の 内容 を 指定 し て い ま す 。 
通常 、 パッケージ に は  Python  ソース モジュール や ドキュメント 、 サブ パッケージ 等 と い っ た 別 の ファイル も 入 り ま す 。 
distutils  の 機能 に 関 する 詳細 は 、 
Python  モジュール の 配布 
に 書 か れ て い る distutils  の ドキュメント を 参照 し て くださ い ;  この 節 で は 、 拡張 モジュール の ビルド に つ い て のみ 説明 し ま す 。  駆動 スクリプト を より よ く 構成 する ため に 、 決め 打ち の 引数 を setup  に 入れ て お く こと が よく あ り ま す 。 
上 の 例 で は 、 setup  の  " ext _ modules "  は 拡張 モジュール の リスト で 、 リスト の 各々 の 要素 は  Extension  クラス の インスタンス に な っ て い ま す 。 
例えば 以下 の ファイル が その 実例 で す 。 
この 例 で は 、 setup  は 追加 の メタ 情報 と 共 に 呼び出 さ れ ま す 。  配布 パッケージ を 構築 する 際 に は 、 メタ 情報 の 追加 が 推奨 さ れ て い ま す 。 
拡張 モジュール 自体 に つ い て は 、 プリ プロセッサ 定義 、 インク ルード ファイル の ディレクトリ 、 ライブラリ の ディレクトリ 、 ライブラリ と い っ た 指定 が あ り ま す 。  distutils  は この 情報 を コンパイラ に 応じ て 異な る や り 方 で 引渡 し ま す 。 
例えば 、 Unix  で は 、 上 の 設定 は 以下 の よう な コンパイル コマンド に な る か も しれ ま せ ん : 
これ ら の コマンドライン は 実演 目的 で 書 か れ た もの で す ;  distutils  の ユーザ は  distutils  が 正し く コマンド を 実行 する と 信用 し て くださ い 。 
5  ビルド 済み 配布 物 を 作成 する 
1  ダム 形式 の ビルド 済み 配布 物 を 作成 する 
` ` ビルド 済み 配布 物 ' '  と は 、 おそらく 皆 さん が 通常  ` ` バイナリ パッケージ ' ' と か  ` ` インストーラ ' ' ( 背景 に し て い る 知識 に よ っ て 違 い ま す )  と 考え て い る もの で す 。 
と は い え 、 配布 物 が 必然 的 に バイナリ 形式 に な る わけ で は あ り ま せ ん 。 
配布 物 に は 、  Python  ソース コード 、 かつ \/ また は バイトコード が 入 る から で す ;  また 、 我々 は パッケージ と い う 呼 び 方 も し ま せ ん 。 
すでに  Python  の 用語 と し て 使 っ て い る から で す  ( また 、 `` インストーラ ' ' と い う 言葉 は 主流 の デスクトップ システム 特有 の 用語 で す ) ビルド 済み 配布 物 は 、 モジュール 配布 物 を インストール 作業 者 に と っ て でき る だけ 簡単 な 状況 に する 方法 で す :  ビルド 済み 配布 物 は 、 RPM  ベース の Linux  システム ユーザ に と っ て は バイナリ  RPM  、 Windows  ユーザ に と っ て は 実行 可能 な インストーラ 、  Debian  ベース の  Linux  システム で は  Debian  パッケージ 、 など と い っ た 具合 で す 。 
単純 な 例 と し て 、 Distutils  ソース ツリー から 以下 の コマンド を 実行 し た と し ま す : 
する と 、 Distutils  は モジュール 配布 物  ( ここ で は  Distutils  自体 )  を ビルド し 、 ` ` 偽 の  ( fake ) ' ' インストール を  ( build  ディレクトリ で ) 行 い ま す 。  そして 現在 の プラットフォーム に お け る 標準 の 形式 で ビルド 済み 配布 物 を 生成 し ま す 。 
デフォルト の ビルド 済み 形式 と は 、 Unix で は ` ` ダム  ( dumb ) ' ' の tar  ファイル で 、  Windows  で は シンプル な 実行 形式 の インストーラ に な り ま す 。 
(tar  ファイル は 、 特定 の 場所 に 手 作業 で 解凍 し な い と 動作 し な い の で 、 `` ダム :  賢 く な い ' '  形式 と みな し ま す 。  ) 従 っ て 、 Unix  システム で 上記 の コマンド を 実行 する と 、 Distutils - 1 . 0 . plat .tar . gz  を 作成 し ま す ;  この tarball  を 正し い 場所 で 解凍 する と 、 ちょうど ソース 配布 物 を ダウンロード し て  pythonsetup . py install  を 実行 し た の と 同じ よう に 、 正し い 場所 に  Distutils  が インストール さ れ ま す 。 
( ` ` 正し い 場所  ( right  place ) ' ' と は 、 ファイル システム の ルート 下 か 、 Python  の  prefix  ディレクトリ 下 で 、 これ は bdist_dumb  に 指定 する コマンド で 変わ り ま す ; デフォルト の 設定 で は 、 prefix  から の 相対 パス に インストール さ れ る ダム 配布 物 が 得 られ ま す 。 
)  言 う まで も な く 、 pure Python  配布 物 の 場合 なら 、 pythonsetup . py install  する の に 比べ て 大して 簡単 に な っ た と は 言え ま せ ん - - しかし 、 非  pure  配布 物 で 、 コンパイル の 必要 な 拡張 モジュール を 含 む 場合 、 拡張 モジュール を 利用 でき る か 否 か と い う 大きな 違い に な り え ま す 。 
と する と 、 Unix  システム で は 、 Distutils - 1 . 0 . plat . zip  を 作成 し ま す - - 先 に も 述べ た よう に 、 Distutils  を インストール する に は 、 この アーカイブ 形式 を ルート ディレクトリ 下 で 展開 し ま す 。  ビルド 済み 配布 物 と し て 利用 でき る 形式 を 以下 に 示 し ま す : 
形式 
説明 
注記 
gzip  圧縮 さ れ た tar  ファイル  (.tar . gz ) 
compress  圧縮 さ れ た tar  ファイル  (.tar . Z ) 
tar  ファイル  (.tar ) 
zip  ファイル  (.zip ) 
RPM  形式 
Solaris  pkgtool  形式 
Windows  用 の 自己 展開 形式  ZIP  ファイル 
注記 : 
Unix で の デフォルト 形式 で す 
Python  インタプリタ は 数 多く の 組み込 み 関数 を 持 っ て い て 、 いつ で も 利用 する こと が でき ま す 。 
それ ら の 関数 を アルファベット 順 に 挙げ ま す 。 
この 関数 は import
文 に よ っ て 呼び出 さ れ ま す 。 
この 関数 の 主な 意義 は 、 同様 の インタフェース を 持 つ 関数 で この 関数 を 置き換え 、 import  文 の 意味 を 変更 でき る よう に する こと で す 。 
これ を 行 う 理由 と や り 方 の 例 に つ い て は 、 標準 ライブラリ モジュール  ihooks
および 
に つ い て も 読 ん で み て 下さ い 。  自分 で 関数  _ _i mport__ を 構築 する 際 に 便利 な 操作 が 定義 さ れ て い ま す 。 
例えば 、 文 " importspam "  は 結果 と し て 以下 の 呼び出 し : _ _i mport__('spam ' , globals ( ) ,  locals ( ) ,[ ] ) に な り ま す ;  文 " from spam . ham import eggs "  は " _ _i mport__('spam . ham ' , globals ( ) ,  locals ( ) ,  [ 'eggs'] ) "  で す 。 
locals ( )  および  [ 'eggs' ]  が 引数 で 与え られ ま す が 、 関数  _ _i mport__( )  は  eggs  と い う 名 の ローカル 変数 を 設定 し な い の で 注意 し て くださ い ;  この 操作 は それ 以後 の import  文 の ため に 生成 さ れ た コード で 行 わ れ ま す 。 
( 実際 、 標準 の 実装 で は  locals 引数 を 全く 使 わ ず 、 import  文 の パッケージ 文脈 を 決定 する ため だけ に  globals  を 使 い ま す 。  ) 変数  name  が  package . module  の 形式 で あ っ た 場合 、 通常 、 name  と い う 名 の モジュール  で は な く  トップ レベル の パッケージ  ( 最初 の ドット まで の 名前 )  が 返 さ れ ま す 。 
しかし 、 空 で な い  fromlist  引数 が 与え られ て い れ ば 、 name と 名づけ られ た モジュール が 返 さ れ ま す 。 
これ は 異な る 種類 の import 文 に 対 し て 生成 さ れ た バイトコード と 互換 性 を も た せ る ため に 行 わ れ ま す ; " importspam . ham . eggs "  と する と 、 トップ レベル の パッケージ spam  は インポート する 名前 空間 に 置 か れ な けれ ば な り ま せ ん が 、 " from spam . ham import eggs "  と する と 、 変数  eggs  を 見つけ る ため に は  spam . ham  サブ パッケージ を 使 わ な く て は な り ま せ ん 。 
この 振る舞い を 回避 する ため に 、 getattr ( )  を 使 っ て 必要 な コンポーネント を 展開 し て くださ い 。 
例えば 、 以下 の よう な ヘルパー 関数 : 
数値 の 絶対 値 を 返 し ま す 。 
引数 と し て 通常 の 整数 、 長 整数 、 浮動 小数 点数 を と る こと が でき ま す 。 
引数 が 複素数 の 場合 、 その 大き さ  ( magnitude )  が 返 さ れ ま す 
標準 の 真値 テスト を 使 っ て 、 値 を ブール 値 に 変換 し ま す 。 
この クラス の インスタンス は False  および  True  だけ で す 。 
バージョン  2 . 2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : 引数 が 与え られ な かっ た 場合 、 この 関数 は  False  を 返 し ま す 。 
object  引数 が 呼び出し 可能 な オブジェクト の 場合 、 真 を 返 し ま す 。  そう で な けれ ば 偽 を 返 し ま す 。 
この 関数 が 真 を 返 し て も  object の 呼び出し は 失敗 する 可能 性 が あ り ま す が 、 偽 を 返 し た 場合 は 決して 成功 する こと は あ り ま せ ん 。 
クラス は 呼び出し 可能  ( クラス を 呼び出 す と 新し い インスタンス を 返 し ま す )  な こと と 、 クラス の インスタンス が メソッド __ call_ _( )  を 持 つ 場合 に は 呼び出し が 可能 な の で 注意 し て くださ い 。 
ASCII  コード が 整数  i  と な る よう な 文字  1  字 から な る 文字 列 を 返 し ま す 。 
例えば 、 chr ( 97 )  は 文字 列  ' a ' を 返 し ま す 。  この 関数 は ord ( )  の 逆 で す 。 
引数 は  [ 0 . . 255 ]  の 両端 を 含 む 範囲 内 に 収ま ら な けれ ば な り ま せ ん ;  i  が 範囲 外 の 値 の とき に は ValueError  が 送出 さ れ ま す 。 
@ classmethod  は 関数 デ コレータ 形式 で す 。 
詳し く は . . \/ ref \/ ref . htmlPython  リファレンス マニュアル の  7  章 に あ る 関数 定義 に つ い て の 説明 を 参照 し て くださ い 。 
この メソッド は クラス で 呼び出 す こと  ( 例えば  C . f ( ) )  も 、 インスタンス と し て 呼び出 す こと  ( 例えば  C ( ) . f () )  も でき ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 関数 デ コレータ 構文 を 追加 し ま し た 
二 つ の オブジェクト  x  および  y  を 比較 し 、 その 結果 に 従 っ て 整数 を 返 し ま す 。 
戻 り 値 は 
の 時 に は ゼロ 、 
string  を コード オブジェクト に コンパイル し ま す 。 
コード オブジェクト は  exec  文 で 実行 し たり 、 eval ( )  を 呼び出 し て 評価 でき ま す 。 
ある 機能 を 指定 する ため に 必要 な ビット フィールド は 、 _ _future_ _ モジュール の _ Feature  インスタンス に おけ る compiler_flag  属性 で 得 られ ま す 。 
値  real  + imag * j  の 複素数 型 数 を 生成 する か 、 文字 列 また は 数値 を 複素 数 型 に 変換 し ま す 。 
それぞれ の 引数 は  ( 複素数 を 含 む )  任意 の 数値 型 を と る こと が でき ま す 。 imag  が 省略 さ れ た 場合 、 標準 の 値 は ゼロ で 、 関数 は  int 、 long ( )  および  float ( )  の よう な 数値 型 へ の 変換 関数 と し て 動作 し ま す 。 
全て の 引数 が 省略 さ れ た 場合 、 0 j  を 返 し ま す 。 
setattr ( )  の 親戚 と な る 関数 で す 。 
引数 は オブジェクト と 文字 列 で す 。 
文字 列 は オブジェクト の 属性 の どれ か 一 つ の 名前 で な けれ ば な り ま せ ん 。 
この 関数 は 与え られ た 名前 の 属性 を 削除 し ま す が 、 オブジェクト が それ を 許 す 場合 に 限 り ま す 。 
例えば 、 delattr ( x , ' foobar')  は del  x . foobar
と 等価 で す 。 
オプション の 場所 に あ る 引数 か 、 キー ワード 引数 の 集合 から 、 新し く 辞書 オブジェクト を 初期 化 し て 返 し ま す 。 
この 場合 引数 中 の 要素 も また 、 上 に 挙げ た 型 の どれ か で な く て は な ら ず 、 加え て 正確 に  2  個 の オブジェクト を 持 っ て い な く て は な り ま せ ん 。 
最初 の 要素 は 新た な 辞書 の キー と し て 、 二 つ 目 の 要素 は 辞書 の 値 と し て 使 わ れ ま す 。 
同じ キー が 一 度 以上 与え られ た 場合 、 新た な 辞書 中 に は 最後 に 与え た 値 だけ が 関連 付け られ ま す 。  キー ワード 引数 が 与え られ た 場合 、 キー ワード と それ に 関連 付け られ た 値 が 辞書 の 要素 と し て 追加 さ れ ま す 。 
オプション の 場所 に あ る オブジェクト 内 と キー ワード 引数 の 両方 で 同じ キー が 指定 さ れ て い た 場合 、 辞書 中 に は キー ワード 引数 の 設定 値 の 方 が 残 さ れ ま す 。  例えば 、 以下 の コード は どれ も 、 { " one " :  2 , " two" :  3 } と 同じ 辞書 を 返 し ま す : 
バージョン  2 . 3  で  変更  さ れ た 仕様 : キー ワード 引数 から 辞書 を 構築 する 機能 が 追加 さ れ ま し た 
引数 が な い 場合 、 現在 の ローカル シンボル テーブル に あ る 名前 の リスト を 返 し ま す 。 
引数 が あ る 場合 、 その オブジェクト の 有効 な 属性 から な る リスト を 返 そ う と 試み ま す 。 
この 情報 は オブジェクト の __dict_ _ 属性 が 定義 さ れ て い る 場合 、 そこ から 収集 さ れ ま す 。  また 、 クラス また は 型 オブジェクト から も 集め られ ま す 。 
dir ( )  は 第 一 に 対話 プロンプト の ため に 提供 さ れ て い る の で 、 厳密 さ や 一貫 性 を も っ て 定義 さ れ た 名前 の セット より も 、 むしろ 興味 深 い 名前 の セット を 与え よう と し ま す 。  また 、 この 関数 の 細か い 動作 は リリース 間 で 変わ る 可能 性 が あ り ま す 。 
a ,  b )  2  つ の  ( 複素数 で な い )  数値 を 引数 と し て 取 り 、 長 除法 を 行 っ て その 商 と 剰余 から な る ペア を 返 し ま す 。 
被 演算 子 が 型 混合 で あ る 場合 、 2  進 算術 演算 子 で の 規則 が 適用 さ れ ま す 。 
通常 の 整数 と 長 整数 の 場合 、 結果 は  ( a\/b ,  a% b )  と 同じ で す 。 
浮動 小数 点数 の 場合 、 結果 は  ( q ,  a% b ) で あ り 、  q  は 通常  math . floor ( a\/b )  で す が 、 そう で は な く  1  に な る こと も あ り ま す 。 
いずれ に せよ 、 
は  a  に 非常 に 近 い 値 に な り 、 
が ゼロ で な い 値 の 場合 、 その 符号 は  b  と 同じ で 、  0  = abs ( a% b ) abs( b ) に な り ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : 複素数 に 対 する  divmod ( )  の 使用 は 廃用 さ れ ま し た 。 
列挙 オブジェクト を 返 し ま す 。 iterable  は シーケンス 型 、 イテレータ 型 、 あるいは 反復 を サポート する 他 の オブジェクト 型 で な けれ ば な り ま せ ん 。 
文字 列 と オプション の 引数  globals 、 locals  を と り ま す 。 
globals  を 指定 する 場合 に は 辞書 で な く て は な り ま せ ん 。 
locals  は 任意 の マップ 型 に でき ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 以前 は  locals  も 辞書 で な けれ ば な り ま せ ん で し た 
引数  expression は  Python  の 表現 式  ( 技術 的 に い う と 、 条件 の リスト で す )  と し て 構文 解釈 さ れ 、 評価 さ れ ま す 。  この とき 辞書  globals  および  locals  は それぞれ グローバル および ローカル な 名前 空間 と し て 使 わ れ ま す 。 
locals  辞書 が 存在 する が 、 '__builtins_ _' が 欠け て い る 場合 、 expression  を 解析 する 前 に 現在 の グローバル 変数 を  globals に コピー し ま す 。 
この こと から 、 expression  は 通常 標準 の 
モジュール へ の 完全 な アクセス を 有 し 、 制限 さ れ た 環境 が 伝播 する よう に な っ て い ま す 。 
locals  辞書 が 省略 さ れ た 場合 、 標準 の 値 と し て  globals  に 設定 さ れ ま す 。 
辞書 が 両方 とも 省略 さ れ た 場合 、 表現 式 は  eval  が 呼び出 さ れ て い る 環境 の 下 で 実行 さ れ ま す 。 
構文 エラー は 例外 と し て 報告 さ れ ま す 。 
以下 に 例 を 示 し ま す : 
この 関数 は  ( compile ( )  で 生成 さ れ る よう な )  任意 の コード オブジェクト を 実行 する ため に 利用 する こと も でき ま す 。 
この 場合 、 文字 列 の 代わり に コード オブジェクト を 渡 し ま す 。 
この コード オブジェクト は 引数  kind  を 'eval ' に し て コンパイル さ れ て い な けれ ば な り ま せ ん 。  ヒント :  文 の 動的 な 実行 は  exec  文 で サポート さ れ て い ま す 。 
ファイル から の 文 の 実行 は 関数  execfile ( )  で サポート さ れ て い ま す 。 
関数  globals ( )  および  locals ( )  は それぞれ 現在 の グローバル および ローカル な 辞書 を 返 す の で 、 eval ( )  や  execfile ( )  で 使 う こと が でき ま す 。 
この 関数 は  exec  文 に 似 て い ま す が 、 文字 列 の 代わり に ファイル に 対 し て 構文 解釈 を 行 い ま す 。 
import  文 と 違 っ て 、 モジュール 管理 機構 を 使 い ま せ ん --  この 関数 は ファイル を 無 条件 に 読み込 み 、 新た な モジュール を 生成 し ま せ ん 。 
引数 は 文字 列 と オプション の  2  つ の 辞書 から な り ま す 。 
file  は 読み込 ま れ 、 ( モジュール の よう に )  Python  文 の 列 と し て 評価 さ れ ま す 。  この とき  globals  および  locals  が それぞれ グローバル および ローカル な 名前 空間 と し て 使 わ れ ま す 。 
辞書 が 両方 とも 省略 さ れ た 場合 、 表現 式 は  execfiles  が 呼び出 さ れ て い る 環境 の 下 で 実行 さ れ ま す 。 
戻 り 値 は  None  で す 。 
警告 : 標準 で は  locals  は 後 に 述べ る 関数  locals ( )  の よう に 動作 し ま す :  標準 の  locals  辞書 に 対 する 変更 を 試み て は いけ ま せ ん 。 
execfile ( )  の 呼び出し が 返 る 時 に コード が locals  に 与え る 影響 を 知 り た い なら 、 明示 的 に  loacals  辞書 を 渡 し て くださ い 。  execfile ( )  は 関数 の ローカル を 変更 する ため の 信頼 性 の あ る 方法 と し て 使 う こと は でき ま せ ん 
新た な ファイル オブジェクト  ( section 2 . 3 . 9 ,``File +  Objects ' ' 参照 ) を 返 し ま す 。 
最初 の  2  つ の 引数 は  studio  の  fopen ( ) と 同じ で す : filename  は 開 き た い ファイル の 名前 で 、 mode  は ファイル を どの よう に し て 開 く か を 指定 し ま す : 読み出し は  ' r ' 、 書き込み  ( ファイル が すでに 存在 すれ ば 切り詰め られ ま す )  は ' w ' 、 追記 書き込み は  ' a ' で す  ( いく つ か の Unix  システム で は 、 全て  の 書き込み が 現在 の ファイル シーク 位置 に 関係 な く ファイル の 末尾 に 追加 さ れ ま す )  。 'r + ' 、 ' w +' 、 および  ' a + '  は ファイル を 更新 モード で 開 き ま す  ( ' w +' は ファイル が すでに 存在 すれ ば 切り詰め る の で 注意 し て くださ い )  。 
バイナリ と テキスト ファイル を 区別 する システム で は 、 ファイル を バイナリ モード で 開 く ため に は ' b ' を 追加 し て くださ い  ( 区別 し な い システム で は ' b ' は 無視 さ れ ま す ) 。 
ファイル を 開 く こと が でき な けれ ば 、 IOError  が 送出 さ れ ま す 。  標準 の  fopen ( )  に お け る  mode  の 値 に 加え て 、 ' U ' また は  'rU'  を 使 う こと が でき ま す 。 
Python  が 全 改行 文字 サポート を 行 っ て い る  ( 標準 で は し て い ま す )  場合 , ファイル が テキスト ファイル で 開 か れ ま す が 、 行末 文字 と し て  Unix  に お け る 慣行 で あ る 'n' 、 Machintosh  に お け る 慣行 で あ る  ' r ' 、 Windows  に お け る 慣行 で あ る 'rn' の いずれ を 使 う こと も でき ま す 。 
これ ら の 改行 文字 の 外部 表現 は どれ も 、 Python  プログラム から は ' n' に 見え ま す 。 
Python  が 全 改行 文字 サポート なし で 構築 さ れ て い る 場合 、 mode ' U ' は 通常 の テキスト モード と 同様 に な り ま す 。 
開 か れ た ファイル オブジェクト は また 、 newlines と 呼 ば れ る 属性 を 持 っ て お り 、 その 値 は  None  ( 改行 が 見つか ら な かっ た 場合 ) 、 'n' 、 'r'、 'rn' 、 また は 見つか っ た 全て の 改行 タイプ を 含 む タプル に な り ま す 。  mode  が 省略 さ れ た 場合 、 標準 の 値 は  ' r ' に な り ま す 。 
移植 性 を 高め る ため に は 、 バイナリ ファイル を 開 く とき に は 、 mode  の 値 に ' b ' を 追加 し な けれ ば な り ま せ ん 。 
( バイナリ ファイル と テキスト ファイル を 区別 な く 扱 う よう な システム で も 、 ドキュメンテーション の 代わり に な る の で 便利 で す ) 
オプション の bufsize  引数 は 、 ファイル の ため に 必要 と する バッファ の サイズ を 指定 し ま す :  0  は 非 バッファ リング 、  1  は 行 単位 バッファ リング 、 その 他 の 正 の 値 は 指定 し た 値  ( の 近似 値 )  の サイズ を も つ バッファ を 使用 する こと を 意味 し ま す 。 
bufsize  の 値 が 負 の 場合 、 システム の 標準 を 使 い ま す 。  通常 、 端末 は 行 単位 の バッファ リング で あ り 、 その 他 の ファイル は 完全 な バッファ リング で す 。 
省略 さ れ た 場合 、 システム の 標準 の 値 が 使 わ れ ま す 。 
file ( )  コンストラクタ は  Python  2 . 2  で 新た に 追加 さ れ ま し た 。 
以前 の 関数 名 で あ る  open ( )  は 互換 性 の ため に 残 さ れ て お り 、 file ( )  の 別名 と な っ て い ま す 。 
文字 列 また は 数値 を 浮動 小数 点数 に 変換 し ま す 。 
それ 以外 の 場合 、 引数 は 通常 整数 、 長 整数 、 また は 浮動 小数 点数 を と る こと が でき 、 同じ 値 の 浮動 小数 点数 が  ( Python  の 浮動 小数 点 精度 で )  返 さ れ ま す 。 
引数 が 指定 さ れ な かっ た 場合 、 0 . 0  を 返 し ま す 。 
注意 : 文字 列 で 値 を 渡 す 際 、 背後 の  C  ライブラリ に よ っ て  NaN 
および  Infinity 
が 返 さ れ る か も しれ ま せ ん 。 
これ ら の 値 を 返 す よう な 特殊 な 文字 列 の セット は 完全 に  C  ライブラリ に 依存 し て お り 、 バリエーション が あ る こと が 知 ら れ て い ま す 。 
要素 は iterable  から 取得 し ま す 。 
frozenset  型 は 、 update  メソッド を 持 た な い 代わり に ハッシュ 化 でき 、 他 の  set  型 の 要素 に し たり 辞書 型 の キー に し たり でき ま す 。 
frozenset  の 要素 自体 は 変更 不能 で な けれ ば な り ま せ ん 。 
集合  ( set )  型 の 集合 を 表現 する ため に は 、 内 集合 も  frozenset  オブジェクト で な けれ ば な り ま せ ん 。 
iterable  を 指定 し な い 場合 に は 空 の 集合  frozenset ( [ ] )  を 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
指定 さ れ た  object  の 属性 を 返 し ま す 。 
name  は 文字 列 で な く て は な り ま せ ん 。  文字 列 が オブジェクト の 属性 名 の 一 つ で あ っ た 場合 、 戻 り 値 は その 属性 の 値 に な り ま す 。 
例えば 、 getattr ( x , ' foobar')  は  x . foobar  と 等価 で す 。 
指定 さ れ た 属性 が 存在 し な い 場合 、 default  が 与え られ て い る 場合 に は しれ が 返 さ れ ま す 。  そう で な い 場合 に は  AttributeError が 送出 さ れ ま す 。 
現在 の グローバル シンボル テーブル を 表 す 辞書 を 返 し ま す 。  常 に 現在 の モジュール の 辞書 に な り ま す  ( 関数 また は メソッド の 中 で は それ ら を 定義 し て い る モジュール を 指 し 、 この 関数 を 呼び出 し た モジュール で は あ り ま せ ん ) 。 
引数 は オブジェクト と 文字 列 で す 。 
文字 列 が オブジェクト の 属性 名 の 一 つ で あ っ た 場合  True  を 、 そう で な い 場合  False  を 返 し ま す ( この 関数 は  getattr (object ,  name )  を 呼び出 し 、 例外 を 送出 する か どう か を 調べ る こと で 実装 し て い ま す ) 。 
オブジェクト の ハッシュ 値 を  ( 存在 すれ れ ば )  返 し ま す 。 
ハッシュ 値 は 整数 で す 。 
これ ら は 辞書 を 検索 する 際 に 辞書 の キー を 高速 に 比較 する ため に 使 わ れ ま す 。 
等し い 値 と な る 数値 は 等し い ハッシュ 値 を 持 ち ま す  ( 1  と 1 . 0  の よう に 型 が 異な っ て い て も で す ) 。 
組み込 み ヘルプ システム を 起動 し ま す  ( この 関数 は 対話 的 な 使用 の ため の もの で す ) 。 
引数 が 与え られ て い な い 場合 、 対話 的 ヘルプ システム は インタプリタ コンソール 上 で 起動 し ま す 。 
引数 が 文字 列 の 場合 、 文字 列 は モジュール 、 関数 、 クラス 、 メソッド 、 キー ワード 、 また は ドキュメント の 項目 名 と し て 検索 さ れ 、 ヘルプ ページ が コンソール 上 に 印字 さ れ ま す 。 
引数 が 何 ら か の オブジェクト の 場合 、 その オブジェクト に 関 する ヘルプ ページ が 生成 さ れ ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
オブジェクト の  ` ` 識別 値 ' '  を 返 し ま す 。 
この 値 は 整数  ( また は 長 整数 ) で 、 この オブジェクト の 有効 期間 は 一意 かつ 定数 で あ る こと が 保証 さ れ て い ま す 。 
オブジェクト の 有効 期間 が 重な ら な い  2  つ の オブジェクト は 同じ  id ( )  値 を 持 つ か も しれ ま せ ん 。 
( 実装 に 関 する 注釈 : この 値 は オブジェクト の アドレス で す 。 ) 
eval ( raw _ input ( prompt) )  と 同じ で す 。 
警告 : この 関数 は ユーザ の エラー に 対 し て 安全 で は あ り ま せ ん !  この 関数 で は 、 入力 は 有効 な  Python  の 式 で あ る と 期待 し て い ま す ;  入力 が 構文 的 に 正し く な い 場合 、 SyntaxError  が 送出 さ れ ま す 。 
式 を 評価 する 際 に エラー が 生 じ た 場合 、 他 の 例外 も 送出 さ れ る か も しれ ま せ ん 。 
( 一方 、 この 関数 は 時 に 、 熟練 者 が すばや く スクリプト を 書 く 際 に 必要 な まさに その もの で す ) 
モジュール が 読み込 ま れ て い れ ば 、 input ( ) は 精緻 な 行 編集 および ヒストリ 機能 を 提供 し ま す 。  一般 的 な ユーザ から の 入力 の ため の 関数 と し て は  raw _ input ( )  を 使 う こと を 検討 し て くださ い 。 
文字 列 また は 数値 を 通常 の 整数 に 変換 し ま す 。 
radix  が ゼロ の 場合 、 文字 列 の 内容 から 適切 な 基数 を 推測 し ま す ;  変換 は 整数 リテラル と 同じ で す 。 
radix  が 指定 さ れ て お り 、 x  が 文字 列 で な い 場合 、 TypeError  が 送出 さ れ ま す 。  それ 以外 の 場合 、 引数 は 通常 整数 、 長 整数 、 また は 浮動 小数 点数 を と る こと が でき ま す 。 
浮動 小数 点数 から 整数 へ 変換 で は  ( ゼロ 方向 に ) 値 を 丸め ま す 。  引数 が 通常 整数 の 範囲 を 超え て い る 場合 、 長 整数 が 代わり に 返 さ れ ま す 。 
引数 が 与え られ な かっ た 場合 、 0  を 返 し ま す 。 
引数  object  が 引数  classinfo  の インスタンス で あ る か 、 ( 直接 また は 間接 的 な )  サブ クラス の インスタンス の 場合 に 真 を 返 し ま す 。 
また 、 classinfo  が 型 オブジェクト で あ り 、 object  が その 型 の オブジェクト で あ る 場合 に も 真 を 返 し ま す 。 
object  が クラス インスタンス や 与え られ た 型 の オブジェクト で な い 場合 、 この 関数 は 常 に 偽 を 返 し ま す 。 
classinfo  を クラス オブジェクト で も 型 オブジェクト に も せ ず 、 クラス や 型 オブジェクト から な る タプル や 、 そう い っ た タプル を 再帰 的 に 含 む タプル  ( 他 の シーケンス 型 は 受理 さ れ ま せ ん )  で も かま い ま せ ん 。 
classinfo  が クラス 、 型 、 クラス や 型 から な る タプル 、 そう い っ た タプル が 再帰 構造 を と っ て い る タプル の いじれ で も な い 場合 、 例外  TypeError  が 送出 さ れ ま す 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : 型 情報 を タプル に し た 形式 の サポート が 追加 さ れ ま し た 。 
class  が  classinfo  の  ( 直接 また は 間接 的 な )  サブ クラス で あ る 場合 に 真 を 返 し ま す 。 
クラス は その クラス 自体 の サブ クラス と clasinfo  は クラス オブジェクト から な る タプル で も よ く 、 この 場合 に は  classinfo  の すべて の エントリ が 調べ られ ま す 。 
その 他 の 場合 で は 、 例外  TypeError  が 送出 さ れ ま す 。  バージョン  2 . 3  で  変更  さ れ た 仕様 : 型 情報 から な る タプル へ の サポート が 追加 さ れ ま し た 
イテレータ オブジェクト を 返 し ま す 。 
2  つ 目 の 引数 が あ る か どう か で 、 最初 の 引数 の 解釈 は 非常 に 異な り ま す 。  2  つ 目 の 引数 が な い 場合 、 o  は 反復 プロトコル  ( __iter_ _( )  メソッド )  か 、 シーケンス 型 プロトコル  ( 引数 が  0  から 開始 する _ _ getitem__( )  メソッド )  を サポート する 集合 オブジェクト で な けれ ば な り ま せ ん 。 
これ ら の プロトコル が 両方 とも サポート さ れ て い な い 場合 、  TypeError  が 送出 さ れ ま す 。  2  つ 目 の 引数  sentinel  が 与え られ て い れ ば 、 o は 呼び出し 可能 な オブジェクト で な けれ ば な り ま せ ん 。 
オブジェクト の 長 さ  ( 要素 の 数 )  を 返 し ま す 。 
引数 は シーケンス 型  ( 文字 列 、 タプル 、 また は リスト )  か 、 マップ 型  ( 辞書 )  で す 。 
sequence  の 要素 と 同じ 要素 を も ち 、 かつ 順番 も 同じ な リスト を 返 し ま す 。  sequence  は シーケンス 、 反復 処理 を サポート する コンテナ 、 あるいは イテレータ オブジェクト で す 。 
sequence  が すでに リスト の 場合 、 
sequence [ : ]  と 同様 に コピー を 作成 し て 返 し ま す 。 
例えば 、 list ( 'abc')  は  [ ' a ' , ' b ', 'c']  および list ( 1 ,  2 ,  3 )  は  [ 1 ,  2 ,  3 ]  を 返 し ま す 。 
引数 が 与え られ な かっ た 場合 、 新し い 空 の リスト  [ ]  を 返 し ま す 。 
現在 の ローカル シンボル テーブル を 表 す 辞書 を 更新 し て 返 し ま す 。 
警告 : この 辞書 の 内容 は 変更 し て は いけ ま せ ん ;  値 を 変更 し て も 、 インタプリタ が 使 う ローカル 変数 の 値 に は 影響 し ま せ ん 。 
文字 列 また は 数値 を 長 整 数 値 に 変換 し ま す 。 
radix  引数 は  int ( )  と 同じ よう に 解釈 さ れ 、 x  が 文字 列 の 時 だけ 与え る こと が でき ま す 。  それ 以外 の 場合 、 引数 は 通常 整数 、 長 整数 、 また は 浮動 小数 点数 を と る こと が でき 、 同じ 値 の 長 整数 が 返 さ れ ま す 。 
浮動 小数 点数 から 整数 へ 変換 で は  ( ゼロ 方向 に )  値 を 丸め ま す 。 
引数 が 与え られ な かっ た 場合 、 0 L  を 返 し ま す 。 
function  を  list  の 全て の 要素 に 適用 し 、 返 さ れ た 値 から な る リスト を 返 し ま す 。 
追加 の  list  引数 を 与え た 場合 、 function  は それ ら を 引数 と し て 取 ら な けれ ば な ら ず 、 関数 は その リスト の 全て の 要素 に つ い て 個別 に 適用 さ れ ま す ;  他 の リスト より 短 い リスト が あ る 場合 、 要素  None  で 延長 さ れ ま す 。 
function が  None  の 場合 、 恒等 関数 で あ る と 仮定 さ れ ま す ;  すなわち 、 複数 の リスト 引数 が 存在 する 場合 、 map ( )  は 全て の リスト 引数 に 対 し 、 対応 する 要素 から な る タプル から な る リスト を 返 し ま す  ( 転置 操作 の よう な もの で す ) 。 
list  引数 は どの よう な シーケンス 型 で も かま い ま せ ん ; 結果 は 常 に リスト に な り ま す 。 
単一 の 引数  s  の 場合 、 空 で な い シーケンス  ( 文字 列 、 タプル また は リスト ) の 要素 の うち 最大 の もの を 返 し ま す 。 
1  個 より も 引数 が 多 い 場合 、 引数 間 で 最大 の もの を 返 し ま す 。 
単一 の 引数  s  の 場合 、 空 で な い シーケンス  ( 文字 列 、 タプル また は リスト ) の 要素 の うち 最小 の もの を 返 し ま す 。 
1  個 より も 引数 が 多 い 場合 、 引数 間 で 最小 の もの を 返 し ま す 。 
ユーザ 定義 の 属性 や メソッド を 持 た な い 、 新し い オブジェクト を 返 し ま す 。 
object ( )  は 新 スタイル の クラス の 、 基底 クラス で す 。 
これ は 、 新 スタイル の クラス の インスタンス に 共通 の メソッド 群 を 持 ち ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : この 関数 は いかなる 引数 も 受け付け ま せ ん 。  以前 は 、 引数 を 受理 し ま し た が 無視 し て い ま し た 。 
( 任意 の サイズ の )  整数 を  8  進 の 文字 列 に 変換 し ま す 。 
結果 は  Python  の 式 と し て も 使え る 形式 に な り ま す 。  バージョン  2 . 4  で  変更  さ れ た 仕様 : 以前 は 符号 なし の リテラル しか 返 し ま せ ん で し た 
前述 の 関数  file ( )  の 別名 で す 。 
1  文字 から な る 文字 列 また は  Unicode  文字 の  ASCII  値 を 返 し ま す 。 
例えば 、 ord ( 'a ')  は 整数  97  を 返 し 、 ord ( u'u 2020 ' )  は  82 24  を 返 し ま す 。 
この 値 は 文字 列 に 対 する  chr ( )  の 逆 で あ り 、 Unicode  文字 に 対 する unichr ( )  の 逆 で す 。 
引数 は 数値 型 で な く て は な り ま せ ん 。 
型 混合 の 場合 、 2  進 算術 演算 に お け る 型 強制 規則 が 適用 さ れ ま す 。 
通常 整数 および 長 整数 の 被 演算 子 に 対 し て は 、 二 つ 目 の 引数 が 負 の 数 で な い 限り 、 結果 は  ( 型 強制 後 の ) 被 演算 子 と 同じ 型 に な り ま す ; 負 の 場合 、 全て の 引数 は 浮動 小数 点 型 に 変換 さ れ 、 浮動 小数 点 型 の 結果 が 返 さ れ ま す 。 
例えば 、  10 * * 2  は  100  を 返 し ま す が 、  100 * * - 2  は  0 . 0 1  を 返 し ま す 。  ( 最後 に 述べ た 機能 は  Python  2 . 2  で 追加 さ れ た もの で す 。 
( この 制限 は  Python  2 . 2  で 追加 さ れ ま し た 。 
Python  2 . 1  以前 で は 、 3  つ の 浮動 小数 点 引数 を 持 つ  pow ( )  は 浮動 小数 点 の 丸め に 関 する 偶発 誤差 に よ り 、 プラットフォーム 依存 の 結果 を 返 し ま す 。 ) 
新し い 形式 の クラス  (object  から 導出 さ れ た クラス )  に おけ る プロパティ 属性 を 返 し ま す 。 
fget  は 属性 値 を 取得 する ため の 関数 で 、 同様 に fset  は 属性 値 を 設定 する ため の 関数 で す 。  また 、 fdel  は 属性 を 削除 する ため の 関数 で す 。 
以下 に 属性  x  を 扱 う 典型 的 な 利用 法 を 示 し ま す : 
数列 を 含 む リスト を 生成 する ため の 多 機能 関数 で す 。 
for  ループ で よく 使 わ れ ま す 。 
引数 は 通常 の 整数 で な けれ ば な り ま せ ん 。 
step  引数 が 無視 さ れ た 場合 、 標準 の 値  1  に な り ま す 。 
start  引数 が 蒸し さ れ た 場合 標準 の 値  0  に な り ま す 。 
完全 な 形式 で は 、 通常 の 整数 列  [ start ,  start  + step , start  +  2  *  step , . . . ]  を 返 し ま す 。 
step  が 正 の 値 の 場合 、 最後 の 要素 は  stop  より も 小さ い 
の 最大 値 に な り ま す ; step  が 負 の 値 の 場合 、 最後 の 要素 は  stop  より も 大き い 
の 最小 値 に な り ま す 。  step  は ゼロ で あ っ て は な り ま せ ん  ( さも な けれ ば  ValueError が 送出 さ れ ま す ) 。 
引数  proompt  が 存在 する 場合 、 末尾 の 改行 を 除 い て 標準 出力 に 出力 さ れ ま す 。 
次 に 、 この 関数 は 入力 から  1  行 を 読み込 ん で 文字 列 に 変換 し て ( 末尾 の 改行 を 除 い て )  返 し ま す 。  EOF  が 読み込 ま れ る と EOFError  が 送出 さ れ ま す 。 
モジュール が 読み込 ま れ て い れ ば 、 input ( ) は 精緻 な 行 編集 および ヒストリ 機能 を 提供 し ま す 。 
sequence  の 要素 に 対 し て 、 シーケンス を 単一 の 値 に 短縮 する よう な 形 で 2  つ の 引数 を も つ  function  を 左 から 右 に 累積 的 に 適用 し ま す 。 
例えば 、 reduce ( labmda  x ,  y :  x + y ,  [ 1 ,  2 ,  3 ,  4 ,  5 ] ) は ((( ( 1 + 2 ) + 3 ) + 4 ) + 5 )  を 計算 し ま す 。 
左 引数 x は 累計 の 値 に な り 、 右 引数  y  は sequence  から 取り出 し た 更新 値 に な り ま す 。 
オプション の  initializer が 存在 する 場合 、 計算 の 際 に シーケンス の 先頭 に 置 か れ ま す 。  また 、 シーケンス が 空 の 場合 に は 標準 の 値 に な り ま す 。 
initializer  が 与え られ て お ら ず 、 sequence  が 単一 の 要素 しか 持 っ て い な い 場合 、 最初 の 要素 が 返 さ れ ま す 。 
すでに インポート さ れ た  module  を 再 解釈 し 、 再 初期 化 し ま す 。 
引数 は モジュール オブジェクト で な けれ ば な ら な い の で 、 予め インポート に 成功 し て い な けれ ば な り ま せ ん 。 
この 関数 は モジュール の ソース コード ファイル を 外部 エディタ で 編集 し て 、 Python  インタプリタ から 離れ る こと な く 新し い バージョン を 試 し た い 際 に 有効 で す 。 
戻 り 値 は  ( module  引数 と 同じ )  モジュール オブジェクト で す 。  reload ( module )  を 実行 する と 、 以下 の 処理 が 行 わ れ ま す : 
Python  モジュール の コード は 再 コンパイル さ れ 、 モジュール レベル の コード は 再度 実行 さ れ ま す 。  モジュール の 辞書 中 に あ る 、 何 ら か の 名前 に 結び付け られ た オブジェクト を 新た に 定義 し ま す 。 
拡張 モジュール 中 の init  関数 が 二 度 呼び出 さ れ る こと は あ り ま せ ん 。 
Python  に お け る 他 の オブジェクト と 同様 、 以前 の オブジェクト の メモリ 領域 は 、 参照 カウント が ゼロ に な ら な い かぎり 再 利用 さ れ ま せ ん 。 
モジュール 名前 空間 内 の 名前 は 新し い オブジェクト  ( また は 更新 さ れ た オブジェクト )  を 指 す よう 更新 さ れ ま す 。 
以前 の オブジェクト が  ( 外部 の 他 の モジュール など から の )  参照 を 受け て い る 場合 、 それ ら を 新た な オブジェクト に バインド し 直 す こと は な い の で 、 必要 なら 自分 で 名前 空間 を 更新 せ ね ば な り ま せ ん 。 
いく つ か 補足 説明 が あ り ま す : モジュール は 文法 的 に 正し い が 、 その 初期 化 に は 失敗 し た 場合 、 その モジュール の 最初 の import  文 は モジュール 名 を ローカル に は バインド し ま せ ん が 、 ( 部分 的 に 初期 化 さ れ た )  モジュール オブジェクト を  sys . modules  に 記憶 し ま す 。 
従 っ て 、 モジュール を ロード し なお す に は 、 reload ( )  する 前 に まず  import ( モジュール の 名前 を 部分 的 に 初期 化 さ れ た オブジェクト に バインド し ま す ) を 再度 行 わ な けれ ば な り ま せ ん 。  モジュール が 再 ロード さ れ た 再 、 その 辞書  ( モジュール の グローバル 変数 を 含 み ま す )  は その まま 残 り ま す 。 
名前 の 再 定義 を 行 う と 、 以前 の 定義 を 上書き する の で 、 一般 的 に は 問題 は あ り ま せ ん 。 
新た な バージョン の モジュール が 古 い バージョン で 定義 さ れ た 名前 を 定義 し て い な い 場合 、 古 い 定義 が その まま 残 り ま す 。 
辞書 が グローバル テーブル や オブジェクト の キャッシュ を 維持 し て い れ ば 、 この 機能 を モジュール を 有効 性 を 引き出 す ため に 使 う こと が でき ま す --  つまり 、 try  文 を 使 え ば 、 必要 に 応 じ て テーブル が あ る か どう か を テスト し 、 その 初期 化 を 飛ば す こと が でき ま す : 
組み込 み モジュール や 動的 に ロード さ れ る モジュール を 再 ロード する こと は 、 不正 な や り 方 で は あ り ま せ ん が 、 一般 的 に それ ほど 便利 で は あ り ま せ ん 。  例外 は 
、 
で す 。 
これ は 導出 クラス の 場合 で も 同じ で す 。 
この 関数 は 多く の 型 に つ い て 、 eval ( )  に 渡 さ れ た とき に 同じ 値 を 持 つ よう な オブジェクト を 表 す 文字 列 を 生成 し よう と し ま す 。 
x  を 小数 点 以下  n  桁 で 丸め た 浮動 小数 点数 の 値 を 返 し ま す 。 
n  が 省略 さ れ る と 、 標準 の 値 は ゼロ に な り ま す 。  結果 は 浮動 小数 点数 で す 。 
値 は 最も 近 い  10  の マイナス  n  の 倍数 に 丸め られ ま す 。  二 つ の 倍数 と の 距離 が 等し い 場合 、 ゼロ から 離れ る 方向 に 丸め られ ま す ( 従 っ て 、 例えば  round ( 0 . 5 )  は  1 . 0  に な り 、 round ( - 0 . 5 )  は  - 1 . 0  に な り ま す ) 。 
集合 を 表現 する set  型 オブジェクト を 返 し ま す 。  要素 は  iterable  から 取得 し ま す 。 
要素 は 変更 不能 で な けれ ば な り ま せ ん 。 
集合 の 集合 を 表現 する に は 、 内 集合 は  frozenset  オブジェクト で な けれ ば な り ま せ ん 。 
iterable  を 指定 し な い 場合 、 新た な 空 の  set  型 オブジェクト 、 set ( [ ] )  を 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
getattr ( )  と 対 を な す 関数 で す 。 
引数 は それぞれ オブジェクト 、 文字 列 、 そして 任意 の 値 で す 。 
文字 列 は すでに 存在 する 属性 の 名前 で も 、 新た な 属性 の 名前 で も かま い ま せ ん 。 
この 関数 は 指定 し た 値 を 指定 し た 属性 に 関連 付け ま す が 、 指定 し た オブジェクト に お い て 可能 な 場合 に 限 り ま す 。 
例えば 、 setattr ( x , ' foobar' ,  123 )  は 
range ( start , stop ,  step )  で 指定 さ れ る インデクス の 集合 を 表 す スライス オブジェクト を 返 し ま す 。  range ( start ) スライス オブジェクト を 返 し ま す 。 
引数  start  および  step  は 標準 で は  None  で す 。 
スライス オブジェクト は 読み出し 専用 の 属性  start 、 stop および  step  を 持 ち 、 これ ら は 単に 引数 で 使 わ れ た 値  ( また は 標準 の 値 )  を 返 し ま す 。 
これ ら の 値 に は 、 その 他 の はっきり と し た 機能 は あ り ま せ ん ;  しかし ながら 、 これ ら の 値 は  Numerical  Python 
および その 他 の サード パーティ に よ る 拡張 で 利用 さ れ て い ま す 。 
スライス オブジェクト は 拡張 さ れ た インデクス 指定 構文 が 使 わ れ る 際 に も 生成 さ れ ま す 。 
例えば :  " a [ start :stop : step ] " や  " a [ start :stop , i ] "  で す 。 
function  の 静的 メソッド を 返 し ま す 。 
静的 メソッド は 暗黙 の 第 一 引数 を 受け取 り ま せ ん 。 
静的 メソッド の 宣言 は 、 以下 の よう に 書 き 慣わ さ れ ま す :  class  C :@staticmethoddef f ( arg 1 ,arg 2 , . . . ) :. . . 
@staticmethod  は 関数 デ コレータ 形式 で す 。 
オブジェクト を うま く 印字 可能 な 形 に 表現 し た もの を 含 む 文字 列 を 返 し ま す 。 
文字 列 に 対 し て は その 文字 列 自体 を 返 し ま す 。 
repr (object ) と の 違い は 、 str (object )  は 常 に  eval ( )  が 受理 でき る よう な 文字 列 を 返 そ う と 試み る わけ で は な い と い う 点 で す ; この 関数 の 目的 は 印字 可能 な 文字 列 を 返 す ところ に あ り ま す 。 
引数 が 与え られ な かっ た 場合 、 空 の 文字 列  ' ' を 返 し ま す 。 
文字 列 から な る シーケンス を 結合 する 高速 かつ 正し い 方法 は  ' '. join ( sequence )  で す 。  sum ( range ( n ) , m )  は  reduce (operator . add , range ( n ) , m )  と 同等 で す 。 
type  の 上位 クラス を 返 し ま す 。 
返 さ れ た 上位 クラス オブジェクト が 非 バインド の 場合 、 二 つ め の 引数 は 省略 さ れ ま す 。 
二 つ め の 引数 が オブジェクト の 場合 、 isinstance (obj ,type )  は 真 で な く て は な り ま せ ん 。 
super  は " super ( C , self ) ._ _ getitem__( name ) "  の よう な 明示 的 な ドット 表記 の 属性 参照 の 一部 と し て 使 わ れ て い る の で 注意 し て くださ い 。 
これ に 伴 っ て 、 super  は " super ( C , self ) [ name ] "  の よう な 文 や 演算 子 を 使 っ た 非 明示 的 な 属性 参照 向け に は 定義 さ れ て い な い の で 注意 し て くださ い 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
sequence  の 要素 と 要素 が 同じ で 、 かつ 順番 も 同じ に な る タプル を 返 し ま す 。  sequence  は シーケンス 、 反復 を サポート する コンテナ 、 および イテレータ オブジェクト を と る こと が でき ま す 。 
sequence  が すでに タプル の 場合 、 その タプル を 変更 せ ず に 返 し ま す 。 
例えば 、 tuple ( 'abc')  は  ( 'a ' , ' b ', ' c')  を 返 し 、 tuple ( [ 1 ,  2 ,  3 ] )  は  ( 1 ,  2 ,  3 )  を 返 し ま す 。 
object  の 型 を 返 し ま す 。 
返 さ れ る 値 は 型 
オブジェクト で す 。 
標準 モジュール types
は 、 組み込 み 名 を 持 っ て い な い 全て の 組み込 み 型 の 名前 を 定義 し て い ま す 。 
オブジェクト の 型 の テスト に は 、 組み込 み 関数  isinstance ( )  が 推奨 さ れ て い ま す 。 
Unicode  に おけ る コード が 整数  i  に な る よう な 文字  1  文字 から な る Unicode  文字 列 を 返 し ま す 。 
例えば 、 unichr ( 97 )  は 文字 列  u ' a ' を 返 し ま す 。 
この 関数 は  Unicode  文字 列 に 対 する ord ( )  の 逆 で す 。 
引数 は 両端 を 含め て  [ 0 . . 655 3 5 ]  の 範囲 で な けれ ば な り ま せ ん 。 
それ 以外 の 値 に 対 し て は  ValueError  が 送出 さ れ ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の モード の うち 一 つ を 使 っ て 、 object  の Unicode  文字 列 バージョン を 返 し ま す : もし  encoding  かつ \/ また は  errors  が 与え られ て い れ ば 、 unicode ( )  は  8  ビット の 文字 列 また は 文字 列 バッファ に な っ て い る オブジェクト を  encoding  の  codec  を 使 っ て デコード し ま す 。 encoding  パラメタ は エンコーディング 名 を 与え る 文字 列 で す ; 未知 の エンコーディング の 場合 、 LookupError  が 送出 さ れ ま す 。 
エラー 処理 は  errors  に 従 っ て 行 わ れ ま す ;  この パラメタ は 入力 エンコーディング 中 で 無効 な 文字 の 扱い 方 を 指定 し ま す 。 
もっと 詳し く い え ば 、  object が  Unicode  文字 列 か その サブ クラス なら 、 デコード 処理 を 一切 介 する こと な く  Unicode  文字 列 を 返 す と い う こと で す 。 __unicode__( )  メソッド を 提供 し て い る オブジェクト の 場合 、 unicode ( )  は この メソッド を 引数 なし で 呼び出 し て Unicode  文字 列 を 生成 し ま す 。 
それ 以外 の オブジェクト の 場合 、 8  ビット の 文字 列 か 、 オブジェクト の データ 表現  ( representation )  を 呼び出 し 、 その 後 デフォルト エンコーディング で 'strict ' モード の codec  を 使 っ て  Unicode  文字 列 に 変換 し ま す 。 
バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
バージョン  2 . 2  で  変更  さ れ た 仕様 :_ _unicode__( )  の サポート が 追加 さ れ ま し た 
引数 無し で は 、 現在 の ローカル シンボル テーブル に 対応 する 辞書 を 返 し ま す 。 
モジュール 、 クラス 、 また は クラス インスタンス オブジェクト ( また は その 他 __dict_ _ 属性 を 持 つ も の )  を 引数 と し て 与え た 場合 、 その オブジェクト の シンボル テーブル に 対応 する 辞書 を 返 し ま す 。 
返 さ れ る 辞書 は 変更 す べ き で は あ り ま せ ん :  変更 が 対応 する シンボル テーブル に もたら す 影響 は 未 定義 で す 。 
この 関数 は  range ( )  に 非常 に よく 似 て い ま す が 、 リスト の 代わり に  ` `xrange  オブジェクト ' ' を 返 し ま す 。 
この オブジェクト は 不 透明 な シーケンス 型 で 、 対応 する リスト と 同じ 値 を 持 ち ま す が 、 それ ら の 値 全て を 同時 に 記憶 し ま せ ん 。 
ragne ( )  に 対 する  xrange ( ) の 利点 は 微々 た る もの で す  ( xrange ( )  は 要求 に 応 じ て 値 を 生成 する から で す )  ただし 、 メモリ 量 の 厳し い 計算 機 で 巨大 な 範囲 の 値 を 使 う 時 や 、 ( ループ が よく  break  で 中断 さ れ る と い っ た よう に )  範囲 中 の 全て の 値 を 使 う と は 限 ら な い 場合 は その 限り で は あ り ま せ ん 。 
注意 : 
xrange ( )  は シンプル さ と 速度 の ため に 定義 さ れ て い る 関数 で あ り 、 その 実現 の ため に 実装 上 の 制限 を 課 し て い る 場合 が あ り ま す 。 
Python  の  C  実装 で は 、 全て の 引数 を ネイティブ の  C  long  型  ( Python  の " short "  整数 型 )  に 制限 し て お り 、 要素数 が ネイティブ の  C  long  型 の 範囲 内 に 収ま る よう 要求 し て い ま す 。 
この 関数 は タプル の リスト を 返 し ま す 。 
この リスト の  i  番 目 の タプル は 各 引数 の シーケンス 中 の  i  番 目 の 要素 を 含 み ま す 。  返 さ れ る リスト は 引数 の シーケンス の うち 長 さ が 最小 の もの の 長 さ に 切り詰め られ ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : これ まで は 、 zip ( )  は 少な く とも 一 つ の 引数 を 要求 し て お り 、 空 の リスト を 返 す 代わり に  TypeError  を 送出 し て い ま し た 
. . . 新た な モジュール を 生成 し ま せ ん 。 
この 関数 は 比較 利用 さ れ な い 方 な の で 、 将来 構文 に する か どう か は 保証 でき ま せ ん 。 
. . . 場合 、 システム の 標準 の 値 が 使 わ れ ま す 。 
現状 で は 、 setvbuf ( )  を 持 っ て い な い システム で は 、 バッファ サイズ を 指定 し て も 効果 は あ り ま せ ん 。 
バッファ サイズ を 指定 する ため の インタフェース は  setvbuf ( )  を 使 っ て は 行 わ れ て い ま せ ん 。  何 ら か の  I \/ O  が 実行 さ れ た 後 で 呼び出 さ れ る と コア ダンプ する こと が あ り 、 どの よう な 場合 に そう な る か を 決定 する 信頼 性 の あ る 方法 が な い から で す 。 
. . . に もたら す 影響 は 未 定義 で す 。 
現在 の 実装 で は 、 ローカル な 値 の バインディング は 通常 は 影響 を 受け ま せ ん が 、 ( モジュール の よう な ) 他 の スコープ から 取り出 し た 値 は 影響 を 受け る か も しれ ま せ ん 。 
また この 実装 は 変更 さ れ る か も しれ ま せ ん 。 
組み込 み 例外 名 、 関数 名 、 各種 定数 名 は 専用 の シンボル テーブル 中 に 存在 し て い ま す 。 
シンボル 名 を 参照 する とき この シンボル テーブル は 最後 に 参照 さ れ る の で 、 ユーザー が 設定 し た ローカル な 名前 や グローバル な 名前 に よ っ て オーバーライド する こと が でき ま す 。 
組み込 み 型 に つ い て は 参照 し やす い よう に ここ で 説明 さ れ て い ま す 。 
2 . 1  この 章 に あ る 表 で は 、 オペレータ の 優先 度 を 昇順 に 並べ て 表わ し て い て 、 同じ 優先 度 の オペレータ は 同じ 箱 に 入れ て い ま す 。 
同じ 優先 度 の 二 項 演算 子 は 左 から 右 へ の 結合 順序 を 持 っ て い ま す 。 
の 5 章 を ごらん くださ い 。 
. . . 組み込 み 型 に つ い て は 参照 し やす い よう に ここ で 説明 さ れ て い ま す 。 
2 . 1  ほとんど の 説明 で は そこ で 発生 し う る 例外 に つ い て は 説明 さ れ て い ま せ ん 。 
この マニュアル の 将来 の 版 で 訂正 さ れ る 予定 で す 。 
7 . 3 . 2 . 1  組み込 み  codec ( built - in codec) 
7 . 3 . 2  Unicode  オブジェクト  ( Unicode 
Python  で は 、 処理 速度 を 高め る ため に  C  で 書 か れ た 一 そろい の codec  を 提供 し て い ま す 。 
これ ら の  codec  は 全て 以下 の 関数 を 介 し て 直接 利用 でき ま す 。  以下 の  API  の 多く が 、 encoding  と errors  と い う 二 つ の 引数 を と り ま す 。 
これ ら の パラメタ は 、 組み込み の  Unicode  オブジェクト コンストラクタ で あ る  unicode ( )  に お け る 同名 の パラメタ と 同じ セマンティクス に な っ て い ま す 。 
encoding  を  NULL  に する と 、 デフォルト エンコーディング で あ る  ASCII を 使 い ま す 。 
ファイル システム に 関 する 関数 の 呼び出し で は 、 ファイル 名 に 対 する エンコーディング と し て Py _ FileSystemDefaultEncoding  を 使 わ ね ば な り ま せ ん 。 
以下 は 汎用  codec の  API  で す : 
何 ら か の エンコード 方式 で エンコード さ れ た 、  size  バイト の 文字 列  s  を デコード し て  Unicode  オブジェクト を 生成 し ま す 。 encoding  と errors  は 、 組み込 み 関数  unicode ( )  の 同名 の パラメタ と 同じ 意味 を 持 ち ま す 。 
使用 する  codec  の 検索 は 、  Python  の  codec レジストリ を 使 っ て 行 い ま す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
size  で 指定 さ れ た サイズ の  Py _ UNICODE  バッファ を エンコード し た  Python  文字 列 オブジェクト を 返 し ま す 。 encoding  および  errors  は Unicode  型 の  encode ( )  メソッド に 与え る 同名 の パラメタ と 同じ 意味 を 持 ち ま す 。 
使用 する  codec  の 検索 は 、  Python  の  codec レジストリ を 使 っ て 行 い ま す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
以下 は  UTF - 8  codec の  API で す : 
UTF - 8  で エンコード さ れ た  size  バイト の 文字 列  s  から Unicode  オブジェクト を 生成 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
consumed  が  NULL  の 場合 、 PyUnicode _DecodeUTF 8 ( ) と 同じ よう に 動作 し ま す 。  consumed  が  NULL  で な い 場合 、 PyUnicode _DecodeUTF 8 Stateful ( )  は 末尾 の 不 完全 な  UTF - 8  バイト 列 を エラー と みな し ま せ ん 。 
これ ら の バイト 列 は デコード さ れ ず 、 デコード さ れ た バイト 数 を  consumed  に 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を UTF - 8  で エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は  NULL  を 返 し ま す 。 
UTF - 8  で  Unicode  オブジェクト を エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
エラー 処理 は  ``strict ' ' で す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
以下 は  UTF - 16  codec の  API で す : 
UTF - 16  で エンコード さ れ た バッファ  s  から  size  バイト デコード し て 、 結果 を  Unicode  オブジェクト で 返 し ま す 。 errors は  ( NULL  で な い 場合 )  エラー 処理 方法 を 定義 し ま す 。 
デフォルト 値 は  ``strict ' ' で す 。  byteorder  が  NULL  で な い 場合 、 デコード 機構 は 以下 の よう に 指定 さ れ た バイト 整列  ( byteorder )  に 従 っ て デコード を 開始 し ま す : 
* byteorder  = =  - 1 :  リトル エンディアン * byteorder  = =  0 :  ネイティブ * byteorder  = =  1 :  ビッグ エンディアン 
その 後 、 入力 データ 中 に 見つか っ た 全て の バイト 整列 マーカ  ( byteorder mark ,  BOM )  に 従 っ て 、 バイト 整列 を 切り替え ま す 。 
BOM  は デコード 結果 の  Unicode  文字 列 中 に は コピー さ れ ま せ ん 。 
デコード を 完結 し た 後 、 * byteorder  は 入力 データ の 終点 現在 に お け る バイト 整列 に 設定 さ れ ま す 。  byteorder  が  NULL  の 場合 、  codec  は ネイティブ バイト 整列 の モード で 開始 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。  PyObject * 
consumed  が  NULL  の 場合 、 PyUnicode _DecodeUTF 16 ( ) と 同じ よう に 動作 し ま す 。 
consumed  が  NULL  で な い 場合 、 PyUnicode _DecodeUTF 16 Stateful ( )  は 末尾 の 不 完全 な  UTF - 16  バイト 列 ( 奇数 長 の バイト 列 や 分割 さ れ た サロゲート ペア )  を エラー と みな し ま せ ん 。 
これ ら の バイト 列 は デコード さ れ ず 、 デコード さ れ た バイト 数 を  consumed に 返 し ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。  PyObject * 
s  中 の  Unicode  データ を  UTF - 16  で エンコード し た 結果 が 入 っ て い る Python  文字 列 オブジェクト を 返 し ま す 。 
byteorder  が  0  で な い 場合 、 出力 は 以下 の バイト 整列 指定 に 従 っ て 書き出 さ れ ま す : 
byteorder  = =  - 1 :  リトル エンディアン byteorder  = =  0 :  ネイティブ  ( BOM  マーカ を 書き出 し ま す ) byteorder  = =  1 :  ビッグ エンディアン 
バイト オーダ が  0  の 場合 、 出力 結果 と な る 文字 列 は 常 に Unicode  BOM  マーカ  ( U + FEFF )  で 始ま り ま す 。 
それ 以外 の モード で は 、 BOM  マーカ を 頭 に つけ ま せ ん 。  Py _ UNICODE _ WIDE  が 定義 さ れ て い る 場合 、 単一 の Py _ UNICODE 値 は サロ ゲート ペア と し て 表現 さ れ る こと が あ り ま す 。 
Py _ UNICODE _ WIDE  が 定義 さ れ て い な けれ ば 、 各 Py _ UNICODE  値 は  UCS - 2  文字 と し て 表現 さ れ ま す 。  codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
ネイティブ バイト オーダ の  UTF - 16  で エンコード さ れ た  Python  文字 列 を 返 し ま す 。 
文字 列 は 常 に  BOM  マーカ から 始ま り ま す 。 
エラー 処理 は  ``strict ' ' で す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
以下 は `` Unicode  Escape' ' codec の  API で す : 
Unicode - Escape  で エンコード さ れ た  size  バイト の 文字 列  s  から Unicode  オブジェクト を 生成 し ま す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を Unicode - Escape  で エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は  NULL  を 返 し ま す 。 
Unicode - Escape  で  Unicode  オブジェクト を エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
エラー 処理 は  ``strict ' ' で す 。  codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
以下 は `` Raw Unicode  Escape' ' codec の  API で す : 
Raw - Unicode - Escape  で エンコード さ れ た  size  バイト の 文字 列  s  から Unicode  オブジェクト を 生成 し ま す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を Raw - Unicode - Escape  で エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は  NULL  を 返 し ま す 。 
Raw - Unicode - Escape  で  Unicode  オブジェクト を エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
以下 は  Latin - 1  codec の  API で す : Latin - 1  は 、  Unicode  序数 の 最初 の  256  個 に 対応 し 、 エンコード 時 に は この  256  個 だけ を 受理 し ま す 。 
Latin - 1  で エンコード さ れ た  size  バイト の 文字 列  s  から Unicode  オブジェクト を 生成 し ま す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を Latin - 1  で エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は  NULL  を 返 し ま す 。 
Latin - 1  で  Unicode  オブジェクト を エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
以下 は  ASCII  codec の  API で す : 7  ビット の  ASCII  データ だけ を 受理 し ま す 。 
その 他 の コード は エラー に な り ま す 。 
ASCII  で エンコード さ れ た  size  バイト の 文字 列  s  から Unicode  オブジェクト を 生成 し ま す 。 
codec  が 例外 を 送出 し た 場合 に は NULL  を 返 し ま す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を ASCII  で エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。 
ASCII  で  Unicode  オブジェクト を エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
以下 は  mapping  codec の  API で す : この  codec  は 、 多く の 様々 な  codec  を 実装 する 際 に 使 わ れ る と い う 点 で 特殊 な  codec  で す  ( 実際 、 encodings  パッケージ に 入 っ て い る 標準  codecs  の ほとんど は 、 この  codec  を 使 っ て い ま す ) 。  この  codec  は 、 文字 の エンコード や デコード に マップ 型  ( mapping ) を 使 い ま す 。 
この ため 、 codec  を 実現 する マップ 型 に 入れ る 必要 が あ る 対応 付け 関係 は 、 ある 文字 を 別 の コード 点 に 対応 付け る もの だけ で す 。 
エンコード さ れ た  size  バイト の 文字 列  s  から  mapping  に 指定 さ れ た オブジェクト を 使 っ て  Unicode  オブジェクト を 生成 し ま す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を mapping  に 指定 さ れ た オブジェクト を 使 っ て エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。  codec  が 例外 を 送出 し た 場合 に は  NULL  を 返 し ま す 。 
Unicode  オブジェクト を  mapping  に 指定 さ れ た オブジェクト を 使 っ て エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
以下 の  codec API  は  Unicode  から  Unicode  へ の 対応 付け を 行 う 特殊 な もの で す 。 
で  指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  バッファ を 、 文字 変換 マップ table  を 適用 し て 変換 し 、 変換 結果 を  Unicode オブジェクト で 返 し ま す 。 
対応 付け を 行 っ て い な い ( LookupError  を 起こ す よう な )  文字 序数 に 対 し て は 、 変換 は 行 わ ず 、 その まま コピー し ま す 。 
以下 は  MBCS  codec の  API  で す 。 
この  codec  は 現在 の ところ 、 Windows  上 だけ で 利用 でき 、 変換 の 実装 に は  Win 32  MBCS  変換 機構 ( Win 32  MBCS  converter )  を 使 っ て い ま す 。 
MBCS  ( また は  DBCS ) は エンコード 方式 の 種類  ( class )  を 表 す 言葉 で 、 単一 の エンコード 方式 を 表 す わけ で な な い の で 注意 し て くださ い 。 
利用 さ れ る エンコード 方式  (target encoding )  は 、  codec  を 動作 さ せ て い る マシン 上 の ユーザ 設定 で 定義 さ れ て い ま す 。 
MBCS  で エンコード さ れ た  size  バイト の 文字 列  s  から Unicode  オブジェクト を 生成 し ま す 。 
size  で 指定 さ れ た 長 さ を 持 つ  Py _ UNICODE  型 バッファ を MBCS  で エンコード し 、  Python  文字 列 オブジェクト に し て 返 し ま す 。 
MBCS  で  Unicode  オブジェクト を エンコード し 、 結果 を  Python  文字 列 オブジェクト と し て 返 し ま す 。 
18 . 10 . 1  Python バイトコード 命令 
現在 Python コンパイラ は 次 の バイトコード 命令 を 生成 し ま す 。 
STOP _ CODE  コンパイラ に end - of- code ( コード の 終わり ) を 知 ら せ ま す 。 
インタプリタ で は 使 わ れ ま せ ん 。 
top - of -stack  ( TOS ) ( スタック の 先頭 ) の 項目 を 取り除 き ま す 。 
スタック の 先頭 から 二 つ の 項目 を 入れ 替え ま す 。 
スタック の 先頭 に 参照 の 複製 を 作 り ま す 。 
TOS  =  + TOS を 実行 し ま す 。 
TOS = - TOS を 実行 し ま す 。 
TOS =  not  TOS を 実行 し ま す 。 
TOS =` TOS ` を 実行 し ま す 。 
TOS =~ TOS を 実行 し ま す 。 
TOS = iter ( TOS ) を 実行 し ま す 。 
二 項 演算 は スタック から スタック の 先頭 ( TOS ) と 先頭 から 二番 目 の スタック 項目 を 取り除 き ま す 。 
演算 を 実行 し 、 スタック へ 結果 を プッシュ し 戻 し ま す 。 
TOS  = TOS 1  * * TOS を 実行 し ま す 。 
TOS  = TOS 1  *  TOS を 実行 し ま す 。 
from _ _future__import division が 有効 で な い とき 、 TOS  = TOS 1  \/ TOS を 実行 し ま す 。 
TOS  = TOS 1  \/\/ TOS を 実行 し ま す 。 
from _ _future__import division が 有効 で な い とき 、 TOS  = TOS 1  \/ TOS を 実行 し ま す 。 
TOS  = TOS 1  % TOS を 実行 し ま す 。 
TOS  = TOS 1  +  TOS を 実行 し ま す 。 
TOS  = TOS 1  -  TOS を 実行 し ま す 。 
TOS  = TOS 1 [ TOS ] を 実行 し ま す 。 
TOS を 実行 し ま す 。 
TOS  = TOS 1  TOS を 実行 し ま す 。 
TOS  = TOS 1  ^ TOS を 実行 し ま す 。 
TOS  = TOS 1  | TOS を 実行 し ま す 。 
イン プレース 演算 は TOS と TOS 1 を 取り除 い て 結果 を スタック へ プッシュ する と い う 点 で 二 項 演算 と 似 て い ま す 。 
イン プレース に TOS  = TOS 1  * * TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  *  TOS を 実行 し ま す 。 
from _ _future__import division が 有効 で な い とき 、 イン プレース に TOS  = TOS 1  \/ TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  \/\/ TOS を 実行 し ま す 。 
from _ _future__import division が 有効 で な い とき 、 イン プレース に TOS  = TOS 1  \/ TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  % TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  +  TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  -  TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1 
イン プレース に TOS  = TOS 1  TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  ^ TOS を 実行 し ま す 。 
イン プレース に TOS  = TOS 1  | TOS を 実行 し ま す 。 
スライス 演算 は 三 つ まで の パラメータ を 取 り ま す 。 
TOS  = TOS [ : ] を 実行 し ま す 。 
TOS  = TOS 1 [ TOS : ] を 実行 し ま す 。 
TOS  = TOS 1 [ : TOS ] を 実行 し ま す 。 
TOS  = TOS 2 [ TOS 1 : TOS ] を 実行 し ま す 。 
スライス 代入 は さらに 別 の パラメータ を 必要 と し ま す 。 
どんな 文 も そう で あ る よう に 、 スタック に 何 も プッシュ し ま せ ん 。 
TOS [ : ]= TOS 1 を 実行 し ま す 。 
TOS 1 [ TOS : ] = TOS 2 を 実行 し ま す 。 
TOS 1 [ : TOS ] = TOS 2 を 実行 し ま す 。 
TOS 2 [ TOS 1 : TOS ] = TOS 3 を 実行 し ま す 。 
del TOS [ : ] を 実行 し ま す 。 
del TOS 1 [ TOS : ] を 実行 し ま す 。 
del TOS 1 [ : TOS ] を 実行 し ま す 。 
del TOS 2 [ TOS 1 : TOS ] を 実行 し ま す 。 
TOS 1 [ TOS ] = TOS 2 を 実行 し ま す 。 
del TOS 1 [ TOS ] を 実行 し ま す 。 
その 他 の 演算 。 
対話 モード の ため の 式文 を 実行 し ま す 。 
TOS は スタック から 取り除 か れ プリント さ れ ま す 。 
非 対話 モード に お い て は 、 式文 は POP _ STACK で 終了 し て い ま す 。 
sys . st dout に 束縛 さ れ た ファイル 互換 の オブジェクト へ TOS を プリント し ま す 。 
print 文 に 、 各 項目 に 対 する この よう な 命令 が 一 つ あ り ま す 。 
PRINT_ITEM と 似 て い ま す が 、 TOS から 二番 目 の 項目 を TOS に あ る ファイル 互換 オブジェクト へ プリント し ま す 。 
これ は 拡張 print 文 で 使 わ れ ま す 。 
sys . st dout へ 改行 を プリント し ま す 。 
これ は print 文 が コンマ で 終わ っ て い な い 場合 に print 文 の 最後 の 演算 と し て 生成 さ れ ま す 。 
PRINT_ NEW LINE と 似 て い ま す が 、 TOS の ファイル 互換 オブジェクト に 改行 を プリント し ま す 。 
break 文 が あ る ため ループ を 終了 し ま す 。 
continue 文 が あ る ため ループ を 継続 し ま す 。 
target は ジャンプ する アドレス で す ( アドレス は FOR_ ITER 命令 で あ る べ き で す ) 。  LOAD _ LOCALS 
現在 の スコープ の ローカル な 名前 空間 ( local s ) へ の 参照 を スタック に プッシュ し ま す 。  これ は クラス 定義 の ため の コード で 使 わ れ ま す :  クラス 本体 が 評価 さ れ た 後 、 locals は クラス 定義 へ 渡 さ れ ま す 。 
関数 の 呼び出 し 元 へ TOS を 返 し ま す 。 
TOS を ポップ し 、 それ を ジェネレータ から yield し ま す 。 
" _ " で 始ま っ て い な い すべて の シンボル を モジュール TOS から 直接 ローカル 名前 空間 へ ロード し ま す 。 
モジュール は すべて の 名前 を ロード し た 後 に ポップ さ れ ま す 。  この 演算 コード は from  module import * を 実行 し ま す 。 
exec  TOS 2 , TOS 1 , TOS を 実行 し ま す 。 
コンパイラ は 見つか ら な い オプション の パラメータ を None で 埋め ま す 。 
ブロック スタック から ブロック を 一 つ 取り除 き ま す 。 
フレーム ごと に ブロック の スタック が あ り 、 ネスト し た ループ 、 try 文 など を 意味 し て い ま す 。 
finally 節 を 終わ ら せ ま す 。 
インタプリタ は 例外 を 再び 発生 さ せ な けれ ば な ら な い か どう か 、 あるいは 、 関数 が 返り 外側 の 次 の ブロック に 続 く か どう か を 思い出 し ま す 。 
新し い クラス オブジェクト を 作成 し ま す 。 
TOS は メソッド 辞書 、 TOS 1 は 基底 クラス の 名前 の タプル 、 TOS 2 は クラス 名 で す 。 
次 の 演算 コード は すべて 引数 を 要求 し ま す 。 
引数 は より 重要 な バイト を 下位 に も つ 2 バイト で す 。 
del name を 実行 し ま す 。  ここ で 、 namei は コード オブジェクト の co_ names 属性 へ の インデックス で す 。 
TOS を count 個 の へ 個別 の 値 に 分け 、 右 から 左 に スタック に 置 か れ ま す 。 
count 個 の 項目 を 同じ 順番 を 保 ち ながら 複製 し ま す 。 
実装 上 の 制限 から 、 count は 1 から 5 の 間 ( 5 を 含 む ) で な けれ ば いけ ま せ ん 。 
TOS . name = TOS 1 を 実行 し ま す 。  ここ で 、 namei は co_ names に お け る 名前 の インデックス で す 。 
co_ names へ の インデックス と し て namei を 使 い 、 del TOS . name を 実行 し ま す 。 
STORE _ NAME と し て 機能 し ま す が 、 グローバル と し て 名前 を 記憶 し ま す 。 
DELETE _ NAME と し て 機能 し ま す が 、 グルーバル 名 を 削除 し ま す 。 
" co_ consts [ consti ] " を スタック に プッシュ し ま す 。 
" co_ names [ namei] " に 関連 付け られ た 値 を スタック に プッシュ し ま す 。 
スタック から count 個 の 項目 を 消費 する タプル を 作り出 し 、 でき た タプル を スタック に プッシュ し ま す 。 
BUILD _ TUPLE と し て 機能 し ま す が 、 リスト を 作り出 し ま す 。 
スタック に 新し い 空 の 辞書 オブジェクト を プッシュ し ま す 。 
引数 は 無視 さ れ 、 コンパイラ に よ っ て ゼロ に 設定 さ れ ま す 。 
TOS を getattr ( TOS ,  co_ names [ namei] ) と 入れ替え ま す 。 
ブール 演算 を 実行 し ま す 。 
演算 名 は cmp_op [opname ] に あ り ま す 。 
モジュール co_ names [ namei ] を インポート し ま す 。 
モジュール オブジェクト は スタック へ プッシュ さ れ ま す 。 
現在 の 名前 空間 は 影響 さ れ ま せ ん :  適切 な import 文 に 対 し て 、 それ に 続 く STORE _ FAST 命令 が 名前 空間 を 変更 し ま す 。 
属性 co_ names [ namei ] を TOS に 見つか る モジュール から ロード し ま す 。 
作成 さ れ た オブジェクト は スタック に プッシュ さ れ 、 その 後 STORE _ FAST 命令 に よ っ て 記憶 さ れ ま す 。 
バイトコード カウンタ を delta だけ 増加 さ せ ま す 。 
TOS が 真 なら ば 、 delta だけ バイトコード カウンタ を 増加 さ せ ま す 。 
TOS は スタック に 残 さ れ ま す 。 
TOS が 偽 なら ば 、 delta だけ バイトコード カウンタ を 増加 さ せ ま す 。 
TOS は 変更 さ れ ま せ ん 。 
バイトコード カウンタ を target に 設定 し ま す 。 
TOS は イテレータ で す 。 
その next ( ) メソッド を 呼び出 し ま す 。 
これ が 新し い 値 を 作り出 す なら ば 、 それ を ( その 下 に イテレータ を 残 し た まま ) スタック に プッシュ し ま す 。 
イテレータ が 尽き た こと を 示 し た 場合 は 、 TOS が ポップ さ れ ま す 。  そして 、 バイトコード カウンタ が delta だけ 増や さ れ ま す 。 
グルーバル 名 co_ names [ namei ] を スタック 上 に ロード し ま す 。 
ブロック スタック に ループ の ため の ブロック を プッシュ し ま す 。 
ブロック は 現在 の 命令 から delta バイト の 大き さ を 占め ま す 。 
try - except 節 から try ブロック を ブロック スタック に プッシュ し ま す 。 
delta は 最初 の except ブロック を 指 し ま す 。  SETUP _ FINALLY 
try - except 節 から try ブロック を ブロック スタック に プッシュ し ま す 。  delta は finally ブロック を 指 し ま す 。 
ローカル な co_ varnames [ var_num ] へ の 参照 を スタック に プッシュ し ま す 。 
TOS を ローカル な co_ varnames [ var_num ] の 中 に 保存 し ま す 。 
ローカル な co_ varnames [ var_num ] を 削除 し ま す 。 
セル と 自由 変数 記憶 領域 の スロット i に 含 ま れ る セル へ の 参照 を プッシュ し ま す 。 
i が co_cellvars の 長 さ より 小さ けれ ば 、 変数 の 名前 は co_cellvars [ i ] で す 。 
そう で な けれ ば 、 それ は co_free vars [ i - len ( co_cellvars) ] で す 。 
セル と 自由 変数 記憶 領域 の スロット i に 含 ま れ る セル を ロード し ま す 。 
セル が 持 つ オブジェクト へ の 参照 を スタック に プッシュ し ま す 。 
セル と 自由 変数 記憶 領域 の スロット i に 含 ま れ る セル へ TOS を 保存 し ま す 。 
この オペコード は 廃止 さ れ ま し た 。 
例外 を 発生 さ せ ま す 。  argc は raise 文 へ 与え る パラメータ の 数 を 0 から 3 の 範囲 で 示 し ま す 。 
ハンドラ は TOS 2 と し て トレース バック 、 TOS 1 と し て パラメータ 、 そして TOS と し て 例外 を 見つけ られ ま す 。 
関数 を 呼び出 し ま す 。 
argc の 低位 バイト は 位置 パラメータ を 示 し 、 高位 バイト は キー ワード パラメータ の 数 を 示 し ま す 。  オペコード は 最初 に キー ワード パラメータ を スタック 上 に 見つけ ま す 。 
それぞれ の キー ワード 引数 に 対 し て 、 その 値 は キー の 上 に あ り ま す 。 
スタック 上 の キー ワード パラメータ の 下 に 位置 パラメータ は あ り 、 先頭 に 最も 右 の パラメータ が あ り ま す 。 
スタック 上 の パラメータ の 下 に は 、 呼び出 す 関数 オブジェクト が あ り ま す 。 
新し い 関数 オブジェクト を スタック に プッシュ し ま す 。 
TOS は 関数 に 関連 付け られ た コード で す 。 
関数 オブジェクト は TOS の 下 に あ る argc デフォルト パラメータ を も つ よう に 定義 さ れ ま す 。 
新し い 関数 オブジェクト を 作り出 し 、 その func_closure スロット を 設定 し 、 それ を スタック に プッシュ し ま す 。 
TOS は 関数 に 関連 付け られ た コード で す 。  コード オブジェクト が N 個 の 自由 変数 を 持 っ て い る なら ば 、 スタック 上 の 次 の N 個 の 項目 は これ ら の 変数 に 対 する セル で す 。 
関数 は セル の 前 に あ る argc デフォルト パラメータ も 持 っ て い ま す 。 
スライス オブジェクト を スタック に プッシュ し ま す 。  argc は 2 あるいは 3 で な けれ ば な り ま せ ん 。 
組み込 み 関数 を 参照 し て くださ い 。 
大き すぎ て デフォルト の 二 バイト に 当てはめ る こと が でき な い 引数 を も つ あらゆる オペコード の 前 に 置 か れ ま す 。  ext は 二 つ の 追加 バイト を 保持 し 、 その 後ろ の オペコード の 引数 と 一緒 に な っ て 取 ら れ ま す 。 
それ ら は 四 バイト 引数 を 構成 し 、 ext は その 最 上位 バイト で す 。  CALL _ FUNCTION _ VAR 
関数 を 呼び出 し ま す 。  argc は CALL _ FUNCTION の よう に 解釈 実行 さ れ ま す 。 
スタック の 先頭 の 要素 は キー ワード 引数 辞書 を 含 ん で い おり 、 その 後 に 変数 引数 の タプル が 続 き 、 さらに 明示 的 な キー ワード と 位置 引数 が 続 き ま す 。 
7 . 5 . 8  弱 参照 オブジェクト  ( weak  reference 
この オブジェクト の 使用 法 に 関 する 情報 は 、 Python  インタプリタ の 拡張 と 埋め込 み  1 . 12  節 、 ` ` Providing  a C  API  for an  Extension  Module , ' ' を 参照 し て くださ い 。 
この  PyObject  の サブ タイプ は 不 透明 型 値  (opaque  value )  を 表現 し ま す 。  C  拡張 モジュール が  Python  コード から 不 透明 型 値 を  ( void *  ポインタ で )  他 の  C  コード に 渡 す 必要 が あ る とき に 便利 で す 。 
正規 の import  機構 を 使 っ て 動的 に ロード さ れ る モジュール 内 で 定義 さ れ て い る  C  API  に アクセス する ため に 、 ある モジュール 内 で 定義 さ れ て い る  C  関数 ポインタ を 別 の モジュール で も 利用 でき る よう に する ため に よく 使 わ れ ま す 。 
引数 が  PyCObject  の 場合 に 真 を 返 し ま す 。 
cobj  から  PyCObject  を 生成 し ま す 。 
関数  destr  が  NULL  で な い 場合 、 オブジェクト を 再 利用 する 際 に 呼び出 し ま す 。 
関数  destr  が  NULL  で な い 場合 、 オブジェクト を 再 利用 する 際 に 呼び出 し ま す 。  引数  desc  を 使 っ て 、 デストラクタ 関数 に 追加 の コール バック データ を 渡せ ま す 。 
PyCObject  オブジェクト  self  を 生成 する の に 用い た オブジェクト  void  *  を 返 し ま す 。 
PyCObject  オブジェクト  self  を 生成 する の に 用い た コール バック データ  void  *  を 返 し ま す 。 
CacheFTPHandler  オブジェクト は  FTPHandler  オブジェクト に 以下 の メソッド を 追加 し た もの で す : 
接続 の タイム アウト を  t  秒 に 設定 し ま す 。 
キャッシュ 付き 接続 の 最大 接続 数 を  m  に 設定 し ま す 。 
インスタンス が 関数 と し て  ` ` 呼 ば れ た ' '  際 に 呼び出 さ れ ま す ; この メソッド が 定義 さ れ て い る 場合 、 
x ( arg 1 ,arg 2 , . . . ) は 
x ._ _ call_ _( arg 1 ,arg 2 , . . . )  を 短 く 書 い た もの に な り ま す 。 
1 . 7  拡張 モジュール 関数 で の パラメタ 展開 
これ まで は 、 Python  から の  C  関数 の 呼び出し に 重点 を 置 い て 述べ て き ま し た 。  ところ で この 逆 :  C  から の  Python  関数 の 呼び出し も また 有用 で す 。 
とりわけ 、 いわゆる  ` ` コール バック ' '  関数 を サポート する よう な ライブラリ を 作成 する 際 に は この 機能 が 便利 で す 。 
ある  C  インタフェース が コール バック を 利用 し て い る 場合 、 同等 の 機能 を 提供 する  Python  コード で は 、 しばしば  Python  プログラマ に コール バック 機構 を 提供 する 必要 が あ り ま す ;  この とき 実装 で は 、 C  で 書 か れ た コール バック 関数 から  Python  で 書 か れ た コール パック 関数 を 呼び出 す よう に する 必要 が あ る で しょ う 。 
もちろん 、 他 の 用途 も 考え られ ま す 。  幸運 な こと に 、 Python  インタプリタ は 簡単 に 再帰 呼び出し でき 、 Python  関数 を 呼び出 す ため の 標準 インタフェース も あ り ま す 。 
( Python  パーザ を 特定 の 入力 文字 を 使 っ て 呼び出 す 方法 に つ い て 詳説 する つもり は あ り ま せ ん --  この 方法 に 興味 が あ る なら 、 Python  ソース コード の  Python\/pythonmain . c  に あ る 、 コマンドライン オプション - c  の 実装 を 見 て くださ い ) Python  関数 の 呼び出し は 簡単 で す 。 
まず 、 C  の コード に 対 し て コール バック を 登録 し よう と する  Python  プログラム は 、 何 ら か の 方法 で Python  の 関数 オブジェクト を 渡 さ ね ば な り ま せ ん 。 
この ため に 、 コール バック 登録 関数  ( また は その 他 の インタフェース )  を 提供 せ ね ば な り ま せ ん 。 
この コール バック 登録 関数 が 呼び出 さ れ た 際 に 、 引き渡 さ れ た  Python  関数 オブジェクト へ の ポインタ を グローバル 変数 に --  あるいは 、 どこ か 適切 な 場所 に - -  保存 し ま す ( 関数 オブジェクト を Py _ INCREF ( )  する よう よく 注意 し て くださ い ! ) 。 
例えば 、 以下 の よう な 関数 が モジュール の 一部 に な っ て い る こと で しょ う : 
static  PyObject* my_ callback  = NULL ;static  PyObject* my_ set_callback ( PyObject *dummy ,  PyObject* args) { PyObject * result  =  NULL ; PyObject* temp ;if  ( PyArg _ ParseTuple ( args,  " O: set_callback " , temp ) ) {if ( ! PyCallable_ Check ( temp ) ) { PyErr_ SetString ( PyExc_TypeError ,  " parameter  must  be  callable " ) ; return NULL ; } Py _ XINCREF ( temp ) ;\/* 新た な コール バック へ の 参照 を 追加  * \/ Py _ XDECREF ( my _ callback ) ;\/* 以前 の コール バック を 捨て る *\/my _ callback  =temp ;\/* 新た な コール バック を 記憶 *\/\/*" None "  を 返 す 際 の 定型 句 * \/ Py _ INCREF ( Py _ None ) ; result  = Py _ None ; } return result ; }
この 関数 は METH _ VARARGS  フラグ を 使 っ て インタプリタ に 登録 せ ね ば な り ま せ ん ;  METH _ VARARGS  フラグ に つ い て は 、 1 . 4  節 、 `` モジュール の メソッド テーブル と 初期 化 関数 ' ' で 説明 し て い ま す 。 
PyArg _ ParseTuple ( )  関数 と その 引数 に つ い て は 、 1 . 7  節 、  `` 拡張 モジュール 関数 で の パラメタ 展開 ' ' に 記述 し て い ま す 。  Py _ XINCREF ( )  および Py _ XDECREF ( )  は 、 オブジェクト に 対 する 参照 カウント を インクリメント \/ デクリメント する ため の マクロ で 、 NULL  ポインタ が 渡 さ れ て も 安全 に 操作 でき る 形式 で す  ( と は い え 、 上 の 流れ で は temp  が NULL  に な る こと は あ り ま せ ん ) 。 
この 関数 に は 二 つ の 引数 :  Python  関数 と  Python  関数 の 引数 リスト が あ り 、 いずれ も 任意 の  Python  オブジェクト を 表 す ポインタ 型 で す 。 
引数 リスト は 常 に タプル オブジェクト で な けれ ば な ら ず 、 その 長 さ は 引数 の 数 に な り ま す 。 
Python  関数 を 引数 なし で 呼び出 す の なら 空 の タプル を 渡 し ま す ;  単一 の 引数 で 関数 を 呼び出 す の なら 、 単 要素  ( singleton )  の タプル を 渡 し ま す 。  Py _ BuildValue ( )  の 書式 化 文字 列 中 に 、 ゼロ 個 また は 一 個 以上 の 書式 化 コード が 入 っ た 丸括弧 が あ る 場合 、 この 関数 は タプル を 返 し ま す 。 
以下 に 例 を 示 し ま す : 
int arg ; PyObject* arglist ; PyObject * result ; . . . arg =  123 ; . . . \/* ここ で コール バック を 呼 ぶ  *\/arglist  = Py _ BuildValue ( " ( i ) " , arg ) ; result  = PyEval _ CallObject ( my _ callback , arglist ) ; Py _ DECREF ( arglist ) ; 
PyEval _ CallObject ( )  は  Python  オブジェクト へ の ポインタ を 返 し ま す ;  これ は  Python  関数 から の 戻 り 値 に な り ま す 。 
PyEval _ CallObject ( )  は 、 引数 に 対 し て ` ` 参照 カウント 中立  ( reference - count - neutral ) ' ' で す 。 
上 の 例 で は タプル を 生成 し て 引数 リスト と し て 提供 し て お り 、 この タプル は 呼び出 し 直後 に  Py _ DECREF ( )  し て い ま す 。  PyEval _ CallObject ( )  は ` ` 新し い ' '  戻 り 値 を 返 し ま す :  戻り 値 が 表 す オブジェクト は 新た な オブジェクト か 、 既存 の オブジェクト の 参照 カウント を インクリメント し た もの で す 。 
従 っ て 、 この オブジェクト を グローバル 変数 に 保存 し た い の で な い かぎり 、 たとえ この 戻 り 値 に 興味 が な く て も  ( むしろ 、 そう で あ れ ば なおさら ! ) 何 がし か の 方法 で 戻 り 値 オブジェクト を  Py _ DECREF ( )  し な けれ ば な り ま せ ん 。  と は い え 、 戻 り 値 を Py _ DECREF ( )  する 前 に は 、 値 が  NULL で な い か チェック し て お く こと が 重要 で す 。 
もし  NULL なら 、 呼び出 し た Python  関数 は 例外 を 送出 し て 終了 さ せ られ て い ま す 。 
PyEval _ CallObject ( )  を 呼び出 し て い る コード 自体 も また Python  から 呼び出 さ れ て い る の で あ れ ば 、 今度 は  C  コード が 自分 を 呼び出 し て い る  Python  コード に エラー 標示 値 を 返 さ ね ば な り ま せ ん 。  それ に よ り 、 インタプリタ は スタック トレース を 出力 し たり 、 例外 を 処理 する ため の  Python  コード を 呼び出 し たり でき ま す 。 
例外 の 送出 が 不 可能 だっ たり 、 し た く な い の なら 、 PyErr_ Clear ( )  を 呼 ん で 例外 を 消去 し て お か ね ば な り ま せ ん 。 
例えば 以下 の よう に し ま す : 
if  ( result  = = NULL ) return NULL ;\/* エラー を 返 す *\/. . . use  result . . . Py _ DECREF ( result ) ; 
Python  コール バック 関数 を どんな インタフェース に し た い か に よ っ て は 、 引数 リスト を PyEval _ CallObject ( )  に 与え な けれ ば な ら な い 場合 も あ り ま す 。 
ある ケース で は 、 コール バック 関数 を 指定 し た の と 同じ インタフェース を 介 し て 、 引数 リスト も 渡 さ れ て い る か も しれ ま せ ん 。 
また 別 の ケース で は 、 新し い タプル を 構築 し て 引数 リスト を 渡 さ ね ば な ら な い か も しれ ま せ ん 。 
この 場合 最も 簡単 な の は Py _ BuildValue ( )  を 呼 ぶ や り 方 で す 。 
例えば 、 整数 の イベント コード を 渡 し た けれ ば 、 以下 の よう な コード を 使 う こと に な る で しょ う : 
PyObject* arglist ; . . . arglist  = Py _ BuildValue ( " ( l ) " , eventcode ) ; result  = PyEval _ CallObject ( my _ callback , arglist ) ; Py _ DECREF ( arglist ) ; if  ( result  = = NULL ) return NULL ;\/* エラー を 返 す *\/\/* 場合 に よ っ て は ここ で 結果 を 使 う か も ね  * \/ Py _ DECREF ( result ) ; 
" Py _ DECREF ( arglist ) "  が 呼び出し の 直後 、 エラー チェック より も 前 に 置 か れ て い る こと に 注意 し て くださ い !  また 、 厳密 に 言 え ば 、 この コード は 完全 で は あ り ま せ ん :  Py _ BuildValue ( )  は メモリ 不足 に おちい る か も しれ ず 、 チェック し て お く べ き で す 。 
呼び出 し  ( call )  は 、 呼び出し 可能 オブジェクト  ( callable object ,  例えば 関数 など )  を 、 引数 列 と とも に 呼び出 し ま す 。  引数 列 は 空 の シーケンス で も かま い ま せ ん : 
引数 式 は 全て 、 呼び出し を 試み る 前 に 値 評価 さ れ ま す 。 
仮 引数  ( formal  parameter )  リスト の 構文 に つ い て は 、 7 . 5  を 参照 し て くださ い 。  キー ワード 引数 が 存在 する 場合 、 以下 の よう に し て 最初 に 固定 引数 ( positional argument )  に 変換 さ れ ま す 。 
まず 、 値 の 入 っ て い な い スロット が 仮 引数 に 対 し て 生成 さ れ ま す 。 
N  個 の 固定 引数 が あ る 場合 、 固定 引数 は 先頭 の  N  スロット に 配置 さ れ ま す 。 
次 に 、 各 キー ワード 引数 に つ い て 、 識別 子 を 使 っ て 対応 する スロット を 決定 し ま す  ( 識別 子 が 最初 の 仮 引数 パラメタ 名 と 同じ なら 、 最初 の スロット を 使 う 、 と い っ た 具合 で す ) 。 
全て の 引数 が 処理 さ れ た ら 、 まだ 埋め られ て い な い スロット を それぞれ に 対応 する 関数 定義 時 の デフォルト 値 で 埋め ま す 。 
( デフォルト 値 は 、 関数 が 定義 さ れ た とき に 一 度 だけ 計算 さ れ ま す ;  従 っ て 、 リスト や 辞書 の よう な 変更 可能 な オブジェクト が デフォルト 値 と し て 使 わ れ る と 、 対応 する スロット に 引数 を 指定 し な い 限り 、 この オブジェクト が 全て の 呼び出 し から 共有 さ れ ま す ;  この よう な 状況 は 通常 避け る べ き で す 。 
) デフォルト 値 が 指定 さ れ て い な い 、 値 の 埋め られ て い な い スロット が 残 っ て い る 場合 、 TypeError  例外 が 送出 さ れ ま す 。 
この シーケンス の 要素 は 、 追加 の 固定 引数 の よう に 扱 わ れ ま す ; すなわち 、 固定 引数  x 1 , . . . , xN  と 、 y 1 , . . . , yM  に な る シーケンス  " expression "  を 使 っ た 場合 、 M + N  個 の 固定 引数  x 1 , . . . , xN , y 1 , . . . , yM を 使 っ た 呼び出し と 同じ に な り ま す 。  上記 の 仕様 に よ る 結果 と し て 、 " * expression "  構文 は たとえ キー ワード 引数  以降 に  あ っ て も 、 キー ワード 引数 以前 に  ( " * * expression "  引数 が あ れ ば さらに その 後 に -  下記 参照 )  処理 さ れ ま す 。 
従 っ て : 
def f ( a ,  b ) : . . .  print  a ,  b . . .  f ( b = 1 ,* ( 2 , ) ) 2  1  f( a = 1 ,* ( 2 , )) Traceback  ( most  recent  call last ) : File  " stdin " ,  line  1 , in ? TypeError :  f ( )  got  multiple values  for keyword argument  ' a ' f ( 1 ,* ( 2 , ) ) 1  2  と な り ま す 。 
明示 的 な キー ワード 引数 が  " expression "  内 の キー ワード と 重複 し た 場合 に は 、 TypeError  例外 が 送出 さ れ ま す 。 " * identifier "  や " * * identifier "  構文 を 使 っ た 仮 引数 は 、 固定 引数 スロット や キー ワード 引数 名 に する こと が でき ま せ ん 。 
ユーザ 定義 関数 の とき : 
関数 の コード ブロック に 引数 リスト が 渡 さ れ 、 実行 さ れ ま す 。 
コード ブロック は 、 まず 仮 引数 を 実 引数 に 結合  ( bind )  し ま す ;  この 動作 に つ い て は  7 . 5  で 記述 し て い ま す 。 
コード ブロック で  return  文 が 実行 さ れ る 際 に 、 関数 呼び出し の 戻り 値  ( return value )  が 決定 さ れ ま す 。 
組み込 み 関数 や 組み込 み メソッド の とき : 
結果 は インタプリタ に 依存 し ま す ;  組み込 み 関数 や 組み込 み メソッド の 詳細 は 、 
Python  ライブラリ リファレンス 
を 参照 し て くださ い 。 
クラス オブジェクト の とき : 
その クラス の 新し い インスタンス が 返 さ れ ま す 。 
クラス インスタンス メソッド の とき : 
対応 する ユーザ 定義 の 関数 が 呼び出 さ れ ま す 。  この とき 、 呼び出 し 時 の 引数 リスト より 一 つ 長 い 引数 リスト で 呼び出 さ れ ま す :  インスタンス が 引数 リスト の 先頭 に 追加 さ れ ま す 。 
クラス インスタンス の とき : 
クラス で __ call_ _( ) メソッド が 定義 さ れ て い な けれ ば な り ま せ ん ; __ call_ _( ) メソッド が 呼び出 さ れ た 場合 と 同じ 効果 を もたら しま す 。 
パーザ オブジェクト ( createparser ( ) で 返 さ れ ま す ) に は 以下 の メソッド が あ り ま す : 
パーザ に コール バック を 加え ま す 。 
デジタル オーディオ ストリーム の 8 つ の 異な る デー タ タイプ の ため の コール バック を パーザ は 持 っ て い ま す 。 
これ ら の タイプ の ため の 定数 は cd モジュール の レベル で 定義 さ れ て い ま す ( 上記 参照 ) 。 
コール バック は 以下 の よう に 呼び出 さ れ ま す : func ( arg ,type ,  data ) 、 ここ で arg は ユーザ が 与え た 引数 、 type は コール バック の 特定 の タイプ 、 data は この type の コール バック に 渡 さ れ る データ で す 。 
データ の タイプ は 以下 の よう に コール バック の タイプ に よ っ て 決ま り ま す : 
al . writesamps ( ) へその まま 渡 す こと の でき る 文字 列 。 
プログラム ( トラック ) ナンバー を 示 す 整数 。 
インデックス ナンバー を 示 す 整数 。 
プログラム の 時間 を 示 す 分 、 秒 、 フレーム から な る タプル 。 
絶対 的 な 時刻 を 示 す 分 、 秒 、 フレーム から な る タプル 。 
CD の カタログ ナンバー を 示 す 13 文字 の 文字 列 。 
録音 の ISRC 識別 番号 を 示 す 12 文字 の 文字 列 。 
文字 列 は 2 文字 の 国別 コード 、 3 文字 の 所有 者 コード 、 2 文字 の 年号 、 5 文字 の シリアル ナンバー から な り ま す 。 
CD の サブ コード データ の コントロール ビット を 示 す 整数 。 
パーザ を 消去 し て 、 使用 し て い た メモリ を 解放 し ま す 。 
この 呼び出し の あと 、 オブジェクト は 使用 でき ま せ ん 。 
オブジェクト へ の 最後 の 参照 が 削除 さ れ る と 、 自動 的 に この メソッド が 呼び出 さ れ ま す 。 
readda ( ) など から 返 さ れ た デジタル オーディオ CD の データ の 1 つ あるいは それ 以上 の フレーム を パース し ま す 。 
データ 内 に どう い う サブ コード が あ る か を 決定 し ま す 。 
その 前 の フレーム から サブ コード が 変化 し て い た ら 、 parseframe ( ) は 対応 する タイプ の コール バック を 起動 し て 、 フレーム 内 の サブ コード データ を コール バック に 渡 し ま す 。  C の 関数 と は 違 っ て 、 1 つ 以上 の デジタル オーディオ データ の フレーム を この メソッド に 渡 す こと が でき ま す 。 
指定 し た type の コール バック を 削除 し ま す 。 
サブ コード を 追跡 し て い る パーザ の フィールド を リセット し て 、 初期 状態 に し ま す 。  ディスク を 交換 し た あと 、 resetparser ( ) を 呼び出 さ な けれ ば な り ま せ ん 。 
` ` セル  ( cell ) ' ' オブジェクト は 、 複数 の スコープ から 参照 さ れ る 変数 群 を 実装 する ため に 使 わ れ ま す 。 
セル は 各 変数 に つ い て 作成 さ れ 、 各々 の 値 を 記憶 し ま す ;  この 値 を 参照 する 各 スタック フレーム に お け る ローカル 変数 に は 、 その スタック フレーム の 外側 で 同じ 値 を 参照 し て い る セル に 対 する 参照 が 入 り ま す 。 
セル で 表現 さ れ た 値 に アクセス する と 、 セル オブジェクト 自体 の 代わり に セル 内 の 値 が 使 わ れ ま す 。 
この セル オブジェクト を 使 っ た 間接 参照  ( dereference )  は 、 インタプリタ に よ っ て 生成 さ れ た バイトコード 内 で サポート さ れ て い る 必要 が あ り ま す ;  セル オブジェクト に アクセス し た 際 に 、 自動 的 に 間接 参照 は 起こ り ま せ ん 。 
上記 以外 の 状況 で は 、 セル オブジェクト は 役 に 立 た な い はず で す 。 
セル オブジェクト に 使 わ れ る  C  構造 体 で す 。 
セル オブジェクト に 対応 する 型 オブジェクト で す 。 
ob  が セル オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。 
値  ob  の 入 っ た 新た な セル オブジェクト を 生成 し て 返 し ま す 。  引数 を  NULL  に し て も かま い ま せ ん 。 
cell  の 内容 を 返 し ま す 。 
cell  の 内容 を 返 し ま す が 、 cell  が 非  NULL  で かつ セル オブジェクト で あ る か どう か チェック し ま せ ん 。 
セル オブジェクト  cell  の 内容 を  value  に 設定 し ま す 。 
成功 する と  0  を 返 し ま す 。 
セル オブジェクト  cell  の 値 を  value  に 設定 し ま す 。 
参照 カウント に 対 する 変更 は な く 、 安全 の ため の チェック は 何 も 行 い ま せ ん ;  cell  は 非 NULL  で な けれ ば な ら ず 、 かつ セル オブジェクト で な けれ ば な り ま せ ん 。 
1 1 . 2 . 2  cgi モジュール を 使 う 
CGI  スクリプト は 、 HTTP  サーバ に よ っ て 起動 さ れ 、 通常 は  HTML  の FORM  また は  ISINDEX  エレメント を 通 じ て ユーザ が 入力 し た 内容 を 処理 し ま す 。 
この モジュール で は 、 上記 の ケース の 違い に 注意 し つつ 、 Python  スクリプト に 対 し て は 単純 な インタフェース を 提供 し て い ま す 。 
最初 の セクション は 複数 の ヘッダ から な り 、 後続 する データ が どの よう な もの か を クライアント に 通知 し ま す 。 
最小 の ヘッダ セクション を 生成 する ため の  Python  の コード は 以下 の よう な もの で す : 
print  " Content- Type : text \/html "  #  以降 の データ が  HTML  で あ る こと を 示 す 行 print# ヘッダ 部 の 終了 を 示 す 空行 
二 つ 目 の セクション は 通常 、 ヘッダ や イン ライン イメージ 等 の 付属 し た テキスト を うま く フォーマット し て 表示 でき る よう に し た  HTML  で す 。  以下 に 単純 な  HTML  を 出力 する  Python  コード を 示 し ま す : 
1 1 . 2 . 7  CGI  スクリプト を  Unix 
これ は よく 知 ら れ て い る セキュリティ ホール で あ り 、 これ に よ っ て  Web  の どこ か に い る 悪賢 い ハッカー が 、 だま さ れ やす い  CGI  スクリプト に 任意 の シェル コマンド を 実行 さ せ て しま え ま す 。 
URL  の 一部 や フィールド 名 で さえ も 信用 し て は いけ ま せ ん 。  CGI  へ の リクエスト は あなた の 作 っ た フォーム から 送信 さ れ る と は 限 ら な い から で す ! 安全 な 方法 を と る ため に 、 フォーム から 入力 さ れ た 文字 を シェル に 渡 す 場合 、 文字 列 に 入 っ て い る の が 英数 文字 、 ダッシュ 、 アンダース コア 、 および ピリオド だけ か どう か を 確認 し て くださ い 。 
クラス 定義 は 、 クラス オブジェクト を 定義 し ま す  ( 3 . 2  節 参照 ) : 
クラス 定義 は 実行 可能 な 文 で す 。 
クラス 定義 で は 、 まず 継承 リスト が あ れ ば それ を 評価 し ま す 。 
継承 リスト の 各 要素 の 値 評価 結果 は クラス オブジェクト か 、 サブ クラス 可能 な クラス 型 で な けれ ば な り ま せ ん 。 
次 に クラス の スイート が 新た な 実行 フレーム 内 で 、 新た な ローカル 名前 空間 と 元々 の グローバル 名前 空間 を 使 っ て 実行 さ れ ま す  ( 4 . 1  節 を 参照 し て くださ い ) 。 
( 通常 、 スイート に は 関数 定義 のみ が 含 ま れ ま す )  クラス の スイート を 実行 し 終え る と 、 実行 フレーム は 無視 さ れ ま す が 、 ローカル な 名前 空間 は 保存 さ れ ま す 。 
次 に 、 基底 クラス の 継承 リスト を 使 っ て クラス オブジェクト が 生成 さ れ 、 ローカル な 名前 空間 を 属性 値 辞書 と し て 保存 し ま す 。 
最後 に 、 もと の ローカル な 名前 空間 に お い て 、 クラス 名 が この クラス オブジェクト に 束縛 さ れ ま す 。 
プログラマ の ため の 注釈 :  クラス 定義 内 で 定義 さ れ た 変数 は クラス 変数 で す ;  クラス 変数 は 全て の インスタンス 間 で 共有 さ れ ま す 。 
インスタンス 変数 を 定義 する に は 、 __init_ _( )  メソッド や 他 の メソッド 中 で 変数 に 値 を 与え ま す 。 
クラス 変数 も インスタンス 変数 も `` self . name ' '  表記 で アクセス する こと が でき ま す 。 
この 表記 で アクセス する 場合 、 インスタンス 変数 は 同名 の クラス 変数 を 隠蔽 し ま す 。 
変更 不能 な 値 を も つ クラス 変数 は 、 インスタンス 変数 の デフォルト 値 と し て 使え ま す 。  新形式 の クラス で は 、 デスク リプタ を 使 っ て インスタンス 変数 の 振舞い を 変更 でき ま す 。 
5  ドキュメント クラス  Python  ドキュメント で 利用 する ため 、 2 つ の  LaTeX  ドキュメント クラス が 定義 さ れ て い ま す 。 
manual  クラス は 、 章 単位 で 区分 する よう な 大きな ドキュメント の ため の クラス で す 。 
howto  クラス は より 小さな ドキュメント の ため の クラス で す 。  manual  ドキュメント は 大 規模 で 、 ほとんど の 標準 ドキュメント が 使 う クラス で す 。 
この ドキュメント クラス は 標準  LaTeX  の  report  クラス に 基づ い て い て 、 まるで 長 い 技術 的 報告 書 の よう に フォーマット さ れ ま す 。 
ま す 。 
Python  リファレンス マニュアル 
は  manual  ドキュメント の よ い 例 で す 。  また 、 
は 大 規模 な 文書 の 例 で す 。  howto  ドキュメント は より 短 く 、 manual  ドキュメント の よう な 大きな 構造 を 持 ち ま せ ん 。 
この クラス は 標準  LaTeX  の article  クラス に 基づ い て い て 、 Linux  Documentation  プロジェクト の `` HOWTO ' ' シリーズ の よう に フォーマット さ れ ま す 。 `` HOWTO ' ' シリーズ は もともと  LinuxDoc ソフトウェア を 使 っ て フォーマット を 行 っ て い ま す 。 
この ドキュメント クラス の 本来 の 目的 は 、  LDP  の  HOWTO  シリーズ と 同様 の 役割 を 果た す こと に あ り ま し た が 、 その 後 、 この クラス に は より 広 範囲 な 適用 性 が あ る と わか り ま し た 。 
この クラス は  ``how- to ' ' ドキュメント  ( この ドキュメント が その 一 例 で す ) や 、 小 規模 で 、 かなり 強 い 関連 性 で 結 ば れ た モジュール ライブラリ の リファレンス マニュアル に 用い ま す 。 
後者 の ドキュメント クラス の 例 に は 
が あ り ま す 。 
これ ら の ドキュメント は 、 大きな ドキュメント に お け る 章 一 つ 分 と だいたい 同じ 規模 で す 。 
4 . 9 . 1 . 1  Codec  オブジェクト 
4 . 9 . 1 . 2  StreamWriter  オブジェクト 
Codec  クラス は 以下 の メソッド を 定義 し ま す 。  これ ら の メソッド は 、 内部 状態 を 持 た な い エンコーダ \/ デコーダ 関数 の インタフェース を 定義 し ま す 。 
オブジェクト  input  エンコード し 、 ( 出力 オブジェクト ,  消費 し た  長 さ )  の タプル を 返 し ま す 。 
codecs は  Unicode  専用 で は あ り ま せ ん が 、 Unicode  の 文脈 で は 、 エンコーディング は  Unicode  オブジェクト を 特定 の 文字 集合 エンコーディング ( たとえば  cp 1252  や iso - 885 9 - 1 ) を 使 っ て 文字 列 オブジェクト に 変換 し ま す 。 
errors  は 適用 する エラー 処理 を 定義 し ま す 。 
'strict '  処理 が デフォルト で す 。  この メソッド は  Codec  に 内部 状態 を 保存 し て は な り ま せ ん 。 
オブジェクト  input  を デコード し 、 ( 出力 オブジェクト ,  消費 し た 長 さ )  の タプル を 返 し ま す 。 
Unicode  の 文脈 で は 、 デコード は 特定 の 文字 集合 エンコーディング で エンコード さ れ た 文字 列 を  Unicode  オブジェクト に 変換 し ま す 。 
input  は  bf _ getreadbuf  バッファ スロット を 提供 する オブジェクト で な けれ ば な り ま せ ん 。 
バッファ スロット を 提供 し て い る オブジェクト に は Python  文字 列 オブジェクト 、 バッファ オブジェクト 、 メモリ マップ ファイル が あ り ま す 。 
'strict '  が デフォルト 値 で す 。  この メソッド は 、 Codec  インスタンス に 内部 状態 を 保存 し て は な り ま せ ん 。 
StreamWriter  と  StreamReader  クラス は 、 新し い エンコーディング モジュール を 、 非常 に 簡単 に 実装 する の に 使用 でき る 、 一般 的 な インターフェイス 提供 し ま す 。 
実装 例 は  encodings .utf _ 8  を ご覧 くださ い 。 
本節 で は 、 型 強制  ( coercion )  に 関 する 規則 に つ い て 記述 し ま す 。 
プログラム 言語 が 進化 する に つれ 、 型 強制 規則 に つ い て 正確 に 記述 する の は 難し く な っ て ゆ き ま す ;  従 っ て 、 ある バージョン の あ る 実装 に つ い て 記述 する の は 望まし く あ り ま せ ん 。 
その 代わり に 、 型 強制 に 関 する 非 公式 的 な ガイドライン を 示 し て お き ま す 。 
Python  3 . 0 から は 、 型 強制 が サポート さ れ な く な る 予定 で す 。 
%  演算 子 の 左 被 演算 子 が 文字 列 か  Unicode  オブジェクト の 場合 、 型 強制 は 起き ず 、 文字 列 と し て の 書式 化 操作 が 呼び出 さ れ ま す 。 
型 強制 演算 の 定義 は もはや 推奨 さ れ て い ま せ ん 。 
事実 上 、  NotImplemented  を 返 す 演算 子 は 、 全く 実装 さ れ て い な い もの と し て 扱 わ れ ま す 。 
以下 の 説明 で は 、 _ _op__( )  および _ _rop__( )  は 、 演算 子 に 相当 する 一般 的 な メソッド 名 を 表 す ため に 使 わ れ ま す ; __iop_ _ は イン プレース 演算 子 を 表 し ま す 。 
例えば 、 演算 子  ` +' の 場合 、 _ _add__( )  および __radd__( )  が それぞれ 左右 の 被 演算 子 用 の 二 項 演算 子 と し て 使 わ れ 、 _ _i add_ _ が イン プレース 演算 用 の 演算 子 と し て 使 わ れ る 、 と い っ た 具合 で す 。 
オブジェクト  x  および  y  に 対 し て 、 まず 
x ._ _op__( y )  が 試 さ れ ま す 。 
この 演算 が 実装 さ れ て い な い か 、 NotImplemented  を 返 す 場合 、 次 に 
y ._ _rop_ _( x )  が 試 さ れ ま す 。 
この 演算 も 実装 さ れ て い な い か 、 NotImplemented  を 返 す なら 、  TypeError 例外 が 送出 さ れ ま す 。 
ただし 、 以下 の 例外 が あ る の で 参照 し て くださ い : 
前項 に 対 する 例外 :  左 被 演算 子 が 組み込 み 型 や 新形式 クラス の インスタンス で あ り 、 かつ 右 被 演算 子 が 左 被 演算 子 と 同じ クラス か 適切 な サブ クラス の インスタンス で あ る 場合 、 左 被 演算 子 の _ _op__( )  メソッド を 試 す  前 に  右 被 演算 子 の _ _rop__( )  が 試 さ れ ま す 。 
これ は 、 サブ クラス 側 で 二 項 演算 子 を 完全 に オーバライド でき る よう に する ため で す 。 
そう し な けれ ば 、 常 に 左 被 演算 子 の _ _op_ _ メソッド が 右 被 演算 子 を 受理 し て しま い ま す :  ある クラス の インスタンス が 被 演算 子 に な る と さ れ て い る 場合 、 その サブ クラス の インスタンス も また 受理 可能 だ から で す 。 
双方 の 被 演算 子 が 型 強制 を 定義 し て い る 場合 、 型 強制 は 被 演算 子 の 型 の _ _op__( )  や _ _rop__( )  メソッド が 呼び出 さ れ る 前 に 呼び出 さ れ 、 それ より 早 く な る こと は あ り ま せ ん 。 
型 強制 の 結果 、 型 強制 を 行 う こと に な っ た いずれ の 被 演算 子 と も 異な る 型 が 返 さ れ た 場合 、 返 さ れ た オブジェクト の 新た な 型 を 使 っ て 、 この 過程 が 部分 的 に 再度 行 わ れ ま す 。 
( ` + =' の よう な )  イン プレース 型 の 演算 子 を 用い る 際 、 左 被 演算 子 が _ _ iop__( )  を 実装 し て い れ ば 、 _ _iop__( )  が 呼び出 さ れ 、 型 強制 は 一切 行 わ れ ま せ ん 。 
演算 が _ _op__( )  かつ \/ また は _ _rop__( )  に 帰着 し た 場合 、 通常 の 型 強制 規則 が 適用 さ れ ま す 。 
y  に お い て 、  x  が 結合  ( concatenation )  演算 を 実装 し て い る シーケンス で あ れ ば 、 シーケンス の 結合 が 実行 さ れ ま す 。 
y  に お い て 、 一方 の 演算 子 が 繰り返 し  ( repeat )  演算 を 実装 し て い る シーケンス で あ り 、 かつ 他方 が 整数  ( int  また は  long )  で あ る 場合 、 シーケンス の 繰り返し が 実行 さ れ ま す 。 
(__eq_ _( )  など の メソッド で 実装 さ れ て い る )  拡張 比較 は 、 決して 型 強制 を 行 い ま せ ん 。 
(__cmp__( )  で 実装 さ れ て い る )  三 値 比較 ( three - way comparison )  は 、 他 の 二 項 演算 子 で 行 わ れ て い る の と 同じ 条件 で 型 強制 を 受け ま す 。 
現在 の 実装 で は 、 組み込 み 数値 型  int ,  long  および float  は 型 強制 を 行 い ま せ ん ;  一方 、 complex  は 型 強制 を 使 い ま す 。 
こう し た 違い は 、 これ ら の 型 を サブ クラス 化 する 際 に 顕在 化 し て き ま す 。 
その うち 、  complex  型 に つ い て も 型 強制 を 避け る よう 修正 さ れ る か も しれ ま せ ん 。 
これ ら の 型 は 全て 、 関数  coerce ( )  から 利用 する ため の __coerce_ _( )  メソッド を 実装 し て い ま す 。 
コメント は 文字 列 リテラル 内 に 入 っ て い な い ハッシュ 文字  ( #)  から 始ま り 、 同じ 物理 行 の 末端 で 終わ り ま す 。 
非 明示 的 な 行 継続 規則 が 適用 さ れ て い な い 限り 、 コメント は 論理 行 を 終端 さ せ ま す 。  コメント は 構文 上 無視 さ れ ま す ;  コメント は トークン に な り ま せ ん 。 
10 . 1  オブジェクト を ヒープ 上 に メモリ 確保 する 
Python  で は 、 オブジェクト 型 を 定義 する 上 で 数 多く の 構造 体 が 使 わ れ ま す 。 
PyObject  型 や  PyVarObject  型 も また 、 他 の 全て の  Python  オブジェクト を 定義 する 上 で 直接 的 ・ 間接 的 に 使 わ れ て い る マクロ を 使 っ て 定義 さ れ て い ま す 。 
全て の オブジェクト 型 は この 型 を 拡張 し た もの で す 。 
この 型 に は 、 ある オブジェクト に 対 する オブジェクト と し て の ポインタ を Python  から 扱 う 必要 が あ る 際 に 必要 な 情報 が 入 っ て い ま す 。 
通常 に  ` ` リリース さ れ て い る ' ' ビルド で は 、 この 構造 体 に は オブジェクト の 参照 カウント と 、 オブジェクト に 対応 する 型 オブジェクト だけ が 入 っ て い ま す 。 
PyObject_ HEAD  マクロ 展開 で 定義 さ れ て い る フィールド に 対応 し ま す 。 
PyObject  を 拡張 し て 、 ob _size  フィールド を 追加 し た もの で す 。 
この 構造 体 は 、 長 さ  ( length )  の 概念 を 持 つ オブジェクト だけ に 対 し て 使 い ま す 。 
この 型 が  Python\/C API  で 使 わ れ る こと は ほとんど あ り ま せ ん 。 
PyObject _ VAR _ HEAD  マクロ 展開 で 定義 さ れ て い る フィールド に 対応 し ま す 。 
PyObject  および  PyVarObject  の 定義 に は 以下 の マクロ が 使 わ れ て い ま す : 
PyObject  型 の フィールド 宣言 に 展開 さ れ る マクロ で す ;  可変 で な い 長 さ を 持 つ オブジェクト を 表現 する 新た な 型 を 宣言 する 場合 に 使 い ま す 。 
展開 に よ っ て どの フィールド が 宣言 さ れ る か は 、 Py _ TRACE _ REFS  の 定義 に 依存 し ま す 。 
デフォルト で は 、 Py _ TRACE _ REFS  は 定義 さ れ て お ら ず 、 PyObject_ HEAD  は 以下 の コード に 展開 さ れ ま す : 
Py _ TRACE _ REFS  が 定義 さ れ て い る 場合 、 以下 の よう に 展開 さ れ ま す : 
PyObject _ VAR _ HEAD  マクロ で す 。 
PyVarObject  型 の フィールド 宣言 に 展開 さ れ る マクロ で す ; インスタンス に よ っ て 可変 の 長 さ を 持 つ オブジェクト を 表現 する 新た な 型 を 宣言 する 場合 に 使 い ま す 。 
マクロ は 常 に 以下 の よう に 展開 さ れ ま す : 
マクロ 展開 結果 の 一部 に PyObject_ HEAD  が 含 ま れ て お り 、 PyObject_ HEAD  の 展開 結果 は Py _ TRACE _ REFS の 定義 に 依存 し ま す 。 
ほとんど の  Python  の 呼び出し 可能 オブジェクト を  C  で 実装 する 際 に 用い られ て い る 関数 の 型 で す 。  この 型 の 関数 は 二 つ の  PyObject *  型 パラメタ を と り 、 PyObject *  型 の 値 を 返 し ま す 。 
戻 り 値 を  NULL に する 場合 、 例外 を セット し て お か な けれ ば な り ま せ ん 。 
NULL で な い 値 を 返 す 場合 、 戻 り 値 は  Python  に 関数 の 戻 り 値 と し て 公開 さ れ る 値 と し て 解釈 さ れ ま す 。 
この 型 の 関数 は 新た な 参照 を 返 さ な けれ ば な り ま せ ん 。 
拡張 型 の メソッド を 記述 する 際 に 用い る 構造 体 で す 。 
この 構造 体 に は 4  つ の フィールド が あ り ま す : 
フィールド 
C  データ 型 
メソッド 名 
C  実装 へ の ポインタ 
呼び出し を どの よう に 行 う か を 示 す フラグ ビット 
docstring  の 内容 を 指 す ポインタ 
ml _meth  は  C  の 関数 ポインタ で す 。 
関数 は 別 の 型 で 定義 さ れ て い て も かま い ま せ ん が 、 常 に  PyObject *  を 返 し ま す 。 
関数 が  PyFunction  で な い 場合 、 メソッド テーブル 内 で キャスト を 行 う よう コンパイラ が 要求 する こと に な る で しょ う 。 
PyCFunction  で は 最初 の パラメタ が PyObject *  型 で あ る と 定義 し て い ま す が 、 固有 の  C  型 を  self  オブジェクト に 使 う 実装 は よく 行 わ れ て い ま す 。  ml _flags  フィールド は ビット フィールド で 、 以下 の フラグ が 入 り ま す 。 
個々 の フラグ は 呼び出 し 規約  ( calling  convention )  や 束縛 規約 ( binding  convention )  を 表 し ま す 。 
呼び出 し 規約 フラグ で は 、 METH _ VARARGS  および METH _KEYWORDS  を 組み合わせ られ ま す  ( ただし 、 METH _KEYWORDS  単体 の 指定 を 行 っ て も 
METH _ VARARGS  | METH _KEYWORDS  と 同じ な の で 注意 し て くださ い ) 。 
呼び出 し 規約 フラグ は 束縛 フラグ と 組み合わせ られ ま す 。 
PyCFunction  型 の メソッド で 典型 的 に 使 わ れ る 呼び出 し 規約 で す 。 
関数 は PyObject *  型 の 引数値 を 二 つ 要求 し ま す 。 
最初 の 引数 は メソッド の  self  オブジェクト で す ;  モジュール 関数 の 場合 、 Py _ InitModule 4 ( )  に 与え る こと に な る 値 が 入 り ま す ( NULL  に する と Py _ InitModule ( )  が 使 わ れ ま す ) 。 
第 二 の パラメタ  ( よく  args  と 呼 ば れ ま す )  は 、 全て の 引数 を 表現 する タプル オブジェクト で す 。 
パラメタ は 通常 、 PyArg _ ParseTuple ( )  や  PyArg_UnpackTuple で 処理 さ れ ま す 。 
この フラグ を 持 つ メソッド は PyCFunctionWithKeywords 型 で な けれ ば な り ま せ ん 。 
PyCFunctionWithKeywords  は 三 つ の パラメタ : self 、 args 、  および キー ワード 引数 全て から な る 辞書 、 を 要求 し ま す 。 
この フラグ は 通常 METH _ VARARGS  と 組み合わさ れ 、 パラメタ は PyArg _ ParseTupleAndKeywords ( )  で 処理 さ れ ま す 。 
引数 の な い メソッド は 、 METH _ NOARGS  フラグ を つけ た 場合 、 必要 な 引数 が 指定 さ れ て い る か を チェック し な く な り ま す 。 
こう し た メソッド は  PyCFunction  型 で な く て は な り ま せ ん 。 
オブジェクト の メソッド に 使 っ た 場合 、 第 一 の パラメタ は  self に な り 、 オブジェクト インスタンス へ の 参照 を 保持 する こと に な り ま す 。 
いずれ に せよ 、 第 二 の パラメタ は  NULL に な り ま す 。 
単一 の オブジェクト 引数 だけ を と る メソッド は 、 PyArg _ ParseTuple ( )  を 引数  " O "  に し て 呼び出 す 代わり に 、 METH _O  フラグ つき で 指定 でき ま す 。 
メソッド は PyCFunction  型 で 、 self  パラメタ と 単一 の 引数 を 表現 する PyObject *  パラメタ を 伴 い ま す 。 
この 呼び出 し 規約 は 撤廃 さ れ ま し た 。 
メソッド は PyCFunction  型 で な けれ ば な り ま せ ん 。 
第 二 引数 は 、 引数 が な い 場合 に は  NULL 、 単一 の 引数 の 場合 に は その 引数 オブジェクト 、 複数 個 の 引数 の 場合 に は 引数 オブジェクト から な る タプル で す 。 
この 呼び出 し 規約 を 使 う と 、 複数 個 の 引数 の 場合 と 、 単一 の タプル が 唯一 引数 の 場合 を 区別 でき な く な っ て しま い ま す 。 
以下 の 二 つ の 定数 は 、 呼び出 し 規約 を 示 す もの で は な く 、 クラス の メソッド と し て 使 う 際 の 束縛 方式 を 示 す もの で す 。 
モジュール に 対 し て 定義 さ れ た 関数 で 用い て は な り ま せ ん 。 
メソッド に 対 し て は 、 最大 で 一 つ しか この フラグ を セット でき ま せ ん 。 
メソッド の 最初 の 引数 に は 、 型 の インスタンス で は な く 型 オブジェクト が 渡 さ れ ま す 。 
この フラグ は  組み込 み 関数 classmethod ( )  を 使 っ て 生成 する の と 同じ クラス メソッド  ( class  method ) を 生成 する ため に 使 わ れ ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
メソッド の 最初 の 引数 に は 、 型 の インスタンス で は な く  NULL  が 渡 さ れ ま す 。 
この フラグ は 、 staticmethod ( )  を 使 っ て 生成 する の と 同じ 静的 メソッド  ( static  method ) を 生成 する ため に 使 わ れ ま す 。 
もう 一 つ の 定数 は 、 ある メソッド を 同名 の 別 の メソッド 定義 と 置き換え る か どう か を 制御 し ま す 。 
メソッド を 既存 の 定義 を 置き換え る 形 で ロード し ま す 。 
METH _ COEXIST  を 指定 し な けれ ば 、 デフォルト の 設定 に したが っ て 、 定義 が 重複 し な い よう スキップ し ま す 。 
スロット ラッパ は メソッド テーブル より も 前 に ロード さ れ る の で 、 例えば  sq_contains  スロット は ラップ し て い る メソッド __contains_ _( )  を 生成 し 、 同名 の PyCFunction  の ロード を 阻止 し ま す 。 
この フラグ を 定義 する と 、 PyCFunction  は ラッパ オブジェクト を 置き換え る 形 で ロード さ れ 、 スロット と 連立 し ま す 。 
PyCFunctions  の 呼び出し は ラッパ オブジェクト の 呼び出し より も 最適 化 さ れ て い る の で 、 こう し た 仕様 が 便利 に な り ま す 。 
C  で 実装 さ れ た 拡張 型 の 束縛 メソッド オブジェクト を 返 し ま す 。 
PyObject _ GenericGetAttr ( )  関数 を 使 わ な い tp _ getattro  や tp_ getattr  ハンドラ を 実装 する 際 に 便利 で す 。 
比較 演算 は 全て の オブジェクト で サポート さ れ て い ま す 。 
比較 演算 子 は 全て 同じ 演算 優先 度 を 持 っ て い ま す  ( ブール 演算 より 高 い 演算 優先 度 で す ) 。  比較 は 任意 の 形 で 連鎖 さ せ る こと が でき ま す ;  例えば 、 
は 
x  y  および  y  = z 
と 等価 で 、 違 う の は  y  が 一 度 だけ しか 評価 さ れ な い と い う こと で す  ( どちら の 場合 で も 、 
が 偽 と な っ た 場合 に は  z  は 評価 さ れ ま せ ん )  。 
以下 の テーブル に 比較 演算 を まとめ ま す : 
より 小さ い 
以下 
より 大き い 
以上 
等し い 
等し く な い 
同一 の オブジェクト で あ る 
同一 の オブジェクト で な い 
および  ! =  は 同じ 演算 子 を 別 の 書 き 方 に し た もの で す 。 
繰り返 し ま す が 、 その よう な オブジェクト も 任意 の 順番 付け を さ れ て い ま す が 、 それ は 一貫 し た もの で す 。 
被 演算 子 が 複素数 の 場合 、 演算 子  、 = 、  および  =  は 例外  TypeError  を 送出 し ま す 。 
ある クラス の インスタンス 間 の 比較 は 、 その クラス で __cmp__( ) メソッド が 定義 さ れ て い な い 限り 等し く な り ま せ ん 。 
この メソッド を 使 っ て オブジェクト の 比較 方法 に 影響 を 及ぼ す ため の 情報 に つ い て は 
を 参照 し て くださ い 。 
実装 に 関 する 注釈 :  数値 型 を 除 き 、 異な る 型 の オブジェクト は 型 の 名前 で 順番 付け さ れ ま す ;  適当 な 比較 を サポート し て い な い あ る 型 の オブジェクト は アドレス に よ っ て 順番 付け さ れ ま す 。  同じ 優先 度 を 持 つ 演算 子 と し て さらに  2  つ 、 シーケンス 型 で のみ " in " 
および  " not  in " 
が サポート さ れ て い ま す  ( 以下 を 参照 ) 。 
1 . 6  C  から  Python 
新し い 拡張 モジュール を 使え る よう に な る まで 、 まだ 二 つ の 作業 :  コンパイル と 、 Python  システム へ の リンク 、 が 残 っ て い ま す 。 
動的 読み込 み  ( dynamic loading )  を 使 っ て い る の なら 、 作業 の 詳細 は 自分 の システム が 使 っ て い る 動的 読み 込み の 形式 に よ っ て 変わ る か も しれ ま せ ん ;  詳し く は 、 拡張 モジュール の ビルド に 関 する 章  ( 3  章 )  や 、 Windows  に お け る ビルド に 関係 する 追加 情報 の 章 ( 4  章 )  を 参照 し て くださ い 。  動的 読み込み を 使え な かっ たり 、 モジュール を 常時  Python  インタプリタ の 一部 に し て お き た い 場合 に は 、 インタプリタ の ビルド 設定 を 変更 し て 再 ビルド し な けれ ば な ら な く な る で しょ う 。 
Unix で は 、 幸運 な こと に この 作業 は とても 単純 で す :  単に 自作 の モジュール ファイル  ( 例えば spammodule . c  )  を 展開 し た ソース 配布 物 の  Modules\/ ディレクトリ に 置 き 、  Modules \/ Setup . local  に 自分 の ファイル を 説明 する 以下 の 一行 : 
を 追加 し て 、 トップ レベル の ディレクトリ で  make  を 実行 し て 、 インタプリタ を 再 ビルド する だけ で す 。 
Modules\/ サブ ディレクトリ で も  make  を 実行 でき ま す が 、 前 も っ て  ` make  Makefile ' を 実行 し て  Makefilew 再 ビルド し て お か な けれ ば なら り ま せ ん 。  ( この 作業 は Setup  ファイル を 変更 する たび に 必要 で す 。 
) モジュール が 別 の ライブラリ と リンク さ れ て い る 必要 が あ る 場合 、 ライブラリ も 設定 ファイル に 列挙 でき ま す 。  例えば 以下 の よう に し ま す : 
Python compiler  パッケージ は  Python  の ソース コード を 分析 し たり Python  バイトコード を 生成 する ため の ツール で す 。 
compiler  は Python  の ソース コード から 抽象 的 な 構文 木 を 生成 し 、 その 構文 木 から Python  バイトコード を 生成 する ライブラリ を そなえ て い ま す 。 
パッケージ は 、 Python  で 書 か れ た Python  ソース コード から バイトコード へ の 変換 プログラム で す 。 
これ は 組み込み の 構文 解析 器 を つか い 、 そこ で 得 られ た 具体 的 な 構文 木 に 対 し て 標準 的 な 
モジュール を 使用 し ま す 。 
この 構文 木 から 抽象 構文 木  AST  ( Abstract  Syntax  Tree )  が 生成 さ れ 、 その 後  Python  バイトコード が 得 られ ま す 。  この パッケージ の 機能 は 、 Python  インタプリタ に 内蔵 さ れ て い る 組み込み の コンパイラ が すべて 含 ん で い る もの で す 。 
これ は その 機能 と 正確 に 同じ もの に な る よう 意図 し て つく ら れ て い ま す 。 
なぜ 同じ こと を する コンパイラ を もう ひと つ 作 る 必要 が あ る の で しょ う か ?  この パッケージ は いろいろ な 目的 に 使 う こと が でき る から で す 。 
パッケージ の いろいろ な コンポーネント が どの よう に 動作 する の か を 説明 し ま す 。 
その ため 説明 は リファレンス マニュアル 的 な もの と 、 チュートリアル 的 な 要素 が まざっ た もの に な っ て い ま す 。  以下 の モジュール は 
パッケージ の 一部 で す : 
Completer オブジェクト は 以下 の メソッド を 持 っ て い ま す : 
text の state 番 目 の 補完 候補 を 返 し ま す 。  もし text が ピリオド ( " . " ) を 含 ま な い 場合 、 
で 定義 さ れ て い る 名前 か 、 キー ワード  ( 
モジュール で 定義 さ れ て い る ) から 補完 さ れ ま す 。  ピリオド を 含 む 名前 の 場合 、 副 作用 を 出 さ ず に 名前 を 最後 まで 評価 し よう と し ま す ( 関数 を 明示 的 に 呼び出し は し ま せ ん が 、 _ _ getattr_ _( ) を 呼 ん で しま う こと は あ り ま す ) そして 、 dir ( ) 関数 で マッチ する 語 を 見つけ ま す 。 
7 . 2 . 4  浮動 小数 点 型 オブジェクト  ( floating  point 
7 . 2 . 5 . 1  C  構造 体 と し て の 複素数 
Python  の 複素 数 オブジェクト は 、  C  API  側 から 見 る と 二 つ の 別個 の 型 と し て 実装 さ れ て い ま す :  一方 は  Python  プログラム に 対 し て 公開 さ れ て い る  Python  の オブジェクト で 、 他方 は 実際 の 複素 数値 を 表現 する  C  の 構造 体 で す 。 
API  で は 、 これ ら 双方 を 扱 う 関数 を 提供 し て い ま す 。 
7 . 2 . 5 . 1  C  構造 体 と し て の 複素数 
7 . 2 . 5 . 2  Python  オブジェクト と し て の 複素数 型 
7 . 1  if  文 
7 .  複合 文  ( compound  statement ) 
複合 文 に は 、 他 の 文  ( の グループ )  が 入 り ま す ;  複合 文 は 、 中 に 入 っ て い る 他 の 文 の 実行 の 制御 に 何 ら か の や り 方 で 影響 を 及ぼ し ま す 。 
関数 と クラス 定義 も また 、 構文 法 的 に は 複合 文 で す 。  複合 文 は 、 一 つ また は それ 以上 の  ` 節  ( clause ) ' から な り ま す 。 
一 つ の 節 は 、 ヘッダ と  ` スイート  ( suite ) ' から な り ま す 。 
特定 の 複合 文 を 構成 する 節 の ヘッダ 部分 は 、 全て 同じ インデント レベル に な り ま す 。  各々 の 節 ヘッダ 行 は 一意 に 識別 さ れ る キー ワード から 始ま り 、 コロン で 終わ り ま す 。 
スイート は 、 ヘッダ の コロン の 後ろ に セミコロン で 区切 ら れ た 一 つ また は それ 以上 の 単純 文 を 並べ る か 、 ヘッダ 行 後 の インデント さ れ た 文 の 集まり で す 。 
後者 の 形式 の スイート に 限 り 、 ネスト さ れ た 複合 文 を 入れ る こと が でき ま す ;  以下 の 文 は 、 else  節 が どの  if 節 に 属 する か が はっきり し な い と い う 理由 から 不正 に な り ま す : 
また 、 この コンテキスト 中 で は 、 セミコロン は コロン より も 強 い 結合 を 表 す こと に も 注意 し て くださ い 。  従 っ て 、 以下 の 例 で は 、 print は 全て 実行 さ れ る か 、 さ れ な い か の どちら か で す : 
まとめ る と 、 以下 の よう に な り ま す : 
文 は 常 に  NEW LINE 
か 、 その 後 に DEDENT  が 続 い た もの で 終了 する こと に 注意 し て くださ い 。 
また 、 オプション の 継続 節 は 常 に あ る キー ワード から 始ま り 、 この キー ワード から 複合 文 を 開始 する こと は でき な い ため 、 曖昧 さ は 存在 し な い こと に も 注意 し て くださ い  ( Python  で は 、 ` ぶら下がり ( dangling ) else '  問題 を 、 ネスト さ れ た if  文 は インデント さ せ る こと 解決 し て い ま す ) 。 
以下 の 節 に お け る 文 法 規則 の 記述 方式 は 、 明確 さ の ため に 、 各節 を 別々 の 行 に 書 く よう に し て い ま す 。 
Distutils  の 使 い 方 は 、 モジュール 開発 者 と サード パーティ 製 の モジュール を インストール する ユーザ \/ 管理 者 の どちら に と っ て も きわめて 単純 で す 。 
開発 者 側 の や る べ き こと は  ( もちろん 、 しっかり し た 実装 で 、 詳し く 文書 化 さ れ 、 よく テスト さ れ た コード を 書 く こと は 別 と し て ! )  以下 の 項目 に な り ま す : 
setup  スクリプト  ( setup . py  と い う 名前 に する の が ならわし ) を 書 く 
( 必要 が あ れ ば )  setup  設定 ファイル を 書 く 
ソース コード 配布 物 を 作成 する 
( 必要 が あ れ ば )  一 つ また は それ 以上 の ビルド 済み  ( バイナリ )  形式 の 配布 物 を 作成 する 
これ ら の 作業 に つ い て は 、 いずれ も この ドキュメント で 扱 っ て い ま す 。  全て の モジュール 開発 者 が 複数 の 実行 プラットフォーム を 利用 でき る わけ で は な い の で 、 全て の プラットフォーム 向け に ビルド 済み の 配布 物 を 提供 し て もらえ る と 期待 する わけ に は い き ま せ ん 。 
で す から 、 仲介 を 行 う 人々 、 いわゆる  パッケージ 作成 者  ( packager )  が この 問題 を 解決 す べ く 立ち上が っ て くれ る こと が 望まし い で しょ う 。 
パッケージ 作成 者 は モジュール 開発 者 が リリース し た ソース コード 配布 物 を 、 一 つ また は それ 以上 の プラットフォーム 上 で ビルド し て 、 得 られ た ビルド 済み 配布 物 を リリース する こと に な り ま す 。 
したが っ て 、 ほとんど の 一般 的 な プラットフォーム に お け る ユーザ は 、 setup  スクリプト 一 つ 実行 せ ず 、 コード を 一行 たり とも コンパイル し な く て も 、 使 っ て い る プラットフォーム 向け の きわめて 普通 の 方法 で ほとんど の 一般 的 な  Python  モジュール 配布 物 を インストール でき る で しょ う 。 
7 . 1  基本 オブジェクト  ( fundamental object ) 
7 .  具象 オブジェクト  ( concreteobject )  レイヤ 
この 章 で は は 、 特定 の  Python  オブジェクト 型 固有 の 関数 に つ い て 述べ て い ま す 。 
これ ら の 関数 に 間違 っ た 方 の オブジェクト を 渡 す の は 良 い 考え で あ あ り ま せ ん ;  Python  プログラム から 何 ら か の オブジェクト を 受け取 っ た とき 、 その オブジェクト が 正し い 型 に な っ て い る か 確信 を もて な い の なら 、 まず 型 チェック を 行 わ な けれ ば な り ま せ ん ;  例えば 、 ある オブジェクト が 辞書 型 か 調べ る に は 、 PyDict _ Check ( )  を 使 い ま す 。 
この 章 は  Python  の オブジェクト 型 に お け る  ` ` 家計 図 ' '  に 従 っ て 構成 さ れ て い ま す 。 
警告 : この 章 で 述べ て い る 関数 は 、 渡 さ れ た オブジェクト の 型 を 注意 深 く チェック し は する もの の 、 多く の 関数 は 渡 さ れ た オブジェクト が 有効 な NULL  な の か 有効 な オブジェクト な の か を チェック し ま せ ん 。 
これ ら の 関数 に  NULL  を 渡 さ せ て しま う と 、 関数 は メモリ アクセス 違反 を 起こ し て 、 インタプリタ を 即座 に 終了 さ せ て しま う はず で す 。 
7 . 2 . 5 . 1  C  構造 体 と し て の 複素数 
7 . 3 . 2 . 2  メソッド および スロット 関数  ( slot function ) 
条件 変数 ( condition  variable )  は 常 に ある 種 の ロック に 関連 付け られ て い ま す ; 条件 変数 に 関連 付け る ロック は 明示 的 に 引き渡 し たり 、 デフォルト で 生成 さ せ たり でき ま す 。 
これ ら 三 つ の メソッド を 呼び出せ る の は 、 呼び出し 手 の スレッド が ロック を 獲得 し て い る 時 だけ で す 。 wait ( ) メソッド は 現在 の スレッド の ロック を 解放 し 、 他 の スレッド が 同じ 条件 変数 に 対 し て notify ( ) また は notifyAll ( )  を 呼び出 し て 現在 の スレッド を 起こ す まで ブロック し ま す 。 
一 度 起こ さ れ る と 、 再度 ロック を 獲得 し て 処理 を 戻 し ま す 。 
wait( )  に は タイム アウト も 設定 でき ま す 。  notify ( ) メソッド は 条件 変数 待ち の スレッド を 1 つ 起こ し ま す 。 
例えば 、 以下 の コード は 無 制限 の バッファ 容量 の とき の 一般 的 な 生産 者 - 消費 者 問題 で す : 
notify ( )  と notifyAll ( )  の どちら を 使 う か は 、 その 状態 の 変化 に 興味 を 持 っ て い る 待ち スレッド が 一 つ だけ な の か 、 あるいは 複数 な の か で 考え ま す 。 
例えば 、 典型 的 な 生産 者 - 消費 者 問題 で は 、 バッファ に  1  つ の 要素 を 加え た 場合 に は 消費 者 スレッド を  1  つ しか 起こ さ な く て かま い ま せ ん 。 
クラス Condition 
lock  を 指定 し て 、 None  の 値 に する 場合 、 Lock  また は RLock  オブジェクト で な けれ ば な り ま せ ん 。 
この 場合 、 lock  は 根底 に あ る ロック オブジェクト と し て 使 わ れ ま す 。  それ 以外 の 場合 に は 新し い  RLock  オブジェクト を 生成 し て 使 い ま す 。 
この メソッド を 呼び出 し て よ い の は 、 呼び出し 手 の スレッド が ロック を 獲得 し て い る とき だけ で す 。 
この メソッド は 根底 に あ る ロック を 解放 し 、 他 の スレッド が 同じ 条件 変数 に 対 し て notify ( ) また は notifyAll ( )  を 呼び出 し て 現在 の スレッド を 起こ す か 、 オプション の タイム アウト が 発生 する まで ブロック し ま す 。 
その 代わ り 、  ロック が 再帰 的 に 複数 回 獲得 さ れ て い て も 確実 に アン ロック を 行え る RLock  クラス の 内部 インタフェース を 使 い ま す 。  その 後 ロック を 再 獲得 する 時 に 、 もう 一 つ の 内部 インタフェース を 使 っ て ロック の 再帰 レベル を 復帰 し ま す 。 
何 ら か の 待機 中 スレッド が あ る 場合 、 その スレッド の 一 つ を 起こ し ま す 。 
待機 中 の スレッド が な けれ ば 何 も し ま せ ん 。  現在 の 実装 で は 、 待機 中 の メソッド を ただ 一 つ だけ 起こ し ま す 。 
と は い え 、 この 挙動 に 依存 する の は 安全 で は あ り ま せ ん 。 
将来 、 実装 の 最適 化 に よ っ て 、 複数 の スレッド を 起こ す よう に な る か も しれ な い から で す 。  注意 :  起こ さ れ た スレッド は 実際 に ロック を 再 獲得 でき る まで wait ( ) 呼出 し から 戻 り ま せ ん 。 
notify ( ) は ロック を 解放 し な い の で 、 notify ( )  呼び出し 手 は 明示 的 に ロック を 解放 せ ね ば な り ま せ ん 。 
この 条件 を 待 っ て い る すべて の スレッド を 起こ し ま す 。 
この メソッド は notify ( )  の よう に 動作 し ま す が 、 1  つ で は な く すべて の 待ち スレッド を 起こ し ま す 。 
6  拡張 モジュール の ビルド :  小技 と 豆 知識 
上 で 述べ た よう に 、  Distutils  設定 ファイル を 使 え ば 、 任意 の  Distutils  オプション に 対 し て 個人 的 な 設定 や サイト 全体 の 設定 を 記録 でき ま す 。 
すなわち 、 任意 の コマンド の 任意 の オプション を 二 つ か 三 つ  ( プラットフォーム に よ っ て 異な り ま す )  の 設定 ファイル に 保存 でき 、 コマンドライン を 解釈 する 前 に オプション を 問い合わせ さ せ る よう に でき ま す 。 
つまり 、 設定 ファイル は デフォルト の 値 を 上書き し 、 さらに コマンドライン 上 で 与え た 値 が 設定 ファイル の 内容 を 上書き する わけ で す 。 
さらに 、 複数 の 設定 ファイル が 適用 さ れ る と 、 ` ` 先 に ' '  適用 さ れ た ファイル に 指定 さ れ て い た 値 は  ` ` 後 に ' '  適用 さ れ た ファイル 内 の 値 で 上書き さ れ ま す 。 
設定 ファイル の 名前 と 場所 は 、 非常 に わずか で す が プラットフォーム 間 で 異な り ま す 。 
Unix で は 、 三 種類 の 設定 ファイル は 以下 の よう に な り ま す ( 処理 さ れ る 順 に 並 ん で い ま す ) : 
設定 ファイル の タイプ 
場所 と ファイル 名 
Windows  で は 設定 ファイル は 以下 の よう に な り ま す : 
Mac  OS  で は 以下 の よう に な り ま す : 
厳密 に 言 え ば 、 システム 全体 向け の 設定 ファイル は 、  Distutils が インストール さ れ て い る ディレクトリ に な り ま す ; Unix の  Python  1 . 6  以降 で は 、 表 の 通り の 場所 に な り ま す 。 
Python  1 . 5 . 2  で は 、  Distutils  は 通常 
prefix \/ lib\/python 1 . 5 \/ site - packages\/distutils に インストール さ れ る ため 、  Python  1 . 5 . 2  で は 設定 ファイル を そこ に 置 か な けれ ば な り ま せ ん 。 
Unix で は 、 環境 変数  HOME  が 定義 さ れ て い な い 場合 、 標準 モジュール 
の getpwuid ( )  関数 を 使 っ て ユーザ の ホーム ディレクトリ を 決定 し ま す 。 
現在 の ディレクトリ  ( 通常 は  setup  スクリプト が あ る 場所 )  で す 。 
( 注記  ( 1 )  も 参照 し て くださ い )  Python  1 . 6  および それ 以降 の バージョン で は 、  Python  の デフォルト の ` ` インストール プレフィクス ' ' は  C : Python  な の で 、 システム 設定 ファイル は 通常 C : PythonLibdistutilsdistutils . cfg  に な り ま す 。 
Python  1 . 5 . 2  で は デフォルト の プレフィクス は  C : ProgramFilesPython で あ り 、 Distutils  は 標準 ライブラリ の 一部 で は あ り ま せ ん - -  従 っ て 、 システム 設定 ファイル は 、  Windows  用 の 標準 の  Python  1 . 5 . 2  で は C : ProgramFilesPythondistutilsdistutils . cfg  に な り ま す 。 
Windows  で は 、 環境 変数  HOME  が 設定 さ れ て い な い 場合 、 個人 用 の 設定 ファイル は どこ に も な く 、 使 わ れ る こと も あ り ま せ ん 。 
( 言い換え れ ば 、  Windows  で の  Distutils  は ホーム ディレクトリ が どこ に あ る か 一切 推測 し よう と し な い と い う こと で す 。 ) 
( 注釈  ( 1 )  と  ( 4 )  も 参照 し て くださ い )  デフォルト の インストール プレフィクス は 単に  Python :  な の で 、 Python  1 . 6  以降 で は 、 通常 は  Python : Lib : distutils : distutils . cfg に な り ま す 。 
Distutils  設定 ファイル は 、 全て 同じ 構文 を し て い ま す 。 
設定 ファイル は セクション で グループ 分け さ れ て い ま す 。 
各  Distutils  コマンド ごと に セクション が あ り 、 それ に 加え て 全て の コマンド に 影響 する グローバル オプション を 設定 する ため の global  セクション が あ り ま す 。 
各 セクション に は option = value  の 形 で 、 一行 あたり 一 つ の オプション を 指定 し ま す 。  例えば 、 以下 は 全て の コマンド に 対 し て デフォルト で メッセージ を 出 さ な い よう 強制 する ため の 完全 な 設定 ファイル で す : 
この 内容 の ファイル が システム 全体 用 の 設定 ファイル と し て インストール さ れ て い れ ば 、 その システム の 全て の ユーザ に よ る 全て の  Python  モジュール 配布 物 に 対 する 処理 に 影響 し ま す 。 
ファイル が  ( 個人 用 の 設定 を サポート し て い る システム で )  個人 用 の 設定 ファイル と し て インストール さ れ て い れ ば 、 その ユーザ が 処理 する モジュール 配布 物 に のみ 影響 し ま す 。  この 内容 を 特定 の モジュール 配布 物 の  setup . cfg  と し て 使 え ば 、 その 配布 物 だけ に 影響 し ま す 。 
以下 の よう に し て 、 デフォルト の ` ` ビルド ベース ' ' ディレクトリ を オーバライド し たり 、 build *  コマンド が 常 に 強制 的 に リビルド を 行 う よう に も でき ま す : 
この 設定 は 、 コマンドライン 引数 の 
pythonsetup . pybuild--build- base=blib -- force  に 対応 し ま す 。 
ただし 、 後者 で は コマンドライン 上 で  build  コマンド を 含め て 、 その コマンド を 実行 する よう 意味 し て い る ところ が 違 い ま す 。 
特定 の コマンド に 対 する オプション を 設定 ファイル に 含め る と 、 この よう な 関連 付け の 必要 は なくな り ま す ; ある コマンド が 実行 さ れ る と 、 その コマンド に 対 する オプション が 適用 さ れ ま す 。 
( また 、 設定 ファイル 内 から オプション を 取得 する よう な 他 の コマンド を 実行 し た 場合 、 それ ら の コマンド も また 設定 ファイル 内 の 対応 する オプション の 値 を 使 い ま す 。  ) ある コマンド に 対 する オプション の 完全 な リスト は 、 例えば 以下 の よう に 、 - -help  を 使 っ て 調べ ま す : 
グローバル オプション の 完全 な リスト を 得 る に は 、 コマンド を 指定 せ ず に - - help  オプション を 使 い ま す : 
`` Python  モジュール の 配布 ' ' マニュアル の 、 ` ` リファレンス マニュアル ' ' の 節 も 参照 し て くださ い 。 
6  拡張 モジュール の ビルド :  小技 と 豆 知識 
1 . 2 . 5  設定 を 行な う  MacPython  配布 物 に は 、 EditPythonPrefs  と い う アプレット が つ い て き ま す 。 
この アプレット を 使 う と 、  MacPython  の 環境 を カスタマイズ し て 、 自分 の 作業 方法 に あわせ る 手助け を し て くれ ま す 。 
Interactive Console クラス は InteractiveInterpreter の サブ クラス で す 。  以下 の 追加 メソッド だけ で な く 、 インタプリタ オブジェクト の すべて の メソッド も 提供 し ま す 。 
対話 的 な Python コンソール を そっくり に エミュレート し ま す 。 
その 行 は バッファ へ 追加 さ れ 、 ソース と し て 連結 さ れ た 内容 が 渡 さ れ インタプリタ の runsource ( ) メソッド が 呼び出 さ れ ま す 。 
コマンド が 実行 さ れ た か 、 有効 で あ る こと を これ が 示 し て い る 場合 は 、 バッファ は リセット さ れ ま す 。  そう で な けれ ば 、 コマンド が 不 完全 で 、 その 行 が 付加 さ れ た 後 の まま バッファ は 残 さ れ ま す 。 
さらに 入力 が 必要 なら ば 、 戻 り 値 は True で す 。  その 行 が あ る 方法 で 処理 さ れ た なら ば 、 False で す ( これ は runsource ( ) と 同じ で す ) 。 
入力 バッファ から 処理 さ れ て い な い ソース テキスト を 取り除 き ま す 。 
プロンプト を 書き込 み 、 一行 を 読み込 み ま す 。 
返 る 行 は 末尾 に 改行 を 含 み ま せ ん 。 
ユーザ が EOF キー シーケンス を 入力 し た とき は 、 EOFError を 発生 さ せ ま す 。 
基本 実装 で は 、 組み込 み 関数 raw _ input ( ) を 使 い ま す 。  サブ クラス は これ を 異な る 実装 と 置き換え る か も しれ ま せ ん 。 
ContentHandler  は アプリケーション 側 で サブ クラス 化 し て 利用 する こと が 前提 に な っ て い ま す 。 
パーサ は 入力 ドキュメント の イベント に よ り 、 それぞれ に 対応 する 以下 の メソッド を 呼び出 し ま す 。 
アプリケーション に ドキュメント ・ イベント の 発生 位置 を 通知 する ため に パーサ から 呼び出 さ れ ま す 。 
典型 的 な 利用 方法 と し て は 、 アプリケーション 側 で この 情報 を 使 い 独自 の エラー を 発生 さ せ る こと ( 文字 コンテンツ が アプリケーション 側 で 決め た 規則 に 沿 っ て い な い 場合 等 ) が あげ られ ま す 。 
しかし ロケータ が 返 す 情報 は 検索 エンジン など で 利用 する もの と し て は おそらく 不 充分 で しょ う 。  ロケータ が 正し い 情報 を 返 す の は 、 インターフェース から イベント の 呼出し が 実行 さ れ て い る 間 だけ で す 。 
それ 以外 の とき は 使用 す べ き で あ り ま せ ん 。 
ドキュメント の 開始 通知 を 受け取 り ま す 。  SAX  パーサ は この インターフェース や DTDHandler  の どの メソッド ( setDocumentLocator ( ) を 除 く ) より も 先 に この メソッド を 一 度 だけ 呼び出 し ま す 。 
ドキュメント の 終了 通知 を 受け取 り ま す 。  SAX  パーサ は この メソッド を 一 度 だけ 、 パース 過程 の 最後 に 呼び出 し ま す 。 
パーサ は ( 回復 不能 な エラー で ) パース 処理 を 中断 する か 、 あるいは 入力 の 最後 に 到達 する まで この メソッド を 呼び出 し ま せ ん 。 
プリ フィックス と  URI  の 名前 空間 の 関連 付け を 終了 し ま す 。  詳し く は  startPrefix Mapping ( )  を 参照 し て くださ い 。 
この イベント は 常 に 対応 する  endElement ( )  の 後 で 発生 し ま す が 、 複数 の  endPrefix Mapping ( )  イベント の 順序 は 特に 保証 さ れ ま せ ん 。 
非 名前 空間 モード で 要素 の 開始 を 通知 し ま す 。  name  パラー メータ に は 要素 型 の  raw  XML  1 . 0 名 を 文字 列 と し て 、 attrs  パラメータ に は 要素 の 属性 を 保持 する 
Attributes  インターフェース  オブジェクト を それぞれ 指定 し ま す 。 
attrs  と し て 渡 さ れ た オブジェクト は パーサ で 再 利用 する こと も 可能 で す が 、 属性 の コピー を 保持 する ため に これ を 参照 し 続け る の は 確実 な 方法 で は あ り ま せ ん 。 
属性 の コピー を 保持 し た い とき は  attrs  オブジェクト の  copy ( )  メソッド を 用い て くださ い 。 
非 名前 空間 モード で 要素 の 終了 を 通知 し ま す 。  name  パラメータ に は  startElement ( )  イベント 同様 の 要素 型名 を 指定 し ま す 。 
名前 空間 モード で 要素 の 開始 を 通知 し ま す 。  name  パラー メータ に は 要素 型 を  ( uri, localname )  の タプル と し て 、 qname  パラメータ に は ソース ・ ドキュメント で 用い られ て い る  raw  XML  1 . 0 名 、 attrs  に は 要素 の 属性 を 保持 する 
AttributesNS  インターフェース  の インスタンス を それぞれ 指定 し ま す 。 
要素 に 関連 付け られ た 名前 空間 が な い とき は 、 name  コンポーネント の  uri が  None  に な り ま す 。 
attrs  と し て 渡 さ れ た オブジェクト は パーサ で 再 利用 する こと も 可能 で す が 、 属性 の コピー を 保持 する ため に これ を 参照 し 続け る の は 確実 な 方法 で は あ り ま せ ん 。 
属性 の コピー を 保持 し た い とき は  attrs  オブジェクト の  copy ( )  メソッド を 用い て くださ い 。  feature_ namespace _ prefixes  機能 が 有効 に な っ て い な けれ ば 、 パーサ で  qname  を  None  に セット する こと も 可能 で す 。 
文字 データ の 通知 を 受け取 り ま す 。  パーサ は 文字 データ の チャンク ごと に この メソッド を 呼び出 し て 通知 し ま す 。 
SAX  パーサ は 一連 の 文字 データ を 単一 の チャンク と し て 返 す 場合 と 複数 の チャンク に 分け て 返 す 場合 が あ り ま す が 、 ロケータ の 情報 が 正し く 保 た れ る よう に 、 一 つ の イベント の 文字 データ は 常 に 同じ 外部 エンティティ の もの で な けれ ば な り ま せ ん 。 
content  は ユニ コード 文字 列 、 バイト 文字 列 の どちら で も かま い ま せ ん が 、 expat  リーダ ・ モジュール は 常 に ユニ コード 文字 列 を 生成 する よう に な っ て い ま す 。 
注意 : Python  XML  SIG  が 提供 し て い た 初期  SAX  1  で は 、 この メソッド に もっと  JAVA  風 の インターフェース が 用い られ て い ま す 。 
しかし  Python  で 採用 さ れ て い る 大半 の パーサ で は 古 い インターフェース を 有効 に 使 う こと が でき な い ため 、 より シンプル な もの に 変更 さ れ ま し た 。 
古 い コード を 新し い インターフェース に 変更 する に は 、 古 い  offset  と length  パラメータ で スライス せ ず に 、 content  を 指定 する よう に し て くださ い 。 
スキップ し た エンティティ の 通知 を 受け取 り ま す 。 
パーサ は エンティティ を スキップ する たび に この メソッド を 呼び出 し ま す 。  妥当 性 検査 を し な い プロセッサ は ( 外部  DTD  サブセット で 宣言 さ れ て い る など の 理由 で ) 宣言 が 見当た ら な い エンティティ を スキップ し ま す 。 
すべて の プロセッサ は  feature_external _ ges  および feature_external _pes  属性 の 値 に よ っ て は 外部 エンティティ を スキップ する こと が あ り ま す 。 
Python\/C API  リファレンス マニュアル 
continue  文 は  for  ループ や  while  ループ 内 の ネスト で 構文 法 的 に のみ 現れ ま す が 、 ループ 内 の 関数 定義 や クラス 定義 、 try  文 の 中 に は 現れ ま せ ん 。 
continue  文 は 、 文 を 囲 う 最も 内側 の ループ の 次 の 周期 に 処理 を 継続 し ま す 。 
. . .  文 の 中 に は 現れ ま せ ん 。 
except  節 や else  節中 に 置 く こと は でき ま す 。 
try  文 に 置 け な い と い う 制限 は 、 実装 側 の 不精 に よ る もの で 、 その うち 改善 さ れ る こと で しょ う 。 
コントロール ウィンドウ オブジェクト に は  Window  オブジェクト の メソッド の 他 に 次 の メソッド が あ り ま す 。 
コントロール  control  の パート コード  pcode  が ユーザー に ヒット さ れ た 場合 に 呼 ば れ ま す 。 
トラッキング など は 任せ て お い て かま い ま せ ん 。 
以下 の 算術 演算 子 の 記述 で 、 「 数値 引数 は 共通 の 型 に 変換 さ れ ま す 」 と 書 か れ て い る 場合 、 引数 は  3  章 の 末尾 に 記載 さ れ て い る 型 強制 規則 に 基づ い て 型 強制 さ れ ま す 。 
引数 が いずれ も 標準 の 数値 型 で あ る 場合 、 以下 の 型 強制 が 適用 さ れ ま す : 
片方 の 引数 が 複素数 型 で あ れ ば 、 他方 は 複素数 型 に 変換 さ れ ま す ; 
それ 以外 の 場合 で 、 片方 の 引数 が 浮動 小数 点数 で あ れ ば 、 他方 は 浮動 小数 点 型 に 変換 さ れ ま す ; 
それ 以外 の 場合 で 、 片方 の 引数 が 長 整数 型 で あ れ ば 、 他方 は 長 整数 型 に 変換 さ れ ま す ; 
それ 以外 の 場合 で 、 両方 の 引数 が 通常 の 整数 型 で あ れ ば 、 変換 の 必要 は あ り ま せ ん 。 
特定 の 演算 子  ( 文字 列 を 左 引数 と する `%' 演算 子 など )  で は 、 さらに 別 の 規則 が 適用 さ れ ま す 。 
拡張 を おこな う こと で 、 個々 の 演算 子 に 対 する 型 強制 を 定義 でき ま す 。 
次 の 例 は Cookie の 使 い 方 を 示 し た もの で す 。 
Cookie  インスタンス は 、 さまざま な クッキー の 標準 で 規定 さ れ て い る 標準 的 な クッキー 属性 と おおまか に 対応 する  Python  属性 を も っ て い ま す 。 
しかし デフォルト 値 を 決め る 複雑 な や り 方 が 存在 し て お り 、 また  max - age  および  expires  クッキー 属性 は 同じ 値 を も つ こと に な っ て い る の で 、 この 対応 は  1 対  1  で は あ り ま せ ん 。  CookiePolicy  メソッド 内 で の ごく わずか な 例外 を 除 け ば 、 これ ら の 属性 に 代入 する 必要 は な い はず で す 。 
この クラス は 内部 の 一貫 性 を 保 つ よう に は し て い な い ため 、 代入 する の は 自分 の や っ て い る こと を 理解 し て い る 場合 のみ に し て くださ い 。 
整数 また は  None 。 
Netscape  クッキー は  バージョン  0  で あ り 、 RFC  296 5  および  RFC  2109  クッキー は  バージョン  1  で す 。 
クッキー の 名前  ( 文字 列 ) 。 
クッキー の 値  ( 文字 列 ) 、 あるいは  None 。 
ポート あるいは ポート の 集合 を あらわ す 文字 列  ( 例 : ' 8 0 '  また は  ' 80 , 808 0 ' ) 、 あるいは  None 。 
クッキー の パス 名  ( 文字 列 、 例 :'\/acme\/rocket_launchers' ) 。 
その クッキー を 返せ る の が 安全 な 接続 のみ なら ば 真 を 返 し ま す 。 
クッキー の 期限 が 切れ る 日時 を あわら す 整数  ( エポック から 経過 し た 秒数 ) 、 あるいは  None 。 
is _expired ( )  も 参照 し て くださ い 。 
これ が セッション クッキー で あ れ ば 真 を 返 し ま す 。 
この クッキー の 働き を 説明 する 、 サーバ から の コメント 文字 列 、 あるいは  None 。 
この クッキー の 働き を 説明 する 、 サーバ から の コメント の リンク  URL 、 あるいは  None 。 
サーバ が ポート 、 あるいは ポート の 集合 を ( Set - Cookie :\/ Set - Cookie 2 :  ヘッダ 内 で )  明示 的 に 指定 し て い れ ば 真 を 返 し ま す 。 
サーバ が ドメイン を 明示 的 に 指定 し て い れ ば 真 を 返 し ま す 。 
サーバ が 明示 的 に 指定 し た ドメイン が 、 ドット  ('.')  で 始ま っ て い れ ば 真 を 返 し ま す 。 
クッキー は 、 オプション と し て 標準 的 で な い クッキー 属性 を 持 つ こと も でき ま す 。 
これ ら は 以下 の メソッド で アクセス でき ま す : 
その クッキー が 指定 さ れ た 名前 の クッキー 属性 を も っ て い る 場合 に は 真 を 返 し ま す 。 
クッキー が 指定 さ れ た 名前 の クッキー 属性 を も っ て い れ ば 、 その 値 を 返 し ま す 。 
そう で な い 場合 は  default  を 返 し ま す 。  set_nonstandard_attr 
指定 さ れ た 名前 の クッキー 属性 を 設定 し ま す 。 
Cookie  クラス は 以下 の メソッド も 定義 し て い ま す : 
サーバ が 指定 し た 、 クッキー の 期限 が 切れ る べ き 時 が 過ぎ て い れ ば 真 を 返 し ま す 。 
now  が 指定 さ れ て い る とき は  ( エポック から 経過 し た 秒数 で す ) 、 その クッキー が 指定 さ れ た 時間 に お い て 期限 切れ に な っ て い る か どう か を 判定 し ま す 。 
文字 列 表現 を 値 に デコード し て 返 し ま す 。 
戻 り 値 の 型 は どの よう な もの で も 許 さ れ ま す 。 
この メソッド は Base Cookie に お い て 何 も 実行 せ ず 、 オーバーライド さ れ る ため に だけ 存在 し ま す 。 
エンコード し た 値 を 返 し ま す 。 
ブラウザ が Java Script を サポート し て い る 場合 、 HTTP ヘッダ を 送信 し た 場合 と 同様 に 動作 する 埋め込 み 可能 な Java Script snippet を 返 し ま す 。  attrs の 意味 は output ( ) と 同じ で す 。 
rawdata が 文字 列 で あ れ ば 、 HTTP _ COOKIE と し て 処理 し 、 その 値 を Morsel と し て 追加 し ま す 。 
辞書 の 場合 は 次 と 同様 の 処理 を おこな い ま す 。 
1 1 . 2 0 . 2  File CookieJar  の サブ クラス と  web 
CookiePolicy  インターフェイス を 実装 する オブジェクト は 以下 の よう な メソッド を 持 っ て い ま す : 
クッキー が サーバ から 受け入れ られ る べ き か どう か を 表わ す  boolean  値 を 返 し ま す 。 
cookie  は  cookielib . Cookie  インスタンス で す 。  request  は CookieJar . extract_cookies ( )  の 説明 で 定義 さ れ て い る インターフェイス を 実装 する オブジェクト で す 。 
クッキー が サーバ に 返 さ れ る べ き か どう か を 表わ す  boolean  値 を 返 し ま す 。 
cookie  は  cookielib . Cookie  インスタンス で す 。  request  は CookieJar . add_cookie_header ( )  の 説明 で 定義 さ れ て い る インターフェイス を 実装 する オブジェクト で す 。 
与え られ た クッキー の ドメイン に 対 し て 、 そこ に クッキー を 返 す べ き で な い 場合 に は false  を 返 し ま す 。  この メソッド は 高速 化 の ため の もの で す 。 
これ に よ り 、 すべて の クッキー を ある 特定 の ドメイン に 対 し て チェック する  ( これ に は 多数 の ファイル 読みこみ を 伴な う 場合 が あ り ま す ) 必要 が なくな り ま す 。 
domain_return_ok ( )  および  path_ return_ok ( )  の 両方 から  true  が 返 さ れ た 場合 、 すべて の 決定 は  return_ok ( )  に 委ね られ ま す 。  もし 、 この クッキー ドメイン に 対 し て  domain_return_ok ( )  が true  を 返 す と 、 つぎ に その クッキー の パス 名 に 対 し て  path_ return_ok ( )  が 呼 ば れ ま す 。 
そう で な い 場合 、 その クッキー ドメイン に 対 する  path_ return_ok ( )  および return_ok ( )  は 決して 呼 ば れ る こと は あ り ま せ ん 。 
path_ return_ok ( )  が true  を 返 す と 、 return_ok ( )  が その  Cookie  オブジェクト 自身 の 全 チェック の ため に 呼 ば れ ま す 。 
そう で な い 場合 、 その クッキー パス 名 に 対 する  return_ok ( )  は 決して 呼 ば れ る こと は あ り ま せ ん 。  注意 :  domain_return_ok ( )  は request  ドメイン だけ で は な く 、 すべて の  cookie  ドメイン に 対 し て 呼 ば れ ま す 。 
たとえば  request  ドメイン が " w w w . example . com "  だっ た 場合 、 この 関数 は  " . example . com "  および " w w w . example . com "  の 両方 に 対 し て 呼 ば れ る こと が あ り ま す 。 
同じ こと は  path_ return_ok ( )  に も いえ ま す 。  request  引数 は  return_ok ( )  で 説明 さ れ て い る とおり で す 。 
与え られ た クッキー の パス 名 に 対 し て 、 そこ に クッキー を 返 す べ き で な い 場合 に は false  を 返 し ま す 。 
domain_return_ok ( )  の 説明 を 参照 し て くださ い 。  上 の メソッド の 実装 に くわえ て 、 CookiePolicy  インターフェイス の 実装 で は 以下 の 属性 を 設定 する 必要 が あ り ま す 。 
これ は どの プロトコル が どの よう に 使 わ れ る べ き か を 示 す もの で 、 これ ら の 属性 に は すべて 代入 する こと が 許 さ れ て い ま す 。 
Netscape  プロトコル を 実装 し て い る こと を 示 し ま す 。 
RFC  296 5  プロトコル を 実装 し て い る こと を 示 し ま す 。 
Cookie 2 :  ヘッダ を リクエスト に 含め な い よう に し ま す ( この ヘッダ が 存在 する 場合 、 私 たち は  RFC  296 5  クッキー を 理解 する と い う こと を サーバ に 示 す こと に な り ま す ) 。 
もっとも 有用 な 方法 は 、 DefaultCookiePolicy  を サブ クラス 化 し た CookiePolicy  クラス を 定義 し て 、 いく つ か  ( あるいは すべて )  の メソッド を オーバーライド する こと で しょ う 。 
CookiePolicy  自体 は どの よう な クッキー も 受け入れ て 設定 を 許可 する 「 ポリシー 無し 」 ポリシー と し て 使 う こと も でき ま す  ( これ が 役 に 立 つ こと は あまり あ り ま せ ん が ) 。 
はじめ に 、 もっとも 一般 的 な  cookielib  の 使用 例 を あげ ま す : 
以下 の 例 で は 、  URL  を 開 く 際 に  Netscape  や  Mozilla  また は  Lynx  の クッキー を 使 う 方法 を 示 し て い ま す  ( クッキー ファイル の 位置 は  Unix \/ Netscape  の 慣例 に し た が う もの と 仮定 し て い ま す ) : 
つぎ の 例 は  DefaultCookiePolicy  の 使用 例 で す 。  RFC  296 5  クッキー を オン に し 、 Netscape  クッキー を 設定 し たり 返 し たり する ドメイン に 対 し て より 厳密 な 規則 を 適用 し ま す 。 
そして いく つ か の ドメイン から クッキー を 設定 あるいは 返還 する の を ブロック し て い ま す : importurllib 2 from cookielib import CookieJar ,  DefaultCookiePolicypolicy  =  DefaultCookiePolicy ( rfc 2965 = True ,  strict_ns_domain = Policy . DomainStrict, blocked_domains = [ " ads . net " ,  " . ads . net " ] ) cj= CookieJar ( policy ) opener = urllib 2 .build_ opener ( urllib 2. HTTPCookieProcessor ( cj) ) r  =  opener . open ( " http:\/\/example . com\/" ) 
2 .  超 高 レベル レイヤ 
この 節 の マクロ は Python オブジェクト の 参照 カウント を 管理 する ため に 使 わ れ ま す 。 
オブジェクト o に 対 する 参照 カウント を 一 つ 増や し ま す 。 
オブジェクト が NULL で あ っ て は いけ ま せ ん 。  それ が NULL で は な い と 確信 が 持て な い なら ば 、 Py _ XINCREF ( ) を 使 っ て くださ い 。 
オブジェクト が NULL で あ っ て も よ く 、 その 場合 マクロ は 何 の 影響 も 与え ま せ ん 。 
オブジェクト o に 対 する 参照 カウント を 一 つ 減ら し ま す 。 
オブジェクト が NULL で あ っ て は いけ ま せ ん 。  それ が NULL で は な い と 確信 が 持て な い なら ば 、 Py _ XDECREF ( ) を 使 っ て くださ い 。 
参照 カウント が ゼロ に な っ た ら 、 オブジェクト の 型 の メモリ 解放 関数 ( NULL で あ っ て は な ら な い ) が 呼 ば れ ま す 。 
警告 : ( 例えば __ del_ _( ) メソッド を も つ クラス インスタンス が メモリ 解放 さ れ た とき に ) メモリ 解放 関数 は 任意 の Python コード を 呼び出 す こと が でき ま す 。 
この よう な コード で は 例外 は 伝播 し ま せ ん が 、 実行 さ れ た コード は すべて の Python グローバル 変数 に 自由 に アクセス でき ま す 。 
これ が 意味 する の は 、 Py _ DECREF ( ) が 呼び出 さ れ る より 前 で は 、 グローバル 変数 から 到達 可能 などんな オブジェクト も 一貫 し た 状態 に あ る べ き で あ る と い う こと で す 。 
例えば 、 リスト から オブジェクト を 削除 する コード は 削除 する オブジェクト へ の 参照 を 一時 変数 に コピー し 、 リスト データ 構造 を 更新 し 、 それ から 一時 変数 に 対 し て Py _ DECREF ( ) を 呼び出 す べ き で す 。 
オブジェクト o へ の 参照 カウント を 一 つ 減ら し ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の 関数 : Py _ IncRef ( PyObject*o) ,  Py _ DecRef ( PyObject*o ) . は , 実行 時 の 動的 な  Python  埋め込み で 使 わ れ る 関数 で す . これ ら の 関数 は それぞれ Py _ XINCREF ( )  および Py _ XDECREF ( )  を エクスポート し た だけ で す . 以下 の 関数 や マクロ :_Py _ Dealloc ( ) ,_ Py _ ForgetReference ( ) ,_ Py _ NewReference ( ) は , インタプリタ の コア の 内部 に お い て のみ 使用 する ため の もの で す 。  また 、 グローバル 変数 _ Py _ RefTotal  も 同様 で す 。 
1 . 12  拡張 モジュール に  C  API 
C + + で も 拡張 モジュール は 作成 でき ま す 。 
ただし いく つ か 制限 が あ り ま す 。 
メイン プログラム  ( Python  インタプリタ )  は  C  コンパイラ で コンパイル さ れ リンク さ れ て い る の で 、 グローバル 変数 や 静的 オブジェクト を コンストラクタ で 作成 でき ま せ ん 。 
メイン プログラム が  C + +  コンパイラ で リンク さ れ て い る なら これ は 問題 で は あ り ま せ ん 。 
Python  インタプリタ から 呼び出 さ れ る 関数  ( 特に モジュール 初期 化 関数 ) は 、 extern " C "  を 使 っ て 宣言 し な けれ ば な り ま せ ん 。  また 、 Python  ヘッダ ファイル を extern " C " { . . . }  に 入れ る 必要 は あ り ま せ ん - -  シンボル "_ _cplus plus "  ( 最近 の  C + +  コンパイラ は 全て この シンボル を 定義 し て い ま す )  が 定義 さ れ て い る とき に extern " C " { . . . }  が 行 わ れ る よう に 、 ヘッダ ファイル 内 に すでに 書 か れ て い る から で す 。 
1  ダム 形式 の ビルド 済み 配布 物 を 作成 する 
1  ダム 形式 の ビルド 済み 配布 物 を 作成 する 
RPM  形式 は 、 Red  Hat ,  SuSE ,  Mandrake  と い っ た 、 多く の 一般 的 な  Linux  ディストリビューション で 使 わ れ て い ま す 。 
あるいは 、 bdist  コマンド を - - format  オプション 付き で 使 い ま す : 
前者 の 場合 、  RPM  特有 の オプション を 指定 でき ま す ;  後者 の 場合 、 一 度 の 実行 で 複数 の 形式 を 指定 でき ま す 。 
両方 同時 に や り た けれ ば 、 それぞれ の 形式 に つ い て 各 コマンド ごと に オプション 付き で bdist_* コマンド を 並べ ま す : 
Distutils  が  setup  スクリプト で 制御 さ れ て い る の と ほとんど 同じく 、 RPM  パッケージ の 作成 は 、  . spec  で 制御 さ れ て い ま す 。 
RPM  の 作成 を 簡便 に 解決 する ため 、 bdist _rpm  コマンド で は 通常 、  setup  スクリプト に 与え た 情報 と コマンドライン 、 そして  Distutils 設定 ファイル に 基づ い て  . spec  ファイル を 作成 し ま す 。 
. spec  ファイル の 様々 な オプション や セクション 情報 は 、 以下 の よう に し て  setup  スクリプト から 取り出 さ れ ま す : 
RPM  . spec  ファイル の オプション また は セクション 
Distutilssetup  スクリプト 内 の オプション 
Summary  ( preamble  内 ) 
author  と  author_email ,  また は maintainer  と maintainer_email 
% description  ( セクション ) 
また 、 . spec  ファイル 内 の 多く の オプション は 、  setup  スクリプト 中 に 対応 する オプション が あ り ま せ ん 。 
これ ら の ほとんど は 、 以下 に 示 す bdist _rpm  コマンド の オプション で 扱え ま す : 
bdist _rpm  オプション 
デフォルト 値 
( 上記 参照 ) 
言 う まで も な く 、 こう し た オプション を コマンドライン で 指定 する の は 面倒 だ し 、 エラー の 元 に な り ま す から 、 普通 は  setup . cfg  に 書 い て お く の が ベスト で す  - - 12  節 を 参照 し て くださ い 。 
沢山 の  Python  モジュール 配布 物 を 配布 し たり パッケージ 化 し たり し て い る の なら 、 配布 物 全部 に 当てはま る オプション を 個人 用 の  Distutils  設定 ファイル  ( ~\/. pydistutils . cfg )  に 入れ られ ま す 。  バイナリ 形式 の  RPM  パッケージ を 作成 する 際 に は 三 つ の 段階 が あ り 、 Distutils  は これ ら 全て の 段階 を 自動 的 に 処理 し ま す : 
RPM  パッケージ の 内容 を 記述 する  . spec  ファイル を 作成 し ま す (. spec  ファイル は  setup  スクリプト に 似 た ファイル で す ;  実際 、 setup  スクリプト の ほとんど の 情報 が  . spec  ファイル から 引き揚げ られ ま す ) 
ソース  RPM  を 作成 し ま す 
` ` バイナリ  ( binary ) ' ' RPM  を 生成 し ま す  ( モジュール 配布 物 に Python  拡張 モジュール が 入 っ て い る か 否 か で 、 バイナリ コード が 含 ま れ る こと も 含 ま れ な い こと も あ り ま す ) 
通常 、 RPM  は 最後 の 二 つ の ステップ を まとめ て 行 い ま す ;  Distutils を 使 う と 、 普通 は 三 つ の ステップ 全て を まとめ て 行 い ま す 。  望 む なら 、 これ ら の 三 つ の ステップ を 分割 でき ま す 。 
bdist _rpm  コマンド に  -- spec - only  を 指定 すれ ば 、 単に . spec  を 作成 し て 終了 し ま す ;  この 場合 、 . spec ファイル は  ` ` 配布 物 ディレクトリ  ( distribution directory ) ' '- - 通常 は  dist\/ に 作成 さ れ ま す が 、 -- dist - dir オプション で 変更 する こと も でき ま す 。 
( 通常 、  . spec  ファイル は ` ` ビルド ツリー  ( build  tree ) ' ' 、 すなわち build_rpm が 作成 する 一時 ディレクトリ の 中 から 引き揚げ られ ま す 。 ) 
1 . 2 . 2 . 2  クリエータ を セット し て ダブル クリック する 
1 . 2 . 2 . 1  ドラッグ \& ドロップ する 
1 . 2 . 2  Python スクリプト の 走 ら せ 方 
1 . 2 . 3  コマンドライン 引数 を シミュレート する 
スクリプト を 、 MacPython  配布 物 の Mac  フォルダ 下 の  scripts フォルダ に 置 き ま す 。 
修正 し た い スクリプト は 全て ひと つ の フォルダ に 入れ ま す 。 
他 の ファイル は 入れ な い よう に し ま す 。  fixfiletypes. py  アイコン を ダブル クリック し ま す 。 
修正 し た い ファイル の 入 っ た フォルダ を 選 ん で ` ` Select  current  folder ' ' ボタン を 押 し ま す 。 
15 .  暗号 関連 の サービス 
この 章 で 記述 さ れ て い る モジュール で は 、 暗号 の 本質 に 関わ る 様々 な アルゴリズム を 実装 し て い ま す 。 
これ ら は 必要 に 応 じ て インストール する こと で 使え ま す 。 
概要 を 以下 に 示 し ま す : 
Python  で 実装 さ れ た 、 メッセージ 認証 の ため の 鍵 付き ハッシュ 化  ( HMAC : Keyed - Hashing  for  Message  Authentication ) アルゴリズム 。 
NIST の セキュア ハッシュ アルゴリズム 、 SHA 。 
あなた が ハード コア な サイバー パンク なら 、 さらに  A . M .  Kuchling  の 書 い た 暗号 化 モジュール に 興味 を 持 つ か も しれ ま せ ん 。  この パッケージ で は 組み込み の  DES  および  IDEA  暗号 を 追加 し 、 PGP  暗号 化 さ れ た ファイル の 読み込 み や 復号 化 を 行 う ため の モジュール など を 提供 し ま す 。 
これ ら の モジュール は  Python  と 一緒 に は 配布 さ れ ず 、 別 に 入手 でき ま す 。 
詳細 は  http:\/\/www . amk . ca\/python\/code \/crypto . html  を 見 て くださ い 。 
12 . 2 0 . 2  Dialect  クラス と 書式 化 パラメタ 
csv  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
与え られ た  csvfile  内 の 行 を 反復 処理 する よう な  reader  オブジェクト を 返 し ま す 。  csvfile  は イテレータ プロトコル を サポート し 、 next  メソッド が 呼 ば れ た 際 に 常 に 文字 列 を 返 す よう な 任意 の オブジェクト に する こと が でき ま す 。 
csvfile  が ファイル オブジェクト の 場合 、 ファイル オブジェクト の 形式 に 違い が あ る よう な プラットフォーム で は ' b ' フラグ を 付け て 開 か な けれ ば な り ま せ ん 。 
オプション と し て  dialect  パラメタ を 与え る こと が でき 、 特定 の  CSV  表現 形式  ( dialect )  特有 の パラメタ の 集合 を 定義 する ため に 使 わ れ ま す 。 
dialect  パラメタ は  Dialect  クラス の サブ クラス の インスタンス か 、 list_dialects  関数 が 返 す 文字 列 の 一 つ に する こと が でき ま す 。 
別 の オプション で あ る  fmtparam  キー ワード 引数 は 、 現在 の 表現 形式 に お け る 個々 の 書式 パラメタ を 上書き する ため に 与え る こと が でき ま す 。 
表現 形式 および 書式 化 パラメタ の 詳細 に つ い て は 、 12 . 2 0 . 2  節 、 `` Dialect  クラス と 書式 化 パラメタ ' ' を 参照 し て くださ い 。  読み出 さ れ た データ は 全て 文字 列 と し て 返さ れ ま す 。 
データ 型 の 変換 が 自動 的 に 行 わ れ る こと は あ り ま せ ん 。 
ユーザ が 与え た データ を デリミタ で 区切 ら れ た 文字 列 に 変換 し 、 与え られ た ファイル オブジェクト に する ため の  writer  オブジェクト を 返 し ま す 。  csvfile  は  write  メソッド を 持 つ 任意 の オブジェクト で かま い ま せ ん 。 
csvfile  が ファイル オブジェクト の 場合 、 ファイル オブジェクト の 形式 に 違い が あ る よう な プラットフォーム で は ' b ' フラグ を 付け て 開 か な けれ ば な り ま せ ん 。 
オプション と し て  dialect  パラメタ を 与え る こと が でき 、 特定 の  CSV  表現 形式  ( dialect )  特有 の パラメタ の 集合 を 定義 する ため に 使 わ れ ま す 。 
dialect  パラメタ は  Dialect  クラス の サブ クラス の インスタンス か 、 list_dialects  関数 が 返 す 文字 列 の 一 つ に する こと が でき ま す 。 
別 の オプション で あ る  fmtparam  キー ワード 引数 は 、 現在 の 表現 形式 に お け る 個々 の 書式 パラメタ を 上書き する ため に 与え る こと が でき ま す 。 
表現 形式 および 書式 化 パラメタ の 詳細 に つ い て は 、 12 . 2 0 . 2  節 、 `` Dialect  クラス と 書式 化 パラメタ ' ' を 参照 し て くださ い 。 
DB  API  を 実装 する モジュール と の インタフェース を 可能 な 限り 容易 に する ため に 、 None  は 空 文字 列 と し て 書き込 ま れ ま す 。 
この 処理 は 可逆 な 変換 で は あ り ま せ ん が 、 SQL  で  NULL  データ 値 を CSV  に ダンプ する 処理 を 、 cursor . fetch* ( )  呼び出し に よ っ て 返さ れ た データ を 前 処理 する こと な く 簡単 に 行 う こと が でき ま す 。 
他 の 非 文字 データ は 、 書き出 さ れ る 前 に  str ( )  を 使 っ て 文字 列 に 変換 さ れ ま す 。 
dialect  を  name  と 関連 付け ま す 。 
dialect  は csv . Dialect  の サブ クラス で な けれ ば な り ま せ ん 。  name  は 文字 列 か  Unicode  オブジェクト で な けれ ば な り ま せ ん 。 
name  に 関連 づけ られ た 表現 形式 を 表現 形式 レジストリ から 削除 し ま す 。 
name  が 表現 形式 名 で な い 場合 に は  Error  を 送出 し ま す 。 
name  に 関連 づけ られ た 表現 形式 を 返 し ま す 。 
name  が 表現 形式 名 で な い 場合 に は  Error  を 送出 し ま す 。 
登録 さ れ て い る 全て の 表現 形式 を 返 し ま す 。 
csv  モジュール で は 以下 の クラス を 定義 し て い ま す : 
クラス DictReader
省略 可能 な fieldnames  パラメタ で 与え られ た キー を 読み出 さ れ た 情報 に 対応 付け る 他 は 正規 の  reader  の よう に 動作 する オブジェクト を 生成 し ま す 。 
fieldnames パラメタ が 無 い 場合 に は 、 csvfile の 最初 の 行 の 値 が フィールド 名 と し て 利用 さ れ ま す 。 
読み出 さ れ た 行 が  fieldnames  の シーケンス より も 多く の フィールド を 持 っ て い た 場合 、 残り の フィールド データ は  restkey  の 値 を キー と する シーケンス に 追加 さ れ ま す 。 
読み出 さ れ た 行 が  fieldnames  の シーケンス より も 少な い フィールド しか 持 た な い 場合 、 残り の キー は オプション の restval  パラメタ に 指定 さ れ た 値 を 取 り ま す 。 
その 他 の 省略 可能 また は キー ワード 形式 の パラメタ は ベース に な っ て い る  reader  の インスタンス に 渡 さ れ ま す 。 
クラス DictWriter 
辞書 を 出力 行 に 対応 付け る 他 は 正規 の  writer  の よう に 動作 する オブジェクト を 生成 し ま す 。 
fieldnames  パラメタ に は 、 辞書 中 の  writerow ( )  メソッド に 渡 さ れ る 値 が どの 順番 で csvfile  に 書き出 さ れ る か を 指定 し ま す 。 
オプション の  restval  パラメタ は 、 fieldnames  内 の キー が 辞書 中 に な い 場合 に 書き出 さ れ る 値 を 指定 し ま す 。 
writerow ( )  メソッド に 渡 さ れ た 辞書 に 、 fieldnames 内 に は 存在 し な い キー が 入 っ て い る 場合 、 オプション の  extraaction パラメタ で どの よう な 動作 を 行 う か を 指定 し ま す 。 
この 値 が ' raise '  に 設定 さ れ て い る 場合  ValueError  が 送出 さ れ ま す 。 
'ignore '  に 設定 さ れ て い る 場合 、 辞書 の 余分 の 値 は 無視 さ れ ま す 。 
Python の dict オブジェクト は 整列 さ れ て い な い の で 、 列 が csvfile に 書 か れ る べ き 順序 を 推定 する ため の 十分 な 情報 は あ り ま せ ん 。 
Dialect  クラス は コンテナ クラス で 、 基本 的 な 用途 と し て は 、 その 属性 を 特定 の  reader  や  writer  インスタンス の パラメタ を 定義 する ため に 用い ま す 。 
Sniffer  クラス は  CSV  ファイル の 書式 を 推理 する ため に 用い られ る クラス で す 。 
Sniffer  クラス で は メソッド を 一 つ 提供 し て い ま す : 
与え られ た  sample  を 解析 し 、 発見 さ れ た パラメタ を 反映 し た  Dialect  サブ クラス を 返 し ま す 。 
オプション の  delimiters  パラメタ を 与え た 場合 、 有効 な デリミタ 文字 を 含 ん で い る はず の 文字 列 と し て 解釈 さ れ ま す 。 
( CSV  形式 と 仮定 さ れ る )  サンプル テキスト を 解析 し て 、 最初 の 行 が カラム ヘッダ の 羅列 の よう に 推察 さ れ る 場合  True を 返 し ま す 。 
csv  モジュール で は 以下 の 定数 を 定義 し て い ま す : 
writer  オブジェクト に 対 し 、 全て の フィールド を クオート する よう に 指示 し ま す 。 
writer  オブジェクト に 対 し 、 現在 の  delimiter  を 含 む か 、 あるいは  quotechar  で 始ま る フィールド だけ を クオート する よう に 指示 し ま す 。 
writer  オブジェクト に 対 し 、 全て の 非 数値 フィールド を クオート する よう に 指示 し ま す 。 
writer  オブジェクト に 対 し 、 フィールド を 決して クオート し な い よう に 指示 し ま す 。 
現在 の  delimiter  が 出力 データ 中 に 現れ た 場合 、 現在 設定 さ れ て い る  excapechar  文字 が 前 に 付け られ ま す 。 
QUOTE _ NONE  の 効果 下 に あ る 時 に は 、 1  文字 から な る 文字 列 escapechar  が 定義 さ れ て い な い と 、 たとえ 書き出 さ れ る データ 中 に  delimiter  文字 が 入 っ て い な く て も エラー に な り ま す 。 
csv  モジュール で は 以下 の 例外 を 定義 し て い ま す : 
全て の 関数 に お い て 、 エラー が 検出 さ れ た 際 に 送出 さ れ る 例外 で す 。 
レコード に 対 する 入出力 形式 の 指定 を より 簡単 に する ため に 、 特定 の 書式 化 パラメタ は 表現 形式  ( dialect )  に まとめ て グループ 化 さ れ ま す 。 
表現 形式 は  Dialect  クラス の サブ クラス で 、 様々 な クラス 特有 の メソッド と 、 validate ( )  メソッド を 一 つ 持 っ て い ま す 。 
reader  また は  writer  オブジェクト を 生成 する とき 、 プログラマ は 文字 列 また は  Dialect  クラス の サブ クラス を 表現 形式 パラメタ と し て 渡 さ な けれ ば な り ま せ ん 。 
さらに 、 dialect  パラメタ の 代り に 、 プログラマ は 上 で 定義 さ れ て い る 属性 と 同じ 名前 を 持 つ 個々 の 書式 化 パラメタ を  Dialect  クラス に 指定 する こと が でき ま す 。  Dialect  は 以下 の 属性 を サポート し て い ま す : 
フィールド 間 を 分割 する の に 用い られ る  1  文字 から な る 文字 列 で す 。 
デフォルト で は  ' ,' で す 。 
フィールド 内 に 現れ た  quotechar  の インスタンス で 、 クオート で は な い その 文字 自身 で な けれ ば な ら な い 文字 を どの よう に クオート する か を 制御 し ま す 。 
True  の 場合 、 この 文字 は 二 重 化 さ れ ま す 。  False  の 場合 、  escapechar  は  1  文字 から な る 文字 列 で な けれ ば な ら ず 、 quotechar  の 前 に 置 か れ ま す 。 
デフォルト で は True  で す 。 
quoting  が  QUOTE _ NONE  に 設定 さ れ て い る 場合 に 、 delimiter  を エスケープ する ため に 用い られ る 、  1  文字 から な る 文字 列 で す 。 
デフォルト で は  None  で す 。 
CSV  ファイル の 各行 を 終端 する 際 に 用い られ る 文字 列 で す 。 
デフォルト で は 'rn' で す 。 
delimiter  を 含 む か 、 quotechar  から 始ま る 要素 を クオート する 際 に 用い られ る  1  文字 から な る 文字 列 で す 。 
デフォルト で は ' " ' で す 。 
writer  に よ っ て クオート が いつ 生成 さ れ る か を 制御 し ま す 。 
QUOTE_*  定数 の いずれ か  ( 12 . 2 0 . 1  節 参照 )  を と る こと が でき 、 デフォルト で は QUOTE _ MINIMAL  で す 。 
True  の 場合 、 delimiter  の 直後 に 続 く 空白 は 無視 さ れ ま す 。 
デフォルト で は  False  で す 。 
curses  モジュール で は 以下 の 例外 を 定義 し て い ま す : 
curses  ライブラリ 関数 が エラー を 返 し た 際 に 送出 さ れ る 例外 で す 。 
注意 : 関数 や メソッド に おけ る オプション の 引数  x  および  y  が あ る 場合 、 標準 の 値 は 常 に 現在 の カーソル に な り ま す 。  オプション の  attr  が あ る 場合 、 標準 の 値 は  A_ NORMAL で す 。 
curses  で は 以下 の 関数 を 定義 し て い ま す : 
端末 の 出力 速度 を ビット \/ 秒 で 返 し ま す 。 
ソフトウェア 端末 エミュレータ の 場合 、 これ は 固定 の 高 い 値 を 持 つ こと に な り ま す 。  この 関数 は 歴史 的 な 理由 で 入れ られ て い ま す ;  かつて は 、 この 関数 は 時間 遅延 を 生成 する ため の 出力 ループ を 書 く ため に 用い られ たり 、 行 速度 に 応 じ て インタフェース を 切り替え たり する ため に 用い られ たり し て い ま し た 。 
注意 を 促 す 短 い 音 を 鳴ら し ま す 。 
端末 に 表示 さ れ る 色 を プログラマ が 変更 でき る か 否 か に よ っ て 、 真 また は 偽 を 返 し ま す 。 
cbreak  モード に 入 り ま す 。 
cbreak  モード  ( ``rare ' ' モード と 呼 ば れ る こと も あ り ま す )  で は 、 通常 の tty  行 バッファ リング は オフ に さ れ 、 文字 を 一 文字 一 文字 読 む こと が でき ま す 。 
ただし 、 raw  モード と は 異な り 、 特殊 文字  ( 割り込み : interrupt 、 終了 : quit 、 一時 停止 : suspend 、 および フロー 制御 )  に つ い て は 、 tty  ドライバ および 呼び出 し 側 の プログラム に 対 する 通常 の 効果 を も っ て い ま す 。 
まず  raw ( )  を 呼び出 し 、 次いで  cbreak ( )  を 呼び出 す と 、 端末 を  cbreak  モード に し ま す 。 
色  color_number  の 赤 、 緑 、 および 青  ( RGB )  要素 の 強度 を 返 し ま す 。 
color_number  は  0  から  COLORS  の 間 で な けれ ば な り ま せ ん 。  与え られ た 色 の  R 、 G 、 B 、 の 値 から な る 三 要素 の タプル が 返 さ れ ま す 。 
この 値 は  0  ( その 成分 は な い )  から  10 0 0 ( その 成分 の 最大 強度 )  の 範囲 を と り ま す 。  color_pair
指定 さ れ た 色 の 表示 テキスト に お け る 属性 値 を 返 し ま す 。 
属性 値 は  A_ STANDOUT 、 A_ REVERSE 、 および その 他 の  A_* 属性 と 組み合わせ られ て い ま す 。  pair_number ( )  は この 関数 の 逆 で す 。 
カーソル の 状態 を 設定 し ま す 。  visibility  は  0 、 1 、 また は  2  に 設定 さ れ 、 それぞれ 不 可視 、 通常 、 また は 非常 に 可視 、 を 意味 し ま す 。 
要求 さ れ た 可視 属性 を 端末 が サポート し て い る 場合 、 以前 の カーソル 状態 が 返 さ れ ま す ;  そう で な けれ ば 例外 が 送出 さ れ ま す 。 
多く の 端末 で は 、 ` ` 可視  ( 通常 ) ' ' モード は 下線 カーソル で 、 ` ` 非常 に 可視 ' ' モード は ブロック カーソル で す 。 
現在 の 端末 属性 を 、 稼動 中 の プログラム が  curses  を 使 う 際 の モード で あ る ` ` プログラム ' ' モード と し て 保存 し ま す 。 
( この モード の 反対 は 、 プログラム が  curses  を 使 わ な い  `` シェル ' ' モード で す 。 
)  その 後 reset_prog_mode ( )  を 呼 ぶ と この モード を 復旧 し ま す 。 
現在 の 端末 属性 を 、 稼動 中 の プログラム が  curses  を 使 っ て い な い とき の モード で あ る  `` シェル ' ' モード と し て 保存 し ま す 。 
( この モード の 反対 は 、 プログラム が  curses  機能 を 利用 し て い る  ` ` プログラム ' ' モード で す 。 
) その 後  reset_shell_ mode ( )  を 呼 ぶ と この モード を 復旧 し ま す 。  delay _ output
出力 に  ms  ミリ 秒 の 一時 停止 を 入れ ま す 。 
物理 スクリーン  ( physical  screen )  を 更新 し ま す 。 
curses  ライブラリ は 、 現在 の 物理 スクリーン の 内容 と 、 次 の 状態 と し て 要求 さ れ て い る 仮想 スクリーン を それぞれ 表 す 、 2  つ の データ 構造 を 保持 し て い ま す 。 
doupdate ( )  は 更新 を 適用 し 、 物理 スクリーン を 仮想 スクリーン に 一致 さ せ ま す 。  仮想 スクリーン は  addstr ( )  の よう な 書き込み 操作 を ウィンドウ に 行 っ た 後 に  noutrefresh( )  を 呼び出 し て 更新 する こと が でき ま す 。 
通常 の  refresh( )  呼び出し は 、 単に  noutrefresh( )  を 呼 ん だ 後 に  doupdate ( )  を 呼 ぶ だけ で す ;  複数 の ウィンドウ を 更新 し な けれ ば な ら な い 場合 、 全て の ウィンドウ に 対 し て noutrefresh( )  を 呼び出 し た 後 、 一 度 だけ  doupdate ( ) を 呼 ぶ こと で 、 パフォーマンス を 向上 さ せ る こと が でき 、 おそらく スクリーン の ちらつき も 押さえ る こと が でき ま す 。 
echo  モード に 入 り ま す 。 
echo  モード で は 、 各 文字 入力 は スクリーン 上 に 入力 さ れ た 通り に エコーバック さ れ ま す 。 
ライブラリ の 非 初期 化 を 行 い 、 端末 を 通常 の 状態 に 戻 し ま す 。 
ユーザ の 現在 の 消去 文字  ( erase  character )  設定 を 返 し ま す 。 
Unix  オペレーティング システム で は 、 この 値 は  curses  プログラム が 制御 し て い る 端末 の 属性 で あ り 、 curses  ライブラリ 自体 で は 設定 さ れ ま せ ん 。 
filter ( )  ルーチン を 使 う 場合 、 initscr ( )  を 呼 ぶ 前 に 呼び出 さ な く て は な り ま せ ん 。 
この 手順 の もたら す 効果 は 以下 の 通り で す :  まず 二 つ の 関数 の 呼び出し の 間 は 、 LINES  は  1  に 設定 さ れ ま す ; clear 、 cup 、 cud 、 cud 1 、 cuu 1 、 cuu 、 vpa  は 無効 化 さ れ ま す ;  home  文字 列 は  cr  の 値 に 設定 さ れ ま す 。  これ に よ り 、 カーソル は 現在 の 行 に 制限 さ れ る の で 、 スクリーン の 更新 も 同様 に 制限 さ れ ま す 。 
この 関数 は 、 スクリーン の 他 の 部分 に 影響 を 及ぼ さ ず に 文字 単位 の 行 編集 を 行 う 場合 に 利用 でき ま す 。 
スクリーン を フラッシュ ( flash )  し ま す 。 
すなわち 、 画面 を 色 反転 ( reverse - video)  に し て 、 短 時間 で も と に もど し ま す 。 
人 に よ っ て は 、 beep ( )  で 生成 さ れ る 可聴 な 注意 音 より も 、 この よう な  ` ` 可視 ベル ( visible bell ) ' ' を 好 み ま す 。 
全て の 入力 バッファ を フラッシュ し ま す 。 
この 関数 は 、 ユーザ に よ っ て すでに 入力 さ れ て い る が 、 まだ プログラム に よ っ て 処理 さ れ て い な い 全て の 先行 入力 文字 (typeahead )  を 捨て去 り ま す 。 
イベント は  ( id ,  x ,  y ,  z ,  bstate )  の 5  要素 の タプル で 表現 さ れ て い ま す 。 
仮想 スクリーン に おけ る 現在 の カーソル 位置 を  y  および  x  の 順 で 返 し ま す 。 
leaveok  が 真 に 設定 さ れ て い れ ば 、  - 1 、 - 1  が 返 さ れ ま す 。 
以前 の  putwin( )  呼び出し で ファイル に 保存 さ れ て い る 、 ウィンドウ 関連 データ を 読み出 し ま す 。 
次 に 、 この ルーチン は その データ を 使 っ て 新た な ウィンドウ を 生成 し 初期 化 し て 、 その 新規 ウィンドウ オブジェクト を 返 し ま す 。 
端末 が 色 表示 を 行え る 場合 に は 真 を 返 し ま す 。  そう で な い 場合 に は 偽 を 返 し ま す 。 
端末 が 文字 の 挿入 \/ 削除 機能 を 持 つ 場合 に 真 を 返 し ま す 。 
この 関数 は 、 最近 の 端末 エミュレータ が どれ も この 機能 を 持 っ て い る の と 同じく 、 歴史 的 な 理由 だけ の ため に 含め られ て い ま す 。 
端末 が 行 の 挿入 \/ 削除 機能 を 持 つ か 、 領域 単位 の スクロール に よ っ て 機能 を シミュレート でき る 場合 に 真 を 返 し ま す 。 
キー 値  ch  を と り 、 現在 の 端末 タイプ が その 値 の キー を 認識 でき る 場合 に 真 を 返 し ま す 。 
半 遅延 モード 、 すなわち cbreak  モード に 似 た 、 ユーザ が 打鍵 し た 文字 が すぐ に プログラム で 利用 でき る よう に な る モード で 使 わ れ ま す 。  しかし ながら 、 何 も 入力 さ れ な かっ た 場合 、 tenths  十 秒 後 に 例外 が 送出 さ れ ま す 。 
tenths  の 値 は  1  から  255  の 間 で な けれ ば な り ま せ ん 。 
半 遅延 モード から 抜け る に は  nocbreak ( )  を 使 い ま す 。 
色 の 定義 を 変更 し ま す 。  変更 し た い 色 番号 と 、 その 後 に  3  つ 組み の RGB  値  ( 赤 、 緑 、 青 の 成分 の 大き さ )  を と り ま す 。 
color_number の 値 は  0  から  COLORS  の 間 で な けれ ば な り ま せ ん 。 
r 、 g 、 b  の 値 は  0  から  1000  の 間 で な けれ ば な り ま せ ん 。 
init_color ( )  を 使 う と 、 スクリーン 上 で カラー が 使用 さ れ て い る 部分 は 全て 新し い 設定 に 即時 変更 さ れ ま す 。 
この 関数 は ほとんど の 端末 で 何 も 行 い ま せ ん ; can_change_color ( )  が  1  を 返 す 場合 に のみ 動作 し ま す 。 
色 ペア の 定義 を 変更 し ま す 。 
3  つ の 引数 :  変更 し た い 色 ペア 、 前景色 の 色 番号 、 背景色 の 色 番号 、 を と り ま す 。 
pair_number  は 1  から  COLOR_ PAIRS  - 1  の 間 で な けれ ば な り ま せ ん ( 0  色 ペア は 黒色 背景 に 白色 前景 と な る よう に 設定 さ れ て お り 、 変更 する こと が でき ま せ ん )  。 
fg  および  bg  引数 は 0  と  COLORS  の 間 で な けれ ば な り ま せ ん 。 
色 ペア が 以前 に 初期 化 さ れ て い れ ば 、 スクリーン を 更新 し て 、 指定 さ れ た 色 ペア の 部分 を 新た な 設定 に 変更 し ま す 。 
ライブラリ を 初期 化 し ま す 。 
スクリーン 全体 を あらわ す  WindowObject  を 返 し ま す 。 
注意 : 端末 の オープン 時 に エラー が 発生 し た 場合 、 curses  ライブラリ に よ っ て インタープリタ が 終了 さ れ る 場合 が あ り ま す 。 
endwin( )  が すでに 呼び出 さ れ て い る  ( すなわち 、 curses  ライブラリ が 非 初期 化 さ れ て しま っ て い る )  場合 に 真 を 返 し ま す 。 
k  に 番号 付け さ れ て い る キー の 名前 を 返 し ま す 。 
印字 可能 な ASCII  文字 を 生成 する キー の 名前 は その キー の 文字 自体 に な り ま す 。 
コントロール キー と 組み合わせ た キー の 名前 は 、 キャレット の 後 に 対応 する ASCII  文字 が 続 く  2  文字 の 文字 列 に な り ま す 。 
Alt  キー と 組み合わせ た キー  ( 128 - 255 )  の 名前 は 、 先頭 に  ` M -' が 付 き 、 その 後 に 対応 する ASCII  文字 が 続 く 文字 列 に な り ま す 。 
ユーザ の 現在 の 行 削除 文字 を 返 し ま す 。 
現在 の 端末 に つ い て 記述 し て い る  terminfo  の 長形式  name  フィールド が 入 っ た 文字 列 を 返 し ま す 。 
verbose  形式 記述 の 最大 長 は  128  文字 で す 。 
この 値 は  initscr ( )  呼び出し の 後 で のみ 定義 さ れ て い ま す 。 
yes  が  1  の 場合 、 8  ビット 文字 を 入力 と し て 許 し ま す 。 
yes  が  0 の 場合 、  7  ビット 文字 だけ を 許 し ま す 。 
ボタン が 押 さ れ て から 離 さ れ る まで の 時間 を マウス クリック 一 回 と し て 認識 する 最大 の 時間 間隔 を 設定 し ま す 。  以前 の 内部 設定 値 を 返 し ま す 。 
標準 の 値 は  200  ミリ 秒 、 また は  5  分 の  1  秒 で す 。 
この 関数 が 呼 ば れ な い 限り 、 マウス イベント は 何 も 報告 さ れ ま せ ん 。 
ms  ミリ 秒 スリープ し ま す 。 
与え られ た 行 と カラム 数 を 持 つ パッド  ( pad )  データ 構造 を 生成 し 、 その ポインタ を 返 し ま す 。 
パッド は ウィンドウ オブジェクト と し て 返さ れ ま す 。  パッド は ウィンドウ と 同じ よう な もの で す が 、 スクリーン の サイズ に よ る 制限 を うけ ず 、 スクリーン の 特定 の 部分 に 関連 付け られ て い な く て も かま い ま せ ん 。 
大きな ウィンドウ が 必要 で あ り 、 スクリーン に は その ウィンドウ の 一部 しか 一 度 に 表示 し な い 場合 に 使え ま す 。 
( スクロール や 入力 エコー など に よ る )  パッド に 対 する 再 描画 は 起こ り ま せ ん 。 
パッド に 対 する  refresh( )  および  noutrefresh( )  メソッド は 、 パッド 中 の 表示 する 部分 と 表示 する ため に 利用 する スクリーン 上 の 位置 を 指定 する  6  つ の 引数 が 必要 で す 。  これ ら の 引数 は pminrow 、  pmincol 、  sminrow 、  smincol 、  smaxrow 、 smaxcol  で す ;  p  で 始ま る 引数 は パッド 中 の 表示 領域 の 左上 位置 で 、 s  で 始ま る 引数 は パッド 領域 を 表示 する スクリーン 上 の クリップ 矩形 を 指定 し ま す 。 
左上 の 角 が  ( begin_y ,  begin_x )  で 、 高 さ \/ 幅 が nlines\/ncols  の 新規 ウィンドウ を 返 し ま す 。 
標準 で は 、 ウィンドウ は 指定 さ れ た 位置 から スクリーン の 右下 まで 広が り ま す 。 
newlime モード に 入 り ま す 。 
この モード は リターン キー を 入力 中 の 改行 と し て 変換 し 、 出力 時 に 改行 文字 を 復帰  ( return)  と 改行  ( line - feed )  に 変換 し ま す 。  newline  モード は 初期 化 時 に は オン に な っ て い ま す 。 
cbreak  モード から 離れ ま す 。 
行 バッファ リング を 行 う 通常 の ``cooked' ' モード に 戻 り ま す 。 
echo  モード から 離れ ま す 。 
入力 の エコーバック は オフ に さ れ ま す 。 
newline  モード から 離れ ま す 。 
入力 時 の リターン キー から 改行 へ の 変換 、 および 出力 時 の 改行 から 復帰 \/ 改行 へ の 低 レベル 変換 を 無効 化 し ま す ( ただし 、 addch ( 'n')  の 振る舞い は 変更 せ ず 、 仮想 スクリーン 上 で は 常 に 復帰 と 改行 に 等し く な り ま す ) 。 
変換 を オフ に する こと で 、 curses  は 水平 方向 の 動き を 少し だけ 高速 化 でき る こと が あ り ま す ; また 、 入力 中 の リターン キー の 検出 が でき る よう に な り ま す 。 
noquiflush  ルーチン を 使 う と 、 通常 行 わ れ て い る  INTR 、 QUIT 、 および SUSP  文字 に よ る 入力 および 出力 キュー の フラッシュ が 行 わ れ な く な り ま す 。 
シグナル ハンドラ が 終了 し た 際 、 割り込み が 発生 し な かっ た か の よう に 出力 を 続 た い 場合 、 ハンドラ 中 で  noqiflush ( )  を 呼び出 す こと が でき ま す 。 
raw  モード から 離れ ま す 。 
要求 さ れ た 色 ペア 中 の 色 を 含 む  ( fg ,  bg )  から な る タプル を 返 し ま す 。 
pair_number  は  0  から 
COLOR_ PAIRS  -  1  の 間 で な けれ ば な り ま せ ん 。 
attr  に 対 する 色 ペアセット の 番号 を 返 し ま す 。  color_pair( )  は この 関数 の 逆 に 相当 し ま す 。 
tputs ( str ,  1 , putchar )  と 等価 で す ;  現在 の 端末 に お け る 、 指定 さ れ た  terminfo  機能 の 値 を 出力 し ま す 。 
putp  の 出力 は 常 に 標準 出力 に 送 ら れ る の で 注意 し て 下さ い 。 
flag  が 偽 なら 、 noqiflush ( )  を 呼 ぶ の と と 同じ 効果 で す 。 
flag  が 真 か 、 引数 が 与え られ て い な い 場合 、 制御 文字 が 読み出 さ れ た 最 に キュー は フラッシュ さ れ ま す 。 
raw  モード に 入 り ま す 。 
raw  モード で は 、 通常 の 行 バッファ リング と 割り込み  ( interrupt ) 、 終了  ( quit ) 、 一時 停止  ( suspend ) 、 および フロー 制御 キー は オフ に な り ま す ;  文字 は  curses  入力 関数 に 一 文字 づつ 渡 さ れ ま す 。 
端末 を ` ` program ' ' モード に 復旧 し 、 予め  def_prog_mode ( ) で 保存 し た 内容 に 戻 し ま す 。 
端末 を  ` ` shell' ' モード に 復旧 し 、 予め  def_shell_ mode ( ) で 保存 し た 内容 に 戻 し ま す 。 
仮想 スクリーン カーソル を  y 、 x  に 設定 し ま す 。  y  および  x  が 共 に  - 1  の 場合 、 leaveok  が 設定 さ れ ま す 。 
端末 を 初期 化 し ま す 。 
termstr  は 文字 列 で 、 端末 の 名前 を 与え ま す ; 省略 さ れ た 場合 、 TERM  環境 変数 の 値 が 使 わ れ ま す 。 
fd  は 初期 化 シーケンス が 送 ら れ る 先 の ファイル 記述 子 で す ;  fd を 与え な い 場合 、 sys . st dout  の ファイル 記述 子 が 使 わ れ ま す 。  start_color 
プログラマ が カラー を 利用 し た い 場合 で 、 かつ 他 の 何 ら か の カラー 操作 ルーチン を 呼び出 す 前 に 呼び出 さ な く て は な り ま せ ん 。 
この 関数 は  initscr ( )  を 呼 ん だ 直後 に 呼 ぶ よう に し て お く と よ い で しょ う 。 
start_color ( )  は  8  つ の 基本 色  ( 黒 、 赤 、 緑 、 黄 、 青 、 マゼンタ 、 シアン 、 および 白 )  と 、 色数 の 最大 値 と 端末 が サポート する 色 ペア の 最大 数 が 入 っ て い る 、 curses  モジュール に おけ る 二 つ の グローバル 変数 、 COLORS  および  COLOR_ PAIRS  を 初期 化 し ま す 。 
この 関数 は また 、 色 設定 を 端末 の スイッチ が 入れ られ た とき の 状態 に 戻 し ま す 。 
端末 が サポート する 全て の ビデオ 属性 を 論理 和 し た 値 を 返 し ま す 。 
この 情報 は 、 curses  プログラム が スクリーン の 見え 方 を 完全 に 制御 する 必要 が あ る 場合 に 便利 で す 。 
14  文字 以下 に な る よう に 切り詰め られ た 環境 変数  TERM  の 値 を 返 し ま す 。 
terminfo  機能 名  capname  に 対応 する 機能 値 を ブール 値 で 返 し ま す 。 
capname  が ブール 値 で 表 さ れ る 機能 値 で な い 場合  - 1 が 返 さ れ 、 機能 が キャンセル さ れ て い る か 、 端末 記述 上 に 見つか ら な い 場合 に は  0  を 返 し ま す 。 
terminfo  機能 名  capname  に 対応 する 機能 値 を 数値 で 返 し ま す 。 
capname  が 数値 で 表 さ れ る 機能 値 で な い 場合  - 2 が 返 さ れ 、 機能 が キャンセル さ れ て い る か 、 端末 記述 上 に 見つか ら な い 場合 に は  - 1  を 返 し ま す 。 
terminfo  機能 名  capname  に 対応 する 機能 値 を 文字 列 値 で 返 し ま す 。 
capname  が 文字 列 値 で 表 さ れ る 機能 値 で な い 場合 や 、 機能 が キャンセル さ れ て い る か 、 端末 記述 上 に 見つか ら な い 場合 に は  None  を 返 し ま す 。 
str  を 与え られ た パラメタ を 使 っ て 文字 列 に インスタンス 化 し ま す 。 
str  は terminfo  データベース から 得 られ た パラメタ を 持 つ 文字 列 で な けれ ば な り ま せ ん 。 
例えば 、 tparm ( tigetstr ( " cup " ) ,  5 ,  3 )  は  ' 0 3 3 [ 6 ; 4 H '  の よう に な り ま す 。  厳密 に は 端末 の 形式 に よ っ て 異な る 結果 と な り ま す 。 
先 読 み チェック に 使 う ため の ファイル 記述 子  fd  を 指定 し ま す 。 
fd  が  - 1  の 場合 、 先 読 み チェック は 行 わ れ ま せ ん 。  curses  ライブラリ は スクリーン を 更新 する 間 、 先読 み 文字 列 を 定期 的 に 検索 する こと で  ` ` 行 はみ出し 最適 化  ( line - breakout optimization ) ' ' を 行 い ま す 。 
入力 が 得 られ 、 かつ 入力 は 端末 から の もの で あ る 場合 、 現在 行 お う と し て い る 更新 は  refresh や  doupdate  を 再度 呼び出 す まで 先送り に し ま す 。 
この 関数 は 異な る ファイル 記述 子 で 先 読 み チェック を 行 う よう に 指定 する こと が でき ま す 。 
ch  の 印字 可能 な 表現 を 文字 列 で 返 し ま す 。 
制御 文字 は 例えば ^ C  の よう に キャレット に 続 く 文字 と し て 表示 さ れ ま す 。 
印字 可能 文字 は その まま で す 。 
ch  を プッシュ し て 、  getch ( )  を 次 に 呼び出 し た とき に 返 さ れ る よう に し ま す 。 
注意 :  getch ( )  を 呼び出 す まで は ch  は 一 つ しか プッシュ でき ま せ ん 。 
与え られ た 状態 データ が 関連 付け られ た  KEY_ MOUSE  イベント を 入力 キュー に プッシュ し ま す 。 
この 関数 を 使 う 場合 、 initscr ( )  また は  newterm  を 呼 ぶ 前 に 呼び出 さ な く て は な り ま せ ん 。 
flag  が 偽 の 場合 、 環境 変数 LINES  および  COLUMNS  の 値  ( これ ら は 標準 の 設定 で 使 わ れ ま す )  の 値 が 設定 さ れ て い たり 、 curses  が ウィンドウ 内 で 動作 し て  ( この 場合  LINES  や  COLUMNS  が 設定 さ れ て い な い と ウィンドウ の サイズ を 使 い ま す )  い て も 、 terminfo  データベース に 指定 さ れ た  lines  および  columns  の 値 を 使 い ま す 。 
この 機能 を サポート し て い る 端末 上 で 、 色 の 値 と し て デフォルト 値 を 使 う 設定 を し ま す 。 
あなた の アプリケーション で 透過 性 と サポート する ため に この 関数 を 使 っ て くださ い 。 
デフォルト の 色 は  色 番号 - 1 に 割り当て られ ま す 。  この 関数 を 呼 ん だ 後 、 たとえば  init_ pair ( x ,  curses . COLOR_ RED ,  - 1 ) は 色 ペア x を 赤 い 前 景色 と デフォルト の 背景色 に 初期 化 し ま す 。 
上記 の  new_ panel( )  が 返 す  Panel  オブジェクト は スタック 順 の 概念 を 持 つ ウィンドウ で す 。 
ウィンドウ は パネル に 関連 付け られ て お り 、 表示 する 内容 を 決定 し て い る 一方 、 パネル の メソッド は パネル スタック 中 の ウィンドウ の 深 さ 管理 を 担 い ま す 。  Panel  オブジェクト は 以下 の メソッド を 持 っ て い ま す : 
現在 の パネル の 上 に あ る パネル を 返 し ま す 。 
現在 の パネル の 下 に あ る パネル を 返 し ま す 。 
パネル を スタック の 最 下層 に プッシュ し ま す 。 
パネル が 隠れ て い る  ( 不可視 で あ る )  場合 に 真 を 返 し 、 そう で な い 場合 偽 を 返 し ま す 。 
パネル を 隠 し ま す 。 
この 操作 で は オブジェクト は 消去 さ れ ず 、 スクリーン 上 の ウィンドウ を 不 可視 に する だけ で す 。 
パネル を スクリーン 座標  ( y ,  x )  に 移動 し ま す 。 
パネル に 関連 付け られ た ウィンドウ を  win  に 変更 し ま す 。 
パネル の ユーザ ポインタ を  obj  に 設定 し ま す 。 
この メソッド は 任意 の データ を パネル に 関連 付け る ため に 使 わ れ 、 任意 の  Python  オブジェクト に する こと が でき ま す 。 
( 隠れ て い る はず の )  パネル を 表示 し ま す 。 
パネル を スタック の 最上層 に プッシュ し ま す 。 
パネル の ユーザ ポインタ を 返 し ま す 。 
任意 の  Python  オブジェクト で す 。 
パネル に 関連 付け られ て い る ウィンドウ オブジェクト を 返 し ま す 。 
6 . 16 . 1  Text box  オブジェクト 
以下 の よう な  Text box  オブジェクト を インスタンス 生成 する こと が でき ま す : 
クラス Text box 
テキスト ボックス ウィ ジェット オブジェクト を 返 し ま す 。 
Text box  オブジェクト は 以下 の メソッド を 持 ち ま す : 
普段 使 う こと に な る エントリ ポイント で す 。 
終了 キー ストローク の 一 つ が 入力 さ れ る まで 編集 キー ストローク を 受け付け ま す 。 
validator を 与え る 場合 、 関数 で な けれ ば な り ま せ ん 。 
validator  は キー ストローク が 入力 さ れ る たび に その キー ストローク が 引数 と な っ て 呼び出 さ れ ま す ;  返 さ れ た 値 に 対 し て 、 コマンド キー ストローク と し て 解釈 が 行 わ れ ま す 。 
この メソッド は ウィンドウ の 内容 を 文字 列 と し て 返 し ま す ; ウィンドウ 内 の 空白 が 含め られ る か どう か は  stripspaces  メンバ で 決め られ ま す 。 
単一 の コマンド キー ストローク を 処理 し ま す 。 
以下 に サポート さ れ て い る 特殊 キー ストローク を 示 し ま す : 
キー ストローク 
動作 
ウィンドウ の 左端 に 移動 し ま す 。 
カーソル を 左 へ 移動 し 、 必要 なら 前 の 行 に 折り返 し ま す 。 
カーソル 下 の 文字 を 削除 し ま す 。 
右端  ( stripspaces  が オフ の とき )  また は 行末  ( stripspaces  が オン の とき )  に 移動 し ま す 。 
カーソル を 右 に 移動 し 、 必要 なら 次 の 行 に 折り返 し ま す 。 
ウィンドウ を 終了 し 、 その 内容 を 返 し ま す 。 
逆 方向 に 文字 を 削除 し ま す 。 
( バック ス ペース )  Control - J 
ウィンドウ が  1  行 で あ れ ば 終了 し 、 そう で な けれ ば 新し い 行 を 挿入 し ま す 。 
行 が 空白 行なら その 行 全体 を 削除 し 、 そう で な けれ ば カーソル 以降 行末 まで を 消去 し ま す 。 
スクリーン を 更新 し ま す 。 
カーソル を 下 に 移動 し ま す ;  1  行下 に 移動 し ま す 。 
カーソル の 場所 に 空行 を  1  行 挿入 し ま す 。 
カーソル を 上 に 移動 し ま す ;  1  行上 に 移動 し ま す 。 
移動 操作 は 、 カーソル が ウィンドウ の 縁 に あ っ て 移動 が でき な い 場合 に は 何 も 行 い ま せ ん 。 
場合 に よ っ て は 、 以下 の よう な 同義 の キー ストローク が サポート さ れ て い ま す : 
定数 
他 の キー ストローク は 、 与え られ た 文字 を 挿入 し 、 ( 行 折り返 し 付き で ) 右 に 移動 する コマンド と し て 扱 わ れ ま す 。 
この メソッド は ウィンドウ の 内容 を 文字 列 と し て 返 し ま す ;  ウィンドウ 内 の 空白 が 含め られ る か どう か は  stripspaces  メンバ 変数 で 決め られ ま す 。 
この データ メンバ は ウィンドウ 内 の 空白 領域 の 解釈 方法 を 制御 する ため の フラグ で す 。 
フラグ が オン に 設定 さ れ て い る 場合 、 各行 の 末端 に あ る 空白 領域 は 無視 さ れ ま す ;  すなわち 、 末端 空白 領域 に カーソル が 入 る と 、 その 場所 の 代わり に 行 の 末尾 に カーソル が 移動 し ま す 。  また 、 末端 の 空白 領域 は ウィンドウ の 内容 を 取得 する 際 に 剥ぎ取 ら れ ま す 。 
6 . 15 . 3  定数 
上記 の  initscr ( )  や  newwin( )  が 返 す ウィンドウ は 、 以下 の メソッド を 持 ち ま す : 
( y ,  x )  に あ る 文字  ch  を 属性  attr で 描画 し ま す 。  この とき その 場所 に 以前 描画 さ れ た 文字 は 上書き さ れ ま す 。 
標準 の 設定 で は 、 文字 の 位置 および 属性 は ウィンドウ オブジェクト に お け る 現在 の 設定 に な り ま す 。 
文字 列  str  から 最大 で  n  文字 を  ( y ,  x )  に 属性  attr  で 描画 し ま す 。  以前 ディスプレイ に あ っ た 内容 は すべて 上書き さ れ ま す 。 
( y ,  x )  に 文字 列  str  を 属性  attr  で 描画 し ま す 。  以前 ディスプレイ に あ っ た 内容 は すべて 上書き さ れ ま す 。 
現在 の ウィンドウ に 書き込 ま れ た 全て の 内容 に 対 し  ` ` バック グラウンド ' '  に 設定 さ れ た 属性  attr  を 除去 し ま す 。 
現在 の ウィンドウ に 書き込 ま れ た 全て の 内容 に 対 し  ` ` バック グラウンド ' '  に 属性  attr  を 追加 し ま す 。 
` ` バック グラウンド ' '  の 属性 セット を  attr  に 設定 し ま す 。 
初期 値 は  0  ( 属性 なし )  で す 。 
ウィンドウ 上 の 背景 プロパティ を 、  attr  を 属性 と する 文字  ch  に 設定 し ま す 。 
変更 は その ウィンドウ 中 の 全て の 文字 に 以下 の よう に し て 適用 さ れ ま す : 
ウィンドウ 中 の 全て の 文字 の 属性 が 新た な 背景 属性 に 変更 さ れ ま す 。 
以前 の 背景 文字 が 出現 する と 、 常 に 新た な 背景 文字 に 変更 さ れ ま す 。 
ウィンドウ の 背景 を 設定 し ま す 。 
ウィンドウ の 背景 は 、 文字 と 何 ら か の 属性 の 組み合わせ から 成り立ち ま す 。 
背景 情報 の 属性 の 部分 は 、 ウィンドウ 上 に 描画 さ れ て い る 空白 で な い 全て の 文字 と 組み合わさ れ ( OR  さ れ )  ま す 。 
空白 文字 に は 文字 部分 と 属性 部分 の 両方 が 組み合わ さ れ ま す 。 
背景 は 文字 の プロパティ と な り 、 スクロール や 行 \/ 文字 の 挿入 \/ 削除 操作 の 際 に は 文字 と 一緒 に 移動 し ま す 。 
ウィンドウ の 縁 に 境界 線 を 描画 し ま す 。 
各 引数 に は 境界 の 特定 部分 を 表現 する ため に 使 わ れ る 文字 を 指定 し ま す ;  詳細 は 以下 の テーブル を 参照 し て くださ い 。 
文字 は 整数 また は  1  文字 から な る 文字 列 で 指定 さ れ ま す 。 
注意 : どの 引数 も 、 0  を 指定 し た 場合 標準 設定 の 文字 が 使 わ れ る よう に な り ま す 。 
キー ワード 引数 は 使 う こと が  でき ま せ ん 。 
標準 の 設定 は テーブル 中 に 示 さ れ て い ま す : 
引数 
記述 
標準 の 設定 値 
左側 
右側 
上側 
下側 
左上 の 角 
右上 の 角 
左下 の 角 
右下 の 角 
border ( )  と 同様 で す が 、 ls  および  rs  は 共 に  vertch  で 、 ts  および  bs  は 共 に  horch で す 。 
この 関数 で は 、 角 に 使 わ れ る 文字 は 常 に 標準 設定 の 値 で す 。 
erase ( )  に 似 て い ま す が 、 次 に  refresh( )  が 呼び出 さ れ た 際 に 全て の ウィンドウ を 再 描画 する よう に し ま す 。 
yes  が  1  なら ば 、 次 の  refresh( )  は ウィンドウ を 完全 に 消去 し ま す 。 
カーソル の 位置 から ウィンドウ の 端 まで を 消去 し ま す :  カーソル 以降 の 全て の 行 が 削除 さ れ る ため 、  clrtoeol ( )  が 実行 さ れ た の と おなじ に な り ま す 。 
カーソル 位置 から 行末 まで を 消去 し ま す 。 
ウィンドウ の 全て の 親 ウィンドウ に つ い て 、 現在 の カーソル 位置 を 反映 する よう 更新 し ま す 。 
( y ,  x )  に あ る 文字 を 削除 し ま す 。 
カーソル の 下 に あ る 行 を 削除 し ま す 。 
後続 の 行 は すべて  1  行上 に 移動 し ま す 。 
`` derive  window ( ウィンドウ を 導出 する ) ' ' の 短縮 形 で す 。 
derwin( )  は  subwin( )  と 同じ で す が 、 begin_y  および  begin + x  は スクリーン 全体 の 原点 で は な く 、 ウィンドウ の 原点 から の 相対 位置 で す 。 
導出 さ れ た ウィンドウ オブジェクト が 返 さ れ ま す 。 
文字  ch  に 属性  attr  を 付与 し 、 即座 に  refresh ( ) を ウィンドウ に 対 し て 呼び出 し ま す 。 
与え られ た 文字 セル 座標 を スクリーン 原点 から 相対 的 な もの と し 、 ウィンドウ の 中 に 含 ま れ る か を 調べ て 、 真 また は 偽 を 返 し ま す 。 
スクリーン 上 の ウィンドウ の 一部 が マウス イベント の 発生 場所 を 含 む か どう か を 調べ る 上 で 便利 で す 。 
ウィンドウ を クリア し ま す 。 
左上 の 角 の 座標 を あらわ す タプル  ( y ,  x )  を 返 し ま す 。 
文字 を 取得 し ま す 。 
返 さ れ る 整数 は  ASCII  の 範囲 の 値 と な る わけ で は な い  の で 注意 し て くださ い :  ファンクション キー 、 キー パッド 上 の キー 等 は  256  より も 大きな 数字 を 返 し ま す 。 
無 遅延 ( no- delay )  モード で は 、 入力 が な い 場合  - 1  が 返 さ れ ま す 。 
文字 を 取得 し 、  getch ( )  の よう に 整数 を 返 す 代わり に 文字 列 を 返 し ま す 。 
ファンクション キー 、 キー バット キー など は キー 名 の 入 っ た 複数 バイト から な る 文字 列 を 返 し ま す 。 
無 遅延 モード で は 、 入力 が な い 場合 例外 が 送出 さ れ ま す 。 
ウィンドウ の 高 さ および 幅 を 表 す タプル  ( y ,  x )  を 返 し ま す 。 
親 ウィンドウ 中 に おけ る ウィンドウ の 開始 位置 を  x  と  y  の 二 つ の 整数 で 返 し ま す 。 
ウィンドウ に 親 ウィンドウ が な い 場合 - 1 , - 1  を 返 し ま す 。 
原始 的 な 文字 編集 機能 つき で 、 ユーザ の 入力 文字 列 を 読み取 り ま す 。 
ウィンドウ の 左上 角 から の 相対 で 表 し た 現在 の カーソル 位置 を タプル ( y ,  x )  で 返 し ま す 。 
( y ,  x )  から 始ま り 、  n  の 長 さ を 持 つ 、 文字  ch  で 作 ら れ る 水平 線 を 表示 し ま す 。 
flag  が 偽 の 場合 、 curses  は 端末 の ハードウェア に よ る 文字 挿入 \/ 削除 機能 を 使 お う と し な く な り ま す ;  flag  が 真 なら ば 、 文字 挿入 \/ 削除 は 有効 に さ れ ま す 。 
curses  が 最初 に 初期 化 さ れ た 際 に は 文字 挿入 \/ 削除 は 標準 の 設定 で 有効 に な っ て い ま す 。 
yes  が  1  で あ れ ば 、 curses  は ハードウェア の 行 編集 機能 を 利用 し よ う と 試み ま す 。 
行 挿入 \/ 削除 は 無効 化 さ れ ま す 。 
flag  が 真 なら ば 、 ウィンドウ イメージ 内 に お け る 何 ら か の 変更 が あ る と ウィンドウ を 更新 する よう に な り ま す ;  すなわち 、 refresh ( ) を 自分 で 呼 ば な く て も 良 く な り ま す 。 
と は い え 、 wrefresh  を 繰り返 し 呼び出 す こと に な る ため 、 この 操作 は かなり パフォーマンス を 低下 さ せ ま す 。 
標準 の 設定 で は 無効 に な っ て い ま す 。 
ウィンドウ の 指定 の 位置 の 文字 を 返 し ま す 。 
下位  8  ビット が 常 に 文字 と な り 、 それ より 上 の ビット は 属性 を 表 し ま す 。 
( y ,  x )  に 文字  ch  を 属性  attr  で 描画 し 、 行 の  x  から の 内容 を  1  文字 分 右 に ずら しま す 。 
nlines  行 を 指定 さ れ た ウィンドウ の 現在 の 行 の 上 に 挿入 し ま す 。 
その 下 に あ る  nlines  行 は 失 わ れ ま す 。 
負 の  nlines  を 指定 する と 、 カーソル の あ る 行 以降 の  nlines  を 削除 し 、 削除 さ れ た 行 の 後ろ に 続 く 内容 が 上 に 来 ま す 。 
その 下 に あ る  nlines  は 消去 さ れ ま す 。 
現在 の カーソル 位置 は その まま で す 。 
カーソル の 下 に 空行 を  1  行入れ ま す 。 
それ 以降 の 行 は  1  行づつ 下 に 移動 し ま す 。 
文字 列 を カーソル の 下 に あ る 文字 の 前 に  ( 一行 に 収ま る だけ )  最大  n  文字 挿入 し ま す 。 
n  が ゼロ また は 負 の 値 の 場合 、 文字 列 全体 が 挿入 さ れ ま す 。  カーソル の 右 に あ る 全て の 文字 は 右 に 移動 し 、 行 の 左端 に あ る 文字 は 失 わ れ ま す 。 
カーソル 位置 は  ( y 、  x  が 指定 さ れ て い た 場合 は そこ に 移動 し ま す が 、 その 後 は )  変化 し ま せ ん 。 
キャラクタ 文字 列 を  ( 行 に 収ま る だけ )  カーソル より 前 に 挿入 し ま す 。 
カーソル の 右側 に あ る 文字 は 全て 右 に シフト し 、 行 の 右端 の 文字 は 失 わ れ ま す 。 
現在 の カーソル 位置 、 また は  y ,  x  が 指定 さ れ て い る 場合 に は その 場所 から 始ま る キャラクタ 文字 列 を ウィンドウ から 抽出 し て 返 し ま す 。 
属性 は 文字 から 剥ぎ取 ら れ ま す 。 
n  が 指定 さ れ た 場合 、 instr ( ) は  ( 末尾 の  NUL  文字 を 除 い て )  最大 で  n  文字 まで の 長 さ から な る 文字 列 を 返 し ま す 。  is _linetouched
指定 し た 行 が 、 最後 に  refresh( )  を 呼 ん だ 時 から 変更 さ れ て い る 場合 に 真 を 返 し ま す ;  そう で な い 場合 に は 偽 を 返 し ま す 。 
line  が 現在 の ウィンドウ 上 の 有効 な 行 で な い 場合 、 curses .error  例外 を 送出 し ま す 。 
指定 し た ウィンドウ が 、 最後 に  refresh( )  を 呼 ん だ 時 から 変更 さ れ て い る 場合 に 真 を 返 し ま す ;  そう で な い 場合 に は 偽 を 返 し ま す 。 
yes  が  1  の 場合 、 ある 種 の キー  ( キー パッド や ファンクション キー ) に よ っ て 生成 さ れ た エスケープ シーケンス は  curses  で 解釈 さ れ ま す 。  yes  が  0  の 場合 、 エスケープ シーケンス は 入力 ストリーム に その まま の 状態 で 残 さ れ ま す 。 
yes  が  0  の 場合 、 カーソル は 更新 の 際 に 常 に  ` ` カーソル 位置 ' ' に 移動 し ま す 。 
カーソル を  ( new_ y ,  new_ x )  に 移動 し ま す 。 
ウィンドウ を 親 ウィンドウ の 中 で 移動 し ま す 。 
ウィンドウ の スクリーン 相対 と な る パラメタ 群 は 変化 し ま せ ん 。 
この ルーチン は 親 ウィンドウ の 一部 を スクリーン 上 の 同じ 物理 位置 に 表示 する 際 に 用い られ ま す 。 
ウィンドウ の 左上 角 が  ( new_ y ,  new_ x ) に な る よう に 移動 し ま す 。 
yes  が  1  の 場合 、 getch ( )  は 非 ブロック で 動作 し ま す 。 
yes  が  1  の 場合 、 エスケープ シーケンス は タイム アウト し な く な り ま す 。  yes  が  0  の 場合 、 数 ミリ 秒間 の 間 エスケープ シーケンス は 解釈 さ れ ず 、 入力 ストリーム 中 に その まま の 状態 で 残 さ れ ま す 。 
更新 を マーク は し ま す が 待機 し ま す 。 
この 関数 は ウィンドウ の データ 構造 を 表現 し た い 内容 を 反映 する よう に 更新 し ま す が 、 物理 スクリーン 上 に 反映 さ せ る ため の 強制 更新 を 行 い ま せ ん 。 
更新 を 行 う ため に は doupdate ( )  を 呼び出 し ま す 。 
ウィンドウ を  destwin  の 上 に 重ね書き  (overlay )  し ま す 。 
ウィンドウ は 同じ サイズ で あ る 必要 は な く 、 重な っ て い る 領域 だけ が 複写 さ れ ま す 。 
destwin  の 上 に ウィンドウ の 内容 を 上書き  (overwrite )  し ま す 。 
ウィンドウ は 同じ サイズ で あ る 必要 は な く 、 重な っ て い る 領域 だけ が 複写 さ れ ま す 。 
ウィンドウ に 関連 付け られ て い る 全て の データ を 与え られ た ファイル オブジェクト に 書き込 み ま す 。 
この 情報 は 後 に  getwin( )  関数 を 使 っ て 取得 する こと が でき ま す 。 
beg  行 から 始ま る  num  スクリーン 行 の 表示 内容 が 壊れ て お り 、 次 の  refresh( )  呼び出し で 完全 に 再 描画 さ れ な けれ ば な ら な い こと を 通知 し ま す 。 
ウィンドウ 全体 を 更新  ( touch )  し 、 次 の  refresh( )  呼び出し で 完全 に 再 描画 さ れ る よう に し ま す 。 
ディスプレイ を 即時 更新 し  ( 現実 の ウィンドウ と これ まで の 描画 \/ 削除 メソッド の 内容 と の 同期 を とり )  ま す 。  6  つ の オプション 引数 は ウィンドウ が  newpad ( )  で 生成 さ れ た 場合 に のみ 指定 する こと が でき ま す 。 
追加 の 引数 は パッド や スクリーン の どの 部分 が 含 ま れ る の か を 示 す ため に 必要 で す 。 
pminrow  および  pmincol  に は パッド が 表示 さ れ て い る 矩形 の 左上 角 を 指定 し ま す 。  sminrow ,  smincol ,  smaxrow ,  および  smaxcol  に は 、 スクリーン 上 に 表示 さ れ る 矩形 の 縁 を 指定 し ま す 。 
パッド 内 に 表示 さ れ る 矩形 の 右下 角 は スクリーン 座標 から 計算 さ れ る の で 、 矩形 は 同じ サイズ で な けれ ば な り ま せ ん 。 
矩形 は 両方 とも 、 それぞれ の ウィンドウ 構造 内 に 完全 に 含 ま れ て い な けれ ば な り ま せ ん 。 
pminrow ,  pmincol ,  sminrow ,  また は  smincol  に 負 の 値 を 指定 する と 、 ゼロ を 指定 し た もの と し て 扱 わ れ ま す 。 
スクリーン また は スクロール 領域 を 上 に  lines  行 スクロール し ま す 。 
ウィンドウ の カーソル が 、 最 下行 で 改行 を 行 っ たり 最後 の 文字 を 入力 し たり し た 結果 、 ウィンドウ や スクロール 領域 の 縁 から はみ出 し て 移動 し た 際 の 動作 を 制御 し ま す 。 
flag  が 偽 の 場合 、 カーソル は 最 下行 に その まま に し て お か れ ま す 。 
flag  が 真 の 場合 、 ウィンドウ は  1  行上 に スクロール し ま す 。 
端末 の 物理 スクロール 効果 を 得 る ため に は idlok ( )  も 呼び出 す 必要 が あ る の で 注意 し て くださ い 。 
スクロール 領域 を  top  から  bottom  に 設定 し ま す 。 
スクロール 動作 は 全て この 領域 で 行 わ れ ま す 。 
A_ STANDOUT  属性 を オフ に し ま す 。 
端末 に よ っ て は 、 この 操作 で 全て の 属性 を オフ に する 副 作用 が 発生 し ま す 。 
A_ STANDOUT  属性 を オン に し ま す 。 
左上 の 角 が  ( begin_y ,  begin_x )  に あ り 、 幅 \/ 高 さ が それぞれ  ncols\/nlines  で あ る よう な サブ ウィンドウ を 返 し ま す 。 
左上 の 角 が  ( begin_y ,  begin_x )  に あ り 、 幅 \/ 高 さ が それぞれ  ncols\/nlines  で あ る よう な サブ ウィンドウ を 返 し ま す 。 
標準 の 設定 で は 、 サブ ウィンドウ は 指定 さ れ た 場所 から ウィンドウ の 右下 角 まで 広が り ま す 。 
この ウィンドウ の 上位 の ウィンドウ の いずれ か で 更新 ( touch ) さ れ た 各 場所 を この ウィンドウ 内 で も 更新 し ま す 。 
この ルーチン は  refresh( )  から 呼び出 さ れ る の で 、 手動 で 呼び出 す 必要 は ほとんど な い はず で す 。 
flag  を 真 に し て 呼び出 す と 、 ウィンドウ が 変更 さ れ た 際 は 常 に syncup ( )  を 自動 的 に 呼 ぶ よう に な り ま す 。 
ウィンドウ 内 で 更新  ( touch )  し た 場所 を 、 上位 の 全て の ウィンドウ 内 で も 更新 し ま す 。 
ウィンドウ の ブロック また は 非 ブロック 読み込 み 動作 を 設定 し ま す 。 
delay  が 負 の 場合 、 ブロック 読み出し が 使 わ れ 、 入力 を 無 期限 で 待ち受け ま す 。 
delay  が ゼロ の 場合 、 非 ブロック 読み出し が 使 わ れ 、  入力 待ち の 文字 が な い 場合  getch ( )  は  - 1  を 返 し ま す 。 
delay  が 正 の 値 で あ れ ば 、  getch ( )  は delay  ミリ 秒間 ブロック し 、 ブロック 後 の 時点 で 入力 が な い 場合 に は - 1  を 返 し ま す 。 
start  から 始ま る  count  行 が 変更 さ れ た か の よう に 振舞 わ せ ま す 。 
描画 を 最適 化 する ため に 、 全て の ウィンドウ が 変更 さ れ た か の よう に 振舞 わ せ ま す 。 
ウィンドウ 内 の 全て の 行 を 、 最後 に  refresh( )  を 呼 ん だ 際 から 変更 さ れ て い な い もの と し て マーク し ま す 。 
( y ,  x )  から 始ま り 、  n  の 長 さ を 持 つ 、 文字  ch  で 作 ら れ る 垂直 線 を 表示 し ま す 。 
curses . panel  で は 以下 の 関数 を 定義 し て い ま す : 
パネル スタック の 最 下層 の パネル を 返 し ま す 。 
与え られ た ウィンドウ  win  に 関連 付け られ た パネル オブジェクト を 返 し ま す 。 
パネル スタック の 最上層 の パネル を 返 し ま す 。 
仮想 スクリーン を パネル スタック 変更 後 の 状態 に 更新 し ま す 。 
この 関数 で は curses . doupdate ( )  を 呼 ば な い の で 、 ユーザ は 自分 で 呼び出 す 必要 が あ り ま す 。 
インスタンス が 生成 さ れ た 際 に 呼び出 さ れ る コンストラクタ  ( constructor ) で す 。 
引数 は その クラス の コンストラクタ 式 に 渡 し た 引数 に な り ま す 。 
基底 クラス が _ _ init_ _( )  メソッド を 持 っ て い る 場合 、 導出 クラス の  __init_ _( )  メソッド で は 、 例えば  " BaseClass . __init_ _( self , [ args . . . ] ) "  の よう に 、 必要 なら ば 明示 的 に 基底 クラス の _ _ init_ _( )  メソッド を 呼び出 し て 、 インスタンス の 基底 クラス に 関わ る 部分 が 正し く 初期 化 さ れ る よう に し な けれ ば な り ま せ ん 。 
コンストラクタ に は 、 値 を 返 し て は な ら な い と い う 特殊 な 制限 が あ り ま す ;  値 を 返 す よう に する と 、 実行 時 に TypeError  の 送出 を 引き起こ し ま す 。 
インスタンス が 消滅 さ せ られ る 際 に 呼び出 さ れ ま す 。 
この メソッド は デストラクタ  ( destructor ) 
と も 呼 ば れ ま す 。 
基底 クラス が __ del_ _( )  メソッド を 持 っ て い る 場合 、 導出 クラス の __ del_ _( )  メソッド で は 、 必要 なら ば 明示 的 に 基底 クラス の __ del_ _( )  メソッド を 呼び出 し て 、 インスタンス の 基底 クラス に 関わ る 部分 が 正し く 消滅 処理 さ れ る よう に し な けれ ば な り ま せ ん 。 
__ del_ _( )  メソッド で イン スタンス に 対 する 新た な 参照 を 作 る こと で 、 インスタンス の 消滅 を 遅らせ る こと が でき ま す  ( と は い え 、 推奨 し ま せ ん ! ) 。 
この よう に する と 、 新た に 作成 さ れ た 参照 が その 後 削除 さ れ た 際 に もう 一 度 __ del_ _( )  メソッド が 呼び出 さ れ ま す 。 
インタプリタ が 終了 する 際 に 残 っ て い る オブジェクト に 対 し て 、 __ del_ _( )  メソッド が 呼び出 さ れ る 保証 は あ り ま せ ん 。 
注意 : " del  x "  は 直接  x .__ del_ _( )  を 呼び出 し ま せ ん - -  前者 は  x  へ の 参照 カウント  ( reference count )  を  1  つ 減ら し 、 後者 は  x  へ の 参照 カウント が ゼロ に な っ た 際 に のみ 呼び出 さ れ ま す 。 
ごみ オブジェクト と 化 し た 循環 参照 は 、 オプション の 循環 参照 検出 機構  ( cycle  detector )  が 有効 に さ れ て い る 場合  ( これ は デフォルト の 設定 で す )  に は 検出 さ れ ま す が 、 検出 さ れ た 循環 参照 を 消去 する の は  Python  レベル で __ del_ _( )  メソッド が 定義 さ れ て い な い 場合 だけ で す 。 
__ del_ _( )  メソッド が 循環 参照 検出 機構 で どの よう に 扱 わ れ る か 、 とりわけ  garbage  値 の 記述 に 関 し て は 、 
また 、 ( 例えば プログラム の 実行 終了 に よ る )  モジュール の 削除 に 伴 っ て __ del_ _( )  が 呼び出 さ れ る 際 に は 、 __ del_ _( )  メソッド が 参照 し て い る 他 の グローバル 変数 は すでに 削除 さ れ て い る か も しれ ま せ ん 。 
この 理由 から 、 __ del_ _( )  メソッド で は 外部 の 不変 関係 を 維持 する 上 で 絶対 最低 限 必要 な こと だけ を す べ き で す 。 
バージョン  1 . 5  から は 、 単一 の アンダース コア で 始ま る よう な グローバル 変数 は 、 他 の グローバル 変数 が 削除 さ れ る 前 に モジュール から 削除 さ れ る よう に  Python  側 で 保証 し て い ま す ;  これ ら の アンダース コア 付き グローバル 変数 は 、 __ del_ _( )  が 呼び出 さ れ た 際 に 、 import  さ れ た モジュール が まだ 残 っ て い る か 確認 する 上 で 役 に 立 ち ま す 。 
組み込 み 関数 repr ( ) 
や 、 文字 列 へ の 変換  ( 逆 クオート 表記 :  reverse  quote )  の 際 に 呼び出 さ れ 、 オブジェクト を 表 す  ` ` 公式 の  (official ) ' ' 文字 列 を 計算 し ま す 。 
可能 な 場合 に は 、 この 値 は 同じ 値 を 持 っ た オブジェクト を ( 適切 な 環境 で )  再生成 する ため に 使え る よう な 有効 な  Python  式 に 似せ る べ き で す 。 
それ が 不 可能 なら 、 " . . . someusefuldescription . . . "  形式 の 文字 列 を 返 し て くださ い 。 
戻 り 値 は 文字 列 オブジェクト で な けれ ば な り ま せ ん 。  クラス が _ _repr_ _( )  を 定義 し て い る が __str_ _( ) を 定義 し て い な い 場合 、 その クラス の インスタンス に 対 する ` ` 非 公式 の  ( informal ) ' ' 文字 列 表現 が 必要 な とき に も _ _repr_ _( )  が 使 わ れ ま す 。 
この 関数 は デバッグ の 際 に よく 用い られ る の で 、 たくさん の 情報 を 含 み 、 あいまい で な い よう な 表記 に する こと が 重要 で す 。 
組み込 み 関数  str ( ) 
および print 
文 に よ っ て 呼び出 さ れ 、 オブジェクト を 表 す  ` ` 非 公式 の ' '  文字 列 を 計算 し ま す 。 
この メソッド は 、 有効 な  Python  式 を 返 さ な く て も 良 い と い う 点 で 、 _ _repr_ _( )  と 異な り ま す :  その 代わ り 、 より 便利 で 分か り やす い 表現 を 返 す よう に し て くださ い 。 
戻 り 値 は 文字 列 オブジェクト で な けれ ば な り ま せ ん 。 
は  x .__lt__( y )  を 呼び出 し ま す ; 
は 
x ._ _le__( y )  を 呼び出 し ま す ; 
は 
x . _ _eq__( y )  を 呼び出 し ま す ; 
は  x ._ _gt__( y )  を 呼び出 し ま す ; 
x . _ _ ge__( y )  を 呼び出 し ま す 。 
すなわち 、  x = = y 
が 真 で あ る 場合 、 暗黙 の うち に 
が 偽 に な る わけ で は あ り ま せ ん 。 
与え られ た 引数 ペア の 間 で 演算 が 実装 さ れ て い な い 場合 、 拡張 比較 メソッド は  NotImplemented  を 返 し ま す 。 
拡張 比較  ( 上 参照 )  が 定義 さ れ て い な い 場合 、 比較 演算 に よ っ て 呼び出 さ れ ま す 。 
self other  で あ る 場合 に は 負 の 値 、 self == other  なら ば ゼロ 、 self other  で あ れ ば 正 の 値 を 返 さ な けれ ば な り ま せ ん 。 
演算 _ _cmp__( )  、__eq_ _( )  および _ _ne__( )  が いずれ も 定義 さ れ て い な い 場合 、 クラス インスタンス は オブジェクト の アイデンティティ  ( `` アドレス ' ' ) で 比較 さ れ ま す 。 
自作 の 比較 演算 を サポート する オブジェクト や 、 辞書 の キー と し て 使え る オブジェクト を 生成 する に は 、 _ _ hash_ _( )  に 関 する 記述 を 参照 し て くださ い 。  ( 注意 : __cmp__( )  が 例外 を 伝播 し な い と い う 制限 は Python  1 . 5  から 除去 さ れ ま し た 。 
バージョン  2 . 1  で  変更  さ れ た 仕様 : もはや サポート さ れ て い ま せ ん 
辞書 演算 に お け る ハッシュ 値 と し て 利用 でき る 、 32  ビット の 整数 を 返 さ な けれ ば な り ま せ ん 。 
この メソッド に 必要 な 性質 は 、 比較 結果 が 等価 で あ る オブジェクト は 同じ ハッシュ 値 を も つ と い う こと で す ;  オブジェクト 間 で 比較 を 行 う 際 に は 、 オブジェクト の 各 要素 に 対 する ハッシュ 値 を  ( 排他 的 論理 和 を と る など し て )  何 ら か の 方法 で 混合 する よう 勧め ま す 。 
クラス が __cmp__( )  メソッド を 定義 し て い な い 場合 、 _ _ hash_ _( )  メソッド も 定義 し て は な り ま せ ん ;  クラス が _ _cmp__( )  また は __eq_ _( )  を 定義 し て い る が 、 _ _ hash_ _( )  を 定義 し て い な い 場合 、 インスタンス を 辞書 の キー と し て 使 う こと は でき ま せ ん 。  クラス が 変更 可能 な オブジェクト を 定義 し て お り 、 __cmp__( )  また は __eq_ _( )  メソッド を 実装 し て い る 場合 、 _ _ hash_ _( ) を 定義 し て は な り ま せ ん 。 
これ は 、 辞書 の 実装 に お い て ハッシュ 値 が 変更 不能 で あ る こと が 要求 さ れ て い る から で す  ( オブジェクト の ハッシュ 値 が 変化 する と 、 キー が 誤 っ た ハッシュ バケツ :  hashbucket  に 入 っ て い る こと に な っ て しま い ま す ) 。 
真値 テスト や 組み込 み 演算  bool ( )  を 実現 する ため に 呼び出 さ れ ま す ;  False  また は  True  か 、 等価 な 整数 値 0  また は  1  を 返 さ な けれ ば な り ま せ ん 。  この メソッド が 定義 さ れ て い な い 場合 、 _ _len__( )  ( 下記 参照 ) が 定義 さ れ て い れ ば 呼び出 さ れ ま す 。 
_ _len__( )  と__nonzero_ _( )  の どちら も クラス で 定義 さ れ て い な い 場合 、 その クラス の インスタンス は すべて 真 の 値 を 持 つ もの と みな さ れ ま す 。 
組み込 み 関数  unicode ( )  を 実現 する ため に 呼び出 さ れ ま す 。 
Unicode  オブジェクト を 返 さ な けれ ば な り ま せ ん 。 
この メソッド が 定義 さ れ て い な けれ ば 、 文字 列 へ の 変換 が 試み られ 、 その 結果 が デフォルト の 文字 エンコード を 用い て Unicode  に 変換 さ れ ま す 。 
7 . 3  Cygwin  で の 作業  多く の パッケージ は  Cygwin  環境 下 で の インストール が 難し い ため に 、 Cygwin 用 に 必要 な ツール の  Cygwin  環境 下 で の インストール は 少し 厄介 で す 。 
Cygwin インストーラ を 使 っ て 、  Cygwin  の インストール に よ っ て  Perl 、 Python 、 そして  TeX  パッケージ が 入 っ て い る こと を 確認 し て くださ い 。 
Perl  と  Python  は インストーラ の  Interpreters  セクション の 下 に 配置 さ れ て い ま す 。  TeX  パッケージ は  Text セクション の 下 で す ; tetex - beta、 texmkf 、 texmf - base 、 および  texmf - extra  を インストール する と 、 必要 な 全て の パッケージ を 利用 でき る よう に な り ま す 。 
説明 に 従 っ て インストール し て くださ い 。 
LaTeX2 HTML  は ソース アーカイブ から の インストール も でき ま す が 、 配布 物 中 の あ る ファイル を いじ っ て から で な い と でき ま せ ん 。 
展開 し た 配布 物 の トップ レベル に あ る  L2 hos . pm  を 編集 し て くださ い ; ファイル の 末尾 近く に あ る 、 $^ O  と い う テキスト を 'unix '  に 変更 し て くださ い 。 
以下 の コマンド を 使 っ て ソフトウェア を ビルド し て インストール し ま す : 
これ で 少な く とも  DVI 、 HTML 、 PDF 、 および  Post Script  形式 版 の フォーマット 済み ドキュメント を ビルド でき ま す 。 
3 . 1  オブジェクト 、 値 、 および 型 
3 . 3 . 2 . 1  新し い 形式 の クラス の ため の 別 の 属性 アクセス 
date  オブジェクト は 日付  ( 年 、 月 、 および 日 )  を 表 し ま す 。  日付 は 理想 的 な カレンダー 、 すなわち 現在 の グレゴリオ 暦 を 過去 と 未来 の 両 方向 に 無限 に 延長 し た もの で 表 さ れ ま す 。 
1  年 の  1  月  1  日 は 日 番号  1 、 1  年  1  月  2  日 は 日 番号  2 、 と な っ て い き ま す 。 
この 暦法 は 、 全て の 計算 に お け る 基本 カレンダー で あ る 、 Dershowitz  と  Reingold  の 書籍  Calendrical  Calculations に お け る  " 予期 的 グレゴリオ  ( proleptic  Gregorian ) "  暦 の 定義 に 一致 し ま す 。 
クラス date
全て の 引数 が 必要 で す 。 
引数 は 整数 で も 長 整数 で も よ く 、 以下 の 範囲 に 入 ら な けれ ば な り ま せ ん : 
1  =  day  =  指定 さ れ た 月 と 年 に お け る 日数 
範囲 を 超え た 引数 を 与え た 場合 、 ValueError  が 送出 さ れ ま す 。 
他 の コンストラクタ 、 および 全て の クラス メソッド を 以下 に 示 し ま す : 
現在 の ローカル な 日付 を 返 し ま す 。 
date . fromtimestamp( time. time() )  と 等価 で す 。 
time. time( )  が 返 す よう な  POSIX  タイム スタンプ に 対応 する 、 ローカル な 日付 を 返 し ま す 。 
タイム スタンプ が プラットフォーム に お け る  C  関数  localtime( ) で サポート さ れ て い る 範囲 を 超え て い る 場合 に は  ValueError を 送出 する こと が あ り ま す 。 
この 値 は よく  1970  年 から  203 8  年 に 制限 さ れ て い る こと が あ り ま す 。 
うる う 秒 が タイム スタンプ の 概念 に 含 ま れ て い る 非  POSIX  システム で は 、 fromtimestamp ( )  は うる う 秒 を 無視 し ま す 。 
予期 的 グレゴリオ 暦 順序 に 対応 する 日付 を 表 し 、 1  年  1  月  1  日 が 序数  1  と な り ま す 。 
1  = ordinal  = date . max . toordinal ( ) で な い 場合 、 ValueError  が 送出 さ れ ま す 。 
任意 の 日付  d  に 対 し 、 date . fromordinal ( d . toordinal ( )) == d  と な り ま す 。 
以下 に クラス 属性 を 示 し ま す : 
表現 でき る 最も 古 い 日付 で 、 date ( MINYEAR ,  1 ,  1 )  で す 。 
表現 でき る 最も 新し い 日付 で 、  date ( MAXYEAR ,  12 ,  31 )  で す 。 
等し く な い 日付 オブジェクト 間 の 最小 の 差 で 、 timedelta ( days = 1 ) で す 。 
以下 に  ( 読み出し 専用 の )  インスタンス 属性 を 示 し ま す : 
両端 値 を 含 む  MINYEAR  から  MAXYEAR  まで の 値 で す 。 
両端 値 を 含 む  1  から  12  まで の 値 で す 。 
1  から 与え られ た 月 と 年 に お け る 日数 まで の 値 で す 。 
サポート さ れ て い る 操作 を 以下 に 示 し ま す : 
date 2  は から  date1  から 
timedelta . days  日 移動 し た 日付 で す 。  ( 1 ) 
date1  が 時刻 と し て  date 2  より も 前 を 表 す 場合 に 、 date1  は date 2  より も 小さ い と 見な さ れ ま す 。 
date 2  は timedelta . days  0  の 場合 進 む 方向 に 、 
timedelta . days  0  の 場合 戻 る 方向 に 移動 し ま す 。 
演算 後 は 、 
date 2  -  date1 = =timedelta . days と な り ま す 。 
timedelta. seconds  および 
timedelta . microseconds  は 無視 さ れ ま す 。 
date 2 . year  が  MINYEAR  に な っ て しま っ たり 、 MAXYEAR  より 大き く な っ て しま う 場合 に は OverflowError  が 送出 さ れ ま す 。 
この 操作 は  date 1  +  (-timedelta )  と 等価 で は あ り ま せ ん 。  なぜ なら ば 、 date1 -timedelta が オーバフロー し な い 場合 で も 、 - timedelta  単体 が オーバフロー する 可能 性 が あ る から で す 。 
timedelta. seconds  および 
timedelta . microseconds  は 無視 さ れ ま す 。 
この 演算 は 厳密 で 、 オーバフロー し ま せ ん 。 timedelta. seconds および  timedelta . microseconds  は  0  で 、 演算 後 に は date 2  + timedelta= = date1  と な り ま す 。 
別 の 言 い 方 を する と 、  date1 . toordinal ( )  date 2 . toordinal ( ) で あ り 、 かつ その とき に 限 り  date1  date 2  と な り ま す 。 
型 混合 の 比較 が デフォルト の オブジェクト アドレス 比較 と な っ て しま う の を 抑止 する ため に 、 timedelta  オブジェクト と 異な る 型 の オブジェクト が 比較 さ れ る と  TypeError  が 送出 さ れ ま す 。 
しかし ながら 、 被 比較 演算 子 の もう 一方 が  timetuple  属性 を 持 つ 場合 に は  NotImplemented  が 返 さ れ ま す 。 
この フック に よ り 、 他種 の 日付 オブジェクト に 型 混合 比較 を 実装 する チャンス を 与え て い ま す 。  そう で な い 場合 、 timedelta  オブジェクト と 異な る 型 の オブジェクト が 比較 さ れ る と 、 比較 演算 子 が  = =  また は  ! = で な い かぎり  TypeError  が 送出 さ れ ま す 。 
後者 の 場合 、 それぞれ  False  また は  True を 返 し ま す 。 
date  オブジェクト は 辞書 の キー と し て 用い る こと が でき ま す 。 
ブール 演算 コンテキスト で は 、 全て の  date  オブジェクト は 真 で あ る と みな さ れ ま す 。  以下 に インスタンス メソッド を 示 し ま す : 
キー ワード 引数 で 指定 さ れ た データ メンバ が 置き換え られ る こと を 除 き 、 同じ 値 を 持 つ  date  オブジェクト を 返 し ま す 。 
例えば 、 d == date ( 2002 ,  12 ,  31 )  と する と 、 d . replace ( day= 26 )  == date ( 2002 ,  12 ,  26 )  と な り ま す 。 
時間 、 分 、 および 秒 は  0  で 、 DST  フラグ は  - 1  に な り ま す 。 
d . timetuple ( )  は time. struct_time(( d . year ,  d . month , d . day ,0 ,  0 ,  0 ,  d . weekday ( ) , d . toordinal ( ) - date ( d . year ,  1 ,  1 ) . toordinal ( )  +  1 , - 1 ) ) と 等価 で す 。 
予測 的 グレゴリオ 暦 に お け る 日付 序数 を 返 し ま す 。  1  年 の  1  月  1  日 が 序数  1  と な り ま す 。 
任意 の  date  オブジェクト  d  に つ い て 、 date . fromordinal ( d . toordinal ( )) == d 
と な り ま す 。 
月曜 日 を  0 、 日曜 日 を  6  と し て 、 曜日 を 整数 で 返 し ま す 。 
例えば 、  date ( 2002 ,  12 ,  4 ) . weekday ( ) = =  2 で あ り 、 水曜 日 を 示 し ま す 。 
isoweekday ( )  も 参照 し て くださ い 。 
月曜 日 を  1 、 日曜 日 を  7  と し て 、 曜日 を 整数 で 返 し ま す 。 
例えば 、  date ( 2002 ,  12 ,  4 ) . weekday ( ) = =  3 で あ り 、 水曜 日 を 示 し ま す 。 
weekday ( ) 、 isocalendar ( )  も 参照 し て くださ い 。 
細か い 説明 に つ い て は http:\/\/www .phys . uu . nl \/ ~ vgent\/ calendar\/ isocalendar .htm を 参照 し て くださ い 。 
ISO  年 は 完全 な 週 が  52  また は  53  週 あ り 、 週 は 月曜 から 始ま っ て 日曜 に 終わ り ま す 。  ISO  年 で の あ る 年 に お け る 最初 の 週 は 、 その 年 の 木曜 日 を 含 む 最初 の  ( グレゴリオ 暦 で の )  週 と な り ま す 。 
この 週 は 週 番号  1  と 呼 ば れ 、 この 木曜 日 で の  ISO  年 は グレゴリオ 暦 に お け る 年 と 等し く な り ま す 。 
例えば 、 2004  年 は 木曜 日 から 始ま る ため 、 ISO  年 の 最初 の 週 は 2003  年  12  月  29  日 、 月曜 日 から 始ま り 、 2004  年  1  月  4  日 、 日曜 日 に 終わ り ま す 。 
従 っ て 、 date ( 2003 ,  12 ,  29 ) . isocalendar ( ) ==  ( 2004 ,  1 ,  1 ) で あ り 、 かつ date ( 2004 ,  1 ,  4 ) . isocalendar ( ) ==  ( 2004 ,  1 ,  7 ) と な り ま す 。 
ISO  8601  形式 、 'YYYY - MM - DD ' の 日付 を 表 す 文字 列 を 返 し ま す 。 
例えば 、 date ( 2002 ,  12 ,  4 ) . isoformat ( ) ==  '2002 - 1 2 - 0 4 ' と な り ま す 。 
date  オブジェクト  d  に お い て 、 str ( d )  は 
d . isoformat ( )  と 等価 で す 。 
日付 を 表 す 文字 列 を 、 例えば date ( 2002 ,  12 ,  4 ) . ctime( ) ==  ' Wed  Dec  4  0 0 : 0 0 : 0 0  2002 ' の よう に し て 返 し ま す 。 
ネイティブ の  C  関数  ctime( ) ( time. ctime( )  は この 関数 を 呼び出 し ま す が 、 date . ctime( )  は 呼び出 し ま せ ん )  が  C  標準 に 準拠 し て い る プラットフォーム で は 、  d . ctime( )  は time. ctime(time. mktime( d . timetuple ( ))) と 等価 で す 。 
明示 的 な 書式 化 文字 列 で 制御 さ れ た 、 日付 を 表現 する 文字 列 を 返 し ま す 。 
時間 、 分 、 秒 を 表 す 書式 化 コード は 値  0  に な り ま す 。  strftime( )  の ふるまい に つ い て の セクション を 参照 し て くださ い 。 
datetime オブジェクト は  date  オブジェクト および time オブジェクト の 全て の 情報 が 入 っ て い る 単一 の オブジェクト で す 。 
date  オブジェクト と 同様 に 、 datetime は 現在 の グレゴリオ 暦 が 両 方向 に 延長 さ れ て い る もの と 仮定 し ま す ; また 、 time オブジェクト と 同様 に 、 datetime は 毎日 が 厳密 に  3600 * 24  秒 で あ る と 仮定 し ま す 。 
以下 に コンストラクタ を 示 し ま す :  クラス datetime
年 、 月 、 および 日 の 引数 は 必須 で す 。 tzinfo  は None  また は  tzinfo  クラス の サブ クラス の インスタンス に する こと が でき ま す 。 
残り の 引数 は 整数 また は 長 整数 で 、 以下 の よう な 範囲 に 入 り ま す : 
1  =  day  =  与え られ た 年 と 月 に お け る 日数 
引数 が これ ら の 範囲 外 に あ る 場合 、 ValueError  が 送出 さ れ ま す 。 
その 他 の コンストラクタ 、 および クラス メソッド を 以下 に 示 し ま す : 
現在 の ローカル な  datetime を tzinfo  が  None で あ る もの と し て 返 し ま す 。 
これ は datetime. fromtimestamp( time. time() )  と 等価 で す 。 now ( ) 、  fromtimestamp ( )  も 参照 し て くださ い 。 
現在 の ローカル な 日付 および 時刻 を 返 し ま す 。 
オプション の 引数 tz  が  None  で あ る か 指定 さ れ て い な い 場合 、 この メソッド は  today ( )  と 同様 で す が 、 可能 なら ば time. time( )  タイム スタンプ を 通 じ て 得 る こと が でき る より 高 い 精度 で 時刻 を 提供 し ま す  ( 例えば 、 プラットフォーム が  C  関数  gettimeofday ( )  を サポート する 場合 に は 可能 な こと が あ り ま す ) 。 
そう で な い 場合 、 tz  は クラス  tzinfo  の サブ クラス の インスタンス で な けれ ば な ら ず 、 現在 の 日付 および 時刻 は tz  の タイム ゾーン に 変換 さ れ ま す 。 
この 場合 、 結果 は 
tz . fromutc ( datetime.utcnow ( ) . replace ( tzinfo = tz ) ) と 等価 に な り ま す 。 
today ( ) , utcnow ( )  も 参照 し て くださ い 。 
現在 の  UTC  に お け る 日付 と 時刻 を 、  tzinfo  が  None  で あ る もの と し て 返 し ま す 。 
この メソッド は  now ( )  に 似 て い ま す が 、 現在 の  UTC  に お け る 日付 と 時刻 を  naive  な  datetime オブジェクト と し て 返 し ま す 。 now ( )  も 参照 し て くださ い 。 
time. time( )  が 返 す よう な 、 POSIX  タイム スタンプ に 対応 する ローカル な 日付 と 時刻 を 返 し ま す 。 
オプション の 引数  tz  が  None  で あ る か 、 指定 さ れ て い な い 場合 、 タイム スタンプ は プラットフォーム の ローカル な 日付 および 時刻 に 変換 さ れ 、 返 さ れ る  datetime オブジェクト は  naive  な もの に な り ま す 。  そう で な い 場合 、  tz  は クラス  tzinfo  の サブ クラス の インスタンス で な けれ ば な ら ず 、 現在 の 日付 および 時刻 は tz  の タイム ゾーン に 変換 さ れ ま す 。 
この 場合 、 結果 は 
tz . fromutc ( datetime.utcfromtimestamp( timestamp ) . replace ( tzinfo = tz ) ) と 等価 に な り ま す 。 
タイム スタンプ が プラットフォーム の  C  関数  localtime( )  や gmtime( )  で サポート さ れ て い る 範囲 を 超え た 場合 、 fromtimestamp ( )  は  ValueError  を 送出 する こと が あ り ま す 。 
time. time( )  が 返 す よう な  POSIX  タイム スタンプ に 対応 する 、 UTC  で の  datetime オブジェクト を 返 し ま す 。  タイム スタンプ が プラットフォーム に お け る  C  関数  localtime( ) で サポート さ れ て い る 範囲 を 超え て い る 場合 に は  ValueError を 送出 する こと が あ り ま す 。 
この 値 は よく  1970  年 から  203 8  年 に 制限 さ れ て い る こと が あ り ま す 。  fromtimestamp ( )  も 参照 し て くださ い 。 
1  年  1  月  1  日 を 序数  1  と する 予測 的 グレゴリオ 暦 序数 に 対応 する datetime オブジェクト を 返 し ま す 。  1  = ordinal  = datetime. max . toordinal ( )  で な い かぎり ValueError  が 送出 さ れ ま す 。 
結果 と し て 返さ れ る オブジェクト の 時間 、 分 、 秒 、 および マイクロ 秒 は すべて  0  と な り 、 tzinfo  は  None  と な り ま す 。 
与え られ た  date  オブジェクト と 同じ データ メンバ を 持 ち 、 時刻 と  tzinfo  メンバ が 与え られ た  time オブジェクト と 等し い 、 新た な  datetime オブジェクト を 返 し ま す 。 
任意 の  datetime オブジェクト  d  に つ い て 、  d == datetime. combine ( d . date ( ) , d . timetz ( ) ) と な り ま す 。 
date  が  datetime オブジェクト の 場合 、 その 時刻 と  tzinfo  は 無視 さ れ ま す 。 
表現 でき る 最も 古 い  datetime で 、 datetime( MINYEAR ,  1 ,  1 ,tzinfo = None )  で す 。 
表現 でき る 最も 新し い  datetime で 、 datetime( MAXYEAR ,  12 ,  31 ,  23 ,  59 ,  59 , 999999 ,tzinfo = None )  で す 。 
等し く な い  datetime オブジェクト 間 の 最小 の 差 で 、 timedelta ( microseconds = 1 ) で す 。 
range ( 24 )  内 の 値 で す 。 
range ( 60 )  内 の 値 で す 。 
range ( 1000000 )  内 の 値 で す 。 
datetime コンストラクタ に  tzinfo  引数 と し て 与え られ た オブジェクト に な り 、 何 も 渡 さ れ な かっ た 場合 に は  None に な り ま す 。 
以下 に サポート さ れ て い る 演算 を 示 し ま す : 
datetime を  datetime と 比較 し ま す 。  ( 4 ) 
datetime2  は  datetime1  から 時間  timedelta  移動 し た もの で 、 
timedelta . days  0  の 場合 進 む 方向 に 、 
timedelta . days  0  の 場合 戻 る 方向 に 移動 し ま す 。 
datetime から  datetime の 減算 は 両方 の 被 演算 子 が naive  で あ る か 、 両方 とも  aware  で あ る 場合 に のみ 定義 さ れ て い ま す 片方 が  aware  で もう 一方 が  naive  の 場合 、  TypeError  が 送出 さ れ ま す 。 
両方 とも  naive  か 、 両方 とも  aware  で 同じ  tzinfo  メンバ を 持 つ 場合 、 tzinfo  メンバ は 無視 さ れ 、 結果 は 
datetime2  + t = = datetime1  で あ る よう な timedelta  オブジェクト  t  と な り ま す 。 
この 場合 タイム ゾーン 修正 は 全く 行 わ れ ま せ ん 。 
両方 が  aware  で 異な る  tzinfo  メンバ を 持 つ 場合 、 a - b  は  a  および  b  を まず  naive  な  UTC  datetime オブジェクト に 変換 し た か の よう に し て 行 い ま す 。 
演算 結果 は 決して オーバフロー を 起こ さ な い こと を 除 き 、 ( a . replace ( tzinfo = None )  - a .utcoffset ()) - ( b . replace ( tzinfo = None ) -b .utcoffset ( ) ) と 同じ に な り ま す 。 
datetime1  が 時刻 と し て  datetime2  より も 前 を 表 す 場合 に 、 datetime1  は datetime2  より も 小さ い と 見な さ れ ま す 。  被 演算 子 の 片方 が  naive  で もう 一方 が  aware  の 場合 、 TypeError  が 送出 さ れ ま す 。 
両方 の 被 演算 子 が  aware  で 、 同じ  tzinfo  メンバ を 持 つ 場合 、 共通 の  tzinfo メンバ は 無視 さ れ 、 基本 の  datetime 間 の 比較 が 行 わ れ ま す 。 
両方 の 被 演算 子 が  aware  で 異な る  tzinfo  メンバ を 持 つ 場合 、 被 演算 子 は まず  ( self . utcoffset ( )  で 得 られ る )  UTC  オフセット  で 修正 さ れ ま す 。 
注意 : 型 混合 の 比較 が デフォルト の オブジェクト アドレス 比較 と な っ て しま う の を 抑止 する ため に 、 被 演算 子 の もう 一方 が  datatime オブジェクト と 異な る 型 の オブジェクト の 場合 に は  TypeError  が 送出 さ れ ま す 。 
しかし ながら 、 被 比較 演算 子 の もう 一方 が  timetuple  属性 を 持 つ 場合 に は  NotImplemented  が 返 さ れ ま す 。 
この フック に よ り 、 他種 の 日付 オブジェクト に 型 混合 比較 を 実装 する チャンス を 与え て い ま す 。 
そう で な い 場合 、 datetime オブジェクト と 異な る 型 の オブジェクト が 比較 さ れ る と 、 比較 演算 子 が  = =  また は  ! = で な い かぎり  TypeError  が 送出 さ れ ま す 。 
後者 の 場合 、 それぞれ  False  また は  True を 返 し ま す 。 
datetime オブジェクト は 辞書 の キー と し て 用い る こと が でき ま す 。 
ブール 演算 コンテキスト で は 、 全て の  datetime オブジェクト は 真 で あ る と みな さ れ ま す 。  インスタンス メソッド を 以下 に 示 し ま す : 
同じ 年 、 月 、 日 の  date  オブジェクト を 返 し ま す 。 
同じ 時 、 分 、 秒 、 マイクロ 秒 を 持 つ  time オブジェクト を 返 し ま す 。 tzinfo  は  None  で す 。 
timetz ( )  も 参照 し て くださ い 。 
同じ 時 、 分 、 秒 、 マイクロ 秒 、 および  tzinfo  メンバ を 持 つ time オブジェクト を 返 し ま す 。 
time( )  メソッド も 参照 し て くださ い 。 
キー ワード 引数 で 指定 し た メンバ の 値 を 除 き 、 同じ 値 を も つ  datetime オブジェクト を 返 し ま す 。 
メンバ に 対 する 変換 を 行 わ ず に  aware  な  datetime オブジェクト から  naive  な  datetime オブジェクト を 生成 する ため に 、 tzinfo = None  を 指定 する こと も でき ま す 。 
tz  は tzinfo  の サブ クラス の インスタンス で な けれ ば な ら ず 、 インスタンス の utcoffset ( )  および  dst ( )  メソッド は  None  を 返 し て は な り ま せ ん 。 
self  は aware  で な く て は な り ま せ ん  ( 
self . tzinfo  が  None で あ っ て は な ら ず 、 かつ 
self . utcoffset ( )  は  None を 返 し て は な り ま せ ん ) 。 
self . tzinfo  が  tz  の 場合 、 
self . astimezone ( tz )  は  self  に 等し く な り ま す :  日付 および 時刻 データ メンバ に 対 する 調整 は 行 わ れ ま せ ん 。  そう で な い 場合 、 結果 は タイム ゾーン  tz  に お け る ローカル 時刻 で 、 self  と 同じ  UTC  時刻 を 表 す よう に な り ま す : 
astz  = dt . astimezone ( tz )  と し た 後 、 
astz  - astz .utcoffset ( )  は 通常  dt - dt .utcoffset ( )  と 同じ 日付 および 時刻 データ メンバ を 持 ち ま す 。 
tzinfo  クラス に 関 する 議論 で は 、 夏 時間  ( Daylight Saving  time ) の 遷移 境界 で は 上 の 等価 性 が 成り立 た な い こと を 説明 し て い ま す ( tz  が 標準 時 と 夏 時間 の 両方 を モデル 化 し て い る 場合 のみ の 問題 で す ) 。  単に タイム ゾーン オブジェクト  tz  を  datetime オブジェクト dt  に 追加 し た い だけ で 、 日付 や 時刻 データ メンバ へ の 調整 を 行 わ な い の なら 、 
dt . replace ( tzinfo = tz )  を 使 っ て くださ い 。 
単に  aware  な  datetime オブジェクト  dt  から タイム ゾーン オブジェクト を 除去 し た い だけ で 、 日付 や 時刻 データ メンバ の 変換 を 行 わ な い の なら 、  dt . replace ( tzinfo = None )  を 使 っ て くださ い 。 
デフォルト の  tzinfo . fromutc ( )  メソッド を  tzinfo の サブ クラス で 上書き し て 、 astimezone ( )  が 返 す 結果 に 影響 を 及ぼ す こと が でき ま す 。 
エラー の 場合 を 無視 する と 、 astimezone ( )  は 以下 の よう に 動作 し ま す : 
tzinfo  が  None  の 場合 、 None  を 返 し 、 そう で な い 場合 に は 
self . tzinfo .utcoffset ( self ) を 返 し ま す 。 
後者 の 式 が  None  か 、 1  日 以下 の 大き さ を 持 つ 経過 時間 を 表 す  timedelta  オブジェクト の いずれ か を 返 さ な い 場合 に は 例外 を 送出 し ま す 。 
self . tzinfo . dst ( self ) を 返 し ま す 。 
後者 の 式 が  None  か 、 1  日 以下 の 大き さ を 持 つ 経過 時間 を 表 す  timedelta  オブジェクト の いずれ か を 返 さ な い 場合 に は 例外 を 送出 し ま す 。 
self . tzinfo . tzname ( self ) を 返 し ま す 。 
後者 の 式 が  None  か 文字 列 オブジェクト の いずれ か を 返 さ な い 場合 に は 例外 を 送出 し ま す 。 
d . timetuple ( )  は time. struct_time(( d . year ,  d . month , d . day , d . hour ,  d . minute ,  d . second , d . weekday ( ) , d . toordinal ( ) - date ( d . year ,  1 ,  1 ) . toordinal ( )  +  1 , dst ) ) と 等価 で す 。 
返 さ れ る タプル の  tm _isdst  フラグ は  dst ( )  メソッド に 従 っ て 設定 さ れ ま す : tzinfo  が  None  か dst ( )  が  None  を 返 す 場合 、 tm _isdst  は  - 1  に 設定 さ れ ま す ;  そう で な い 場合 、 dst ( )  が ゼロ で な い 値 を 返 す と 、 tm _isdst  は  1 と な り ま す ;  それ 以外 の 場合 に は  tm _isdst  は 0  に 設定 さ れ ま す 。 
datetime インスタンス  d  が naive  の 場合 、 この メソッド は 
d . timetuple ( )  と 同じ で あ り 、 d . dst ( )  の 返 す 内容 に かかわ ら ず  tm _isdst  が  0  に 強制 さ れ る 点 だけ が 異な り ま す 。 
DST  が  UTC  時刻 に 影響 を 及ぼ す こと は 決して あ り ま せ ん 。  d  が  aware  の 場合 、 d  から 
d . utcoffset ( )  が 差し引 か れ て  UTC  時刻 に 正規 化 さ れ 、 正規 化 さ れ た 時刻 の  time. struct_time を 返 し ま す 。  tm _isdst  は  0  に 強制 さ れ ま す 。 
d . year  が  MINYEAR  や  MAXUEAR  で 、 UTC  へ の 修正 の 結果 表現 可能 な 年 の 境界 を 越え た 場合 に は 、 戻 り 値 の  tm_year  メンバ は MINYEAR - 1  また は  MAXYEAR + 1  に な る こと が あ り ま す 。 
予測 的 グレゴリオ 暦 に お け る 日付 序数 を 返 し ま す 。 
self . date ( ) . toordinal ( )  と 同じ で す 。 
self . date ( ) . weekday ( )  と 同じ で す 。 
isoweekday ( )  も 参照 し て くださ い 。 
self . date ( ) . isoweekday ( )  と 等価 で す 。 
weekday ( ) 、  isocalendar ( )  も 参照 し て くださ い 。 
3  要素 の タプル  ( ISO  年 、 ISO  週 番号 、 ISO  曜日 )  を 返 し ま す 。 
self . date ( ) . isocalendar ( )  と 等価 で す 。 
日付 と 時刻 を  ISO  8601  形式 、 すなわち YYYY - MM - DDTHH : MM : SS . mmmmmm か 、 microsecond  が  0  の 場合 に は YYYY - MM - DDTHH : MM : SS で 表 し た 文字 列 を 返 し ま す 。 
utcoffset ( )  が  None  を 返 さ な い 場合 、 UTC  から の オフセット を 時間 と 分 を 表 し た  ( 符号 付き の )  6  文字 から な る  文字 列 が 追加 さ れ ま す :  すなわち 、 YYYY - MM - DDTHH : MM : SS . mmmmmm + HH : MM と な る か 、  microsecond  が  ゼロ の 場合 に は YYYY - MM - DDTHH : MM : SS + HH : MM と な り ま す 。  オプション の 引数  sep ( デフォルト で は ' T ' で す )  は  1  文字 の セパレータ で 、 結果 の 文字 列 の 日付 と 時刻 の 間 に 置 か れ ま す 。 
例えば 、 
と な り ま す 。 __str_ _
datetime オブジェクト  d  に お い て 、 str ( d )  は 
d . isoformat ( '')  と 等価 で す 。 
日付 を 表 す 文字 列 を 、 例えば datetime(2002 ,  12 ,  4 ,  20 ,  30 ,  40 ) . ctime( ) = = ' Wed  Dec  4  20 : 30 : 40 2002 ' の よう に し て 返 し ま す 。 
ネイティブ の  C  関数  ctime( ) ( time. ctime( )  は この 関数 を 呼び出 し ま す が 、 datetime. ctime( )  は 呼び出 し ま せ ん )  が  C  標準 に 準拠 し て い る プラットフォーム で は 、  d . ctime( )  は time. ctime(time. mktime( d . timetuple ( ))) と 等価 で す 。 
明示 的 な 書式 化 文字 列 で 制御 さ れ た 、 日付 を 表現 する 文字 列 を 返 し ま す 。 
strftime( )  の ふるまい に つ い て の セクション を 参照 し て くださ い 。 
datetime モジュール で は 、 様々 な 日付 オブジェクト や 時刻 オブジェクト を 提供 し て い ま す 。 
以下 に 示 す 関数 を 使 う 場合 に は 、 あらかじめ ヘッダ ファイル datetime. h  を ソース に  include  し  ( Python . h  は この ファイル を  include  し ま せ ん ) 、 PyDateTime _ IMPORT ( )  マクロ を 起動 し て お く 必要 が あ り ま す 。 
この マクロ は 以下 の マクロ で 使 わ れ る 静的 変数 PyDateTimeAPI  に  C  構造 体 へ の ポインタ を 入れ ま す 。  以下 は 型 チェック マクロ で す : 
ob  が PyDateTime_DateType  型 か PyDateTime_DateType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_DateType  型 の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_DateTimeType  型 か PyDateTime_DateTimeType  型 の サブ タイプ の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_DateTimeType  型 の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_TimeType  型 か PyDateTime_TimeType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_TimeType  型 の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_ DeltaType  型 か PyDateTime_ DeltaType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_ DeltaType  型 の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_TZInfoType  型 か PyDateTime_TZInfoType 型 の サブ タイプ の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ob  が PyDateTime_TZInfoType  型 の オブジェクト の 場合 に 真 を 返 し ま す ; ob  は  NULL  で あ っ て は な り ま せ ん 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
以下 は オブジェクト を 作成 する ため の マクロ で す : 
指定 さ れ た 年 、 月 、 日 の datetime. date  オブジェクト を 返 し ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
指定 さ れ た 年 、 月 、 日 、 時 、 分 、 秒 、 マイクロ 秒 の datetime. datetime オブジェクト を 返 し ま す 。 
指定 さ れ た 時 、 分 、 秒 、 マイクロ 秒 の datetime. time オブジェクト を 返 し ま す 。 
指定 さ れ た 日 、 秒 、 マイクロ 秒 の datetime. timedelta  オブジェクト を 返 し ま す 。 
マイクロ 秒 と 秒 が  datetime. timedelta  オブジェクト で 定義 さ れ て い る 範囲 に 入 る よう に 正規 化 を 行 い ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の マクロ は  date  オブジェクト から フィールド 値 を 取り出 す ため の もの で す 。 
引数 は PyDateTime_Date  また は その サブ クラス ( 例えば  PyDateTime_DateTime ) の  インスタンス で な けれ ば な り ま せ ん 。 
引数 を  NULL  に し て は な ら ず 、 型 チェック は 行 い ま せ ん : 
年 を 正 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
月 を  1  から  12  の 間 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
日 を  1  から  31  の 間 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の マクロ は  datetime オブジェクト から フィールド 値 を 取り出 す ため の もの で す 。 
引数 は PyDateTime_DateTime  また は その サブ クラス の インスタンス で な けれ ば な り ま せ ん 。  引数 を  NULL  に し て は な ら ず 、 型 チェック は 行 い ま せ ん : 
時 を  0  から  23  の 間 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
分 を  0  から  59  の 間 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
秒 を  0  から  59  の 間 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
マイクロ 秒 を  0  から  999999  の 間 の 整数 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の マクロ は time オブジェクト から フィールド 値 を 取り出 す ため の もの で す 。 
引数 は PyDateTime_Time  また は その サブ クラス の インスタンス で な けれ ば な り ま せ ん 。  引数 を  NULL  に し て は な ら ず 、 型 チェック は 行 い ま せ ん : 
以下 の マクロ は  DB  API  を 実装 する 上 で の 便宜 用 で す : 
dateitme. datetime. fromtimestamp ( )  に 渡 す の に 適 し た 引数 タプル から 新た な  datetime. datetime オブジェクト を 生成 し て 返 し ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。  PyObject * 
dateitme. date . fromtimestamp ( )  に 渡 す の に 適 し た 引数 タプル から 新た な  datetime. date  オブジェクト を 生成 し て 返 し ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
time オブジェクト は  ( ローカル の )  日中 時刻 を 表現 し ま す 。 
この 時刻 表現 は 特定 の 日 の 影響 を 受け ず 、 tzinfo  オブジェクト を 介 し た 修正 の 対象 と な り ま す 。  クラス time
全て の 引数 は オプション で す 。 tzinfo  は None  また は  tzinfo  クラス の サブ クラス の インスタンス に する こと が でき ま す 。 
残り の 引数 は 整数 また は 長 整数 で 、 以下 の よう な 範囲 に 入 り ま す : 
tzinfo の デフォルト 値 が None で あ る 以外 の デフォルト 値 は 0 で す 。 
表現 でき る 最も 古 い  datetime で 、 time ( 0 ,  0 ,  0 ,  0 )  で す 。  The earliest  representabletime,time ( 0 ,  0 ,  0 ,  0 ) . 
表現 でき る 最も 新し い  datetime で 、 time( 23 ,  59 ,  59 , 999999 ,tzinfo = None )  で す 。 
等し く な い  datetime オブジェクト 間 の 最小 の 差 で 、 timedelta ( microseconds = 1 ) で す が 、 time オブジェクト 間 の 四則 演算 は サポート さ れ て い な い の で 注意 し て くださ い 。 
time コンストラクタ に  tzinfo  引数 と し て 与え られ た オブジェクト に な り 、 何 も 渡 さ れ な かっ た 場合 に は  None に な り ま す 。 
以下 に サポート さ れ て い る 操作 を 示 し ま す : 
time と time の 比較 で は 、 a  が 時刻 と し て b  より も 前 を 表 す 場合 に  a  は  b  より も 小さ い と 見な さ れ ま す 。 
被 演算 子 の 片方 が  naive  で もう 一方 が  aware  の 場合 、 TypeError  が 送出 さ れ ま す 。 
両方 の 被 演算 子 が  aware  で 、 同じ  tzinfo  メンバ を 持 つ 場合 、 共通 の  tzinfo メンバ は 無視 さ れ 、 基本 の  datetime 間 の 比較 が 行 わ れ ま す 。 
両方 の 被 演算 子 が  aware  で 異な る  tzinfo  メンバ を 持 つ 場合 、 被 演算 子 は まず  ( self . utcoffset ( )  で 得 られ る )  UTC  オフセット  で 修正 さ れ ま す 。 
型 混合 の 比較 が デフォルト の オブジェクト アドレス 比較 と な っ て しま う の を 抑止 する ため に 、 time オブジェクト が 他 の 型 の オブジェクト と 比較 さ れ た 場合 、 比較 演算 子 が  = =  また は  ! = で な い かぎり  TypeError  が 送出 さ れ ま す 。 
ハッシュ 化 、 辞書 の キー と し て の 利用 
効率 的 な  pickle  化 
ブール 演算 コンテキスト で は 、 time オブジェクト は 、 分 に 変換 し 、 utfoffset ( )  ( None  を 返 し た 場合 に は 0 )  を 差し引 い て 変換 し た 後 の 結果 が ゼロ で な い 場合 、 かつ その とき に 限 っ て 真 と みな さ れ ま す 。 
以下 に インスタンス メソッド を 示 し ま す : 
キー ワード 引数 で 指定 し た メンバ の 値 を 除 き 、 同じ 値 を も つ  time オブジェクト を 返 し ま す 。 
メンバ に 対 する 変換 を 行 わ ず に  aware  な  datetime オブジェクト から  naive  な time オブジェクト を 生成 する ため に 、 tzinfo = None  を 指定 する こと も でき ま す 。 
日付 と 時刻 を  ISO  8601  形式 、 すなわち HH : MM : SS . mmmmmm か 、 microsecond  が  0  の 場合 に は HH : MM : SS で 表 し た 文字 列 を 返 し ま す 。 
utcoffset ( )  が  None  を 返 さ な い 場合 、 UTC  から の オフセット を 時間 と 分 を 表 し た  ( 符号 付き の )  6  文字 から な る  文字 列 が 追加 さ れ ま す :  すなわち 、 HH : MM : SS . mmmmmm + HH : MM と な る か 、  microsecond  が  0  の 場合 に は HH : MM : SS + HH : MM と な り ま す 。 
time オブジェクト  t  に お い て 、 str ( t )  は 
t . isoformat ( )  と 等価 で す 。 
明示 的 な 書式 化 文字 列 で 制御 さ れ た 、 日付 を 表現 する 文字 列 を 返 し ま す 。 
strftime( )  の ふるまい に つ い て の セクション を 参照 し て くださ い 。 
self . tzinfo .utcoffset ( None ) を 返 し ま す 。 
後者 の 式 が  None  か 、 1  日 以下 の 大き さ を 持 つ 経過 時間 を 表 す  timedelta  オブジェクト の いずれ か を 返 さ な い 場合 に は 例外 を 送出 し ま す 。 
self . tzinfo . dst ( None ) を 返 し ま す 。 
後者 の 式 が  None  か 、 1  日 以下 の 大き さ を 持 つ 経過 時間 を 表 す  timedelta  オブジェクト の いずれ か を 返 さ な い 場合 に は 例外 を 送出 し ま す 。 
self . tzinfo . tzname ( None ) を 返 し ま す 。 
後者 の 式 が  None  か 文字 列 オブジェクト の いずれ か を 返 さ な い 場合 に は 例外 を 送出 し ま す 。 
timedelta  オブジェクト は 経過 時間 、 すなわち 二 つ の 日付 や 時刻 間 の 差 を 表 し ま す 。 
クラス timedelta
全て の 引数 が オプション で 、 デフォルト 値 は 0 で す 。 
引数 は 整数 、 長 整数 、 浮動 小数 点数 に する こと が でき 、 正 で も 負 で も かま い ま せ ん 。  days、 seconds  および  microseconds  のみ が 内部 に 記憶 さ れ ま す 。 
引数 は 以下 の よう に し て 変換 さ れ ま す : 
1  ミリ 秒 は  1000  マイクロ 秒 に 変換 さ れ ま す 。 
1  分 は  60  秒 に 変換 さ れ ま す 。 
1  時間 は  3600  秒 に 変換 さ れ ま す 。 
1  週間 は  7  日 に 変換 さ れ ま す 。 
その 後 、 日 、 秒 、 マイクロ 秒 は 値 が 一意 に 表 さ れ る よう に 、 
0  = second s  3600 * 24  ( 一 日 中 の 秒数 ) 
で 正規 化 さ れ ま す 。  引数 の いずれ か が 浮動 小数 点 で あ り 、 小数 の マイクロ 秒 が 存在 する 場合 、 小数 の マイクロ 秒 は 全て の 引数 から 一 度 取り置 か れ 、 それ ら の 和 は 最も 近 い マイクロ 秒 に 丸め られ ま す 。 
例えば 、  d =timedelta ( microseconds = - 1 )  ( d . days ,  d . seconds , d . microseconds ) ( - 1 ,  863 99 , 999999 ) 
クラス 属性 を 以下 に 示 し ま す : 
最小 の 値 を 表 す  timedelta  オブジェクト で 、 timedelta ( - 999999999 )  で す 。 
最大 の 値 を 表 す  timedelta  オブジェクト で 、 timedelta ( days= 999999999 , hours= 23 , minutes = 59 , seconds = 59 ,microsecond s = 999999 )  で す 。 
timedelta  オブジェクト が 等し く な ら な い 最小 の 時間 差 で 、 timedelta ( microseconds = 1 )  で す 。 
属性 
値 
両端 値 を 含 む  - 999999999  から  999999999  の 間 
両端 値 を 含 む  0  から  863 99  の 間 
両端 値 を 含 む  0  から  999999  の 間 
端数 を 切り捨て て 除算 さ れ 、 剰余  ( が あ る 場合 )  は 捨て られ ま す 。  ( 3 ) 
同じ 値 を 持 つ timedelta  オブジェクト を 返 し ま す 。  ( 2 ) 
-t 1 timedelta (-t 1 . days , -t 1 . seconds , -t 1 . microseconds ) 、 および t 1 *  - 1  と 同じ で す 。 
t . days =  0  の とき に は  + t  、 t . days  0  の とき に は - t  と な り ま す 。  ( 2 ) 
この 操作 は 厳密 で す が 、 オーバフロー する か も しれ ま せ ん 。 
この 操作 は 厳密 で あ り 、 オーバフロー し な い はず で す 。 
0  に よ る 除算 は  ZeroDivisionError  を 送出 し ま す 。 
-timedelta . max  は timedelta  オブジェクト で 表現 する こと が でき ま せ ん 。 
timedelta  オブジェクト は ハッシュ 可能  ( 辞書 の キー と し て 利用 可能 ) で あ り 、 効率 的 な  pickle  化 を サポート し ま す 、 また 、 ブール 演算 コンテキスト で は 、 timedelta  オブジェクト は  timedelta ( 0 )  に 等し く な い 場合 かつ その とき に 限 り 真 と な り ま す 。 
tzinfo  は 抽象 基底 クラス で す 。 
tzinfo  の 具体 的 な サブ クラス で は 、 以下 の メソッド を 実装 する 必要 が あ り ま す 。 
厳密 に どの メソッド が 必要 な の か は 、 aware  な  datetime オブジェクト が この サブ クラス の インスタンス を どの よう に 使 う か に 依存 し ま す 。 
不確か なら ば 、 単に 全て を 実装 し て くださ い 。 
ローカル 時間 の  UTC  から の オフセット を 、 UTC  から 東向き を 正 と し た 分 で 返 し ま す 。 
ローカル 時間 が  UTC  の 西側 に あ る 場合 、 この 値 は 負 に な り ま す 。 
この メソッド は  UTC  から の オフセット の 総計 を 返 す よう に 意図 さ れ て い る の で 注意 し て くださ い ;  例えば 、  tzinfo  オブジェクト が タイム ゾーン と  DST  修正 の 両方 を 表現 する 場合 、 utcoffset ( ) は それ ら の 合計 を 返 さ な けれ ば な り ま せ ん 。 
UTC  オフセット が 未知 で あ る 場合 、 None  を 返 し て くださ い 。 
そう で な い 場合 に は 、 返 さ れ る 値 は  - 143 9  から  143 9  の 両端 を 含 む 値  ( 1440  =  24 * 60  ;  つまり 、 オフセット の 大き さ は  1  日 より 短 く な く て は な り ま せ ん ) が 分 で 指定 さ れ た  timedelta  オブジェクト で な けれ ば な り ま せ ん 。 
ほとんど の utcoffset ( )  実装 は 、 おそらく 以下 の 二 つ の うち の 一 つ に 似 た もの に な る で しょ う : 
utcoffset ( )  が  None  を 返 さ な い 場合 、 dst ( )  も  None  を 返 し て は な り ま せ ん 。 utcoffset ( )  の デフォルト の 実装 は NotImplementedError  を 送出 し ま す 。 
夏 時間  ( DST )  修正 を 、 UTC  から 東向き を 正 と し た 分 で 返 し ま す 。  DST  情報 が 未知 の 場合 、 None  が 返 さ れ ま す 。 
例えば 、 datetime. timetuple ( )  は tzinfo  メンバ の  dst ( )  メソッド を 呼 ん で  tm _isdst  フラグ が セット さ れ て い る か どう か 判断 し 、 tzinfo . fromutc ( )  は  dst ( )  タイム ゾーン を 移動 する 際 に  DST  に よ る 変更 が あ る か どう か を 調べ ま す 。 
全て の  datetime オブジェクト dt  に つ い て 常 に 同じ 結果 を 返 さ な けれ ば な ら な い と い う 点 で 、 一貫 性 を 持 っ て い な けれ ば な り ま せ ん 。 
正常 に 実装 さ れ た  tzinfo  の サブ クラス で は 、 この 式 は タイム ゾーン に おけ る  " 標準 オフセット  ( standard  offset ) "  を 表 し 、 特定 の 日 や 時刻 の 事情 で は な く 地理 的 な 位置 に のみ 依存 し て い な く て は な り ま せ ん 。 
datetime. astimezone ( )  の 実装 は この 事実 に 依存 し て い ま す が 、 違反 を 検出 する こと が でき ま せ ん ; 正し く 実装 する の は プログラマ の 責任 で す 。 
tzinfo  の サブ クラス で これ を 保証 する こと が でき な い 場合 、 tzinfo . fromutc ( )  の 実装 を オーバライド し て 、 astimezone ( )  に 関わ ら ず 正し く 動作 する よう に し て も かま い ま せ ん 。  ほとんど の  dst ( )  実装 は 、 おそらく 以下 の 二 つ の うち の 一 つ に 似 た もの に な る で しょ う : 
デフォルト の  dst ( )  実装 は  NotImplementedError を 送出 し ま す 。 
datetime オブジェクト  dt  に 対応 する タイム ゾーン 名 を 文字 列 で 返 し ま す 。  datetime モジュール で は 文字 列 名 に つ い て 何 も 定義 し て お ら ず 、 特に 何 か を 意味 する と い っ た 要求 仕様 も まったく あ り ま せ ん 。 
例えば 、 " GMT " 、 " UTC " 、  " - 500 " 、  " - 5 : 0 0 " 、  " EDT " 、  " US \/ Eastern " 、 " America \/NewYork "  は 全て 有効 な 応答 と な り ま す 。 
文字 列 名 が 未知 の 場合 に は  None  を 返 し て くださ い 。 
tzinfo  の サブ クラス で は 、 特に 、 tzinfo クラス が 夏 時間 に つ い て 記述 し て い る 場合 の よう に 、 渡 さ れ た  dt  の 特定 の 値 に よ っ て 異な っ た 名前 を 返 し た い 場合 が あ る ため 、 文字 列 値 で は な く メソッド と な っ て い る こと に 注意 し て くださ い 。  デフォルト の  tzname ( )  実装 は  NotImplementedError を 送出 し ま す 。 
以下 の メソッド は  datetime や time オブジェクト に お い て 、 同名 の メソッド が 呼び出 さ れ た 際 に 応 じ て 呼び出 さ れ ま す 。 
datetime オブジェクト は 自身 を 引数 と し て メソッド に 渡 し 、 time オブジェクト は 引数 と し て  None  を メソッド に 渡 し ま す 。 
従 っ て 、 tzinfo  の サブ クラス に おけ る メソッド は 引数  dt  が  None  の 場合 と 、 datetime の 場合 を 受理 する よう に 用意 し な けれ ば な り ま せ ん 。  None  が 渡 さ れ た 場合 、 最良 の 応答 方法 を 決め る の は クラス 設計 者 次第 で す 。 
例えば 、 この クラス が  tzinfo  プロトコル と 関係 を も た な い と い う こと を 表明 さ せ た けれ ば 、 None  が 適切 で す 。 
その 結果  tzinfo  メソッド は  dt  が ローカル 時間 で あ る と 解釈 する の で 、 他 の タイム ゾーン で の オブジェクト の 振る舞い に つ い て 心配 する 必要 が あ り ま せ ん 。 
デフォルト の  datetime. astimezone ( )  実装 で 呼び出 さ れ ま す 。 
datetime. astimezone ( )  から 呼 ば れ た 場合 、 
dt . tzinfo は  self  で あ り 、  dt  の 日付 および 時刻 データ メンバ は UTC  時刻 を 表 し て い る もの と し て 見え ま す 。 
fromutc ( )  の 目的 は 、 self  の ローカル 時刻 に 等し い  datetime オブジェクト を 返 す こと に よ り 日付 と 時刻 データ メンバ を 修正 する こと に あ り ま す 。  ほとんど の  tzinfo  サブ クラス で は デフォルト の  fromutc ( ) 実装 を 問題 な く 継承 でき ま す 。 
デフォルト の 実装 は 、 固定 オフセット の タイム ゾーン や 、 標準 時 と 夏 時間 の 両方 に つ い て 記述 し て い る タイム ゾーン 、 そして DST  移行 時刻 が 年 に よ っ て 異な る 場合 で さえ 、 扱え る くらい 強力 な もの で す 。 
以下 に  tzinfo  クラス の 使用 例 を 示 し ま す : 
具体 的 な 例 と し て 、 東部 アメリカ 時刻 ( US  Eastern ,  UTC  - 500 0 )  を 考え ま す 。 
EDT  は  4  月 の 最初 の 日曜 日 の  1 : 59  ( EST )  以後 に 開始 し 、 10  月 の 最後 の 日曜 日 の  1 : 59  ( EDT )  に 終了 し ま す : 
DST  の 開始 の 際  ( " start "  の 並び )  ローカル の 壁 時計 は  1 : 59  から 3 : 00  に 飛 び ま す 。 
この 日 は  2 : MM  の 形式 を と る 時刻 は 実際 に は 無 意味 と な り ま す 。  従 っ て 、 astimezone ( Eastern )  は  DST  が 開始 する 日 に は  hour= =  2  と な る 結果 を 返 す こと は あ り ま せ ん 。 
astimezone ( )  が この こと を 保証 する よう に する に は 、 tzinfo . dst ( )  メソッド は  " 失 わ れ た 時間 "  ( 東部 時刻 に おけ る 2 : MM )  が 夏 時間 に 存在 する こと を 考え な けれ ば な り ま せ ん 。  DST  が 終了 する 際  ( " end "  の 並び )  で は 、 問題 は さらに 悪化 し ま す : 1  時間 の 間 、 ローカル の 壁 時計 で はっきり と 時刻 を いえ な く な り ま す : それ は 夏 時間 の 最後 の  1  時間 で す 。 
東部 時刻 で は 、 その 日 の  UTC で の  5 : MM  に 夏 時間 は 終了 し ま す 。 
東部 時刻 の 例 で は 、 5 : MM  および  6 : MM  の 形式 を と る  UTC  時刻 は 両方 とも 、 東部 時刻 に 変換 さ れ た 際 に  1 : MM  に 対応 づけ られ ま す 。 
astimezone ( )  が この こと を 保証 する よう に する に は 、 tzinfo . dst ( )  は  " 繰り返 さ れ た 時間 "  が 標準 時 に 存在 する こと を 考慮 し な けれ ば な り ま せ ん 。 
この こと は 、 例えば タイム ゾーン の 標準 の ローカル な 時刻 に  DST  へ の 切り替え 時刻 を 表現 する こと で 簡単 に 設定 する こと が でき ま す 。  この よう な あいまい さ を 許容 でき な い アプリケーション は 、 ハイブリッド な  tzinfo  サブ クラス を 使 っ て 問題 を 回避 し な けれ ば な り ま せ ん ;  UTC  や 、 他 の オフセット が 固定 さ れ た  tzinfo  の サブ クラス  ( EST  ( - 5  時間 の 固定 オフセット )  のみ を 表 す クラス や 、 EDT  ( - 4  時間 の 固定 オフセット )  のみ を 表 す クラス )  を 使 う 限り 、 あいまい さ は 発生 し ま せ ん 。 
open ( )  に よ っ て 返さ れ る データベース オブジェクト は 、 全て の  DBM  形式 データベース や マップ 型 オブジェクト で 共通 の メソッド を 提供 し ま す 。 
それ ら 標準 の メソッド に 加え 、 dbhash  で は 以下 の メソッド が 利用 可能 で す 。 
この メソッド と  next ( )  メソッド を 使 っ て 、 データベース の 全て の キー \/ 値 の ペア に わた っ て ループ 処理 を 行え ま す 。 
探索 は データベース の 内部 ハッシュ 値 の 順番 に 行 わ れ 、 キー の 値 に 順 に 並 ん で い る と は 限 り ま せ ん 。 
この メソッド は 最初 の キー を 返 し ま す 。 
データベース 探索 に お け る 最後 の キー \/ 値 を 返 し ま す 。 
逆順 探索 を 開始 する 際 に 使 う こと が でき ま す ;  previous ( )  を 参照 し て くださ い 。 
データベース の 順 方向 探索 に お い て 、 次 の より も 後 に 来る キー \/ 値 の ペア を 返 し ま す 。 
以下 の コード は データベース  db  に つ い て 、 キー 全て を 含 む リスト を メモリ 上 に 生成 する こと な く 全て の キー を 出力 し ま す 。 
データベース の 逆 方向 探索 に お い て 、 手前 に 来る キー \/ 値 の ペア を 返 し ま す 。  last ( )  と 併せ て 、 逆 方向 の 探索 に 用い られ ま す 。 
この メソッド は ディスク に まだ 書き込 ま れ て い な い データ を 全て 書き込 ま せ ま す 。 
デバッガ は 以下 の コマンド を 認識 し ま す 。 
ほとんど の コマンド は 一 文字 また は 二 文字 に 省略 する こと が でき ま す 。 
例えば 、 " h (elp ) " が 意味 する の は 、 ヘルプ コマンド を 入力 する ため に " h " か " help " の どちら か 一方 を 使 う こと が でき る と い う こと で す ( が 、 " he " や " hel " は 使え ず 、 また " H " や " Help " 、 " HELP " も 使え ま せ ん ) 。 
コマンド の 引数 は 空白 ( スペース また は タブ ) で 区切 ら れ な けれ ば な り ま せ ん 。 
オプション の 引数 は コマンド 構文 の 角 括弧 ( " [ ] " ) の 中 に 入れ な けれ ば な り ま せ ん 。  角 括弧 を タイプ し て は いけ ま せ ん 。 
コマンド 構文 に お け る 選択 肢 は 垂直 バー ( "| " ) で 区切 ら れ ま す 。  空行 を 入力 する と 入力 さ れ た 直前 の コマンド を 繰り返 し ま す 。 
例外 :  直前 の コマンド が " list " コマンド なら ば 、 次 の 11 行 が リスト さ れ ま す 。  デバッガ が 認識 し な い コマンド は Python 文 と みな し て 、 デバッグ し て い る プログラム の コンテキスト お い て 実行 さ れ ま す 。 
Python 文 は 感嘆 符 ( " ! " ) を 前 に 付け る こと も でき ま す 。 
これ は デバッグ 中 の プログラム を 調査 する 強力 な 方法 で す 。  変数 を 変更 し たり 関数 を 呼び出 し たり する こと さえ 可能 で す 。 
この よう な 文 で 例外 が 発生 し た 場合 に は 例外 名 が プリント さ れ ま す が 、 デバッガ の 状態 は 変化 し ま せ ん 。  複数 の コマンド を " ; ; " で 区切 っ て 一行 で 入力 する こと が でき ま す 。 
エイリアス は パラメータ を 持 つ こと が でき 、 調査 中 の コンテキスト に 対 し て 人 が ある 程度 柔軟 に 対応 でき ま す 。  ファイル . pdbrc
両方 の ファイル が 存在 する 場合 、 ホーム ディレクトリ の もの が 最初 に 読 ま れ 、 そこ に 定義 さ れ て い る エイリアス は ローカル ファイル に よ り 上書き さ れ る こと が あ り ま す 。 
引数 なし で は 、 利用 でき る コマンド の 一覧 を プリント し ま す 。 
引数 と し て command が あ る 場合 は 、 その コマンド に つ い て の ヘルプ を プリント し ま す 。 
" help pdb " は 完全 ドキュメンテーション ファイル を 表示 し ま す 。  環境 変数 PAGER が 定義 さ れ て い る なら ば 、 代わり に ファイル は その コマンド へ パイプ さ れ ま す 。 
command 引数 が 識別 子 で な けれ ば な ら な い の で 、 " ! " コマンド に つ い て の ヘルプ を 得 る ため に は " help  exec " と 入力 し な けれ ば な ら な い 。 
スタック の 底 に あ る 最も 新し い フレーム と 一緒 に スタック トレース を プリント し ま す 。 
矢印 は カレント フレーム を 指 し 、 それ が ほとんど の コマンド の コンテキスト を 決定 し ま す 。 
( より 新し い フレーム に 向か っ て ) スタック トレース 内 で カレント フレーム を 一 レベル 下げ ま す 。 
( より 古 い フレーム に 向か っ て ) スタック トレース 内 で カレント フレーム を 一 レベル 上げ ま す 。 
lineno 引数 が あ る 場合 は 、 現在 の ファイル の その 場所 に ブレーク ポイント を 設定 し ま す 。 
function 引数 が あ る 場合 は 、 その 関数 の 中 の 最初 の 実行 可能文 に ブレーク ポイント を 設定 し ま す 。  別 の ファイル ( まだ ロード さ れ て い な い か も しれ な い もの ) の ブレーク ポイント を 指定 する ため に 、 行 番号 は ファイル 名 と コロン を とも に 先頭 に 付け られ ま す 。 
ファイル は sys . path に そ っ て 検索 さ れ ま す 。 
一時 的 な ブレーク ポイント で 、 最初 に そこ に 達 し た とき に 自動 的 に 取り除 か れ ま す 。 
引数 は break と 同じ で す 。 
スペース で 区切 ら れ た ブレーク ポイント ナンバー の リスト を 与え る と 、 それ ら の ブレーク ポイント を 解除 し ま す 。 
引数 なし の 場合 は 、 すべて の ブレーク ポイント を 解除 し ま す ( が 、 はじめ に 確認 し ま す ) 。 
スペース で 区切 ら れ た ブレーク ポイント ナンバー の リスト と し て 与え られ る ブレーク ポイント を 無効 に し ま す 。 
ブレーク ポイント を 無効 に する と 、 プログラム の 実行 を 止め る こと が でき な く な り ま す が 、 ブレーク ポイント の 解除 と 違い ブレーク ポイント の リスト に 残 っ た まま に な り 、 ( 再び ) 有効 に する こと が でき ま す 。 
指定 し た ブレーク ポイント を 有効 に し ま す 。 
与え られ た ブレーク ポイント ナンバー に 通過 カウント を 設定 し ま す 。 
count が 省略 さ れ る と 、 通過 カウント は 0 に 設定 さ れ ま す 。 
通過 カウント が ゼロ に な っ た とき 、 ブレーク ポイント が 機能 する 状態 に な り ま す 。 
ゼロ で な い とき は 、 その ブレーク ポイント が 無効 に さ れ ず 、 どんな 関連 条件 も 真 に 評価 さ れ て い て 、 ブレーク ポイント に 来る たび に count が 減ら さ れ ま す 。 
condition は ブレーク ポイント が honored ( ? ? ? ) する 前 に 真 に 評価 し な けれ ば な ら な い 式 で す 。 
condition が な い 場合 は 、 どんな 既存 の 条件 も 取り除 か れ ま す 。  すなわち 、 ブレーク ポイント に 条件 が あ り ま せ ん 。 
現在 の 行 を 実行 し 、 最初 に 実行 可能 な もの が あらわれ た とき に ( 呼び出 さ れ た 関数 の 」 中 か 、 現在 の 関数 の 次 の 行 で ) 停止 し ま す . 
現在 の 関数 の 次 の 行 に 達 する か 、 あるいは 関数 が 返 る まで 実行 を 継続 し ま す 。 
( " next " と " step " の 差 は " step " が 呼び出 さ れ た 関数 の 内部 で 停止 する の に 対 し 、 " next " は 呼び出 さ れ た 関数 を ( ほぼ ) 全 速力 で 実行 し 、 現在 の 関数 内 の 次 の 行 で 停止 する だけ で す 。 
現在 の 関数 が 返 る まで 実行 を 継続 し ま す 。 
ブレーク ポイント に 出会 う まで 、 実行 を 継続 し ま す 。 
次 に 実行 する 行 を 指定 し ま す 。 
最も 底 の フレーム 中 で のみ 実行 可能 で す 。 
前 に 戻 っ て 実行 し たり 、 不要 な 部分 を スキップ し て 先 の 処理 を 実行 する 場合 に 使用 し ま す 。  ジャンプ に は 制限 が あ り 、 例えば  for ループ の 中 に は 飛び込 め ま せ ん し 、 finally 節 の 外 に も 飛 ぶ 事 が でき ま せ ん 。 
現在 の ファイル の ソース コード を リスト 表示 し ま す 。 
引数 なし の 場合 は 、 現在 の 行 の 周囲 を 11 行 リスト する か 、 また は 前 の リスト の 続き を 表示 し ま す 。 
引数 が 一 つ あ る 場合 は 、 その 行 の 周囲 を 11 行 表示 し ま す 。 
引数 が 二 つ の 場合 は 、 与え られ た 範囲 を リスト 表示 し ま す 。  第 二 引数 が 第 一 引数 より 小さ い とき は 、 カウント と 解釈 さ れ ま す 。 
現在 の 関数 の 引数 リスト を プリント し ま す 。 
現在 の コンテキスト に お い て expression を 評価 し 、 その 値 を プリント し ま す 。 
( 注意 :  " print " も 使 う こと が でき ま す が 、 デバッガ コマンド で は あ り ま せ ん --  これ は Python の print 文 を 実行 し ま す 。 ) 
pprint モジュール を 使 っ て 例外 の 値 が 整形 さ れ る こと を 除 い て " p " コマンド と 同様 で す 。 
name と い う 名前 の command を 実行 する エイリアス を 作成 し ま す 。 
コマンド は 引用 符 で 囲 ま れ て い て は いけ ま せ ん 。 
入れ替え 可能 な パラメータ は " % 1 " 、 " % 2 " など で 指し示 さ れ 、 さらに " % * " は 全 パラメータ に 置き換え られ ま す 。 
コマンド が 与え られ な けれ ば 、 name に 対 する 現在 の エイリアス を 表示 し ま す 。 
引数 が 与え られ な けれ ば 、 すべて の エイリアス が リスト さ れ ま す 。  エイリアス は 入れ子 に な っ て も よ く 、 pdb プロンプト で 合法 的 に タイプ でき る どんな もの で も 含め る こと が でき ま す 。 
内部 pdb コマンド を エイリアス に よ っ て 上書き する こと が でき ま す 。 
その とき 、 この よう な コマンド は エイリアス が 取り除 か れ る まで 隠 さ れ ま す 。 
指定 し た エイリアス を 削除 し ま す 。 
現在 の スタック フレーム の コンテキスト に お い て ( 一行 の ) statement を 実行 し ま す 。  文 の 最初 の 語 が デバッガ コマンド と 共通 で な い 場合 は 、 感嘆 符 を 省略 する こと が でき ま す 。 
グローバル 変数 を 設定 する ため に 、 同じ 行 に " global " コマンド と とも に 代入 コマンド の 前 に 付け る こと が でき ま す 。  ( Pdb )  global  list _options ; list _options = ['- l'] ( Pdb ) 
デバッガ を 終了 し ま す 。  実行 し て い る プログラム は 中断 さ れ ま す 。 
いく つ か の 変更 が インタプリタ へ 加え られ ま し た : 
sys . settrace ( func ) が グローバル トレース 関数 を 設定 し ま す 
そこ で 、 ローカル トレース 関数 を 使 う こと も でき ま す ( 後ろ を 参照 ) 
' call '  関数 が 呼び出 さ れ ま す ( また は 、 他 の コード ブロック に 入 り ま す ) 。 
インタプリタ が コード の 新し い 行 を 実行 し よう と し て い る ところ で す ( ときどき 、 一行 に 複数 行 イベント が 存在 し ま す ) 。  ローカル トレース 関数 が 呼び出 さ れ ま す 。 
arg は None で す 。  戻 り 値 は 新し い ローカル トレース 関数 を 指定 し ま す 。 
関数 ( また は 、 コード ブロック ) が 返 ろ う と し て い る ところ で す 。 
ローカル トレース 関数 が 呼び出 さ れ ま す 。 arg は 返 る で あ ろ う 値 で す 。 
トレース 関数 の 戻 り 値 は 無視 さ れ ま す 。 
例外 が 生 じ て い ま す 。 
拡張 モジュール また は 組み込み の  C  関数 が 呼び出 さ れ よう と し て い ま す 。 
arg  は  C  関数 オブジェクト で す 。 
'c _return' C  関数 が 処理 を 戻 し ま し た 。 
arg  は None  で す 。 
'c _exception' C  関数 が 例外 を 送出 し ま し た 。 
arg  は None  で す 。 
例外 が 一連 の 呼び出 し 元 を 伝え られ て 行 く とき に 、 'exception' イベント は 各 レベル で 生成 さ れ る こと こと に 注意 し て くださ い 。  コード と フレーム オブジェクト に つ い て さらに 情報 を 得 る に は 、 
コンテキスト  ( context )  と は 、 算術 演算 に お け る 環境 設定 で す 。 
コンテキスト は 計 算 精度 を 決定 し 、 値 丸め の 方法 を 設定 し 、 シグナル の どれ が 例外 に な る か を 決め 、 指数 の 範囲 を 制限 し て い ま す 。  多重 スレッド で 処理 を 行 う 場合 に は 各 スレッド ごと に 現在 の コンテキスト が あ り 、 getcontext ( )  や  setcontext ( )  と い っ た 関数 で アクセス し たり 設定 変更 でき ま す : 
アクティブ な スレッド の 現在 の コンテキスト を 返 し ま す 。 
General  Decimal  Arithmetic  Specification  で 定義 さ れ て い る 標準 コンテキスト の 一 つ で す 。 
精度 は  9  桁 に 設定 さ れ て い ま す 。 
丸め 規則 は  ROUND _ HALF _ UP で す 。 
すべて の 演算 結果 フラグ は クリア さ れ て い ま す 。 
Inexact 、 Rounded 、 Subnormal  を 除 く 全て の 演算 エラー トラップ が 有効  ( 例外 と し て 扱 う )  に な っ て い ま す 。  多く の トラップ が 有効 に な っ て い る の で 、 デバッグ の 際 に 便利 な コンテキスト で す 。 
丸め 規則 は RO UND _ HALF _ EVEN  で す 。 
トラップ は 全て 無効  ( 演算 中 に 一切 例外 を 送出 し な い )  に な っ て い ま す 。  トラップ が 無効 に な っ て い る の で 、 エラー の 伴 う 演算 結果 を  NaN  や  Infinity  に し 、 例外 を 送出 し な い よう に し た い アプリケーション に 向 い た コンテキスト で す 。 
この コンテキスト を 使 う と 、 他 の 場合 に は プログラム が 停止 し て しま う よう な 状況 が あ っ て も 実行 を 完了 さ せ られ ま す 。 
Context  コンストラクタ が 新た な コンテキスト を 作成 する さい に 雛形 に する コンテキスト で す 。 
この コンテキスト の フィールド  ( 精度 の 設定 など ) を 変更 する と 、 Context  コンストラクタ が 生成 する 新た な コンテキスト に 影響 を 及ぼ し ま す 。  この コンテキスト は 、 主に 多重 スレッド 環境 で 便利 で す 。 
スレッド を 開始 する 前 に 何 ら か の フィールド を 変更 し て お く と 、 システム 全体 の デフォルト 設定 に 効果 を 及ぼ せ ま す 。 
スレッド を 開始 し た 後 に フィールド を 変更 する と 競合 条件 を 抑制 する ため に スレッド を 同期 化 せ ね ば な ら な い の で 推奨 し ま せ ん 。  単一 スレッド の 環境 で は 、 この コンテキスト を 使 わ な い よう 薦め ま す 。 
下 で 述べ る よう に 明示 的 に コンテキスト を 作成 し て くださ い 。  デフォルト の 値 は 精度  28  桁 、 丸め 規則  ROUND _ HALF _ EVEN  で 、 トラップ  Overflow 、 Invalid Operation 、 および DivisionByZero  が 有効 に な っ て い ま す 。 
上 に 挙げ た 三 つ の コンテキスト に 加え 、 Context  コンストラクタ を 使 っ て 新た な コンテキスト を 生成 でき ま す 。 
クラス Context 
新た な コンテキスト を 生成 し ま す 。 
ある フィールド が 定義 さ れ て い な い か None  で あ れ ば 、  Default Context  から デフォルト 値 を コピー し ま す 。 
Context  クラス で は 、 いく つ か の 汎用 の メソッド の 他 、 現在 の コンテキスト で 算術 演算 を 直接 行 う ため の メソッド を 数多く 定義 し て い ま す 。 
フラグ を 全て  0  に セット し ま す 。 
コンテキスト の 複製 を 返 し ま す 。 
self  を コンテキスト と する 新た な  Decimal  インスタンス を num  から 生成 し ま す 。 
Decimal  コンストラクタ と 違 い 、 数値 を 変換 する 際 に コンテキスト の 精度 、 値 丸め 方法 、 フラグ 、 トラップ を 適用 し ま す 。  定数 値 は しばしば アプリケーション の 要求 より も 高 い 精度 を 持 っ て い る ため 、 この メソッド が 役 に 立 ち ま す 。 
また 、 値 丸め を 即座 に 行 う ため 、 例えば 以下 の よう に 、 入力 値 に 値 丸め を 行 わ な い ため に 合計 値 に ゼロ の 加算 を 追加 する だけ で 結果 が 変わ っ て しま う と い っ た 、 現在 の 精度 より も 細か い 値 の 影響 が 紛れ込 む 問題 を 防げ る と い う 恩恵 も あ り ま す 。 
" Emmin - prec  +  1 "  に 等し い 値 を 返 し ま す 。  演算 結果 の 劣化 が 起こ る 桁 の 最小 値 で す 。 
アンダー フロー が 起き た 場合 、 指数 は  Etiny  に 設定 さ れ ま す 。 
" Emax  - prec  +  1 "  に 等し い 値 を 返 し ま す 。 
Decimal  を 使 っ た 処理 を 行 う 場合 、 通常 は  Decimal  インスタンス を 生成 し て 、 算術 演算 を 適用 する と い う アプローチ を と り ま す 。  演算 は アクティブ な スレッド に おけ る 現在 の コンテキスト の 下 で 行 わ れ ま す 。 
もう 一 つ の アプローチ は 、 コンテキスト の メソッド を 使 っ た 特定 の コンテキスト 下 で の 計算 で す 。 
コンテキスト の メソッド は  Decimal  クラス の メソッド に 似 て い る の で 、 ここ で は 簡単 な 説明 に とどめ ま す 。 
x  の 絶対 値 を 返 し ま す 。 
x  と  y  の 加算 を 返 し ま す 。 
二 つ の 値 を 数値 と し て 比較 し ま す 。 __cmp__( )  に 似 て い ま す が 、  以下 の よう に Decimal  インスタンス を 返 し ま す : 
x  を  y  で 除算 し た 値 を 返 し ま す 。 
二 つ の 数値 間 の 除算 を 行 い 、 結果 の 整数 部 を 返 し ま す 。 
二 つ の 値 を 数値 と し て 比較 し 、 大き い ほう を 返 し ま す 。 
数値 上 二 つ の 値 が 等し い 場合 に は 、 左側 値 を 結果 と し て 返 し ま す 。 
二 つ の 値 を 数値 と し て 比較 し 、 小さい ほう を 返 し ま す 。 
数値 上 二 つ の 値 が 等し い 場合 に は 、 左側 値 を 結果 と し て 返 し ま す 。 
Python  に おけ る 単項 の 符号 反転 前置 演算 子  ( unary  prefix  minus operator )  に 対応 する 演算 で す 。 
x  と y  の 積 を 返 し ま す 。 
被 演算 子 を もっとも 単純 な 表記 に し ま す 。  本質 的 に は 、 plus  演算 の 結果 から 末尾 の ゼロ を 全て 取り除 い た もの と 同じ で す 。 
Python  に おけ る 単項 の 符号 非 反転 前置 演算 子  ( unary  prefix  plus operator )  に 対応 する 演算 で す 。 
コンテキスト に お け る 精度 や 値 丸め を 適用 する の で 、 等値  ( identity )  演算 と は  違 い ま す 。 
" x  **y "  を 計算 し ま す 。 
modulo  が 指定 さ れ て い れ ば 使 い ま す 。  右 被 演算 子 は 整数 部 が  9  桁 以下 で 、 小数 部  ( の あ る 場合 )  は 値 丸め 前 に 全て ゼロ に な っ て い な けれ ば な り ま せ ん 。 
x  に 値 丸め を 適用 し 、 指数 を  y  に し た 値 を 返 し ま す 。  他 の 演算 と 違 い 、 量子 化 後 の 係数 の 長 さ が 精度 より も 大き い 場合 に は Invalid Operation  を シグナル し ま す 。 
この ため 、 エラー が 生 じ な い かぎり 、 量子 化 後 の 指数 は 右側 の 被 演算 子 の 指数 と 等し く な る こと が 保証 さ れ ま す 。  また 、 結果 が 劣化 し て い たり 不 正確 な 値 で あ っ て も 、 Underflow を シグナル し な い と い う 点 も 他 の 演算 と 異な り ま す 。 
整数 除算 の 剰余 を 返 し ま す 。 
剰余 が ゼロ で な い 場合 、 符号 は 割 ら れ る 数 の 符号 と 同じ に な り ま す 。  remainder_near 
モジュロ を 計算 し 、 正負 の モジュロ の うち ゼロ に 近 い 値 を 返 し ま す 。 
たとえば 、 " Decimal ( 10 ) . remainder_near ( 6 ) "  は  Decimal ( " 4 " )  より も ゼロ に 近 い 値  Decimal ( " - 2 " ) を 返 し ま す 。  ゼロ から の 差 が 同じ 場合 に は 、  self  と 同じ 符号 を 持 っ た 方 を 返 し ま す 。 
self  と other  が 同じ 指数 を 持 っ て い る か 、 あるいは 双方 とも  NaN  で あ る 場合 に 真 を 返 し ま す 。 
平方 根 を 精度 いっぱい ま で 求め ま す 。 
x  と y  の 間 の 差 を 返 し ま す 。 
工学 表記 で 文字 列 に 変換 し ま す 。 
工学 表記 で は 指数 は  3  の 倍数 に な り ま す 。 
従 っ て 、 最大 で  3  桁 まで の 数字 が 基数 の 小数 部 に 現れ ま す 。 
たとえば 、 Decimal ( ' 123 E + 1 ' )  は  Decimal ( " 1 . 23 E + 3 " ) に 変換 さ れ ま す 。  to_ integral 
Inexact  や  Rounded  と い っ た シグナル を 出 さ ず に 最近傍 の 整数 に 値 を 丸め ま す 。 
数値 を 科学 表記 で 文字 列 に 変換 し ま す 。 
10  進 浮動 小数 点数 を 使 う と 、  10  進 数 表 現 に よ る 誤差 を 抑制 でき ま す ( 0 . 1  を 正確 に 表現 でき る よう に な り ま す ) ;  しかし 、 ゼロ で な い 桁 が 一定 の 精度 を 越え て い る 場合 に は 、 演算 に よ っ て は 依然 と し て 値 丸め に よ る 誤差 を 引き起こ し ま す 。 
Knuth  は 、 十分 で な い 計算 精度 の 下 で 値 丸め を 伴 う 浮動 小数 点 演算 を 行 っ た 結果 、 加算 の 結合 則 や 分配 則 に お け る 恒等 性 が 崩れ て しま う 例 を 二 つ 示 し て い ま す : 
decimal  モジュール で は 、 最 下 桁 を 失 わ な い よう に 十分 に 計算 精度 を 広げ る こと で 、 上 で 問題 に し た よう な 恒等 性 を とりもどせ ま す : 
decimal  モジュール の 数 体系 で は 、 NaN , sNaN ,  - Infinity ,  Infinity ,  および 二 つ の ゼロ 、 + 0  と  - 0  と い っ た 特殊 な 値 を 提供 し て い ま す 。  無限 大  ( Infinity )  は  Decimal ( ' Infinity')  で 直接 構築 でき ま す 。 
また 、 DivisionByZero  を トラップ せ ず に ゼロ で 除算 を 行 っ た 場合 に も 出 て き ま す 。 
同様 に 、  Overflow  シグナル を トラップ し な けれ ば 、 表現 可能 な 最大 の 数値 の 制限 を 越え た 値 を 丸め た とき に 出 て き ま す 。  無限 大 に は 符号 が あ り  ( アフィン :  affine  で あり ) 、 算術 演算 に 使用 でき 、 非常 に 巨大 で 不 確定 の ( indeterminate ) 値 と し て 扱 わ れ ま す 。 
例えば 、 0 \/ 0  は  NaN  を 返 し ま す 。 
NaN  は 「 非 数値  ( not a  number ) 」 を 表 し ま す 。  この よう な  NaN  は 暗黙 の うち に 生成 さ れ 、 一 度 生成 さ れ る と それ を 他 の 計算 に も 流れ て ゆ き 、 関係 する 個々 の 演算 全て が 個別 の  NaN  を 返 す よう に な り ま す 。 
この 挙動 は 、 たまに 入力 値 が 欠け る よう な 状況 で 一連 の 計算 を 行 う 際 に 便利 で す  - -  特定 の 計算 に 対 し て は 無効 な 結果 を 示 す フラグ を 立て つつ 計算 を 進め られ る から で す 。 
一方 、 NaN  の 変種 で あ る sNaN  は 関係 する 全て の 演算 で 演算 後 に シグナル を 送出 し ま す 。 
二 つ の 符号 付き ゼロ が 区別 さ れ て い る の に 等価 で あ る こと に 加え て 、 異な る 精度 に お け る ゼロ の 表現 は まちまち な の に 、 値 は 等価 と みな さ れ る と い う こと が あ り ま す 。 
これ に 慣れ る に は 多少 時間 が かか り ま す 。 
正規 化 浮動 小数 点 表現 に 目 が 慣れ て しま う と 、 以下 の 計算 で ゼロ に 等し い 値 が 返 っ て い る と は 即座 に 分か り ま せ ん : 
Decimal  クラス の 利用 を 実演 し て い る 例 を いく つ か 示 し ま す 。  これ ら は ユーティリティ 関数 と し て も 利用 でき ま す : 
def moneyfmt ( value ,  places = 2 ,  curr= ' ' ,sep = ' ,', dp ='. ' , pos= ' ',  neg = ' -', trailneg = ' ') : " " " Decimal  を 通貨 表現 の 文字 列 に 変換 し ま す 。 
places :  小数 点 以下 の 値 を 表 す の に 必要 な 桁数 curr:  符号 の 前 に 置 く 通貨 記号  ( オプション で 、 空 で も かま い ま せ ん ) sep:  桁 の グループ 化 に 使 う 記号 、 オプション で す  ( コンマ 、 ピリオド 、 スペース 、 また は 空 ) dp :  小数 点  ( コンマ また は ピリオド ) 小数 部 が ゼロ の 場合 に は 空 に でき ま す 。 
pos: optional  sign  for  positive  numbers: '+' , space orblankneg : optional  sign  for  negative  numbers: '-', '(', space orblanktrailneg :optional trailing  minus indicator : '-', ') ' , space orblank d  =  Decimal ( ' - 12345 6 7 . 8901 ' )  moneyfmt ( d ,  curr= '$') ' - $ 1 , 23 4 ,5 6 7 . 89 '  moneyfmt ( d , places = 0 ,  sep ='. ', dp =' ',  neg = ' ', trailneg = ' -') ' 1 . 2 3 4 . 56 8 - ' moneyfmt ( d ,  curr= '$',  neg = ' (', trailneg = ') ') ' ( $ 1 , 23 4 ,5 6 7 . 89 ) '  moneyfmt ( Decimal ( 12345678 9 ) , sep ='') ' 123  45 6  7 8 9 . 0 0 '  moneyfmt ( Decimal ( ' - 0 . 0 2 ' ) ,  neg = ' ', trailneg = ' ') ' . 0 2 ' " " " q  =  Decimal ( ( 0 ,  ( 1 , ) , - places) )  #  2  places --  ' 0 . 0 1 ' sign ,  digits ,  exp  = value . quantize ( q ) . as_tuple ( ) assert  exp ==- places  result  = [ ] digits=  map ( str ,  digits) build ,  next  =  result . append , digits . popif sign :build ( trailneg ) for i  in range ( places ) : if digits:build ( next ( ) ) else :build ( ' 0 ' ) build ( dp ) i  =  0 while digits:build ( next ( ) ) i  + =  1 if  i= =  3  and  digits : i =  0 build( sep) build ( curr) if  sign :build ( neg ) else :build ( pos) result . reverse ( ) return ' '. join ( result ) def pi ( ) : " " " Compute  Pi to the current  precision .  print pi ( ) 3 . 14159265 358 97932 38462 6 4 3 3 83 " " " getcontext ( ) . prec  + =  2  #  extra digits  for  intermediate stepsthree  =  Decimal ( 3 )  # substitute  " three = 3 . 0 "  for  regular  floatslasts , t ,  s , n ,  na ,  d ,  da  =  0 ,  three ,  3 ,  1 ,  0 ,  0 ,  24 while  s  ! = lasts: lasts = sn ,  na  = n + na ,  na + 8 d ,  da  =  d + da ,  da + 32 t  =( t*n) \/ds  + = tgetcontext ( ) . prec  - =  2 return + s #unary  plus  applies the  newprecisiondef exp ( x ) : " " " Returne raised to the power  of  x .  Resulttype matches inputtype .  print  exp ( Decimal ( 1 ) ) 2 . 718 2818 2 8459 04523 5 360 2 874 71  print  exp ( Decimal ( 2 ) ) 7 . 3 890 560 9 89306 502 2 7 230 4 2 7461  print  exp ( 2 . 0 ) 7 . 3 890 560 9 893  print  exp ( 2 + 0 j ) ( 7 . 3 890 560 9 89 3 + 0 j ) " " " getcontext ( ) . prec  + =  2 i ,  lasts ,  s ,  fact , num  =  0 ,  0 ,  1 ,  1 ,  1while  s  ! = lasts: lasts =s  i  + =  1 fact*=inum* =  x  s  += num\/ fact  getcontext ( ) . prec  - =  2  return + sdef cos ( x ) : " " " x  ラジアン の 余弦 を 返 し ま す 。  print cos ( Decimal ( ' 0 . 5 ' ) ) 0 . 8775 8 2561 890 3 7 2 7 1 6 11 62815 8 2 6  print cos ( 0 . 5 ) 0 . 8775 8 256189  print cos ( 0 . 5 + 0 j ) ( 0 . 8775 8 2561 8 9 + 0 j ) " " " getcontext ( ) . prec  + =  2 i ,  lasts ,  s ,  fact , num ,  sign  =  0 ,  0 ,  1 ,  1 ,  1 ,  1while  s  ! = lasts: lasts =s  i  + =  2 fact*=i*( i - 1 ) num* = x * xsign*= - 1 s  += num\/ fact * sign  getcontext ( ) . prec  - =  2  return + sdef sin ( x ) : " " " x  ラジアン の 正弦 を 返 し ま す 。 
5 . 5 . 4  シグナル  シグナル は 、 計算 中 に 生 じ た 様々 な エラー 条件 を 表現 し ま す 。 
例えば 、 DivisionByZero  が 設定 さ れ て い る と 、 エラー 条件 が 生 じ た 際 に  DivisionByZero  例外 を 送出 し ま す 。 
値 の 表現 上 の 制限 に 沿 わ せ る ため に 指数 部 が 変更 さ れ た こと を 通知 し ま す 。  通常 、 クランプ  ( clamp )  は 、 指数 部 が コンテキスト に お け る 指数 桁 の 制限 値 Emin  および Emax  を 越え た な っ た 場合 に 発生 し ま す 。 
可能 な 場合 に は 、 係数 部 に ゼロ を 加え た 表現 に 合わせ て 指数 部 を 減ら し ま す 。 
他 の シグナル の 基底 クラス で 、 ArithmeticError  の サブ クラス で す 。 
有限 値 を ゼロ で 除算 し た とき の シグナル で す 。  除算 や モジュロ 除算 、 数 を 負 の 値 で 累乗 し た 場合 に 起き る こと が あ り ま す 。 
この シグナル を トラップ し な い 場合 、 演算 結果 は  Infinity  また は - Infinity  に な り 、 その 符号 は 演算 に 使 っ た 入力 に 基づ い て 決ま り ま す 。 
値 の 丸め に よ っ て 演算 結果 から 厳密 さ が 失 わ れ た こと を 通知 し ま す 。  この シグナル は 値 丸め 操作 中 に ゼロ で な い 桁 を 無視 し た 際 に 生 じ ま す 。 
演算 結果 は 値 丸め 後 の 値 で す 。 
シグナル の フラグ や トラップ は 、 演算 結果 の 厳密 さ が 失 わ れ た こと を 検出 する ため に 使え る だけ で す 。 
この シグナル の 発生 原因 と し て 考え られ る の は 、 以下 の よう な 状況 で す : 
数値 オーバフロー を 示 す シグナル で す 。  この シグナル は 、 値 丸め を 行 っ た 後 の 指数 部 が  Emax  より 大き い こと を 示 し ま す 。 
シグナル を トラップ し な い 場合 、 演算 結果 は 値 丸め の モード に よ り 、 表現 可能 な 最大 の 数値 に な る よう に 内側 へ 引き込 ん で 丸め を 行 っ た 値 か 、 Infinity  に な る よう に 外側 に 丸め た 値 の いずれ か に な り ま す 。 
いずれ の 場合 も 、 Inexact  および  Rounded  が 同時 に シグナル さ れ ま す 。 
この シグナル を トラップ し な けれ ば 、 演算 結果 を その まま 返 し ま す 。 
この シグナル は 有効 桁数 の 減少 を 検出 する 際 に 使 い ま す 。 
これ ら の シグナル の 階層 構造 を まとめ る と 、 以下 の 表 の よう に な り ま す : 
関数 getcontext ( )  は 、 スレッド 毎 に 別々 の Context  オブジェクト に アクセス し ま す 。 
アプリケーション を 通 じ て 全て の スレッド に 同じ 値 を 使 う よう に デフォルト を 設定 し た けれ ば 、 Default Context オブジェクト を 直接 変更 し ま す 。 
getcontext ( )  を 呼び出 す スレッド 間 で 競合 条件 が 生 じ な い よう に する ため 、 Default Context へ の 変更 は いかなる スレッド を 開始 する より も 前 に  行 わ ね ば な り ま せ ん 。 
以下 に 例 を 示 し ま す : 
#  スレッド を 立ち上げ る 前 に アプリケーション に わた る デフォルト を 設定 Default Context . prec  =  12 Default Context . rounding  =  ROUND _ DOWNDefault Context . traps=  ExtendedContext . traps. copy ( ) Default Context . traps[ Invalid Operation ]  =  1setcontext ( Default Context ) #  その 後 で スレッド を 開始 t 1 . start ( ) t 2 . start ( ) t 3 . start ( ) .  . . 
普通 、 decimal  を 使 う とき に は 、 モジュール を import し 、 現在 の 演算 コンテキスト を  getcontext ( )  で 調べ 、 必要 に 応 じ て 精度 や 丸め を 設定 し 、 演算 エラー の トラップ を 有効 に し ま す : 
from  decimal import*  getcontext ( ) Context ( prec = 28 ,  rounding = ROUND _ HALF _ EVEN ,  Emin = - 999999999 , Emax = 999999999 , capitals = 1 , flags= [ ] , traps= [ Overflow ,  Invalid Operation , DivisionByZero ] )  getcontext ( ) . prec  =  7  #  新た な 精度 を 設定 
Decimal  の インスタンス は 、 整数 、 文字 列 また は タプル から 生成 でき ま す 。 
Decimal  を  float  から 生成 し た けれ ば 、 まず 文字 列 型 に 変換 せ ね ば な り ま せ ん 。 
そう する こと で 、 変換 方法 の 詳細 を ( representation error  も 含め て )  明示 的 に 残せ ま す 。 
Decimal  は ` ` 数値 で は な い  ( Not  a  Number ) ' ' を 表 す  NaN  や 正負 の  Infinity  ( 無限 大 ) 、 - 0  と い っ た 特殊 な 値 も 表現 でき ま す 。 
新た な  Decimal  型 数値 の 有効 桁数 は 入力 し た 数 の 桁数 だけ で 決ま り ま す 。 
演算 コンテキスト に お け る 精度 や 値 丸め の 設定 が 影響 する の は 算術 操作 の 中 だけ で す 。 
Decimal  型 数値 は ほとんど の 場面 で  Python  の 他 の 機能 と うま く やりとり でき ま す 。 
Decimal  浮動 小数 点 小 劇場  ( flying  circus )  を 示 し ま しょ う : 
data =  map ( Decimal ,  ' 1 . 34  1 . 87  3 . 45  2 . 3 5  1 . 0 0  0 . 0 3  9 . 25 ' . split ( ) )  max ( data ) Decimal ( " 9 . 25 " )  min ( data ) Decimal ( " 0 . 0 3 " ) sorted ( data) [ Decimal ( " 0 . 0 3 " ) ,  Decimal ( " 1 . 0 0 " ) ,  Decimal ( " 1 . 34 " ) ,  Decimal ( " 1 . 87 " ) , Decimal ( " 2 . 35 " ) ,  Decimal ( " 3 . 45 " ) ,  Decimal ( " 9 . 25 " ) ]  sum ( data ) Decimal ( " 1 9 . 29 " )  a , b , c =  data [ : 3 ]  str ( a ) ' 1 . 34 '  float ( a ) 1 . 3400000000000001  round ( a ,  1 )  # round ( )  は 値 を まず 二進 の 浮動 小数 点数 に 変換 し ま す 1 . 3  int ( a ) 1  a *  5 Decimal ( " 6 . 70 " )  a*bDecimal ( " 2 . 50 5 8 " )  c% aDecimal ( " 0 . 77 " ) 
quantize ( )  メソッド は 位 を 固定 し て 数値 を 丸め ま す 。 
この メソッド は 、 計算 結果 を 固定 の 桁数 で 丸め る こと が よく あ る 、 通貨 を 扱 う アプリケーション で 便利 で す : 
前述 の よう に 、 getcontext ( )  関数 を 使 う と 現在 の 演算 コンテキスト に アクセス でき 、 設定 を 変更 でき ま す 。 
ほとんど の アプリケーション は この アプローチ で 十分 で す 。  より 高度 な 作業 を 行 う 場合 、 Context ( )  コンストラクタ を 使 っ て 別 の 演算 コンテキスト を 作 っ て お く と 便利 な こと が あ り ま す 。 
別 の 演算 コンテキスト を アクティブ に し た けれ ば 、 setcontext ( ) を 使 い ま す 。  Decimal  モジュール で は 、 標準 仕様 に 従 っ て 、 すぐ 利用 でき る 二 つ の 標準 コンテキスト 、 Basic Context  および ExtendedContext  を 提供 し て い ま す 。 
後者 は ほとんど の トラップ が 有効 に な っ て お り 、 とりわけ デバッグ の 際 に 便利 で す : 
演算 コンテキスト に は 、 演算 中 に 遭遇 し た 例外 的 状況 を モニタ する ため の シグナル フラグ が あ り ま す 。 
フラグ が 一 度 セット さ れ る と 、 明示 的 に クリア する まで 残 り 続け ま す 。  その ため 、 フラグ の モニタ を 行 い た い よう な 演算 の 前 に は clear_flags( )  メソッド で フラグ を クリア し て お く の が ベスト で す 。 
flags  エントリ から 、 Pi  の 有理 数 に よ る 近似 値 が 丸め られ た ( コンテキスト 内 で 決め られ た 精度 を 超え た 桁数 が 捨て られ た )  こと と 、 計算 結果 が 厳密 で な い  ( 無視 さ れ た 桁 の 値 に 非 ゼロ の もの が あ っ た )  こと が わか り ま す 。  コンテキスト の  traps フィールド に 入 っ て い る 辞書 を 使 う と 、 個々 の トラップ を セット でき ま す : 
ほとんど の プログラム で は 、 開始 時 に 一 度 だけ 現在 の 演算 コンテキスト を 修正 し ま す 。 
また 、 多く の アプリケーション で は 、 データ から  Decimal  へ の 変換 は ループ 内 で 一 度 だけ キャスト し て 行 い ま す 。 
コンテキスト を 設定 し 、 Decimal  オブジェクト を 生成 でき た ら 、 ほとんど の プログラム は 他 の  Python  数値 型 と 全く 変わ ら な い か の よう に Decimal  を 操作 でき ま す 。 
クッキー を 受け つけ 、 また それ を 返 す 際 の 標準 的 な ルール を 実装 し ま す 。  RFC  296 5  クッキー と  Netscape  クッキー の 両方 に 対応 し て い ま す 。 
デフォルト で は 、 RFC  296 5  の 処理 は オフ に な っ て い ま す 。  自分 の ポリシー を 提供 する いちばん 簡単 な 方法 は 、 この クラス を 継承 し て 、 自分 用 の 追加 チェック の 前 に オーバーライド し た 元 の メソッド を 呼び出 す こと で す : 
CookiePolicy  インターフェイス を 実装 する の に 必要 な 機能 に 加え て 、 この クラス で は クッキー を 受けと っ たり 設定 し たり する ドメイン を 許可 し たり 拒絶 し たり でき る よう に な っ て い ま す 。 
コンストラクタ の 引数  blocked_domains 、 および blocked_domains ( )  と  set_blocked_domains ( )  メソッド を 使 っ て くださ い  ( allowed_domains  に 関 し て も 同様 の 対応 する 引数 と メソッド が あ り ま す ) 。 
ホワイト リスト を 設定 し た 場合 は 、 それ を  None  に する こと で ホワイト リスト 機能 を オフ に する こと が でき ま す 。  ブラック リスト あるいは ホワイト リスト 中 に あ る ドメイン の うち 、 ドット  (.) で 始ま っ て い な い もの は 、 正確 に それ と 一致 する ドメイン の クッキー に しか 適用 さ れ ま せ ん 。 
たとえば ブラック リスト 中 の エントリ  " example . com "  は 、 " example . com "  に は マッチ し ま す が 、 " w w w . example . com "  に は マッチ し ま せ ん 。 
一方 ドット  (.) で 始ま っ て い る ドメイン は 、 より 特化 さ れ た ドメイン と も マッチ し ま す 。  たとえば 、 " . example . com "  は 、 " w w w . example . com "  と " w w w .coyote . example . com "  の 両方 に マッチ し ま す ( が 、 " example . com "  自身 に は マッチ し ま せ ん ) 。 
IP  アドレス は 例外 で 、 つね に 正確 に 一致 する 必要 が あ り ま す 。 
たとえば 、 かり に blocked_domains  が  " 19 2 . 16 8 . 1 . 2 "  と  " . 16 8 . 1 . 2 "  を 含 ん で い た と し て 、 192 . 16 8 . 1 . 2  は ブロック さ れ ま す が 、 193 . 16 8 . 1 . 2  は ブロック さ れ ま せ ん 。 
DefaultCookiePolicy  は 以下 の よう な 追加 メソッド を 実装 し て い ま す : 
ブロック し て い る ドメイン の シーケンス を  ( タプル と し て )  返 し ま す 。 
ブロック する ドメイン を 設定 し ま す 。 
domain  が クッキー を 授受 し な い ブラック リスト に 載 っ て い る か どう か を 返 し ま す 。 
None  あるいは 明示 的 に 許可 さ れ て い る ドメイン を  ( タプル と し て )  返 し ま す 。 
許可 する ドメイン 、 あるいは  None  を 設定 し ま す 。 
domain  が クッキー を 授受 する ホワイト リスト に 載 っ て い る か どう か を 返 し ま す 。 
サイト に 、 国別 コード と トップ レベル ドメイン だけ から な る ドメイン 名  (.co . uk , . gov . uk , . co . nz  など )  を 設定 さ せ な い よう に し ま す 。 
これ は 完璧 から は ほど遠 い 実装 で あ り 、 いつ も うま く い く と は 限 り ま せ ん ! 
RFC  296 5  プロトコル の 厳密 性 に 関 する スイッチ : 
検証 不 可能 な トランザクション  ( 通常 これ は リダイレクト か 、 別 の サイト が ホスティング し て い る イメージ の 読み込 み 要求 で す )  に 関 する RFC  296 5  の 規則 に 従 い ま す 。 
この 値 が 偽 の 場合 、 検証 可能 性 を 基準 に し て クッキー が ブロック さ れ る こと は 決して あ り ま せ ん 。 
Netscape  プロトコル の 厳密 性 に 関 する スイッチ : 
検証 不 可能 な トランザクション に 関 する  RFC  296 5  の 規則 を  Netscape  クッキー に 対 し て も 適用 し ま す 。 
Netscape  クッキー に 対 する ドメイン マッチング の 規則 を どの 程度 厳し く する か を 指示 する フラグ で す 。 
と り う る 値 に つ い て は 下 の 説明 を 見 て くださ い 。 
Set - Cookie :  ヘッダ で 、 '$' で 始ま る 名前 の クッキー を 無視 し ま す 。 
要求 し た  URI  に パス が マッチ し な い クッキ の 設定 を 禁止 し ま す 。 
strict_ns_domain  は いく つ か の フラグ の 集合 で す 。 
これ は いく つ か の 値 を  or  する こと で 構成 し ま す  ( たとえば DomainStrictNoDots | DomainStrictNonDomain  は 両方 の フラグ が 設定 さ れ て い る こと に な り ま す ) 。 
クッキー を 設定 する さい 、 ホスト 名 の プレフィクス に ドット が 含 ま れ る の を 禁止 し ま す  ( 例 :  w w w . foo. bar . com は . bar . com  の クッキー を 設定 する こと は でき ま せ ん 、 なぜ なら  w w w . foo  は ドット を 含 ん で い る から で す ) 。 
domain  クッキー 属性 を 明示 的 に 指定 し て い な い クッキー は 、 その クッキー を 設定 し た ドメイン と 同一 の ドメイン だけ に 返 さ れ ま す ( 例 :  example . com  から の クッキー に  domain  クッキー 属性 が な い 場合 、 その クッキー が  spam . example . com  に 返 さ れ る こと は あ り ま せ ん ) 。 
クッキー を 設定 する さい 、 RFC  296 5  の 完全 ドメイン マッチング を 要求 し ま す 。 
以下 の 属性 は 上記 の フラグ の うち もっとも よく 使 わ れ る 組み合わせ で 、 便宜 を はか る ため に 提供 さ れ て い ま す 。 
0  と 同じ で す  ( つまり 、 上述 の  Netscape  の ドメイン 厳密 性 フラグ が すべて オフ に さ れ ま す ) 。 
DomainStrictNoDots | DomainStrictNonDomain  と 同じ で す 。 
EditPythonPrefs  ダイアログ ボックス の  「 Default  startupoptions . . . 」 ボタン を 押 す と 、 沢山 の オプション が 現れ ま す 。  オプション の 中 に は 、 スクリプト の 終了 後 に 「 Output 」 ウィンドウ を 開 い た まま に し て おけ る よう に し たり 、 スクリプト の 実行 終了 後 に 対話 モード に 入れ る よう に し たり でき る もの が あ り ま す 。 
後者 は スクリプト 実行 中 に 生成 さ れ た オブジェクト を 調べ た い 場合 に とても 便利 で す 。 
2 . 1  基本 的 な こと 
2 .  新し い 型 を 定義 する 
注意 : Python  2 . 2  から 、 新し い 型 を 定義 する 方法 が かなり 変わ っ て ( よ く な っ て )  い ま す 。 
この 文書 は  Python  2 . 2  および それ 以降 で 新し い 型 を どう や っ て 定義 する か に つ い て 述べ て い ま す 。 
古 い バージョン の Python  を サポート する 必要 が あ る 場合 は 、 この 文書 の 古 い 版 を 参照 し て くださ い 。 
2 . 2 . 3 . 1  総称 的 な 属性 を 管理 する 
2 . 2 . 3 . 2  特定 の 型 に 特化 し た 属性 の 管理 
オブジェクト の 削除  ( deletion )  は 、 代入 の 定義 と 非常 に 似 た 方法 で 再帰 的 に 定義 さ れ て い ま す 。 
ここ で は 完全 な 詳細 を 記述 する より も いく つ か の ヒント を 述べ る に とどめ ま す 。  ターゲット リスト に 対 する 削除 は 、 各々 の ターゲット を 左 から 右 へ と 順 に 再帰 的 に 削除 し ま す 。 
名前 に 対 し て 削除 を 行 う と 、 ローカル また は グローバル 名前 空間 で の その 名前 の 束縛 を 解除 し ま す 。  どちら の 名前 空間 か は 、 名前 が 同じ コード ブロック 内 の  global  文 で 宣言 さ れ て い る か どう か に よ り ま す 。 
名前 が 未 束縛  ( unbound )  で あ る ばあい 、 NameError  例外 が 送出 さ れ ま す 。 
ネスト し た ブロック 中 で 自由 変数 
に な っ て い る ローカル 名前 空間 上 の 名前 に 対 する 削除 は 不正 な 操作 に な り ま す 属性 参照 、 添字 表記 、 および スライス の 削除 操作 は 、 対象 と な る 一 次 語 オブジェクト に 渡 さ れ ま す ;  スライス の 削除 は 一般 的 に は 適切 な 型 の 空 の スライス を 代入 する の と 等価 で す  ( が 、 この 仕様 自体 も スライス さ れ る オブジェクト で 決定 さ れ て い ま す ) 。 
以下 の トークン は 文法 上 の デリミタ と し て 働 き ま す : 
浮動 小数 点数 や 虚数 リテラル 中 に ピリオド が あ っ て も かま い ま せ ん 。 
ピリオド 三 つ の 列 は スライス 表記 に お け る 省略 符号  (ellipsis )  と し て 特別 な 意味 を 持 っ て い ま す 。  リスト 後半 の 累算 代入 演算 子  ( augmentedassignment  operator )  は 、 字句 的 に は デリミタ と し て 振舞 い ま す が 、 演算 も 行 い ま す 。 
以下 の 印字 可能  ASCII  文字 は 、 他 の トークン の 一部 と し て 特殊 な 意味 を 持 っ て い たり 、 字句 解析 器 に と っ て 重要 な 意味 を 持 っ て い ま す : ' "#\\
以下 の 印字 可能  ASCII  文字 は 、 Python  で は 使 わ れ て い ま せ ん 。 
これ ら の 文字 が 文字 列 リテラル や コメント の 外 に あ る 場合 、 無 条件 に エラー と な り ま す : 
この 節 で は  deque  を つか っ た さまざま な アプローチ を 紹介 し ま す 。  rotate ( )  メソッド の おかげ で 、  deque  の 一部 を 切り出 し たり 削除 し たり でき る こと に な り ま す 。 
たとえば  deld [ n ]  の 純粋 な  Python  実装 で は pop  し た い 要素 まで  rotate ( )  し ま す  : 
この アプローチ を やや 変え た もの と し て 、 Forth  スタイル の スタック 操作 、 つまり  dup , drop , swap , over , pick ,  rot ,  および  roll  を 実装 する の も 簡単 で す 。  ラウンド ロビン の タスク サーバ は  deque  を つか っ て 、 popleft ( )  で 現在 の タスク を 選択 し 、 入力 ストリーム が 使 い 果た さ れ な けれ ば  append ( )  で タスク リスト の 戻 し て や る こと が でき ま す : 
複数 パス の データ ・ リダクション  アルゴリズム は 、 popleft ( )  を 複数 回 呼 ん で 要素 を と りだ し 、 リダクション 用 の 関数 を 適用 し て から append ( )  で  deque  に 戻 し て や る こと に よ り 、 簡潔 かつ 効率 的 に 表現 する こと が でき ま す 。  たとえば 入れ子 状 に な っ た リスト で バランス さ れ た 二 進 木 を つく り た い 場合 、 2 つ の 隣接 する ノード を ひと つ の リスト に グループ 化 する こと に な り ま す : 
2  setup  スクリプト を 書 く 
3 . 1  拡張 モジュール の 名前 と パッケージ 
pure Python  モジュール を 書 く より  Python  拡張 モジュール を 書 く 方 が ちょっと だけ 複雑 な よう に 、  Distutils  で の 拡張 モジュール に 関 する 記述 も ちょっと 複雑 で す 。 
仮 に 、 foo. c  で 実装 さ れ た 拡張 モジュール  foo が 、 配布 物 に 一 つ だけ 入 っ て る と し ま す 。 
コンパイラ \/ リンカ に 他 の 情報 を 与え る 必要 が な い 場合 、 この 拡張 モジュール の ため の 記述 は きわめて 単純 で す : 
Extension  クラス は 、  setup ( )  に よ っ て 、  distutils . core  から import  さ れ ま す 。 
従 っ て 、 拡張 モジュール が 一 つ だけ 入 っ て い て 、 他 に は 何 も 入 っ て い な い モジュール 配布 物 を 作成 する ため の  setup  スクリプト は 、 以下 の よう に な る で しょ う : 
Explained  クラス  ( 実質 的 に は 、 Explained  クラス の 根底 に あ る  build_ext  コマンド で 実装 さ れ て い る 、 拡張 モジュール を ビルド する 機構 )  は 、 Python  拡張 モジュール を きわめて 柔軟 に 記述 でき る よう な サポート を 提供 し て い ま す 。  これ に つ い て は 後 の 節 で 説明 し ま す 。 
Extension  クラス の コンストラクタ に 与え る 最初 の 引数 は 、 常 に 拡張 モジュール の 名前 に し ま す 。  これ に は パッケージ 名 も 含め ま す 。 
と する と 、 拡張 モジュール を ルート パッケージ に 置 く こと に な り ま す 。 
一方 、  Extension ( ' pkg . foo' ,  ['src\/foo 1 . c ' , 'src\/foo 2 . c '] ) 
は 、 同じ 拡張 モジュール を  pkg  パッケージ の 下 に 置 く よう 記述 し て い ま す 。 
ソース コード ファイル と 、 作成 さ れ る オブジェクト コード は どちら の 場合 で も 同じ で す ;  作成 さ れ た 拡張 モジュール が ファイル システム 上 の どこ に 置 か れ る か  ( すなわち  Python  の 名前 空間 上 の どこ に 置 か れ る か )  が 違 う に すぎ ま せ ん 。  同じ パッケージ 内 に  ( また は 、 同じ 基底 パッケージ 下 に )  いく つ も の 拡張 モジュール が あ る 場合 、 ext _ package  キー ワード 引数 を setup ( )  に 指定 し ま す 。 
と する と 、  foo. c  を コンパイル し て  pkg . foo  に し 、 bar . c  を コンパイル し て  pkg . subpkg . bar  に し ま す 。 
Extension  コンストラクタ の 二番 目 の 引数 は 、 ソース ファイル の リスト で す 。 
Distutils  は 現在 の ところ 、 C 、 C + + 、 そして  Objective - C の 拡張 しか サポート し て い な い の で 、 引数 は 通常  C \/ C + + \/Objective - C ソース コード ファイル に な り ま す 。 
( C + + ソース コード ファイル を 区別 でき る よう 、 正し い ファイル 拡張 子 を 使 っ て くださ い :  . cc  や . cpp  に すれ ば 、 Unix  と  Windows  用 の 双方 の コンパイラ で 認識 さ れ る よう で す 。 
Extension  に は 三 種類 の オプション 引数 :  include_dirs ,  define _macros ,  そして  undef_macros  が あ り 、 検索 対象 に する インク ルード ディレクトリ を 指定 し たり 、 プリ プロセッサ マクロ を 定義  ( define ) \/ 定義 解除  ( undefine )  し たり する 必要 が あ る とき 役立 ち ま す 。  例えば 、 拡張 モジュール が 配布 物 ルート 下 の  include  ディレクトリ に あ る ヘッダ ファイル を 必要 と する とき に は 、 include_dirs  オプション を 使 い ま す : 
ここ に は 絶対 パス も 指定 でき ま す ;  例えば 、 自分 の 拡張 モジュール が 、 \/ usr  の 下 に X 11 R 6  を インストール し た  Unix  システム だけ で ビルド さ れ る と 知 っ て い れ ば 、 
Extension ( ' foo' ,  [ ' foo. c'] ,include_dirs= ['\/ usr\/include \/X 11 ' ] )  の よう に 書け ま す 。 
自分 の コード を 配布 する 際 に は 、 この よう な 可搬 性 の な い 使 い 方 は 避け る べ き で す :  おそらく 、  C  の コード を 
の よう に 書 い た 方 がまし で しょ う 。  他 の  Python  拡張 モジュール 由来 の ヘッダ を  include  する 必要 が あ る なら 、 Distutils  の  install_header  コマンド が 一貫 し た 方法 で ヘッダ ファイル を インストール する と い う 事実 を 活用 でき ま す 。 
例えば 、  Numerical  Python  の ヘッダ ファイル は 、  ( 標準 的 な  Unix  が インストール さ れ た 環境 で は )  \/ usr\/ local\/include\/python 1 . 5 \/ Numerical  に インストール さ れ ま す 。  ( 実際 の 場所 は 、 プラットフォーム や どの  Python  を インストール し た か で 異な り ま す 。 
)  Python  の include  ディレクトリ - -  今 の 例 で は \/ usr\/ local\/include\/python 1 . 5  - - は 、  Python  拡張 モジュール を ビルド する 際 に 常 に ヘッダ ファイル 検索 パス に 取り込 ま れ る の で 、 C  コード を 書 く 上 で もっとも よ い アプローチ は 、 
と な り ま す 。  Numerical  インク ルード ディレクトリ 自体 を ヘッダ 検索 パス に 置 き た い の なら 、 この ディレクトリ を  Distutils  の 
モジュール を 使 っ て 見つけ させ られ ま す : 
name  は 定義 し た い マクロ の 名前  ( 文字 列 )  で 、 value  は その 値 で す :  value  は 文字 列 か  None  に な り ま す 。 
( マクロ  FOO  を  None  に する と 、 C  ソース コード 内 で  # define  FOO  と 書 い た の と 同じ に な り ま す :  こう 書 く と 、 ほとんど の コンパイラ は  FOO  を 文字 列  1  に 設定 し ま す 。 
は 、 全て の  C  ソース コード ファイル の 先頭 に 、 以下 の マクロ : 
# define  NDEBUG  1 # define  HAVE_ STRFTIME #undef HAVE _ FOO#undef HAVE_ BAR  が あ る の と 同じ に な り ま す 。 
拡張 モジュール を ビルド する 際 に リンク する ライブラリ や 、 ライブラリ を 検索 する ディレクトリ も 指定 でき ま す 。 
非 標準 の パス 上 に あ る ライブラリ を リンク し た い なら 、 その 場所 を library_ dirs  に 入れ て お か な けれ ば な り ま せ ん : 
( 繰り返し に な り ま す が 、 この 手 の 可搬 性 の な い 書 き 方 は 、 コード を 配布 する の が 目的 なら 避け る べ き で す 。 
)  3 . 5  その 他 の 操作 
他 に も いく つ か オプション が あ り 、 特殊 な 状況 を 扱 う ため に 使 い ま す 。 
extra_objects  オプション に は 、 リンカ に 渡 す オブジェクト ファイル の リスト を 指定 し ま す 。 
ファイル 名 に は 拡張 子 を つけ て は な ら ず 、 コンパイラ で 使 わ れ て い る デフォルト の 拡張 子 が 使 わ れ ま す 。 
extra_ compile_args  および  extra_link_args  に は 、 それぞれ コンパイラ と リンカ に 渡 す 追加 の コマンドライン 引数 を 指定 し ま す 。 
export_symbols  は  Windows  で のみ 意味 が あ り ま す 。 
この オプション に は 、 公開  ( export )  する  ( 関数 や 変数 の )  シンボル の リスト を 入れ られ ま す 。 
コンパイル し て 拡張 モジュール を ビルド する 際 に は 、 この オプション は 不要 で す :  Distutils  は 公開 する シンボル を 自動 的 に initmodule  に 渡 す から で す 。 
デスク リプタ は 、 デスク リプタ プロトコル  ( descriptor  protocol )  の メソッド : _ _ get__( ) , __set__( ) ,  および __ delete__( ) を 使 っ て 、 属性 アクセス を オーバライド し て い る もの で す 。 
これ ら の メソッド の いずれ か が オブジェクト に 対 し て 定義 さ れ て い る 場合 、 オブジェクト は デスク リプタ で あ る と い い ま す 。  属性 アクセス の デフォルト の 動作 は 、 オブジェクト の 辞書 から 値 を 取り出 し たり 、 値 を 設定 し たり 、 削除 し たり する と い う もの で す 。 
例えば 、 a . x  に よ る 属性 の 検索 で は 、 まず  a .__dict__ [ ' x ' ]  、 次 に type ( a ) .__dict__ [ ' x ' ]  、 そして type ( a )  の 基底 クラス で メタ クラス で な い もの に 続 く 、 と い っ た 具合 に 連鎖 が 起こ り ま す 。  しかし ながら 、 検索 対象 と な る 値 が 、 デスク リプタ メソッド の いずれ か を 定義 し て い る オブジェクト の 属性 値 で あ る 場合 、 Python  は デフォルト の 動作 を オーバライド し て 、 デスク リプタ メソッド の 方 を 呼び出 し ま す 。 
前後 する 呼び出 し 連鎖 の 中 の どこ で デスク リプタ メソッド が 呼び出 さ れ る か は 、 どの デスク リプタ メソッド が 定義 さ れ て い る か と 、 どう や っ て デスク リプタ メソッド が 呼 ば れ る か に 依存 し ま す 。 
直接 呼出 し  ( Direct  Call ) 
最も 単純 で 、 かつ めった に 使 わ れ な い 呼び出 し 操作 は 、 コード 中 で 直接 デスク リプタ メソッド の 呼び出 し :  x ._ _ get__( a )  を 行 う と い う もの で す 。 
インスタンス 束縛  ( Instance  Binding ) 
新し い 形式 の クラス の インスタンス に 対 する 束縛 で は 、 a . x  は 呼び出 し :type ( a ) .__dict__ [ ' x ' ] ._ _ get__( a ,type ( a) )  に 変換 さ れ ま す 。 
クラス 束縛  ( Class  Binding ) 
新し い 形式 の クラス に 対 する 束縛 で は 、 A . x  は 呼び出 し :  A .__dict__ [ ' x ' ] ._ _ get__( None ,  A ) に 変換 さ れ ま す 。 
スーパ クラス 束縛  ( Super Binding ) 
a  が  super の インスタンス で あ る 場合 、 束縛  super ( B , obj ) . m ( )  を 行 う と まず  A  、 続 い て  B に 対 し て  obj .__class_ .__mro_ _ を 検索 し 、 次 に 呼び出 し :  A .__dict__[ 'm '] ._ _ get__(obj ,  A )  で デスク リプタ を 呼び出 し ま す 。 
インスタンス 束縛 で は 、 デスク リプタ 呼び出し の 優先 順位 は どの デスク リプタ が 定義 さ れ て い る か に 依存 し ま す 。 
データ デスク リプタ で は 、 _ _ get__( )  と __set__( )  を 定義 し ま す 。 
非 データ デスク リプタ に は _ _ get__( )  メソッド しか あ り ま せ ん 。 
インスタンス 辞書 内 で 属性 値 が 再 定義 さ れ て も 、 データ デスク リプタ は 常 に この 値 を オーバライド し ま す 。 
対照 的 に 、 非 データ デスク リプタ の 場合 に は 、 属性 値 は インスタンス 側 で オーバライド さ れ ま す 。  (staticmethod ( )  や  classmethod ( )  を 含 む )  Python  メソッド は 、 非 データ デスク リプタ と し て 実装 さ れ て い ま す 。 
その 結果 、 インスタンス で は メソッド を 再 定義 し たり オーバライド でき ま す 。 
この こと に よ り 、 個々 の インスタンス が 同じ クラス の 他 の インスタンス と 互い に 異な る 動作 を 獲得 する こと が でき ま す 。 
property ( )  関数 は データ デスク リプタ と し て 実装 さ れ て い ま す 。  従 っ て 、 インスタンス は あ る プロパティ の 動作 を オーバライド する こと が でき ま せ ん 。 
` ` デスク リプタ  ( descriptor ) ' ' は 、 ある オブジェクト の いく つ か の 属性 に つ い て 記述 し た オブジェクト で す 。  デスク リプタ オブジェクト は 型 オブジェクト の 辞書 内 に あ り ま す 。 
組み込 み デスク リプタ 型 の 型 オブジェクト で す 。 
バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。  PyObject * 
新た な 参照 . 
デスク リプタ オブジェクト  descr  が データ 属性 の デスク リプタ の 場合 に は 真 を 、 メソッド デスク リプタ の 場合 に は 偽 を 返 し ま す 。 
3 . 3 . 2 . 3  デスク リプタ を 呼び出 す 
3 . 3 . 2 . 2  デスク リプタ  ( descriptor )  の 実装  以下 の メソッド は 、 デスク リプタ メソッド を 持 っ て い る クラス  ( いわゆる  デスク リプタ  ( descriptor )  クラス )  の インスタンス が 別 の 新た な 形式 の クラス 、 いわゆる  オーナ  (owner )  クラス の クラス 辞書 に 存在 する 場合 に のみ 適用 さ れ ま す 。 
以下 の 例 で の  ` ` 属性 ' '  と は 、 属性 の 名前 が オーナ クラス の __dict_ _ に 入 っ て い る プロパティ  ( porperty ) を 検索 する ため の キー に な っ て い る よう な 属性 を 指 し ま す 。 
この メソッド は  ( 計算 さ れ た )  属性 値 を 返 す か 、 AttributeError  例外 を 送出 し な けれ ば な り ま せ ん 。 
オーナ クラス の インスタンス  instance  上 の 属性 を 新た な 値  value に 設定 する 際 に 呼び出 さ れ ま す 。 
オーナ クラス の インスタンス  instance  上 の 属性 を 削除 する 際 に 呼び出 さ れ ま す 。 
ダイアログ ウィンドウ オブジェクト に は 、 Window  オブジェクト の メソッド の 他 に 次 の メソッド が あ り ま す 。 
ID  resid  の  DLOG  リソース から ダイアログ ウィンドウ を 作成 し ま す 。 
ダイアログ オブジェクト は  self . wid  に 保存 さ れ ま す 。 
アイテム 番号  item  が ヒット さ れ た 時 に 呼 ば れ ま す 。 
トグル ボタン など の 再 描画 は 自分 で 処理 し て くださ い 。 
辞書 表現 は 、 新た な 辞書 オブジェクト を 表 し ま す 。 
) 重複 する キー 間 で 衝突 が 起き て も 、 衝突 が 検出 さ れ る こと は あ り ま せ ん ; ある キー に 対 し て 、 最後 に 渡 さ れ た データ  ( プログラム テキスト 上 で は 、 辞書 表記 の 最も 右側 値 と な る もの )  が 使 わ れ ま す 。 
この  PyObject  の サブ タイプ は  Python  の 辞書 オブジェクト を 表現 し ま す 。 
この  PyTypeObject  の インスタンス は  Python  の 辞書 を 表現 し ま す 。 
この オブジェクト は 、 Python  プログラム に は types . DictType  および types . DictionaryType  と し て 公開 さ れ て い ま す 。 
引数 が  PyDictObject  の とき に 真 を 返 し ま す 。 
p  が 辞書 型 オブジェクト で あ り 、 かつ 辞書 型 の サブ クラス の インスタンス で な い 場合 に 真 を 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ある マップ 型 オブジェクト に 対 し て 、 読み出し 専用 に 制限 さ れ た プロキシ オブジェクト  ( proxy  object )  を 返 し ま す 。 
通常 、 この 関数 は 動的 で な い クラス 型  ( non -dynamic  classtype )  の クラス 辞書 を 変更 さ せ な い ため に プロキシ を 作成 する ため に 使 わ れ ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
現在 辞書 に 入 っ て い る 全て の キー と 値 の ペア を 除去 し て 空 に し ま す 。 
辞書  p  に key  が 入 っ て い る か 判定 し ま す 。 
p  の 要素 が  key  に 一致 し た 場合 は  1  を 返 し 、 それ 以外 の 場合 に は  0  を 返 し ま す 。 
エラー の 場合  - 1 を 返 し ま す 。 
この 関数 は  Python  の 式 " 
" と 等価 で す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
p  と 同じ キー と 値 の ペア が 入 っ た 新た な 辞書 を 返 し ま す 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
辞書  p  に 、 key  を キー と し て 値  value  を 挿入 し ま す 。 
key  は ハッシュ 可能 で な けれ ば な り ま せ ん ; ハッシュ 可能 で な い 場合 、  TypeError  を 送出 し ま す 。  成功 し た 場合 に は  0  を 、 失敗 し た 場合 に は  - 1  を 返 し ま す 。 
辞書  p  に 、 key  を キー と し て 値  value  を 挿入 し ま す 。 
key は  char *  型 で な けれ ば な り ま せ ん 。 
キー オブジェクト は PyString _ FromString ( key)  で 生成 さ れ ま す 。 
成功 し た 場合 に は  0  を 、 失敗 し た 場合 に は  - 1  を 返 し ま す 。 
辞書  p  から  key  を キー と する エントリ を 除去 し ま す 。 key  は ハッシュ 可能 で な けれ ば な り ま せ ん ;  ハッシュ 可能 で な い 場合 、  TypeError  を 送出 し ま す 。 
成功 し た 場合 に は  0  を 、 失敗 し た 場合 に は  - 1  を 返 し ま す 。 
辞書  p  から 文字 列  key  を キー と する エントリ を 除去 し ま す 。 
成功 し た 場合 に は  0  を 、 失敗 し た 場合 に は  - 1  を 返 し ま す 。 
辞書 p  内 で  key  を キー と する オブジェクト を 返 し ま す 。 
キー  key  が 存在 し な い 場合 に は  NULL  を 返 し ま す が 、 例外 を セット  し ま せ ん 。 
PyDict _ GetItem ( )  と 同じ で す が 、 key は  PyObject * で は な く  char *  で 指定 し ま す 。 
辞書 オブジェクト の メソッド  item ( )  の よう に 、 辞書 内 の 全て の 要素 対 が 入 っ た  PyListObject  を 返 し ま す 。  (items ( )  に つ い て は 
を 参照 し て くださ い 。  ) 
辞書 オブジェクト の メソッド  keys ( )  の よう に 、 辞書 内 の 全て の キー が 入 っ た  PyListObject  を 返 し ま す 。  ( keys ( )  に つ い て は 
辞書 オブジェクト の メソッド  values ( )  の よう に 、 辞書 内 の 全て の 値 が 入 っ た  PyListObject  を 返 し ま す 。  ( values ( )  に つ い て は 
辞書 内 の 要素 の 数 を 返 し ま す 。 
辞書 に 対 し て  " len ( p ) "  を 実行 する の と 同じ で す 。 
辞書  p  内 の 全て の キー \/ 値 の ペア に わた る 反復 処理 を 行 い ま す 。 
ppos  が 参照 し て い る  int  型 は 、 この 関数 で 反復 処理 を 開始 する 際 に 、 最初 に 関数 を 呼び出 す より も 前 に  0  に 初期 化 し て お か な けれ ば な り ま せ ん ;  この 関数 は 辞書 内 の 各 ペア を 取り上げ る ごと に 真 を 返 し 、 全て の ペア を 取り上げ た こと が 分か る と 偽 を 返 し ま す 。 
パラメタ  pkey  および  pvalue  に は 、 それぞれ 辞書 の 各々 の キー と 値 を 指 す ポインタ か 、 また は  NULL が 入 り ま す 。 
この 関数 から 返 さ れ る 参照 は すべて 借り た 参照 に な り ま す 。  反復 処理 中 に  ppos  を 変更 し て は な り ま せ ん 。 
この 値 は 内部 的 な 辞書 構造 体 の オフセット を 表現 し て お り 、 構造 体 は スパース な の で 、 オフセット の 値 に 一貫 性 が な い ため で す 。 
以下 に 例 を 示 し ま す : 
PyObject *key, * value ; int pos =  0 ; while  ( PyDict _ Next ( self - dict ,  pos, key ,  value ) ) {\/* 取り出 し た 値 で 何 ら か の 処理 を 行 う . . .  *\/.. . } 
反復 処理 中 に 辞書  p  を 変更 し て は な り ま せ ん 。 
( Python  2 . 1  から は )  辞書 を 反復 処理 する 際 に 、 キー に 対応 する 値 を 変更 し て も 大丈夫 に な り ま し た が 、 キー の 集合 を 変更 し な い こと が 前提 で す 。 
PyObject * a ,  PyObject* b ,int  override )  マップ 型 オブジェクト  b  の 全て の 要素 に わた っ て 、 反復 的 に キー \/ 値 の ペア を 辞書  a  に 追加 し ま す 。 
C  で 表 せ ば  PyDict _ Merge ( a ,  b ,  1 )  と 同じ 、 Python  で 表 せ ば 
seq 2  内 の キー \/ 値 ペア を 使 っ て 、 辞書 a  の 内容 を 更新 し たり 統合 し たり し ま す 。  seq 2  は 、 キー \/ 値 の ペア と みな せ る 長 さ  2  の 反復 可能 オブジェクト ( iterable object )  を 生成 する 反復 可能 オブジェクト で な けれ ば な り ま せ ん 。 
この 例 で は 2 つ の テキスト を 比較 し ま す 。 
初め に 、 改行 文字 で 終了 する 独立 し た 1 行 の 連続 し た ( ファイル 形式 オブジェクト の readlines ( ) メソッド に よ っ て 得 られ る よう な ) テキスト を 用意 し ま す 。 
注意 : Differ オブジェクト を インスタンス 化 する とき 、 ``junk . ' ' で あ る 列 と 文字 を フィルタリング す 関数 を 渡 す こと が でき ま す 。 
詳細 は Differ ( ) コンストラクタ を 参照 し て くださ い 。 
最後 に 、 2 つ を 比較 し ま す 。 
Differ オブジェクト に よ っ て 抽出 さ れ た 差分 は 、 最小 単位 の 差分 を 見 て も 問題 な く 抽出 さ れ ま す 。 
隣接 する マッチ 列 の 同期 する ポイント を 制限 する こと で 、 より 長 い 差異 を 算出 する 再帰 的 な コスト で の 、 局所 性 の 概念 を 制限 し ま す 。  Differ は 、 以下 の よう な コンストラクタ を 持 ち ま す 。 
クラス Differ
オプション の パラメータ linejunk と charjunk は filter 関数 の ため に 指定 し ま す ( もしくは None を 指定 ) 。 
linejunk : ひと つ の 文字 列 引数 を 受け取れ る べ き 関数 で す 。  文字 列 が junk の とき に true を 返 し ま す 。 
デフォルト で は 、 None で あ り 、 どんな 行 で あ っ て も junk と は 見な さ れ ま せ ん 。 
charjunk:  この 関数 は ( 長 さ 1 の ) 文字 列 を 引数 と し て 受け取 り 、 文字 列 が junk で あ る とき に true を 返 し ま す 。  デフォルト は None で あ り 、 どんな 文字 列 も junk と は 見な さ れ ま せ ん 。 
Differ オブジェクト は 、 以下 の ひと つ の メソッド に よ っ て 使 わ れ ま す ( 違い を 生成 し ま す ) 。 
文字 列 から な る 2 つ の シーケンス を 比較 し 、 差異 ( を 表 す 文字 列 から な る シーケンス ) を 生成 し ま す 。  Each sequence  must  containindividual  single - line  stringsendingwith  newlines .  Such sequences can  be obtained  from  thereadlines ( )  method  of file - like objects .  The delta generatedalso consists of  newline - terminatedstrings ,  ready to  be printed as - isvia the  writelines ( )  method  of  a file - like object . それぞれ の シーケンス は 、 改行 文字 に よ っ て 終了 する 、 独立 し た ひと 連なり の 文字 列 で な けれ ば な り ま せ ん 。 
その よう な シーケンス は 、 ファイル 形式 オブジェクト の readline ( ) メソッド に よ っ て 得 る こと が でき ま す 。 
( 得 られ る ) 差異 は 改行 文字 で 終了 する 文字 列 と し て 得 られ 、 ファイル 形式 オブジェクト の writeline ( ) メソッド に よ っ て 出力 でき る 形 に な っ て い ま す 。 
dircmp  の インスタンス は 以下 の コンストラクタ で 生成 さ れ ま す : 
クラス dircmp 
dircmp  クラス は 以下 の メソッド を 提供 し て い ま す : 
a  および  b  の 間 の 比較 結果 を  ( sys . st dout  に )  出力 し ま す 。 
a  および  b  および それ ら の 直下 に あ る 共通 の サブ ディレクトリ 間 で の 比較 結果 を 出力 し ま す 。 
a  および  b  および それ ら の 共通 の サブ ディレクトリ 間 で の 比較 結果 を  ( 再帰 的 に 比較 し て )  出力 し ま す 。 
dircmp  は 、 比較 し て い る ディレクトリ ツリー に 関 する 様々 な 種類 の 情報 を 取得 する ため に 使え る よう な 、 多く の 興味 深 い 属性 を 提供 し て い ま す 。 _ _ getattr_ _( )  フック を 経由 する と 、 全て の 属性 を のろのろ と 計算 する ため 、 速度 上 の ペナルティ を 受け な い の は 計算 処理 の 軽 い 属性 を 使 っ た とき だけ な の で 注意 し て くださ い 。 
a  に あ る ファイル および サブ ディレクトリ で す 。  hide  および  ignore  で フィルタ さ れ て い ま す 。 
b  に あ る ファイル および サブ ディレクトリ で す 。  hide  および  ignore  で フィルタ さ れ て い ま す 。 
a  および  b  の 両方 に あ る ファイル および サブ ディレクトリ で す 。 
a  だけ に あ る ファイル および サブ ディレクトリ で す 。 
b  だけ に あ る ファイル および サブ ディレクトリ で す 。 
a  および  b  の 両方 に あ る サブ ディレクトリ で す 。 
a  および  b  の 両方 に あ る ファイル で す 。 
a  および  b  の 両方 に あ り 、 ディレクトリ 間 で タイプ が 異な る か 、 os . stat ( )  が エラー を 報告 する よう な 名前 で す 。 
a  および  b  両方 に あ り 、 一致 する ファイル で す 。 
a  および  b  両方 に あ る が 、 一致 し な い ファイル で す 。 
a  および  b  両方 に あ る が 、 比較 さ れ な かっ た ファイル で す 。 
common_dirs  の ファイル 名 を  dircmp  オブジェクト に 対応 付け た 辞書 で す 。 
2  ディレクトリ 構造  標準  Python  ドキュメント の ソース 配布 物 に は 、 数多く の ディレクトリ が 入 っ て い ま す 。 
サード パーティ 製 の ドキュメント は 、 この ディレクトリ 構造 下 や 似 た ディレクトリ 構造 下 に お く 必要 は あ り ま せ ん が 、 Python  ドキュメント 作成 ツール を 利用 し て 新た な ドキュメント を 開発 する 際 に 、 どこ で 例題 や ツール を 探 せ ば よ い か 知 っ て お け ば 便利 で しょ う 。 
ファイル は README  や  Makefile  を 含め 、 ほとんど が その 名 の 通り の ファイル で す 。 
ディレクトリ は 以下 の 三 つ の カテゴリ に 分かれ ま す : 
ドキュメント ソース 
各 ドキュメント の  LaTeX  ソース は 、 それぞれ 別々 の ディレクトリ に 配置 さ れ て い ま す 。 
ディレクトリ に は 、 各々 の ドキュメント を 漠然 と 説明 する 短 い 名前 が つ い て い ま す : 
ディレクトリ 
タイトル 
Macintosh  モジュール リファレンス 
Python  の 更新 情報 
出力 形式 ごと の 出力 ディレクトリ 
ほとんど の 出力 形式 に 対 し て 、 出力 結果 の ドキュメント を 格納 する ディレクトリ が あ り 、 その 出力 形式 で の ドキュメント 生成 を 制御 する Makefile  が 入 っ て い ま す 。 
この カテゴリ の 例外 と な る の は  Portable  Document  Format  ( PDF )  および Post Script  版 で 、 これ ら は  paper - a 4 \/  および  paper - letter \/ に 出力 さ れ ま す  ( こう する こと で 、 LaTeX  が 生成 する 全て の 一時 ファイル が 用紙 サイズ ごと に 同じ 場所 に 置 か れ 、 目立 た な く な り ま す ) 。 
出力 形式 
HTML  形式 
GNU info  形式 
i Silo ドキュメント  ( Palm  OS  機器 用 ) 
paper - letter \/ PDF  と  Post Script 、 US - Letter  サイズ 
補助 ファイル 群 
その 他 の ディレクトリ は 、 様々 な 処理 で 用い られ る 補助 ファイル を 格納 する ため の もの で す 。 
補助 ファイル は 、 各 ドキュメント で 共通 の  LaTeX  ドキュメント クラス 、 LaTeX2 HTML  の サポート ファイル 、 ドキュメント の 構成 要素 と な る 雛形 ファイル 、 フォーマット 処理 の 様々 な ステップ を 実行 する スクリプト など で す 。 
内容 
ドキュメント 間 で 共通 の 文章 
LaTeX2 HTML  処理 の サポート 
ソース ドキュメント の 例 
LaTeX スタイル ファイル 
独自 の 処理 用 スクリプト 
Doc- SIG  に は メーリング リスト の アーカイブ や 購読 情報 が あ り 、 http:\/\/www .python . org \/ sigs\/ doc- sig \/  で 利用 でき ま す 。  SIG  は ドキュメンテーション に 関心 を 持 つ 全て の 人々 に 解放 さ れ て い ま す 。 
標準 ドキュメント に 対 する コメント や バグ 報告 は docs@python . org  に 送 っ て くださ い 。 
これ に は フォーマット 、 内容 、 文法 的 間違い や つづり 間違い 、 そして この ドキュメント 自体 に 対 する コメント も 含 み ま す 。 
この ドキュメント に 対 する コメント は 作者 で あ る fdrake@acm . org  に 直接 送 っ て いただ い て も かま い ま せ ん 。  注意 : 和訳 に 対 する コメント や バグ 報告 は 、 SourceForge. jp の プロジェクト ページ に お 寄せ くださ い 。 
A .  日本 語 訳 に つ い て  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
3 .  distutils  に よ る  C 
3 .  distutils  に よ る  C 
4 .  Windows  上 で の  C 
3 . 1  拡張 モジュール の 配布 
拡張 モジュール を うま く ビルド でき た ら 、 三 通り の 使 い 方 が あ り ま す 。  エンド ユーザ は 普通 モジュール を インストール し よう と 考え ま す ; これ に は 
を 実行 し ま す 。  モジュール メンテナ は ソース パッケージ を 作成 し ま す ;  これ に は 
プラットフォーム に 応 じ て 、 以下 の コマンド の いずれ か を 使 い ま す 。 
リリース  2 . 4  , 平成 18 年 6 月 27 日  更新  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
4  Distutils  固有 の 用語 以下 は  Distutils  を 使 っ て  Python  モジュール を 配布 する 際 に 使 わ れ る 特有 の 用語 で す : 
モジュール 配布 物  ( module  distribution ) 
一 個 の ファイル と し て ダウンロード 可能 な リソース の 形 を と り 、 一括 し て  インストール さ れ る こと に な っ て い る 形態 で 配 ら れ る  Python  モジュール の コレクション で す 。 
よく 知 ら れ た モジュール 配布 物 に は 、 Numeric  Python 、 PyXML 、  PIL  ( the Python  Imaging  Library ) 、  mxBase  など が あ り ま す 。 
( パッケージ  ( package )  と 呼 ば れ る こと も あ り ま す が 、  Python  用語 と し て の パッケージ と は 意味 が 違 い ま す :  一 つ の モジュール 配布 物 の 中 に は 、 場合 に よ り ゼロ 個 、 一 つ 、 それ 以上 の  Python  パッケージ が 入 っ て い ま す 。 ) 
pure  モジュール 配布 物  ( pure module  distribution ) 
pure Python  モジュール や パッケージ だけ が 入 っ た モジュール 配布 物 で す 。 
` `pure  配布 物  ( pure distribution ) ' ' とも 呼 ば れ ま す 。 
非  pure  モジュール 配布 物  ( non - pure module  distribution ) 
少な く とも 一 つ の 拡張 モジュール が 入 っ た モジュール 配布 物 で す 。 
` ` 非  pure  配布 物 ' ' と も 呼 び ま す 。 
配布 物 ルート ディレクトリ  ( distribution  root ) 
ソース コード ツリー ( また は ソース 配布 物 )  ディレクトリ の 最上 階層 で 、  setup . py  の あ る 場所 で す 。 
一般 的 に は 、  setup . py  は この ディレクトリ 上 で 実行 し ま す 。 
open ( ) に よ っ て 返さ れ た Dl オブジェクト は 次 の メソッド を 持 っ て い ま す : 
メモリー を 除 く 全て の リソース を 解放 し ま す 。 
name と い う 名前 の 関数 が 参照 さ れ た 共有 オブジェクト に 存在 する 場合 、 その ポインター ( 整数 値 ) を 返 し ま す 。 
存在 し な い 場合 None を 返 し ま す 。 
これ は 次 の よう に 使え ま す :  if  a . sym ('time') :. . .  a . call ('time') . . .  else : . . .  time. time( ) 
( 0 は NULL ポインター で あ る の で 、 この 関数 は 0 で な い 数 を 返 す だ ろ う と い う こと に 注意 し て くださ い ) 
参照 さ れ た 共有 オブジェクト の name と い う 名前 の 関数 を 呼出 し ま す 。  引数 は 、 Python 整数 ( その まま 渡 さ れ る ) 、 Python 文字 列 ( ポインター が 渡 さ れ る ) 、 None  ( NULL と し て 渡 さ れ る )  の どれ か で な けれ ば いけ ま せ ん 。 
Python は その 文字 列 が 変化 さ せ られ る の を 好 ま な い の で 、 文字 列 は const  char * と し て 関数 に 渡 さ れ る べ き で あ る こと に 注意 し て くださ い 。  最大 で 10 個 の 引数 が 渡 す こと が でき 、 与え られ な い 引数 は None と し て 扱 わ れ ま す 。 
関数 の 返り 値 は C  long ( Python 整数 で あ る ) で す 。 
2 . 1 . 1  基本 の サンプル に データ と メソッド を 追加 する 
Python  ラン タイム で は 、 すべて の  Python  オブジェクト は PyObject *  型 の 変数 と し て 扱 い ま す 。 
PyObject  は さほど 大仰 な オブジェクト で は な く 、 単に オブジェクト に 対 する 参照 回数 と 、 その オブジェクト の 「 タイプ オブジェクト (type object ) 」 へ の ポインタ を 格納 し て い る だけ で す 。 
重要 な 役割 を 果た し て い る の は この タイプ オブジェクト で す 。 
この 手 の こと は 例 を 見 た ほう が 早 い で しょ う から 、 ここ に 最小 限 の 、 しかし 完全 な 、 新し い 型 を 定義 する モジュール を あげ て お き ま す : 
さしあた っ て 覚え て お く こと は 以上 で す が 、 これ で 前 の 章 から すこし は 説明 が わか り やす く な っ て い る こと と 思 い ま す 。  最初 に 習 う の は 、 つぎ の よう な もの で す : 
これ が  Noddy  オブジェクト の 内容 で す  --  この ケース で は 、 ほか の  Python  オブジェクト が 持 っ て い る もの と 何 ら 変わり は あ り ま せ ん 。  つまり 参照 カウント と 型 オブジェクト へ の ポインタ で す ね 。 
これ ら は  PyObject_ HEAD  マクロ に よ っ て 展開 さ れ る メンバ で す 。 
マクロ を 使 う 理由 は 、 レイアウト を 標準 化 する ため と 、 デバッグ 用 ビルド 時 に 特別 な デバッグ 用 の メンバ を 定義 でき る よう に する ため で す 。 
この  PyObject_ HEAD  マクロ の 後 に は セミコロン が な い こと に 注意 し て くださ い 。  セミコロン は すでに マクロ 内 に 含 ま れ て い ま す 。 
うっかり 後 に セミコロン を つけ て しま わ な い よう に 気 を つけ て 。 
これ は お 使い の 機種 で は 何 の 問題 も 起こ ら な い か も しれ ま せ ん が 、 機種 に よ っ て は 、 おそらく 問題 に な る の で す !  ( Windows  上 で は 、 MS  Visual  C  が この 手 の エラー を 出 し 、 コンパイル でき な い こと が 知 ら れ て い ま す ) 比較 の ため 、 以下 に 標準 的 な  Python  の 整数 型 の 定義 を 見 て み ま しょ う : 
typedef struct  { PyObject_ HEADlong  ob _ival ;} PyIntObject ;  で は 次 に い っ て み ま す 。 
かなめ の 部分 、 タイプ オブジェクト で す 。 
object . h  の 中 に あ る  PyTypeObject  の 定義 を 見 る と 、 実際 に は ここ に 挙げ た 以上 の 数 の メンバ が あ る と わか る で しょ う 。 
これ 以外 の メンバ は  C  コンパイラ に よ っ て ゼロ に 初期 化 さ れ る の で 、 必要 な 時 を 除 い て ふつう は それ ら の 値 を 明示 的 に は 指定 せ ず に お き ま す 。  次 の もの は 非常 に 重要 な の で 、 とくに 最初 の 最初 に 見 て お き ま しょ う : 
これ は ちょっと ぶっきらぼう で す ね 。  実際 に 書 き た かっ た の は こう で す : 
この 場合 、 タイプ オブジェクト の 型 は 「 type 」 と い う 名前 に な り ま す が 、 これ は 厳密 に は  C  の 基準 に 従 っ て お ら ず 、 コンパイラ に よ っ て は 文句 を 言 わ れ ま す 。 
幸い に も 、 この メンバ は  PyType_ Ready ( )  が 埋め て くれ ま す 。 
ヘッダ 中 の  ob _size  メンバ は 使 わ れ て い ま せ ん 。  これ は 歴史 的 な 遺物 で あ り 、 構造 体 中 に これ が 存在 し て い る の は 古 い バージョン の  Python  用 に コンパイル さ れ た 拡張 モジュール と の バイナリ 上 の 互換 性 を 保 つ ため で す 。 
ここ に は つね に ゼロ を 指定 し て くださ い 。 
これ は 型 の 名前 で す 。 
この 名前 は オブジェクト の デフォルト の 表現 形式 と 、 いく つ か の エラー メッセージ 中 で 使 わ れ ま す 。 
たとえば : " "  +  noddy . new_ noddy ( ) Traceback  ( most  recent  call last ) : File  " stdin " ,  line  1 , in ? TypeError :  cannot  addtype " noddy . Noddy "  to  string 
注意 :  この 名前 は ドット で 区切 ら れ た 名前 で 、 モジュール 名 と 、 その モジュール 内 で の 型名 を 両方 ふ く ん で い ま す 。 
この 場合 の モジュール は  noddy  で 、 型 の 名前 は Noddy  で す から 、 ここ で の 型名 と し て は  noddy . Noddy  を 指定 する わけ で す 。 
これ に よ っ て  Python  は  PyObject _ New ( )  が 呼 ば れ た とき に どれ くらい の 量 の メモリ を 割り当て れ ば よ い の か 知 る こと が でき ま す 。 
注意 : あなた の タイプ を  Python  で サブ クラス 化 可能 に し た い 場合 、 その タイプ が 基底 タイプ と 同じ  tp_ basicsize  を も っ て い る と 多重 継承 の とき に 問題 が 生じ る こと が あ り ま す 。 
その タイプ を  Python  の サブ クラス に し た とき 、 その __bases__ リスト に は あなた の タイプ が 最初 に くる よう に し な けれ ば な り ま せ ん 。  さも な い と エラー の 発生 なし に あなた の タイプ の _ _new_ _ メソッド を 呼び出 す こと は でき な く な り ま す 。 
この 問題 を 回避 する に は 、 つね に あなた の タイプ の  tp_ basicsize  を その 基底 タイプ より も 大き く し て お く こと で す 。 
ほとんど の 場合 、 あなた の タイプ は  object  か 、 そう で な けれ ば 基底 タイプ に データ 用 の メンバ を 追加 し た もの で しょ う から 、 したが っ て 大き さ は つね に 増加 する ため この 条件 は 満た さ れ て い ま す 。 
これ は リスト や 文字 列 など の 可変 長 オブジェクト の ため の もの で す 。 
すべて の 型 は フラグ に この 定数 を 含め て お く 必要 が あ り ま す 。 
これ は 現在 の バージョン の  Python  で 定義 さ れ て い る すべて の メンバ を 許可 し ま す 。  この 型 の  docstring  は tp_doc  に 入れ ま す 。 
ここ から タイプ メソッド に 入 る わけ で す が 。  ここ が あなた の オブジェクト が 他 と 違 う ところ で す 。 
オブジェクト の 作成 を 許可 する に は 、 tp_new  の 実装 を 提供 する 必要 が あ り ま す 。 
今回 は 、 API  関数 に よ っ て 提供 さ れ る デフォルト の 実装  PyType_GenericNew ( )  を 使 う だけ に し ま しょ う 。 
これ を 単に  tp_new  スロット に 代入 すれ ば よ い の で す が 、 これ は 互換 上 の 理由 から でき ま せ ん 。  プラットフォーム や コンパイラ に よ っ て は 、 構造 体 メンバ の 初期 化 に 別 の 場所 で 定義 さ れ て い る  C  の 関数 を 代入 する こと は でき な い の で す 。 
この 関数 は 、 上 で  NULL に 指定 し て い た  ob_type  など の いく つ も の メンバ を 埋め て 、 Noddy  型 を 初期 化 し ま す 。 
これ は この 型 を モジュール 中 の 辞書 に 埋め込 み ま す 。 
これ で 、 Noddy  クラス を 呼 べ ば  Noddy  インスタンス を 作れ る よう に な り ま し た : 
これ だけ で す !  残 る は これ を どう や っ て ビルド する か と い う こと で す 。 
上 の コード を  noddy . c  と い う ファイル に 入れ て 、 以下 の もの を  setup . py  と い う ファイル に 入れ ま しょ う 。 
そして 、 シェル から 以下 の よう に 入力 し ま す 。 
何 も データ を 持 っ て な い し 、 何 も し て は くれ ま せ ん 。 
継承 し て サブ クラス を 作 る こと さえ でき な い の で す 。 
2 . 1 . 3  循環 ガベージ コレクション を サポート する 
たくさん の メソッド が あ り ま す ね 。 
型 を 初期 化 する さい に 、 これ ら の メンバ を 正し い 順序 で 並べ る よう 、 くれぐれ も 注意 し て くださ い 。 
ふつう いちばん 簡単 な の は 、 必要 な メンバ が すべて 含 ま れ て い る ( たとえ それ ら が  0  に 初期 化 さ れ て い て も )  例 を と っ て き て 、 自分 の 型 に 合わせ る よう 変更 を くわえ る こと で す 。  char*tp_name;\/* 表示 用 * \/
これ は 型 の 名前 で す 。 
前節 で 説明 し た よう に 、 これ は いろいろ な 場面 で 現れ 、 ほとんど は 診断 用 の 目的 で 使 わ れ る もの で す 。  な の で 、 その よう な 場面 で 役 に 立 つ で あ ろ う 名前 を 選 ん で くださ い 。 
inttp_ basicsize , tp_itemsize;\/* 割り当て 用 * \/
これ ら の メンバ は 、 この 型 の オブジェクト が 作成 さ れ る とき に どれ だけ の メモリ を 割り当て れ ば よ い の か を ラン タイム に 指示 し ま す 。 
Python  に は 可変 長 の 構造 体 ( 文字 列 や リスト など を 想像 し て くださ い )  に 対 する 組み込み の サポート が ある 程度 あ り 、 ここ で  tp_itemsize  メンバ が 使 わ れ ま す 。 
これ ら に つ い て は あと で ふれ ま す 。 
DocXMLR PCServer  は SimpleXMLR PCServer . SimpleXMLR PCServer  の 派生 クラス で 、 セルフ -  ドキュメンティング の 手段 と  XML - RPC  サーバ 機能 を 提供 し ま す 。 
HTTP  POST  リクエスト は  XML - RPC  メソッド の 呼び出し と し て 扱 わ れ ま す 。 
HTTP  GET  リクエスト は  pydoc  スタイル の  HTML  ドキュメント 生成 の リクエスト と し て 扱 わ れ ま す 。 
これ は サーバ が 自分 自身 の ドキュメント を  Web  ベース で 提供 可能 で あ る こと を 意味 し ま す 。 
生成 する  HTML  ドキュメント の タイトル を セット し ま す 。 
この タイトル は HTML  の title  要素 と し て 使 わ れ ま す 。 
生成 する  HTML  ドキュメント の 名前 を セット し ま す 。 
この 名前 は HTML  冒頭 の  h 1  要素 に 使 わ れ ま す 。  set_server_ documentation 
生成 する  HTML  ドキュメント の 本文 を セット し ま す 。 
この 本文 は ドキュメント 中 の 名前 の 下 に パラグラフ と し て 出力 さ れ ま す 。 
5 . 2 . 9 . 1  DocTest  オブジェクト 
5 . 2 . 9 . 2  Example  オブジェクト 
クラス DocTest 
単一 の 名前 空間 内 で 実行 さ れ る  doctest  例題 の 集まり で す 。 
コンストラクタ の 引数 は  DocTest  インスタンス 中 の 同名 の メンバ 変数 の 初期 化 に 使 わ れ ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
DocTest  で は 、 以下 の メンバ 変数 を 定義 し て い ま す 。 
これ ら の 変数 は コンストラクタ で 初期 化 さ れ ま す 。  直接 変更 し て は な り ま せ ん 。 
対話 モード に おけ る 例題 それぞれ を エンコード し て い て 、 テスト で 実行 さ れ る 、 Example  オブジェクト から な る リスト で す 。 
例題 を 実行 する 名前 空間  ( いわゆる グローバル 変数 )  で す 。  この メンバ は 、 名前 から 値 へ の 対応 付け を 行 っ て い る 辞書 で す 。 
例題 が 名前 空間 に 対 し て  ( 新た な 変数 を バインド する など ) 何 ら か の 変更 を 行 っ た 場合 、 globs  へ の 反映 は テスト の 実行 後 に 起こ り ま す 。 
DocTest  を 識別 する 名前 の 文字 列 で す 。 
通常 、 この 値 は テスト を 取り出 し た オブジェクト か ファイル の 名前 に な り ま す 。 
DocTest  を 取り出 し た ファイル の 名前 で す ; ファイル 名 が 未知 の 場合 や  DocTest  を ファイル から 取り出 し た の で な い 場合 に は None  に な り ま す 。 
filename  中 で DocTest  の テスト 例題 が 始ま っ て い る 行 の 行 番号 で す 。 
行 番号 は 、 ファイル の 先頭 を ゼロ と し て 数え ま す 。 
テスト を 取り出 し た  docstring  自体 を 現 す 文字 列 で す 。  docstring  文字 列 を 得 られ な い 場合 や 、 文字 列 から テスト 例題 を 取り出 し た の で な い 場合 に は  None  に な り ま す 。 
5 . 2 . 9 . 3  DocTestFin der  オブジェクト 
5 . 2 . 9 . 4  DocTest Parser  オブジェクト 
クラス DocTestFin der
与え られ た オブジェクト に つ い て 、 その  docstring  か 、 その オブジェクト に 入 っ て い る オブジェクト の  docstring  から DocTest  を 抽出 する 処理 クラス で す 。 
現在 の ところ 、 モジュール 、 関数 、 クラス 、 メソッド 、 静的 メソッド 、 クラス メソッド 、 プロパティ から DocTest  を 抽出 でき ま す 。  オプション 引数  verbose  を 使 う と 、 抽出 処理 の 対象 と な る オブジェクト を 表示 でき ま す 。 
DocTestFin der  で は 以下 の メソッド を 定義 し て い ま す : 
name  を 指定 し な い 場合 、 
obj .__name__ を 使 い ま す 。  オプション の パラメタ  module  は 、 指定 し た オブジェクト を 収め て い る モジュール を 指定 し ま す 。 
module  を 指定 し な い か 、 None  を 指定 し た 場合 に は 、 正し い モジュール を 自動 的 に 決定 し よう と 試み ま す 。 
オブジェクト の モジュール は 以下 の よう な 役割 を 果た し ま す : 
globs  を 指定 し て い な い 場合 、 オブジェクト の モジュール は デフォルト の 名前 空間 に な り ま す 。 
他 の モジュール から import  さ れ た オブジェクト に 対 し て DocTestFin der  が DocTest  を 抽出 する の を 避け る ため に 使 い ま す  ( module  由来 で な い オブジェクト を 無視 し ま す ) 。 
オブジェクト の 入 っ て い る ファイル 名 を 調べ る ため に 使 い ま す 。 
オブジェクト が ファイル 内 の 何 行 目 に あ る か を 調べ る 手助け に し ま す 。 
module  が  False  の 場合 に は 、 モジュール の 検索 を 試み ま せ ん 。 
各々 の  DocTest  に 対 し て 、 グローバル 変数 を 表 す 辞書 の 新た な 浅 い コピー を 生成 し ま す 。 
globs  を 指定 し な い 場合 に 使 わ れ る の デフォルト 値 は 、 モジュール を 指定 し て い れ ば その モジュール の __dict_ _ に な り 、 指定 し て い な けれ ば { } に な り ま す 。 
extraglobs  を 指定 し な い 場合 、 デフォルト の 値 は { } に な り ま す 。 
5 . 2 . 9 . 5  DocTestRunner  オブジェクト 
クラス DocTest Parser 
対話 モード の 例題 を 文字 列 から 抽出 し 、 それ を 使 っ て DocTest  オブジェクト を 生成 する ため に 使 わ れ る 処理 クラス で す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
DocTest Parser  で は 以下 の メソッド を 定義 し て い ま す : 
指定 し た 文字 列 から 全て の  doctest  例題 を 抽出 し 、 DocTest オブジェクト 内 に 集め ま す 。 
globs ,  name , filename ,  および  lineno  は 新た に 作成 さ れ る  DocTest  オブジェクト の 属性 に な り ま す 。 
詳し く は DocTest  の ドキュメント を 参照 し て くださ い 。 
指定 し た 文字 列 から 全て の  doctest  例題 を 抽出 し 、 Example  オブジェクト から な る リスト に し て 返 し ま す 。 
各 Example  の 行 番号 は ゼロ から 数え ま す 。 
オプション 引数 name  は この 文字 列 に つけ る 名前 で 、 エラー メッセージ に しか 使 わ れ ま せ ん 。 
指定 し た 文字 列 を 、 例題 と その 間 の テキスト に 分割 し 、 例題 を Example  オブジェクト に 変換 し 、 Example  と 文字 列 から な る リスト に し て 返 し ま す 。  各 Example  の 行 番号 は ゼロ から 数え ま す 。 
オプション 引数 name  は この 文字 列 に つけ る 名前 で 、 エラー メッセージ に しか 使 わ れ ま せ ん 。 
5 . 2 . 9 . 6  OutputChecker  オブジェクト 
クラス DocTestRunner 
DocTest  内 の 対話 モード 例題 を 実行 し 、 検証 する 際 に 用い られ る 処理 クラス で す 。  予想 出力 と 実際 の 出力 と の 比較 は  OutputChecker  で 行 い ま す 。 
比較 は 様々 な オプション フラグ を 使 っ て カスタマイズ でき ま す ; 詳し く は 5 . 2 . 6  を 参照 し て くださ い 。 
デフォルト は sys . st dout . write  で す 。 
verbose  が True の 場合 、 各 例題 を 実行 する つど 、 その 例題 に つ い て の 情報 を 出力 し ま す 。 
verbose  が False  の 場合 、 テスト の 失敗 だけ を 出力 し ま す 。 
verbose  を 指定 し な い 場合 や None  を 指定 し た 場合 、 コマンド ライン スイッチ  - v  を 使 っ た 場合 に のみ verbose  出力 を 適用 し ま す 。  オプション の キー ワード 引数 optionflags  を 使 う と 、 テスト ランナ が 予想 出力 と 実際 の 出力 を 比較 する 方法 や 、 テスト の 失敗 を 表示 する 方法 を 制御 でき ま す 。 
詳し く は 5 . 2 . 6  節 を 参照 し て くださ い 。 
DocTestRunner  で は 、 以下 の メソッド を 定義 し て い ま す : 
test  は  example  の 入 っ て い る テスト で す 。 
out  は 出力 用 の 関数 で 、 DocTestRunner . run ( )  に 渡 さ れ ま す 。  report_success
与え られ た 例題 が 正し く 動作 し た こと を 報告 し ま す 。 
この メソッド は  DocTestRunner  の サブ クラス で 出力 を カスタマイズ でき る よう に する ため に 提供 さ れ て い ま す ; 直接 呼び出 し て は な り ま せ ん 。 
与え られ た 例題 が 正し く 動作 し な かっ た こと を 報告 し ま す 。 
この メソッド は  DocTestRunner  の サブ クラス で 出力 を カスタマイズ でき る よう に する ため に 提供 さ れ て い ま す ; 直接 呼び出 し て は な り ま せ ん 。 
与え られ た 例題 が 予想 と は 違 う 例外 を 送出 し た こと を 報告 し ま す 。  この メソッド は  DocTestRunner  の サブ クラス で 出力 を カスタマイズ でき る よう に する ため に 提供 さ れ て い ま す ; 直接 呼び出 し て は な り ま せ ん 。 
test  内 の 例題  ( DocTest  オブジェクト )  を 実行 し 、 その 結果 を 出力 用 の 関数 out  を 使 っ て 表示 し ま す 。 
compileflags  に は 、 例題 を 実行 する 際 に  Python  コンパイラ に 適用 する フラグ セット を 指定 し ま す 。 
compileflags  を 指定 し な い 場合 、 デフォルト 値 は globs  で 適用 さ れ て い る  future -import  フラグ セット に な り ま す 。  各 例題 の 出力 は  DocTestRunner  の 出力 チェッカ で 検査 さ れ 、 その 結果 は  DocTestRunner . report_*.  メソッド で 書式 化 さ れ ま す 。 
この  DocTestRunner  が 実行 し た 全て の テスト ケース の サマリ を 出力 し 、 タプル " ( failure_count ,  test _count ) "  を 返 し ま す 。  オプション の verbose  引数 を 使 う と 、 どの くらい サマリ を 詳し く する か を 制御 でき ま す 。 
冗長 度 を 指定 し な い 場合 、 DocTestRunner 自体 の 冗長 度 を 使 い ま す 。 
クラス Example
ひと つ の  Python  文 と 、 それ に 対 する 予想 出力 から な る 、 単一 の 対話 的 モード の 例題 で す 。 
コンストラクタ の 引数 は  Example  インスタンス 中 の 同名 の メンバ 変数 の 初期 化 に 使 わ れ ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
Example  で は 、 以下 の メンバ 変数 を 定義 し て い ま す 。 
例題 の ソース コード が 入 っ た 文字 列 で す 。 
ソース コード は 単一 の Python  で 、 末尾 は 常 に 改行 で す 。  コンストラクタ は 必要 に 応 じ て 改行 を 追加 し ま す 。 
コンストラクタ は 必要 に 応 じ て 改行 を 追加 し ま す 。 
例題 が 例外 を 生成 する と 予想 さ れ る 場合 の 例外 メッセージ で す 。 
例外 を 送出 し な い 場合 に は  None  で す 。  この 例外 メッセージ は 、 traceback . format _exception_only ( ) の 戻 り 値 と 比較 さ れ ま す 。 
値 が  None  で な い 限り 、 exc _msg は 改行 で 終わ っ て い な けれ ば な り ま せ ん ;  コンストラクタ は 必要 に 応 じ て 改行 を 追加 し ま す 。 
この 例題 の 入 っ て い る 文字 列 中 に おけ る 、 例題 の 実行 文 の あ る 行 の の 行 番号 で す 。 
行 番号 は 文字 列 の 先頭 を ゼロ と し て 数え ま す 。 
例題 の 入 っ て い る 文字 列 の インデント 、 すなわち 例題 の 最初 の プロンプト より 前 に あ る 空白 文字 の 数 で す 。 
オプション フラグ を  True  また は  False  に 対応 付け て い る 辞書 で す 。  例題 に 対 する デフォルト オプション を 上書き する ため に 用い られ ま す 。 
この 辞書 に 入 っ て い な い オプション フラグ は デフォルト の 状態  ( DocTestrunner  の optionflags  の 内容 )  の まま に な り ま す 。 
クラス OutputChecker
doctest  例題 を 実際 に 実行 し た とき の 出力 が 予想 出力 と 一致 する か どう か を チェック する ため に 使 わ れ る クラス で す 。 
OutputChecker  で は 、 与え られ た 二 つ の 出力 を 比較 し て 、 一致 する 場合 に は 真 を 返 す check _output と 、 二 つ の 出力 間 の 違い を 説明 する 文字 列 を 返 す output_difference  の 、 二 つ の メソッド が あ り ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
OutputChecker  で は 以下 の メソッド を 定義 し て い ま す : 
例題 から 実際 に 得 られ た 出力  ( got )  と 、 予想 出力  ( want ) が 一致 する 場合 に のみ True  を 返 し ま す 。 
二 つ の 文字 列 が 全く 同一 の 場合 に は 常 に 一致 する と みな し ま す が 、 テスト ランナ の 使 っ て い る オプション フラグ に よ り 、 厳密 に は 同じ 内容 に な っ て い な く て も 一致 する と みな す 場合 も あ り ま す 。 
オプション フラグ に つ い て の 詳し い 情報 は 5 . 2 . 6  節 を 参照 し て くださ い 。 
与え られ た 例題 の 予想 出力  ( want ) と 、 実際 に 得 られ た 出力 ( got )  の 間 の 差異 を 解説 し て い る 文字 列 を 返 し ま す 。 optionflags  は want  と got  を 比較 する 際 に 使 わ れ る オプション フラグ の セット で す 。 
基本  API  は 、  doctest  を 使 い やす く する ため の 簡単 な ラッパ で あ り 、 柔軟 性 が あ っ て ほとんど の ユーザ の 必要 を 満た し て い ま す ;  と は い え 、 もっと テスト を きめ細か に 制御 し た い 場合 や 、  doctest  の 機能 を 拡張 し た い 場合 、 拡張  API  ( advanced  API )  を 使 わ ね ば な り ま せ ん 。 
拡張  API  は 、 doctest  ケース から 抽出 し た 対話 モード で の 例題 を 記憶 する ため の 二 つ の コンテナ クラス を 中心 に 構成 さ れ て い ま す : 
Example :  一 つ の  Python  実行 文 と 、 その 予想 出力 を ペア に し た もの 。 
DocTest :  Example  の 集まり 。  通常 一 つ の  docstring  や テキスト ファイル から 抽出 さ れ ま す 。 
その 他 に 、  doctest  の 例題 を 検索 、 パーズ 、 実行 、 チェック する ため の 処理 クラス が 以下 の よう に 定義 さ れ て い ま す : 
DocTestFin der :  与え られ た モジュール から 全て の docstring  を 検索 し 、 対話 モード で の 例題 が 入 っ た 各  docstring  から DocTest Parser  を 使 っ て DocTest  を 生成 し ま す 。 
DocTest Parser :  ( オブジェクト に つけ られ た  docstring  の よう な ) 文字 列 から DocTest  オブジェクト を 生成 し ま す 。 
DocTestRunner :  DocTest  内 の 例題 を 実行 し 、 OutputChecker  を 使 っ て 出力 を 検証 し ま す 。 
OutputChecker:  doctest  例題 から 実際 に 出力 さ れ た 結果 を 予想 出力 と 比較 し 、 両者 が 一致 する か 判別 し ま す 。 
これ ら の 処理 クラス の 関係 を 図 に まとめ る と 、 以下 の よう に な り ま す : 
5 . 2 . 6 . 2  注意 
関数  testmod ( )  および  testfile ( )  は 、 基本 的 な ほとんど の 用途 に 十分 な  doctest  インタフェース を 提供 し て い ま す 。 
これ ら 二 つ の 関数 に つ い て もっと くだけ た 説明 を 読 み た けれ ば 、 5 . 2 . 1  節 および  5 . 2 . 2  節 を 参照 し て くださ い 。 
filename  以外 の 引数 は 全て オプション で 、 キー ワード 引数 形式 で 指定 せ ね ば な り ま せ ん 。  filename  に 指定 し た ファイル 内 に あ る 例題 を テスト し ま す 。 
" ( failure_count ,  test _count ) "  を 返 し ま す 。  オプション 引数 の  module_relative  は 、 ファイル 名 を どの よう に 解釈 する か を 指定 し ま す : 
module_relative  が  True  ( デフォルト )  の 場合 、 filename  は  OS  に 依存 し な い モジュール の 相対 パス に な り ま す 。 
デフォルト で は 、 この パス は 関数  testfile  を 呼び出 し て い る モジュール から の 相対 パス に な り ま す ;  ただし 、 package 引数 を 指定 し た 場合 に は 、 パッケージ から の 相対 に な り ま す 。 
OS  へ の 依存 性 を 除 く ため 、 filename  で は パス を 分割 する 文字 に \/  を 使 わ ね ば な ら ず 、 絶対 パス に し て は な り ま せ ん ( パス 文字 列 を \/  で 始め て は な り ま せ ん ) 。 
module_relative  が  False  の 場合 、 filename は  OS  依存 の パス を 示 し ま す 。 
パス は 絶対 パス で も 相対 パス で も かま い ま せ ん ;  相対 パス に し た 場合 、 現在 の 作業 ディレクトリ を 基準 に 解決 し ま す 。 
オプション 引数  name  に は 、 テスト の 名前 を 指定 し ま す ;  デフォルト の 場合 や  None  を 指定 し た 場合 、  os . path . basename ( filename )  に な り ま す 。  オプション 引数  package  に は 、  Python  パッケージ を 指定 する か 、 モジュール 相対 の ファイル 名 の 場合 に は 相対 の 基準 ディレクトリ と な る Python  パッケージ の 名前 を 指定 し ま す 。 
パッケージ を 指定 し な い 倍 、 関数 を 呼び出 し て い る モジュール の ディレクトリ を 相対 の 基準 ディレクトリ と し て 使 い ま す 。 
マージ は dict . update ( )  の よう に 振舞 い ま す :  globs  と extraglobs  と の 間 に 同じ キー 値 が あ る 場合 、 両者 を 合わせ た 辞書 中 に は extraglobs  の 方 の 値 が 入 り ま す 。 
この 仕様 は 、 パラメタ 付き で  doctest  を 実行 する と い う 、 やや 進 ん だ 機能 で す 。 
オプション 引数 report  が 真 の 場合 、 テスト の 最後 に サマリ を 出力 し ま す 。 
オプション 引数  raise _on_error  の 値 は デフォルト で は 偽 で す 。 
真 に する と 、 最初 の テスト 失敗 や 予期 し な い 例外 が 起き た とき に 例外 を 送出 し ま す 。 
デフォルト で は 通常 の パーザ  ( 
DocTest Parser ( ) )  で す 。 
m .__test _ _ が 存在 し 、 None  で な い 場合 、 この 辞書 から 到達 でき る 例題 も テスト し ま す 。 
オプション 引数  exclude _empty  は デフォルト で は 偽 に な っ て い ま す 。 
m .__dict_ _ に な り ま す 。  オプション 引数  isprivate  に は 、 ある 名前 が プライベート 名 で あ る か どう か を 決定 する 関数 を 指定 し ま す 。 
リリース  2 . 4  で 撤廃 さ れ ま し た 。 
isprivate  を 使 う の は 賢 く あ り ま せ ん  - 使 わ な い よう に し て くださ い 。  名前 に 基づ い て テスト を スキップ し た けれ ば 、 DocTestFin der . find ( )  の 返 す リスト を フィルタ し て くださ い 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : optionflags  パラメタ を 追加 し ま し た 
バージョン  2 . 4  で  変更  さ れ た 仕様 : extraglobs ,  raise _on_error および exclude _empty  パラメタ を 追加 し ま し た 
単一 の オブジェクト に 関連 付け られ た  doctest  を 実行 する ため の 関数 も あ り ま す 。  この 関数 は 以前 の バージョン と の 互換 性 の ため に 提供 さ れ て い ま す 。 
この 関数 を 撤廃 する 予定 は あ り ま せ ん が 、 役 に 立 つ こと は ほとんど あ り ま せ ん : 
オブジェクト  f  に 関連 付け られ た 例題 を テスト し ま す 。 
デフォルト で は 、 例題 の テスト に 失敗 し た とき のみ 出力 を 生成 し ま す 。  オプション 引数 compileflags  に は 、 例題 を 実行 する とき に  Python  バイトコード コンパイラ が 使 う フラグ を 指定 し ま す 。 
デフォルト の 場合 や None  を 指定 し た 場合 、 フラグ は globs  内 に あ る  future 機能 セット に 対応 し た もの に な り ま す 。  オプション 引数  optionflags は 、 上 で 述べ た testfile ( ) と 同様 の 働き を し ま す 。 
5 . 2 . 1 1  提言 
doctest  で は 、 doctest  例題 を デバッグ する メカニズム を いく つ か 提供 し て い ま す : 
doctest  を 実行 可能 な  Python  プログラム に 変換 し 、  Python  デバッガ 
で 実行 でき る よう に する ため の 関数 が いく つ か あ り ま す 。 
DocTestSuite ( )  の 生成 する 
テスト ケース は 、 debug ( )  メソッド を サポート し て い ま す 。  debug ( )  は 
. TestCase  で 定義 さ れ て い ま す 。 
. set_trace ( )  を  doctest  例題 の 中 で 呼び出 し て お け ば 、 その 行 が 実行 さ れ た とき に  Python  デバッガ が 組み込 ま れ ま す 。 
デバッガ を 組み込 ん だ あと は 、 変数 の 現在 の 値 など を 調べ られ ま す 。 
たとえば 、 以下 の よう な モジュール レベル の  docstring  の 入 っ た ファイル a . py  が あ る と し ま す : 
対話 セッション は 以下 の よう に な る で しょ う : 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 
. set_trace ( )  を  doctest  の 中 で 有効 に 使え る よう に な り ま し た 
以下 は 、 doctest  を  Python  コード に 変換 し て 、 でき た コード を デバッガ 下 で 実行 でき る よう に する ため の 関数 で す : 
例題 の 入 っ た テキスト を スクリプト に 変換 し ま す 。  引数 s  は  doctest  例題 の 入 っ た 文字 列 で す 。 
この 文字 列 は  Python  スクリプト に 変換 さ れ 、 その 中 で は  s  の  doctest  例題 が 通常 の コード に 、 それ 以外 は  Python  の コメント 文 に な り ま す 。 
生成 し た スクリプト を 文字 列 で 返 し ま す 。 
例えば 、 import doctestprint  doctest . script_ from _examples ( r " " " Set  x  and  y to  1  and  2 .  x ,  y  =  1 ,  2 Print their sum :  print  x + y 3 " " " ) 
は 、 
#  Set  x  and  y to  1  and  2 . x ,  y  =  1 ,  2 # #  Print their sum : print  x + y #  Expected :##  3  に な り ま す 。 
この 関数 は 他 の 関数  ( 下記 参照 )  から 使 わ れ て いま る が 、 対話 セッション を Python  スクリプト に 変換 し た い よう な 場合 に も 便利 で しょ う 。 
ある オブジェクト の  doctest  を スクリプト に 変換 し ま す 。  引数 module  は モジュール オブジェクト か 、 対象 の  doctest  を 持 つ オブジェクト の 入 っ た モジュール の ドット 表記 名 で す 。 
引数 name  は 対象 の  doctest  を 持 つ オブジェクト の  ( モジュール 内 の ) 名前 で す 。 
対象 オブジェクト の  docstring  を 上 の script_ from _examples ( )  で 説明 し た 方法 で  Python  スクリプト に 変換 し て でき た 文字 列 を 返 し ますます 。 
例えば 、 a . py  モジュール の トップ レベル に 関数  f ( )  が あ る 場合 、 以下 の コード 
を 実行 する と 、 f ( )  の  docstring  から  doctest  を コード に 変換 し 、 それ 以外 を コメント に し た スクリプト を 出力 し ま す 。 
オブジェクト の 持 つ  doctest  を デバッグ し ま す 。  module  および  name  引数 は 上 の  testsource ( ) と 同じ で す 。 
指定 し た オブジェクト の  docstring  から 合成 さ れ た  Python  スクリプト は 一時 ファイル に 書き出 さ れ 、 その 後  Python  デバッガ 
オプション 引数 pm  は 、 検死 デバッグ を 行 う か どう か を 指定 し ま す 。 
pm  が 真 の 場合 、 スクリプト ファイル は 直接 実行 さ れ 、 スクリプト が 送出 し た 例外 が 処理 さ れ な い まま 終了 し た 場合 に のみ デバッガ が 立ち入 り ま す 。 
その 場合 、 
. post _mortem ( )  に よ っ て 検死 デバッグ を 起動 し 、 処理 さ れ な かっ た 例外 から 得 られ た トレース バック オブジェクト を 渡 し ま す 。 
pm  を 指定 し な い か 値 を 偽 に し た 場合 、 
. run ( )  に 適切 な  execfile ( )  呼び出し を 渡 し て 、 最初 から デバッガ の 下 で スクリプト を 実行 し ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 引数 pm  を 追加 し ま し た 
文字 列 中 の  doctest  を デバッグ し ま す 。 
globs  を 指定 し な い 場合 や None  に し た 場合 、 空 の 辞書 を 使 い ま す 。 
辞書 を 指定 し た 場合 、 実際 の 実行 コンテキスト に は 浅 い コピー が 使 わ れ ま す 。 
DebugRunner  クラス 自体 や DebugRunner  クラス が 送出 する 特殊 な 例外 は 、 テスト フレームワーク の 作者 に と っ て 非常 に 興味 の あ る ところ で The  DebugRunner class ,  and  the special  exceptions it  may  raise , are  of  most  interest  to test ing  framework  authors ,  and  will  only besketched  here .  詳し く は ソース コード 、 とりわけ DebugRunner  の  docstring ( それ 自体  doctest  で す よ ! )  を 参照 し て くださ い 。 
クラス DebugRunner 
テスト の 失敗 に 遭遇 する と すぐ に 例外 を 送出 する よう に な っ て い る DocTestRunner  の サブ クラス で す 。 
予期 し な い 例外 が 生じ る と 、 UnexpectedException  例外 を 送出 し ま す 。  この 例外 に は 、 テスト 、 例題 、 もともと 送出 さ れ た 例外 が 入 っ て い ま す 。 
DebugRunner  インスタンス の 送出 する 例外 に は 以下 の 二 つ が あ り ま す : 
例外 DocTestFailure
doctest  例題 の 実際 の 出力 が 予想 出力 と 一致 し な かっ た こと を 示 す ため に DocTestRunner  が 送出 する 例外 で す 。  コンストラクタ の 引数 は 、 インスタンス の 同名 の メンバ 変数 を 初期 化 する ため に 使 わ れ ま す 。 
DocTestFailure  で は 以下 の メンバ 変数 を 定義 し て い ま す : 
例題 が 失敗 し た 時 に 実行 さ れ て い た DocTest  オブジェクト で す 。 
失敗 し た  Example  オブジェクト で す 。 
例題 の 実際 の 出力 で す 。 
例外 UnexpectedException 
doctest  例題 が 予期 し な い 例外 を 送出 し た こと を 示 す ため に DocTestRunner  が 送出 する 例外 で す 。 
コンストラクタ の 引数 は 、 インスタンス の 同名 の メンバ 変数 を 初期 化 する ため に 使 わ れ ま す 。 
UnexpectedException  で は 以下 の メンバ 変数 を 定義 し て い ま す : 
予期 し な い 例外 に つ い て の 情報 の 入 っ た タプル で 、 sys . exc _ info ( )  が 返 す の と 同じ もの で す 。 
5 . 2 . 4  ドキュメンテーション 文字 列 内 の 例 を どう や っ て 認識 する の か ? 
5 . 2 . 3 . 1  どの ドキュメンテーション 文字 列 が 検証 さ れ る の か ? 
5 . 2 . 5  実行 コンテキスト と は 何 か ? 
5 . 2 . 4  ドキュメンテーション 文字 列 内 の 例 を どう や っ て 認識 する の か ? 
ほとんど の 場合 、 対話 コンソール セッション 上 で の コピー \/ ペースト は うま く 動作 し ま す 。  と は い え 、  doctest  は 特定 の  Python  シェル の 振る舞い を 正確 に エミュレーション し よう と する わけ で は あ り ま せ ん 。 
ハード タブ は 全て  8  カラム の タブ ストップ を 使 っ て スペース に 展開 さ れ ま す 。 
従 っ て 、 タブ が その よう に 表現 さ れ る と 考え て お か な い と と まず い こと に な り ま す : その 場合 は 、 ハード タブ を 使 わ な い か 、 自前 で  DocTest Parser クラス を 書 い て くださ い 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 新た に タブ を スペース に 展開 する よう に な り ま し た ;  以前 の バージョン は ハード タブ を 保存 し よ う と し て い た の で 、 混乱 さ せ る よう な テスト 結果 に な っ て しま っ て い ま し た 
出力 結果 例 に は 、 全て 空白 の 行 が 入 っ て い て は な り ま せ ん 。 
st dout  へ の 出力 は 取り込 ま れ ま す が 、 stderr  は 取り込 ま れ ま せ ん  ( 例外 発生 時 の トレース バック は 別 の 方法 で 取り込 ま れ ま す ) 。 
対話 セッション に お い て 、 バックス ラッシュ を 用い て 次 の 行 に 続け る 場合 や 、 その 他 の 理由 で バックス ラッシュ を 用い る 場合 、 raw  docstring  を 使 っ て バックス ラッシュ を 入力 どおり に 扱 わ せ る よう に せ ね ば な り ま せ ん : 
こう し な けれ ば 、 バックス ラッシュ は 文字 列 の 一部 と し て 解釈 さ れ て しま い ま す う 。  例えば 、 上 の 例 の  " "  は 改行 文字 と し て 認識 さ れ て しま う で しょ う 。 
こう する 代わり に 、 ( raw  docstring  を 使 わ ず に )  doctest  版 の 中 で は バックス ラッシュ を 全て 二 重 に し て も かま い ま せ ん : 
開始 カラム は どこ で も かま い ま せ ん : 
出力 結果 例 の 先頭 部 に あ る 空白 文字 列 は 、 例題 の 開始 部分 に あた る ' '  行 の 先頭 に あ る 空白 文字 列 と 同じ だけ はぎと ら れ ま す 。 
5 . 2 . 3  doctest  の からくり 
5 . 2 . 2  簡単 な 利用 法 :  テキスト ファイル 中 の 例題 を チェック する 
この 節 で は 、 doctest  の からくり :  どの  docstring  を 見 に 行 く の か 、 どう や っ て 対話 操作 例 を 見つけ 出 す の か 、 どんな 実行 コンテキスト を 使 う の か 、 例外 を どう 扱 う か 、 上記 の 振る舞い を 制御 する ため に どの よう な オプション フラグ を 使 う か 、 に つ い て 詳し く 吟味 し ま す 。 
5 . 2 . 6 . 1  オプション フラグ と ディレクティブ 
5 . 2 . 6  例外 は どう 扱 え ば よ い の で す か ? 
5 . 2 . 6  例外 は どう 扱 え ば よ い の で す か ? 
doctest  で は 、 その 挙動 の 様々 な 側面 を たくさん の オプション フラグ で 制御 し て い ま す 。 
各 フラグ の シンボル 名 は モジュール の 定数 と し て 提供 さ れ て お り 、 論理 和 で 組み合わせ て 様々 な 関数 に 渡せ る よう に な っ て い ま す 。 
デフォルト で は 、 予想 出力 ブロック に 単に 1  だけ が 入 っ て お り 、 実際 の 出力 ブロック に  1  また は  True  だけ が 入 っ て い た 場合 、 これ ら の 出力 は 一致 し て い る と みな さ れ ま す 。 
0  と  False  の 場合 も 同様 で す 。 
DONT _ ACCEPT _ TRUE _ FOR _ 1  を 指定 する と 、 こう し た 値 の 読み替え を 行 い ま せ ん 。  デフォルト の 挙動 で 読み替え を 行 う の は 、 最近 の  Python  で 多く の 関数 の 戻 り 値 型 が 整数 型 から ブール 型 に 変更 さ れ た こと に 対応 する ため で す ;  読み替え を 行 う 場合 、 " 通常 の 整数 "  の 出力 を 予想 出力 と する よう な  doctest  も 動作 し ま す 。 
この オプション は その うち 無くな る で しょ う が 、 ここ 数 年 は その まま で しょ う 。 
デフォルト で は 、 予想 出力 ブロック に  BLANK LINE  だけ の 入 っ た 行 が あ る 場合 、 その 行 は 実際 の 出力 に お け る 空行 に 一致 する よう に な り ま す 。 
完全 な 空行 を 入れ て しま う と 予想 出力 が そこ で 終わ っ て い る と みな さ れ て しま う ため 、 空行 を 予想 出力 に 入れ た い 場合 に は この 方法 を 使 わ ね ば な り ま せ ん 。 
DONT _ ACCEPT _ BLANK LINE  を 指定 する と 、 BLANK LINE  の 読み替え を 行 わ な く な り ま す 。 
NORMALIZE _ WHITESPACE  この フラグ を 指定 する と 、 空白  ( 空白 と 改行 文字 )  の 列 は 互い に 等価 で あ る と みな し ま す 。 
この フラグ を 指定 する と 、 予想 出力 中 の 省略 記号 マーカ  (... )  を 実際 の 出力 中 の 任意 の 部分 文字 列 に 一致 さ せ られ ま す 。 
部分 文字 列 は 行 境界 に わた る もの や 空 文字 列 を 含 み ま す 。  従 っ て 、 この フラグ を 使 う の は 単純 な 内容 を 対象 に する 場合 に とどめ ま しょ う 。 
複雑 な 使 い 方 を する と 、 正規 表現 に  . *  を 使 っ た とき の よう に " あらら 、 省略 部分 を マッチ がえ て る  ( match too much )  ! "  と 驚 く こと に な り かね ま せ ん 。 
この フラグ を 指定 する と 、 予想 さ れ る 実行 結果 に 例外 が 入 る よう な 例題 で 、 予想 通り の 型 の 例外 が 送出 さ れ た 場合 に 、 例外 の 詳細 情報 が 一致 し て い な く て も テスト を パス さ せ ま す 。 
例えば 、 予想 出力 が " ValueError :  42 "  で あ る よう な 例題 は 、 実際 に 送出 さ れ た 例外 が " ValueError :  3 * 14 "  で も パス し ま す が 、 TypeError  が 送出 さ れ る と い っ た 場合 に は パス し ま せ ん 。  ELLIPSIS  を 使 っ て も 同様 の こと が でき 、 IGNORE _ EX CEPTION _ DETAIL  は  リリース  2 . 4  以前 の  Python を 使 う 人 が ほとんど い な く な っ た 時期 を 見計ら っ て 撤廃 する か も しれ な い の で 気 を つけ て くださ い 。 
それ まで は 、 IGNORE _ EX CEPTION _ DETAIL  は 2 . 4  以前 の  Python  で 例外 の 詳細 に つ い て は 気 に せ ず テスト を パス さ せ る よう に doctest  を 書 く ため の 唯一 の 明確 な 方法 で す 。 
に する と 、  Python  2 . 4  と  Python  2 . 3  の 両方 で テスト を パス さ せ られ ま す 。 
と い う の は 、 例外 の 詳細 情報 は  2 . 4  で 変更 さ れ 、  " doesn't "  から  " does not "  と 書 く よう に な っ た から で す 。 
上記 の 比較 フラグ 全て の 論理 和 を と っ た ビット マスク で す 。 
二 つ 目 の オプション 群 は 、 テスト の 失敗 を 報告 する 方法 を 制御 し ま す : 
この オプション を 指定 する と 、 複数 行 に わた る 予想 出力 や 実際 の 出力 を 、 一元 化  ( unified )  diff  を 使 っ て 表示 し ま す 。 
この オプション を 指定 する と 、 複数 行 に わた る 予想 出力 や 実際 の 出力 を 、 コンテキスト  diff  を 使 っ て 表示 し ま す 。 
この オプション を 指定 する と 、 予想 出力 と 実際 の 出力 と の 間 の 差分 を よく 知 ら れ て い る ndiff . py  ユーティリティ と 同じ アルゴリズム を 使 っ て い る  difflib . Differ  で 分析 し ま す 。 
これ は 、 行 単位 の 差分 と 同じ よう に 行内 の 差分 に マーカ を つけ られ る よう に する 唯一 の 手段 で す 。 
例えば 、 予想 出力 の あ る 行 に 数字 の  1  が 入 っ て い て 、 実際 の 出力 に は  l  が 入 っ て い る 場合 、 不 一致 の おき て い る カラム 位置 を 示 す キャレット の 入 っ た 行 が 一行 挿入 さ れ ま す 。 
この オプション を 指定 する と 、 各  doctest  で 最初 に エラー の 起き た 例題 だけ を 表示 し 、 それ 以後 の 例題 の 出力 を 抑制 し ま す 。 
これ に よ り 、 正し く 書 か れ た 例題 が 、 それ 以前 の 例題 の 失敗 に よ っ て おかし く な っ て しま っ た 場合 に 、 doctest  が それ を 報告 し な い よう に な り ま す 。  と は い え 、 最初 に 失敗 を 引き起こ し た 例題 と は 関係 な く 誤 っ て 書 か れ た 例題 の 報告 も 抑制 し て しま い ま す 。 
REPORT _ ONLY _ FIRST _ FAILURE  を 指定 し た 場合 、 例題 が どこ か で 失敗 し て も 、 それ 以後 の 例題 を 続け て 実行 し 、 失敗 し た テスト の 総数 を 報告 し ま す ;  出力 が 抑制 さ れ る だけ で す 。 
上記 の エラー 報告 に 関 する フラグ 全て の 論理 和 を と っ た ビット マスク で す 。 
「 doctest  ディレクティブ 」 を 使 う と 、 個々 の 例題 に 対 し て オプション フラグ の 設定 を 変更 でき ま す 。 
doctest  ディレクティブ は 特殊 な  Python  コメント 文 と し て 表現 さ れ 、 例題 の ソース コード の 後 に 続け ま す : 
+  や -  と ディレクティブ オプション 名 の 間 に 空白 を 入れ て は な り ま せ ん 。 
ディレクティブ オプション 名 は 上 で 説明 し た オプション フラグ 名 の いずれ か で す 。  ある 例題 の  doctest  ディレクティブ は 、 その 例題 だけ の  doctest  の 振る舞い を 変え ま す 。 
ある 特定 の 挙動 を 有効 に し た けれ ば  +  を 、 無効 に し た けれ ば  -  を 使 い ま す 。  例えば 、 以下 の テスト は パス し ま す : 
ディレクティブ が な い 場合 、 実際 の 出力 に は 一 桁 の 数字 の 間 に 二 つ スペース が 入 っ て い な い こと 、 実際 の 出力 は  1  行 に な る こと から 、 テスト は パス し な い はず で す 。 
別 の ディレクティブ を 使 っ て 、 この テスト を パス さ せ る こと も でき ま す : 
複数 の ディレクティブ は 、 一 つ の 物理 行 の 中 に コンマ で 区切 っ て 指定 でき ま す : 
一 つ の 例題 中 で 複数 の ディレクティブ コメント を 使 っ た 場合 、 それ ら は 組み合わ さ れ ま す : 
前 の 例題 で 示 し た よう に 、 " . . . "  の 後ろ に ディレクティブ だけ の 入 っ た 行 を 例題 の うしろ に 追加 し て 書け ま す 。 
この 書 き かた は 、 例題 が 長 すぎ る ため に ディレクティブ を 同じ 行 に 入れ る と 収まり が 悪 い 場合 に 便利 で す : 
デフォルト で は 全て の オプション が 無効 に な っ て お り 、 ディレクティブ は 特定 の 例題 だけ に 影響 を 及ぼ す の で 、 通常 意味 が あ る の は 有効 に する ため の オプション ( +  の つ い た ディレクティブ )  だけ で す 。 
と は い え 、 doctest  を 実行 する 関数 は オプション フラグ を 指定 し て デフォルト と は 異な っ た 挙動 を 実現 でき る の で 、 その よう な 場合 に は  -  を 使 っ た 無効 化 オプション も 意味 を 持 ち ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : Constants DONT _ ACCEPT _ BLANK LINE , NORMALIZE _ WHITESPACE ,  ELLIPSIS , IGNORE _ EX CEPTION _ DETAIL , REPORT _ UDIFF ,  REPORT _ CDIFF , REPORT _ NDIFF ,  REPORT _ ONLY _ FIRST _ FAILURE , COMPARISON _ FLAGS  and  REPORTING_ FLAGS を 追加 し ま し た 。 
予想 出力 中 の  BLANK LINE  が デフォルト で 実際 の 出力 中 の 空行 に マッチ する よう に な り ま し た 。  また 、 doctest  ディレクティブ が 追加 さ れ ま し た 
新た な オプション フラグ 名 を 登録 する 方法 も あ り ま す が 、 
の 内部 を サブ クラス で 拡張 し な い 限り 、 意味 は な い で しょ う : 
名前 name  の 新た な オプション フラグ を 作成 し 、 作成 さ れ た フラグ の 整数 値 を 返 し ま す 。  register _optionflag ( )  は OutputChecker  や  DocTestRunner  を サブ クラス 化 し て 、 その 中 で 新た に 作成 し た オプション を サポート さ せ る 際 に 使 い ま す 。 
register _optionflag  は 以下 の よう な 定形 文 で 呼び出 さ ね ば な り ま せ ん :  MY _ FLAG  =  register _optionflag ( ' MY _ FLAG ') 
5 . 2 . 1  簡単 な 利用 法 :  docstring  中 の 例題 を チェック する 
doctest  の もう 一 つ の 簡単 な 用途 は 、 テキスト ファイル 中 に あ る 対話 操作 の 例 に 対 する テスト で す 。 
これ に は  testfile ( )  関数 を 使 い ま す : 
この 短 い スクリプト は 、 example . txt  と い う ファイル の 中 に 入 っ て い る 対話 モード の  Python  操作 例 全て を 実行 し て 、 その 内容 を 検証 し ま す 。 
ファイル の 内容 は 一 つ の 巨大 な  docstring  で あ る か の よう に 扱 わ れ ま す ; ファイル が  Python  プログラム で な く て も よ い の で す !  例えば 、 example . txt  に は 以下 の よう な 内容 が 入 っ て い る か も しれ ま せ ん : 
doctest . testfile ( " example . txt " )  を 実行 する と 、 この ドキュメント 内 の エラー を 見つけ 出 し ま す : 
testmod ( )  と 同じく 、 testfile ( )  は 例題 が 失敗 し な い 限り 何 も 表示 し ま せ ん 。 
例題 が 失敗 する と 、 失敗 し た 例題 と その 原因 が ( 場合 に よ っ て は 複数 )  testmod ( )  と 同じ 書式 で 標準 出力 に 書き出 さ れ ま す 。  デフォルト で は 、 testfile ( )  は 自分 自身 を 呼び出 し た モジュール の あ る ディレクトリ を 探 し ま す 。 
doctest  を 試 す 簡単 な 方法 、 ( と は い え 、 いつ も そう する 必要 は な い の で す が )  は 、 各 モジュール  M  の 最後 を 、 以下 : 
実行 を 試み た 全て の 例 に つ い て 詳細 に 報告 し 、 最後 に 各種 まとめ を おこな っ た 内容 が 標準 出力 に 印字 さ れ ま す 。  verbose = True  を  testmod ( )  に 渡 せ ば 、 詳細 報告  ( verbose )  モード を 強制 でき ま す 。 
5 . 2 . 12  進 ん だ 使 い 方 
冒頭 で も 触れ た よう に 、 
は 、 
docstring  内 の 例題 を チェック する 、 
回帰 テスト を 行 う 、 
実行 可能 な ドキュメント \/ 読め る テスト の 実現 、 
と い う 三 つ の 主な 用途 を 持 つ よう に な り ま し た 。  これ ら の 用途 に は それぞれ 違 っ た 要求 が あ る の で 、 区別 し て 考え る の が 重要 で す 。 
例題 は 、 ドキュメント に 紛れ 無し の 価値 を 与え ま す 。 
よ い 例 が たくさん の 言葉 に 値 する こと は 多々 あ り ま す 。  注意 深 く や れ ば 、 例 は ユーザ に と っ て は あまり 意味 の な い もの に な る か も しれ ま せ ん が 、 歳 を 経 る に つれ て 、 あるいは  " 状況 が 変わ っ た "  際 に 何 度 も 何 度 も 正し く 動作 さ せ る ため に かか る こと に な る 時間 を 節約 する と い う 形 で 、 きっと 見返り を 得 る で しょ う 。 
は 回帰 テスト の 優れ た ツール に も な り 得 ま す 。 
説明 文 と 例題 を 交互 に 記述 し て い け ば 、 実際 に 何 を どう し て テスト し て い る の か もっと 簡単 に 把握 でき る よう に な る で しょ う 。 
もちろん 、 コード ベース の テスト に 詳し く コメント を 入れ る の も 手 で す が 、 そんな こと を する プログラマ は ほとんど い ま せ ん 。  多く の 人々 が 、 
doctest  の アプローチ を と っ た 方 が きれい に テスト を 書け る と 気づ い て い ま す 。 
おそらく 、 これ は 単に コード 中 に コメント を 書 く の が 少し 面倒 だ から と い う 理由 で しょ う 。 
私 は もう 少し う が っ た 見方 も し て い ま す :  doctest  ベース の テスト を 書 く とき の 自然 な 態度 は 、 自分 の ソフトウェア の よ い 点 を 説明 し よう と し て 、 例題 を 使 っ て 説明 し よう と する とき の 態度 その もの だ から だ 、 と い う 理由 で す 。 
それ ゆえ に 、 テスト ファイル は 自然 と 単純 な 機能 の 解説 から 始め 、 論理 的 に よ り 複雑 で 境界 条件 的 な ケース に 進 む よう な 形 に な り ま す 。 
結果 的 に 、 一見 ランダム に 見え る よう な 個別 の 機能 を テスト し て い る 個別 の 関数 の 集まり で は な く 、 首尾 一貫 し た 説明 が でき る よう に な る の で す 。 
回帰 テスト の 組 み 方 に は いく つ か 選択 肢 が あ り ま す : 
テスト ケース を 対話 モード の 例題 に し て 入れ た テキスト ファイル を 書 き 、 testifle ( )  や  DocFileSuite ( )  を 使 っ て その ファイル を テスト し ま す 。 
と い う 名前 の 関数 を 定義 し ま す 。 
この 関数 に は 、 ある トピック に 対応 する テスト ケース の 入 っ た  docstring が 一 つ だけ 入 っ て い ま す 。 
この 関数 は モジュール と 同じ ファイル の 中 に も 置け ま す し 、 別 の テスト ファイル に 分け て も かま い ま せ ん 。 
回帰 テスト の トピック を テスト ケース の 入 っ た  docstring  に 対応 付け た 辞書 _ _test _ _ 辞書 を 定義 し ま す 。 
doctest  化 し た モジュール の コレクション が 増え る に つれ 、 全て の  doctest  を システマティック に 実行 し た い と 思 う よう に な る はず で す 。 
Python  2 . 4  以前 の 
に は  Tester  と い う ほとんど ドキュメント 化 さ れ て い な い クラス が あ り 、 複数 の モジュール の doctest  を 統合 する 初歩 的 な 手段 を 提供 し て い ま し た 。 
Tester  は 非力 で あ り 、 実際 の ところ 、 もっと きちんと し た  Python  の テスト フレームワーク が 
モジュール で 構築 さ れ て お り 、 複数 の ソース コード から の テスト を 統合 する 柔軟 な 方法 を 提供 し て い ま す 。 
そこ で  Python  2 . 4  で は 
こう し た テスト スイート は 、 
の テスト ランナ を 使 っ て 実行 でき ま す : 
doctest  の 入 っ た テキスト ファイル や モジュール から 
. TestSuite  インスタンス を 生成 する ため の 主な 関数 は 二 つ あ り ま す : 
単一 また は 複数 の テキスト ファイル に 入 っ て い る  doctest  形式 の テスト を 、 
. TestSuite  インスタンス に 変換 し ま す 。  この 関数 の 返 す 
. TestSuite  インスタンス は 、 unittest  フレームワーク で 動作 さ せ 、 各 ファイル の 例題 を 対話 的 に 実行 する ため の もの で す 。 
module_relative  が  True  ( デフォルト )  の 場合 、 filename  は  OS  に 依存 し な い モジュール の 相対 パス に な り ま す 。 
OS  へ の 依存 性 を 除 く ため 、 filename  で は パス を 分割 する 文字 に \/  を 使 わ ね ば な ら ず 、 絶対 パス に し て は な り ま せ ん ( パス 文字 列 を \/  で 始め て は な り ま せ ん ) 。 
module_relative  が  False  の 場合 、 filename は  OS  依存 の パス を 示 し ま す 。 
オプション 引数  package  に は 、  Python  パッケージ を 指定 する か 、 モジュール 相対 の ファイル 名 の 場合 に は 相対 の 基準 ディレクトリ と な る Python  パッケージ の 名前 を 指定 し ま す 。 
パッケージ を 指定 し な い 倍 、 関数 を 呼び出 し て い る モジュール の ディレクトリ を 相対 の 基準 ディレクトリ と し て 使 い ま す 。 
module_relative  を False に 指定 し て い る 場合 、 package  を 指定 する と エラー に な り ま す 。  オプション 引数  setUp  に は 、 テスト スイート の セットアップ に 使 う 関数 を 指定 し ま す 。 
この 関数 は 、 各 ファイル の テスト を 実行 する 前 に 呼び出 さ れ ま す 。 
setUp  関数 は  DocTest  オブジェクト に 引き渡 さ れ ま す 。 
setUp  は globs  属性 を 介 し て テスト の グローバル 変数 に アクセス でき ま す 。  オプション 引数  tearDown  に は 、 テスト を 解体  ( tear - down)  する ため の 関数 を 指定 し ま す 。 
この 関数 は 、 各 ファイル の テスト の 実行 を 終了 する たび に 呼び出 さ れ ま す 。 
tearDown 関数 は  DocTest  オブジェクト に 引き渡 さ れ ま す 。 
tearDown  はは globs  属性 を 介 し て テスト の グローバル 変数 に アクセス でき ま す 。  オプション 引数  globs  は 辞書 で 、 テスト の グローバル 変数 の 初期 値 が 入 り ま す 。 
この 辞書 は 各 テスト ごと に 新た に コピー し て 使 わ れ ま す 。 
デフォルト で は glob  は 空 の 新た な 辞書 で す 。  オプション 引数  optionflags  に は 、 テスト を 実行 する 際 に デフォルト で 適用 さ れ る  doctest  オプション を  OR  で 結合 し て 指定 し ま す 。 
デフォルト は 通常 の パーザ  ( 
doctest  の テスト を 
. TestSuite  に 変換 し ま す 。  この 関数 の 返 す 
. TestSuite  インスタンス は 、 unittest  フレームワーク で 動作 さ せ 、 モジュール 内 の 各  doctest  を 実行 する ため の もの で す 。 
何 ら か の  doctest  の 実行 に 失敗 する と 、 この 関数 で 生成 し た 単位 テスト は 失敗 し 、 該当 する テスト の 入 っ て い る ファイル の 名前 と 、 ( 場合 に よ り だいたい の )  行 番号 の 入 っ た failureException  例外 を 送出 し ま す 。  オプション 引数  module  に は 、 テスト し た い モジュール の 名前 を 指定 し ま す 。 
module  に は モジュール オブジェクト また は  ( ドット 表記 の )  モジュール 名 を 指定 でき ま す 。 
module  を 指定 し な い 場合 、 この 関数 を 呼び出 し て い る モジュール に な り ま す 。  オプション 引数  globs  は 辞書 で 、 テスト の グローバル 変数 の 初期 値 が 入 り ま す 。 
デフォルト で は glob  は 空 の 新た な 辞書 で す 。  オプション 引数  extraglobs  に は 追加 の グローバル 変数 セット を 指定 し ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : globs ,  extraglobs , test _finder ,  setUp , tearDown ,  および optionflags  パラメタ を 追加 し ま し た 。  また 、 この 関数 は doctest  の 検索 に testmod ( )  と 同じ テクニック を 使 う よう に な り ま し た 
DocTestSuite ( )  は 水面 下 で は doctest . DocTestCase インスタンス から 
. TestSuite  を 作成 し て お り 、 DocTestCase  は 
. TestCase  の サブ クラス に な っ て い ま す 。 
DocTestCase  に つ い て は ここ で は 説明 し ま せ ん ( これ は 内部 実装 上 の 詳細 だ から で す )  が 、 その コード を 調べ て み れ ば 、 
の 組み込み の 詳細 に 関 する 疑問 を 解決 でき る はず で す 。  同様 に 、 DocFileSuite ( )  は doctest . DocFileCase インスタンス から 
これ に は はっきり と し た 訳 が あ り ま す : 
関数 を 自分 で 実行 する 場合 、 オプション フラグ を 
関数 に 渡 す こと で 、 
の オプション を 直接 操作 でき ま す 。 
しかし ながら 、 
フレームワーク を 書 い て い る 場合 に は 、 いつ どの よう に テスト を 動作 さ せ る か を 
が 完全 に 制御 し て しま い ま す 。 
フレームワーク の 作者 は たいてい 、 
の レポート オプション を  ( コマンドライン オプション で 指定 する など し て )  操作 し た い と 考え ま す が 、 
を 介 し て 
の テスト ランナ に オプション を 渡 す 方法 は 存在 し な い の で す 。 
この ため 、 
で は 、 以下 の 関数 を 使 っ て 、 
サポート に 特化 し た レポート フラグ 表記 方法 も サポート し て い ま す : 
の レポート フラグ を セット し ま す 。 
引数 flags  に は オプション フラグ を  OR  で 結合 し て 渡 し ま す 。  5 . 2 . 6  節 を 参照 し て くださ い 。 
「 レポート フラグ 」 しか 使え ま せ ん 。  この 関数 で 設定 し た 内容 は モジュール 全体 に わた る 物 で あ り 、 関数 呼び出 し 以後 に 
モジュール から 実行 さ れ る 全て の  doctest に 影響 し ま す :  DocTestCase  の runTest ( )  メソッド は 、 DocTestCase  インスタンス が 作成 さ れ た 際 に 、 現在 の テスト ケース に 指定 さ れ た オプション フラグ を 見 に 行 き ま す 。 
レポート フラグ が 指定 さ れ て い な い 場合  ( 通常 の 場合 で 、 望まし い ケース で す ) 、 
の 
レポート フラグ が  OR  で 結合 さ れ 、 doctest  を 実行 する ため に 作成 さ れ る DocTestRunner  インスタンス に 渡 さ れ ま す 。 
DocTestCase  インスタンス を 構築 する 際 に 何 ら か の レポート フラグ が 指定 さ れ て い た 場合 、 
レポート フラグ は 無視 さ れ ま す 。  この 関数 は 、 関数 を 呼び出 す 前 に 有効 に な っ て い た 
レポート フラグ の 値 を 返 し ま す 。 
5 . 2 . 6 . 1  オプション フラグ と ディレクティブ 
doctest  で は 、 予想 出力 に 対 する 厳密 な 一致 を 厳し く 求め て い ま す 。 
一致 し な い 文字 が 一 文字 で も あ る と 、 テスト は 失敗 し て しま い ま す 。 
この ため 、 Python  が 出力 に 関 し て 何 を 保証 し て い て 、 何 を 保証 し て い な い か を 正確 に 知 っ て い な い と 幾 度 か 混乱 さ せ られ る こと で しょ う 。 
例えば 、 辞書 を 出力 する 際 、 Python  は キー と 値 の ペア が 常 に 特定 の 順番 で 並 ぶ よう 保証 し て は い ま せ ん 。  従 っ て 、 以下 の よう な テスト 
は 失敗 する か も しれ な い の で す !  回避 する に は 
と する の が 一 つ の や り 方 で す 。 
別 の や り 方 は 、 
d  =  foo ( ) . items ( )  d . sort ( )  d [ ( 'Harry ' , 'broomstick ') ,  ( ' Hermione ' , 'hippogryph') ]  で す 。 
他 に も あ り ま す が 、 自分 で 考え て み て くださ い 。  以下 の よう に 、 オブジェクト アドレス を 埋め込 む よう な 結果 を print  する の も よく あ り ま せ ん : 
ELLIPSIS  ディレクティブ を 使 う と 、 上 の よう な 例 を うま く 解決 でき ま す : 
浮動 小数 点数 も また 、 プラットフォーム 間 で の 微妙 な 出力 の 違い の 原因 と な り ま す 。  と い う の も 、 Python  は 浮動 小数 点 の 書式 化 を プラットフォーム の  C  ライブラリ に ゆだね て お り 、 この 点 で は 、 C  ライブラリ は プラットフォーム 間 で 非常 に 大き く 異な っ て い る から で す 。 
I \/ 2 . * * J  の 形式 に な る 数値 は どの プラットフォーム で も うま く 動作 する の で 、 私 は この 形式 の 数値 を 生成 する よう に  doctest  の 例題 を 工夫 し て い ま す : 
この よう に 、 単分 数  ( simple  fraction )  を 使 え ば 、 人間 に と っ て も 理解 し やす く よ い ドキュメント に な り ま す 。 
5 . 2 . 3 . 1  どの ドキュメンテーション 文字 列 が 検証 さ れ る の か ? 
5 . 2 . 4  ドキュメンテーション 文字 列 内 の 例 を どう や っ て 認識 する の か ? 
モジュール の ドキュメンテーション 文字 列 、 全て の 関数 、 クラス および メソッド の ドキュメンテーション 文字 列 が 検索 さ れ ま す 。 
モジュール に import  さ れ た オブジェクト は 検索 さ れ ま せ ん 。  加え て 、  M .__test _ _ が 存在 し 、  " 真 の 値 を 持 つ "  場合 、 この 値 は 辞書 で 、 辞書 の 各 エントリ は  ( 文字 列 の )  名前 を 関数 オブジェクト 、 クラス オブジェクト 、 また は 文字 列 に 対応 付け て い な く て は な り ま せ ん 。 
M .__test _ _ から 得 られ た 関数 および クラス オブジェクト の ドキュメンテーション 文字 列 は 、 その 名前 が プライベート な もの で も 検索 さ れ 、 文字 列 の 場合 に は それ が ドキュメンテーション 文字 列 で あ る か の よう に 直接 検索 を 行 い ま す 。 
出力 に お い て は 、 M .__test _ _ に お け る キー  K は 、 
name of  M .__test _ _. K  の よう に 表示 さ れ ま す 。 
検索 中 に 見つか っ た クラス も 同様 に 再帰 的 に 検索 が 行 わ れ 、 クラス に 含 ま れ て い る メソッド および ネスト さ れ た クラス に つ い て ドキュメンテーション 文字 列 の テスト が 行 わ れ ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : " プライベート 名 "  の 概念 は 撤廃 さ れ た ため 、 今後 は ドキュメント に し ま せ ん 
13 . 6 . 3 . 2  アクセサ メソッド 
13 . 6 . 3 . 1  型 の 対応 付け 
OMG  IDL  から  Python  へ の 対応 付け は 、  IDL  attribute  宣言 へ の アクセサ 関数 の 定義 を 、 Java  に よ る 対応 付け が 行 う の と ほとんど 同じ よう に 行 い ま す 。 
IDL  宣言 の 対応 付け 
は 、 三 つ の アクセサ 関数 :  someValue  に 対 する  ` ` get ' ' メソッド ( _ get_someValue ( ) ) 、 そして anotherValue  に 対 する ` ` get ' ' および  ``set' ' メソッド  ( _ get_anotherValue ( )  および _ set_anotherValue ( ) )  を 生み出 し ま す 。 
とりわけ 、 対応 付け で は 、 IDL  属性 が 通常 の  Python  属性 と し て アクセス 可能 で あ る こと は 必須 で は あ り ま せ ん : object . someValue  が 動作 する こと は 必須  で は な く  、 AttributeError を 送出 し て も かま い ま せ ん 。 
しかし ながら 、 Python  DOM API  で は 、 通常 の 属性 アクセス が 動作 する こと が 必須 で す 。 
これ は 、 Python IDL  コンパイラ に よ っ て 生成 さ れ た 典型 的 な サロゲーション は まず 動作 する こと は な く 、 DOM  オブジェクト が CORBA  を 解 し て アクセス さ れ る 場合 に は 、 クライアント 上 で ラッパ オブジェクト が 必要 で あ る こと を 意味 し ま す 。  CORBA  DOM  クライアント で は 他 に も いく つ か 考慮 す べ き こと が あ る 一方 で 、 CORBA  を 介 し て  DOM  を 使 っ た 経験 を 持 つ 実装 者 は この こと を 問題 視 し て い ま せ ん 。 
readonly  で あ る と 宣言 さ れ た 属性 は 、 全て の DOM  実装 で 書き込み アクセス を 制限 し て い る と は 限 り ま せ ん 。  さらに 、 アクセサ 関数 は 必須 で は あ り ま せ ん 。 
アクセサ 関数 が 提供 さ れ た 場合 、 Python IDL  対応 付け に よ っ て 定義 さ れ た 形式 を と ら な けれ ば な り ま せ ん が 、 属性 は  Python  から 直接 アクセス する こと が でき る の で 、 それ ら の メソッド は 必須 で は な い と 考え られ ま す 。 
readonly  で あ る と 宣言 さ れ た 属性 に 対 し て は 、 ``set' ' アクセサ を 提供 し て は な り ま せ ん 。 
13 . 6 . 2 . 7  Attr  オブジェクト 
13 . 6 . 2 . 6  Element  オブジェクト 
13 . 6 . 2  DOM  内 の オブジェクト 
Attr  は  Node  を 継承 し て お り 、 全て の 属性 を 受け継 い で い ま す 。 
名前 に コロン が あ れ ば コロン 以降 の 部分 に 、 なけれ ば 名前 全体 に な り ま す 。 
名前 に コロン が あ れ ば コロン 以前 の 部分 に 、 なけれ ば 空 文字 列 に な り ま す 。 
13 . 6 . 2 . 9  Comment  オブジェクト 
NamedNode Map  は  Node  を 継承 し て  い ま せ ん  。 
属性 リスト の 長 さ で す 。 
特定 の インデクス を 持 つ 属性 を 返 し ま す 。 
属性 の 並 び 方 は 任意 で す が 、 DOM  文書 が 生成 さ れ て い る 間 は 一定 に な り ま す 。 
各 要素 は 属性 ノード で す 。 
属性 値 は ノード の  value  属性 で 取得 し て くださ い 。 
この クラス を より マップ 型 的 な 動作 が でき る よう に する 実験 的 な メソッド も あ り ま す 。 
そう し た メソッド を 使 う こと も でき ま す し 、 Element  オブジェクト に 対 し て 、 標準 化 さ れ た getAttribute * ( )  ファミリ の メソッド を 使 う こと も でき ま す 。 
13 . 6 . 2 . 10  Text  オブジェクト および  C DATA Section 
Comment  は  XML  文書 中 の コメント を 表現 し ま す 。 
Comment  は  Node  の サブ クラス で す が 、 子 ノード を 持 つ こと は あ り ま せ ん 。 
文字 列 に よ る コメント の 内容 で す 。 
-  と - 
-  自体 は 含 み ま せ ん 。 
13 . 6 . 2 . 12  例外 
13 . 6 . 2 . 5  Document  オブジェクト 
13 . 6 . 2 . 4  DocumentType  オブジェクト 
Document  は  XML  ドキュメント 全体 を 表現 し 、 その 構成 要素 で あ る 要素 、 属性 、 処理 命令 、 コメント 等 が 入 っ て い ま す 。 
Document  は  Node  から プロパティ を 継承 し て い る こと を 思い出 し て くださ い 。 
ドキュメント の 唯一 無二 の ルート 要素 で す 。 
新た な 要素 ノード を 生成 し て 返 し ま す 。 
要素 は 、 生成 さ れ た 時点 で は ドキュメント 内 に 挿入 さ れ ま せ ん 。 
insertBefore ( )  や appendChild ( )  の よう な 他 の メソッド の 一 つ を 使 っ て 明示 的 に 挿入 を 行 う 必要 が あ り ま す 。 
名前 空間 を 伴 う 新た な 要素 ノード を 生成 し て 返 し ま す 。 
tagName に は プレフィクス  ( prefix )  が あ っ て も かま い ま せ ん 。 
要素 は 、 生成 さ れ た 時点 で は 文書 内 に 挿入 さ れ ま せ ん 。 
insertBefore ( )  や appendChild ( )  の よう な 他 の メソッド の 一 つ を 使 っ て 明示 的 に 挿入 を 行 う 必要 が あ り ま す 。  appendChild ( ) . 
パラメタ で 渡 さ れ た データ の 入 っ た テキスト ノード を 生成 し て 返 し ま す 。 
他 の 生成  ( create )  メソッド と 同じく 、 この メソッド は 生成 さ れ た ノード を ツリー に 挿入 し ま せ ん 。 
パラメタ で 渡 さ れ た データ の 入 っ た コメント ノード を 生成 し て 返 し ま す 。 
パラメタ で 渡 さ れ た target  および  data  の 入 っ た 処理 命令 ノード を 生成 し て 返 し ま す 。 
他 の 生成  ( create )  メソッド と 同じく 、 この メソッド は 生成 さ れ た ノード を ツリー に 挿入 し ま せ ん 。 
属性 ノード を 生成 し て 返 し ま す 。 
この メソッド は 属性 ノード を 特定 の 要素 に 関連 づけ る こと は し ま せ ん 。 
新た に 生成 さ れ た 属性 インスタンス を 使 う に は 、 適切 な  Element  オブジェクト の  setAttributeNode ( )  を 使 わ な けれ ば な り ま せ ん 。 
名前 空間 を 伴 う 新た な 属性 ノード を 生成 し て 返 し ま す 。 
この メソッド は 属性 ノード を 特定 の 要素 に 関連 づけ る こと は し ま せ ん 。 
全て の 下位 要素  ( 直接 の 子 要素 、 子 要素 の 子 要素 、 等 )  から 、 特定 の 要素 型名 を 持 つ もの を 検索 し ま す 。 
全て の 下位 要素  ( 直接 の 子 要素 、 子 要素 の 子 要素 、 等 )  から 、 特定 の 名前 空間  URI  と ローカル 名  ( local  name )  を 持 つ もの を 検索 し ま す 。 
ローカル 名 は 名前 空間 に お け る プレフィクス 以降 の 部分 で す 。 
13 . 6 . 2 . 3  NodeList  オブジェクト 
文書 で 宣言 さ れ て い る 記法  ( notation )  や エンティティ  ( entity )  に 関 する  ( 外部 サブセット ( external  subset )  が パーザ から 利用 でき 、 情報 を 提供 でき る 場合 に は それ も 含め た )  情報 は 、  DocumentType  オブジェクト から 手 に 入れ る こと が でき ま す 。 
文書 の  DocumentType  は 、 Document  オブジェクト の  doctype  属性 で 入手 する こと が でき ま す ;  文書 の  DOCTYPE  宣言 が な い 場合 、 文書 の  doctype  属性 は 、 この インタフェース を 持 つ インスタンス の 代わり に  None  に 設定 さ れ ま す 。 
DocumentType  は  Node  を 特殊 化 し た もの で 、 以下 の 属性 を 加え て い ま す : 
文書 型 定義  ( documenttype definition )  の 外部 サブセット に 対 する 公開 識別 子  ( public  identifier )  で す 。 
文字 列 また は  None に な り ま す 。 
文書 型 定義  ( documenttype definition )  の 外部 サブセット に 対 する システム 識別 子  ( system identifier )  で す 。 
文字 列 の  URI  また は None  に な り ま す 。 
ドキュメント の 完全 な 内部 サブセット を 与え る 文字 列 で す 。  サブセット を 囲 む ブラケット は 含 み ま せ ん 。 
ドキュメント が 内部 サブセット を 持 た な い 場合 、 この 値 は  None  で す 。 
DOCTYPE  宣言 で ルート 要素 の 名前 が 与え られ て い る 場合 、 その 値 に な り ま す 。 
外部 エンティティ の 定義 を 与え る  NamedNode Map  で す 。 
複数 回 定義 さ れ て い る エンティティ に 対 し て は 、 最初 の 定義 だけ が 提供 さ れ ま す  ( その 他 は  XML  勧告 で の 要求 仕様 に よ っ て 無視 さ れ ま す ) 。 
パーザ に よ っ て 情報 が 提供 さ れ な い か 、 エンティティ が 定義 さ れ て い な い 場合 に は 、 この 値 は  None  に な る こと が あ り ま す 。 
記法 の 定義 を 与え る  NamedNode Map  で す 。  複数 回 定義 さ れ て い る 記法 名 に 対 し て は 、 最初 の 定義 だけ が 提供 さ れ ま す  ( その 他 は  XML  勧告 で の 要求 仕様 に よ っ て 無視 さ れ ま す ) 。 
パーザ に よ っ て 情報 が 提供 さ れ な い か 、 エンティティ が 定義 さ れ て い な い 場合 に は 、 この 値 は  None  に な る こと が あ り ま す 。 
Element  は  Node  の サブ クラス で す 。  この ため Node  クラス の 全て の 属性 を 継承 し ま す 。 
要素 型名 で す 。 
名前 空間 使用 の 文書 で は 、 要素 型名 中 に コロン が あ る か も しれ ま せ ん 。 
値 は 文字 列 で す 。 
Document  クラス 内 に お け る 同名 の メソッド と 同じ で す 。 
属性 値 を 文字 列 で 返 し ま す 。 
attrname  で 指定 さ れ た 属性 の  Attr  ノード を 返 し ま す 。 
指定 し た  namespace URI  および  local Name  を 持 つ 属性 値 を 文字 列 と し て 返 し ま す 。 
指定 し た  namespace URI  および  local Name  を 持 つ 属性 値 を ノード と し て 返 し ま す 。 
名前 で 指定 さ れ た 属性 を 削除 し ま す 。 
該当 する 属性 が な く て も 例外 は 送出 さ れ ま せ ん 。 
oldAttr  が 属性 リスト に あ る 場合 、 削除 し て 返 し ま す 。 oldAttr  が 存在 し な い 場合 、 NotFoundErr  が 送出 さ れ ま す 。 
この メソッド は  qname  で は な く  local Name  を 使 う の で 注意 し て くださ い 。 
該当 する 属性 が な く て も 例外 は 送出 さ れ ま せ ん 。 
文字 列 を 使 っ て 属性 値 を 設定 し ま す 。 
新た な 属性 ノード を 要素 に 追加 し ま す 。  name  属性 が 既存 の 属性 に 一致 し た 場合 、 必要 に 応 じ て 属性 を 置き換え ま す 。 
置換 が 生じ る と 、 古 い 属性 ノード が 返 さ れ ま す 。 
newAttr  が すでに 使 わ れ て い れ ば 、 InuseAttributeErr  が 送出 さ れ ま す 。 
新た な 属性 ノード を 要素 に 追加 し ま す 。  namespace URI  および local Name  属性 が 既存 の 属性 に 一致 し た 場合 、 必要 に 応 じ て 属性 を 置き換え ま す 。 
置換 が 生じ る と 、 古 い 属性 ノード が 返 さ れ ま す 。 
newAttr  が すでに 使 わ れ て い れ ば 、 InuseAttributeErr  が 送出 さ れ ま す 。 
指定 さ れ た  namespace URI  および  qname  で 与え られ た 属性 の 値 を 文字 列 で 設定 し ま す 。 
qname  は 属性 の 完全 な 名前 で あ り 、 この 点 が 上記 の メソッド と 違 う の で 注意 し て くださ い 。 
13 . 7 . 3  minidom と  DOM
以下 の プログラム 例 は 、 かなり 現実 的 な 単純 な プログラム の 例 で す 。 
特に この 例 に 関 し て は 、 DOM  の 柔軟 性 を あまり 活用 し て は い ま せ ん 。 
13 . 6 . 2 . 11  Processing Instruction  オブジェクト 
バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
DOM  の 実装 で は 、 適切 な 特定 の 例外 を 送出 し な けれ ば な ら ず 、 各 例外 は  code  属性 に 対応 する 適切 な 値 を 伴 わ な けれ ば な り ま せ ん 。 
全て の 特定 の  DOM  例外 で 使 わ れ て い る 基底 例外 クラス で す 。 
この 例外 クラス は 直接 インスタンス 化 する こと が でき ま せ ん 。 
指定 さ れ た 範囲 の テキスト が 文字 列 に 収ま ら な い 場合 に 送出 さ れ ま す 。  この 例外 は  Python  の  DOM  実装 で 使 わ れ る か どう か は 判 っ て い ま せ ん が 、 Python  で 書 か れ て い な い  DOM  実装 から 送出 さ れ る 場合 が あ り ま す 。 
挿入 でき な い 型 の ノード を 挿入 し よう と 試み た とき に 送出 さ れ ま す 。 
メソッド に 与え た インデクス や サイズ パラメタ が 負 の 値 や 許容 範囲 の 値 を 超え た 際 に 送出 さ れ ま す 。 
文書 中 に すでに 存在 する  Attr  ノード を 挿入 し よう と 試み た 際 に 送出 さ れ ま す 。 
パラメタ また は 操作 が 根底 に あ る オブジェクト で サポート さ れ て い な い 場合 に 送出 さ れ ま す 。 
この 例外 は 、 文字 列 パラメタ が 、 現在 使 わ れ て い る コンテキスト で XML  1 . 0  勧告 に よ っ て 許可 さ れ て い な い 場合 に 送出 さ れ ま す 。 
例えば 、 要素 型 に 空白 の 入 っ た  Element  ノード を 生成 し よう と する と 、 この エラー が 送出 さ れ ま す 。 
ノード の 型 を 変更 し よう と 試み た 際 に 送出 さ れ ま す 。 
定義 さ れ て い な い オブジェクト や 、 もはや 利用 でき な く な っ た オブジェクト を 使 お う と 試み た 際 に 送出 さ れ ま す 。 
に 照ら し て 許可 さ れ て い な い 方法 で オブジェクト を 変更 し よう と 試み た 場合 、 この 例外 が 送出 さ れ ま す 。 
参照 し て い る コンテキスト 中 に 目的 の ノード が 存在 し な い 場合 に 送出 さ れ る 例外 で す 。 
例えば 、 NamedNode Map . removeNamedItem ( )  は 渡 さ れ た ノード が ノード マップ 中 に 存在 し な い 場合 に この 例外 を 送出 し ま す 。 
要求 さ れ た 方 の オブジェクト や 操作 が 実装 で サポート さ れ て い な い 場合 に 送出 さ れ ま す 。 
データ 属性 を サポート し な い ノード に データ を 指定 し た 際 に 送出 さ れ ま す 。 
オブジェクト に 対 し て  ( 読み出し 専用 ノード に 対 する 修正 の よう に )  許可 さ れ て い な い 修正 を 行 お う と 試み た 際 に 送出 さ れ ま す 。 
無効 また は 不正 な 文字 列 が 指定 さ れ た 際 に 送出 さ れ ま す 。 
ノード が 現在 属 し て い る 文書 と 異な る 文書 に 挿入 さ れ 、 かつ あ る 文書 から 別 の 文書 へ の ノード の 移行 が 実装 で サポート さ れ て い な い 場合 に 送出 さ れ ま す 。 
DOM  勧告 で 定義 さ れ て い る 例外 コード は 、 以下 の テーブル に 従 っ て 上記 の 例外 と 対応 付け られ ま す : 
例外 
13 . 6 . 2 . 1  DOMImplementation  オブジェクト 
13 . 6 . 2 . 2  Node  オブジェクト 
DOMImplementation  インタフェース は 、 利用 し て い る  DOM  実装 に お い て 特定 の 機能 が 利用 可能 か どう か を 決定 する ため の 方法 を アプリケーション に 提供 し ま す 。 
DOM  レベル 2  で は 、 DOMImplementation  を 使 っ て 新た な Document  オブジェクト や  DocumentType  オブジェクト を 生成 する 機能 も 追加 し て い ま す 。 
Python  の  DOM API  定義 は 
モジュール ドキュメント の 一部 と し て 与え られ て い ま す 。 
と の 違い に つ い て 列挙 し ま す 。 
DOM  と の 内部 的 な 参照 を 破壊 し て 、 循環 参照 ガベージ コレクション を 持 た な い バージョン の  Python  で も ガベージ コレクション さ れ る よう に し ま す 。 
循環 参照 ガベージ コレクション が 利用 でき て も 、 この メソッド を 使 え ば 、 大量 の メモリ を すぐ に 使え る よう に でき る ため 、 必要 な く な っ た ら すぐ に この メソッド を  DOM  オブジェクト に 対 し て 呼 ぶ の が 良 い 習慣 で す 。 
この メソッド は  Document  オブジェクト に 対 し て だけ 呼び出 せ ば よ い の で す が 、 ある ノード の 子 ノード を 放棄 する ため に 子 ノード に 対 し て 呼び出 し て も かま い ま せ ん 。 
XML  を  writer  オブジェクト に 書き込 み ま す 。 
writer は 、 ファイル オブジェクト インタフェース の  write ( )  に 該当 する メソッド を 持 た な けれ ば な り ま せ ん 。 
indent  パラメタ に は 現在 の ノード の インデント を 指定 し ま す 。 
addindent  パラメタ に は 現在 の ノード の 下 に サブ ノード を 追加 する 際 の インデント 増分 を 指定 し ま す 。 
newl に は 、 改行 時 に 行末 を 終端 する 文字 列 を 指定 し ま す 。 
バージョン  2 . 1  で  変更  さ れ た 仕様 : 美し い 出力 を サポート する ため 、 新た な キー ワード 引数 indent 、 addindent 、 および  newl が 追加 さ れ ま し た 
バージョン  2 . 3  で  変更  さ れ た 仕様 : Document  ノード に 対 し て 、 追加 の キー ワード 引数 encoding  を 使 っ て 、 XML  ヘッダ の  encoding  フィールド を 指定 でき る よう に な り ま し た 
DOM  が 表現 し て い る  XML  を 文字 列 に し て 返 し ま す 。  引数 が な けれ ば 、  XML  ヘッダ は  encoding  を 指定 せ ず 、 文書 内 の 全て の 文字 を デフォルト エンコード 方式 で 表示 でき な い 場合 、 結果 は  Unicode  文字 列 と な り ま す 。 
この 文字 列 を  UTF - 8  以外 の エンコード 方式 で エンコード する の は 不正 で あ り 、 なぜ なら  UTF - 8  が XML  の デフォルト エンコード 方式 だ から で す 。  明示 的 な  encoding  引数 が あ る と 、 結果 は 指定 さ れ た エンコード 方式 に よ る バイト 文字 列 と な り ま す 。 
引数 を 常 に 指定 する よう 推奨 し ま す 。 
表現 不 可能 な テキスト データ の 場合 に  Unicode Error  が 送出 さ れ る の を 避け る ため 、 encoding  引数 は  " utf - 8 "  に 指定 する べ き で す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : encoding  が 追加 さ れ ま し た 
美し く 出力 さ れ た バージョン の 文書 を 返 し ま す 。 indent  は インデント を 行 う ため の 文字 で 、 デフォルト は タブ で す ;  newl に は 行末 で 出力 さ れ る 文字 列 を 指定 し 、 デフォルト は  n  で す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : encoding  引数 の 追加 ;  toxml  を 参照 
以下 の 標準  DOM  メソッド は 、 
で は 特別 な 注意 を する 必要 が あ り ま す : 
この メソッド は  Python  2 . 0  に パッケージ さ れ て い る バージョン の 
に は あ り ま し た が 、 これ に は 深刻 な 障害 が あ り ま す 。 
以降 の リリース で は 修正 さ れ て い ま す 。 
XML  文書 内 の 処理 命令 を 表現 し ま す ;  Node  インタフェース を 継承 し て い ま す が 、 子 ノード を 持 つ こと は でき ま せ ん 。 
最初 の 空白 文字 まで の 処理 命令 の 内容 で す 。 
読み出し 専用 の 属性 で す 。 
最初 の 空白 文字 以降 の 処理 命令 の 内容 で す 。 
13 . 6 . 2 . 10  Text  オブジェクト および  C DATA Section  オブジェクト 
Text  インタフェース は  XML  文書 内 の テキスト を 表現 し ま す 。 
パーザ および  DOM  実装 が  DOM の  XML  拡張 を サポート し て い る 場合 、 C DATA  で マーク さ れ た 区域  ( section )  に 入れ られ て い る 部分 テキスト は  C DATA Section  オブジェクト に 記憶 さ れ ま す 。 
これ ら 二 つ の インタフェース は 同一 の もの で す が 、 nodeType 属性 が 異な り ま す 。  これ ら の インタフェース は  Node  インタフェース を 拡張 し た もの で す 。 
しかし子 ノード を 持 つ こと は でき ま せ ん 。 
文字 列 に よ る テキスト ノード の 内容 で す 。 
注意 :  CDATA Section  ノード の 利用 は 、 ノード が 完全 な  C DATA  マーク 区域 を 表現 する と い う 意味 で は な く 、 ノード の 内容 が  C DATA  区域 の 一部 で あ る と い う こと を 意味 する だけ で す 。 
単一 の  C DATA  セクション は 文書 ツリー 内 で 複数 の ノード と し て 表現 さ れ る こと が あ り ま す 。 
二 つ の 隣接 する  C DATA Section ノード が 、 異な る  C DATA  マーク 区域 か どう か を 決定 する 方法 は あ り ま せ ん 。 
DOM  仕様 で 使 わ れ て い る 基本 的 な  IDL  型 は 、 以下 の テーブル に 従 っ て Python  の 型 に 対応 付け られ て い ま す 。 
IDL  型 
Python  型 
IntegerType  ( 値  0  また は  1 )  に よ る 
さらに 、 勧告 で 定義 さ れ て い る  DOMString  は 、 Python  文字 列 また は  Unicode  文字 列 に 対応 付け られ ま す 。 
アプリケーション で は 、 DOM  から 文字 列 が 返 さ れ る 際 に は 常 に  Unicode  を 扱え な けれ ば な り ま せ ん 。  IDL  の null  値 は  None  に 対応 付け られ て お り 、 API  で null  の 使用 が 許 さ れ て い る 場所 で は 常 に 受理 さ れ る か 、 あるいは 実装 に よ っ て 提供 さ れ る はず で す 。 
DTDHandler  インスタンス は 以下 の メソッド を 提供 し ま す 。 
表記 法 宣言 イベント の 通知 を 捕捉 し ま す 。 
未 構文 解析 エンティティ 宣言 イベント の 通知 を 受け取 り ま す Handlean unparsed entity declaration event . 
UserDict . DictMixin  クラス で 提供 さ れ て い る メソッド に 加え 、 dumbdbm  オブジェクト で は 以下 の メソッド を 提供 し て い ま す 。 
ディスク 上 の 辞書 と データ ファイル を 同期 し ま す 。 
この メソッド は Shelve  オブジェクト の sync  メソッド から 呼び出 さ れ ま す 。 
4 . 1  名前 づけ と 束縛  ( naming  and 
自由 変数 の 入 っ た 入れ子 スコープ  ( nested scope )  を 併用 する と 、 Python  の 文 が 不正 な 文 に な る 場合 が いく つ か あ り ま す 。  ある 変数 が スコープ の 外側 から 参照 さ れ た 場合 、 その 名前 に 対 する 削除 操作 は 不正 に な り ま す 。 
この 場合 、 コンパイル 時 に エラー が 報告 さ れ る こと に な り ま す 。  ワイルド カード 形式 の import  文-- "import* "--  を 関数 内 で 使 っ た 場合 や 、 関数 が 自由 変数 を 含 ん で い たり 、 自由 変数 を 伴 う 入れ子 ブロック で あ る 場合 、 コンパイラ は  SyntaxError  を 送出 し ま す 。 
exec  が 関数 内 で 使 わ れ て お り 、 関数 が 自由 変数 を 含 ん で い たり 、 自由 変数 を 伴 う 入れ子 ブロック で あ る 場合 、 exec  に 明示 的 に ローカル 名前 空間 を 指定 し な い かぎり コンパイラ は  SyntaxError  を 送出 し ま す 。 
名前 が 呼び出 し 側 の ローカル 名前 空間 や グローバル 名前 空間 から 解決 さ れ る こと は あ り ま す 。 
自由 変数 は 最内 名前 空間 で は な く 、 グローバル 名前 空間 から 解決 さ れ ま す 。 
exec  文 と 、 関数  eval ( )  および execfile ( )  に は オプション の 引数 が あ り 、 グローバル および ローカル 名前 空間 を オーバライド でき ま す 。 
名前 空間 を 一 つ しか 指定 し な けれ ば 、 両方 の 名前 空間 と し て 使 わ れ ま す 。 
. . . 自由 変数 は 最内 名前 空間 で は な く 、 グローバル 名前 空間 から 解決 さ れ ま す 。 
この 制限 は 、 上記 の 操作 に よ っ て 実行 さ れ る コード が 、 モジュール を コンパイル し た とき に は 利用 でき な い ため に 起こ り ま す 。 
4 .  Windows  上 で の  C 
Unix  と  Windows  で は 、 コード の 実行 時 読み込み に 全く 異な る パラダイム を 用い て い ま す 。 
動的 ロード さ れ る よう な モジュール を ビルド し よう と する 前 に 、 自分 の システム が どの よう に 動作 する か 知 っ て お い て くださ い 。 Unix  で は 、 共有 オブジェクト  (.so)  ファイル に プログラム が 使 う コード 、 そして プログラム 内 で 使 う 関数 名 や データ が 入 っ て い ま す 。 
ファイル が プログラム に 結合 さ れ る と 、 これ ら の 関数 や データ に 対 する ファイル の コード 内 の 全て の 参照 は 、 メモリ 内 で 関数 や データ が 配置 さ れ て い る 、 プログラム 中 の 実際 の 場所 を 指 す よう に 変更 さ れ ま す 。 
これ は 基本 的 に は リンク 操作 に あた り ま す 。  Windows  で は 、 動的 リンクライブラリ  (.dll )  ファイル に は ぶら下がり 参照  ( dangling  reference )  は あ り ま せ ん 。 
その 代わ り 、 関数 や データ へ の アクセス は ルック アップ テーブル を 介 し ま す 。 
共有 オブジェクト ファイル  (.so)  を 作成 する リンク 処理 の 段階 中 に 、 リンカ は 定義 場所 の 不明 な 識別 子 に 遭遇 する こと が あ り ま す 。 
この とき リンカ は ライブラリ 内 の オブジェクト ファイル を 検索 し ま す ;  もし 識別 子 が 見つか る と 、 リンカ は その オブジェクト ファイル から 全て の コード を 取り込 み ま す 。  Windows  で は 、 二 つ の 形式 の ライブラリ 、 静的 ライブラリ と インポート ライブラリ が あ り ま す  ( どちら も . lib  と 呼 ば れ て い ま す ) 。 
静的 ライブラリ は  Unix  に お け る  . a  ファイル に 似 て い ま す ; この ファイル に は 、 必要 に 応 じ て 取り込 ま れ る よう な コード が 入 っ て い ま す 。  インポート ライブラリ は 、 基本 的 に は 特定 の 識別 子 が 不正 で は な く 、 DLL  が ロード さ れ た 時点 で 存在 する こと を 保証 する ため に だけ 使 わ れ ま す 。 
リンカ は インポート ライブラリ から の 情報 を 使 っ て ルック アップ テーブル を 作成 し 、 DLL  に 入 っ て い な い 識別 子 を 使え る よう に し ま す 。 
Windows  で は 、 A . dll  を ビルド する と A . lib  も ビルド さ れ ま す 。 
B  や  C  の リンク に は A . lib  を 渡 し ま す 。 
A . lib  に は コード は 入 っ て い ま せ ん ;  単に  A  の コード に アクセス する する ため に 実行 時 に 用い られ る 情報 が 入 っ て い る だけ で す 。 
Windows  で は インポート ライブラリ の 使用 は  " importspam " と する よう な もの で す ;  この 操作 に よ っ て  spam  の 名前 に アクセス でき ま す が 、 コード の コピー を 個別 に 作成 し たり は し ま せ ん 。 
Unix  で は 、 ライブラリ と の リンク は むしろ  " from spam import* "  に 似 て い ま す ;  この 操作 で は 個別 に コード の コピー を 生成 し ま す 。 
6 . 2 7 . 1  ロケール の 背景 、 詳細 、 ヒント 、 助言 および 補足 説明 
6 . 2 7 . 3  メッセージ カタログ へ の アクセス 
拡張 モジュール は 、 現在 の ロケール を 調べ る 以外 は 、 決して setlocale ( )  を 呼び出 し て は な り ま せ ん 。 
しかし 、 返 さ れ る 値 も ロケール の 復帰 の ため に 使え る だけ な の で 、 さほど 便利 と は いえ ま せ ん  ( 例外 は おそらく ロケール が  " C "  か どう か 調べ る こと で しょ う ) 。  ロケール を 変更 する ため に  Python  コード で  locale  モジュール を 使 っ た 場合 、 Python  を 埋め込 ん で い る アプリケーション に も 影響 を 及ぼ し ま す 。 
Python  を 埋め込 ん で い る アプリケーション に 影響 が 及 ぶ こと を 望 ま な い 場合 、 config . c  ファイル 内 の 組み込 み モジュール の テーブル から _ locale  拡張 モジュール  ( ここ で 全て を 行 っ て い ま す )  を 削除 し 、 共有 ライブラリ から _ locate  モジュール に アクセス でき な い よう に し て くださ い 。 
Python  インタプリタ の 埋め込み を 行 う 人  ( いわば 拡張 モジュール の 書き手 の 対極 )  が 気 に かけ な けれ ば な ら な い 重要 な タスク は 、 Python  インタプリタ の 初期 化 処理  ( initialization ) 、 そして おそらく は 終了 処理  ( finalization )  で す 。 
この 関数 は ロード 済み の モジュール から な る テーブル を 作成 し 、 土台 と な る モジュール __builtin__
,  および exceptions 
を 作成 し ま す 。  また 、 モジュール 検索 パス  ( sys . path ) 
の 初期 化 も 行 い ま す 。  Py _ Initialize ( )  の 中 で は 、 `` スクリプト へ の 引数 リスト ' ' ( scriptargument  list , sys . argv  の こと )  を 設定 し ま せ ん 。 
この 変数 が 後 に 実行 さ れ る  Python  コード 中 で 必要 なら 、 Py _ Initialize ( )  に 続 い て PySys_ SetArgv( argc ,  argv ) 
を 呼び出 し て 明示 的 に 設定 し な けれ ば な り ま せ ん 。  ほとんど の システム で は  ( 特に  Unix  と  Windows  は 、 詳細 が わずか に 異な り は し ま す が ) 、  Py _ Initialize ( )  は 標準 の  Python  インタプリタ 実行 形式 の 場所 に 対 する 推定 結果 に 基づ い て 、 Python  の ライブラリ が  Python  インタプリタ 実行 形式 から の 相対 パス で 見つか る と い う 仮定 の 下 に モジュール 検索 パス を 計算 し ま す 。 
) ユーザ は  PYTHONHOME  を 設定 する こと で この 動作 を オーバライド し たり 、 PYTHONPATH  を 設定 し て 追加 の ディレクトリ を 標準 モジュール 検索 パス の 前 に 挿入 し たり でき ま す 。  埋め込み を 行 う アプリケーション で は 、 Py _ Initialize ( )  を 呼び出 す  前 に  Py _ Set Program Name ( file ) 
を 呼び出 す こと で 、 上記 の 検索 を 操作 でき ま す 。 
この 埋め込 み アプリケーション で の 設定 は 依然 と し て  PYTHONHOME  で オーバライド でき 、 標準 の モジュール 検索 パス の 前 に は 以前 と し て PYTHONPATH  が 挿入 さ れ る の で 注意 し て くださ い 。 
アプリケーション で モジュール 検索 パス を 完全 に 制御 し た い の なら 、 独自 に Py _ GetPath ( ) 
,  および Py _ Get ProgramFullPath ( ) 
の 実装 を 提供 し な けれ ば な り ま せ ん  ( これ ら は 全て Modules\/getpath . c  で 定義 さ れ て い ま す ) 。  たまに 、  Python  を ` ` 初期 化 し な い ' '  よう に し た い こと が あ り ま す 。 
Py _ Finalize ( )  を 使 う と 、 こう し た 処理 を 実現 でき ま す 。  また 、 関数 Py _ IsInitialized ( ) 
は 、 Python  が 現在 初期 化 済み の 状態 に あ る 場合 に 真 を 返 し ま す 。 
これ ら の 関数 に つ い て の さらなる 情報 は 、 後 の 章 で 説明 し ま す 。 
5 .  他 の アプリケーション へ の  Python  の 埋め込 み 
C + +  プログラム 中 に も  Python  を 埋め込め ま す ;  厳密 に 言 う と 、 どう や っ て 埋め込 む か は 使 っ て い る C + +  処理 系 の 詳細 に 依存 し ま す ; 一般 的 に は 、 メイン プログラム を C + + で 書 き 、 C + +  コンパイラ を 使 っ て プログラム を コンパイル ・ リンク する 必要 が あ る で しょ う 。 
Python  自体 を  C + + で コンパイル し なお す 必要 は あ り ま せ ん 。 
Python  スクリプト 中 の 最初 の 行 か 、 二 行 目 に あ る コメント が 正規 表現 coding [ = : ] s* ( [ - w . ] + )  に マッチ する 場合 、 コメント は エンコード 宣言  ( encoding  declaration )  と し て 処理 さ れ ま す ; 表現 に 対 する 最初 の マッチ グループ が ソース コード ファイル の エンコード を 指定 し ま す 。 
エンコード 宣言 式 と し て 推奨 する 形式 は 、 GNU  Emacs  が 認識 でき る 形式 
また は 、 Bram  Moolenar  に よ る  VIM  が 認識 でき る 形式 
宣言 さ れ た エンコード は 全て の 字句 解析 、 特に 文字 列 の 終端 を 検出 する 際 や Unicode  リテラル の 内容 を 翻訳 する 上 で 用い られ ま す 。  文字 列 リテラル は 文法 的 な 解析 を 行 う ため に  Unicode  に 変換 さ れ 、 解釈 が 行 わ れ る 前 に 元 の エンコード に 戻 さ れ ま す 。 
エンコード 宣言 は 宣言 全体 が 一行 に 収ま っ て い な けれ ば な り ま せ ん 。 
エンティティ の システム 識別 子 を 解決 し 、 文字 列 と し て 読み込 ん だ システム 識別 子 あるいは  InputSource  オブジェクト の いずれ か を 返 し ま す 。 
デフォルト の 実装 で は  systemId  を 返 し ま す 。 
1 . 3  例 に 戻 る 
Python  インタプリタ 全体 を 通 し て 、 一 つ の 重要 な 取り決め が あ り ま す : それ は 、 関数 が 処理 に 失敗 し た 場合 、 例外 状態 を セット し て 、 エラー を 示 す 値  ( 通常 は  NULL  ポインタ )  を 返 さ ね ば な ら な い 、 と い う こと で す 。 
例外 は インタプリタ 内 の 静的 な グローバル 変数 に 保存 さ れ ま す ; この 値 が  NULL  の 場合 、 例外 は 何 も 起き て い な い こと に な り ま す 。 
第 二 の グローバル 変数 に は 、 例外 の  ` ` 付属 値  ( associated value ) ' '( raise  文 の 第 二 引数 )  が 入 り ま す 。 
第 三 の 値 に は 、 エラー の 発生 源 が  Python  コード 内 だっ た 場合 に スタック トレース バック  ( stack traceback )  が 入 り ま す 。 
これ ら の 三 つ の 変数 は 、 それぞれ  Python  の 変数 sys . exc_type 、 sys . exc _ value  および sys . exc _traceback  と 等価 な  C  の 変数 で す ( 
の sys  モジュール に 関 する 節 を 参照 し て くださ い 。 
引数 は 例外 オブジェクト と  C  文字 列 で す 。 
例外 オブジェクト は 通常 、 PyExc _ZeroDivisionError  の よう な 定義 済み の オブジェクト で す 。 
もっとも 汎用 的 な 関数 は PyErr_ SetObject ( )  で 、 二 つ の オブジェクト 、 例外 と 付属 値 を 引数 に と り ま す 。 
これ ら 関数 に 渡 す オブジェクト に は Py _ INCREF ( )  を 使 う 必要 は あ り ま せ ん 。  例外 が セット さ れ て い る か どう か は 、 PyErr_Occurred ( )  を 使 っ て 非 破壊 的 に 調べ られ ま す 。 
この 関数 は 現在 の 例外 オブジェクト を 返 し ま す 。  例外 が 発生 し て い な い 場合 に は  NULL  を 返 し ま す 。 
以下 同様 に 続 き ま す --  エラー の 最も 詳し い 原因 は 、 最初 に エラー を 検出 し た 関数 が すでに 報告 し て い る から で す 。 
エラー が  Python  インタプリタ の メイン ループ に 到達 する と 、 現在 実行 中 の  Python  コード は 一時 停止 し 、  Python  プログラマ が 指定 し た 例外 ハンドラ を 探し出 そ う と し ま す 。  ( モジュール が PyErr_*( )  関数 を もう 一 度 呼び出 し て 、 より 詳細 な エラー メッセージ を 提供 する よう な 状況 が あ り ま す 。 
この よう な 状況 で は そう す べ き で す 。  と は い え 、 一般 的 な 規則 と し て は 、 PyErr_*()  を 何 度 も 呼び出 す 必要 は な く 、 と も すれ ば エラー の 原因 に 関 する 情報 を 失 う 結果 に な り がち で す :  これ に よ り 、 ほとんど の 操作 が 様々 な 理由 から 失敗 する か も しれ ま せ ん ) ある 関数 呼び出し で の 処理 の 失敗 に よ っ て セット さ れ た 例外 を 無視 する に は 、 PyErr_ Clear ( )  を 呼び出 し て 例外 状態 を 明示 的 に 消去 し な く て は な り ま せ ん 。 
エラー を インタプリタ に は 渡 し た く な く 、 自前 で  ( 何 か 他 の 作業 を 行 っ たり 、 何 も 起こ ら な かっ た か の よう に 見せかけ る よう な )  エラー 処理 を 完全 に 行 う 場合 に のみ 、 PyErr_ Clear ( )  を 呼び出 す よう に す べ き で す 。 malloc ( )  の 呼び出 し 失敗 は 、 常 に 例外 に し な く て は な り ま せ ん --malloc ( )  ( また は  realloc ( ) ) を 直接 呼び出 し て い る コード は 、 PyErr_ NoMemory ( )  を 呼び出 し て 、 失敗 を 示 す 値 を 返 さ ね ば な り ま せ ん 。 
PyExc _ZeroDivisionError  の よう に 、 全て の 組み込み の  Python  例外 に は 対応 する 宣言 済み の  C  オブジェクト が あ り 、 直接 利用 でき ま す 。  もちろん 、 例外 の 選択 は 賢 く 行 わ ね ば な り ま せ ん -- ファイル が 開け な かっ た こと を 表 す の に PyExc_TypeError  を 使 っ たり は し な い で くださ い  ( この 場合 は おそらく PyExc _ IOError  の 方 に す べ き で しょ う ) 。 
引数 リスト に 問題 が あ る 場合 に は 、 PyArg _ ParseTuple ( )  は たいてい  PyExc_TypeError  を 送出 し ま す 。  引数 の 値 が 特定 の 範囲 を 超え て い たり 、 その 他 の 満た す べ き 条件 を 満た さ な かっ た 場合 に は 、 PyExc _ValueError  が 適切 で す 。 
モジュール 固有 の 新た な 例外 も 定義 でき ま す 。  定義 する に は 、 通常 は ファイル の 先頭 部分 に 静的 な オブジェクト 変数 の 宣言 を 行 い ま す : 
そして 、 モジュール の 初期 化 関数  ( initspam ( ) ) の 中 で 、 例外 オブジェクト を 使 っ て 初期 化 し ま す  ( ここ で は エラー チェック を 省略 し て い ま す ) : 
Python  レベル で の 例外 オブジェクト の 名前 は  spam . error に な る こと に 注意 し て くださ い 。 
PyErr_ NewException ( )  関数 は 、 
の  ` ` 組み込 み 例外 ' ' の 節 に 述べ られ て い る Exception  クラス を 基底 クラス に 持 つ 例外 クラス も 作成 でき ま す  ( NULL の 代わり に 他 の クラス を 渡 し た 場合 は 別 で す ) 。  SpamError  変数 は 、 新た に 生成 さ れ た 例外 クラス へ の 参照 を 維持 する こと に も 注意 し て くださ い ;  これ は 意図 的 な 仕様 で す ! 外部 の コード が 例外 オブジェクト を モジュール から 除去 でき る ため 、 モジュール から 新た に 作成 し た 例外 クラス が 見え な く な り 、 SpamError  が ぶら下がり ポインタ  ( dangling  pointer ) に な っ て しま わ な い よう に する ため に 、 クラス に 対 する 参照 を 所有 し て お か ね ば な り ま せ ん 。 
もし SpamError  が ぶら下がり ポインタ に な っ て しま う と 、 C  コード が 例外 を 送出 し よう と し た とき に コア ダンプ や 意図 し な い 副 作用 を 引き起こ す こと が あ り ま す 。  この 例 に あ る 、 関数 の 戻 り 値型 に  PyMODINIT_ FUNC  の 使 う 方法 に つ い て は 後 で 議論 し ま す 。 
Python  は 、 式 を 左 から 右 へ と 順 に 評価 し て ゆ き ま す 。 
ただし 、 代入 式 を 評価 する 最 に は 、 代入 演算 子 の 右側 項 が 左側 項 より も 先 に 評価 さ れ る の で 注意 し て くださ い 。 
以下 に 示 す 実行 文 の 各行 で の 評価 順序 は 、 添え 字 の 数字 順序 と 同じ に な り ま す :  expr 1 , expr 2 , expr 3 , expr 4 ( expr 1 , expr 2 , expr 3 , expr 4 ) { expr 1 :  expr 2 , expr 3 : expr 4 } expr 1  +  expr 2 *  ( expr 3  - expr 4 ) func ( expr 1 , expr 2 , * expr 3, * * expr 4 ) expr 3 , expr 4  =  expr 1 , expr 2 
7 . 5 . 4 . 1  Semaphore  の 例 
wait ( ) メソッド は フラグ が True に な る まで ブロック し ま す 。 
クラス Event 
内部 フラグ の 初期 値 は 偽 で す 。 
内部 フラグ の 値 が 真 で あ る 場合 かつ その 場合 に のみ 真 を 返 し ま す 。 
フラグ の 値 が 真 に な る の を 待 っ て い る 全て の スレッド を 起こ し ま す 。 
一旦 フラグ が 真 に な る と 、 スレッド が wait( )  を 呼び出 し て も 全く ブロック し な く な り ま す 。 
内部 フラグ の 値 を 偽 に リセット し ま す 。 
以降 は 、 set ( )  を 呼び出 し て 再び 内部 フラグ の 値 を 真 に セット する まで 、 wait( )  を 呼出 し た スレッド は ブロック する よう に な り ま す 。 
内部 フラグ の 値 が 真 に な る まで ブロック し ま す 。 
wait( )  処理 に 入 っ た 時点 で 内部 フラグ の 値 が 真 で あ れ ば 、 直ちに 処理 を 戻 し ま す 。 
そう で な い 場合 、 他 の スレッド が set ( ) を 呼び出 し て フラグ の 値 を 真 に セット する か 、 オプション の タイム アウト が 発生 する まで ブロック し ま す 。 timeout 引数 を 指定 し て 、 None 以外 の 値 に する 場合 、 タイム アウト を 秒  ( また は 端数 秒 )  を 表 す 浮動 小数 点数 で な けれ ば な り ま せ ん 。 
次 の 関数 は Python  1 . 4 まで の 標準 import 文 ( 階層 的 な モジュール 名 が な い ) を エミュレート し ま す 。 
( この 実装 は その バージョン で は 動作 し な い で しょ う 。  なぜ なら 、 find _ module ( ) は 拡張 さ れ て お り 、 また load _ module ( ) が 1 . 4 で 追加 さ れ て い る から で す 。 
階層 的 な モジュール 名 を 実装 し 、 reload ( ) 
関数 を 含 む より 完全 な 例 は モジュール knee 
に あ り ま す 。 
knee モジュール は Python の ソース ディストリビューション の 中 の Demo\/imputil \/ に あ り ま す 。 
6  パッケージ イン デクス に 登録 する 
1 pure Python  配布 物 
この 章 で 説明 する 関数 を 使 う と 、 Python の 例外 の 処理 や 送出 が でき る よう に な り ま す 。 
Python の 例外 処理 の 基本 を いくら か 理解 する こと が 大切 で す 。 
例外 は Unix errno 変数 に やや 似 た 機能 を 果た し ま す :  発生 し た 中 で 最も 新し い エラー の ( スレッド 毎 の ) グローバル な インジケータ が あ り ま す 。 
実行 に 成功 し た 場合 に は ほとんど の 関数 が これ を クリア し ま せ ん が 、 失敗 し た とき に は エラー の 原因 を 示 す ため に 設定 し ま す 。 
エラー を 処理 し て 例外 を クリア する か 、 あるいは ( オブジェクト 参照 また は メモリ 割り当て の よう な ) それ が 持 つ どんな リソース も 取り除 い た 後 に 戻 る か の どちら か 一方 を 行 う 責任 が あ り ま す 。  エラー を 処理 する 準備 を し て い な けれ ば 、 普通 に 続け る べ き で は あ り ま せ ん 。 
エラー の ため に 戻 る 場合 は 、 エラー が 設定 さ れ て い る と 呼び出 し 元 に 知 ら せ る こと が 大切 で す 。 
エラー が 処理 さ れ て い な い 場合 また は 丁寧 に 伝え られ て い る 場合 に は 、 Python\/C API の さらなる 呼び出し は 意図 し た 通り に は 動 か な い 可能 性 が あ り 、 不可解 な 形 で 失敗 する か も しれ ま せ ん 。  エラー インジケータ は 
Python 変数 sys . exc_type , sys . exc _ value  および sys . exc _traceback に 対応 する 三 つ の Python オブジェクト からから な り ま す 。 
いろいろ な 方法 で エラー インジケータ と やりとり する ため に API 関数 が 存在 し ま す 。 
各 スレッド に 別々 の エラー インジケータ が あ り ま す 。 
sys . stderr へ 標準 トレース バック を プリント し 、 エラー インジケータ を クリア し ま す 。 
エラー インジケータ が 設定 さ れ て い る とき に だけ 、 この 関数 を 呼び出 し て くださ い 。 
( それ 以外 の 場合 、 致命 的 な エラー を 引き起こ す で しょ う ! ) 
エラー インジケータ が 設定 さ れ て い る か テスト し ま す 。 
設定 さ れ て い る 場合 は 、 例外 の 型 ( PyErr_ Set* ( ) 関数 の 一 つ あるいは PyErr_ Restore ( ) へ の 最も 新し い 呼び出し に 対 する 第 一 引数 ) を 返 し ま す 。 
設定 さ れ て い な い 場合 は NULL を 返 し ま す 。 
あなた は 戻 り 値 へ の 参照 を 持 っ て い ま せ ん の で 、 それ に Py _ DECREF ( ) する 必要 は あ り ま せ ん 。 
注意 : 戻 り 値 を 特定 の 例外 と 比較 し な い で くださ い 。 
" PyErr_ GivenException Matches ( PyErr_Occurred ( ) ,  exc ) " と 同じ 。 
例外 が 実際 に 設定 さ れ た とき に だけ 、 これ を 呼び出 だ す べ き で す 。  例外 が 発生 し て い な い なら ば 、 メモリ アクセス 違反 が 起き る で しょ う 。 
given 例外 が exc の 例外 と 一致 する なら 真 を 返 し ま す 。 
これ は exc が クラス オブジェクト で あ る 場合 も 真 を 返 し ま す 。  これ は given が サブ クラス の インスタンス で あ る とき も 真 を 返 し ま す 。 
exc が タプル なら ば 、 タプル 内 ( と 再帰 的 に サブタプル 内 ) の すべて の 例外 が 一致 する か 調べ られ ま す 。 
given が NULL なら ば 、 メモリ アクセス 違反 が 起き る で しょ う 。 
ある 状況 で は 、 以下 の PyErr_ Fetch ( ) が 返 す 値 は ` ` 正規 化 さ れ て い な い ' ' 可能 性 が あ り ま す 。  つまり 、 * exc 
は クラス オブジェクト だ が * val 
は 同じ クラス の インスタンス で は な い と い う 意味 で す 。 
この 関数 は その よう な 場合 に その クラス を インスタンス 化 する ため に 使 わ れ ま す 。 
その 値 が すでに 正規 化 さ れ て い る 場合 は 何 も 起き ま せ ん 。 
遅延 正規 化 は パフォーマンス を 改善 する ため に 実装 さ れ て い ま す 。 
エラー インジケータ を クリア し ま す 。 
エラー インジケータ が 設定 さ れ て い な い なら ば 、 効果 は あ り ま せ ん 。 
エラー インジケータ を アドレス を 渡 す 三 つ の 変数 の 中 へ 取り出 し ま す 。 
エラー インジケータ が 設定 さ れ て い な い 場合 は 、 三 つ すべて の 変数 を NULL に 設定 し ま す 。 
エラー インジケータ が 設定 さ れ て い る 場合 は クリア さ れ 、 あなた は 取り出 さ れ た それぞれ の オブジェクト へ の 参照 を 持 つ こと に な り ま す 。 
型 オブジェクト が NULL で な い とき で さえ 、 その 値 と トレース バック オブジェクト は NULL か も しれ ま せ ん 。 
注意 : 通常 、 この 関数 は 例外 を 扱 う 必要 の あ る コード あるいは エラー インジケータ を 一時 的 に 保存 し て 元 に 戻 す 必要 の あ る コード に よ っ て のみ 使用 さ れ ま す 。 
三 つ の オブジェクト から エラー インジケータ を 設定 し ま す 。 
エラー インジケータ が すでに 設定 さ れ て い る 場合 は 、 最初 に クリア さ れ ま す 。 
オブジェクト が NULL なら ば 、 エラー インジケータ が クリア さ れ ま す 。 
NULL の type と 非 NULL の value あるいは traceback を 渡 し て は いけ ま せ ん 。 
例外 の 型 ( type ) は クラス で あ る べ き で す 。 
無効 な 例外 の 型 ( type ) あるいは 値 ( value ) を 渡 し て は いけ ま せ ん 。  ( これ ら の 規則 を 破 る と 後 で 気付 き にく い 問題 の 原因 と な る で しょ う 。 
) この 呼び出し は それぞれ の オブジェクト へ の 参照 を 取り除 き ま す :  あなた は 呼び出し の 前 に それぞれ の オブジェクト へ の 参照 を 持 た な けれ ば な ら な い の で あ り 、 また 呼び出し の 後 に は もはや これ ら の 参照 を 持 っ て い ま せ ん 。 
( これ を 理解 し て い な い 場合 は 、 この 関数 を 使 っ て は いけ ま せ ん 。 
注意 し て お き ま す 。 
これ は エラー インジケータ を 設定 する ため の 最も 一般 的 な 方法 で す 。 
第 一 引数 は 例外 の 型 を 指定 し ま す 。 
通常 は 標準 例外 の 一 つ 、 例えば PyExc _RuntimeError で す 。 
その 参照 カウント を 増加 さ せ る 必要 は あ り ま せ ん 。 
第 二 引数 は エラー メッセージ で 、 文字 列 オブジェクト へ 変換 さ れ ま す 。 
この 関数 は PyErr_ SetString ( ) に 似 て い ま す が 、 例外 の ` ` 値 ( value ) ' ' と し て 任意 の Python オブジェクト を 指定 する こと が でき ま す 。 
常 に  NULL . 
書式 化 コード の 前 の 幅 . 精度 ( width . precision ) は 解析 さ れ ま す が 、 幅 の 部分 は 無視 さ れ ま す 。 
文字 
文字 、 int 引数 と し て 
10 進 数 、 int 引数 と し て 
16 進 数 、 int 引数 と し て 
文字 列 、 char * 引数 と し て 
16 進 法 の ポインタ 、 void  * 引数 と し て 
認識 でき な い 書式 化 文字 が あ る と 書式 化 文字 列 の 残り すべて が その まま 結果 の 文字 列 へ コピー さ れ 、 余分 の 引数 は どれ も 捨て られ ま す 。 
これ は " PyErr_ SetObject(type ,  Py _ None ) " を 省略 し た もの で す 。 
これ は " PyErr_ SetString ( PyExc_TypeError ,  message) " を 省略 し た もの で 、 ここ で message は 組み込 み 操作 が 不正 な 引数 で 呼び出 さ れ た と い う こと を 表 し て い ま す 。 
主に 内部 で 使用 する ため の もの で す 。 
これ は " PyErr_ SetNone ( PyExc _ MemoryError ) " を 省略 し た もの で 、 NULL を 返 し ま す 。  したが っ て 、 メモリ 不足 に な っ た とき 、 オブジェクト 割り当て 関数 は " return PyErr_ NoMemory ( ) ; " と 書 く こと が でき ま す 。 
C ライブラリ 関数 が エラー を 返 し て C 変数 errno を 設定 し た とき に 、 これ は 例外 を 発生 さ せ る ため に 便利 な 関数 で す 。 
第 一 要素 が 整数 errno 値 で 、 第 二 要素 が ( strerror ( )  から 得 られ る ) 対応 する エラー メッセージ で あ る タプル オブジェクト を 構成 し ま す 。 
それ から 、 " PyErr_ SetObject(type , object ) " を 呼び出 し ま す 。 
Unix で は 、 errno 値 が EINTR で あ る とき 、 すなわち 割り込 ま れ た システム コール を 表 し て い る とき 、 これ は PyErr_ Check Signals ( ) を 呼び出 し 、 それ が エラー インジケータ を 設定 し た 場合 は 設定 さ れ た まま に し て お き ま す 。 
関数 は 常 に NULL を 返 し ま す 。 
したが っ て 、 システム コール が エラー を 返 し た とき 、 システム コール の ラッパー 関数 は " return PyErr_ Set FromErrno(type ) ; " と 書 く こと が でき ま す 。  PyObject * 
PyErr_ Set FromErrno ( ) に 似 て い て 、 filename が NULL で な い 場合 に 、 それ が type の コンストラクタ に 第 三 引数 と し て 渡 さ れ る と い う ふるまい が 追加 さ れ て い ま す 。 
IOError と OSError の よう な 例外 の 場合 で は 、 これ が 例外 インスタンス の filename 属性 を 定義 する ため に 使 わ れ ま す 。 
これ は WindowsError を 発生 さ せ る ため に 便利 な 関数 で す 。  0 の ierr と とも に 呼び出 さ れ た 場合 、 GetLastError ( ) が 返 す エラー コード が 代り に 使 わ れ ま す 。 
利用 可能 範囲 :  Windows 。  PyObject * 
PyErr_ Set FromWindowsErr ( ) に 似 て い て 、 送出 する 例外 の 型 を 指定 する 引数 が 追加 さ れ て い ま す 。 
PyErr_ Set FromWindowsErr ( ) に 似 て い て 、 filename が NULL で な い 場合 に は WindowsError の コンストラクタ へ 第 三 引数 と し て 渡 さ れ る と い う 振る舞い が 追加 さ れ て い ま す 。  利用 可能 範囲 :  Windows 。 
" PyErr_ SetString ( PyExc_TypeError ,  message) " を 省略 し た もの で す 。 
ここ で message は 内部 操作 ( 例えば 、 Python\/C API 関数 ) が 不正 な 引数 と とも に 呼び出 さ れ た と い う こと を 示 し て い ま す 。 
主に 内部 で 使用 する ため の もの で す 。 
警告 メッセージ を 出 し ま す 。 
警告 機構 が も つ 問題 の ため に その 関数 が 例外 を 発生 さ せ る と い う こと も 可能 で す 。  ( 実装 で は その 厄介 な 仕事 を 行 う ため に warnings モジュール を インポート し ま す ) 。 
例外 が 発生 さ せ られ な けれ ば 、 戻 り 値 は 0 で す 。 
警告 コントロール の ため の C  API は あ り ま せ ん 。 
すべて の 警告 の 属性 を 明示 的 に 制御 し た 警告 メッセージ を 出 し ま す 。 
これ は Python 関数 warnings . warn_explicit( ) の 直接 的 な ラッパ で 、 さらに 情報 を 得 る に は そちら を 参照 し て くださ い 。 
そこ に 説明 さ れ て い る デフォルト の 効果 を 得 る ため に 、 module と registry 引数 は NULL に 設定 する こと が でき ま す 。 
この 関数 は Python の シグナル 処理 と やりとり する こと が でき ま す 。 
シグナル が その プロセス へ 送 ら れ た か どう か チェック し 、 そう なら ば 対応 する シグナル ハンドラ を 呼び出 し ま す 。 
モジュール が サポート さ れ て い る 場合 は 、 これ は Python で 書 か れ た シグナル ハンドラ を 呼び出せ ま す 。 
KeyboardInterrupt 例外 を 発生 さ せ る こと で す 。 
例外 が 発生 し た 場合 、 エラー インジケータ が 設定 さ れ 、 関数 は 1 を 返 し ま す 。  そう で な けれ ば 、 関数 は 0 を 返 し ま す 。 
エラー インジケータ が 以前 に 設定 さ れ て い る 場合 は 、 それ が クリア さ れ る か どう か わか ら な い 。 
この 関数 は 廃止 さ れ て い ま す 。 
SIGINT シグナル が 到達 し た 影響 を シミュレート し ま す - -  次 に PyErr_ Check Signals ( ) が 呼 ば れ る とき 、 
KeyboardInterrupt は 送出 さ れ る で しょ う 。 
インタプリタ ロック を 保持 する こと な く 呼び出 す こと が でき ま す 。 
この ユーティリティ 関数 は 新し い 例外 オブジェクト を 作成 し て 返 し ま す 。  name 引数 は 新し い 例外 の 名前 、 module . class 形式 の C 文字 列 で な けれ ば な ら な い 。 
base と dict 引数 は 通常 NULL で す 。 
これ は すべて の 例外 の ため の ルート 、 組み込 み 名 Exception ( C で は PyExc _ Exception と し て アクセス 可能 ) から 導出 さ れ た クラス オブジェクト を 作成 し ま す 。  新し い クラス の _ _module_ _属性 は name 引数 の 前半 部分 ( 最後 の ドット まで ) に 設定 さ れ 、 クラス 名 は 後半 部分 ( 最後 の ドット の 後 ) に 設定 さ れ ま す 。 
base 引数 は 代わり の ベース クラス を 指定 する ため に 使え ま す 。 dict 引数 は クラス 変数 と メソッド の 辞書 を 指定 する ため に 使え ま す 。 
例外 が 設定 さ れ て い る が インタプリタ が 実際 に 例外 を 発生 さ せ る こと が でき な い とき に 、 この ユーティリティ 関数 は 警告 メッセージ を sys . stderr へ プリント し ま す 。 
例えば 、 例外 が __ del_ _( ) メソッド で 発生 し た とき に 使 わ れ ま す 。  発生 さ せ られ な い 例外 が 生 じ た コンテキスト を 特定 する ため の 一 つ の 引数 obj と とも に 関数 が 呼び出 さ れ ま す 。 
obj の repr が 警告 メッセージ に プリント さ れ る で しょ う 。 
Python\/C API  の 全て の 関数 は 、 関数 の ドキュメント で 明確 に 説明 が な い 限り 例外 を 発行 する 可能 性 が あ り ま す 。 
一般 的 な 話 と し て 、 ある 関数 が 何 ら か の エラー に 遭遇 する と 、 関数 は 例外 を 送出 し て 、 関数 内 に お け る 参照 の 所有 権 を 全て 放棄 し 、 エラー 指標  ( error indicator ) --  通常 は  NULL  また は  - 1 を 返 し ま す 。 
いく つ か の 関数 で は ブール 型 で 真 \/ 偽 を 返 し 、 偽 は エラー を 示 し ま す 。  きわめて 少数 の 関数 で は 明確 な エラー 指標 を 返 さ な かっ たり 、 あいまい な 戻 り 値 を 返 し たり する の で 、 PyErr_Occurred ( ) 
で 明示 的 に エラー テスト を 行 う 必要 が あ り ま す 。  例外 時 の 状態 情報  ( exception  state ) は 、 スレッド 単位 に 用意 さ れ た 記憶 領域  ( per- thread storage )  内 で 管理 さ れ ま す  ( この 記憶 領域 は 、 スレッド を 使 わ な い アプリケーション で は グローバル な 記憶 領域 と 同じ で す ) 。 
一 つ の スレッド は 二 つ の 状態 の どちら か :  例外 が 発生 し た か 、 まだ 発生 し て い な い か 、 を と り ま す 。  関数  PyErr_Occurred ( )  を 使 う と 、 この 状態 を 調べ られ ま す : この 関数 は 例外 が 発生 し た 際 に は その 例外 型 オブジェクト に 対 する 借用 参照  ( borrowed  reference )  を 返 し 、 そう で な い とき に は  NULL を 返 し ま す 。 
例外 状態 を 設定 する 関数 は 数 多 く あ り ま す : PyErr_ SetString ( ) 
は もっとも よく 知 ら れ て い る  ( が 、 もっとも 汎用 性 の な い )  例外 を 設定 する ため の 関数 で 、 PyErr_ Clear ( ) 
は 例外 状態 情報 を 消し去 る 関数 で す 。  完全 な 例外 状態 情報 は 、 3  つ の オブジェクト :  例外 の 型 、 例外 の 値 、 そして トレース バック 、 から な り ま す  ( どの オブジェクト も NULL を 取り得 ま す ) 。 
これ ら の 情報 は 、  Python  オブジェクト の 
この 関数 は  Python  コード の 実行 さ れ て い る スレッド に おけ る 例外 状態 情報 を 返 し ま す 。 
また 、 これ ら の 例外 状態 情報 に 対 する アクセス 手段 は 、 両方 とも 意味 づけ  ( semantics )  が 変更 さ れ 、 ある 関数 が 例外 を 捕捉 する と 、 その 関数 を 実行 し て い る スレッド の 例外 状態 情報 を 保存 し て 、 呼び出 し 側 の 呼び出 し 側 の 例外 状態 情報 を 維持 する よう に な り ま し た 。 
この 変更 に よ っ て 、 無害 そう に 見え る 関数 が 現在 扱 っ て い る 例外 を 上書き する こと で 引き起こ さ れ る 、 例外 処理 コード で よく おき て い た バグ を 抑止 し て い ま す ;  また 、 トレース バック 内 の スタック フレーム で 参照 さ れ て い る オブジェクト が しばしば 不 必要 に 寿命 を 永らえ て い た の を なく し て い ま す 。  一般 的 な 原理 と し て 、 ある 関数 が 別 の 関数 を 呼び出 し て 何 ら か の 作業 を さ せ る とき 、 呼び出し 先 の 関数 が 例外 を 送出 し て い な い か 調べ な く て は な ら ず 、 もし 送出 し て い れ ば 、 その 例外 状態 情報 は 呼び出 し 側 に 渡 さ れ な けれ ば な り ま せ ん 。 
呼び出 し 元 の 関数 は オブジェクト 参照 の 所有 権 を すべて 放棄 し 、 エラー 指標 を 返 さ な く て は な り ま せ ん が 、 余計 に 例外 を 設定 する 必要 は  あ り ま せ ん --  そんな こと を すれ ば 、 たった 今 送出 さ れ た ばかり の 例外 を 上書き し て しま い 、 エラー の 原因 その もの に 関 する 重要 な 情報 を 失 う こと に な り ま す 。 
例外 を 検出 し て 渡 す 例 は 、 上 の sum_sequence ( )  で 示 し て い ま す 。 
偶然 に も 、 この 例 で は エラー を 検出 し た 際 に 何 ら 参照 を 放棄 する 必要 が あ り ま せ ん 。 
以下 の 関数 の 例 で は 、 エラー に 対 する 後 始末 に つ い て 示 し て い ま す 。 
まず 、 どう し て  Python  で 書 く の が 好き か 思い出 し て もら う ため に 、 等価 な  Python  コード を 示 し ま す : 
以下 は 対応 する コード を  C  で 完璧 に 書 い た もの で す : 
intincr_item ( PyObject * dict ,  PyObject *key) {\/* Py _ XDECREF  用 に 全て の オブジェクト を  NULL  で 初期 化  * \/ PyObject *item=  NULL , * const _one  =  NULL , * incremented_item=  NULL ; int rv=  - 1 ;\/*  戻り 値 の 初期 値 を  - 1  ( 失敗 )  に 設定 し て お く *\/item =  PyObject _ GetItem ( dict , key) ; if (item= = NULL ) {\/*KeyError  だけ を 処理 :*\/if ( ! PyErr_ Exception Matches ( PyExc _KeyError ) ) goto error ;\/* エラー を 無 かっ た こと に  ( clear )  し て ゼロ を 使 う :*\/ PyErr_ Clear ( ) ;item =  PyInt_ FromLong ( 0 L ) ; if (item= = NULL ) goto error ;} const _one  = PyInt_ FromLong ( 1 L ) ; if ( const _one = = NULL ) goto error ; incremented_item =  PyNumber_ Add (item ,  const _one ) ; if ( incremented_item= = NULL ) goto error ; if  ( PyObject _ SetItem ( dict , key ,  incremented_item )  0 ) goto error ;rv =  0 ; \/* うま く い っ た 場合 *\/\/* 後 始末 コード に 続 く  *\/error:\/* 成功 し て も 失敗 し て も 使 わ れ る 後 始末 コード *\/\/*NULL  を 参照 し て い る 場合 は 無視 する ため に  Py _ XDECREF ( )  を 使 う  *\/ Py _ XDECREF ( item) ; Py _ XDECREF ( const _one ) ; Py _ XDECREF ( incremented_item) ; returnrv;\/* エラー なら  - 1  、  成功 なら  0  *\/}
なん と この 例 は  C  で  goto  文 を 使 う お 勧め の 方法 まで 示 し て い ま す ね ! この 例 で は 、 特定 の 例外 を 処理 する ため に PyErr_ Exception Matches ( ) 
および  PyErr_ Clear ( ) 
を どう 使 う か を 示 し て い ま す 。 
また 、 所有 権 を 持 っ て い る 参照 で 、 値 が  NULL  に な る か も しれ な い もの を 捨て る ため に  Py _ XDECREF ( )  を どう 使 う か も 示 し て い ま す  ( 関数 名 に  " X "  が 付 い て い る こと に 注意 し て くださ い ;  Py _ DECREF ( )  は  NULL  参照 に 出くわ す と クラッシュ し ま す ) 。 
正し く 動作 さ せ る ため に は 、 所有 権 を 持 つ 参照 を 保持 する ため の 変数 を  NULL  で 初期 化 する こと が 重要 で す ;  同様 に 、 あらかじめ 戻 り 値 を 定義 する 際 に は 値 を  - 1  ( 失敗 )  で 初期 化 し て お い て 、 最後 の 関数 呼び出 し まで うま く い っ た 場合 に のみ  0  ( 成功 ) に 設定 し ま す 。 
7 .  複合 文  ( compound  statement ) 
6 . 14  exec  文 
この 文 は 、 Python  コード の 動的 な 実行 を サポート し ま す 。 
最初 の 式 の 値 評価 結果 は 文字 列 か 、 開 か れ た ファイル オブジェクト か 、 コード オブジェクト で な けれ ば な り ま せ ん 。 
文字 列 の 場合 、 一連 の  Python  実行 文 と し て 解析 し 、 ( 構文 エラー が 生 じ な い 限り ) 実行 し ま す 。 
開 か れ た ファイル で あ れ ば 、 ファイル を  EOF まで 読 ん で 解析 し 、 実行 し ま す 。 
コード オブジェクト なら 、 単に オブジェクト を 実行 し ま す 。  いずれ の 場合 で も 、 オプション の 部分 が 省略 さ れ る と 、 コード は 現在 の スコープ 内 で 実行 さ れ ま す 。 
in  の 後ろ に 一 つ だけ 式 を 指定 する 場合 、 その 式 は 辞書 で な く て は な ら ず 、 グローバル 変数 と ローカル 変数 の 両方 に 使 わ れ ま す 。 
これ ら は それぞれ グローバル 変数 と ローカル 変数 と し て 使 わ れ ま す 。  locals  を 指定 する 場合 は 何 ら か の マップ 型 オブジェクト に せ ね ば な り ま せ ん . バージョン  2 . 4  で  変更  さ れ た 仕様 : 以前 は locals  は 辞書 で な けれ ば な り ま せ ん で し た 
exec  の 副 作用 と し て 実行 さ れ る コード で 設定 さ れ た 変数 名 に 対応 する 名前 の 他 に 、 追加 の キー を 辞書 に 追加 する こと が あ り ま す 。 
例えば 、 現在 の 実装 で は 、 組み込 み モジュール __builtin__ の 辞書 に 対 する 参照 を 、__builtins__ ( ! )  と い う キー で 追加 する こと が あ り ま す 。 
プログラマ の ため の ヒント : 式 の 動的 な 評価 は 、 組み込 み 関数  eval ( )  で サポート さ れ て い ま す 組み込 み 関数  globals ( )  および  locals ( )  は 、 それぞれ 現在 の グローバル 辞書 と ローカル 辞書 を 返 す の で 、 exec  に 渡 し て 使 う と 便利 で す 。 
4 . 1  名前 づけ と 束縛  ( naming  and  binding ) 
内容 モデル は 入れ子 に な っ た タプル を 使 っ て 記述 さ れ て い ま す 。 
各 タプル に は  4  つ の 値 :  型 、 限定 詞  ( quantifier ) 、 名前 、 そして 子 の タプル 、 が 収め られ て い ま す 。 
子 の タプル は 単に 内容 モデル を 記述 し た もの で す 。  最初 の 二 つ の フィールド の 値 は  xml . parsers . expat  モジュール の model  オブジェクト で 定義 さ れ て い る 定数 で す 。 
これ ら の 定数 は 二 つ の グループ :  モデル 型  ( modeltype )  グループ と 限定子  ( quantifier ) グループ 、 に 取りまとめ られ ま す 。 
以下 に モデル 型 グループ に お け る 定数 を 示 し ま す :  XML _ CTYPE_ ANY 
モデル 名 で 指定 さ れ た 要素 は  ANY  の 内容 モデル を 持 つ と 宣言 さ れ ま す 。 
指定 さ れ た エレメント は いく つ か の オプション から 選択 でき る よう に な っ て い ま す ;  ( A| B| C )  の よう な 内容 モデル で 用い られ ま す 。 
EMPTY  で あ る と 宣言 さ れ て い る 要素 は この モデル 型 を 持 ち ま す 。 
順々 に 続 く よう な モデル の 系列 を 表 す モデル が この モデル 型 で 表 さ れ ま す 。 
( A ,  B ,  C )  の よう な モデル で 用い られ ま す 。 
限定子 グループ に お け る 定数 を 以下 に 示 し ま す : 
XML _ CQUANT _ NONE  修飾 子  ( modifier )  が 指定 さ れ て い ま せ ん 。 
従 っ て  A  の よう に 、 厳密 に 一 つ だけ で す 。 
この モデル は オプション で す :  A ?  の よう に 、 一つ か 全く な い か で す 。 
この モデル は  ( A +  の よう に )  一つか それ 以上 あ り ま す 。 
この モデル は  A *  の よう に ゼロ 回 以上 あ り ま す 。 
以下 の 定数 は 
モジュール に おけ る errors  オブジェクト で 提供 さ れ て い ま す 。 
これ ら の 定数 は 、 エラー が 発生 し た 際 に 送出 さ れ る  ExpatError 例外 オブジェクト の いく つ か の 属性 を 解釈 する 上 で 便利 で す 。 
errors  オブジェクト は 以下 の 属性 を 持 ち ま す :  XML _ ERROR _ ASYNC _ ENTITY 
属性 値 中 の エンティティ 参照 が 、 内部 エンティティ で は な く 外部 エンティティ を 参照 し ま し た 。 
文字 参照 が 、 XML  で は 正し く な い  ( illegal )  文字 を 参照 し ま し た ( 例えば  0  や ` # 0 ; ' ) 。 
エンティティ 参照 が 、 記法  ( notation )  つき で 宣言 さ れ て い る エンティティ を 参照 し た ため 、 解析 でき ま せ ん 。 
一 つ の 属性 が 一 つ の 開始 タグ 内 に 一 度 より 多 く 使 わ れ て い ま す 。 
入力 さ れ た バイト が 文字 に 適切 に 関連 付け でき な い 際 に 送出 さ れ ま す ; 例えば 、 UTF - 8  入力 ストリーム に お け る  NUL  バイト  ( 値  0 )  など で す 。 
空白 以外 の 何 か が ドキュメント 要素 の 後 に あ り ま す 。 
入力 データ の 先頭 以外 の 場所 に  XML  定義 が 見つか り ま し た 。 
この ドキュメント に は 要素 が 入 っ て い ま せ ん  ( XML  で は 全て の ドキュメント は 確実 に トップ レベル の 要素 を 一 つ 持 つ よう 要求 し て い ま す ) 。 
Expat  が 内部 メモリ を 確保 でき ま せ ん で し た 。 
パラメタ エンティティ が 許可 さ れ て い な い 場所 で 見つか り ま し た 。 
エンティティ 参照 中 に 、 同じ エンティティ へ の 別 の 参照 が 入 っ て い ま し た ; おそらく 違 う 名前 で 参照 し て い る か 、 間接 的 に 参照 し て い ま す 。 
何 ら か の 仕様 化 さ れ て い な い 構文 エラー に 遭遇 し ま し た 。 
終了 タグ が 最も 内側 で 開 か れ て い る 開始 タグ に 一致 し ま せ ん 。 
何 ら か の  ( 開始 タグ の よう な )  トークン  が 閉じ られ な い まま 、 ストリーム の 終端 や 次 の トークン に 遭遇 し ま し た 。 
定義 さ れ て い な い エンティティ へ の 参照 が 行 わ れ ま し た 。 
ドキュメント の エンコード が  Expat  で サポート さ れ て い ま せ ん 。 
C DATA セクション が 閉じ られ て い ま せ ん 。 
XML 文書 が ` `standalone ' ' だ と 宣言 さ れ て お り NotStandaloneHandler  が 設定 さ れ  0 が 返 さ れ て い る に も かかわ ら ず 、 パーサ は ``standalone ' ' で は な い と 判別 し ま し た 。 
その 操作 を 完了 する に は DTD の サポート が 必要 で す が 、 Expat が DTD の サポート を し な い 設定 に な っ て い ま す 。 
これ は  xml . parsers . expat モジュール の 標準 的 な ビルド で は 報告 さ れ ま せ ん 。 
パース が 始ま っ た あと で 動作 の 変更 が 要求 さ れ ま し た 。  これ は パース が 開始 さ れ る 前 に のみ 変更 可能 で す 。 
( 現在 の ところ ) UseForeign DTD ( ) に よ っ て のみ 送出 さ れ ま す 。 
名前 空間 の 処理 を 有効 する と 宣言 さ れ て い な い プレフィックス が 見つか り ま す 。 
XML 文書 は プレフィックス に 対応 し た 名前 空間 宣言 を 削除 し よ う と し ま し た 。 
パラメータ エンティティ は 不 完全 な マーク アップ を 含 ん で い ま す 。 
XML 文書 中 に 要素 が あ り ま せ ん 。 
外部 エンティティ 中 の テキスト 宣言 に エラー が あ り ま す 。 
パブリック ID 中 に 許可 さ れ て い な い 文字 が あ り ま す 。 
要求 さ れ た 操作 は 一時 停止 さ れ た パーサ で 行 わ れ て い ま す が 、 許可 さ れ て い な い 操作 で す 。 
Python アプリケーション に は 通知 さ れ ま せ ん 。 
要求 さ れ た 操作 で 、 パース 対象 と な る 入力 が 完了 し た と 判断 し ま し た が 、 入力 は 受理 さ れ ま せ ん で し た 。 
この エラー は 追加 の 入力 を 行な お う と し て い る 場合 、 もしくは パーサ が 停止 し よう と し て い る 場合 に 送出 さ れ ま す 。 
以下 の プログラム で は 、 与え られ た 引数 を 出力 する だけ の 三 つ の ハンドラ を 定義 し て い ま す 。 
この プログラム の 出力 は 以下 の よう に な り ま す : 
ExpatError  例外 は いく つ か の 興味 深 い 属性 を 備え て い ま す : 
特定 の エラー に お け る  Expat  の 内部 エラー 番号 で す 。 
この 値 は この モジュール の errors  オブジェクト で 定義 さ れ て い る 定数 の いずれ か に 一致 し ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
エラー が 検出 さ れ た 場所 の 行 番号 で す 。 
最初 の 行 の 番号 は  1  で す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
エラー が 発生 し た 場所 の 行内 で の オフセット で す 。 
最初 の カラム の 番号 は 0  で す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
二 つ また は それ 以上 の 物理 行 を 論理 行 と し て つなげ る ため に は 、 バックス ラッシュ 文字  ( )  を 使 っ て 以下 の よう に し ま す : 物理 行 が 文字 列 リテラル や コメント 中 の 文字 で な い バックス ラッシュ で 終わ っ て い る 場合 、 後続 する 行 と つなげ て 一 つ の 論理 行 を 構成 し 、 バックス ラッシュ および バックス ラッシュ の 後ろ に あ る 行末 文字 を 削除 し ま す 。 
例えば : 
if  1900  year  2100  and  1  = month =  12  \and  1  =  day  =  31  and  0  =  hour  24  \and  0  = minute  60  and  0  = second  60 : #Looks like  a  valid  datereturn  1  と な り ま す 。 
バックス ラッシュ で 終わ る 行 に は コメント を 入れ る こと は でき ま せ ん 。 
また 、 バックス ラッシュ を 使 っ て コメント を 継続 する こと は でき ま せ ん 。 
バックス ラッシュ が 文字 列 リテラル 中 に あ る 場合 を 除 き 、 バックス ラッシュ の 後ろ に トークン を 継続 する こと は でき ま せ ん  ( すなわち 、 物理 行内 の 文字 列 リテラル 以外 の トークン を バックス ラッシュ を 使 っ て 分断 する こと は でき ま せ ん ) 。 
上記 以外 の 場所 で は 、 文字 列 リテラル 外 に あ る バックス ラッシュ は どこ に あ っ て も 不正 と な り ま す 。 
8 . 4  式 入力 
A .  歴史 と ライセンス 
式 入力 に は 二 つ の 形式 が あ り ま す 。 
双方 とも 、 先頭 の 空白 を 無視 し ま す 。 eval ( )  に 対 する 文字 列 引数 は 、 以下 の 形式 を と ら な けれ ば な り ま せ ん : 
input ( )  で 読み込 ま れ る 入力 行 は 、 以下 の 形式 を と ら な けれ ば な り ま せ ん : 
注意 :  文 と し て の 解釈 を 行 わ な い  ` 生 の  ( raw ) ' 入力 行 を 読み出 す ため に は 、 組み込 み 関数  raw _ input ( )  や 、 ファイル オブジェクト の readline ( )  メソッド を 使 う こと が でき ま す 。 
この 章 で は 、 Python  の 式 に お け る 個々 の 要素 の 意味 に つ い て 解説 し ま す 。 
表記 法 に 関 する 注意 :  この 章 と 以降 の 章 で の 拡張 BNF  ( extended BNF )  表記 は 、 字句 解析 規則 で は な く 、 構文 規則 を 記述 する ため に 用い られ て い ま す 。 
ある 構文 規則  ( の あ る 表現 方法 )  が 、 以下 の 形式 
で 記述 さ れ て い て 、 この 構文 特有 の 意味 付け  ( semantics )  が 記述 さ れ て い な い 場合 、 name  の 形式 を と る 構文 の 意味 付け は 、 othername の 意味 付け と 同じ に な り ま す 。 
少な く とも 一 つ の カンマ を 含 む 式 の リスト は 、 タプル に な り ま す 。 
タプル の 長 さ は 、 リスト 中 の 式 の 数 に 等し く な り ま す 。 
リスト 中 の 式 は 左 から 右 へ と 順 に 評価 さ れ ま す 。 
単一 要素 の タプル  ( 別名 単 集合  ( singleton) )  を 作 り た けれ ば 、 末尾 に カンマ が 必要 で す 。 
単一 の 式 だけ で 、 末尾 に カンマ を つけ な い 場合 に は 、 タプル で はな くその 式 の 値 に な り ま す  ( 空 の タプル を 作 り た い なら 、 中身 が 空 の 丸括弧 ペア :( )  を 使 い ま す 。 ) 
式文 は 、  ( 主に 対話 的 な 使 い 方 で は )  値 を 計算 し て 出力 する ため に 使 っ たり 、 ( 通常 は )  プロシジャ ( procedure :  有意 な 結果 を 返 さ な い 関数 の こと で す ;  Python  で は 、 プロシジャ は 値  None  を 返 し ま す ) を 呼び出 す ため に 使 い ま す 。 
その 他 の 使 い 方 で も 式文 を 使 う こと が でき ま す し 、 有用 な こと も あ り ま す 。 
式文 の 構文 は 以下 の 通り で す : 
式文 は 式 の リスト  ( 単一 の 式 の こと も あ り ま す )  を 値 評価 し ま す 。 
対話 モード で は 、 値 が  None  で な い 場合 、 値 を 組み込 み 関数 repr ( ) 
で 文字 列 に 変換 し て 、 その 結果 のみ から な る 一行 を 標準 出力 に 書き出 し ま す  ( 6 . 6  節 参照 ) 。 
( None  に な る 式文 の 値 は 書き出 さ れ な い の で 、 プロシジャ 呼び出し を 行 っ て も 出力 は 得 られ ま せ ん 。  ) 
5 . 5  C + + に よ る  Python  の 埋め込 み 
ここ まで は 、 埋め込 み  Python  インタプリタ は アプリケーション 本体 の 機能 に アクセス する 手段 が あ り ま せ ん で し た 。 
Python  API  を 使 う と 、 埋め込 み インタプリタ を 拡張 する こと で アプリケーション 本体 へ の アクセス を 可能 に し ま す 。 
つまり 、 アプリケーション で 提供 さ れ て い る ルーチン を 使 っ て 、 埋め込 み インタプリタ を 拡張 する の で す 。  複雑 な こと の よう に 思え ま す が 、 それ ほど ひど い わけ で は あ り ま せ ん 。 
さしあた っ て 、 アプリケーション が  Python  インタプリタ を 起動 し た と い う こと を ちょっと 忘れ て み て くださ い 。 
その 代わ り 、 アプリケーション が サブルーチン の 集まり で 、 あたかも 普通 の  Python  拡張 モジュール を 書 く か の よう に 、 Python  から 各 ルーチン に アクセス でき る よう に する グルー ( glue ,  糊 )  コード を 書 く と 考え て くださ い 。 
例えば 以下 の よう に です : 
static intnumargs = 0 ; \/* アプリケーション の コマンドライン 引数 の 個数 を 返 す *\/static  PyObject *emb_numargs ( PyObject* self ,  PyObject* args) { if ( ! PyArg _ ParseTuple ( args, " :numargs " ) ) return NULL ; return Py _ BuildValue ( " i " , numargs) ;}static  PyMethodDef Emb Methods [ ] ={{ " numargs " , emb_numargs ,  METH _ VARARGS , " Return the number  ofarguments received  by  the  process . " } , { NULL ,  NULL ,  0 ,  NULL }};
上 の コード を main ( )  関数 の すぐ 上 に 挿入 し ま す 。  また 、 以下 の 二 つ の 文 を Py _ Initialize ( )  の 直後 に 挿入 し ま す : 
これ ら 二 つ の 行 は numargs  変数 を 初期 化 し 、 埋め込 み  Python  インタプリタ から emb . numargs ( )  関数 に アクセス でき る よう に し ま す 。 
これ ら の 拡張 モジュール 関数 を 使 う と 、 Python  スクリプト は 
importembprint  " Number  ofarguments " , emb . numargs ( )  の よう な こと が でき ま す 。 
実際 の アプリケーション で は 、 こう し た メソッド で アプリケーション 内 の API  を  Python  に 公開 する こと に な り ま す 。 
Distutils は 様々 な 方法 で 拡張 でき ま す 。 
ほとんど の 拡張 は 存在 する コマンド を 新し い コマンド で 置換 する 形 で おこな わ れ ま す 。 
新し い コマンド は たとえば 存在 する コマンド を 置換 し て 、 その コマンド で パッケージ を どう 処理 する か の 細部 を 変更 する こと で プラットフォーム 特有 の パッケージ 形式 を サポート する ため に 書 か れ て い る か も しれ ま せ ん ほとんど の distutils の 拡張 は 存在 する コマンド を 変更 し た い setup . py スクリプト 中 で 行 わ れ ま す 。  ほとんど は パッケージ に コピー さ れ る ファイル 拡張子 を . py の 他 に 、 いく つ か 追加 する もの で す 。 
ほとんど の distutils の コマンド 実装 は  distutils . cmd 
の Command クラス の サブ クラス と し て 実装 さ れ て い ま す 。 
新し い コマンド は Command を 直接 継承 し 、 置換 する コマンド で は 置換 対象 の コマンド の サブ クラス に する こと で Command を 間接 的 に 継承 し ま す 。 
コマンド は Command から 派生 し た もの で あ る 必要 が あ り ま す 。 
Fault オブジェクト は 、 XML - RPC の fault タグ の 内容 を カプセル 化 し て お り 、 以下 の メンバ を 持 ち ま す : 
失敗 の タイプ を 示 す 文字 列 。 
失敗 の 診断 メッセージ を 含 む 文字 列 。 
1 1 . 2 0 . 1  CookieJar  および  File CookieJar 
クッキー の 読み書き の ため に 、 以下 の  CookieJar  サブ クラス が 提供 さ れ て い ま す 。 
これ 以外 の  CookieJar  サブ クラス は 、 Microsoft  Internet  Explorer ブラウザ の クッキー を 読みこ む もの も 含め 、 http:\/\/wwwsearch . sf . net\/ClientCookie\/ から 使用 可能 で す 。 
クラス Mozilla CookieJar 
Mozilla  の  cookies . txt  ファイル 形式  ( この 形式 は また  Lynx  と Netscape  ブラウザ に よ っ て も 使 わ れ て い ま す )  で ディスク に クッキー を 読み書き する ため の File CookieJar  で す 。 
注意 : この クラス は  RFC  296 5  クッキー に 関 する 情報 を 失 い ま す 。  また 、 より 新し い か 、 標準 で な い  port  など の クッキー 属性 に つ い て の 情報 も 失 い ま す 。 
警告 : もし クッキー の 損失 や 欠損 が 望まし く な い 場合 は 、 クッキー を 保存 する 前 に バックアップ を 取 っ て お く よう に し て くださ い  ( ファイル へ の 読み込 み  \/  保存 を くり返 す と 微妙 な 変化 が 生じ る 場合 が あ り ま す ) 。 
また 、  Mozilla  の 起動 中 に クッキー を 保存 する と 、 Mozilla  に よ っ て 内容 が 破壊 さ れ て しま う こと に も 注意 し て くださ い 。 
クラス LWPCookieJar 
libw w w -perl  の ライブラリ で あ る  Set - Cookie 3  ファイル 形式 で ディスク に クッキー を 読み書き する ため の  File CookieJar  で す 。 
これ は クッキー を 人間 に 可読 な 形式 で 保存 する の に 向 い て い ま す 。 
ホスト 名 が な い 場合 、 また は ホスト 名 が ' local host '  の 場合 に ファイル を ローカル で オープン し ま す 。 
そう で な い 場合 、 プロトコル を ftp  に 切り替え 、 parent  を 使 っ て 再度 オープン を 試み ま す 。 
非 対話 的 な ファイル から 読み出 さ れ た 入力 は 、 全て 同じ 形式 : 
Download entiregrammar  as  text .  を と り ま す 。 
この 構文 法 は 、 以下 の 状況 で 用い られ ま す : 
( ファイル や 文字 列 内 の )  完全 な  Python  プログラム を 構文 解析 する とき ; 
モジュール を 構文 解析 する とき ; 
exec  で 渡 さ れ た 文字 列 を 構文 解析 する とき ; 
Python  の 組み込 み ファイル オブジェクト は 、 全て 標準  C  ライブラリ の FILE *  サポート の 上 に 実装 さ れ て い ま す 。 
以下 の 詳細 説明 は 一 実装 に 関 する もの で 、 将来 の  Python  の リリース で 変更 さ れ る か も しれ ま せ ん 。 
この  PyObject  の サブ タイプ は  Python  の ファイル 型 オブジェクト を 表現 し ま す 。 
この  PyTypeObject  の インスタンス は  Python  の ファイル 型 を 表現 し ま す 。  この オブジェクト は types . FileType  と し て 
Python  プログラム で 公開 さ れ て い ま す 。 
引数 が  PyFileObject  か  PyFileObject  の サブ タイプ の とき に 真 を 返 し ま す 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : サブ タイプ を 引数 に とれ る よう に な り ま し た 
引数 が  PyFileObject  型 で 、 かつ  PyFileObject  型 の サブ タイプ で な い とき に 真 を 返 し ま す 。 
成功 する と 、 filename  に 指定 し た 名前 の ファイル を  mode  に 指定 し た ファイル モード で 開 い て 得 た 新た な ファイル オブジェクト を 返 し ま す 。  mode  の セマンティクス は 標準  C  ルーチン fopen ( ) 
と 同じ で す 。 
失敗 する と NULL  を 返 し ま す 。 
すでに 開 か れ て い る 標準  C  ファイル ポインタ  fp  から 新た な  PyFileObject  を 生成 し ま す 。 
この 関数 で 生成 し た ファイル オブジェクト は 、 閉じ る 際 に close  に 指定 し た 関数 を 呼び出 し ま す 。 
失敗 する と NULL を 返 し ま す 。 
p  に 関連 付け られ た ファイル オブジェクト を  FILE * で 返 し ま す 。 
n  が  0  の 場合 、 行 の 長 さ に 関係 な く 正確 に  1  行 だけ 読み出 し ま す 。 
n が  0  より 大き けれ ば 、 n  バイト 以上 の データ は 読み出し ま せ ん ;  従 っ て 、 行 の 一部 だけ が 返 さ れ る 場合 が あ り ま す 。 
どちら の 場合 で も 、 読み出し 後 すぐ に ファイル の 終端 に 到達 し た 場合 に は 空 文字 列 を 返 し ま す 。 
n  が  0  より 小さ けれ ば 、 長 さ に 関わ ら ず  1  行 だけ を 読み出 し ま す が 、 すぐ に ファイル の 終端 に 到達 し た 場合 に は  EOFError  を 送出 し ま す 。 
p  に 指定 し た ファイル の 名前 を 文字 列 オブジェクト で 返 し ま す 。 
setvbuf ( )  が あ る システム で のみ 利用 でき ま す 。 
この 関数 を 呼び出 し て よ い の は ファイル オブジェクト の 生成 直後 のみ で す 。 
Unicode  オブジェクト を ファイル に 出力 する とき に の エンコード 方式 を enc  に し ま す 。 
成功 する と  1  を 、 失敗 する と  0 を 返 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
この 関数 は インタプリタ の 内部 的 な 利用 の ため に 存在 し ま す 。 
この 関数 は p  の  softspace 
属性 を  newflag  に 設定 し 、 以前 の 設定 値 を 返 し ま す 。 
この 関数 を 正し く 動作 さ せ る ため に 、 p  が ファイル オブジェクト で あ る 必然 性 は あ り ま せ ん ;  任意 の オブジェクト を サポート し ま す  ( softspace  属性 が 設定 さ れ て い る か どう か のみ が 問題 だ と 思 っ て くださ い ) 。 
この 関数 は 全て の エラー を 解消 し 、 属性 値 が 存在 し な い 場合 や 属性 値 を 取得 する 際 に エラー が 生じ る と 、 0  を 以前 の 値 と し て 返 し ま す 。 
この 関数 から は エラー を 検出 でき ま せ ん が 、 そもそも そう い う 必要 は あ り ま せ ん 。 
オブジェクト  obj  を ファイル オブジェクト  p  に 書き込 み ま す 。 
flag  が サポート する フラグ は Py _ PRINT_ RAW 
だけ で す ;  この フラグ を 指定 する と 、  オブジェクト に repr ( )  で は な く str ( )  を 適用 し た 結果 を ファイル に 書き出 し ま す 。 
成功 し た 場合 に は  0  を 返 し 、 失敗 する と  - 1  を 返 し て 適切 な 例外 を セット し ま す 。 
文字 列  s  を ファイル オブジェクト  p  に 書き出 し ま す 。 
成功 し た 場合 に は  0  を 返 し 、 失敗 する と  - 1  を 返 し て 適切 な 例外 を セット し ま す 。 
各 フィールド の 詳し い 説明 は Inside  Macintosh : Files を 参照 し て くださ い 。 
ファイル の 4 文字 の クリエータコード で す 。 
ファイル の 4 文字 の タイプ コード で す 。 
ファイル の ファイン ダフラグ で 、  16 ビット の 整数 で 表現 さ れ て い ま す 。 
Flags の ビット 値 は 、 標準 モジュール MACFS で 定義 さ れ て い ま す 。 
フォルダ 内 で ファイル の アイコン が 配置 さ れ て い る 場所 を 示 す  Point  値 で す 。 
ファイル が 入 っ て い る フォルダ  ( を 整数 で 表 し た もの )  で す 。 
7 . 2 . 5  浮動 小数 点 オブジェクト  ( complex number 
この  PyObject  の サブ タイプ は  Python  浮動 小数 点 型 オブジェクト を 表現 し ま す 。 
この  PyTypeObject  の インスタンス は  Python  浮動 小数 点 型 を 表現 し ま す 。 
これ は types . FloatType  と 同じ オブジェクト で す 。 
引数 が  PyFloatObject  か  PyFloatObject  の サブ タイプ の とき に 真 を 返 し ま す 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : サブ タイプ を 引数 に とれ る よう に な り ま し た 
引数 が  PyFloatObject  型 で 、 かつ  PyFloatObject  型 の サブ タイプ で な い とき に 真 を 返 し ま す 。 
str  の 文字 列 値 を もと に  PyFloatObject  オブジェクト を 生成 し ま す 。  失敗 する と  NULL  を 返 し ま す 。 
引数  pend  は 無視 さ れ ま す 。 
この 引数 は 後方 互換 性 の ため だけ に 残 さ れ て い ま す 。 
v  から  PyFloatObject  オブジェクト を 生成 し て 返 し ま す 。  失敗 する と  NULL  を 返 し ま す 。 
pyfloat  の 指 す 値 を 、  C  の  double  型 表現 で 返 し ま す 。 
pyfloat  の 指 す 値 を 、  C  の  double  型 表現 で 返 し ま す が 、 エラー チェック を 行 い ま せ ん 。 
2 . 4 . 4  整数 および 長 整数 リテラル 
浮動 小数 点数 リテラル は 以下 の 字句 定義 で 記述 さ れ ま す : 
浮動 小数 点数 に お け る 整数 部 と 指数 部 は  8  進数 の よう に 見え る こと も あ り ま す が 、 10  を 基数 と し て 解釈 さ れ る の で 注意 し て くださ い 。 
例えば 、 " 0 77 e 0 10 "  は 正し い 表記 で あ り 、 " 77 e 10 "  と 同じ 数 を 表 し ま す 。  浮動 小数 点数 リテラル の 取 り う る 値 の 範囲 は 実装 に 依存 し ま す 。 
浮動 小数 点数 リテラル の 例 を いく つ か 示 し ま す :  3 . 14  10 .  . 00 1  1 e 100  3 . 14 e - 10  0 e 0 
数値 リテラル に は 符号 が 含 ま れ て い な い こと に 注意 し て くださ い ;  - 1 の よう な 句 は 、 実際 に は 単項 演算 子  ( unary  operator ) `-' と リテラル 1  を 組み合わせ た もの で す 。 
for  文 は 、 シーケンス  ( 文字 列 、 タプル また は リスト )  や 、 その 他 の 反復 可能 な オブジェクト  ( iterable object )  内 の 要素 に 渡 っ て 反復 処理 を 行 う ため に 使 わ れ ま す : 
式 リスト は 一 度 だけ 評価 さ れ ま す ;  結果 は イテレーション 可能 オブジェクト に な ら ね ば な り ま せ ん 。 
expression_list  の 結果 に 対 し て イテレータ を 生成 し 、 その 後 、 シーケンス の 各 要素 に つ い て インデクス の 小さ い 順 に 一 度 だけ スイート を 実行 し ま す 。 
この とき シーケンス 内 の 要素 が 通常 の 代入 規則 を 使 っ て ターゲット リスト に 代入 さ れ 、 その 後 スイート が 実行 さ れ ま す 。 
全て の 要素 を 使 い 切 る と ( シーケンス が 空 の 場合 に は すぐ に ) 、 else  節 が あ れ ば それ が 実行 さ れ 、 ループ を 終了 し ま す 。 
最初 の スイート 内 で  break  文 が 実行 さ れ る と 、 else  節 の スイート を 実行 する こと な く ループ を 終了 し ま す 。 
continue  文 が 最初 の スイート 内 で 実行 さ れ る と 、 スイート 内 に あ る 残り の 文 の 実行 を スキップ し て 、 式 の 真偽 評価 に 戻 り ま す 。 
スイート の 中 で は 、 ターゲット リスト 内 の 変数 に 代入 を 行え ま す ;  この 代入 に よ っ て 、 次 に 代入 さ れ る 要素 に 影響 を 及ぼ す こと は あ り ま せ ん 。  ループ が 終了 し て も ターゲット リスト は 削除 さ れ ま せ ん が 、 シーケンス が 空 の 場合 に は 、 ループ で の 代入 は 全く 行 わ れ ま せ ん 。 
ヒント :  組み込 み 関数  range ( )  は 、 Pascal  言語 に お け る  for  i:=a to b  do  の 効果 を エミュレート する の に 適 し た 数列 を 返 し ま す ; すなわち 、  range ( 3 )  は リスト  [ 0 ,  1 ,  2 ]  を 返 し ま す 。 
警告 : ループ 中 の シーケンス の 変更 に は 微妙 な 問題 が あ り ま す  ( これ は 変更 可能 な シーケンス 、 すなわち リスト で 起こ り ま す ) 。  どの 要素 が 次 に 使 わ れ る か を 追跡 する ため に 、 内部 的 な カウンタ が 使 わ れ て お り 、 この カウンタ は 反復 処理 を 行 う ごと に 加算 さ れ ま す 。 
この カウンタ が シーケンス の 長 さ に 達 する と 、 ループ は 終了 し ま す 。 
この こと は 、 スイート 中 で シーケンス から 現在 の  ( また は 以前 の )  要素 を 除去 する と 、 ( 次 の 要素 の インデクス は 、 すでに 取り扱 っ た 要素 の インデクス に な る ため に )  次 の 要素 が 飛ば さ れ る こと を 意味 し ま す 。 
20 . 4 . 1  fl モジュール に 定義 さ れ て い る 関数 
フォーム オブジェクト ( 上 で 述べ た make_form ( ) で 返 さ れ ま す ) に は 下記 の メソッド が あ り ま す 。 
各 メソッド は 名前 の 接頭 辞 に " fl _ " を 付け た C の 関数 に 対応 し ま す ; また 、 最初 の 引数 は フォーム の ポインタ で す ; 説明 は FORMS の 公式 文書 を 参照 し て くださ い 。  全て の add_*( ) メソッド は 、 FORMS オブジェクト を 示 す Python オブジェクト を 返 し ま す 。 
FORMS オブジェクト の メソッド を 以下 に 記載 し ま す 。 
ほとんど の FORMS オブジェクト は 、 その オブジェクト の 種類 ごと に 特有 の メソッド も いく つ か 持 っ て い ま す 。 
フォーム を 表示 し ま す 。 
フォーム を 隠 し ま す 。 
フォーム を 再 描画 し ま す 。 
フォーム の 位置 を 設定 し ま す 。 
フォーム を 固定 し ま す 。 
固定 し た フォーム の 固定 を 解除 し ま す 。 
フォーム を アクティベート し ま す 。 
新し い オブジェクト の グループ を 作 り ま す ; グループ オブジェクト を 返 し ま す 。 
現在 の オブジェクト の グループ を 終了 し ま す 。 
フォーム の 中 の 最初 の オブジェクト を 見つけ ま す 。 
フォーム の 中 の 最後 の オブジェクト を 見つけ ま す 。 
フォーム に ボックス オブジェクト を 加え ま す 。  特別 な 追加 の メソッド は あ り ま せ ん 。 
フォーム に テキスト オブジェクト を 加え ま す 。  特別 な 追加 の メソッド は あ り ま せ ん 。 
フォーム に クロック オブジェクト を 加え ま す 。 
メソッド : get_clock ( ) 。 
フォーム に ボタン オブジェクト を 加え ま す 。 
メソッド : get_button ( ) 、 set_button ( ) 。 
フォーム に ライト ボタン オブジェクト を 加え ま す 。 
フォーム に ラウンド ボタン オブジェクト を 加え ま す 。 
フォーム に スライダー オブジェクト を 加え ま す 。 
メソッド : set_slider_ value ( ) 、 get_slider_ value ( ) 、 set_slider_bounds ( ) 、 get_slider_bounds ( ) 、 set_slider_ return( ) 、 set_slider_ size ( ) 、 set_slider_precision ( ) 、 set_slider_step ( ) 。 
フォーム に バリュー スライダー オブジェクト を 加え ま す 。 
フォーム に ダイアル オブジェクト を 加え ま す 。 
メソッド : set_dial_ value ( ) 、 get_dial_ value ( ) 、 set_dial_bounds ( ) 、 get_dial_bounds ( ) 。 
フォーム に 2 次元 ポジショナー オブジェクト を 加え ま す 。 
メソッド : set_positioner _xvalue ( ) 、 set_positioner_yvalue ( ) 、 set_positioner_xbounds ( ) 、 set_positioner_ybounds ( ) 、 get_positioner _xvalue ( ) 、 get_positioner_yvalue ( ) 、 get_positioner_xbounds ( ) 、 get_positioner_ybounds ( ) 。 
フォーム に カウンタ オブジェクト を 加え ま す 。 
メソッド : set_counter_ value ( ) 、 get_counter_ value ( ) 、 set_counter_bounds ( ) 、 set_counter_step ( ) , set_counter_precision ( ) 、 set_counter_ return( ) 。 
フォーム に インプット オブジェクト を 加え ま す 。 
メソッド : set_ input ( ) 、 get_ input ( ) 、 set_ input_color ( ) 、 set_ input _ return( ) 。 
フォーム に メニュー オブジェクト を 加え ま す 。 
メソッド : set_menu ( ) 、 get_menu ( ) 、 addto_menu ( ) 。 
フォーム に チョイス オブジェクト を 加え ま す 。 
メソッド : set_choice ( ) 、 get_choice ( ) 、 clear_ choice ( ) 、 addto_ choice ( ) 、 replace _ choice ( ) 、 delete_choice ( ) 、 get_choice_ text ( ) 、 set_choice _ fontsize ( ) 、 set_choice _ fontstyle ( ) 。 
フォーム に ブラウザ オブジェクト を 加え ま す 。 
メソッド : set_browser_topline ( ) 、 clear_browser ( ) 、 add_browser_ line ( ) 、 addto_browser ( ) 、 insert_browser_ line ( ) 、 delete_browser_ line ( ) 、 replace _ browser_ line ( ) 、 get_browser_ line ( ) 、 load_browser ( ) 、 get_browser_ maxline ( ) 、 select_browser_ line ( ) 、 deselect_browser_ line ( ) 、 deselect_browser ( ) 、 isselected_browser_ line ( ) 、 get_browser ( ) 、 set_browser_ fontsize ( ) 、 set_browser_ fontstyle ( ) 、 set_browser_ specialkey ( ) 。 
フォーム に タイマー オブジェクト を 加え ま す 。 
メソッド : set_timer ( ) 、 get_timer ( ) 。 
フォーム オブジェクト に は 以下 の データ 属性 が あ り ま す ; FORMS ドキュメント を 参照 し て くださ い : 
名称 
C の 型 
GL ウィンドウ の id 
フォーム の 幅 
フォーム の 高 さ 
フォーム 左肩 の x 座標 
フォーム 左肩 の y 座標 
フォーム が ディアクティベート さ れ て い る なら 非 ゼロ 
フォーム が 可視 なら 非 ゼロ 
フォーム が 固定 さ れ て い る なら 非 ゼロ 
ダブル バッファ リング が オン なら 非 ゼロ 
この モジュール で は 、 formatter  オブジェクト に 関 し て 二 つ の 実装 を 提供 し て い ま す 。  ほとんど の アプリケーション で は これ ら の クラス を 変更 し たり サブ クラス 化 する こと な く 使 う こと が でき ま す 。 
クラス NullFormatter 
何 も 行 わ な い  formatter  で す 。 
writer  を 省略 する と 、 NullWriter  インスタンス が 生成 さ れ ま す 。 
NullFormatter  インスタンス は 、 writer  の メソッド を 全く 呼び出 し ま せ ん 。 
writer  へ の インタフェース を 実装 する 場合 に は この クラス の インタフェース を 継承 する 必要 が あ り ま す が 、 実装 を 継承 する 必要 は 全く あ り ま せ ん 。 
クラス AbstractFormatter 
標準 の  formatter  で す 。 
この  formatter  実装 は 広範 な  writer で 適用 でき る こと が 実証 さ れ て お り 、 ほとんど の 状況 で 直接 使 う こと が でき ま す 。 
高 機能 の  WWW  ブラウザ を 実装 する ため に 使 わ れ た こと も あ り ま す 。 
formatter  を 作成 する ため の インタフェース は 、 インスタンス 化 し よう と する 個々 の  formatter  クラス に 依存 し ま す 。 
以下 で 解説 する の は 、 インスタンス 化 さ れ た 全て の  formatter  が サポート し な けれ ば な ら な い インタフェース で す 。  モジュール レベル で は データ 要素 を 一 つ 定義 し て い ま す : 
後 に 述べ る  push_ font ( )  メソッド で フォント 指定 を する 時 に 使え る 値 で す 。  また 、 その 他 の  push_property ( )  メソッド の 新し い 値 と し て 使 う こと が でき ま す 。 
AS _IS  の 値 を スタック に 置 く と 、 どの プロパティ が 変更 さ れ た か の 追跡 を 行 わ ず に 、 対応 する  pop _property ( )  メソッド が 呼び出 さ れ る よう に な り ま す 。 
formatter  インスタンス オブジェクト に は 以下 の 属性 が 定義 さ れ て い ま す : 
formatter  と やり取り を 行 う  writer  インスタンス で す 。 
開 か れ て い る 段落 が あ れ ば 閉じ 、 次 の 段落と の 間 に 少な く とも blanklines  が 挿入 さ れ る よう に し ま す 。 
強制 改行 挿入 し ま す 。 
既に 強制 改行 が あ る 場合 は 挿入 し ま せ ん 。 
論理 的 な 段落 は 中断 し ま せ ん 。 
出力 に 水平 罫線 を 挿入 し ま す 。 
現在 の 段落 に 何 ら か の データ が あ る 場合 、 強制 改行 が 挿入 さ れ ま す が 、 論理 的 な 段落 は 中断 し ま せ ん 。 
引数 と キー ワード は  writer  の send_ line_break ( )  メソッド に 渡 さ れ ま す 。 
空白 を 折りたた ん で 書式 化 し な けれ ば な ら な い データ を 提供 し ま す 。  空白 の 折りたたみ で は 、 直前 や 直後 の  add_ flowing_ data  呼び出し に 入 っ て い る 空白 も 考慮 さ れ ま す 。 
この メソッド に 渡 さ れ た データ は 出力 デバイス で 行末 の 折り返 し  ( word - wrap )  さ れ る もの と 想定 さ れ て い ま す 。 
出力 デバイス で の 要求 や フォント 情報 に 応じ て 、 writer  オブジェクト で も 何 ら か の 行末 折り返し が 行 わ れ な けれ ば な ら な い の で 注意 し て くださ い 。 
変更 を 加え ず に  writer  に 渡 さ な けれ ば な ら な い データ を 提供 し ま す 。  改行 および タブ を 含 む 空白 を  data  の 値 に し て も 問題 あ り ま せ ん 。 
現在 の 左 マージン 位置 の 左側 に 配置 さ れ る ラベル を 挿入 し ま す 。 
この ラベル は 箇条 書 き 、 数字 つき 箇条 書き の 書式 を 構築 する 際 に 使 わ れ ま す 。 
書式 化 指定 は 文字 列 から な り 、  counter  の 値 と 合わせ て ラベル の 値 を 算出 する ため に 使 わ れ ま す 。 
書式 文字 列 の 各 文字 は ラベル 値 に コピー さ れ ま す 。  この とき いく つ か の 文字 は  counter  値 を 変換 を 指 す もの と し て 認識 さ れ ま す 。 
特に 、 文字  " 1 "  は アラビア 数字 の  counter  値 を 表 し 、 " A "  と  " a "  は それぞれ 大 文字 および 小 文字 の アルファベット に よ る  counter  値 を 表 し 、 " I "  と  " i "  は それぞれ 大 文字 および 小 文字 の ローマ 数字 に よ る  counter  値 を 表 し ま す 。 
アルファベット および ローマ 字 数字 へ の 変換 の 際 に は 、 counter  の 値 は ゼロ 以上 で あ る 必要 が あ る の で 注意 し て くださ い 。 
以前 の  add_ flowing_ data ( )  呼び出し で バッファ さ れ て い る 出力 待ち の 空白 を 、 関連 付け られ て い る  writer  オブジェクト に 送信 し ま す 。 
この メソッド は  writer  オブジェクト に 対 する あらゆる 直接 操作 の 前 に 呼び出 さ な けれ ば な り ま せ ん 。 
新た な 字 揃え  ( alignment )  設定 を 字 揃え スタック の 上 に プッシュ し ま す 。 
変更 を 行 い た く な い 場合 に は  AS _IS  に する こと が でき ま す 。 
字 揃え 設定 値 が 以前 の 設定 から 変更 さ れ た 場合 、 writer  の  new_ alignment ( )  メソッド が  align  の 値 と 共 に 呼び出 さ れ ま す 。 
以前 の 字 揃え 設定 を 復元 し ま す 。 
writer  オブジェクト の フォント プロパティ の うち 、 一部 また は 全て を 変更 し ま す 。 
AS _IS  に 設定 さ れ て い な い プロパティ は 引数 で 渡 さ れ た 値 に 設定 さ れ 、 その 他 の 値 は 現在 の 設定 を 維持 し ま す 。 
writer  の new_ font ( )  メソッド は 完全 に 設定 解決 さ れ た フォント 指定 で 呼び出 さ れ ま す 。 
以前 の フォント 設定 を 復元 し ま す 。 
左 マージン の インデント 数 を 一 つ 増や し 、 論理 タグ  margin  を 新た な インデント に 関連 付け ま す 。 
マージン レベル の 初期 値 は  0 で す 。 
変更 さ れ た 論理 タグ の 値 は 真値 と な ら な けれ ば な り ま せ ん ;  AS _IS  以外 の 偽 の 値 は マージン の 変更 と し て は 不 適切 で す 。 
以前 の マージン 設定 を 復元 し ま す 。 
任意 の スタイル 指定 を スタック に プッシュ し ま す 。 
全て の スタイル は スタイル スタック に 順番 に プッシュ さ れ ま す 。 
AS _IS  値 を 含 み 、 スタック 全体 を 表 す タプル は  writer  の  new_styles ( )  メソッド に 渡 さ れ ま す 。 
push_style ( )  に 渡 さ れ た 最新  n  個 の スタイル 指定 を ポップ し ま す 。 
AS _IS  値 を 含 み 、 変更 さ れ た スタック を 表 す タプル は  writer  の  new_styles ( )  メソッド に 渡 さ れ ま す 。 
writer  の 割り付け スタイル  ( spacing style )  を 設定 し ま す 。 
現在 の 段落 に データ が 予期 せ ず 追加 さ れ た こと を  formatter  に 知 ら せ ま す 。 
この メソッド は  writer  を 直接 操作 し た 際 に 使 わ な けれ ば な り ま せ ん 。 
writer  操作 の 結果 、 出力 の 末尾 が 強制 改行 と な っ た 場合 、 オプション の flag  引数 を 偽 に 設定 する こと が でき ま す 。 
FORMS オブジェクト の 種類 ごと に 特有 の メソッド の 他 に 、 全て の FORMS オブジェクト は 以下 の メソッド も 持 っ て い ま す : 
オブジェクト の コール バック 関数 と 引数 を 設定 し ま す 。 
オブジェクト が ユーザ から の 応答 を 必要 と する とき に は 、 コール バック 関数 は 2 つ の 引数 、 オブジェクト と コール バック の 引数 と とも に 呼び出 さ れ ま す 。 
( コール バック 関数 の な い FORMS オブジェクト は 、 ユーザ から の 応答 を 必要 と する とき に は fl . do _forms ( ) あるいは fl . check _ forms ( ) に よ っ て 返さ れ ま す 。 
) 引数 なし に この メソッド を 呼び出 す と 、 コール バック 関数 を 削除 し ま す 。 
オブジェクト を 削除 し ま す 。 
オブジェクト を 表示 し ま す 。 
オブジェクト を 隠 し ま す 。 
オブジェクト を 再 描画 し ま す 。 
固定 し た オブジェクト の 固定 を 解除 し ま す 。 
FORMS オブジェクト に は 以下 の データ 属性 が あ り ま す ; FORMS ドキュメント を 参照 し て くださ い 。 
オブジェクト クラス 
オブジェクト タイプ 
ボックス タイプ 
左肩 の x 座標 
左肩 の y 座標 
幅 
高 さ 
第 1 の 色 
第 2 の 色 
配置 
ラベル の 色 
ラベル の フォント サイズ 
ラベル の 文字 列 
ラベル の スタイル 
( FORMS ドキュメント 参照 ) 
3 . 4 . 2  制限 と 他 に 考慮 す べ き こと 
以下 の 例 は fpectl モジュール の 使用 を 開始 する 方法 と モジュール の テスト 演算 に つ い て 示 し て い ま す 。 
この マニュアル で は 、 拡張 モジュール を 書 い たり  Python  インタプリタ を アプリケーション に 埋め込 ん だり し た い  C  および  C + +  プログラマ が 利用 でき る  API  に つ い て 述べ て い ま す 。 
は 拡張 モジュール を 書 く 際 の 一般 的 な 決まりごと に つ い て 記述 し て い ま す が 、 API  の 詳細 まで は 記述 し て い な い の で 、 この ドキュメント が 手引き に な り ま す 。 
警告 : この ドキュメント の 現在 の バージョン は まだ 不 完全 で す 。 
と は い え 、 役 に 立 つ だ ろ う と 思 い ま す 。 
引き続 き ドキュメント の 整備 を 継続 し て 、  Python  ソース コード の リリース と は 別 に 、 その 時々 で 新た な バージョン を リリース する つもり で す 。 
FSSpec オブジェクト の 生 データ で す 。  他 の アプリケーション に 渡 す と い っ た 場合 に 適 し た 形式 で す 。 
FSSpec  オブジェクト の 表 す ファイル の フル パス 名 を 返 し ま す 。 
FSSpec オブジェクト で 記述 さ れ た ファイル の 情報 を 、 ( wdRefNum ,  parID ,  name )  の タプル で 返 し ま す 。 
この FSSpec で 記述 さ れ た ファイル の エイリアス オブジェクト を 作成 し ま す 。 
省略 可能 な file パラメータ を 渡 す と 、 エイリアス は その ファイル に 対 する 相対 指定 で 作成 さ れ 、 その 他 の 場合 は 絶対 指定 と な り ま す 。 
この ファイル を 指 す 最小 限 の エイリアス 情報 を 作成 し ま す 。 
この ファイル の 4 文字 の クリエータ と タイプ を 返 し ま す 。 
この ファイル に 4 文字 の クリエータ と タイプ を 設定 し ま す 。 
ファイル の ファインダ 情報 を 示 す FInfo  オブジェクト を 返 し ま す 。 
ファイル の ファインダ 情報 を finfo ( FInfo  オブジェクト ) で 与え た 値 に 設定 し ま す 。 
作成 日 、 修正 日 、 バックアップ 日 を 意味 する 3 つ の 浮動 小数 点数 から な る タプル を 返 し ま す 。 
ファイル の 作成 日 、 修正 日 、 バックアップ 日 を 設定 し ま す 。 
各々 の 値 は  Python  が 時刻 の 表現 に 使 っ て い る 標準 の 浮動 小数 点 型 で す 。 
req  で 表 さ れ る ファイル を  FTP  越し に オープン し ま す 。  ログ イン は 常 に 空 の ユーザ ネーム および パスワード で 行 わ れ ま す 。 
いく つ か の コマンド は 2 つ の タイプ に つ い て 実行 し ま す : 1 つ は テキスト ファイル で 、 もう 1 つ は バイナリ ファイル を 扱 い ま す 。 
これ ら の メソッド の テキスト バージョン で は " lines " 、 バイナリ バージョン で は " binary " の 語 が メソッド 名 の 終わり に つ い て い ま す 。 
FTP インスタンス に は 以下 の メソッド が あ り ま す : 
インスタンス の デバッグ レベル を 設定 し ま す 。 
この 設定 に よ っ て デバッグ 時 に 出力 さ れ る 量 を 調節 し ま す 。 
デフォルト は 0 で 、 何 も 出力 さ れ ま せ ん 。 
1 なら 、 一般 的 に 1 つ の コマンド あたり 1 行 の 適当 な 量 の デバッグ 出力 を 行 い ま す 。 
2 以上 なら 、 コントロール 接続 で 受信 し た 各行 を 出力 し て 、 最大 の デバッグ 出力 を し ま す 。 
指定 さ れ た ホスト と ポート に 接続 し ま す 。 
ポート 番号 の デフォルト 値 は FTP プロトコル の 仕様 で 定め られ た 21 で す 。 
他 の ポート 番号 を 指定 する 必要 は めった に あ り ま せ ん 。 
この 関数 は ひと つ の インスタンス に 対 し て 一 度 だけ 実行 す べ き で す ; インスタンス が 作 ら れ た 時 に ホスト 名 が 与え られ て い た ら 、 呼び出 す べ き で は あ り ま せ ん 。 
これ 以外 の 他 の 全て の メソッド は 接続 さ れ た 後 で 実行 可能 と な り ま す 。 
接続 し て 最初 に サーバ から 送 ら れ て くる ウェルカム メッセージ を 返 し ま す 。 
( この メッセージ に は 、 ユーザ に と っ て 適切 な 注意 書き や ヘルプ 情報 が 含 ま れ る こと が あ り ま す 。 ) 
与え られ た user で ログ イン し ま す 。 
passwd と acct の パラメータ は 省略 可能 で 、 デフォルト で は 空 文字 列 で す 。 
もし user が 指定 さ れ な い なら 、 デフォルト で 'anonymous ' に な り ま す 。 
もし user が 'anonymous ' なら 、 デフォルト の passwd は 'anonymous @' に な り ま す 。 
この function は 各 インスタンス に つ い て 一 度 だけ 、 接続 が 確立 し た 後 に 呼び出 さ な けれ ば な り ま せ ん ; インスタンス が 作 ら れ た 時 に ホスト 名 と ユーザ 名 が 与え られ て い た ら 、 この メソッド を 実行 す べ き で は あ り ま せ ん 。 
ほとんど の FTP コマンド は クライアント が ログ イン し た 後 に 実行 可能 に な り ま す 。 
実行 中 の ファイル 転送 を 中止 し ま す 。 
これ は いつ も 機能 する わけ で は あ り ま せ ん が 、 や っ て み る 価値 は あ り ま す 。 
シンプル な コマンド 文字 列 を サーバ に 送信 し て 、 受信 し た 文字 列 を 返 し ま す 。 
バイナリ 転送 モード で ファイル を 受信 し ま す 。 
command は 適切 な " RETR " コマンド : ' RETR filename ' で な けれ ば な り ま せ ん 。 
関数 callback は 、 受信 し た データ ブロック の それぞれ に 対 し て 、 データ ブロック を 1 つ の 文字 列 の 引数 と し て 呼び出 さ れ ま す 。  省略 可能 な 引数 maxblocksize は 、 実際 の 転送 を 行 う の に 作 ら れ た 低 レベル の ソケット オブジェクト から 読み込 む 最大 の チャン クサイズ を 指定 し ま す ( これ は callback に 与え られ る データ ブロック の 最大 サイズ に も な り ま す ) 。 
妥当 な デフォルト 値 が 設定 さ れ ま す 。  rest は 、 transfercmd ( ) メソッド と 同じ もの で す 。 
ASCII 転送 モード で ファイル と ディレクトリ の リスト を 受信 し ま す 。  command は 、 適切 な " RETR " コマンド ( retrbinary ( ) を 参照 ) あるいは " LIST " コマンド ( 通常 は 文字 列 ' LIST ' ) で な けれ ば な り ま せ ん 。 
関数 callback は 末尾 の CRLF を 取り除 い た 各行 に 対 し て 実行 さ れ ま す 。 
デフォルト で は callback は sys . st dout に 各行 を 印字 し ま す 。 
boolean が true なら ` `パッシブ モード ' ' を オン に し 、 そう で な い ならパッシブ モード を オフ に し ま す 。 
( Python  2 . 0 以前 で は デフォルト でパッシブ モード は オフ に さ れ て い ま し た が 、 Python  2 . 1 以後 で は デフォルト で オン に な っ て い ま す 。 ) 
バイナリ 転送 モード で ファイル を 転送 し ま す 。 
command は 適切 な " STOR " コマンド : " STOR filename " で な けれ ば な り ま せ ん 。  file は 開 か れ た ファイル オブジェクト で 、 read ( ) メソッド で EOF まで 読み込 ま れ 、 ブロック サイズ blocksize で データ が 転送 さ れ ま す 。 
引数 blocksize の デフォルト 値 は 8192 で す 。  バージョン  2 . 1  で  変更  さ れ た 仕様 : blocksize の デフォルト 値 が 追加 さ れ ま し た 
ASCII 転送 モード で ファイル を 転送 し ま す 。  command は 適切 な " STOR " コマンド で な けれ ば な り ま せ ん ( storbinary ( ) を 参照 ) 。 
file は 開 か れ た ファイル オブジェクト で 、 readline ( ) メソッド で EOF まで 読み込 ま れ 、 各行 が データ が 転送 さ れ ま す 。 
データ 接続 中 に 転送 を 初期 化 し ま す 。 
もし 転送 中 なら 、 " EPRT " あるいは " PORT " コマンド と 、 cmd で 指定 し た コマンド を 送信 し 、 接続 を 続け ま す 。 
サーバ がパッシブ なら 、 " EPSV " あるいは " PASV " コマンド を 送信 し て 接続 し 、 転送 コマンド を 開始 し ま す 。 
しかし 、 RFC  959 で は rest が 印字 可能 な ASCII コード 33 から 126 の 範囲 の 文字 列 から な る こと を 要求 し て い る こと に 注意 し て 下さ い 。 
したが っ て 、 transfercmd ( ) メソッド は rest を 文字 列 に 変換 し ま す が 、 文字 列 の 内容 に つ い て チェック し ま せ ん 。 
もし " REST " コマンド を サーバ が 認識 し な い なら 、 例外 error _reply が 発生 し ま す 。 
この 例外 が 発生 し た ら 、 引数 rest なし に transfercmd ( ) を 実行 し ま す 。 
transfercmd ( ) と 同様 で す が 、 データ と 予想 さ れ る サイズ と の タプル を 返 し ま す 。 
もし サイズ が 計算 でき な い なら 、 サイズ の 代わり に None が 返 さ れ ま す 。  cmd と rest は transfercmd ( ) の もの と 同じ で す 。 
" NLST " コマンド で 返 さ れ る ファイル の リスト を 返 し ま す 。 
省略 可能 な argument は 、 リスト アップ する ディレクトリ で す ( デフォルト で は サーバ の カレント ディレクトリ で す ) 。 
" NLST " コマンド に 非 標準 で あ る 複数 の 引数 を 渡 す こと が でき ま す 。 
" LIST " コマンド で 返 さ れ る ディレクトリ 内 の リスト を 作 り 、 標準 出力 へ 出力 し ま す 。 
省略 可能 な argument は 、 リスト アップ する ディレクトリ で す ( デフォルト で は サーバ の カレント ディレクトリ で す ) 。 
" LIST " コマンド に 非 標準 で あ る 複数 の 引数 を 渡 す こと が でき ま す 。 
もし 最後 の 引数 が 関数 なら 、 retrlines ( ) の よう に callback と し て 使 わ れ ま す ; デフォルト で は sys . st dout に 印字 し ま す 。 
この メソッド は None を 返 し ま す 。 
サーバ 上 の ファイル の ファイル 名 fromname を toname へ 変更 し ま す 。 
サーバ から ファイル filename を 削除 し ま す 。 
成功 し た ら 応答 の テキスト を 返 し 、 そう で な い なら パー ミッション エラー で は error _perm を 、 他 の エラー で は error _reply を 返 し ま す 。 
サーバ の カレント ディレクトリ を 設定 し ま す 。 
サーバ 上 に 新た に ディレクトリ を 作 り ま す 。 
サーバ 上 の カレント ディレクトリ の パス を 返 し ま す 。 
サーバ 上 の ディレクトリ dirname を 削除 し ま す 。 
サーバ 上 の ファイル filename の サイズ を 尋ね ま す 。 
成功 し た ら ファイル サイズ が 整数 で 返 さ れ 、 そう で な い なら None が 返 さ れ ま す 。 
" SIZE " コマンド は 標準 化 さ れ て い ま せ ん が 、 多く の 普通 の サーバ で 実装 さ れ て い る こと に 注意 し て 下さ い 。 
サーバ に " QUIT " コマンド を 送信 し 、 接続 を 閉じ ま す 。 
これ は 接続 を 閉じ る の に ` ` 礼儀 正し い ' ' 方法 で す が 、 " QUIT " コマンド に 反応 し て サーバ の 例外 が 発生 する か も しれ ま せ ん 。 
この 例外 は 、 close ( ) メソッド に よ っ て FTP インスタンス に 対 する その 後 の コマンド 使用 が 不可 に な っ て い る こと を 示 し て い ま す ( 下記 参照 ) 。 
接続 を 一方 的 に 閉じ ま す 。 
既に 閉じ た 接続 に 対 し て 実行 す べ き で は あ り ま せ ん ( 例えば quit ( ) を 呼び出 し て 成功 し た 後 など ) 。 
この 実行 の 後 、 FTP インスタンス は もう 使用 す べ き で は あ り ま せ ん ( close ( ) あるいは quit ( ) を 呼び出 し た 後 で 、 login ( ) メソッド を もう 一 度 実行 し て 再び 接続 を 開 く こと は でき ま せ ん ) 。 
関数 定義 は 、 ユーザ 定義 関数 オブジェクト を 定義 し ま す  ( 3 . 2  節 参照 ) : 
関数 定義 は 実行 可能 な 文 で す 。 
関数 定義 を 実行 する と 、 現在 の ローカル な 名前 空間 内 で 関数 名 を 関数 オブジェクト  ( 関数 の 実行 可能 コード を くる む ラッパ )  に 束縛 し ま す 。 
この 関数 オブジェクト に は 、 関数 が 呼び出 さ れ た 際 に 使 わ れ る グローバル な 名前 空間 と し て 、 現在 の グローバル な 名前 空間 へ の 参照 が 入 っ て い ま す 。 
デ コレータ の 返 す 値 は 関数 オブジェクト で は な く 、 関数 名 に バインド さ れ ま す 。 
複数 の デコレータ を 入れ 子 に し て 適用 し て も かま い ま せ ん 。  例えば 、 以下 の よう な コード : 
と 同じ で す 。 
デフォルト 値 を 伴 う パラメタ に 対 し て は 、 関数 呼び出し の 際 に 対応 する パラメタ が 省略 さ れ る と 、 パラメタ の 値 は デフォルト 値 で 置き換え られ ま す 。 
ある パラメタ が デフォルト 値 を 持 つ 場合 、 それ 以後 の パラメタ は 全て デフォルト 値 を 持 た な けれ ば な り ま せ ん --  これ は 文法 的 に は 表現 さ れ て い な い 構文 上 の 制限 で す 。 
デフォルト パラメタ 値 は 関数 定義 を 実行 する 際 に 値 評価 さ れ ま す 。 
これ は 、 デフォルト パラメタ の 式 は 関数 を 定義 する とき に ただ 一 度 だけ 評価 さ れ 、 同じ  ` ` 計算 済み の ' '  値 が 全て の 呼び出し で 使 わ れ る こと を 意味 し ま す 。 
デフォルト パラメタ 値 が リスト や 辞書 の よう な 変更 可能 な オブジェクト で あ る 場合 、 この 使用 を 理解 し て お く こと は 特に 重要 で す :  関数 で この オブジェクト を  ( 例えば リスト に 要素 を 追加 し て )  変更 する  と 、 実際 の デフォルト 値 が 変更 さ れ て しま い ま す 。 
一般 に は 、 これ は 意図 し な い 動作 で す 。 
この よう な 動作 を 避け る に は 、 デフォルト 値 に  None  を 使 い 、 この 値 を 関数 本体 の 中 で 明示 的 に テスト し ま す 。  例えば 以下 の よう に し ま す : 
この 変数 の デフォルト 値 は 空 の タプル で す 。 
無名 関数 の 作成 に は 、 5 . 11  節 で 記述 さ れ て い る ラムダ 形式  ( lambda  form )  を 使 い ま す 。 
ラムダ 形式 は 、 単純 化 さ れ た 関数 定義 を 行 う ため の 略記法 に すぎ ま せ ん ;`` def' ' 文 で 定義 さ れ た 関数 は 、 ラムダ 形式 で 定義 さ れ た 関数 と 全く 同様 に 引渡 し たり 、 他 の 名前 に 代入 し たり でき ま す 。 
実際 に は 、 `` def' ' 形式 は 複数 の 式 を 実行 でき る と い う 点 で より 強力 で す 。 
プログラマ の ため の 注釈 :  関数 は 一 級 の  ( first - class )  オブジェクト で す 。 
関数 定義 内 で ` ` def' ' 形式 を 実行 する と 、 戻 り 値 と し て 返 し たり 引き渡 し たり でき る ローカル な 関数 を 定義 し ま す 。 
ネスト さ れ た 関数 内 で 自由 変数 を 使 う と 、 def 文 の 入 っ て い る 関数 の ローカル 変数 に アクセス する こと が でき ま す 。 
詳細 は 4 . 1  節 を 参照 し て くださ い 。 
この 節 で は 、 Python  の 型 オブジェクト と 単量子  ( singleton )  オブジェクト  None  に つ い て 述べ ま す 。 
7 . 1 . 1  型 オブジェクト (type object ) 
future  文 
は 、 将来 の 特定 の  Python  の リリース で 利用 可能 に な る よう な 構文 や 意味 付け を 使 っ て 、 特定 の モジュール を コンパイル さ せ る ため の 、 コンパイラ に 対 する 指示 句  ( directive )  で す 。 
future  文 は 、 言語 仕様 に 非 互換 性 が もたら さ れ る よう な 、 将来 の  Python  の バージョン に 容易 に 移行 でき る よう 意図 さ れ て い ま す 。 
future  文 に よ っ て 、 新た な 機能 が 標準 化 さ れ た リリース が 出 さ れ る 前 に 、 その 機能 を モジュール 単位 で 使え る よう に し ま す 。 
future  文 は 、 モジュール の 先頭 周辺 に 書 か な けれ ば な り ま せ ん 。 
future  文 の 前 に 書 い て よ い 内容 は : 
で す 。  Python  2 . 3  が  feature  文 で 新た に 認識 する よう に な っ た 機能 は 、 " generators " 、 " division " 、 および  " nested_scopes " で す 。 
" generators "  および  " nested_scopes "  は Python  2 . 3  で は 常 に 有効 に な っ て い る の で 、 冗長 な 機能 名 と いえ ま す 。 
future  文 は 、 コンパイル 時 に 特別 な や り 方 で 認識 さ れ 、 扱 わ れ ま す : 言語 の 中核 を な す 構文 構成  ( construct )  に 対 する 意味 付け が 変更 さ れ て い る 場合 、 変更 部分 は しばしば 異な る コード を 生成 する こと で 実現 さ れ て い ま す 。 
以下 の 文: import_ _future__ [ as  name ] 
Python  2 . 2  から は 、 この 仕様 を  compile ( )  の オプション 引数 で 制御 でき る よう に な り ま し た - -  詳細 は ライブラリ リファレンス の compile ( )  に 関 する ドキュメント を 参照 し て くださ い 。 
対話 的 インタプリタ の プロンプト で タイプ 入力 し た  future  文 は 、 その 後 の インタプリタ セッション 中 で 有効 に な り ま す 。 
インタプリタ を  - i  オプション で 起動 し て 実行 す べ き スクリプト 名 を 渡 し 、 スクリプト 中 に  future  文 を 入れ て お く と 、 新た な 機能 は スクリプト が 実行 さ れ た 後 に 開始 する 対話 セッション で 有効 に な り ま す 。 
9  将来 の 方向 性  Python  ドキュメント は 変更 に 次 ぐ 変更 の 歴史 を 重ね て き て お り 、 その ほとんど は やや 小 規模 の 漸進 的 な もの で し た 。 
マーク アップ 言語 や ドキュメント の 処理 に 使 わ れ る ツール に 関 し て 非常 に 多く の 話し合い が 行 わ れ て き ま し た 。 
この 節 で は 、 変更 の さま と 、 将来 の 開発 に お い て 最も あ り え そう な 道筋 に つ い て 議論 し ま す 。 
7 . 5 . 1 1  ジェネレータ オブジェクト  ジェネレータ  ( generator )  オブジェクト は 、  Python  が ジェネレータ 型 イテレータ を 実装 する ため に 使 っ て い る オブジェクト で す 。 
ジェネレータ オブジェクト は 、 通常 、 PyGen _New  で 明示 的 に 生成 さ れ る こと は な く 、 値 を 逐次 生成 する よう な 関数 に 対 し て イテレーション を 行 う とき に 生成 さ れ ま す 。 
ジェネレータ オブジェクト に 使 わ れ て い る  C  構造 体 で す 。 
ジェネレータ オブジェクト に 対応 する 型 オブジェクト で す 。 
ob  が ジェネレータ オブジェクト の 場合 に 真 を 返 し ま す 。 ob が  NULL  で あ っ て は な り ま せ ん 。 
ob  の 型 が PyGen_Type の 場合 に 真 を 返 し ま す 。 
ob が  NULL  で あ っ て は な り ま せ ん 。  PyObject * 
frame  オブジェクト に 基づ い て 新た な ジェネレータ オブジェクト を 生成 し て 返 し ま す 。  パラメタ が  NULL  で あ っ て は な り ま せ ん 。 
ジェネレータ 式  ( generator  expression )  と は 、 丸括弧 を 使 っ た コンパクト な ジェネレータ 表記 法 で す : 
ジェネレータ 式 は 新た な ジェネレータ オブジェクト を 生み出 し ま す 。 
ジェネレータ 式 は 単一 の 式 の 後ろ に 少な く とも 一 つ の  for 節 と 、 場合 に よ り さらに 複数 の for  また は  if  節 を 続け た もの で す 。 
新た な ジェネレータ が 繰り返 す 値 は 、 各 for および  if  節 を ブロック と し て 、 左 から 右 へ と ネスト し 、 その 最内 ブロック の 中 で 式 を 評価 し た 結果 を 出力 し て い る もの と みな せ ま す 。  ジェネレータ 式 の 使 う 変数 の 評価 は 、 ジェネレータ オブジェクト に 対 し て next ( )  メソッド を 呼び出 す まで 遅延 さ れ ま す 。 
C . 2  翻訳 者 一覧  ( 敬称 略 ) 
エ 
__builtin__ ( チネ、 ゜ケ モジュール ) , [ Link ] , [ Link ] 
_ob_next  ( PyObject  の メンバ ) 
_ob_prev  ( PyObject  の メンバ ) 
apply( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
classmethod ( )  ( 組み込 み 関数 ) 
cmp ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] 
coerce ( )  ( 組み込 み 関数 ) 
exceptions  ( 組み込 み  モジュール ) 
exec _prefix  ( 環境 変数 ) , [ Link ] , [ Link ] 
hash ( )  ( 組み込 み 関数 ) , [ Link ] 
ihooks  ( 標準  モジュール ) 
len ( )  ( 組み込 み 関数 ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
ob _refcnt  ( PyObject  の メンバ ) 
ob _size ( PyVarObject  の メンバ ) 
ob_type  ( PyObject  の メンバ ) 
PATH  ( 環境 変数 ) , [ Link ] 
pow ( )  ( 組み込 み 関数 ) , [ Link ] 
prefix  ( 環境 変数 ) , [ Link ] , [ Link ] , [ Link ] , [ Link ] 
PYTHON DU MPREFS  ( 環境 変数 ) 
PYTHONHOME  ( 環境 変数 ) , [ Link ] 
PYTHONPATH  ( 環境 変数 ) , [ Link ] 
reload ( )  ( 組み込 み 関数 ) 
repr ( )  ( 組み込 み 関数 ) , [ Link ] 
rexec  ( 標準  モジュール ) 
signal  ( 組み込 み  モジュール ) 
staticmethod ( )  ( 組み込 み 関数 ) 
str ( )  ( 組み込 み 関数 ) 
sys  ( 組み込 み  モジュール ) , [ Link ] , [ Link ] 
thread  ( 組み込 み  モジュール ) 
tp_alloc  ( PyTypeObject  の メンバ ) 
tp_allocs ( PyTypeObject  の メンバ ) 
tp_as_buffer  ( PyTypeObject  の メンバ ) 
tp_ base  ( PyTypeObject  の メンバ ) 
tp_ bases ( PyTypeObject  の メンバ ) 
tp_ basicsize ( PyTypeObject  の メンバ ) 
tp_cache ( PyTypeObject  の メンバ ) 
tp_ call  ( PyTypeObject  の メンバ ) 
tp_ clear  ( PyTypeObject  の メンバ ) 
tp_ compare  ( PyTypeObject  の メンバ ) 
tp_dealloc  ( PyTypeObject  の メンバ ) 
tp_descr _ get  ( PyTypeObject  の メンバ ) 
tp_descr_set  ( PyTypeObject  の メンバ ) 
tp_dict  ( PyTypeObject  の メンバ ) 
tp_dictoffset  ( PyTypeObject  の メンバ ) 
tp_doc ( PyTypeObject  の メンバ ) 
tp_flags ( PyTypeObject  の メンバ ) 
tp_free  ( PyTypeObject  の メンバ ) 
tp_frees  ( PyTypeObject  の メンバ ) 
tp _ getattr  ( PyTypeObject  の メンバ ) 
tp _ getattro  ( PyTypeObject  の メンバ ) 
tp _ getset  ( PyTypeObject  の メンバ ) 
tp_ hash ( PyTypeObject  の メンバ ) 
tp_init  ( PyTypeObject  の メンバ ) 
tp_ is _gc ( PyTypeObject  の メンバ ) 
tp_itemsize ( PyTypeObject  の メンバ ) 
tp_iter  ( PyTypeObject  の メンバ ) 
tp_iternext  ( PyTypeObject  の メンバ ) 
tp_maxalloc  ( PyTypeObject  の メンバ ) 
tp_members ( PyTypeObject  の メンバ ) 
tp_methods  ( PyTypeObject  の メンバ ) 
tp_mro  ( PyTypeObject  の メンバ ) 
tp_name  ( PyTypeObject  の メンバ ) 
tp_new( PyTypeObject  の メンバ ) 
tp_next  ( PyTypeObject  の メンバ ) 
tp_print  ( PyTypeObject  の メンバ ) 
tp_repr ( PyTypeObject  の メンバ ) 
tp_richcompare  ( PyTypeObject  の メンバ ) 
tp_setattr  ( PyTypeObject  の メンバ ) 
tp_setattro  ( PyTypeObject  の メンバ ) 
tp_str  ( PyTypeObject  の メンバ ) 
tp_subclasses ( PyTypeObject  の メンバ ) 
tp_traverse  ( PyTypeObject  の メンバ ) 
tp _weaklist  ( PyTypeObject  の メンバ ) 
tp _weaklistoffset  ( PyTypeObject  の メンバ ) 
tuple ( )  ( 組み込 み 関数 ) , [ Link ] 
unicode ( )  ( 組み込 み 関数 )  V 
1 . 1 . 1  Python  スクリプト の 実行 方法 
Python  2 . 3 a 2  の 時点 で は 、 自分 の マシン に  MacPython - OSX  を インストール する に は ソース 配布 物 を 取得 し 、 いわゆる  " framework  Python "  を ビルド する の が 唯一 の 正し い 方法 で す 。  ビルド 方法 の 詳細 は  Mac\/OSX\/ README  に あ り ま す 。 
この フォルダ の 中 に は 、  PythonIDE  統合 開発 環境 、 ファインダ から ダブル クリック し て  Python  スクリプト を 起動 する ため の  PythonLauncher 、 Package Manager  が 入 っ て い ま す 。 
フレームワーク  \/ Library \/ Frameworks\/Python . framework  。  実際 の 処理 に かかわ る 部分 で す が 、 たいてい の 場合 それ を 気 に する 必要 は あ り ま せ ん 。 
1 . 2 . 1  対話 型 インタプリタ を 使 う 
1 . 2  MacPython - OS 9  の 取得 と インストール  最新 の リリース バージョン や 実験 的 な 最新 版 は 、 Jack  Jansen  が 運営 し て い る MacPython  の ページ : http:\/\/homepages . cwi.nl \/ ~jack \/ macpython . html  で 探 す と よ い で しょ う 。 
最新 版 の 説明 は 配布 物 中 の  README  を 参照 し て くださ い 。  MacPython - OS 9  は  Mac  OS  X  上 で 正常 に 動作 し 、 クラシック 環境 で は な く ネイティブ モード で 動 き ま す 。 
と は い え 、  CFM  ベース の  Python  を 使 い た い と い う 特別 な 理由 が な い 限り 、 Mac  OS  X  上 で は  MacPython - OSX  を 使 い ま しょ う 。 
1 . 2 . 4 . 1  エディタ で 作成 する 
1 . 2 . 4 . 2  Python モード 付き の エディタ 
6 . 12 . 1  future  文  ( future
global  文 は 、 現在 の コード ブロック 全体 で 維持 さ れ る 宣言 文 で す 。 
global  文 は 、 列挙 し た 識別 子 を グローバル 変数 と し て 解釈 する よう 指定 する こと を 意味 し ま す 。 
global  を 使 わ ず に グローバル 変数 に 代入 を 行 う こと は 不 可能 で す が 、 自由 変数 を 使 え ば その 変数 を グローバル で あ る と 宣言 せ ず に グローバル 変数 を 参照 する こと が でき ま す 。 
プログラマ の ため の 注意 点 :  global  は パーザ に 対 する 指示 句  ( directive )  で す 。 
この 指示 句 は 、 global  文 と 同時 に 読み込 ま れ た コード に 対 し て のみ 適用 さ れ ま す 。 
特に 、 exec  文内 に 入 っ て い る global  文 は 、 exec  文 を  含 ん で い る コード ブロック 内 に 効果 を 及ぼ す こと は な く 、 exec  文内 に 含 ま れ て い る コード は 、 exec  文 を 含 む コード 内 で の global  文 に 影響 を 受け ま せ ん 。 
同様 の こと が 、 関数 eval ( ) 、  execfile ( )  、 および compile ( )  に も 当てはま り ま す 。 
req  で 表 さ れ る  gopher  上 の リソース を オープン し ま す 。 
6 . 12  文法 に お け る 導出 の 表示  形式 文法 に お け る 導出  ( producution )  を 表示 する ため に 、 特殊 な マーク アップ を 使え ま す 。 
マーク アップ は 単純 な もの で 、  BNF  ( や その 派生 形 )  の 全て の 側面 を モデル 化 し よう と は し て い ま せ ん が 、 シンボル を 記述 する と その シンボル の 定義 へ の ハイパーリンク に な る よう な 表示 を 文脈 自由 文法 に 対 し て 実現 し て い ま す 。 
環境 が 一 つ と 、 二 つ の マクロ が あ り ま す : 
この 環境 は 、 ひと まとまり の 導出 規則 を 囲 む ため に 使 い ま す 。 
この 環境 で は マクロ を 二 つ だけ 定義 し て い ま す 。 
ドキュメント で 二 つ 以上 の 言語 に つ い て 説明 する 場合 、 オプション の パラメタ  language を 使 っ て 、 言語 間 で 導出 規則 を 区別 せ ね ば な り ま せ ん 。 
パラメタ の 値 は ファイル 名 の 一部 に 使え る よう な 短 い 名前 に せ ね ば な り ま せ ん ;  コロン や 、 複数 の プラットフォーム 間 で 同時 に ファイル 名 に 使え な い よう な 文字 は 含め て は な り ま せ ん 。 
文法 に お け る 導出 規則 で す 。 
導出 規則 は 、 name  を definition で あ る と 定義 し ま す 。  name  に は マーク アップ を 入れ て は な ら ず 、 ハイフン を 使 っ た 一 つ 以上 の 文法 の サポート は 定義 さ れ て い ま せ ん 。 
一 つ の  production  に は 単一 の シンボル だけ を 定義 でき ま す  - - 複数 シンボル の 定義 を 行 っ て は な り ま せ ん 。 
production  マクロ が 定義 し て い る シンボル の 名前 で 、 シンボル の definition  の 中 で 使 い ま す 。 
シンボル name  は 可能 な 場合 に は シンボル 定義 へ の ハイパーリンク に な り ま す 。 
必ず しも 文法 全体 を 単一 の production list  環境 に 定義 する 必要 は な い の で 注意 し て くださ い ;  任意 の 数 の グループ を 作 っ て 文法 を 記述 し て かま い ま せ ん 。 
token  を 使 う 場合 に は 常 に production  と 対応 付け せ ね ば な り ま せ ん 。  以下 は 
から と っ た 例 で す : 
Python  の 標準 ドキュメント は 、 図 や 画像 を 全く 使 っ て い ま せ ん ;  これ は 意図 的 に そう し て い る の で す 。 
ドキュメント の フォーマット を 行 う 際 に 利用 する 外部 ツール が 、 まだ 画像 を うま く 扱え る ほど で は な かっ た から で す 。 
ツール の 進歩 や メンテナ に よ る 改善 に ともな っ て 、 画像 に 対 する サポート も 改善 さ れ て き ま し た 。  mkhowto  スクリプト から 起動 さ れ る 内部 ツール は 、 画像 を 直接 サポート し て い る わけ で は あ り ま せ ん が 、 mkhowto  が 外部 ツール に よ る グラフィクス の サポート を 妨げ る こと は あ り ま せ ん 。 
こう し た ツール と  howto  や manual  ドキュメント クラス を 使 っ た グラフィクス の 利用 は まだ 広 く 行 わ れ て は い ま せ ん が 、 うま く 動作 する こと は 知 ら れ て い ま す 。 
基本 的 に は 、 以下 の よう に アプローチ し ま す : 
好き な アプリケーション で 、 画像 や 図版 を 作成 し ま す 。 
出力 し た い 形式 に 合わせ て 、 画像 の 形式 を 変換 し ま す 。 
HTML  また は  Post Script  を 生成 し た けれ ば 、 画像 や 図版 は encapsulated  Post Script  ( EPS ,  . eps ファイル )  形式 に 変換 し ま す ; LaTeX2 HTML  は  EPS  ファイル を  . gif  ファイル に 変換 でき ま す ; . gif  ファイル を 直接 指定 し て も かま い ま せ ん 。 
PDF  を  ( pdflatex  で )  生成 し た い なら 、 `` カプセル 化  ( encapsulated ) ' ' PDF  ファイル が 必要 で す 。 
Linux  や Unix 向け に 配布 さ れ て い る teTeX  に つ い て くる epstopdf  を 使 え ば 、 EPS  ファイル から 変換 でき ま す 。 
ドキュメント 内 で 、 グラフィクス を サポート する ため の パッケージ graphicx  を ` `import' ' する ため の 行 を 以下 の よう に し て 追加 し ま す : 
図版 や 画像 を 取り込 み た い 場所 で 、 以下 の よう な マーク アップ を 行 い ま す : 
\begin { figure} \\centering \includegraphics [ width = 5 in ] {myimage} \caption{myimage  の 説明 } \end { figure} 
includegraphics  マクロ に は ファイル の 拡張 子 を 指定 し な い の で 注意 し て くださ い 。 
もし 特定 の 形式 の ドキュメント しか 生成 し た く な い の なら 、 拡張 子 を つけ て も かま い ま せ ん が 、 複数 の 形式 を サポート し た けれ ば 拡張 子 を 省略 し て お い た ほう が 楽 で す 。 
mkhowto  を 通常 通り に 走 ら せ ま す 。 
make  の 機能 を サポート する よう な システム で 作業 を 行 っ て い る なら 、 画像 の 変換 の 際 に 生じ る 中間 ファイル を 最新 に 保 つ よう に でき ま す 。 
下 の 例 で は 、  dia  で 作成 し た 図 を 取り込 ん で い る よう な ドキュメント を フォーマット する ため の  Makefile  を 示 し て い ま す : 
6 . 13  グラフィカル インタフェース の 構成 要素  グラフィカル インタフェース の 構成 要素 に つ い て マーク アップ を 割り当て る こと に な っ て い ま す が 、 その 詳細 は まだ ほとんど 決ま っ て い ま せ ん 。 
対話 型 ユーザ インタフェース 上 の ラベル は  guilabel  で マーク し な けれ ば な り ま せ ん 。 
curses  など の テキスト ベース の ライブラリ を 使 っ て 作成 し た テキスト ベース インタフェース 上 の ラベル も 含 み ま す 。 
ボタン 、 ラベル 、 ウィンドウ の タイトル 、 フィールド の 名前 、 メニュー や メニュー の 選択 肢 、 選択 肢 リスト 中 の 値 に 至 る まで 、 インタフェース 上 の ラベル を 参照 する 時 に は 、 常 に この マクロ を 使 い ま す 。 
メニュー の 選択 肢 は  menuselection  と  sub  を 組み合わせ て マーク し ま す 。 
この マクロ は 、 サブ メニュー を 選択 し て 特定 の 操作 を 選択 する と い っ た 完全 な 形 の メニュー 選択 手順 や 、 任意 の 部分 的 な 手順 を マーク する ため に 使 い ま す 。 
個々 の 選択 肢 の 名前 は  sub  を 入れ て 分割 せ ね ば な り ま せ ん 。  例えば 、 `` スタート  プログラム ' ' を マーク する に は 、 以下 の コード を 使 い ま す : 
\\menuselection { スタート  \sub  プログラム } 
選択 肢 が ダイアログ を 開 く よう な コマンド で あ る こと を 示 す ため に オペレーティング システム が 使 う 省略 記号 の よう に 、 選択 肢 の 末尾 に 末尾 に 識別 記号 が 入 っ て い る 場合 、 選択 肢 名 から は 識別 記号 を 省 い て くださ い 。  menuselection  中 の 個々 の 選択 肢 名 は 適切 に マーク アップ さ れ る の で 、 guilabel  で マーク する 必要 は あ り ま せ ん 。 
複数 の 階層 から な る メニュー 選択 肢 を 分割 する ため の 記号 で す 。 
この マクロ は  menuselection  マクロ の コンテキスト 下 で しか 定義 さ れ て い ま せ ん 。 
この オブジェクト は  Windows  の  HKEY  オブジェクト を ラップ し 、 オブジェクト が 破壊 さ れ た とき に 自動 的 に ハンドル を 閉じ ま す 。 
この 場合 、 背後 の Windows  ハンドル 値 が 返 さ れ ま す 、 また 、  Detach ( )  メソッド を 使 っ て 整数 の ハンドル 値 を 返 さ せ る と 同時 に 、 ハンドル オブジェクト から  Windows  ハンドル を 切り離 す こと も でき ま す 。 
背後 の  Windows  ハンドル を 閉じ ま す 。  ハンドル が すでに 閉じ られ て い て も エラー は 送出 さ れ ま せ ん 。 
ハンドル オブジェクト から  Windows  ハンドル を 切り離 し ま す 。 
切り離 さ れ る 以前 に その ハンドル を 保持 し て い た 整数  ( また は  64  ビット  Windows  の 場合 に は 長 整数 )  オブジェクト が 返 さ れ ま す 。 
ハンドル が すでに 切り離 さ れ て い たり 閉じ られ て い たり し た 場合 、 ゼロ が 返 さ れ ま す 。  この 関数 を 呼び出 し た 後 、 ハンドル は 確実 に 無効 化 さ れ ま す が 、 閉じ られ る わけ で は あ り ま せ ん 。 
背後 の  Win 32  ハンドル が ハンドル オブジェクト より も 長 く 維持 さ れ る 必要 が あ る 場合 に は この 関数 を 呼び出 す と よ い で しょ う 。 
5 . 2  超 高 水準 の 埋め込み から 踏み出 す :  概要 
Python  の 埋め込み の 最も 簡単 な 形式 は 、 超 高 水準 インタフェース の 利用 で す 。 
この インタフェース は 、 アプリケーション と やり取り する 必要 が な い Python  スクリプト を 実行 する ため の もの で す 。 
例えば これ は 、 一 つ の ファイル 上 で 何 ら か の 操作 を 実現 する の に 利用 でき ま す 。 
上 の コード で は 、 まず  Python  インタプリタ を Py _ Initialize ( )  で 起動 し 、 続 い て ハード コード さ れ た Python  スクリプト で 日付 と 時間 の 出力 を 実行 し ま す 。 
その 後 、 Py _ Finalize ( )  の 呼び出し で インタプリタ を 終了 し ,  プログラム の 終了 に 続 き ま す 。 
実際 の プログラム で は 、 Python  スクリプト を 他 の ソース 、 おそらく テキスト エディタ ルーチン や ファイル 、 データベース から 取り出 し た い と 考え る か も しれ ま せ ん 。 
Python  コード を ファイル から 取り出 す に は 、 PyRun_SimpleFile ( )  関数 を 使 う の が よ い で しょ う 。  この 関数 は メモリ を 確保 し て 、 ファイル の 内容 を ロード する 手間 を 省 い て くれ ま す 。 
これ は  Python  の ` ` ベンチ マーク ' ' pystone  を 使 っ た 例 で す 。 
プロファイル ・ オブジェクト は 以下 の メソッド を 持 っ て い ま す 。 
プロファイル 出力 の 際 、 任意 の ラベル 名 を 追加 し ま す 。 
ログ ファイル を 閉じ 、 プロファイラ を 終了 し ま す 。 
プロファイラ の ログ ファイル の ファイル ・ ディスク リプタ を 返 し ま す 。 
スクリプト 環境 で  exec  互換 文字 列 の プロファイル を おこな い ま す 。 
モジュール の グローバル 変数 は 、 スクリプト の グローバル 変数 、 ローカル 変数 の 両方 に 使 わ れ ま す 。 
指定 し た 環境 で  exec  互換 文字 列 の 評価 を おこな い ま す 。  文字 列 の コンパイル は プロファイル を 開始 する 前 に おこな わ れ ま す 。 
プロファイラ を 開始 し ま す 。 
プロファイラ を 停止 し ま す 。 
タグ メソッド に 加え て 、 HTMLParser  クラス で は タグ メソッド で 利用 する ため の いく つ か の メソッド と インスタンス 変数 を 提供 し て い ま す 。 
パーザ に 関連 付け られ て い る フォーマッタインスタンス で す 。 
ブール 値 の フラグ で 、 空白 文字 を 縮約 し た く な い とき に は 真 、 縮約 する とき に は 偽 に し ま す 。 
一般 的 に は 、 この 値 を 真 に する の は 、 PRE  要素 の 中 の テキスト の よう に 、 文字 列 データ が  ` ` 書式 化 済み の  ( preformatted ) ' '  場合 だけ で す 。 
標準 の 値 は 偽 で す 。 
この 値 は  handle_data ( )  および  save_end ( )  の 操作 に 影響 し ま す 。 
この メソッド は アンカー 領域 の 先頭 で 呼び出 さ れ ま す 。 
引数 は  A  タグ の 属性 で 同じ 名前 を 持 つ もの に 対応 し ま す 。 
標準 の 実装 で は 、 ドキュメント 内 の ハイパーリンク  ( A  タグ の  HREF  属性 )  を 列挙 し た リスト を 維持 し て い ま す 。 
ハイパーリンク の リスト は データ 属性 anchorlist  で 手 に 入れ る こと が でき ま す 。 
この メソッド は アンカー 領域 の 末尾 で 呼び出 さ れ ま す 。 
標準 の 実装 で は 、 テキスト の 注釈 マーカ を 追加 し ま す 。  マーカ は  anchor_bgn ( )  で 作 ら れ た ハイパーリンク リスト の インデクス 値 で す 。 
この メソッド は 画像 を 扱 う ため に 呼び出 さ れ ま す 。 
標準 の 実装 で は 、 単に  handle_data ( )  に  alt  の 値 を 渡 す だけ で す 。 
文字 列 データ を フォーマッタ オブジェクト に 送 ら ず に バッファ に 保存 する 操作 を 開始 し ま す 。 
保存 さ れ た データ は  save_end ( ) で 取得 し て くださ い 。  save_bgn ( ) \/save_end ( )  の ペア を 入れ 子 構造 に する こと は でき ま せ ん 。 
文字 列 データ の バッファ リング を 終了 し 、 以前  save_bgn ( )  を 呼び出 し た 時点 から 保存 さ れ て い る 全て の データ を 返 し ま す 。 
nofill  フラグ が 偽 の 場合 、 空白 文字 は 全て スペース 文字 一 文字 に 置き換え られ ま す 。 
予め  save_bgn ( )  を 呼 ば な い で この メソッド を 呼び出 す と  TypeError  例外 が 送出 さ れ ま す 。 
基礎 的 な 例 と し て 、 HTMLParser  クラス を 使 い 、 発見 し た タグ を 出力 する 、 非常 に 基礎 的 な  HTML  パーザ を 以下 に 示 し ま す 。 
認証 情報 が あ る 場合 、 認証 情報 付き で 再度 リクエスト を 試み ま す 。 
HTTPCookieProcessor  インスタンス は 属性 を ひと つ だけ 持 ち ま す : 
クッキー の 入 っ て い る cookielib . CookieJar  オブジェクト で す 。 
HTTP  エラー レスポンス を 処理 し ま す 。  エラー コード  200  の 場合 、 レスポンス オブジェクト を 即座 に 返 し ま す 。 
200  以外 の エラー コード の 場合 、 OpenerDirector . error ( ) を 介 し て  protocol _error_code ( )  メソッド に 仕事 を 引き渡 し ま す 。 
最終 的 に どの ハンドラ も エラー を 処理 し な かっ た 場合 、 urllib 2. HTTPDefaultErrorHandler  が HTTPError  を 送出 し ま す 。 
HTTP  リクエスト を 送 り ま す 。 
req . has_data ( )  に 応 じ て 、 GET  また は  POST  の どちら で も 送 る こと が でき ま す 。 
以下 の メソッド は  HTTPPasswordMgr  および HTTPPasswordMgrWithDefaultRealm  オブジェクト で 利用 でき ま す 。 
uri  は 単一 の  URI  で も 複数 の  URI  から な る シーケンス で も かま い ま せ ん 。  realm  、 user  および  passwd  は 文字 列 で な く て は な り ま せ ん 。 
この メソッド に よ っ て 、 realm  と 与え られ た  URI  の 上位  URI  に 対 し て ( user ,  passwd)  が 認証 トークン と し て 使 わ れ る よう に な り ま す 。 
与え られ た レルム および  URI  に 対 する ユーザ 名 また は パスワード が あ れ ば それ を 取得 し ま す 。 
該当 する ユーザ 名 \/ パスワード が 存在 し な い 場合 、 この メソッド は  ( None ,  None )  を 返 し ま す 。  HTTPPasswordMgrWithDefaultRealm  オブジェクト で は 、 与え られ た realm  に 対 し て 該当 する ユーザ 名 \/ パスワード が 存在 し な い 場合 、 レルム  None  が 検索 さ れ ま す 。 
注意 : HTTP  リダイレクト に よ っ て は 、 この モジュール の クライアント コード 側 で の 処理 を 必要 と し ま す 。 
その 場合 、  HTTPError  が 送出 さ れ ま す 。 
様々 な リダイレクト コード の 厳密 な 意味 に 関 する 詳細 は  RFC  26 16  を 参照 し て くださ い 。 
リダイレクト の 通知 に 応 じ て 、  Request  また は  None を 返 し ま す 。  この メソッド は http_error _ 30 * ( )  メソッド に お い て 、 リダイレクト の 通知 を サーバ から 受信 し た 際 に 、 デフォルト の 実装 と し て 呼び出 さ れ ま す 。 
リダイレクト を 起こ す 場合 、 新た な  Request  を 生成 し て 、 http_error _ 30 * ( )  が リダイレクト を 実行 でき る よう に し ま す 。 
そう で な い 場合 、 他 の どの ハンドラ に も この  URL  を 処理 さ せ た く な けれ ば  HTTPError  を 送出 し 、 リダイレクト 処理 を 行 う こと は でき な い が 他 の ハンドラ なら 可能 か も しれ な い 場合 に は  None  を 返 し ま す 。 
注意 : この メソッド の デフォルト の 実装 は 、 RFC  26 16  に 厳密 に 従 っ た もの で は あ り ま せ ん 。  RFC  26 16  で は 、 POST  リクエスト に 対 する  30 1  および  30 2  応答 が 、 ユーザ の 承認 な く 自動 的 に リダイレクト さ れ て は な ら な い と 述べ て い ま す 。 
現実 に は 、 ブラウザ は  POST  を  GET  に 変更 する こと で 、 これ ら の 応答 に 対 し て 自動 的 に リダイレクト を 行え る よう に し て い ま す 。  デフォルト の 実装 で も 、 この 挙動 を 再現 し て い ま す 。 
Location :  URL  に リダイレクト し ま す 。 
この メソッド は  HTTP  に お け る  ` moved permanently'  レスポンス を 取得 し た 際 に 親 オブジェクト と な る  OpenerDirector  に よ っ て 呼び出 さ れ ま す 。 
http_error _ 30 1 ( )  と 同じ で す が 、 ` found '  レスポンス に 対 し て 呼び出 さ れ ま す 。 
http_error _ 30 1 ( )  と 同じ で す が 、 ` see other '  レスポンス に 対 し て 呼び出 さ れ ま す 。 
http_error _ 30 1 ( )  と 同じ で す が 、 ` temporary  redirect '  レスポンス に 対 し て 呼び出 さ れ ま す 。 
HTTPConnection  インスタンス に は 以下 の メソッド が あ り ま す : 
この メソッド は 、  HTTP  要求 メソッド  method  および セレクタ  url を 使 っ て 、 要求 を サーバ に 送 り ま す 。 
デバッグ レベル  ( 印字 さ れ る デバッグ 出力 の 量 )  を 設定 し ま す 。  標準 の デバッグ レベル は  0  で 、 デバッグ 出力 を 全く 印字 し ま せ ん 。 
オブジェクト を 生成 する とき に 指定 し た サーバ に 接続 し ま す 。 
サーバ へ の 接続 を 閉じ ま す 。 
サーバ に データ を 送 り ま す 。 
この メソッド は  endheaders ( )  が 呼び出 さ れ た 直後 で 、 かつ  getreply( )  が 呼び出 さ れ る 前 に 使 わ な けれ ば な り ま せ ん 。 
サーバ へ の 接続 が 確立 し た ら 、 最初 に この メソッド を 呼び出 さ な く て は な り ま せ ん 。 
この メソッド は  request  文字 列 、 selector  文字 列 、 そして  HTTP  バージョン  ( HTTP \/ 1 . 1 )  から な る 一行 を 送信 し ま す 。 
Host :  や Accept - Encoding :  ヘッダ の 自動 送信 を 無効 に し た い 場合  ( 例えば 別 の コンテンツ エンコーディング を 受け入れ た い 場合 )  に は 、 skip_host  や  skip_accept_encoding  を 偽 で な い 値 に 設定 し て くださ い 。 
RFC  82 2  形式 の ヘッダ を サーバ に 送 り ま す 。 
この 処理 で は 、 header 、 コロン と スペース 、 そして 最初 の 引数 から な る  1  行 を サーバ に 送 り ま す 。 
追加 の 引数 を 指定 し た 場合 、 継続 し て 各行 に タブ 一 つ と 引数 の 入 っ た 引数 行 が 送信 さ れ ま す 。 
サーバ に 空行 を 送り 、 ヘッダ 部 が 終了 し た こと を 通知 し ま す 。 
以下 は " GET "  リクエスト の 送信 方法 を 示 し た 例 で す : 
以下 は  " POST "  リクエスト の 送信 方法 を 示 し た 例 で す : 
HTTPResponse  インスタンス は 以下 の メソッド と 属性 を 持 ち ま す : 
応答 の 本体 全体 か 、 amt  バイト まで 読み出 し て 返 し ま す 。 
ヘッダ  name  の 内容 を 取得 し て 返 す か 、 該当 する ヘッダ が な い 場合 に は default  を 返 し ま す 。 
( header ,  value )  の タプル から な る リスト を 返 し ま す 。 
応答 ヘッダ を 含 む  mimetools . Message  インスタンス で す 。 
サーバ が 使用 し た  HTTP  プロトコル バージョン で す 。 
10  は  HTTP \/ 1 . 0  を 、 11  は  HTTP \/ 1 . 1  を 表 し ま す 。 
サーバ から 返 さ れ る 状態 コード で す 。 
サーバ から 返 さ れ る 応答 の 理由 文 で す 。 
HTTPS  リクエスト を 送 り ま す 。 
2 . 3  識別 子  ( identifier )  および キー ワード 
ある 種 の  ( キー ワード を 除 く )  識別 子 に は 、 特殊 な 意味 が あ り ま す 。 
これ ら の 識別 子 種 は 、 先頭 や 末尾 に あ る アンダース コア 文字 の パターン で 区別 さ れ ま す : 
この 識別 子 は  " from  module import* " で import  さ れ ま せ ん 。 
対話 インタプリタ で は 、 最も 最近 行 わ れ た 値 評価 の 結果 を 記憶 する ため に 特殊 な 識別 子  " _"  が 使 わ れ ま す ;  この 識別 子 は __builtin__ モジュール 内 に 記憶 さ れ ま す 。 
対話 モード で な い 場合 、 " _" に は 特殊 な 意味 は な く 、 定義 さ れ て い ま せ ん 。  6 . 12  節 、 ` `import  文' '  を 参照 し て くださ い 。 
注意 : 名前 "_" は 、 しばしば 国際 化  ( internationalization )  と 共 に 用い られ ま す ;  この 慣習 に つ い て の 詳し い 情報 は 、 
gettext  module  を 参照 し て くださ い 。 
システム で 定義 さ れ た  ( system - defined )  名前 で す 。 
これ ら の 名前 は インタプリタ と  ( 標準 ライブラリ を 含 む )  実装 上 で 定義 さ れ て い ま す ; アプリケーション 側 で は 、 この 名前 規約 を 使 っ て 別 の 名前 を 定義 し よう と す べ き で は あ り ま せ ん 。 
この 種 の 名前 の うち 、 Python  で 定義 さ れ て い る 名前 の セット は 、 将来 の バージョン で 拡張 さ れ る 可能 性 が あ り ま す 。 
3 . 3  節 、 ` ` 特殊 な メソッド 名 ' '  を 参照 し て くださ い 。 __* 
クラス プライベート  ( class - private )  な 名前 で す 。 
この カテゴリ に 属 する 名前 は 、 クラス 定義 の コンテキスト 上 で 用い られ た 場合 、 基底 クラス と 導出 クラス の  ` ` プライベート な ' '  属性 間 で 名前 衝突 が 起こ る の を 防 ぐ ため に 書き直 さ れ ま す 。  5 . 2 . 1  節 、 ` ` 識別 子  ( 名前 ) ' ' を 参照 し て くださ い 。 
識別 子  ( また は  名前  ( name) )  は 、 以下 の 字句 定義 で 記述 さ れ ま す : 
識別 子 の 長 さ に は 制限 が あ り ま せ ん 。 
大小 文字 は 区別 さ れ ま す 。 
2 . 3 . 1  キー ワード  ( keyword ) 
16 . 4 . 1  Pen と RawPen オブジェクト 
16 .  Tk を 用い た グラフィカル ユーザ インターフェイス 
Idle は 
GUI ツール キット を つか っ て 作 ら れ た  Python IDE で す 。 
IDLE は 次 の よう な 特徴 が あ り ま す : 
GUI ツール キット を 使 っ て 、 100 %  ピュア  Python  で コーディング さ れ て い ま す 
クロス - プラット ホーム :  Windows と Unix で 動作 し ま す  ( Mac  OS で は 、 現在 Tcl \/ Tk に 問題 が あ り ま す ) 
多段 Undo 、  Python  対応 の 色づけ や 他 に も たくさん の 機能 ( 例えば 、 自動 的 な 字下げ や 呼び出 し 情報 の 表示 ) を も つ マルチ - ウィンドウ ・ テキスト エディタ 
Python  シェル ウィンドウ ( 別名 、 対話 インタープリタ ) 
デバッガ ( 完全 で は り ま せ ん が 、 ブレーク ポイント の 設定 や 値 の 表示 、 ステップ 実行 が でき ま す ) 
16 . 5 . 1 . 1  File メニュー 
16 . 5 . 1 . 2  Edit メニュー 
16 . 5 . 1 . 3  Windows メニュー 
16 . 5 . 1 . 4  Debug メニュー (  Python  シェル ウィンドウ 内 のみ ) 
16 . 5 . 2 . 1  自動 的 な 字下げ 
16 . 5 . 2 . 2  Python  Shell ウィンドウ 
16 . 5 . 3 . 1  コマンドライン の 使 い 方 
if  文 は 、 条件 分岐 を 実行 する ため に 使 わ れ ま す : 
if  文 は 、 式 を 一 つ 一 つ 評価 し て ゆ き 、 真 に な る まで 続け て 、 真 に な っ た 節 の スイート だけ を 選択 し ま す  ( 真:  true  と 偽 :  false  の 定義 に つ い て は 、 5 . 10  節 を 参照 し て くださ い ) ;  次 に 、 選択 し た スイート を 実行 し ま す  ( また は 、  if  文 の 他 の 部分 を 実行 し たり 、 評価 し たり し ま す ) 全て の 式 が 偽 に な っ た 場合 、 else  節 が あ れ ば 、 その スイート が 実行 さ れ ま す 。 
虚数 リテラル は 以下 の よう な 字句 定義 で 記述 さ れ ま す : 
虚数 リテラル は 、 実数 部 が  0 . 0  の 複素数 を 表 し ま す 。 
複素数 は 二 つ 組 の 浮動 小数 点 型 の 数値 で 表 さ れ 、 それぞれ の 数値 は 浮動 小数 点 型 と 同じ 定義 域 の 範囲 を 持 ち ま す 。 
実数 部 が ゼロ で な い 浮動 小数 点 を 生成 する に は 、 ( 3 + 4 j ) の よう に 虚数 リテラル に 浮動 小数 点数 を 加算 し ま す 。 
以下 に 虚数 リテラル の 例 を いく つ か 示 し ま す : 
以下 に メイル ボックス を 開 き 、 全て の メッセージ を 取得 し て 印刷 する 最小 の  ( エラー チェック を し な い )  使用 例 を 示 し ま す : 
必要 に 応 じ て  ( IMAP 4  プロトコル が 感知 対象 と し て い る 文字 が 文字 列 に 入 っ て お り 、 かつ 丸 括弧 か 二 重 引用 符 で 囲 わ れ て い な かっ た 場合 )  文字 列 は クオート さ れ ま す 。 
各  data  は 文字 列 か タプル と な り ま す 。 
指定 さ れ た 名前 の メイル ボックス に  message  を 追加 し ま す 。 
認証 命令 で す  - -  応答 の 処理 が 必要 で す 。 
mechanism は 利用 する 認証 メカニズム を 与え ま す 。  認証 メカニズム は インスタンス 変数 capabilities  の 中 に AUTH = mechanism と い う 形式 で 現れ る 必要 が あ り ま す 。 
authobject は 呼び出し 可能 な オブジェクト で あ る 必要 が あ り ま す 。 
サーバ 上 の メイル ボックス に チェックポイント を 設定 し ま す 。 
現在 選択 さ れ て い る メイル ボックス を 閉じ ま す 。 
削除 さ れ た メッセージ は 書き込み 可能 メイル ボックス から 除去 さ れ ま す 。 
" LOGOUT "  前 に 実行 する こと を 勧め ま す 。 
message_set  で 指定 し た メッセージ 群 を  new_mailbox  の 末尾 に コピー し ま す 。 
mailbox  と 名づけ られ た 新た な メイル ボックス を 生成 し ま す 。 
mailbox  と 名づけ られ た 古 い メイル ボックス を 削除 し ま す 。 
mailbox  に お け る  who  に つ い て の ACL を 削除 ( 権限 を 削除 ) し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
選択 さ れ た メイル ボックス から 削除 さ れ た 要素 を 永久 に 除去 し ま す 。 
各々 の 削除 さ れ た メッセージ に 対 し て 、 " EXPUNGE "  応答 を 生成 し ま す 。 
返 さ れ る データ に は  " EXPUNGE "  メッセージ 番号 を 受信 し た 順番 に 並べ た リスト が 入 っ て い ま す 。 
メッセージ  ( の 一部 )  を 取りよせ ま す 。 
message_ parts は メッセージ パート の 名前 を 表 す 文字 列 を 丸括弧 で 囲 っ た もの で 、 例えば : " " ( UID  BODY [ TEXT ] ) " "  の よう に な り ま す 。 
返 さ れ る データ は メッセージ パート の エンベロープ 情報 と データ から な る タプル で す 。 
mailbox  に 対 する  " ACL "  を 取得 し ま す 。  この メソッド は 非 標準 で す が 、  " Cyrus "  サーバ で サポート さ れ て い ま す 。 
pattern  に マッチ する  directory メイル ボックス 名 を 列挙 し ま す 。  directory  の 標準 の 設定 値 は 最上 レベル の メイル フォルダ で 、 pattern  は 標準 の 設定 で は 全て に マッチ し ま す 。 
返 さ れ る データ に は " LIST "  応答 の リスト が 入 っ て い ま す 。 
平文 パスワード を 使 っ て クライアント を 照合 し ま す 。 
password  は クオート さ れ ま す 。  login_cram _md 5 
パスワード の 保護 の ため 、 クライアント 認証 時 に " C RAM - MD 5 " だけ を 使用 し ま す 。 
これ は 、 " CAPABILITY " レスポンス に  " AUTH = CRAM - MD 5 "  が 含 ま れ る 場合 のみ 有効 で す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
サーバ へ の 接続 を 遮断 し ま す 。 
サーバ から の  " BYE "  応答 を 返 し ま す 。 
RFC 2342 で 定義 さ れ る IMAP 名前 空間 を 返 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
サーバ に  " NOOP "  を 送信 し ま す 。 
メッセージ の 後略 さ れ た 部分 を 取り寄せ ま す 。 
返 さ れ る データ は メッセージ パート エンベロープ 情報 と データ から な る タプル で す 。 
user と し て 認証 さ れ た もの と し ま す 。 
遠隔 の サーバ から  size  バイト 読み出 し ま す 。  この メソッド は オーバライド する こと が でき ま す 。 
遠隔 の サーバ から 一行 読み出 し ま す 。  この メソッド は オーバライド する こと が でき ま す 。 
サーバ に 更新 を 促 し ま す 。 
新た な メッセージ が な い 場合 応答 は  None に な り 、 そう で な い 場合  " RECENT "  応答 の 値 に な り ま す 。 
oldmailbox  と い う 名前 の メイル ボックス を  newmailbox に 名称 変更 し ま す 。 
応答  code  を 受信 し て い れ ば 、 その データ を 返 し 、 そう で な けれ ば None  を 返 し ま す 。 
通常 の 形式  ( usualtype )  で は な く 指定 し た コード を 返 し ま す 。 
条件 に 合致 する メッセージ を メイル ボックス から 検索 し ま す 。 
返 さ れ る データ に は 合致 し た メッセージ 番号 を スペース で 分割 し た リスト が 入 っ て い ま す 。  charset  は  None  で も よ く 、 この 場合 に は サーバ へ の 要求 内 に  " CHARSET "  は 指定 さ れ ま せ ん 。 
IMAP  プロトコル は 少な く とも 一 つ の 条件  ( criterion )  が 指定 さ れ る よう 要求 し て い ま す ; サーバ が エラー を 返 し た 場合 、 例外 が 送出 さ れ ま す 。 
例 : #M  is  a connected  IMAP 4  instance . . . msgnums =  M . search ( None , ' FROM ' , '" LDJ " ') #or : msgnums =  M . search ( None , '( FROM  " LDJ " ) ') 
メイル ボックス を 選択 し ま す 。 
返 さ れ る データ は  mailbox  内 の メッセージ 数  ( " EXISTS "  応答 )  で す 。 
標準 の 設定 で は mailbox  は ' INBOX '  で す 。 
readonly  が 設定 さ れ た 場合 、 メイル ボックス に 対 する 変更 は でき ま せ ん 。 
遠隔 の サーバ に  data  を 送信 し ま す 。  この メソッド は オーバライド する こと が でき ま す 。 
" ACL "  を mailbox  に 設定 し ま す 。  この メソッド は 非 標準 で す が 、  " Cyrus "  サーバ で サポート さ れ て い ま す 。 
open  で 確立 さ れ た 接続 を 閉じ ま す 。  この メソッド は オーバライド する こと が でき ま す 。 
サーバ へ の 接続 に 使 わ れ て い る ソケット インスタンス を 返 し ま す 。 
sort  命令 は  search  に 結果 の 並べ替え  ( sort )  機能 を つけ た 変種 で す 。 
返 さ れ る データ に は 、 条件 に 合致 する メッセージ 番号 を スペース で 分割 し た リスト が 入 っ て い ま す 。 sort  命令 は  search_ criterium  の 前 に 二 つ の 引数 を 持 ち ま す ; sort_criteria  の リスト を 丸括弧 で 囲 っ た もの と 、 検索 時 の charset  で す 。 
search  と 違 っ て 、 検索 時 の  charset  は 必須 で す 。 
uid sort  命令 も あ り 、 search  に 対 する  uid  search と 同じ よう に  sort  命令 に 対応 し ま す 。 
sort  命令 は まず 、 charset  引数 の 指定 に 従 っ て  searching  criteria  の 文字 列 を 解釈 し 、 メイル ボックス から 与え られ た 検索 条件 に 合致 する メッセージ を 探 し ま す 。 
次 に 、 合致 し た メッセージ の 数 を 返 し ま す 。  " IMAP 4rev 1 "  拡張 命令 で す 。 
mailbox  の 指定 ステータス 名 の 状態 情報 を 要求 し ま す 。 
メイル ボックス 内 の メッセージ 群 の フラグ 設定 を 変更 し ま す 。 
新た な メイル ボックス を 購読  ( subscribe )  し ま す 。 
thread コマンド は search に スレッド の 概念 を 加え た 変形 版 で ス 。 
返 さ れ る データ は 空白 で 区切 ら れ た スレッド メンバ の リスト を 含 ん で い ま す 。  各 スレッド メンバ は 0 以上 の メッセージ 番号 から な り 、 空白 で 区切 ら れ て  おり 、 親子 関係 を 示 し て い ま す 。 
thread コマンド は search_ criterion 引数 の 前 に 2 つ の 引数 を 持 っ て い ま す 。  threading_ algorithm と charset で す 。 
search コマンド と は 違 い 、 charset は 必須 で す 。  search に 対 する  uid  search と 同様 に 、  thread に も uid  thread が あ り ま す 。 
thread コマンド は まず メール ボックス 中 の メッセージ を 、 charset を 用い た 検索 条件 で 検索 し ま す 。 
その 後 マッチ し た メッセージ を 指定 さ れ た スレッド アルゴリズム で スレッド 化 し て 返 し ま す . これ は  " IMAP 4rev 1 "  の 拡張 コマンド で す 。 
command args を 、 メッセージ 番号 で は な く  UID  で 指定 さ れ た メッセージ 群 に 対 し て 実行 し ま す 。 
命令 内容 に 応じ た 応答 を 返 し ま す 。 
少な く とも 一 つ の 引数 を 与え な く て は な り ま せ ん ;  何 も 与え な い 場合 、 サーバ は エラー を 返 し 、 例外 が 送出 さ れ ま す 。 
古 い メイル ボックス の 購読 を 解除  ( unsubscribe )  し ま す 。 
サーバ から  " CAPABILITY "  応答 で 通知 さ れ た 単純 な 拡張 命令 を 許容  ( allow )  し ま す 。 
IMAP 4 _ SSL  の インスタンス は 追加 の メソッド を 一 つ だけ 持 ち ま す : 
サーバ へ の 安全 な 接続 に 使 わ れ る  SSLObject  インスタンス を 返 し ま す 。 
以下 の 属性 が  IMAP 4  の インスタンス 上 で 定義 さ れ て い ま す : 
サーバ から 返 さ れ た  " CAPABILITY "  応答 に あ る 、 サポート さ れ て い る 最新 の プロトコル で す 。 
デバッグ 出力 を 制御 する ため の 整数 値 で す 。 
初期 値 は モジュール 変数 Debug  から 取 ら れ ま す 。 
3  以上 の 値 に する と 各 命令 を トレース し ま す 。 
集合 は 変更 不 可能 な 要素 だけ を 含 む こと でき ま す 。 
もし 出来 な けれ ば -_ _hash_ _( ) ,__eq_ _( ) ,__ne__( ) の ため の 一時 的 な メソッド を 備え た クラス に よ っ て ラップ さ れ た 要素 を 返 す メソッド -__as_temporarily _ immutable__( ) メソッド を チェック し ま す 。  代理 メカニズム は 、 オリジナル の 可変 オブジェクト から 分かれ た コピー を 組み上げ る 手間 を 助け て くれ ま す 。 
言いかえ れ ば 、 変更 可能 な 集合 の 集合 は スレッド セーフ で は あ り ま せ ん 。 
丸括弧  ( parentheses ) 、 角括弧  ( square  bracket)  、 および 波括弧  ( curly brace )  内 の 式 は 、 バックス ラッシュ を 使 わ ず に 一行 以上 の 物理 行 に 分割 する こと が でき ま す 。 
例えば :  month_ names= [' Januari' , ' Februari' , ' Maart' , # These are  the' April ' , ' Mei' , 'Juni' , # Dutch  names'Juli ' , ' Augustus ' , 'September' , # for  the months'Oktober' , ' November' , ' December '] # of the year 
非 明示 的 に 継続 さ れ た 行 に は コメント を 含め る こと が でき ま す 。 
継続行 の インデント は 重要 で は あ り ま せ ん 。 
空 の 継続行 を 書 く こと が でき ま す 。 
非 明示 的 な 継続行 中 に は 、 NEW LINE  トークン は 存在 し ま せ ん 。 
非 明示 的 な 行 の 継続 は 、 三重 クオート さ れ た 文字 列  ( 下記 参照 ) で も 発生 し ま す ;  この 場合 に は 、 コメント を 含め る こと が でき ま せ ん 。 
import  文 は 、 ( 1 )  モジュール を 探 し 、 必要 なら 初期 化  ( initialize )  する ; (import  文 の あ る スコープ に お け る )  ローカル な 名前 空間 で 名前 を 定義 する 、 の 二 つ の 段階 を 踏 ん で 初期 化 さ れ ま す 。  第 一 形式  ( from  の な い 形式 )  は 、 上記 の 段階 を リスト 中 に あ る 各 識別 子 に 対 し て 繰り返 し 実行 し て い き ま す 。 
この テーブル は  sys . modules  から アクセス でき ま す 。 
モジュール 名 が この テーブル 内 に あ る なら 、 段階  ( 1 )  は 完了 し て い ま す 。 
そう で な けれ ば 、 処理 系 は モジュール 定義 の 検索 を 開始 し ま す 。 
モジュール が 見つか っ た 場合 、 モジュール を 読み込 み  ( load )  ま す 。 
モジュール 検索 や 読み込 み プロセス の 詳細 は 、 実装 や プラットフォーム に 依存 し ま す 。 
一般 的 に は 、 ある 名前 の モジュール を 検索 する 際 、 まず 同名 の ` ` 組み込 み  ( built - in ) ' ' モジュール を 探 し 、 次 に  sys . path で 列挙 さ れ て い る 場所 を 探 し ま す 。 
組み込 み モジュール が 見つか っ た 場合 
、 組み込み の 初期 化 コード が 実行 さ れ 、 段階  ( 1 )  を 完結 し ま す 。 
合致 する ファイル が 見つか ら な かっ た 場合 、 ImportError 
が 送出 さ れ ま す 。 
ファイル が 見つか っ た 場合 、 ファイル を 構文 解析 し て 実行 可能 な コード ブロック に し ま す 。 
構文 エラー が 起き た 場合 、 SyntaxError 
が 送出 さ れ ま す 。  それ 以外 の 場合 、 まず 指定 さ れ た 名前 を も つ 空 の モジュール を 作成 し 、 モジュール テーブル に 挿入 し ま す 。 
次 に 、 この モジュール の 実行 コンテキスト 下 で コード ブロック を 実行 し ま す 。 
モジュール 名 の 後ろ に as  が あ る 場合 、 as  の 後ろ の 名前 は モジュール の ローカル な 名前 と し て 使 わ れ ま す 。 
from  形式 は 、 モジュール 名 の 束縛 を 行 い ま せ ん : from  形式 で は 、 段階  ( 1 )  で 見つか っ た モジュール 内 から 、 識別 子 リスト の 各 名前 を 順 に 検索 し 、 見つか っ た オブジェクト を 識別 子 の 名前 で ローカル な 名前 空間 に お い て 束縛 し ま す 。 
import  の 第 一 形式 と 同じ よう に 、 " as  localname " で 別名 を 与え る こと が でき ま す 。 
指定 さ れ た 名前 が 見つか ら な い 場合 、 ImportError  が 送出 さ れ ま す 。 
識別 子 の リスト を 星印 ( " * " )  で 置き換え る と 、 モジュール で 公開 さ れ て い る 名前 ( public  name )  全て を import  文 の あ る 場所 の ローカル な 名前 空間 に 束縛 し ま す 。 
__all_ _ 内 に あ る 名前 は 、 全て 公開 さ れ た 名前 で あ り 、 実在 する もの と みな さ れ ま す 。 
__all_ _ が 定義 さ れ て い な い 場合 、 モジュール の 名前 空間 に 見つか っ た 名前 で 、 アンダース コア 文字  ( "_")  で 始ま っ て い な い 全て の 名前 が 公開 さ れ た 名前 に な り ま す 。 __all_ _ に は 、 公開 さ れ て い る  API  全て を 入れ な けれ ば な り ま せ ん 。 
__all_ _ に は 、 ( モジュール 内 で import  さ れ て 使 わ れ て い る ライブラリ モジュール の よう に )  API  を 構成 し な い 要素 を 意 に 反 し て 公開 し て しま う の を 避け る と い う 意図 が あ り ま す 。 
" * "  を 使 っ た  from  形式 は 、 モジュール の スコープ 内 だけ に 作用 し ま す 。 
関数 内 で ワイルド カード の import  文-- "import* "--  を 使 い 、 関数 が 自由 変数 を 伴 う ネスト さ れ た ブロック で あ っ たり 、 ブロック を 含 ん で い る 場合 、 コンパイラ は SyntaxError  を 送出 し ま す 。 
階層 的 な モジュール 名 : 
モジュール 名 に 一 つ また は それ 以上 の ドット が 入 っ て い る 場合 、 モジュール 検索 パス は 違 っ た 扱 わ れ 方 を し ま す 。 
最後 の ドット まで の 各 識別 子 から な る 列 は 、 ` ` パッケージ  ( package ) ' '
を 見つけ る ため に 使 わ れ ま す ;  次 に 、 パッケージ 内 から 各 識別 子 が 検索 さ れ ま す 。 
パッケージ と は 、 一般 に は  sys . path  上 の ディレクトリ の サブ ディレクトリ で 、 __init_ _. py . 
ファイル を 持 つ もの で す 。  [ XXX  この 説明 に つ い て は 、 ここ で は 今 の ところ これ 以上 詳し く 書け ま せ ん ; 詳細 や 、 パッケージ 内 モジュール の 検索 が どの よう に 行 わ れ る か は 、 http:\/\/www .python . org \/ doc\/essays\/packages . html  を 参照 し て くださ い ] どの モジュール が ロード さ れ る べ き か を 動的 に 決め た い アプリケーション の ため に 、 組み込 み 関数  _ _i mport__( )  が 提供 さ れ て い ま す ; 詳細 は 、 
の 組み込 み 関数  を 参照 し て くださ い 。 
この 関数 は 下 で 述べ る  PyImport_ImportModuleEx ( )  を 単純 化 し た インタフェース で 、  globals  および  locals  引数 を  NULL の まま に し た もの で す 。 
name  引数 に ドット が 含 ま れ る 場合  ( ある パッケージ の サブ モジュール を 指定 し て い る 場合 ) 、 fromlist  引数 が リスト  ['*']  に 追加 さ れ 、 戻 り 値 が モジュール を 含 む トップ レベル パッケージ で は な く 名前 つき モジュール  ( named module )  に な る よう に し ま す 。 
( 残念 ながら この や り 方 に は 、 name  が 実際 に は サブ モジュール で な く サブ パッケージ を 指定 し て い る 場合 、 パッケージ の __all_ _
変数 に 指定 さ れ て い る サブ モジュール が ロード さ れ て しま う と い う 副 作用 が あ り ま す 。 
) import  さ れ た モジュール へ の 新た な 参照 を 返 し ま す 。  失敗 し た 場合 に は 例外 を セット し 、 NULL  を 返 し ま す 。 
Python  2 . 4  以前 で は 、 失敗 し た 場合 で も モジュール は 生成 さ れ て い る こと が あ り ま す --sys . modules  を 使 っ て 調べ て くださ い 。 
Python  2 . 4  以降 で は 、 import  に 失敗 し た モジュール は  sys . modules  に 残 り ま せ ん 。  バージョン  2 . 4  で  変更  さ れ た 仕様 : import  に 失敗 し た 場合 、 不 完全 な モジュール を 除去 する よう に な り ま し た 
モジュール を import  し ま す 。 
モジュール の import  に つ い て は 組み込み の  Python  関数 _ _i mport__( )  を 読 む と よく 分か り ま す 。 
と い う の も 、 標準 の  _ _i mport__( )  は この 関数 を 直接 呼び出 し て い る から で す 。  戻 り 値 は import  さ れ た モジュール か トップ レベル パッケージ へ の 新た な 参照 に な り ま す 。 
失敗 し た 場合 に は 例外 を セット し 、 NULL  を 返 し ま す ( Python  2 . 4  より も 前 の バージョン で は 、 モジュール は 生成 さ れ て い る 場合 が あ り ま す ) _ _i mport__( )  と 同じく 、 パッケージ に 対 し て サブ モジュール を 要求 し た 場合 の 戻 り 値 は 通常 、 空 で な い  fromlist  を 指定 し な い 限り トップ レベル パッケージ に な り ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : import  に 失敗 し た 場合 、 不 完全 な モジュール を 除去 する よう に な り ま し た  PyObject * 
現在 の ` `import  フック 関数 ' '  を 呼び出 す ため の 高 水準 の インタフェース で す 。 
この 関数 は 現在 の グローバル 変数 辞書 内 の __builtins_ _ から  _ _i mport__( )  関数 を 呼び出 し ま す 。 
すなわち 、 現在 の 環境 に インストール さ れ て い る import  フック 、 例えば  rexec 
や ihooks
を 使 っ て import  を 行 い ま す 。 
モジュール を 再 ロード  ( reload )  し ま す 。 
モジュール の 再 ロード に つ い て は 組み込み の  Python  関数 reload ( )  を 読 む と よく 分か り ま す 。 
と い う の も 、 標準 の  reload  は この 関数 を 直接 呼び出 し て い る から で す 。 
戻 り 値 は 再 ロード し た モジュール か トップ レベル パッケージ へ の 新た な 参照 に な り ま す 。 
失敗 し た 場合 に は 例外 を セット し 、 NULL  を 返 し ま す ( その 場合 で も 、 モジュール は 生成 さ れ て い る 場合 が あ り ま す )  PyObject * 
モジュール 名 に 対応 する モジュール オブジェクト を 返 し ま す 。 
注意 : この 関数 は モジュール の import  や ロード を 行 い ま せ ん ; モジュール が まだ ロード さ れ て い な けれ ば 、 空 の モジュール オブジェクト を 得 る こと に な り ま す 。  PyImport_ImportModule ( )  や その 別 形式 を 使 っ て モジュール を import  し て くださ い 。 
ドット 名 表記 で 指定 し た name  が 存在 し な い 場合 、 パッケージ 構造 は 作成 さ れ ま せ ん 。 
モジュール 名  ( package . module  形式 で も かま い ま せ ん )  および Python  の バイトコード ファイル や 組み込 み 関数  compile ( ) 
で 得 られ た コード オブジェクト を 元 に モジュール を ロード し ま す 。 
モジュール オブジェクト へ の 新た な 参照 を 返 し ま す 。  失敗 し た 場合 に は 例外 を セット し 、 NULL  を 返 し ま す 。 
Python  2 . 4  以前 で は 、 失敗 し た 場合 で も モジュール は 生成 さ れ て い る こと が あ り ま し た 。 
Python  2 . 4  以降 で は 、 たとえ PyImport_ Exec Code Module ( )  の 処理 に 入 っ た 時 に name  が sys . modules  に 入 っ て い た と し て も 、 import  に 失敗 し た モジュール は  sys . modules  に 残 り ま せ ん 。 
初期 化 の 不 完全 な モジュール を  sys . modules  に 残 す の は 危険 で あ り 、 その よう な モジュール を import  する コード に と っ て は 、 モジュール の 状態 が わか ら な い  ( モジュール 作者 の 意図 から 外れ た 壊れ た 状態 か も しれ な い ) から で す 。  この 関数 は 、 すでに import  さ れ て い る モジュール の 場合 に は 再 ロード を 行 い ま す 。 
意図 的 に モジュール の 再 ロード を 行 う 方法 は PyImport_ReloadModule ( )  を 参照 し て くださ い 。  name  が package . module  形式 の ドット 名 表記 で あ っ た 場合 、 まだ 作成 さ れ て い な い パッケージ 構造 は その 作成 さ れ な い まま に な り ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : エラー が 発生 し た 場合 に name  を sys . modules  から 除去 する よう に な り ま し た 
Python  バイトコード ファイル  ( いわゆる  . pyc および  . pyo ファイル )  の マジック ナンバ を 返 し ま す 。 
マジック ナンバ は バイトコード ファイル の 先頭  4  バイト に リトル エンディアン 整列 で 配置 さ れ て い ま す 。 
モジュール 管理 の ため の 辞書  ( いわゆる  sys . modules  ) を 返 し ま す 。 
この 辞書 は インタプリタ ごと に 一 つ だけ あ る 変数 な の で 注意 し て くださ い 。 
import  機構 を 初期 化 し ま す 。 
内部 使用 だけ の ため の 関数 で す 。 
モジュール テーブル を 空 に し ま す 。 
import  機構 を 終了 処理 し ま す 。 
name  と い う 名前 の フリーズ  ( freeze )  さ れ た モジュール を ロード し ま す 。 
成功 する と  1  を 、 モジュール が 見つか ら な かっ た 場合 に は 0  を 、 初期 化 が 失敗 し た 場合 に は 例外 を セット し て - 1  を 返 し ま す 。 
ロード に 成功 し た モジュール に アクセス する に は PyImport_ImportModule ( )  を 使 っ て くださ い 。 
( Note  この 関数 名 は いささか 誤称 め い て い ま す --  この 関数 は すでに import  済み の モジュール を リロード し て しま い ま す 。 ) 
freeze  ユーティリティ が 生成 する よう な フリーズ 化 モジュール デスク リプタ の 構造 体型 定義 で す 。 
( Python  ソース 配布 物 の  Tools\/freeze\/ を 参照 し て くださ い ) この 構造 体 の 定義 は  Include\/import . h  に あ り 、 以下 の よう に な っ て い ま す : 
この ポインタ は  struct _frozen  の レコード から な り 、 終端 の 要素 の メンバ が  NULL  か ゼロ に な っ て い る よう な 配列 を 指 す よう 初期 化 さ れ ま す 。 
フリーズ さ れ た モジュール を import  する とき 、 この テーブル を 検索 し ま す 。 
サード パーティ 製 の コード から この ポインタ に 仕掛け を 講 じ て 、 動的 に 生成 さ れ た フリーズ 化 モジュール の 集合 を 提供 する よう に でき ま す 。 
既存 の 組み込 み モジュール テーブル に 単一 の モジュール を 追加 し ま す 。 
この 関数 は 利便 性 を 目的 と し た  PyImport_ExtendInittab ( )  の ラッパ 関数 で 、 テーブル が 拡張 でき な い とき に は  - 1  を 返 し ま す 。 
新た な モジュール は  name  で import  でき 、 最初 に import  を 試み た 際 に 呼び出 さ れ る 関数 と し て  initfunc  を 使 い ま す 。 
Py _ Initialize ( )  より も 前 に 呼び出 さ ね ば な り ま せ ん 。 
組み込 み モジュール リスト 内 の 一 つ の エントリ を 記述 し て い る 構造 体 で す 。 
リスト 内 の 各 構造 体 に は 、 インタプリタ 内 に 組み込 ま れ て い る モジュール の 名前 と 初期 化 関数 が 指定 さ れ て い ま す 。 
Python  を 埋め込 む よう な プログラム は 、 この 構造 体 の 配列 と PyImport_ExtendInittab ( )  を 組み合わせ て 、 追加 の 組み込 み モジュール を 提供 でき ま す 。 
構造 体 は Include\/import . h  で 以下 の よう に 定義 さ れ て い ま す : 
組み込 み モジュール の テーブル に 一群 の モジュール を 追加 し ま す 。 
配列  newtab は  name  フィールド が  NULL  に な っ て い る センチネル  ( sentinel)  エントリ で 終端 さ れ て い な けれ ば な り ま せ ん ; センチネル 値 を 与え られ な かっ た 場合 に は メモリ 違反 に な る か も しれ ま せ ん 。 
成功 する と  0  を 、 内部 テーブル を 拡張 する の に 十分 な メモリ を 確保 でき な かっ た 場合 に は  - 1  を 返 し ま す 。 
操作 が 失敗 し た 場合 、 モジュール は 一切 内部 テーブル に 追加 さ れ ま せ ん 。 
Py _ Initialize ( )  より も 前 に 呼び出 さ ね ば な り ま せ ん 。 
1 . 1  インク ルード ファイル 
1 . 2  オブジェクト 、 型 および 参照 カウント 
Python\/C API  を 使 う ため に 必要 な 、 関数 、 型 および マクロ の 全て の 定義 を インク ルード する に は 、 以下 の 行 : 
を ソース コード に 記述 し ま す 。  この 行 を 記述 する と 、 標準 ヘッダ : stdio . h , string . h , errno . h , limits . h ,  and stdlib . h  を  ( あ れ ば )  インク ルード し ま す 。 
システム に よ っ て は 、 Python  の 定義 し て い る プリ プロセッサ 定義 が 標準 ヘッダ に 影響 を およぼ す 可能 性 が あ る の で 、 Python . h は 他 の 標準 ヘッダ ファイル より も 前 に インク ルード し て くださ い 。 
Python . h  で 定義 さ れ て い る 、 ユーザ から 見え る 名前 全て  ( Python . h が インク ルード し て い る 標準 ヘッダ の 名前 は 除 き ま す )  に は 、 接頭 文字 列 " Py "  また は  " _Py "  が 付 き ま す 。 
" _ Py "  で 始ま る 名前 は Python  実装 で 内部 使用 する ため の 名前 で 、 拡張 モジュール の 作者 は 使 っ て は な り ま せ ん 。  構造 体 の メンバ に は 予約 済み の 接頭 文字 列 は あ り ま せ ん 。 
重要 :  API  の ユーザ は 、 " Py "  や " _Py "  で 始ま る 名前 を 定義 する よう な コード を 絶対 に 書 い て は な り ま せ ん 。 
後 から コード を 読 む 人 を 混乱 さ せ たり 、 将来 の  Python  の バージョン で 同じ 名前 が 定義 さ れ て 、 ユーザ の 書 い た コード の 可搬 性 を 危う く する 可能 性 が あ り ま す 。  ヘッダ ファイル 群 は 通常  Python  と 共 に インストール さ れ ま す 。 
Unix で は 
prefix\/include\/pythonversion \/ および 
exec _prefix\/include\/pythonversion \/ に 置 か れ ま す 。  prefix  と  exec _prefix  は  Python  を ビルド する 際 の  configure  スクリプト に 与え た パラメタ に 対応 し 、 version  は sys . version [ : 3 ]  に 対応 し ま す 。 
Windows  で は 、 ヘッダ は 
親 ディレクトリ を サーチ パス に 入れ て 、 " # include python 2 . 4 \/ Python . h "  の よう に し て は な り ま せ ん ;  prefix  内 の プラットフォーム に 依存 し な い ヘッダ は 、 exec _prefix  から プラットフォーム 依存 の ヘッダ を インク ルード し て い る の で 、 この よう な 操作 を 行 う と 複数 の プラットフォーム で の ビルド が でき な く な り ま す 。  API  は すべて  C  言語 を 使 っ て 定義 し て い ま す が 、 ヘッダ ファイル は エントリ ポイント を  extern " C "  で 適切 に 宣言 し て い る の で 、 C + +  ユーザ は 、 なん の 問題 も な く  C + + から  API  を 利用 でき る こと に 気づ く はず で す 。 
6 . 1 1  索引 生成 の ため の マーク アップ  技術 文書 に お け る 索引 の 効果 的 な 作成 は 、 とりわけ 作者 が あ る 事柄 に は 詳し く て も 索引 の 生成 に は 不慣れ な 場合 に は 非常 に 困難 で す 。 
ドキュメント の 困難 さ の ほとんど は 技術 用語 の 範囲 から き て い ま す :  ある 概念 を 説明 する 際 に 、 熟練 者 が 使 う よう な 用語 を 入れ る だけ で は 不 十分 で す 。 
ドキュメント の 作者 は 普通 、 自分 の 書 い て い る ドキュメント の 領域 に お い て は 熟練 者 で あ り 、 初心 者 が 立ち止ま っ て しま う よう な 用語 を 見つけ 出 す の は かなり 難し い の で す 。  索引 生成 の 本当 に 困難 な 側面 は 、 ドキュメント 作成 ツール で 補助 でき る よう な 領域 の ことがら で は あ り ま せ ん 。 
と は い え 、 ひとたび 用語 の 内容 を 決め た ら 、 索引 の 作成 を 簡単 に する の は ツール の 役割 で す 。 
様々 な 種類 の 索引 を 最小 限 の 努力 で 生成 でき る よう に する ため に ドキュメント 生成 ソフトウェア が 利用 でき る よう な マーク アップ が 提供 さ れ て い ま す 。 
ドキュメント で 多く の モジュール に 対 する 参照 が 入 っ た  `` モジュール 索引 ' '  が 必要 な 場合 、 プリアン ブル 内 で 使 い ま す 。 
この マクロ は 一連 の declaremodule  マクロ から データ ファイル libjobname . idx  を 生成 し ま す 。 
この ファイル は makeindex  プログラム で 使 わ れ 、 モジュール 索引 を 入れ た い 場所 に input  を 使 っ て 取り込め る よう な ファイル を 生成 し ま す 。 
様々 な 概念 に つ い て 索引 エントリ を 追加 する 上 で 便利 な マクロ が あ り ま す 。  これ ら の 多く は プログラミング 言語 や 、 Python  に 特有 の 概念 で す 。 
name  と い う 名前 の 組み込 み 関数 に 対 する 索引 エントリ を 追加 し ま す ; name  の 後ろ に 丸括弧 を 入れ て は な り ま せ ん 。 
exception  と い う 名前 の 例外 に 対 する 索引 エントリ を 追加 し ま す 。 
例外 は クラス ベース の 例外 で な けれ ば な り ま せ ん 。 
言語 に お け る 予約 語  ( keyword 、 関数 や メソッド 呼び出し に お け る キー ワード 引数 と は 違 い ま す )  に 対 する 索引 エントリ を 追加 し ま す 。 
組み込 み オブジェクト 型 に 対 する 索引 エントリ を 追加 し ま す 。 
" + "  の よう な 演算 子 に 対 する 索引 エントリ を 追加 し ま す 。 
モジュール  module  に 対 する 索引 エントリ を 追加 し ま す ;  module  に アンダース コア が 入 っ て い る 場合 、 オプション の パラメタ key  に は 、 module  から アンダース コア を 除去 し た 名前 を 指定 せ ね ば な り ま せ ん 。 
索引 エントリ ` ` module  ( module ) ' ' を 生成 し ま す 。 
Python  で 書 か れ た 非 標準 モジュール で 使 う ため の もの で す 。 
refmodindex  の よう な もの で す が 、 索引 エントリ は ` ` module  ( extension  module ) ' ' に な り ま す 。  この マクロ は  Python  以外 で 書 か れ た 非 標準 モジュール で 使 う ため の もの で す 。 
refmodindex  の よう な もの で す が 、 索引 エントリ は ` ` module  ( built - in  module ) ' ' に な り ま す 。  この マクロ は  Python  以外 で 書 か れ た 標準 モジュール で 使 う ため の もの で す 。 
refmodindex  の よう な もの で す が 、 索引 エントリ は ` ` module  ( standard  module ) ' ' に な り ま す 。  この マクロ は  Python  で 書 か れ た 標準 モジュール で 使 う ため の もの で す 。 
print  や try \/finally  の よう な 、 構文 型 に 対 する 索引 エントリ を 追加 し ま す 。 
総合 索引 を 簡単 に 作成 する 上 で 便利 な マクロ が 提供 さ れ て い ま す 。  索引 エントリ は 、 索引 の 様々 な 場所 で 語順 を 入れ 替え て 表示 し な けれ ば な り ま せ ん 。 
これ ら の マクロ は 単に  index  を 使 っ て 複数 の 索引 エントリ を 作成 する よう な 単純 な マクロ で す 。 
こう し た マクロ を 使 っ て 構築 さ れ た 索引 エントリ に は 、 一 次 および 二 次 の 索引 テキスト が 入 り ま す 。 
二 つ の 索引 語 から な る 索引 エントリ を 構築 し ま す 。 
index{ word 1 ! word 2 }  と index{ word 2 ! word 1 }  を 組み合わせ て 使 う の と 同じ で す 。 
三 つ の 索引 語 から な る 索引 エントリ を 構築 し ま す 。 
index{ word 1 ! word 2 word 3 } 、 index{ word 2 ! word 3 , word 1 } 、 および index{ word 3 ! word 1 word 2 }  を 組み合わせ て 使 う の と 同じ で す 。 
四 つ の 索引 語 から な る 索引 エントリ を 構築 し ま す 。 
index{ word 1 ! word 2 word 3 word 4 } 、 index{ word 2 ! word 3 word 4 ,  word 1 } 、 index{ word 3 ! word 4 ,  word 1 word 2 } 、 および index{ word 4 ! word 1 word 2 word 3 }  を 組み合わせ て 使 う の と 同じ で す 。 
6 . 3  情報 単位  モジュール が 提供 し て い る 特定 の 機能 を 説明 する ため に 使 う マクロ が 数 多 く あ り ま す 。 
これ ら の 各 環境 に は 、 環境 を 使 っ て 何 を 説明 し よう と し て い る か を 表 す 基本 的 な 情報 を パラメタ に 指定 する 必要 が あ り ま す 。 
説明 内容 自体 は 環境 の 中 に 書 き ま す 。  こう し た 環境 の ほとんど は  ( ドキュメント が 総合 索引 を 生成 する 際 に ) 総合 索引 上 の エントリ に な り ま す ;  索引 エントリ が 必要 な い 場合 、 それぞれ 索引 を 生成 し な い 変化 形 の 環境 が あ り ま す 。 
環境 は 
featuredesc  と い う 形式 の 名前 に な り 、 索引 を 生成 し な い 変化 形 は 
featuredescni  と い う 形式 の 名前 に な り ま す 。 
該当 する 機能 が クラス インスタンス の 属性 で あ る 場合 、 type name を 与え る 必要 が あ る の は 、 クラス が その モジュール の 説明 で 最後 に 説明 し た クラス で な い 場合 だけ で す ;  それ 以外 の 場合 、 最後 に 説明 し た classdesc の  name  を 適用 し ま す 。  組み込 み 型 や 拡張 型 の 機能 に つ い て は 、 type name  を 常 に 与え ね ば な り ま せ ん 。 
もう 一 つ 特殊 な ケース と し て 、 formatter  モジュール に おけ る  formatter  や  writer  の よう な 、 汎用 の  ` ` プロトコル ' ' の メソッド や メンバ が あ り ま す :  これ ら は 特定 の 実装 クラス なし に ドキュメント を 書 く こと が あ り 、 常 に type name  パラメタ を 指定 する 必要 が あ り ま す 。 
C  関数 を 解説 する とき に 使 う 環境 で す 。 
type  は typedef さ れ て い る 型名 か 、  struct tag 
か 、 基本 型 の 名前 で な けれ ば な り ま せ ん 。 
ポインタ 型 の 場合 、 後続 する アスタ リスク の 前 に スペース を 入れ て は な り ま せ ん 。  name  は 関数  ( また は 関数 に 似 た 形式 を と る プリ プロセッサ マクロ )  の 名前 で な く て は な ら ず 、 args  に は パラメタ の 型 と 名前 を 与え ね ば な り ま せ ん 。 
名前 は 説明 文 内 で も 使え る 形式 で 書 か ね ば な り ま せ ん 。 
構造 体 メンバ を 説明 する とき に 使 う 環境 で す 。  container  に は 、 typedef さ れ て い る 名前 なら それ を 使 い 、 そう で な けれ ば " struct tag 
"  と 指定 せ ね ば な り ま せ ん 。 
メンバ の 型 は type  に 指定 し 、 メンバ 名 は  name  に 指定 し ま す 。 
説明 文 中 に は 変数 の 許容 範囲 、 値 が どの よう に 解釈 さ れ る か 、 そして 値 が 変更 可能 か を 記述 せ ね ば な り ま せ ん 。 
本文 中 で 構造 体 メンバ を 参照 する 場合 に は 、  member  マクロ を 使 い ま す 。 
` ` 単純 ' '  マクロ を 説明 する とき に 使 う 環境 で す 。 
単純 マクロ は 、 引数 を 取 ら な い ため 関数 で 記述 でき な い よう な コード を 展開 する 際 に 使 い ま す 。 
この 環境 は 単純 な 定数 定義 に は 用い ま せ ん 。 
Python  ドキュメント 内 で の この マクロ の 用例 と し て は 、 PyObject_ HEAD  や Py _ BEGIN _ ALLOW_ TH READS  が あ り ま す 。 
C  の 型 を 説明 する とき に 使 う 環境 で す 。 
name  パラメタ は typedef さ れ た 名前 で な けれ ば な り ま せ ん 。 
typedef が な く 、  struct  で 定義 さ れ て い る 型 の 場合 、  name  は  struct tag 
グローバル な  C  の 変数 を 説明 する とき に 使 う 環境 で す 。 type  は typedef さ れ て い る 型名 か 、  struct tag 
か 、 基本 型 の 名前 で な けれ ば な り ま せ ん 。 
ポインタ 型 の 場合 、 後続 する アスタ リスク の 前 に スペース を 入れ て は な り ま せ ん 。 
datadesc  に 似 て い ま す が 、 索引 エントリ を 作成 し ま せ ん 。 
クラス と し て 定義 さ れ て い る 例外 を 説明 する ため に 使 い ま す 。  constructor  parameters  に は 、 self  や コンストラクタ 呼び出 し 構文 で 使 う 丸括弧 を 含め て は な り ま せ ん 。 
コンストラクタ に 与え る パラメタ の 説明 が な い よう な 例外 クラス を 説明 する 場合 に は 、 excdesc  環境 を 使用 し て くださ い 。 
例外 を 説明 する ため の 環境 で す 。 
クラス 例外 の 場合 に は 、 コンストラクタ の パラメタ が 記述 さ れ ま せ ん :  例外 クラス と コンストラクタ を 説明 する 場合 に は 、 excclassdesc  を 使 っ て くださ い 。 
モジュール レベル の 関数 を 説明 する ため の 環境 で す 。  parameters  に は 、 呼び出し の 際 に 使 う 丸括弧 を 含め て は な り ま せ ん 。 
オブジェクト メソッド の 説明 に は この 環境 を 使 い ま せ ん 。 
モジュール の 公開 インタフェース の 一部 と し て モジュール の 名前 空間 内 に 置 か れ て い る 束縛 さ れ た オブジェクト メソッド  ( bound object  method )  は 、 ほとんど の 用途 で モジュール レベル 関数 と 同じ な の で 、 この 環境 を 使 い ま す 。  説明 に は 、 必要 な パラメタ と 、 パラメタ が どう 処理 さ れ る か  ( とりわけ 、 パラメタ と し て 渡 し た 変更 可能 な オブジェクト が 変更 さ れ る か 否 か )  、 副 作用 、 送出 さ れ う る 例外 に つ い て の 情報 を 含め ね ば な り ま せ ん 。 
小さな 例題 を 提供 し て かま い ま せ ん 。 
funcdesc  に 似 て い ま す が 、 索引 エントリ を 作成 し ま せ ん 。 
クラス と その コンストラクタ を 説明 する ため の 環境 で す 。  constructor  parameters  に は 、 self  や コンストラクタ 呼び出 し 構文 で 使 う 丸括弧 を 含め て は な り ま せ ん 。 
コンストラクタ の 説明 を 伴 わ な い クラス を 説明 する ため の 環境 で す 。 
属性 を コンテナ 化 する こと が ほとんど な かっ たり 、 ユーザ コード から インスタンス 化 や サブ クラス 化 を 行 わ な い よう な クラス を 記述 する 際 に 利用 でき ま す 。 
オブジェクト の データ 属性 を 説明 する ため の 環境 で す 。 
説明 に は 、 想定 さ れ て い る データ 型 や 、 データ が 直接 変更 可能 か に つ い て の 情報 が な けれ ば な り ま せ ん 。 
memberdesc  に 似 て い ま す が 、 索引 エントリ を 作成 し ま せ ん 。 
オブジェクト メソッド を 説明 する ため の 環境 で す 。  parameters  に は 、 self  パラメタ や 呼び出 し 構文 で 使 う 丸括弧 を 含め て は な り ま せ ん 。 
説明 に は 、 funcdesc  内 で 説明 する の と 同じ よう な 情報 が 入 っ て い な けれ ば な り ま せ ん 。 
methoddesc  に 似 て い ま す が 、 索引 エントリ を 作成 し ま せ ん 。 
6 . 4  コード の 例示  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
6 . 5  イン ライン マーク アップ  この 節 で 説明 する マクロ は 、 単に ドキュメント テキスト 中 の 興味 深 い 内容 を マーク する ため に 使 わ れ ま す 。 
これ ら の マクロ は 、 本文 だけ で は な く 、 表題 に 利用 し て も かま い ま せ ん  ( と は い え 、 ハイパーリンク を 含 む もの は 除 か ね ば な り ま せ ん ) 。 
code  に 似 て い ま す が 、 ボールド 書体 に し ま す 。 
C 言語 に お け る 変数 の 名前 で す 。 
}  C 言語 に お け る 関数 の 名前 で す 。 
name  に は 関数 名 と その 後ろ の 丸括弧 を 含め ね ば な り ま せ ん 。 
1  バイト の 文字 列 値 で は な く 、 単一 の 文字 に つ い て 議論 する 場合 の 文字 で す 。 
文字 は  samp  と 同じ よう に タイプ セット さ れ ま す 。 
参照 し て い る 出版 物 の タイトル で す 。 
url を 指定 する と 、 タイトル 部分 は  HTML  形式 に フォーマット し た 際 に ハイ パーリンク に な り ま す 。 
クラス 名 で す ;  ドット 名 表記 を 使用 でき ま す 。 
短 い コード 断片 や 定数 リテラル 。 
引用 符 で 囲 わ な い の で 、 スペース を 入れ て は な り ま せ ん 。 
` ` 定義 済み の ' '  定数 名 で す 。 
C  言語 に お け る  # define  や 、 変更 さ れ な い こと に な っ て い る  Python  の 変数 の 場合 が あ り ま す 。 
` ` 単純 ' '  マクロ の 名前 で す 。 
単純 マクロ は 、 引数 を 取 ら な い ため 関数 で 記述 でき な い よう な コード の 展開 に 使 わ れ ま す 。 
C  の typedef や 構造 体 の 名前 で す 。 
型 が typedef  を 伴 わ ず に 定義 さ れ て い る 構造 体 の 場合 は 、 ctype{struct  struct_tag }  を 使 っ て 、 struct が 必須 で あ る こと を 明示 し て くださ い 。 
説明 し て い る 内容 が リリース  version  以降 で 撤廃 さ れ て い る こと を 宣言 し ま す 。 
what  to  do  に 指定 し た テキスト で は 、 撤廃 さ れ た もの の 代わり に 利用 す べ き もの を 推奨 せ ね ば な り ま せ ん 。 
テキスト は 完全 な 文 に せ ね ば な り ま せ ん 。 
文章 全体 に 対 し て 撤廃 を 注釈 する 場合 、 別個 の 段落 に し て 表示 せ ね ば な り ま せ ん ;  この 場合 、 撤廃 さ れ る 機能 の 説明 の 前 か 後ろ の どちら か に 置 き ま す 。 
テキスト に おけ る term  の インスタンス の 定義 を マーク し ま す 。 
( 索引 エントリ を 生成 し ま せ ん 。 
バックス ラッシュ を 生成 し ま す 。 
code  、 file  や 類似 の マクロ 、 および  alltt  環境 の 内容 を 記述 する 場合 に 便利 で 、 そう し た マーク アップ 内 だけ 定義 さ れ て い ま す 。 
( citetitle  マクロ の 中身 の よう な )  通常 の 文章 で バックス ラッシュ を 生成 する 場合 に は 、 標準 の  text backslash  マクロ を 使 っ て くださ い 。 
電子 メール アドレス で す 。 
出力 形式 が 何 で あ れ 、 ハイパーリンク は 行 わ れ な い  の で 注意 し て くださ い 。 
アドレス の ドメイン ネーム 部分 は 小 文字 で な けれ ば な り ま せ ん 。 
強調 テキスト で す 。  イタリック フォント で 表示 さ れ ま す 。 
環境 変数 で す 。 
索引 エントリ を 生成 し ま す 。 
例外 の 名前 で す 。 
ドット 名 表記 を 使え ま す 。 
ファイル や ディレクトリ の 名前 で す 。 
PDF  と  Post Script  形式 の 出力 で は ファイル 名 を 表現 する の に 単引 用 符 で 囲 っ て フォント を 変更 し ま す が 、 HTML  出力 で は 引用 符 囲い を 行 い ま せ ん 。 
警告 : 処理 上 の 制約 に よ り 、 file  マクロ は セクション タイトル 内 の 内容 に は 使え ま せ ん 。 
file  に 似 て い ま す が 、 単引 用 符 を 使 い ま せ ん 。 
テーブル と 組み合わせ る 際 に 、 カラム に ファイル や ディレクトリ 名 だけ が 入 る よう な 場合 に 使え ま す 。 
警告 : 処理 上 の 制約 に よ り 、 filenq  マクロ は セクション タイトル 内 の 内容 に は 使え ま せ ん 。 
Python  関数 の 名前 で す ;  ドット 名 表記 を 使え ま す 。 
数学 的 な 無限 大 を 表 す シンボル :  で す 。 
この シンボル の HTML  表現 を 適切 に 描画 でき な い ブラウザ も あ り ま す が 、 サポート は 拡大 し て い ま す 。 
キー シーケンス を マーク し ま す 。 
key sequence  が どんな 形式 に な る か は プラットフォーム や アプリケーション 固有 の 取り決め に 依存 し ま す 。 
適当 な 取り決め が な い 場合 に は 、 初心 者 や 別 の システム を 利用 し て い る 人 たち が 分か り やす い よう に 、 モディファイアキー 名 を 書き 下 さ ね ば な り ま せ ん 。 
例えば 、 xemacs  の キー シーケンス は kbd{ C - x  C - f }  の よう に マーク でき ま す が 、 特定 の アプリケーション や プラットフォーム に 対 する 参照 を 行 わ な い 場合 に は 、 kbd { Control - x  Control - f }  と マーク せ ね ば な り ま せ ん 。 
プログラミング 言語 に お け る 予約 語  ( keyword )  の 名前 で す 。 
RFC  82 2  形式 の メイル ヘッダ 名 で す 。 
この マーク アップ は 、 その ヘッダ が 電子 メイル メッセージ 中 で 使 わ れ て い る こと を 示 す の で は な く 、 同じ  `` スタイル ' ' の ヘッダ を 表 す の に 使え る 名前 で あ る こと を 示 し ま す 。  様々 な  MIME  仕様 が 定義 し て い る ヘッダ に 対 し て も 使 い ま す 。 
ヘッダ 名 の 表現 方法 は 、 実際 に 通常 使 わ れ て い る の と 同じ 方法 で 入力 し な く て は な り ま せ ん 。  また 、 複数 の 用法 が あ り 、 いずれ も 広 く 使 わ れ て い る 場合 に は 、 キャメル 形式  ( camel- casting )  を 優先 し ま す 。 
ヘッダ 名 の 後ろ に 続 く コロン は 含め て は な り ま せ ん 。  例 : mailheader { Content- Type} 。 
make  に お け る 変数 名 で す 。 
Unix  マニュアル ページ へ の 参照 で す 。 
オブジェクト の データ 属性 名 で す 。 
}  オブジェクト の メソッド 名 で す 。 
name  に は メソッド 名 と その 後ろ に 続 く 丸括弧 を 入れ ね ば な り ま せ ん 。 
ドット 名 表記 を 使え ま す 。 
MIME  タイプ の 名前 か 、  MIME  タイプ の 要素 ( メジャー タイプ は マイナー タイプ の いずれ か )  の 名前 で す 。 
モジュール の 名前 で す :  ドット 名 表記 を 使え ま す 。 
パッケージ 名 に も これ を 使 い ま す 。 
Usenet  の ニュース グループ 名 で す 。 
ある  API  に つ い て 、 ユーザ が その  API  を 一部 で も 利用 する 場合 に は 知 っ て お か ね ば な ら な い よう な 特に 重要 な 情報 で す 。 
この マクロ は 注釈 が 終了 する 場所 を 視覚 的 に マーク し な い の で 、 段落 の 末尾 の 内容 に せ ね ば な り ま せ ん 。 
text  の 内容 は 完全 な 文 で 書 き 、 適切 な 区切り を 入れ ね ば な り ま せ ん 。 
Python  Enhancement  Proposal  へ の 参照 で す 。 
この マクロ は 索引 エントリ を 生成 し ま す 。 
"  と い う 出力 を 生成 し ま す ; HTML  出力 の 場合 、 テキスト は 指定 さ れ た  PEP  の オン ライン コピー に 対 する ハイパーリンク に な り ま す 。 
ある 値 が 、 指定 し た 量 に 対 し て 正負 の 値 を と る こと を 示 す シンボル で 、 通常 は マイナス 記号 の 上 に プラス 記号 を 置 い て 表 し ま す 。 
例 : plusminus  3 % 
実行 可能 形式 の プログラム 名 で す 。 
プラットフォーム に よ っ て は 、 実行 可能 形式 の ファイル 名 と は 異な る 場合 が あ り ま す 。 
特に 、 Windows  プログラム で は  . exe  ( や その 他 の )  拡張 子 を 省略 し ま す 。 
実行 可能 プログラム の コマンドライン オプション で す 。 
` ` 短 い ' ' オプション だけ に 使 い 、 先頭 に ハイフン を 入れ て くださ い 。 
実行 可能 プログラム の 長 い コマンドライン オプション で す 。 
この マクロ は 二 つ の ハイフン から 始ま る 長 い オプション 名 だけ に 使 い ま す ; ハイフン を  option  に 入れ て は な り ま せ ん 。 
module  に 似 て い ま す が 、 指定 し た モジュール に 対 する ハイパーリンク を 生成 し ま す 。 
この マクロ に 対応 する declaremodule は 同じ ドキュメント 内 に 入 っ て い な けれ ば な り ま せ ん 。 
declaremodule  が モジュール 名 と は 異な る モジュール キー を 定義 し て い る 場合 、 refmodule  マクロ 内 で も  key  と し て 指定 せ ね ば な り ま せ ん 。 
正規 表現 を マーク し ま す 。 
Internet  Request  for  Commments  へ の 参照 で す 。 
適切 な 索引 エントリ を 生成 し ま す 。 
テキスト  " RFC  number 
"  を 生成 し ま す ;  HTML  出力 で は 、 テキスト は 指定 し た  RFC  の オン ライン コピー に 対 する ハイパーリンク に な り ま す 。 
短 い コード 例 で 、 code  で 指定 する に は 長 すぎ る 場合 に 使 い ま す 。 
引用 符 記号 を 追加 する の で 、 テキスト に スペース を 入れ て も かま い ま せ ん 。 
プリアン ブル の setshortversion  マクロ に 指定 さ れ て い る よう な 、 ドキュメント の 対象 と な っ て い る ソフトウェア の  ` ` 短 い ' '  バージョン 番号 で す 。 
Python  の 場合 、 ある リリース に 対 する 短 い バージョン 番号 と は 。  sys . version  値 の 最初 の 三 文字 で す 。 
例えば 、 バージョン  2 . 0 b 1 と  2 . 0 . 1  の 短 い バージョン 番号 は いずれ も  2 . 0  に な り ま す 。 
全て の パッケージ に これ が 当てはま る わけ で は あ り ま せ ん ; setshortversion  を 使 わ な けれ ば 、 この マクロ は 空 文字 に 展開 さ れ ま す 。 
version  マクロ も 参照 し て くださ い 。 
強 く 強調 さ れ た テキスト で す ;  ボールド フォント で 表現 さ れ ま す 。 
URL  で 指定 し た ターゲット を 指 す ハイパー テキスト リンク に な り ま す が 、 リンク テキスト を ドキュメント リソース 中 の タイトル に し て は な り ま せ ん 。 
名前 を 使 っ て リソース を 参照 する 場合 に は 、 citetitle  マクロ を 使 っ て くださ い 。 
全て の 形式 の 出力 が 任意 の ハイパー テキスト リンク を サポート し て い る わけ で は あ り ま せ ん 。 
LaTeX  特有 の 多く の 文字 や 、 この マクロ 特有 の 文字 を 使 っ た 場合 、 たいてい 正し い 出力 に な り ま せ ん 。 
特に 、 チルダ 文字  ( "~ " )  は 誤 っ て 処理 さ れ ま す ;  hex  形式 の 配列 に エンコード すれ ば うま く い く の で 、 チルダ の 代わり に は " % 7 e "  を 使 っ て くださ い 。 
URL  ( また は  URN )  で す 。 
URL  は テキスト で 与え ま す 。 
HTML  や  PDF  の 出力 形式 で は 、 URL  文字 列 自体 も ハイパーリンク に な り ま す 。  この マクロ は 、 特定 の タイトル を 持 た な い 外部 リソース を 参照 する 際 に 利用 でき ま す ;  タイトル の あ る リソース へ の 参照 は  citetitle マクロ を 使 っ て マーク し て くださ い 。 
特殊 文字 に 関 する 特別 な 扱い に つ い て は 、 ulink  マクロ の 記述 中 の コメント を 参照 し て くださ い 。 
テキスト 中 で 変数 や 仮 引数 の 名前 で す 。 
プリアン ブル の release  マクロ に 指定 さ れ て い る よう な 、 ドキュメント の 対象 と な っ て い る ソフトウェア の バージョン 番号 で す 。 
shortversion  マクロ も 参照 し て くださ い 。 
ある  API  に つ い て 、 ユーザ が その  API  を 一部 で も 利用 する 場合 に は 警告 し て お か ね ば な ら な い よう な 重要 な 情報 で す 。 
この マクロ は 注釈 が 終了 する 場所 を 視覚 的 に マーク し な い の で 、 段落 の 末尾 の 内容 に せ ね ば な り ま せ ん 。 
text  の 内容 は 完全 な 文 で 書 き 、 適切 な 区切り を 入れ ね ば な り ま せ ん 。 
note  と の 違い は 、 セキュリティ に 関 する 情報 の 場合い は 、 warning  の 方 が 推奨 さ れ て い る と い う 点 で す 。 
以下 の 二 つ の マクロ は 、 ある リリース から 別 の リリース へ の 変更 点 に 関 する 情報 を 説明 する とき に 使 い ま す 。 
段落 一 つ 程度 で 説明 さ れ て い る よう な 内容 に 対 し て 注釈 を 入れ る 場合 に は 、 その 段落 の 末尾 に 一行 空け て 記述 し ま す 。 
複数 の 段落 から な る 場合 に は 、 説明 全体 の 末尾 に 一行 空け て 記述 し ま す 。 
versionadded  と versionchanged  の 両方 を 書 か ね ば な ら な い 場合 に は 、  versionadded  を 先 に し て くださ い 。  バージョン 番号 は 、 リリース さ れ た 順番 に 並 ん で い な けれ ば な り ま せ ん 。 
また 、 これ ら の マクロ は 利用 でき る 環境 に つ い て の 説明 より も 前 に 置 か ね ば な り ま せ ん 。 
実際 に マクロ を 書 く 場所 は 、 説明 と し て わか り やす い よう に し な けれ ば な り ま せ ん から 、 必要 に 応 じ て 調整 し て も かま い ま せ ん 。 
文章 中 で 説明 し て い る 機能 が 変更 さ れ た  ( 新た な パラメタ の 追加 、 副 作用 の 変化 、 など )  時 の  Python  の バージョン 番号 を 示 す ため に 使 い ま す 。  explanation  は 変更 内容 の 短 い  説明 で 、 大 文字 から 始ま る 短 い 文章 に し ま す ;  末尾 の ピリオド は フォーマット 処理 時 に 追加 さ れ ま す 。 
通常 、 この マクロ を モジュール 全体 に 適用 する こと は あ り ま せ ん 。 
IncrementalParser  の インスタンス は 次 の 追加 メソッド を 提供 し ま す 。 :
data  の チャンク を 処理 し ま す 。 
ドキュメント の 終わり を 決定 し ま す 。 
終わり に 達 し た 時点 で ドキュメント が 整 形 式 で あ る か どう か を 判別 、 ハンドラ を 起動 後 、 パース 時 に 使用 し た 資源 を 解放 し ま す 。 
この メソッド は  close  が 呼び出 さ れ た 後 、 次 の ドキュメント を パース 可能 に する ため 、 パーサ の リセット する の に 呼び出 さ れ ま す 。 
close  後 、 reset  を 呼び出 さ ず に  parse  や feed  を 呼び出 し た 場合 の 戻 り 値 は 未 定義 で す 。 
論理 行 の 行頭 に あ る 、 先頭 の 空白  ( スペース および タブ )  の 連なり は 、 その 行 の インデント レベル を 計算 する ため に 使 わ れ ま す 。  インデント レベル は 、 実行 文 の グループ 化 方法 を 決定 する ため に 用い られ ま す 。 
まず 、 タブ は  ( 左 から 右 の 方向 に )  1  つから  8  つ の スペース で 置き換え られ 、 置き換え 後 の 文字 列 の 終わり の 位置 まで の 文字 数 が  8  の 倍数 に な る よう に 調整 さ れ ま す  ( Unix で 使 わ れ て い る 規則 と 同じ に な る よう 意図 さ れ て い ま す ) 。 
次 に 、 空白 文字 で な い 最初 の 文字 まで の スペース の 総数 から 、 その 行 の インデント を 決定 し ま す 。 
バックス ラッシュ を 使 っ て インデント を 複数 の 物理 行 に 分割 する こと は でき ま せ ん ;  最初 の バックス ラッシュ まで の 空白 が インデント を 決定 し ま す 。 
プラットフォーム 間 の 互換 性 に 関 する 注意 :  非  UNIX  プラットフォーム に お け る テキスト エディタ の 性質 上 、 一 つ の ソース ファイル 内 で タブ と インデント を 混在 さ せ て 使 う の は 賢明 で は あ り ま せ ん 。 
また 、 プラットフォーム に よ っ て は 、 最大 インデント レベル を 明示 的 に 制限 し て い る か も しれ ま せ ん 。  フォーム フィード 文字 が 行 の 先頭 に あ っ て も 構 い ま せ ん ;  フォーム フィード 文字 は 上 の インデント レベル 計算 時 に は 無視 さ れ ま す 。 
スタック の 先頭 に 積 ま れ て ゆ く 数字 は 、 常 に スタック の 末尾 から 先頭 に かけ て 厳密 に 増加 する よう に な っ て い ま す 。 
各 論理 行 の 開始 位置 に お い て 、 その 行 の インデント レベル 値 が スタック の 先頭 の 値 と 比較 さ れ ま す 。 
値 が 等し けれ ば 何 も し ま せ ん 。  インデント レベル 値 が スタック 上 の 値 より も 大き けれ ば 、 インデント レベル 値 は スタック に 積 ま れ 、 INDENT  トークン が 一 つ 生成 さ れ ま す 。 
インデント レベル 値 が スタック 上 の 値 より も 小さ い 場合 、 その 値 は スタック 内 の いずれ か の 値 と 等し く な けれ ば な り ま せ ん  ; スタック 上 の インデント レベル 値 より も 大き い 値 は すべて 除去 さ れ 、 値 が 一 つ 除去 さ れ る ごと に  DEDENT  トークン が 一 つ 生成 さ れ ま す 。 
ファイル の 末尾 で は 、 スタック に 残 っ て い る ゼロ より 大き い 値 は 全て 除去 さ れ 、 値 が 一 つ 除去 さ れ る ごと に  DEDENT  トークン が 一 つ 生成 さ れ ま す 。  以下 の 例 に 正し く  ( しかし 当惑 さ せ る よう に )  インデント さ れ た  Python コード の 一部 を 示 し ま す : 
以下 の 例 は 、 様々 な インデント エラー に な り ま す : 
( 実際 は 、 最初 の  3  つ の エラー は パーザ に よ っ て 検出 さ れ ま す ;  最後 の エラー のみ が 字句 解析 器 で 見つか り ま す -- return r  の インデント は 、 スタック から 逐次 除去 さ れ て い く ど の インデント レベル 値 と も 一致 し ま せ ん ) 
8 . 1  スレッド 状態  ( thread  state ) 
8 .  初期 化  ( initialization ) 、 終了 処理  ( finalization ) 、 スレッド 
Python  インタプリタ を 初期 化 し ま す 。 
Python  の 埋め込み を 行 う アプリケーション で は 、 他 の あらゆる  Python\/C API  を 使用 する より も 前 に この 関数 を 呼び出 さ ね ば な り ま せ ん ;  ただし 、 Py _ Set Program Name( ) 
, および  PyEval _AcquireLock ( ) 
は 例外 で す 。 
を 生成 し ま す 。 
( sys . path )  も 初期 化 し ま す 。 
sys . argv  の 設定 は 行 い ま せ ん ;  設定 する に は 、 PySys_ SetArgv( ) 
を 使 っ て くださ い 。 
この 関数 を  ( Py _ Finalize ( ) 
を 呼 ば ず に )  再度 呼び出 し て も 何 も 行 い ま せ ん 。 
戻 り 値 は あ り ま せ ん ;  初期 化 が 失敗 すれ ば 、 それ は 致命 的 な エラー で す 。 
initsigs に 1 を 指定 すれ ば Py _ Initialize ( ) と 同じ 処理 を 実行 し ま す が 、 Python 埋め込 み アプリケーション で は initsigs を 0 と し て 初期 化 時 に シグナル ハンドラ の 登録 を スキップ する こと が でき ま す 。 
Python  インタプリタ が すでに 初期 化 済み の 場合 に 真  ( 非 ゼロ )  を 返 し 、 そう で な い 場合 に は 偽  ( ゼロ )  を 返 し ま す 。 
Py _ Finalize ( ) を 呼び出 す と 、 次 に Py _ Initialize ( )  を 呼び出 す まで この 関数 は 偽 を 返 し ま す 。 
Py _ Initialize ( )  と それ 以後 の  Python\/C API  関数 で 行 っ た 全て の 初期 化 処理 を 取り消し 、 最後 の  Py _ Initialize ( )  呼び出 し 以後 に  Python  インタプリタ が 生成 し た 全て の サブ インタプリタ  ( sub - interpreter ,  下記 の  Py _ NewInterpreter ( )  を 参照 )  を 消去 し ま す 。 
理想 的 な 状況 で は 、 この 関数 に よ っ て  Python  インタプリタ が 確保 し た メモリ は 全て 解放 さ れ ま す 。 
この 関数 を  ( Py _ Initialize ( )  を 呼 ば ず に )  再度 呼び出 し て も 何 も 行 い ま せ ん 。 
戻 り 値 は あ り ま せ ん ;  終了 処理 中 の エラー は 無視 さ れ ま す 。  この 関数 が 提供 さ れ て い る 理由 は いく つ か あ り ま す 。 
Python  の 埋め込み を 行 っ て い る アプリケーション で は 、 アプリケーション を 再 起動 する こと な く Python  を 再 起動 し た い こと が あ り ま す 。 
また 、 動的 ロード 可能 イ ブラリ ( あるいは  DLL )  から  Python  インタプリタ を ロード する アプリケーション で は 、 DLL  を アンロード する 前 に  Python  が 確保 し た メモリ を 解放 し た い と 考え る か も しれ ま せ ん 。 
アプリケーション 内 で 起き て い る メモリ リーク を 追跡 する 際 に 、 開発 者 は  Python  が 確保 し た メモリ を アプリケーション の 終了 前 に 解放 さ せ た い と 思 う 場合 も あ り ま す 。 
バグ および 注意 事項 :  モジュール や モジュール 内 の オブジェクト は ランダム な 順番 で 削除 さ れ ま す ;  この ため 、 他 の オブジェクト ( 関数 オブジェクト も 含 み ま す )  や モジュール に 依存 する デストラクタ  (__ del_ _( )  メソッド )  が 失敗 し て しま う こと が あ り ま す 。 
動的 に ロード さ れ る よう に な っ て い る 拡張 モジュール が  Python  に よ っ て ロード さ れ て い た 場合 、 アンロード さ れ ま せ ん 。 
Python  が 確保 し た メモリ が わずか ながら 解放 さ れ な い か も しれ ま せ ん  ( メモリ リーク を 発見 し た ら 、 どう か 報告 し て くださ い ) 。 
オブジェクト 間 の 循環 参照 に 捕捉 さ れ て い る メモリ は 解放 さ れ な い こと が あ り ま す 。 
拡張 モジュール が 確保 し た メモリ は 解放 さ れ な い こと が あ り ま す 。 
拡張 モジュール に よ っ て は 、 初期 化 ルーチン を  2  度 以上 呼び出 す と 正し く 動作 し な い こと が あ り ま す ;  こう し た 状況 は 、 Py _ Initialize ( )  や Py _ Finalize ( )  を  2  度 以上 呼び出 す と 起こ り 得 ま す 。 
新し い サブ インタプリタ  ( sub - interpreter )  を 生成 し ま す 。 
サブ インタプリタ と は 、 ( ほぼ 完全 に )  個別 に 分割 さ れ た Python  コード の 実行 環境 で す 。 
特に 、 新し い サブ インタプリタ は 、 import  さ れ る モジュール 全て に つ い て 個別 の バージョン を 持 ち 、 これ に は 基盤 と な る モジュール _ _builtin__
および sys 
も 含 ま れ ま す 。 
ロード 済み の モジュール から な る テーブル  ( sys . modules )  および モジュール 検索 パス  ( sys . path )  も サブ インタプリタ 毎 に 別個 の もの に な り ま す 。 
新た な サブ インタプリタ 環境 に は sys . argv  変数 が あ り ま せ ん 。 
また 、 サブ インタプリタ は 新た な 標準  I \/ O  ストリーム  sys . stdin , sys . st dout  および sys . stderr  を 持 ち ま す  ( と は い え 、 これ ら の ストリーム は 根底 に あ る  C  ライブラリ の 同じ  FILE  構造 体 を 参照 し て い ま す ) 。 
戻 り 値 は 、 新た な サブ インタプリタ が 生成 し た スレッド 状態  ( thread  state ) オブジェクト の うち 、 最初 の もの を 指 し て い ま す 。 
この スレッド 状態 が 現在 の スレッド 状態  ( current thread  state )  に な り ま す 。 
実際 の スレッド が 生成 さ れ る わけ で は な い の で 注意 し て くださ い ; 下記 の スレッド 状態 に 関 する 議論 を 参照 し て くださ い 。 
新た な インタプリタ の 生成 に 失敗 する と 、 NULL  を 返 し ま す ; 例外 状態 は セット さ れ ま せ ん が 、 これ は 例外 状態 が 現在 の スレッド 状態 に 保存 さ れ る こと に な っ て い て 、 現在 の スレッド 状態 な る もの が 存在 し な い こと が あ る から で す 。 
( 他 の  Python\/C API  関数 の よう に 、 この 関数 を 呼び出 す 前 に は グローバル インタプリタ ロック ( global interpreter  lock )  が 保持 さ れ て い な けれ ば な ら ず 、 関数 が 処理 を 戻 し た 際 に も 保持 さ れ た まま に な り ま す ;  しかし 、 他 の  Python\/C API  関数 と は 違 い 、 関数 から 戻 っ た とき の 現在 の スレッド 状態 が 関数 に 入 る とき と 同じ と は 限 ら な い の で 注意 し て くださ い ) 。  拡張 モジュール は 以下 の よう な 形 で  ( サブ )  インタプリタ 間 で 共有 さ れ ま す :  ある 特定 の 拡張 モジュール を 最初 に import  する と 、 モジュール を 通常 通り に 初期 化 し 、 その モジュール の 辞書 の ( 浅 い )  コピー を しまい込 ん で お き ま す 。 
は 再度 呼び出 さ れ  ま す 。 
バグ と 注意 事項 :  サブ インタプリタ  ( と メイン インタプリタ ) は 同じ プロセス の 一 部分 な の で 、 インタプリタ 間 の 絶縁 性 は 完璧 で は あ り ま せ ん - -  例えば 、 
os . close ( )  の よう な 低 レベル の ファイル 操作 を 使 う と 、 ( 偶然 なり 故意 なり に )  互い の インタプリタ 下 に あ る 開 か れ た ファイル に 影響 を 及ぼ せ て しま い ま す 。 
拡張 モジュール を  ( サブ )  インタプリタ 間 で 共有 する 方法 の ため に 、 拡張 モジュール に よ っ て は 正し く 動作 し ない か も しれ ま せ ん ;  拡張 モジュール が  ( 静的 な )  グローバル 変数 を 利用 し て い る 場合 や 、 拡張 モジュール が 初期 化 後 に 自身 の モジュール 辞書 を 操作 する 場合 に は 特に そう で す 。 
一 つ の サブ インタプリタ で 生成 さ れ た オブジェクト は 他 の サブ インタプリタ の 名前 空間 へ の 挿入 が 可能 で す ;  ユーザ 定義 関数 、 メソッド 、 インスタンス および クラス を サブ インタプリタ を サブ インタプリタ 間 で 共有 し な い よう に 十分 注意 し て くださ い 。 
と い う の は 、 これ ら の 共有 オブジェクト が 実行 し た import  文 は 間違 っ た  ( サブ )  インタプリタ の ロード 済み モジュール 辞書 に 影響 を 及ぼ す 場合 が あ る から で す  ( XXX  この 問題 は 修正 が 難し い バグ で 、 将来 の リリース で 解決 さ れ る 予定 で す ) 
指定 さ れ た スレッド 状態  tstate  で 表現 さ れ る  ( サブ )  インタプリタ を 抹消 し ま す 。 tstate  は 現在 の スレッド 状態 で な けれ ば な り ま せ ん 。 
下記 の スレッド 状態 に 関 する 議論 を 参照 し て くださ い 。 
関数 呼び出し が 戻 っ た とき 、 現在 の スレッド 状態 は  NULL に な っ て い ま す 。 
この インタプリタ に 関連 付け られ た 全て の スレッド 状態 は 抹消 さ れ ま す 。 
( この 関数 を 呼び出 す 前 に は グローバル インタプリタ ロック を 保持 し て お か ね ば な ら ず 、 ロック は 関数 が 戻 っ た とき も 保持 さ れ て い ま す 。 
は 、 その 時点 で 明示 的 に 抹消 さ れ て い な い 全て の サブ インタプリタ を 抹消 し ま す 。 
この 関数 を 呼び出 す なら 、 最初 に Py _ Initialize ( ) 
を 呼び出 す より も 前 に 呼び出 さ ね ば な り ま せ ん 。 
この 引数 値 は 、 Py _ GetPath ( ) 
や 、 以下 に 示 す その 他 の 関数 が 、 インタプリタ の 実行 可能 形式 から Python  ラン タイム ライブラリ へ の 相対 パス を 取得 する ため に 使 わ れ ま す 。 
デフォルト の 値 は 'python' で す 。 
引数 は ゼロ 終端 さ れ た キャラクタ 文字 列 で 、 静的 な 記憶 領域 に 入 っ て い な けれ ば な ら ず 、 その 内容 は プログラム の 実行 中 に 変更 し て は な り ま せ ん 。 
Python  インタプリタ 内 の コード で 、 この 記憶 領域 の 内容 を 変更 する もの は 一切 あ り ま せ ん 。 
で 設定 さ れ た プログラム 名 か 、 デフォルト の プログラム 名 を 返 し ま す 。 
関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
プラットフォーム 非 依存 の ファイル 群 が インストール さ れ て い る 場所 で あ る prefix  を 返 し ま す 。 
この 値 は Py _ Set Program Name( )  で セット さ れ た プログラム 名 や いく つ か の 環境 変数 を もと に 、 数々 の 複雑 な 規則 から 導出 さ れ ま す ; 例えば 、 プログラム 名 が '\/ usr\/ local \/ bin\/python' の 場合 、 prefix  は '\/ usr\/ local ' に な り ま す 。  関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
この 値 は トップ レベル の  Makefile  に 指定 さ れ て い る 変数 prefix  や 、 ビルド 値 に  configure  スクリプト に 指定 し た - - prefix  引数 に 対応 し て い ま す 。 
この 値 は  Python  コード から は  sys . prefix  と し て 利用 でき ま す 。 
Unix で も 有用 で す 。 
次 に 説明 する 関数 も 参照 し て くださ い 。 
プラットフォーム 依存  の ファイル が インストール さ れ て い る 場所 で あ る exec - prefix  を 返 し ま す 。 
この 値 は Py _ Set Program Name( )  で セット さ れ た プログラム 名 や いく つ か の 環境 変数 を もと に 、 数々 の 複雑 な 規則 から 導出 さ れ ま す ; 例えば 、 プログラム 名 が '\/ usr\/ local \/ bin\/python' の 場合 、 exec - prefix  は '\/ usr\/ local ' に な り ま す 。 
関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
この 値 は トップ レベル の  Makefile  に 指定 さ れ て い る 変数 exec _prefix  や 、 ビルド 値 に  configure  スクリプト に 指定 し た  - - exec - prefix  引数 に 対応 し て い ま す 。 
この 値 は  Python  コード から は  sys . exec _prefix  と し て 利用 でき ま す 。 
Unix のみ で 有用 で す 。  背景 :  プラットフォーム 依存 の ファイル  ( 実行 形式 や 共有 ライブラリ )  が 、 別個 の ディレクトリ ツリー 内 に インストール さ れ て い る 場合 、 exec - prefix  は  prefix  と 異な り ま す 。 
典型 的 な インストール 形態 で は 、 プラットフォーム 非 依存 の ファイル が \/ usr\/ local  に 収め られ る 一方 、 プラットフォーム 依存 の ファイル は \/ usr\/ local \/plat  サブ ツリー に 収め られ ま す 。  概し て 、 プラットフォーム と は 、 ハードウェア と ソフトウェア ファミリ の 組み合わせ を 指 し ま す 。 
例えば 、  Solaris  2 . x  を 動作 さ せ て い る  Sparc  マシン は 全て 同じ プラットフォーム で あ る と みな し ま す が 、 Solaris  2 . x を 動作 さ せ て い る  Intel  マシン は 違 う プラットフォーム に な り ま す し 、 同じ  Intel  マシン で も  Linux  を 動作 さ せ て い る なら また 別 の プラットフォーム で す 。 
一般 的 に は 、 同じ オペレーティング システム で も 、 メジャー リビジョン の 違 う もの は 異な る プラットフォーム で す 。 
Python  実行 可能 形式 の 完全 な プログラム 名 を 返 し ま す ;  この 値 は デフォルト の モジュール 検索 パス を  ( 前述 の Py _ Set Program Name( )  で 設定 さ れ た )  プログラム 名 から 導出 する 際 に 副 作用 的 に 計算 さ れ ま す 。 
関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
この 値 は  Python  コード から は  sys . executable  と し て 利用 でき ま す 。 
Unix のみ で 有用 で す 。  char * 
デフォルト モジュール 検索 パス を 返 し ま す ;  パス は  ( 上 の Py _ Set Program Name( )  で 設定 さ れ た )  プログラム 名 と 、 いく つ か の 環境 変数 から 計算 さ れ ま す 。 
戻 り 値 と な る 文字 列 は 、 プラットフォーム 依存 の パス デリミタ 文字 で 分割 さ れ た 一連 の ディレクトリ 名から な り ま す 。 
デリミタ 文字 は  Unix で は " : " 、 Windows  で は " ; "  、 Macintosh  で は  " n "  ( ASCII 改行 文字 )  で す 。 
この 値 は  Python  コード から は リスト sys . path  と し て 利用 でき ま す 。 
この リスト は 、 値 を 修正 し て 将来 モジュール を ロード する 際 に 使 う 検索 パス を 変更 でき ま す 。 
Python  インタプリタ の バージョン を 返 し ま す 。 
バージョン は 、 
" 1 . 5  ( # 67 ,  Dec  31  1997 ,  22 : 34 : 28 )  [ GCC  2 . 7 . 2 . 2 ] "  よう な 形式 の 文字 列 で す 。 
第 一 ワード  ( 最初 の スペース 文字 まで )  は 、 現在 の  Python  の バージョン で す ;  最初 の 三 文字 は 、 メジャー バージョン と マイナー バージョン 、 そして それ を 分割 し て い る ピリオド で す 。 
この 値 は  Python  コード から は sys . version と し て 利用 でき ま す 。 
現在 の プラットフォーム の プラットフォーム 識別 文字 列 を 返 し ま す 。 
Unix で は 、 オペレーティング システム の  ` ` 公式 の ' '  名前 を 小 文字 に 変換 し 、 後ろ に メジャー リビジョン 番号 を 付け た 構成 に な っ て い ま す ; 例えば  Solaris  2 . x  は 、 SunOS  5 . x ,  と し て も 知 ら れ て い ま す が 、 'sunos 5 ' に な り ま す 。 
Macintosh  で は  'mac '  で す 。 
Windows  で は ' win' で す 。 
関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
この 値 は  Python  コード から は sys . platform と し て 利用 でき ま す 。 
現在 の  Python  バージョン に 対 する 公式 の 著作 権 表示 文字 列 、 例えば ' Copyright 1991 - 1995  Stichting  Mathematisch  Centrum ,  Amsterdam ' を 返 し ま す 。 
関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
この 値 は  Python  コード から は sys . copyright と し て 利用 でき ま す 。 
現在 使 っ て い る バージョン の  Python  を ビルド する 際 に 用い た コンパイラ を 示 す 文字 列 を 、 各 括弧 で 囲 っ た 文字 列 を 返 し ま す 。  例えば : 
" [ GCC  2 . 7 . 2 . 2 ] "  に な り ま す 。 
この 値 は  Python  コード から は sys . version  の 一部 と し て 取り出せ ま す 。 
現在 使 っ て い る  Python  インタプリ タインスタンス の 、 シーケンス 番号 と ビルド 日時 に 関 する 情報 を 返 し ま す 。  例えば 
に な り ま す 。  関数 が 返 す 文字 列 ポインタ は 静的 な 記憶 領域 を 返 し ま す ;  関数 の 呼び出 し 側 は この 値 を 変更 でき ま せ ん 。 
argc  および  argv  に 基づ い て  sys . argv  を 設定 し ま す 。 
この パラメタ は プログラム の main ( ) 
に 渡 し た パラメタ に 似 て い ま す が 、 最初 の 要素 が  Python  インタプリタ の 宿主 と な っ て い る 実行 形式 の 名前 で は な く 、 実行 さ れ る スクリプト 名 を 参照 し な けれ ば な ら な い 点 が 違 い ま す 。 
実行 する スクリプト が な い 場合 、 argv  の 最初 の 要素 は 空 文字 列 に し て も かま い ま せ ん 。 
8 . 1  スレッド 状態  ( thread  state )  と グローバル インタプリタ ロック  ( global interpreter  lock ) 
8 . 1  スレッド 状態  ( thread  state ) 
この  InputSource  の 公開 識別 子 を セット し ま す 。 
この  InputSource  の 公開 識別 子 を 返 し ま す 。 
この  InputSource  の システム 識別 子 を セット し ま す 。 
この  InputSource  の システム 識別 子 を 返 し ま す 。 
この  InputSource  の 文字 エンコーディング を 取得 し ま す 。 
この 入力 ソース の バイト ストリーム を 取得 し ま す 。 
getEncoding  メソッド は 、 この バイト ・ ストリーム の 文字 エンコーディング を 返 し ま す 。  認識 でき な い とき は  None  を 返 し ま す 。 
この 入力 ソース の 文字 ストリーム を セット し ま す ( ストリーム は  Python  1 . 6  の  Unicode -wrapped  な ファイル 風 オブジェクト で 、 ユニ コード 文字 列 へ の 変換 を サポート し て い な けれ ば な り ま せ ん ) 。 
なお 、 文字 ストリーム が 指定 さ れ て も  SAX  パーサ は 無視 、 システム 識別 子 と みな し 、 バイト ・ ストリーム を 使 っ て  URI  に 接続 し よう と し ま す 。 
この 入力 ソース の 文字 ストリーム を 取得 し ま す 。 
リスト で 指定 し た クラス の 継承 関係 から 、 ネスト し た リスト を 作成 し ま す 。 
ネスト し た リスト に は 、 直前 の 要素 から 派生 し た クラス が 格納 さ れ ま す 。 
各 要素 は 長 さ 2 の タプル で 、 クラス と 基底 クラス の タプル を 格納 し て い ま す 。 
unique  が 真 の 場合 、 各 クラス は 戻 り 値 の リスト 内 に 一 つ だけ しか 格納 さ れ ま せ ん 。 
真 で な けれ ば 、 多重 継承 を 利用 し た クラス と その 派生 クラス は 複数 回 格納 さ れ る 場合 が あ り ま す 。 
func )  関数 の 引数 名 と デフォルト 値 を 取得 し ま す 。 
getargspec ( ) で 取得 し た 4 つ の 値 を 読 み やす く 整形 し ま す 。 
残り の 4 つ の 引数 は オプション で 、 名前 と 値 を 文字 列 に 変換 する 整形 関数 を 指定 する 事 が でき ま す 。 
getargvalues ( ) で 取得 し た 4 つ の 値 を 読 み やす く 整形 し ま す 。 
cls クラス の 基底 クラス ( cls 自身 も 含 む ) を 、 メソッド の 優先 順位 順 に 並べ た タプル を 返 し ま す 。  結果 の リスト 内 で 各 クラス は 一 度 だけ 格納 さ れ ま す 。 
メソッド の 優先 順位 は クラス の 型 に よ っ て 異な り ま す 。 
非常 に 特殊 な ユーザ 定義 の メタ クラス を 使用 し て い な い 限り 、 cls が 戻 り 値 の 先頭 要素 と な り ま す 。 
オブジェクト の ドキュメンテーション 文字 列 を 取得 し ま す 。  タブ は スペース に 展開 さ れ ま す 。 
コード ブロック に 合わせ て インデント さ れ て い る docstring を 整形 する ため 、 2 行 目 以降 で は 行頭 の 空白 は 削除 さ れ ま す 。 
オブジェクト が クラス ・ 関数 ・ メソッド の 何れ か の 場合 は 、 オブジェクト の ソース コード の 直後 に あ る コメント 行 ( 複数 行 ) を 、 単一 の 文字 列 と し て 返 し ま す 。  オブジェクト が モジュール の 場合 、 ソース ファイル の 先頭 に あ る コメント を 返 し ま す 。 
オブジェクト を 定義 し て い る ( テキスト また は バイナリ の ) ファイル の 名前 を 返 し ま す 。 
オブジェクト が 組み込 み モジュール ・ クラス ・ 関数 の 場合 は TypeError 例外 が 発生 し ま す 。 
オブジェクト を 定義 し て い る モジュール を 推測 し ま す 。 
オブジェクト を 定義 し て い る Python ソース ファイル の 名前 を 返 し ま す 。 
オブジェクト が 組み込み の モジュール 、 クラス 、 関数 の 場合 に は 、 TypeError 例外 が 発生 し ま す 。 
オブジェクト の ソース 行 の リスト と 開始 行 番号 を 返 し ま す 。  引数 に は モジュール ・ クラス ・ メソッド ・ 関数 ・ トレース バック ・ フレーム ・ コード オブジェクト を 指定 する 事 が でき ま す 。 
戻 り 値 は 指定 し た オブジェクト に 対応 する ソース コード の ソース 行 リスト と 元 の ソース ファイル 上 で の 開始 行 と な り ま す 。 
ソース コード を 取得 でき な い 場合 は IOError が 発生 し ま す 。 
オブジェクト の ソース コード を 返 し ま す 。  引数 に は モジュール ・ クラス ・ メソッド ・ 関数 ・ トレース バック ・ フレーム ・ コード オブジェクト を 指定 する 事 が でき ま す 。 
ソース コード は 単一 の 文字 列 で 返 し ま す 。 
以下 の 関数 に は 、 戻 り 値 と し て ` ` フレーム レコード ' ' を 返 す 関数 が あ り ま す 。 `` フレーム レコード ' ' は 長 さ 6 の タプル で 、 以下 の 値 を 格納 し て い ま す : フレーム オブジェクト ・ ファイル 名 ・ 実行 中 の 行 番号 ・ 関数 名 ・ コンテキスト の ソース 行 の リスト ・ ソース 行 リスト の 実行 中行 の インデックス 。 
警告 :  フレーム レコード の 最初 の 要素 など の フレーム オブジェクト へ の 参照 を 保存 する と 、 循環 参照 に な っ て しま う 場合 が あ り ま す 。 
循環 参照 が でき る と 、 Python の 循環 参照 検出 機能 を 有効 に し て い た と し て も 関連 する オブジェクト が 参照 し て い る すべて の オブジェクト が 解放 さ れ にく く な り 、 明示 的 に 参照 を 削除 し な い と メモリ 消費 量 が 増大 する 恐れ が あ り ま す 。 
参照 の 削除 を Python の 循環 参照 検出 機能 に まかせ る 事 も でき ま す が 、 finally 節 で 循環 参照 を 解除 すれ ば 確実 に フレーム ( と その ローカル 変数 ) は 削除 さ れ ま す 。 
また 、 循環 参照 検出 機能 は Python の コンパイル オプション や 
.  disable ( ) で 無効 と さ れ て い る 場合 が あ り ま す の で 注意 が 必要 で す 。 
例 : 
以下 の 関数 で オプション 引数 context に は 、 戻 り 値 の ソース 行 リスト に 何 行 分 の ソース を 含め る か を 指定 し ま す 。  ソース 行 リスト に は 、 実行 中 の 行 を 中心 と し て 指定 さ れ た 行数 分 の リスト を 返 し ま す 。 
フレーム 又 は トレース バック オブジェクト の 情報 を 取得 し ま す 。 
フレーム レコード の 先頭 要素 を 除 い た 、 長 さ 5 の タプル を 返 し ま す 。 
指定 し た フレーム と 、 その 外側 の 全 フレーム の フレーム レコード を 返 し ま す 。 
外側 の フレーム と は frame が 生成 さ れ る まで の すべて の 関数 呼び出し を 示 し ま す 。  戻 り 値 の リスト の 先頭 は frame の フレーム レコード で 、 末尾 の 要素 は frame の スタック に あ る もっとも 外側 の フレーム の フレーム レコード と な り ま す 。 
指定 し た フレーム と 、 その 内側 の 全 フレーム の フレーム レコード を 返 し ま す 。 
内 の フレーム と は frame から 続 く 一連 の 関数 呼び出し を 示 し ま す 。 
戻 り 値 の リスト の 先頭 は traceback の フレーム レコード で 、 末尾 の 要素 は 例外 が 発生 し た 位置 を 示 し ま す 。 
呼び出 し 元 の フレーム オブジェクト を 返 し ま す 。 
呼び出し 元 スタック の フレーム レコード の リスト を 返 し ま す 。 
最初 の 要素 は 呼び出 し 元 の フレーム レコード で 、 末尾 の 要素 は スタック に あ る もっとも 外側 の フレーム の フレーム レコード と な り ま す 。 
実行 中 の フレーム と 処理 中 の 例外 が 発生 し た フレーム の 間 の フレーム レコード の リスト を 返 し ま す 。 
最初 の 要素 は 呼び出 し 元 の フレーム レコード で 、 末尾 の 要素 は 例外 が 発生 し た 位置 を 示 し ま す 。 
install  コマンド は 最初 に ビルド コマンド を 実行 済み に し て お い て から 、 サブ コマンド  install_ lib  を 実行 し ま す 。 
この コマンド は 配布 物 中 に 提供 さ れ て い る 全て の データ ファイル を インストール し ま す 。 
この コマンド は 配布 物 中 の 全て の  ( Python )  スクリプト を インストール し ま す 。 
インスタンス オブジェクト 固有 の 関数 は きわめて わずか で す 。 
クラス インスタンス の 型 オブジェクト で す 。 
obj  が インスタンス の 場合 に 真 を 返 し ま す 。 
特定 クラス の 新た な インスタンス を 生成 し ま す 。 
パラメタ  arg  および  kw  は それぞれ オブジェクト の コンストラクタ に 渡 す 実 引数 および キー ワード パラメタ と し て 使 わ れ ま す 。 
特定 クラス の 新た な インスタンス を 生成 し ま す 。  class  は 新た に 作成 する オブジェクト の クラス で す 。 
dict  パラメタ は オブジェクト の __dict_ _ に 使 わ れ ま す ;  dict  が NULL  なら 、 インスタンス 用 に 新た な 辞書 が 作成 さ れ ま す 。 
この  PyObject  の サブ タイプ は  Python  の 整数 型 オブジェクト を 表現 し ま す 。 
この  PyTypeObject  の インスタンス は  Python  の  ( 長 整数 で な い )  整数 型 を 表現 し ま す 。 
これ は types . IntType  と 同じ オブジェクト で す 。 
o  が  PyInt_Type  型 か  PyInt_Type  型 の サブ タイプ で あ る とき に 真 を 返 し ま す 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : サブ タイプ を 引数 に とれ る よう に な り ま し た 
o  が  PyInt_Type  型 で 、 かつ  PyInt_Type  型 の サブ タイプ で な い とき に 真 を 返 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
str  の 文字 列 値 に 基づ い て 、 新た な  PyIntObject  また は  PyLongObject  を 返 し ま す 。  この とき  base  を 基数 と し て 文字 列 を 解釈 し ま す 。 
pend  が  NULL  で な けれ ば 、  *pend 
は  str  中 で 数 が 表現 さ れ て い る 部分 以後 の 先頭 の 文字 の アドレス を 指 し て い ま す 。 
base  が  0  なら ば 、 str  の 先頭 の 文字 列 に 基づ い て 基数 を 決定 し ま す :  もし  str  が  ' 0 x '  また は  ' 0 X ' で 始ま っ て い れ ば 、 基数 に  16  を 使 い ま す ;  str  が  ' 0 ' で 始ま っ て い れ ば 、 基数 に  8  を 使 い ま す ;  その 他 の 場合 に は 基数 に  10  を 使 い ま す 。 
base  が  0  で な けれ ば 、 base  は  2 以上  36  以下 の 数 で な けれ ば な り ま せ ん 。 
先頭 に 空白 が あ る 場合 は 無視 さ れ ま す 。 
数字 が 全く な い 場合 、 ValueError  が 送出 さ れ ま す 。 
使用 し て い る マシン の  long  int  型 で 表現 し 切れ な い くらい 大きな 数 が 文字 列 に 入 っ て お り 、 オーバフロー 警告 が 抑制 さ れ て い れ ば 、 PyLongObject  を 返 し ま す 。 
オーバフロー 警告 が 抑制 さ れ て い な けれ ば 、 NULL  を 返 し ま す 。 
ival  の 値 を 使 っ て 新た な 整数 オブジェクト を 生成 し ま す 。  現在 の 実装 で は 、 - 1  から  100  まで の 全て の 整数 に 対 する 整数 オブジェクト の 配列 を 保持 する よう に し て お り 、 この 範囲 の 数 を 生成 する と 、 実際 に は 既存 の オブジェクト に 対 する 参照 が 返 る よう に な っ て い ま す 。 
従 っ て 、  1  の 値 を 変え る こと すら 可能 で す 。 
変え て しま っ た 場合 の  Python  の 挙動 は 未 定義 で す  :-) 
オブジェクト が まだ  PyIntObject  で な けれ ば まず 型 キャスト を 試み 、 次 に その 値 を 返 し ま す 。 
オブジェクト  io  の 値 を 返 し ま す 。 
エラー チェック を 行 い ま せ ん 。 
オブジェクト が まだ  PyIntObject  また は  PyLongObject  で な けれ ば まず 型 キャスト を 試み 、 次 に その 値 を unsigned long  型 で 返 し ま す 。 
この 関数 は オーバフロー を チェック し ま せ ん 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
整数 および 長 整数 リテラル は 以下 の 字句 定義 で 記述 さ れ ま す : 
長 整数 を 表 す 末尾 の 文字 は 小 文字 の  " l "  で も 大 文字 の  " L "  で も かま い ま せ ん が 、 " l "  は  " 1 "  に 良く 似 て い る の で 、 常 に  " L "  を 使 う よう 強 く 勧め ま す 。  整数 で 表現 でき る 最大 の 値 より も 大き い 整数 の リテラル  ( 例えば  32 - bit  整数 を 使 っ て い る 場合 に は  2147 48 3 6 4 7 )  は 、 長 整数 と し て 表現 でき る 値 で あ れ ば 受理 さ れ ま す 。 
2 . 1  値 が メモリ 上 に 収ま る か どう か と い う 問題 を 除 け ば 、 長 整数 リテラル に は 値域 の 制限 が あ り ま せ ん 。 
整数 リテラル  ( 最初 の 行 )  と 長 整数 リテラル  ( 二 行 目 および 三 行 目 )  の 例 を 以下 に 示 し ま す : 
. . . 長 整数 と し て 表現 でき る 値 で あ れ ば 受理 さ れ ま す 。 
バージョン  2 . 4  以前 の  Python  で は ,  8  進 および  16  進 の リテラル の うち , 通常 の 整数 型 と し て 表現 可能 な 値 より 大き く , かつ 符号 無し の  32 - bit ( 32 - bit  演算 を 使 う 計算 機 の 場合 )  整数 で 表現 でき る 最大 値 , すなわち  42949 67296  より も 小さな 数 は , リテラル を 符号 無し 整数 と し て 表現 し た 値 から 42949 67296  を 引 い て 得 られ る 負 の 整数 と し て 扱 っ て い ま し た . 
対話 モード で の 入力 は 、 以下 の 文法 の 下 に 構文 解析 さ れ ま す : interactive_ input 
対話 モード で は 、 ( トップ レベル の )  複合 文 の 最後 に 空白 行 を 入れ な く て は な ら な い こと に 注意 し て くださ い ;  これ は 、 複合 文 の 終端 を パーザ が 検出 する ため の 手がかり と し て 必要 で す 。 
11 .  インターネット プロトコル と その 支援 
この 章 で 記述 さ れ る モジュール は 、 インターネット プロトコル と 関連 技術 の 支援 を 実装 し ま す 。 
それ ら は 全て Python で 実装 さ れ て い ま す 。  これ ら の モジュール の 大 部分 は 、 システム 依存 の モジュール 
が 存在 する こと が 必要 で す が 、 これ は 現在 で は ほとんど の 一般 的 な プラットフォーム 上 で サポート さ れ て い ま す 。 
ここ に 概観 を 示 し ま す 。 
ウェウブ ブラウザー の ため の 使 い 易 い コントローラー 
サーバ 側 で 動作 する スクリプト が フォーム の 内容 を 解釈 する ため に 使 う ゲートウェイ インタフェース 規格 の サポート 。 
設定 可能 な 、 CGI  スクリプト の トレース バック 処理 機構 で す 。 
URL  に よ る 任意 の ネットワーク リソース へ の アクセス  ( socket  が 必要 で す ) 。 
様々 な プロトコル で  URL  を 開 く ため の 拡張 可能 な ライブラリ 
HTTP  および  HTTPS  プロトコル の クライアント  ( ソケット を 必要 と し ま す )  。 
FTP プロトコル クライアント ( ソケット を 必要 と し ま す ) 。 
gopher  プロトコル の クライアント  ( ソケット を 必要 と し ま す ) 。 
POP 3  プロトコル クライアント  ( sockets を 必要 と する ) 
NNTP  プロトコル クライアント  ( ソケット を 必要 と し ま す ) 。 
SMTP  プロトコル  クライアント  ( ソケット が 必要 で す ) 。 
柔軟 性 の あ る  SMTP  サーバ の 実装 
Telnet  クライアント クラス 
URL  を 解析 し て 構成 要素 に し ま す 。 
ネットワーク サーバ 構築 の ため の フレームワーク 。 
基本 的 な 機能 を 持 つ  HTTP  サーバ  ( Simple HTTPServer  および  CGIHTTPServer  の 基底 クラス ) 。 
この モジュール は  HTTP  サーバ に 基本 的 な リクエスト ハンドラ を 提供 し ま す 。 
CGI  スクリプト の 実行 機能 を 持 つ  HTTP  サーバ の ため の リクエスト 処理 機構 を 提供 し ま す 。 
HTTP  クライアント 用 の  Cookie  処理 
HTTP 状態 管理 ( cookies ) の サポート 。 
基本 的 な XML - RPC サーバー の 実装 。 
セルフ - ドキュメンティング  XML - RPC  サーバ の 実装 。 
非 同期 な ソケット 制御 サービス の ため の ベース クラス 
非 同期 コマンド \/ レスポンス プロトコル の 開発 サポート 
ある いく つ か の こと が 起き る 可能 性 が あ り ま す : 
入力 は が 正し く な い 。  compile_ command ( ) が 例外 ( SyntaxError か OverflowError ) を 起こ し た 場合 。 
showsyntaxerror ( ) メソッド の 呼び出 に よ っ て 、 構文 トレース バック が 表示 さ れ る で しょ う 。  runsource ( ) は False を 返 し ま す 。 
入力 が 完全 。 
compile_ command ( ) が コード オブジェクト を 返 し た 場合 。  ( SystemExit を 除 く 実行 時 例外 も 処理 する ) runcode ( ) を 呼び出 す こと に よ っ て 、 コード は 実行 さ れ ま す 。 
runsource ( ) は False を 返 し ま す 。 
次 の 行 を 要求 する ため に sys . ps 1 か sys . ps 2 の どちら を 使 う か を 決定 する ため に 、 戻 り 値 を 利用 でき ま す 。 
コード オブジェクト を 実行 し ま す 。  例外 が 生 じ た とき は 、 トレース バック を 表示 する ため に showtraceback ( ) が 呼び出 さ れ ま す 。 
呼び出 し 側 は それ を 処理 する ため に 準備 し て お く べ き で す 。 
起き た ばかり の 構文 エラー を 表示 し ま す 。 
起き た ばかり の 例外 を 表示 し ま す 。 
文字 列 を 標準 エラー ストリーム ( sys . stderr ) へ 書き込 み ま す 。  必要 に 応 じ て 適切 な 出力 処理 を 提供 する ため に 、 導出 クラス は これ を オーバーライド す べ き で す 。 
起動 する と 、 バージョン 情報 と  " "  プロンプト が 表示 さ れ ま す 。 
標準 ドキュメント に 書 か れ て い る インタプリタ と まったく 同じ よう に 使え ま す 。 
Python\/C API  リファレンス マニュアル 
Python  の アプリケーション プログラマ 用 インタフェース  ( Application  Programmer's  Interface ,  API )  は 、 Python  インタプリタ に 対 する 様々 な レベル で の アクセス 手段 を C  や  C + +  の プログラマ に 提供 し て い ま す 。 
この  API  は 通常 C + +  から も 全く 同じ よう に 利用 でき る の で す が 、 簡潔 な 呼び名 に する ため に  Python\/C API  と 名づけ られ て い ま す 。 
根本 的 に 異な る 二 つ の 目的 から 、  Python\/C API  が 用い られ ま す 。 
第 一 は 、 特定 用途 の  拡張 モジュール  ( extention  module ) 、 すなわち  Python  インタプリタ を 拡張 する  C  で 書 か れ た モジュール を 記述 する 、 と い う 目的 で す 。 
第 二 は 、 より 大 規模 な アプリケーション 内 で  Python  を 構成 要素  ( component )  と し て 利用 する と い う 目的 で す ; この テクニック は 、 一般 的 に は アプリケーション へ の  Python  の 埋め込 み  ( embedding )  と 呼 び ま す 。 
拡張 モジュール の 作成 は 比較 的 わか り やす い プロセス で 、 ` ` 手引 書  ( cookbook ) ' ' 的 な アプローチ で うま く 実現 でき ま す 。 
作業 を ある 程度 まで 自動 化 し て くれ る ツール も いく つ か あ り ま す 。 
一方 、 他 の アプリケーション へ の  Python  の 埋め込み は 、 Python  が でき て から 早 い 時期 から 行 わ れ て き ま し た が 、 拡張 モジュール の 作成 に 比べ る と やや 難解 で す 。 
多く の  API  関数 は 、 Python  の 埋め込み で あ る か 拡張 で あ る か に 関わ ら ず 役立 ち ま す ;  と は い え 、  Python  を 埋め込 ん で い る ほとんど の アプリケーション は 、 同時 に 自作 の 拡張 モジュール も 提供 する 必要 が 生じ る こと に な る で しょ う から 、 Python  を 実際 に アプリケーション に 埋め込 ん で み る 前 に 拡張 モジュール の 書 き 方 に 詳し く な っ て お く の は よ い 考え だ と 思 い ま す 。 
1 . 2 . 1 . 1  参照 カウント の 詳細 
1 .  導入  この リファレンス マニュアル は 、 Python  プログラミング 言語 自体 に 関 する 記述 で す 。 
チュートリアル と し て 書 か れ た もの で は あ り ま せ ん 。 
私 は 本 マニュアル を でき る だけ 正確 に 書 こ う と する 一方 で 、 文法 や 字句 解析 以外 の 全て に つ い て 、 形式 化 さ れ た 仕様 記述 で は な く 英語 を 使 う こと に し ま し た 。 
一方 、 広 く 使 わ れ て い る Python  実装 は 現在 の ところ 唯一  ( 今 や 第 二 の 実装 が 存在 し ま す が ! )  な の で 、 特定 の クセ に つ い て は 、 特に 実装 に よ っ て 何 ら か の 制限 が 加え られ て い る 場合 に は 、 触れ て お く 価値 が あ り ま す 。 
従 っ て 、 この テキスト 全体 に わた っ て 短 い  ` ` 実装 に 関 する 注釈  ( imprementation  notes ) ' ' がちりばめ られ て い ま す 。  Python  実装 は いずれ も 、 数々 の 組み込 み モジュール と 標準 モジュール が 付属 し ま す 。 
これ ら は ここ で は ドキュメント 化 さ れ て い ま せ ん が 、 
で ドキュメント 化 さ れ て い ま す 。 
いく つ か の 組み込 み モジュール に つ い て は 、 言語 定義 と 重要 な かかわり を も っ て い る とき に つ い て 触れ て い ま す 。 
1 . 1  本 マニュアル に おけ る 表記 法 
Python  で は 二 種類 の イテレータ オブジェクト を 提供 し て い ま す 。 
一 つ 目 は シーケンス イテレータ で 、 _ _ getitem__( )  メソッド を サポート する 任意 の シーケンス を 取り扱 い ま す 。 
二 つ 目 は 呼び出し 可能 オブジェクト と センチネル 値  ( sentinel value )  を 扱 い 、 シーケンス 内 の 要素 ごと に 呼び出し 可能 オブジェクト を 呼び出 し て 、 センチネル 値 が 返 さ れ た とき に 反復 処理 を 終了 し ま す 。 
Py SeqIter _ New ( )  や 、 組み込 み シーケンス 型 に 対 し て 1  引数 形式 の 組み込 み 関数 iter ( )  を 呼び出 し た とき に 返 さ れ る 、 イテレータ オブジェクト の 型 オブジェクト で す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
Py SeqIter_Type  の 型 が  op  の とき に 真 を 返 し ま す 。 
一般 的 な シーケンス オブジェクト  seq  を 扱 う イテレータ を 返 し ま す 。 
反復 処理 は 、 シーケンス が 添字 指定 操作 の 際 に  In dexError  を 返 し た とき に 終了 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
PyCallIter _ New ( )  や 、 組み込 み 関数  iter ( ) の  2  引数 形式 が 返 す イテレータ オブジェクト の 型 オブジェクト で す 。 iter ( ) built - in function . バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
PyCallIter_Type  の 型 が  op  の とき に 真 を 返 し ま す 。 
新た な イテレータ を 返 し ま す 。 
最初 の パラメタ  callable  は 引数 なし で 呼び出せ る  Python  の 呼び出し 可能 オブジェクト なら なん で も かま い ま せ ん ;  callable は 、 呼び出 さ れ る たび に 次 の 反復 処理 対象 オブジェクト を 返 さ な けれ ば な り ま せ ん 。 
生成 さ れ た イテレータ は 、  callable が  sentinel  に 等し い 値 を 返 す と 反復 処理 を 終了 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
イテレータ を 扱 う ため の 固有 の 関数 は 二 つ しか あ り ま せ ん 。 
o  が イテレータ プロトコル を サポート する 場合 に 真 を 返 し ま す 。 
反復 処理  o  に お け る 次 の 値 を 返 し ま す 。 
オブジェクト が イテレータ の 場合 、 この 関数 は 反復 処理 に おけ る 次 の 値 を 取り出 し ま す 。  要素 が 何 も 残 っ て い な い 場合 に は 例外 が セット さ れ て い な い 状態 で  NULL  を 返 し ま す 。 
オブジェクト が イテレータ で な い 場合 に は  TypeError を 送出 し ま す 。  要素 を 取り出 す 際 に エラー が 生じ る と  NULL  を 返 し 、 発生 し た 例外 を 送出 し ま す 。 
イテレータ の 返 す 要素 に わた っ て 反復 処理 を 行 う ループ を 書 く と 、 C  の コード は 以下 の よう に な る はず で す : 
PyObject *iterator  =  PyObject _ GetIter (obj ) ; PyObject *item;if (iterator  = = NULL ) {\/* エラー の 伝播 処理 を ここ に 書 く  *\/}while  ( item =  PyIter _ Next ( iterator) ) {\/* 取り出 し た 要素 で 何 ら か の 処理 を 行 う *\/.. . \/*  終わ っ た ら 参照 を 放棄 する *\/ Py _ DECREF ( item) ; } Py _ DECREF ( iterator ) ; if  ( PyErr_Occurred ()) {\/* エラー の 伝播 処理 を ここ に 書 く  *\/}else{\/* 別 の 処理 を 続け る *\/}
以下 に 各 ツール の 一般 的 な 使 い 方 と 、 ツール の 組み合わせ の 例 を 示 し ま す 。 
以下 の 関数 は 全て 、 イテレータ を 作成 し て 返 し ま す 。  無限 長 の ストリーム の イテレータ を 返 す 関数 も あ り 、 この 場合 に は ストリーム を 中断 する よう な 関数 か ループ 処理 から 使用 し な けれ ば な り ま せ ん 。 
先頭 の iterable の 全 要素 を 返 し 、 次 に 2 番 目 の iterable の 全 要素 … と 全 iterable の 要素 を 返 す イテレータ を 作成 し ま す 。 
連続 し た シーケンス を 、 一 つ の シーケンス と し て 扱 う 場合 に 使用 し ま す 。 
この 関数 は 以下 の スクリプト と 同等 で す : 
n で 始ま る 、 連続 し た 整数 を 返 す イテレータ を 作成 し ま す 。  n  を 指定 し な かっ た 場合 、 デフォルト 値 は ゼロ で す 。 
現在 、 Python の 長 整数 は サポート し て い ま せ ん 。 
imap ( ) で 連続 し た データ を 生成 する 場合 や izip ( ) で シーケンス に 番号 を 追加 する 場合 など に 引数 と し て 使用 する こと が でき ま す 。 
count () は オーバー フロー の チェック を 行 い ま せ ん 。  この ため 、 sys . maxint を 超え る と 負 の 値 を 返 し ま す 。 
この 動作 は 将来 変更 さ れ ま す 。 
iterable から 要素 を 取得 し 、 同時 に その コピー を 保存 する イテレータ を 作成 し ま す 。 
iterable の 全 要素 を 返 す と 、 セーブ さ れ た コピー から 要素 を 返 し 、 これ を 無限 に 繰り返 し ま す 。 
predicate が 真 で あ る 限り は 要素 を 無視 し 、 その 後 は 全て の 要素 を 返 す イテレータ を 作成 し ま す 。 
この イテレータ は 、 predicate が 真 の 間 は 全く 要素 を 返 さ な い ため 、 最初 の 要素 を 返 す まで に 長 い 時間 が かか る 場合 が あ り ま す 。 
同じ キー を も つ よう な 要素 から な る iterable  中 の グループ に 対 し て 、 キー と グループ を 返 す よう な イテレータ を 作成 し ま す 。 
key  は 各 要素 に 対 する キー 値 を 計算 する 関数 で す 。 
キー を 指定 し な い 場合 や  None  に し た 場合 、 デフォルト は オブジェクト の アイデンティティ 関数 を に な り 、 要素 を その まま 返 し ま す 。 
通常 、 iterable  は 同じ キー 関数 で 並べ替え 済み で な けれ ば な り ま せ ん 。 
返 さ れ る グループ は それ 自体 が イテレータ で 、 groupby ( ) と iterable  を 共有 し て い ま す 。 
predicate が True と な る 要素 だけ を 返 す イテレータ を 作成 し ま す 。  predicate が None の 場合 、 値 が 真 で あ る アイテム だけ を 返 し ま す 。 
この 関数 は 以下 の スクリプト と 同等 で す :  defifilter ( predicate , iterable) : if predicate  is  None : predicate= boolfor  x  in iterable: if predicate ( x ) : yield  x 
predicate が False と な る 要素 だけ を 返 す イテレータ を 作成 し ま す 。  predicate が None の 場合 、 値 が 偽 で あ る アイテム だけ を 返 し ま す 。 
この 関数 は 以下 の スクリプト と 同等 で す :  defifilterfalse ( predicate , iterable) : if predicate  is  None : predicate= boolfor  x  in iterable: if not  predicate ( x ) : yield  x 
iterables の 要素 を 引数 と し て funtion を 呼び出 す イテレータ を 作成 し ま す 。 
function が None の 場合 、 引数 の タプル を 返 し ま す 。 
map ( ) と 似 て い ま す が 、 最短 の iterable の 末尾 まで 到達 し た 後 は None を 補 っ て 処理 を 続行 する の で は な く 、 終了 し ま す 。 
これ は 、 map ( ) に 無限 長 の イテレータ を 指定 する の は 多く の 場合 誤り で す が ( 全 出力 が 評価 さ れ て しま う ため ) 、 imap ( ) の 場合 に は 一般 的 で 役 に 立 つ 方法 で あ る ため で す 。 
この 関数 は 以下 の スクリプト と 同等 で す :  defimap (function ,*iterables ) :iterables =  map (iter , iterables ) while  True : args= [ i . next ( )  for i  in iterables ] if function  is  None :yieldtuple ( args) else:yield function (*args) 
iterable から 要素 を 選択 し て 返 す イテレータ を 作成 し ま す 。  start が 0 以外 で あ れ ば 、 iterable の 先頭 要素 は start に 達 する まで スキップ し ま す 。 
以降 、 step が 1 以下 なら 連続 し た 要素 を 返 し 、 1 以上 なら 指定 さ れ た 値分 の 要素 を スキップ し ま す 。 
stop が None で あ れ ば 、 無限 に 、 もしくは iterable の 全 要素 を 返 す まで 値 を 返 し ま す 。  None 以外 なら イテレータ は 指定 さ れ た 要素 位置 で 停止 し ま す 。 
通常 の スライス と 異な り 、 start 、 stop 、 step に 負 の 値 を 指定 する 事 は でき ま せ ん 。 
シーケンス 化 さ れ た データ から 関連 する データ を 取得 する 場合 ( 複数 行 から な る レポート で 、 三 行 ごと に 名前 が 指定 さ れ て い る 場合 など ) に 使用 し ま す 。 
各 iterable の 要素 を まとめ る イテレータ を 作成 し ま す 。  zip ( ) に 似 て い ま す が 、 リスト で は な く イテレータ を 返 し ま す 。 
複数 の イテ レート 可能 オブジェクト に 対 し て 、 同じ 繰り返 し 処理 を 同時 に 行 う 場合 に 使用 し ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : イテレート 可能 オブジェクト を 指定 し な い 場合 、 TypeError  例外 を 送出 する 代わり に 長 さ ゼロ の イテレータ を 返 し ま す 。 
times を 指定 し な い 場合 、 無限 に 値 を 返 し 続け ま す 。 
imap ( ) で 常 に 同じ オブジェクト を 関数 の 引数 と し て 指定 する 場合 に 使用 し ま す 。 
また 、 izip ( ) で 作成 する タプル の 全 要素 に 常 に 同じ オブジェクト を 指定 する 場合 に も 使用 する こと も でき ま す 。 
iterables の 要素 を 引数 と し て funtion を 呼び出 す イテレータ を 作成 し ま す 。 
function の 引数 が 単一 の iterable に タプル と し て 格納 さ れ て い る 場合 ( `` zip 済み ' ' ) 、 imap ( ) の 代わり に 使用 し ま す 。 
imap ( ) と starmap ( ) で は function の 呼び出 し 方法 が 異な り 、 imap ( ) は function ( a , b ) 、 starmap ( ) で は function (*c ) の よう に 呼び出 し ま す 。  この 関数 は 以下 の スクリプト と 同等 で す : 
predicate が 真 で あ る 限り iterable から 要素 を 返 す イテレータ を 作成 し ま す 。 
一 つ の iterable  から n  個 の 独立 し た イテレータ を 生成 し て 返 し ま す 。 
n= = 2  の 場合 は 、 以下 の コード と 等価 に な り ま す :  deftee ( iterable ) : def gen ( next ,  data= {},cnt = [ 0 ] ) : for i  in  count ( ) : if i= = cnt [ 0 ] : item=  data [ i ] = next ( ) cnt [ 0 ]  + =  1else :item=  data . pop ( i) yield itemit  = iter ( iterable ) return ( gen ( it . next ) ,  gen ( it . next ) ) 
この 節 で は 、 既存 の  itertools  を ビルディング ブロック と し て ツール セット を 拡張 する ため の レシピ を 示 し ま す 。 
iterable  全体 を を 一 度 に メモリ 上 に 置 く より も 、 要素 を 一 つ づつ 処理 する 方 が メモリ 効率 上 の 有利 さ を 保て ま す 。  関数 形式 の まま ツール を リンク し て ゆ く と 、 コード の サイズ を 減ら し 、 一時 変数 を 減ら す 助け に な り ま す 。 
インタプリタ の オーバヘッド を もたら す  for  ループ や ジェネレータ を 使 わ ず に 、 ` ` ベクトル 化 さ れ た ' ' ビルディング ブロック を 使 う と 、 高速 な 処理 を 実現 でき ま す 。 
2 . 3 . 2  予約 済み の 識別 子種  ( reserved  classes
以下 の 識別 子 は 、 予約 語 、 また は  Python  言語 に お け る キー ワード  ( keyword )  と し て 使 わ れ 、 通常 の 識別 子 と し て 使 う こと は でき ま せ ん 。 
キー ワード は 厳密 に 下記 の 通り に 綴 ら な けれ ば な り ま せ ん : 
識別 子  as  は import  文 に お け る 構文 の 一部 と し て 使 わ れ る こと が あ り ま す が 、 現在 の ところ 予約 語 で は あ り ま せ ん 。  将来 の  Python  の バージョン で は 、 識別 子  as  と  None は とも に キー ワード に な る 予定 で す 。 
ラムダ 形式  ( lambda  form ,  ラムダ 式  ( lambda  expression) )  は 、 構文 法 的 に は 式 と 同じ 位置 付け に な り ま す 。 
ラムダ は 、 無名 関数 を 作成 でき る 省略 記法 で す ;  式  lambdaarguments : expression 
は 、 関数 オブジェクト に な り ま す 。 
ラムダ が 表 す 無名 オブジェクト は 、 以下 の コード 
で 定義 さ れ た 関数 と 同様 に 動作 し ま す 。  引数 リスト の 構文 法 に つ い て は 、 7 . 5  節 を 参照 し て くださ い 。 
ラムダ 形式 で 作成 さ れ た 関数 は 、 実行 文  ( statement )  を 含 む こと が でき な い の で 注意 し て くださ い 。 
18 .  Python 言語 サービス 
Python に は Python 言語 を 使 っ て 作業 する とき に 役 に 立 つ モジュール が たくさん 提供 さ れ て い ま す 。 
これ ら の モジュール は トークン の 切り出 し 、 パース 、 構文 解析 、 バイトコード の ディス アセンブリ および その 他 の さまざま な 機能 を サポート し て い ま す 。  これ ら の モジュール に は 、 次 の もの が 含 ま れ て い ま す : 
Python ソース コード に 対 する 解析 木 へ の アクセス 。 
文字 列 が Python の キー ワード か 否 か を 調べ ま す 。 
Python ソース コード の ため の 字句 解析 器 。 
ディレクトリ ツリー 内 の Python の ソース ファイル で 問題 と な る 空白 を 検出 する ツール 。 
Python クラス デスク リプタ の 情報 抽出 サポート 
Python ソース ファイル を バイトコード ファイル へ コンパイル 。 
ディレクトリ に 含 ま れ る Python ソース ファイル を 、 一括 し て バイト コンパイル し ま す 。 
現在 インストール さ れ て い る  Python  に 追加 する ため の モジュール 構築 、 および 実際 の インストール を 支援 する 。 
LaTeX  は 、 次 の 節 で 紹介 する  Python  固有 の ドキュメント クラス で 提供 し て い る マーク アップ の 他 に も 、 様々 な 環境 を 提供 し て い ま す 。 
以下 に 挙げ る 環境 は 、  Python  の 標準 ドキュメント 内 で 使 っ て い る 標準 の  LaTeX  の 環境 の 一部 で す ;  詳し い 説明 は 今後 追加 し て ゆ く 予定 で す 。 
4  LaTeX  入門  この 節 で は 、 LaTeX  の 概念 と 構文 法 に つ い て 簡単 に 紹介 し 、 ドキュメント の 作者 が  `` TeXnician' ' に な ら な く て も ドキュメント を 十分 生産 的 に 書け る よう な 情報 を 提供 し ま す 。 
この 節 を 読 ん だ から と い っ て 、 LaTeX  で ドキュメント を 書 く 上 で 必要 な 全て は 学べ ま せ ん ;  LaTeX  が 提供 し て い る 標準 の  ` ` 環境  ( environment ) ' ' に つ い て は 、 ここ で は 説明 し ま せ ん 。  おそらく 、 Python  ドキュメント の マーク アップ に お い て 心 に 留め て お く べ き 最も 重要 な 概念 は 、 TeX  が 非 体系 的 な の に 対 し て 、 LaTeX  は  TeX の 上 の レイヤ と し て 設計 さ れ て い て 、 本質 的 に は 構造 化 マーク アップ を サポート し て い る と い う こと で す 。 
Python  特有 の マーク アップ は 、 標準 の  LaTeX  ドキュメント クラス で 提供 さ れ て い る 構造 を 拡張 し 、 Python  特有 の 情報 を 書け る よう サポート する ため の もの で す 。 
LaTeX  ドキュメント に は 、 二 つ の 構成 要素 :  プリアン ブル と 本体 が 入 っ て い ま す 。  プリアン ブル は 、 タイトル 、 著者 の リスト 、 日付 、 ドキュメント が 属 する  クラス  と い っ た 、 ドキュメント 自体 に 関 する メタデータ を 指定 する ため に 使 い ま す 。 
その 他 の 情報 で 、 インデクス の 生成 や 参考 文献 データベース の 使用 を 制御 する もの も プリアン ブル 内 に 置 け ま す 。 
ほとんど の 著者 に と っ て は 、 既存 の ドキュメント から プリアン ブル を コピー し 、 いく つ か の 情報 を 修正 する だけ で 、 簡単 に プリアン ブル を 作成 でき ま す 。  ドキュメント の クラス  は 、 ドキュメント を ある 広範 な カテゴリ に 分類 し 、 その カテゴリ で 共通 の 基本 的 な フォーマット プロパティ を 設定 する ため に 使 い ま す 。 
Python  ドキュメント の 場合 、 二 つ の クラス : manual  クラス と  howto  クラス を 使 い ま す 。 
これ ら の クラス で は また 、 Python  に お け る 概念 や データ 構造 を 説明 する 際 に 使 う マーク アップ も 定義 し て い ま す 。 
これ ら の クラス に 関 する 詳し い 説明 は 、 後述 の  5  節 、 `` ドキュメント クラス ' ' に あ り ま す 。 
ドキュメント クラス の 宣言 は プリアン ブル の 先頭 に あ り ま す 。  クラス 宣言 の 後ろ に は 数 多く の マクロ  が あ り 、 ドキュメント に 関 する 詳細 情報 を 宣言 し たり 、 追加 の マーク アップ を 設定 し て い ま す 。 
プリアン ブル から は 何 も 出力 生成 さ れ ま せ ん ;  自由 文  ( free  text ) は 出力 生成 に つなが る ため 、 プリアン ブル に 自由 文 を お く と エラー に な り ま す 。  ドキュメント 本体 は プリアン ブル の 後 に 続け ま す 。 
本体 に は 、 出力 す べ き ドキュメント の 構成 要素 を 構造 的 に マーク アップ し て 入れ ま す 。 
一般 的 な LaTeX  の 構造 に は 、 階層 化 さ れ た 章節 、 番号 付け リスト や 箇条 書き リスト 、 そして ドキュメント の 概要 や 索引 と い っ た 特殊 な 構造 が あ り ま す 。 
LaTeX  は 、 章 、 セクション 、 サブ セクション 、 付録 など と い っ た 、 伝統 的 な 階層 化 に よ る ドキュメント の 整理 を 想定 し て い ま す 。 
これ ら の 各 階層 は 環境 で は な く マクロ で マーク し ま す が 、 おそらく これ は ある 章 構造 と レベル が 同じ か より 高 い 章 構造 が 続 く と 、 その 章 が そこ で 終わ っ た と 考え て 差し支え な い から で しょ う 。  Python  ドキュメント が 使 っ て い る クラス に は  6  段階 の 章節分け の  ` ` レベル ' ' が あ り 、 その うち 最も 深 い  2  レベル 
は 使 い ま せ ん 。 
レベル 
マクロ 名 
5  節 、 ` ` ドキュメント クラス ' ' で 述べ た よう に 、 manual  ドキュメント だけ で 使 い ま す 。 
テキスト の 段落と は 違 い ま す ;  この レベル は 誰 も 使 っ て い な い よう で す 。 
. . .  レベル 
表中 で は 、 深 い レベル ほど 番号 が 大き く な り ま す 。 
4 . 1  構文 法  Python  ドキュメント の 作者 は 、 LaTeX  の 構文 法 に つ い て いく つ か 知 っ て お か ね ば な ら な い こと が あ り ま す 。 
コメント  は 、 ` ` パーセント ' ' 文字  ( "% " ) から 始ま り 、 行末 まで 、 また は 次 の 行 の 先頭 に あ る 空白 文字 まで 続 き ま す 。 
これ は 著者 の 知 っ て い る どの プログラミング 言語 と も 少し 違 っ て い ま す 。  そこ で 、 順序 立て て 例 を 挙げ ま す : 
最初 の 行 の コメント の 以降 で 、 コメント で な い と みな さ れ る 最初 の 文字 は 、 二 行 目 の " T "  に な り ま す ;  二 行 目 の 先頭 に あ る 空白 文字 は 、 最初 の 行 の コメント の 一部 と し て 消費 し て しま い ま す 。 
グループ は 入れ子 構造 に し て 階層 化 でき ま す 。 
フォーマット 処理 の コンテキスト は 、 フォント や 、 追加 の マクロ 定義  ( また は グループ 外部 で 定義 さ れ て い る マクロ に 対 する オーバライド )  を 含 み ま す 。 
構文 法 的 に は 、 グループ は 波括弧 で 囲 い ま す : 
マクロ や 環境 に おけ る パラメタ を マーク する 場合 を 除 き 、 Python  ドキュメント で は グループ 自体 は 控えめ に 使 い ま す 。  マクロ  は 通常 は 単純 な 構成 要素 で 、 マクロ 名 で 識別 さ れ 、 いく つ か の パラメタ を 取 る こと が あ り ま す 。 
通常 の  LaTeX  の 使用 法 で は 、 パラメタ の うち の 一 つ が オプション に な っ て い る こと が あ り ま す 。 
マーク アップ は バックス ラッシュ 文字  ( " " )  から 始め 、 マクロ 名 は アルファベット 文字  ( 数字 、 ハイフン 、 アンダース コア 以外 ) で 与え ま す 。 
必須 パラメタ は グループ と し て マーク し 、 オプション の パラメタ は グループ の 代用 構文 で マーク せ ね ば な り ま せ ん 。  例えば 、  単一 の パラメタ を と る マクロ は 以下 の よう に な り ま す : 
オプション の パラメタ を と る マクロ で 、 パラメタ を 指定 する とき に は 以下 の よう に 入力 し ま す : 
オプション と 必須 パラメタ の 両方 が 必要 な 場合 に は 、 以下 の よう に な り ま す : 
マクロ 名 の 後ろ に は 空白 や 改行 を 入れ て も かま い ま せ ん ;  この 場合 、 マクロ 名 と パラメタ 間 の 空白 は 取り去 ら れ て しま い ま す 。  しかし 、 Python  ドキュメント で は こう し た 使 い 方 を 実践 し ま せ ん 。 
空白 は マクロ に パラメタ が な い 場合 に も 取り去 ら れ ま す が 、 この 場合 に は 空 の グループ  ({})  や 、 空白 の 明示 的 表現  ( " " )  を マクロ 名 の 直後 に 続け る と 、 マクロ 展開 が 後続 の 文字 に 及 ぶ の を 避け る 手助け に な り ま す 。 
パラメタ を 取 ら な い が 、 後ろ に 空白 を 続け た く な い マクロ の 場合 に は 、 ドキュメント ソース 中 で 名前 の 後ろ に 名前 に 使 わ な い 文字  ( 区切り 文字 など )  が 入 っ て い れ ば 、 特別 扱い する 必要 は あ り ま せ ん 。  例題 中 の 各行 は 、 パラメタ を と ら な い マクロ が 入 っ た 文章 を 書 く ため の 適切 な 方法 を 示 し て い ま す 。 
環境  は マクロ より も 大きな 構文 要素 で す 。  環境 は 、 マクロ の 引数 に 入れ る に は 内容 が やや 大き すぎ て 便利 さ を 欠 く 場合 に 使え ま す 。 
主に 、 本文 の 大きな 断片 の 前後 で フォーマット パラメタ を 変更 する 必要 が あ り 、 かつ 本文 を 十分 柔軟 に 書 き た い 場合 に 使 い ま す 。 
これ ら の マクロ は いずれ も 環境 の 名前 を パラメタ に と り ま す 。 
以下 の 例 は 、 ドキュメント の 概要 を マーク する ため に 使 う 環境 で す : 
環境 は 、 環境 自体 の 必須 パラメタ や オプション パラメタ を 持 つ こと も あ り ま す 。 
これ ら の パラメタ は  begin  マクロ の パラメタ の 後ろ に 続け ま す 。  以下 に 単一 の 必須 パラメタ を と る 環境 の 例 を 示 し ま す : 
ASCII  に 含 ま れ な い 文字 、 特殊 文字 と さ れ て い る 文字 、 TeX  や LaTeX で  アクティブ  ( active )  な 文字 を 入力 する ため の 、 あまり 使 わ れ な い マーク アップ が あ り ま す 。 
これ ら の マーク アップ は よく 他 の 文字 に 隣接 し て 使 わ れ る の で 、 適切 な 文字 を 生成 する ため に は 、 マーク アップ の 後ろ に スペース や 空 の グループ を 置 く 必要 が あ る か も しれ ま せ ん 。  あるいは 、 マーク アップ を グループ 内 に 囲 っ て も かま い ま せ ん 。 
Python  ドキュメント で 使 わ れ る よう な マーク アップ を 以下 に いく つ か 示 し ま す : 
キャラクタ 文字 
マーク アップ 
以下 の テスト コード が あ っ た 場合 : 
テスト ケース インスタンス は 次 の よう に 作成 し ま す : 
初期 設定 、 終了 処理 が 必要 な 場合 は 、 次 の よう に 指定 し ま す : 
注意 : PyUnit は AssertionError に よ る テスト の 失敗 検出 も サポート し て い ま す が 、 推奨 さ れ ま せ ん 。 
将来 の バージョン で は 、 AssertionError は 別 の 目的 に 使用 さ れ る 可能 性 が 有 り ま す 。 
Python  で 書 か れ た プログラム は  パーザ  ( parser )  に 読み込 ま れ ま す 。 
パーザ へ の 入力 は 、 字句 解析 器  ( lexical analyzer )  に よ っ て 生成 さ れ た 一連 の  トークン  ( token )  から な り ま す 。 
将来 の バージョン と の 互換 性 に 関 する 注意 :  8 - bit  文字 に 対 する 文字 セット を  ISO  Latin - 1  ( ラテン 語 系 アルファベット を 用い る ほとんど の 西欧 言語 を カバー する ASCII  の 上位 セット )  と みな し た い 気 に も な る か も しれ ま せ ん 。  しかし 、 おそらく  Unicode  を 編集 でき る テキスト エディタ が 将来 一般 的 に な る はず で す 。 
こう し た エディタ で は 一般 的 に  UTF - 8  エンコード を 使 い ま す が 、 UTF - 8  エンコード は  ASCII の 上位 セット で は あ る もの の 、 文字 序数  (ordinal )  128 - 255  の 扱い が 非常 に 異な り ま す 。 
この 問題 に 関 し て は まだ 合意 が 得 られ て い ま せ ん が 、 Latin - 1  と  UTF - 8  の どちら か と みな す の は 、 たとえ 現在 の 実装 が  Latin - 1 びいき の よう に 思え た と し て も 賢明 と は いえ ま せ ん 。 
これ は ソース コード 文字 セット と 実行 時 の 文字 セット の どちら に も 該当 し ま す 。 
6 . 8  ライブラリ レベル の マーク アップ  この マーク アップ は 、 一 そろい の モジュール に つ い て 説明 する 際 に 使 い ま す 。 
例えば 、 
Macintosh  ライブラリ モジュール 
ドキュメント で は 、 モジュール の 集まり を 概観 でき る よう に する ため に この マクロ を 役立て て い ま す 。  また 、 
も 同様 の 目的 に この マクロ を 利用 し て い ま す 。 
現在 の 章  ( howto  ドキュメント の 場合 は ドキュメント 全体 )  に 対 し て . syn  ファイル が 存在 する 場合 に は 、 . syn  ファイル から 読み出 し た 内容 で synopsistable  を 作成 し ま す 。 
Python  プログラム は 多数 の  論理 行  ( logical  lines )  に 分割 さ れ ま す 。 
2 . 1 . 1  論理 行  ( logical  line ) 
Python  ソース と 一緒 に つ い て くる configure  スクリプト は 動的 に リンク さ れ る 拡張 モジュール が 必要 と する シンボル を 公開 する よう た だし く  Python  を ビルド し ま す が 、 この 機能 は Python  ライブラリ を 静的 に 埋め込 む よう な アプリケーション に は 継承 さ れ ま せ ん 。  少な く とも Unix  で は そう で す 。 
これ は 、 アプリケーション が 静的 な 実行 時 ライブラリ  ( libpython . a ) に リンク さ れ て い て 、 かつ  (.so  ファイル と し て 実装 さ れ て い る )  動的 ロード さ れ る よう な 拡張 モジュール を ロード する 必要 が あ る 場合 に 起き る 問題 で す 。  問題 に な る の は 、 拡張 モジュール が 使 う あ る エントリ ポイント が Python  ラン タイム だけ で 定義 さ れ て い る と い う 状況 で す 。 
埋め込み を 行 う アプリケーション 側 が こう し た エントリ ポイント を 全く 使 わ な い 場合 、 リンカ に よ っ て は エントリ ポイント を 最終 的 に 生成 さ れ る 実行 可能 形式 の シンボル テーブル 内 に 含め ま せ ん 。 
こう し た 場合 、 リンカ に 追加 の オプション を 与え て 、 これ ら の シンボル を 除去 し な い よう 教え る 必要 が あ り ま す 。  プラットフォーム ごと に 正し い オプション を 決め る の は かなり 困難 で す 、 と は い え 、 幸運 な こと に 、 オプション は  Python  の ビルド 設定 内 に すでに あ り ま す 。 
インストール 済み の  Python  インタプリタ から オプション を 取り出 す に は 、 対話 インタプリタ を 起動 し て 、 以下 の よう な 短 い セッション を 実行 し ま す : 
表示 さ れ た 文字 列 の 内容 が 、 ビルド 時 に 使 う べ き オプション で す 。 
文字 列 が 空 で あ れ ば 、 特に 追加 す べ き オプション は あ り ま せ ん 。 
LINKFOR SHARED  の 定義 内容 は 、  Python  の トップ レベル Makefile  内 の 同名 の 変数 に 対応 し て い ま す 。 
この  PyObject  の サブ タイプ は  Python  の リスト オブジェクト を 表現 し ま す 。 
この  PyTypeObject  の インスタンス は  Python  の タプル 型 を 表現 し ま す 。 
これ は  Python  レイヤ に おけ る types . ListType  と 同じ オブジェクト で す 。 
サイズ が  len  新た な リスト オブジェクト を 返 し ま す 。  失敗 する と  NULL  を 返 し ま す 。 
リスト オブジェクト list  の 長 さ を 返 し ま す ;  リスト オブジェクト に お け る  " len ( list ) "  と 同じ で す 。 
マクロ 形式 で でき た  PyList _ Size ( )  で 、 エラー チェック を し ま せ ん 。 
p  の 指 す リスト オブジェクト 内 の 、 位置  pos に あ る オブジェクト を 返 し ま す 。 
pos  が 範囲 を 超え て い る 場合 、  NULL  を 返 し て In dexError  例外 を セット し ま す 。 
マクロ 形式 で でき た  PyList _ GetItem ( )  で 、 エラー チェック を し ま せ ん 。 
リスト オブジェクト 内 の 位置  index に 、 オブジェクト  item  を 挿入 し ま す 。 
成功 し た 場合 に は 0  を 返 し 、 失敗 する と  - 1 を 返 し ま す 。 
注意 : この 関数 は  item  へ の 参照 を  ` ` 盗み取 り ' '  ま す 。  また 、 変更 先 の インデクス に すでに 別 の 要素 が 入 っ て い る 場合 、 その 要素 に 対 する 参照 を 放棄 し ま す 。 
PyList _ SetItem ( )  を マクロ に よ る 実装 で 、 エラー チェック を 行 い ま せ ん 。  この 関数 は 、 新た な リスト の まだ 要素 を 入れ た こと の な い 位置 に 要素 を 入れ る とき に のみ 使 い ま す 。 
注意 : この 関数 は  item  へ の 参照 を  ` ` 盗み取 り ' '  ま す 。  また 、 PyList _ SetItem ( )  と 違 っ て 、 要素 の 置き換え が 生 じ て も 置き換え られ る オブジェクト へ の 参照 を 放棄  し ま せ ん ; その 結果 、  list  中 の 位置  i  で 参照 さ れ て い た オブジェクト が メモリ リーク を 引き起こ し ま す 。 
要素  item  を インデクス  index  の 前 に 挿入 し ま す 。 
成功 する と  0  を 返 し ま す 。  失敗 する と  - 1  を 返 し 、 例外 を 送出 し ま す 。 
list . insert ( index, item)  に 類似 し た 機能 で す 。 
オブジェクト  item を  list  の 末尾 に 追加 し ま す 。  成功 する と  0  を 返 し ま す ;  失敗 する と  - 1  を 返 し 、 例外 を セット し ま す 。 
list . append ( item)  に 類似 し た 機能 で す 。 
list  内 の 、 low  から  high  の  間 の  オブジェクト から な る リスト を 返 し ま す 。 
失敗 する と  NULL  を 返 し 、 例外 を セット し ま す 。 
list [ low : high ]  に 類似 し た 機能 で す 。 
list  内 の 、 low  から  high  の 間 の オブジェクト を 、 itemlist  の 内容 に し ま す 。 
itemlist  は  NULL  で も よ く 、 空 リスト の 代入  ( 指定 スライス の 削除 )  に な り ま す 。  成功 し た 場合 に は  0  を 、 失敗 し た 場合 に は  - 1  を 返 し ま す 。 
list  の 内容 を イン プレース で ソート し ま す 。 
成功 し た 場合 に は 0  を 、 失敗 し た 場合 に は  - 1  を 返 し ま す 。 
list  の 要素 を イン プレース で 反転 し ま す 。 
"  list . reverse ( ) "  と 同じ で す 。 
list  の 内容 が 入 っ た 新た な タプル オブジェクト を 返 し ま す ; " tuple ( list ) " .  と 同じ で す 。 
小さな モジュール 配布 物 の 場合 、 パッケージ を 列挙 する より も 、 全て の モジュール を 列挙 する ほう が よ い と 思 う か も しれ ま せ ん  - - 特に 、 単一 の モジュール が  ` ` ルート パッケージ ' ' に インストール さ れ る  ( すなわち 、 パッケージ は 全く な い )  よう な 場合 が そう で す 。 
この 最も 単純 な ケース は 2  で 示 し ま し た ;  ここ で は もう ちょっと 入り組 ん だ 例 を 示 し ま す : 
ここ で は 二 つ の モジュール に つ い て 述べ て い て 、 一方 は  ` ` ルート ' ' パッケージ に 入 り 、 他方 は  pkg  パッケージ に 入 り ま す 。 
ここ で も 、 デフォルト の パッケージ \/ ディレクトリ の レイアウト は 、 二 つ の モジュール が  mod 1 . py  と  pkg \/ mod 2 . py  に あ り 、 pkg \/ __init_ _. py  が 存在 する こと を 暗示 し て い ま す 。  また 、 パッケージ \/ ディレクトリ の 対応 関係 は package_dir  オプション で も 上書き でき ま す 。 
packages  オプション は 、  packages  リスト 中 で 指定 さ れ て い る 各々 の パッケージ に つ い て 、 パッケージ 内 に 見つか っ た 全て の  pure Python  モジュール を 処理  ( ビルド 、 配布 、 インストール 、 等 )  する よう  Distutils  に 指示 し ま す 。 
この オプション を 指定 する ため に は 、 当然 の こと ながら 各 パッケージ 名 は ファイル システム 上 の ディレクトリ 名 と 何 ら か の 対応 付け が でき な けれ ば な り ま せ ん 。 
デフォルト で 使 わ れ る 対応 関係 は きわめて はっきり し た もの で す 。  すなわち 、 パッケージ distutils  が 配布 物 ルート ディレクトリ から の 相対 パス distutils  で 表 さ れ る ディレクトリ 中 に あ る と い う もの で す 。 
つまり 、 setup  スクリプト 中 で  packages= [ ' foo' ]  と 指定 し た ら 、 スクリプト の 置 か れ た ディレクトリ から の 相対 パス で foo\/ __init_ _. py  を 探し出せ る と  Distutils  に 確約 し た こと に な り ま す 。 
この 約束 を 裏切 る と  Distutils  は 警告 を 出 し ま す が 、 その まま 壊れ た パッケージ の 処理 を 継続 し ま す 。  ソース コード ディレクトリ の 配置 に つ い て 違 っ た 規約 を 使 っ て い て も 、 まったく 問題 は あ り ま せ ん :  単に  package_dir  オプション を 指定 し て 、  Distutils  に 自分 の 規約 を 教え れ ば よ い の で す 。 
例えば 、 全て の  Python  ソース コード を  lib  下 に 置 い て 、 ` ` ルート パッケージ ' ' 内 の モジュール  ( つまり 、 どの パッケージ に も 入 っ て い な い モジュール )  を  lib  内 に 入れ 、 foo  パッケージ を  lib \/ foo  に 入れ る 、 と い っ た 具合 に し た い の なら 、 
を  setup  スクリプト 内 に 入れ ま す 。 
辞書 内 の キー は パッケージ 名 で 、 空 の パッケージ 名 は ルート パッケージ を 表 し ま す 。 
キー に 対応 する 値 は ルート パッケージ から の 相対 ディレクトリ 名 で す 、 この 場合 、 packages= [ ' foo' ]  を 指定 すれ ば 、 lib \/ foo\/ __init_ _. py  が 存在 する と  Distutils  に 確約 し た こと に な り ま す 。 
もう 一 つ の 規約 の あ り 方 は  foo  パッケージ を  lib  に 置き換え 、 foo. bar  パッケージ が  lib\/bar  に あ る 、 など と する もの で す 。 
この よう な 規約 は 、  setup  スクリプト で は 
の よう に 書 き ま す 。  package_dir  辞書 に 
の よう な エントリ が あ る と 、 package  の 下 に あ る 全て の パッケージ に 対 し て この 規則 が 暗黙 の うち に 適用 さ れ 、 その 結果  foo. bar  の 場合 が 自動 的 に 処理 さ れ ま す 。 
この 例 で は 、  packages= [ ' foo' , ' foo. bar' ]  は 、 Distutils  に  lib \/__init_ _. py  と  lib\/bar \/ __init_ _. py  を 探 す よう に 指示 し ま す 。 
( package_dir  は 再帰 的 に 適用 さ れ ま す が 、 この 場合 packages  の 下 に あ る 全て の パッケージ を 明示 的 に 指定 し な けれ ば な ら な い こと を 心 に 留め て お い て くださ い : Distutils  は __init_ _. py  を 持 つ ディレクトリ を ソース ツリー から 再帰 的 に さが し たり は  し ま せ ん  。 ) 
リスト 表現 は 、 角括弧 で 囲 わ れ た 式 の 系列 で す 。  系列 は 空 の 系列 で あ っ て も かま い ま せ ん : 
リスト 表現 は 、 新 に 作成 さ れ た リスト オブジェクト を 表 し ま す 。 
新た な リスト の 内容 は 、 式 の リスト を 与え る か 、 リスト の 内包 表記 ( list  comprehension )  で 指定 し ま す 。 
カンマ で 区切 ら れ た 式 の リスト を 与え た 場合 、 リスト の 各 要素 は 左 から 右 へ と 順 に 評価 さ れ 、 評価 さ れ た 順番 に リスト 内 に 配置 さ れ ま す 。 
リスト の 内包 表記 を 与え る 場合 、 内包 表記 は まず 単一 の 式 、 続 い て 少な く とも 一 つ の  for  節 、 続 い て ゼロ 個 以上 の  for  節 か 、 if 節 に な り ま す 。 
この 場合 、 新た に 作成 さ れ る リスト の 各 要素 は 、 各々 の  for や  if  節 を 左 から 右 の 順 に ネスト し た ブロック と みな し て 実行 し 、 ネスト の 最内 ブロック に 到達 する 度 に 式 を 評価 し た 値 と な り ま す 。 
. . . ネスト の 最内 ブロック に 到達 する 度 に 式 を 評価 し た 値 と な り ま す 。 
Python  2 . 3  で は 、 リスト 内包 が  " for "  の 中 で 使 う 制御 変数 を 内包 表記 を 書 い た スコープ に 「 漏ら し て 」 しま う 仕様 に な っ て い ま し た 。 
この 挙動 は 撤廃 さ れ た の で 、 将来 の バージョン で バグ が 修正 さ れ れ ば 、 この 挙動 に 依存 し た コード は 動作 し なく な り ま す 。 
リテラル  ( literal )  と は 、 いく つ か の 組み込 み 型 の 定数 を 表記 し た もの で す 。 
2 . 4 . 1  文字 列 リテラル 
6 . 2 7 . 2  Python  拡張 の 作者 と 、 Python  を 埋め込 む よう な プログラム に 関 し て 
C  ライブラリ の  gettext  インタフェース が 提供 さ れ て い る システム で は 、 locake  モジュール で その インタフェース を 公開 し て い ま す 。 
この インタフェース は 関数  gettext ( ) 、 dgettext ( ) 、 dcgettext ( ) 、 text domain ( ) 、 bind text domain ( ) 、 および bind_ text domain_codeset ( )  から な り ま す 。 
これ ら は 
モジュール の 同名 の 関数 に 似 て い ま す が 、 メッセージ カタログ と し て  C  ライブラリ の バイナリ フォーマット を 使 い 、 メッセージ カタログ を 探 す ため に  C  ライブラリ の サーチ アルゴリズム を 使 い ま す 。 
Python  アプリケーション で は 、 通常 これ ら の 関数 を 呼び出 す 必要 は な い はず で 、 代わり に 
こう し た アプリケーション で は 、 ライブラリ が 正し い メッセージ カタログ を 探 せ る よう に テキスト ドメイン 名 を 指定 する 必要 が あ り ま す 。 
Locator  の インスタンス は 次 の メソッド を 提供 し ま す 。 :
現在 の イベント が 終了 する 列 番号 を 返 し ま す 。 
現在 の イベント が 終了 する 行 番号 を 返 し ま す 。 
現在 の 文書 イベント の 公開 識別 子 を 返 し ま す 。 
現在 の イベント の システム 識別 子 を 返 し ま す 。 
7 . 5 . 1  Lock  オブジェクト  プリミティブ ロック と は 、 ロック が 生 じ た 際 に 特定 の スレッド に よ っ て 所有 さ れ な い 同期 プリミティブ で す 。 
Python  で は 現在 の ところ 拡張 モジュール 
ロック に は 基本 と な る 二 つ の メソッド 、 acquire ( ) と release ( )  が あ り ま す 。 
ロック の 状態 が アン ロック で あ る 場合 、 acquire ( )  は 状態 を ロック に 変更 し て 即座 に 処理 を 戻 し ま す 。 
状態 が ロック の 場合 、 acquire ( ) は 他 の スレッド が release ( )  を 呼出 し て ロック の 状態 を アン ロック に 変更 する まで ブロック し ま す 。 
その 後 、 状態 を ロック に 再度 設定 し て から 処理 を 戻 し ま す 。  release ( )  メソッド を 呼び出 す の は ロック 状態 の とき で な けれ ば な り ま せ ん ;  この メソッド は ロック の 状態 を アン ロック に 変更 し 、 即座 に 処理 を 戻 し ま す 。 
引数 blocking  の 値 を 真 に し て 呼び出 し た 場合 、 引数 なし で 呼び出 し た とき と 同じ こと を 行な い 、 True を 返 し ま す 。 
引数 blocking  の 値 を 偽 に し て 呼び出 す と ブロック し ま せ ん 。 
引数 なし で 呼び出 し た 場合 に ブロック する よう な 状況 で あ っ た 場合 に は 直ちに 偽 を 返 し ま す 。 
それ 以外 の 場合 に は 、 引数 なし で 呼び出 し た とき と 同じ 処理 を 行 い 真 を 返 し ま す 。 
ロック を 解放 し ま す 。  ロック の 状態 が ロック の とき 、 状態 を アン ロック に リセット し て 処理 を 戻 し ま す 。 
6 . 2 9 . 10  環境 設定 
6 . 2 9 . 10 . 1  環境 設定 の ため の 関数 
6 . 2 9 . 9  スレッド 安全 性 
6 . 2 9 . 10 . 1  環境 設定 の ため の 関数 
6 . 2 9 . 10 . 2  環境 設定 ファイル の 書式 
6 . 2 9 . 10 . 1  環境 設定 の ため の 関数 
file Config ( )  が 解釈 でき る 環境 設定 ファイル の 形式 は 、 ConfigParser  の 機能 に 基づ い て い ま す 。 
ファイル に は 、 [ loggers ] 、  [ handlers ] 、 および [ formatters ]  と い っ た セクション が 入 っ て い な けれ ば な ら ず 、 各 セクション で は ファイル 中 で 定義 さ れ て い る 各 タイプ の エンティティ を 名前 で 指定 し て い ま す 。 
こう し た エンティティ の 各々 に つ い て 、 その エンティティ を どう 設定 する か を 示 し た 個別 の セクション が あ り ま す 。 
すなわち 、 log 01  と い う 名前 の  [ loggers ]  セクション に あ る ロガー に 対 し て は 、 対応 する 詳細 設定 が セクション  [ logger_ log 01 ] に 収め られ て い ま す 。 
同様 に 、  hand 01  と い う 名前 の [ handlers ]  セクション に あ る ハンドラ は  [ handler_ hand 01 ] と 呼 ば れ る セクション に 設定 を も つ こと に な り 、 [ formatters ]  セクション に あ る  form 01  は  [ formatter _ form 01 ] と い う セクション で 設定 が 指定 さ れ て い ま す 。 
ルート ロガー の 設定 は  [ logger_ root ]  と 呼 ば れ る セクション で 指定 さ れ て い な けれ ば な り ま せ ん 。  ファイル に おけ る これ ら の セクション の 例 を 以下 に 示 し ま す 。 
ルート ロガー で は 、 レベル と ハンドラ の リスト を 指定 し な けれ ば な り ま せ ん 。 
ルート ロガー の セクション の 例 を 以下 に 示 し ま す 。 
level  エントリ は  DEBUG ,  INFO ,  WARNING ,  ERROR ,  CRITICAL の うち の 一つ か 、 NOTSET  に な り ま す 。 
ルート ロガー の 場合 に のみ 、 NOTSET  は 全て の メッセージ が ログ 記録 さ れ る こと を 意味 し ま す 。 
レベル 値 は  logging  パッケージ の 名前 空間 の コンテキスト に お い て  eval ( )  さ れ ま す 。  handlers  エントリ は コンマ で 区切 ら れ た ハンドラ 名 から な る リスト で 、 [ handlers ]  セクション に な く て は な り ま せ ん 。 
また 、 これ ら の 各 ハンドラ の 名前 に 対応 する セクション が 設定 ファイル に 存在 し な けれ ば な り ま せ ん 。  ルート ロガー 以外 の ロガー で は 、 いく つ か 追加 の 情報 が 必要 に な り ま す 。 
これ は 以下 の 例 の よう に 表 さ れ ま す 。 
level  および  handlers  エントリ は ルート ロガー の エントリ と 同様 に 解釈 さ れ ま す が 、 非 ルート ロガー の レベル が  NOTSET に 指定 さ れ た 場合 、 ログ 記録 システム は ロガー 階層 の より 上位 の ロガー に ロガー の 実効 レベル を 問い合わせ る ところ が 違 い ま す 。 
propagate  エントリ は 、 メッセージ を ロガー 階層 に おけ る この ロガー の 上位 の ハンドラ に 伝播 さ せ る こと を 示 す  1  に 設定 さ れ る か 、 メッセージ を 階層 の 上位 に 伝播 し な い  こと を 示 す  0  に 設定 さ れ ま す 。 
qualname  エントリ は ロガー の チャネル 名 を 階層 的 に 表 し た もの 、 すなわち アプリケーション が この ロガー を 取得 する 際 に 使 う 名前 に な り ま す 。  ハンドラ の 環境 設定 を 指定 し て い る セクション は 以下 の 例 の よう に な り ま す 。 
class  エントリ は ハンドラ の クラス  ( logging  パッケージ の 名前 空間 に お い て  eval ( )  で 決定 さ れ ま す )  を 示 し ま す 。 
level  は ロガー の 場合 と 同じ よう に 解釈 さ れ 、 NOTSET  は  " 全て を 記録 する  ( log everything ) "  と 解釈 さ れ ま す 。  formatter  エントリ は この ハンドラ の フォーマッタ に 対 する キー 名 を 表 し ま す 。 
空 文字 列 の 場合 、 デフォルト の フォーマッタ ( logging ._defaultFormatter )  が 使 わ れ ま す 。 
名前 が 指定 さ れ て い る 場合 、 その 名前 は  [ formatters ]  セクション に な く て は な ら ず 、 対応 する セクション が 設定 ファイル 中 に な けれ ば な り ま せ ん 。  args  エントリ は 、 logging  パッケージ の 名前 空間 の コンテキスト で  eval ( )  さ れ る 際 、 ハンドラ クラス の コンストラクタ に 対 する 引数 から な る リスト に な り ま す 。 
典型 的 な エントリ が どう や っ て 作成 さ れ る か に つ い て は 、 対応 する ハンドラ の コンストラクタ か 、 以下 の 例 を 参照 し て くださ い 。 
フォーマッタ の 環境 設定 を 指定 し て い る セクション は 以下 の よう な 形式 で す 。 
format  エントリ は 全体 を 書式 化 する 文字 列 で 、 datefmt  エントリ は  strftime( )  互換 の 日付 \/ 時刻 書式 化 文字 列 で す 。 
空 文字 列 の 場合 、 パッケージ に よ っ て  ISO 8601  形式 の  日付 \/ 時刻 に 置き換え られ 、 日付 書式 化 文字 列  " ISO 8601  形式 で は ミリ 秒 も 指定 し て お り 、 上 の 書式 化 文字 列 の 結果 に カンマ で 区切 っ て 追加 さ れ ま す 。 
ISO 8601  形式 の 時刻 の 例 は 2003 - 0 1 - 23  0 0 : 29 : 50 , 411  で す 。 
論理 行 の 終端 は 、 トークン  NEW LINE  で 表 さ れ ま す 。 
構文 上 許 さ れ て い る 場合 ( 複合 文 :  compound  statement  中 の 実行 文 :  statement )  を 除 い て 、 実行 文 は 論理 行間 に またが る こと は でき ま せ ん 。  論理 行 は 一行 また は それ 以上 の  物理 行 ( physical  line )  から な り 、 物理 行 の 末尾 に は 明示 的 また は 非 明示 的 な  行 連結 ( line  joining )  規則 が 続 き ま す 。 
この  PyObject  の サブ タイプ は 長 整数 型 を 表現 し ま す 。 
この  PyTypeObject  の インスタンス は  Python  長 整数 型 を 表現 し ま す 。 
これ は types . LongType  と 同じ オブジェクト で す 。 
引数 が  PyLongObject  か  PyLongObject  の サブ タイプ の とき に 真 を 返 し ま す 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : サブ タイプ を 引数 に とれ る よう に な り ま し た 
引数 が  PyLongObject  型 で 、 かつ  PyLongObject  型 の サブ タイプ で な い とき に 真 を 返 し ま す 。 
v  から 新た な  PyLongObject  オブジェクト を 生成 し て 返 し ま す 。  失敗 の とき に は  NULL  を 返 し ま す 。 
C  の unsigned long  型 から 新た な  PyLongObject  オブジェクト を 生成 し て 返 し ま す 。  失敗 の とき に は  NULL  を 返 し ま す 。 
C  の  long  long  型 から 新た な  PyLongObject  オブジェクト を 生成 し て 返 し ま す 。  失敗 の とき に は  NULL  を 返 し ま す 。 
C  の unsigned long  long  型 から 新た な  PyLongObject オブジェクト を 生成 し て 返 し ま す 。  失敗 の とき に は  NULL  を 返 し ま す 。 
v  の 整数 部 から 新た な  PyLongObject  オブジェクト を 生成 し て 返 し ま す 。  失敗 の とき に は  NULL  を 返 し ま す 。 
str  の 文字 列 値 に 基づ い て 、 新た な  PyLongObject  を 返 し ま す 。  この とき  base  を 基数 と し て 文字 列 を 解釈 し ま す 。 
は  str  中 で 数 が 表現 さ れ て い る 部分 以後 の 先頭 の 文字 の アドレス を 指 し て い ま す 。 
base  が  0  なら ば 、 str  の 先頭 の 文字 列 に 基づ い て 基数 を 決定 し ま す :  もし  str  が  ' 0 x '  また は  ' 0 X ' で 始ま っ て い れ ば 、 基数 に  16  を 使 い ま す ;  str  が  ' 0 ' で 始ま っ て い れ ば 、 基数 に  8  を 使 い ま す ;  その 他 の 場合 に は 基数 に  10  を 使 い ま す 。 
base  が  0  で な けれ ば 、 base  は  2 以上  36  以下 の 数 で な けれ ば な り ま せ ん 。 
先頭 に 空白 が あ る 場合 は 無視 さ れ ま す 。 
数字 が 全く な い 場合 、 ValueError  が 送出 さ れ ま す 。 
Unicode  の 数字 配列 を  Python  の 長 整数 型 に 変換 し ま す 。 
最初 の パラメタ u  は 、  Unicode  文字 列 の 最初 の 文字 を 指 し 、 length  に は 文字 数 を 指定 し 、 base  に は 変換 時 の 基数 を 指定 し ま す 。 
基数 は 範囲  [ 2 ,  36 ]  に な けれ ば な り ま せ ん ;  範囲 外 の 基数 を 指定 する と 、 ValueError  を 送出 し ま す 。 
バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。  PyObject * 
pylong  の 指 す 長 整 数値 を 、  C  の  long  型 表現 で 返 し ま す 。 
pylong  の 指 す 長 整 数値 を 、  C  の unsigned long  型 表現 で 返 し ま す 。 
pylong  の 指 す 長 整 数値 を 、  C  の  long  long  型 表現 で 返 し ま す 。 
pylong  が  long  long  で 表せ な い 場合 、 OverflowError  を 送出 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
Python  長 整 数値 を 、  オーバフロー チェック を 行 わ ず に C  の unsigned long  型 表現 で 返 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
Python  長 整 数値 を 、  オーバフロー チェック を 行 わ ず に C  の unsigned long  long  型 表現 で 返 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
pylong  の 指 す 値 を 、  C  の  double  型 表現 で 返 し ま す 。 
pylong  が  double  を 使 っ て 近似 表現 でき な い 場合 、 OverflowError  例外 を 送出 し て  - 1 . 0  を 返 し ま す 。 
Python  の 整数 型 か 長 整数 型 を 指 す  pylong  を 、  C  の void  ポインタ に 変換 し ま す 。 
pylong  を 変換 でき な けれ ば 、 OverflowError  を 送出 し ま す 。 
この 関数 は PyLong _ FromVoidPtr ( )  で 値 を 生成 する とき に 使 う よう な void  ポインタ 型 を 生成 でき る だけ で す 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
高 水準 インタフェース は 、 断片 的 な  Python  コード を アプリケーション から 実行 でき る よう に し て くれ ま す が 、 アプリケーション と  Python  コード の 間 で の データ の やり取り は 、 控えめ に 言 っ て も 煩わし い もの で す 。 
データ の やり取り を し た い なら 、 より 低 水準 の インタフェース 呼び出し を 利用 し な く て は な り ま せ ん 。 
より 多 く  C  コード を 書 か ね ば な ら な い 代わり に 、 ほぼ 何 で も でき る よう に な り ま す 。  Python  の 拡張 と 埋め込み は 、 趣旨 こそ 違え 、 同じ 作業 で あ る と い う こと に 注意 せ ね ば な り ま せ ん 。 
これ まで の 章 で 議論 し て き た トピック の ほとんど が 埋め込み で も あてはま り ま す 。 
これ を 示 す ため に 、 Python  から  C  へ の 拡張 を 行 う コード が 実際 に は 何 を する か 考え て み ま しょ う : 
データ 値 を  Python  から  C  に 変換 する 。 
変換 さ れ た 値 を 使 っ て  C  ルーチン の 関数 呼び出し を 行 い 、 
呼び出し で 得 られ た データ 値  C  から  Python  に 変換 する 。 
Python  を 埋め込 む 場合 に は 、 インタフェース コード が 行 う 作業 は 以下 の よう に な り ま す : 
データ 値 を  C  から  Python  に 変換 する 。 
変換 さ れ た 値 を 使 っ て  Python  インタフェース ルーチン の 関数 呼び出し を 行 い 、 
呼び出し で 得 られ た データ 値  Python  から  C  に 変換 する 。 
一見 し て 分か る よう に 、 データ 変換 の ステップ は 、 言語 間 で データ を 転送 する 方向 が 変わ っ た の に 合わせ て 単に 入れ替え た だけ で す 。  唯一 の 相違 点 は 、 データ 変換 の 間 に あ る ルーチン で す 。 
拡張 を 行 う 際 に は  C  ルーチン を 呼び出 し ま す が 、 埋め込み の 際 に は  Python  ルーチン を 呼び出 し ま す 。  この 章 で は 、 Python  から  C  へ 、 そして その 逆 へ と データ を 変換 する 方法 に つ い て は 議論 し ま せ ん 。 
また 、 正し い 参照 の 使 い 方 や エラー の 扱 い 方 に つ い て すでに 理解 し て い る もの と 仮定 し ま す 。 
これ ら の 側面 に つ い て は インタプリタ の 拡張 と 何 ら 変わ る ところ が な い の で 、 必要 な 情報 に つ い て は 以前 の 章 を 参照 でき ま す 。 
この ドキュメント で 記述 さ れ て い る 次 の モジュール は 、 いずれ も Macintosh で のみ 利用 可能 で す 。 
os  モジュール の 実装 
MacOS  の パス 操作 関数 
FSSpec 、 エイリアス マネージャ 、 finder エイリアス 、 標準 ファイル パッケージ の サポート 。 
インターネット 設定 へ の アクセス 。 
Mac  OS  固有 の インタープリタ 機能 へ の アクセス 。 
ファイル 操作 を 便利 に する ルーチン 集 。 
finder の Apple Events インターフェース の ラッパ 。 
基本 的 な  Macintosh  ダイアログ 。 
対話 型 アプリケーション ・ フレームワーク 
イベント ループ 中 の グローバル インタープリタ の 取り扱い 
メイル ボックス オブジェクト の 実装 は すべて 反復 可能 な オブジェクト で あ り 、 外部 に 公開 さ れ て い る メソッド を 一 つ も っ て い ま す 。 
この メソッド は メイル ボックス オブジェクト から 生成 さ れ る イテレータ に よ っ て 使 わ れ 、 直接 利用 する こと も でき ま す 。 
メイル ボックス オブジェクト の コンストラクタ に 渡 さ れ た 、 オプション の factory  引数 を 使 っ て 、 メイル ボックス 中 の 次 の メッセージ を 生成 し て 返 し ま す 。 
標準 の 設定 で は 、 factory  は  rfc 822 . Message オブジェクト で す  (  rfc 822 
モジュール を 参照 し て くださ い ) 。 
メイル ボックス の 実装 に よ り 、 この オブジェクト の  fp  属性 は 真 の ファイル オブジェクト か も しれ な い し 、 複数 の メイル メッセージ が 単一 の ファイル に 収め られ て い る など の 場合 に 、 メッセージ 間 の 境界 を 注意 深 く 扱 う ため に ファイル オブジェクト を シミュレート する クラス の インスタンス で あ る か も しれ ま せ ん 。 
次 の メッセージ が な い 場合 、 この メソッド は  None  を 返 し ま す 。 
1  配布 する ファイル を 指定 する 
4  ソース コード 配布 物 を 作成 する 
2  マニフェスト  ( manifest )  関連 の オプション 
sdist  コマンド が 通常 行 う 処理 の 流れ は 、 以下 の よう に な っ て い ま す : 
マニフェスト ファイル  MA NIFEST  が 存在 し な けれ ば 、 MA NIFEST . in  を 読み込 ん で マニフェスト ファイル を 作成 し ま す 
MA NIFEST  も  MA NIFEST . in  も な けれ ば 、 デフォルト の ファイルセット だけ で でき た マニフェスト ファイル を 作成 し ま す 
MA NIFEST . in  また は  ( setup . py )  が MA NIFEST  より 新し けれ ば 、 MA NIFEST . in  を 読み込 ん で MA NIFEST  を 生成 し ま す 
( 生成 さ れ た か 、 読み出 さ れ た )  MA NIFEST  内 に あ る ファイル の リスト を 使 っ て ソース 配布 物 アーカイブ を 作成 し ま す 
上 の 動作 は 二 種類 の オプション を 使 っ て 修正 でき ま す 。 
まず 、 標準 の ``include ' ' および  ` ` exclude ' ' セット を 無効 化 する に は - - no- defaults  および -- no- prune  を 使 い ま す 第 二 に 、 マニフェスト ファイル の 再生成 を 強制 でき ま す - -  例えば 、 現在 マニフェスト テンプレート 内 に 指定 し て い る パターン に マッチ する ファイル や ディレクトリ を 追加 し たり 削除 し たり する と 、 マニフェスト を 再 生成 し な く て は な り ま せ ん : 
また 、 単に マニフェスト を  ( 再 )  生成 し た い だけ で 、 ソース 配布 物 は 作成 し た く な い 場合 が あ る か も しれ ま せ ん : 
- - manifest - only  を 行 う と 、 -- force - manifest を 呼び出 し ま す 。  - o  は - - manifest - only  の ショート カット 、 - f  は - - force - manifest  の ショート カット で す 。 
リリース  2 . 4  , 平成 18 年 6 月 27 日  更新  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
7 . 4 . 1  辞書 オブジェクト  ( dictionary object ) 
10 . 5  数値 オブジェクト 構造 体  ( number object 
拡張 型 で マップ 型 プロトコル を 実装 する ため に 使 わ れ る 関数 群 へ の ポインタ を 保持 する ため に 使 わ れ る 構造 体 で す 。 
オブジェクト が マップ 型 プロトコル を 提供 し て い る 場合 に  1  を 返 し 、 そう で な い とき に は  0  を 返 し ま す 。 
この 関数 呼び出し は 常 に 成功 し ま す 。 
成功 する と オブジェクト  o  中 の キー の 数 を 返 し 、 失敗 する と  - 1  を 返 し ま す 。 
マップ 型 プロトコル を 提供 し て い な い オブジェクト に 対 し て は 、 Python  の 式  " len (o) "  と 同じ に な り ま す 。 
オブジェクト  o  から  key  に 関 する 対応 付け を 削除 し ま す 。  失敗 する と  - 1  を 返 し ま す 。 
Python  の 文 " del o [ key] "  と 同じ で す 。 
オブジェクト  o  から  key  に 対 する 対応 付け を 削除 し ま す 。  失敗 する と  - 1  を 返 し ま す 。 
成功 する と 、 マップ 型 オブジェクト が キー  key  を 持 つ 場合 に 1  を 返 し 、 そう で な い とき に は  0  を 返 し ま す 。 
この 関数 呼び出し は 常 に 成功 し ま す 。 
マップ 型 オブジェクト が キー  key  を 持 つ 場合 に  1  を 返 し 、 そう で な い とき に は  0  を 返 し ま す 。 
Python  の 式  " 
o . has _key ( key) "  と 同じ で す 。 
成功 する と オブジェクト  o  の キー から な る リスト を 返 し ま す 。 
失敗 する と  NULL を 返 し ま す 。 
o . keys ( ) "  と 同じ で す 。 
成功 する と オブジェクト  o  の キー に 対応 する 値 から な る リスト を 返 し ま す 。 
o . values ( ) "  と 同じ で す 。 
成功 する と オブジェクト  o  の 要素 対 、 すなわち キー と 値 の ペア が 入 っ た タプル から な る リスト を 返 し ま す 。 
失敗 する と  NULL を 返 し ま す 。 
o . items ( ) "  と 同じ で す 。 
オブジェクト  key  に 対応 する o  の 要素 を 返 し ま す 。  失敗 する と  NULL を 返 し ま す 。 
Python  の 式  " 
o [ key] "  と 同じ で す 。 
オブジェクト o  で key  を 値  v  に 対応 付け ま す 。  失敗 する と  - 1  を 返 し ま す 。 
Python  の 文 " 
"  と 同じ で す 。 
13 .  構造 化 マーク アップ ツール 
Python  は 様々 な 構造 化 データ マーク アップ 形式 を 扱 う ため の 、 様々 な モジュール を サポート し て い ま す 。 
HTML  と  X HTML  を 扱え る シンプル な パーザ 。 
HTML  を 解析 する の に 必要 な 機能 だけ を 備え た  SGML  パーザ 。 
HTML  文書 の 解析 器 。 
HTML  一般 エンティティ の 定義 。 
Expat  に よ る 、 検証 を 行 わ な い  XML  パーザ へ の インタフェース 
Python  の ため の 文書 オブジェクト モデル  API 。 
軽量 な 文書 オブジェクト モデル の 実装 。 
SAX  イベント から の 部分 的 な  DOM  ツリー 構築 の サポート 。 
SAX 2  基底 クラス と 有用 な 関数 の パッケージ 
SAX  イベント ・ ハンドラ の 基底 クラス 
SAX  と とも に 使 う 有用 な 関数 と クラス で す 。 
SAX  準拠 の  XML  パーサ が 実装 す べ き インターフェース で す 。 
XML  ドキュメント の パーサ 。 
Python\/ XML  ライブラリ 
Python  に バンドル さ れ て くる  xml  パッケージ へ の 拡張 で あ る  PyXML  パッケージ の ホーム ページ で す 。 
以下 の ルーチン 群 は 、 marshal  モジュール と 同じ 形式 を 使 っ た 整列 化 オブジェクト を  C  コード から 使え る よう に し ま す 。 
整列 化 形式 で データ を 書き出 す 関数 に 加え て 、 データ を 読 み 戻 す 関数 も あ り ま す 。 
PY _ MAR SHAL _ VERSION  は 現在 の バージョン ( バージョン  1 )  を 示 し ま す 。 
long  型 の 整数 値  value  を file  へ 整列 化 し ま す 。 
この 関数 は  value  の 下 桁  32  ビット を 書き込 む だけ で す ; ネイティブ の  long  型 サイズ に は 関知 し ま せ ん 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : ファイル 形式 を 示 す version  が 追加 さ れ ま し た 
Python  オブジェクト value  を file  へ 整列 化 し ま す 。 
value  の 整列 化 表現 が 入 っ た 文字 列 オブジェクト を 返 し ま す 。 
読み出し 用 に 開 か れ た  FILE *  内 の データ ストリーム から 、 C  の  long  型 データ を 読み出 し て 返 し ま す 。 
この 関数 は 、 ネイティブ の  long  の サイズ に 関係 な く 、 32  ビット の 値 だけ を 読み 出せ ま す 。 
読み出し 用 に 開 か れ た  FILE *  内 の データ ストリーム から 、 C  の  short  型 データ を 読み出 し て 返 し ま す 。 
この 関数 は 、 ネイティブ の  short  の サイズ に 関係 な く 、 16  ビット の 値 だけ を 読み 出せ ま す 。 
読み出し 用 に 開 か れ た  FILE *  内 の データ ストリーム から 、 Python  オブジェクト を 読み出 し て 返 し ま す 。 
エラー が 生 じ た 場合 、 適切 な 例外  ( EOFError  また は TypeError )  を 送出 し て  NULL を 返 し ま す 。 
Py Marshal _ ReadObject FromFile ( )  と 違 い 、 この 関数 は ファイル 中 に 後続 の オブジェクト が 存在 し な い と 仮定 し 、 ファイル から メモリ 上 に ファイル データ を 一気 に メモリ に ロード し て 、 逆 整列 化 機構 が ファイル から 一 バイト づつ 読み出 す 代わり に メモリ 上 の データ を 操作 でき る よう に し ま す 。 
対象 の ファイル から 他 に 何 も 読み出 さ な い と 分か っ て い る 場合 に のみ 、 この 関数 を 使 っ て くださ い 。 
エラー が 生 じ た 場合 、 適切 な 例外  ( EOFError  また は TypeError )  を 送出 し て  NULL を 返 し ま す 。 
string  が 指 し て い る len  バイト の 文字 列 バッファ に 納め られ た データ ストリーム から  Python  オブジェクト を 読み出 し て 返 し ま す 。 
エラー が 生 じ た 場合 、 適切 な 例外  ( EOFError  また は TypeError )  を 送出 し て  NULL を 返 し ま す 。 
MatchObject  インスタンス は 以下 の メソッド と 属性 を サポート し ま す : 
テンプレート 文字 列  template  に 、 sub ( )  メソッド が する よう な バックス ラッシュ 置換 を し て 得 られ る 文字 列 を 返 し ま す 。  " n " の よう な エスケープ は 適当 な 文字 に 変換 さ れ 、 数値 の 後方 参照 ( " 1 " 、  " 2 " )  と 名前 付き の 後方 参照 ( " g 1 " 、  " gname " )  は 、 対応 する グループ の 内容 で 置き換え られ ま す 。 
マッチ し た 1 個 以上 の サブ グループ を 返 し ま す 。 
もし 引数 で 一 つ で あ れ ば 、 その 結果 は 一 つ の 文字 列 で す ; 複数 の 引数 が あ れ ば 、 その 結果 は 、 引数 ごと に 一 項目 を 持 つ タプル で す 。  引数 が な けれ ば 、 group 1  は デフォールト で ゼロ で す ( マッチ し た もの すべて が 返 さ れ ま す ) 。 
もし  groupN  引数 が ゼロ で あ れ ば 、 対応 する 戻 り 値 は 、 マッチ する 文字 列 全体 で す ; もし それ が 範囲  [ 1 . . 99 ]  内 で あ れ ば 、 それ は 、 対応 する 丸括弧 つ き グループ と マッチ する 文字 列 で す 。 
もし グループ 番号 が 負 で あ る か 、 あるいは パターン で 定義 さ れ た グループ の 数 より 大き けれ ば 、 In dexError  例外 が 発生 し ま す 。  もし グループ が マッチ し な かっ た パターン の 一部 に 含 ま れ て い れ ば 、 対応 する 結果 は  None  で す 。 
もし グループ が 、 複数 回 マッチ し た パターン の 一部 に 含 ま れ て い れ ば 、 最後 の マッチ が 返 さ れ ま す 。  もし 正規 表現 が  ( ? Pname . . . )  シンタクス を 使 う なら ば 、 groupN 引数 は 、 それ ら の グループ 名 に よ っ て グループ を 識別 する 文字 列 で あ っ て も 構 い ま せ ん 。 
もし 文字 列 引数 が パターン の グループ 名 と し て 使 わ れ て い な い もの で あ れ ば 、 In dexError  例外 が 発生 し ま す 。  適度 に 複雑 な 例題 : 
この マッチ を 実行 し た あと で は 、 m . group ( 1 )  は m . group ( 'int')  と 同じく 、 ' 3 '  で あ り 、 そして m . group ( 2 )  は ' 14 '  で す 。 
1 から どれ だけ 多 く で あ ろ う が パターン 内 に あ る グループ 数 まで の 、 マッチ の 、 すべて の サブ グループ を 含 む タプル を 返 し ま す 。 
default  引数 は 、 マッチ に 加わ ら な かっ た グループ 用 に 使 わ れ ま す ; それ は デフォールト で は  None  で す 。 
( 非 互換 性 ノート : オリジナル の  Python  1 . 5  リリース で は 、 たとえ タプル が 一 要素 長 で あ っ て も 、 その 代わり に 文字 列 を 返 す こと は あ り ま せ ん 。 
( 1 . 5 . 1  以降 の ) 後 の バージョン で は 、 その よう な 場合 に は 、 シングル トン タプル が 返 さ れ ま す 。 ) 
すべて の  名前 つき の サブ グループ を 含 む 、 マッチ の 、 サブ グループ 名 で キー 付け さ れ た 辞書 を 返 し ま す 。 
default  引数 は マッチ に 加わ ら な かっ た グループ 用 に 使 わ れ ま す ; それ は デフォールト で は  None で す 。 
group と マッチ し た サブ 文字 列 の 先頭 と 末尾 の インデックス を 返 し ま す ; group  は 、 デフォールト で は  ( マッチ し た サブ 文字 列 全体 を 意味 する ) ゼロ で す 。 
group  が 存在 し て も マッチ に 寄与 し な かっ た 場合 は 、 - 1  を 返 し ま す 。 
で す 。 
もし  group が ヌル 文字 列 と マッチ すれ ば 、 m . start ( group ) が  m . end( group )  と 等し く な ろ こと に 注意 し て 下さ い 。 
例えば 、 
m =  re . search ( 'b ( c? ) ' , 'cba ' ) の 後 で は 、 
m . start ( 0 ) は  1  で 、 
m . end ( 0 )  は  2  で あ り 、 
m . start ( 1 )  と 
m . end ( 1 )  は とも に  2  で あ り 、 
m . start ( 2 )  は  In dexError 例外 を 発生 し ま す 。 
MatchObject  m  に つ い て は 、  2 - タプル ( m . start ( group ) 、 m . end( group ) ) を 返 し ま す 。  もし  group  が マッチ に 寄与 し な かっ た ら 、 これ は ( - 1 ,  - 1 )  で す 。 
また  group  は デフォールト で ゼロ で す 。 
RegexObject  の  search ( )  あるいは  match ( )  メソッド に 渡 さ れ た  pos の 値 で す 。 
これ は  RE  エンジン が マッチ を 探 し 始め る 位置 の 文字 列 の インデックス で す 。 
RegexObject  の  search ( )  あるいは  match ( )  メソッド に 渡 さ れ た  endpos の 値 で す 。 
これ は  RE  エンジン が それ 以上 は 進 ま な い 位置 の 文字 列 の インデックス で す 。 
最後 に マッチ し た 取り込み グループ の 整数 インデックス で す 。 
もし どの グループ も 全く マッチ し な けれ ば  None  で す 。 
最後 に マッチ し た 取り込み グループ の 名前 で す 。  もし グループ に 名前 が な い か 、 あるいは どの グループ も 全く マッチ し な けれ ば  None  で す 。 
その  match ( ) あるいは  search ( )  メソッド が 、 この MatchObject  インスタンス を 生成 し た 正規 表現 オブジェクト で す 。 
match ( )  あるいは  search ( ) に 渡 さ れ た 文字 列 で す 。 
Python  は 、 正規 表現 に 基づ く 、 2 つ の 異な る プリミティブ な 操作 を 提供 し て い ま す : マッチ と 検索 で す 。 
もし あなた が  Perl  の 記号 に 慣れ て い る の で あ れ ば 、 検索 操作 が あなた の 求め る もの で す 。 
search ( )  関数 と 、 コンパイル さ れ た 正規 表現 オブジェクト で の 対応 する メソッド を 見 て 下さ い 。  マッチ は 、 " ^ " で 始ま る 正規 表現 を 使 う と 、 検索 と は 異な る か も しれ な い こと に 注意 し て 下さ い : " ^ "  は 文字 列 の 先頭 で のみ 、 あるいは MULTILINE  モード で は 改行 の 直後 とも マッチ し ま す 。 
` ` マッチ ' '  操作 は  、 もし その パターン が 、 モード に 拘 ら ず 文字 列 の 先頭 と マッチ する か 、 あるいは 改行 が その 前 に あ る か どう か に 拘 ら ず 、 省略 可能 な pos  引数 に よ っ て 与え られ る 先頭 位置 で マッチ する 場合 のみ 成功 し ま す 。 
re . compile ( " a " ) . match ( " ba " ,  1 )  #  成功 re . compile ( " ^ a " ) . search ( " ba " ,  1 )  # 失敗 ; 'a ' は 先頭 に な い re . compile ( " ^ a " ) . search ( " \na " ,  1 )  # 失敗 ; 'a ' は 先頭 に な い re . compile ( " ^ a " ,  re . M ) . search ( " \na " ,  1 )  #  成功 re . compile ( " ^ a " ,  re . M ) . search ( " ba " ,  1 )  # 失敗 ; \n  が 前 に な い 
8 . 3  高度 な デバッガ サポート  ( advanced  debugger 
9 . 1  概要 
9 .  メモリ 管理 
9 . 1  概要 
最初 に 述べ た 関数 セット を 使 っ て 、 9 . 1  節 の 例 を  Python  ヒープ に  I \/ O  バッファ を メモリ 確保 する よう に 書き換え た もの を 以下 に 示 し ま す : 
同じ コード を 型 対象 の 関数 セット で 書 い た もの を 以下 に 示 し ま す : 
上 の 二 つ の 例 で は 、 バッファ を 常 に 同じ 関数 セット に 属 する 関数 で 操作 し て い る こと に 注意 し て くださ い 。 
実際 、 ある メモリ ブロック に 対 する 操作 は 、 異な る メモリ 操作 機構 を 混用 する 危険 を 減ら す ため に 、 同じ メモリ  API  ファミリ を 使 っ て 行 う こと が 必要 で す 。 
以下 の コード に は 二 つ の エラー が あ り 、 その うち の 一 つ に は 異な る ヒープ を 操作 する 別 の メモリ 操作 関数 を 混用 し て い る の で 致命 的  ( Fatal )  と ラベル づけ を し て い ま す 。 
素 の メモリ ブロック を  Python  ヒープ 上 で 操作 する 関数 に 加え 、 PyObject _ New ( ) 、  PyObject _ NewVar ( ) 、 および PyObject _ Del ( )  を 使 う と 、  Python  に お け る オブジェクト を メモリ 確保 し たり 解放 し たり でき ま す 。 
また これ ら の 関数 に は マクロ PyObject_ NEW ( ) 、  PyObject_ NEW _ VAR ( ) 、  および PyObject _ DEL ( )  が 対応 し ま す 。 
これ ら の 関数 に つ い て は 、 次章 の  C  に よ る 新し い オブジェクト 型 の 定義 や 実装 に 関 する 記述 の 中 で 説明 し ま す 。 
Python  ヒープ に 対 し て メモリ を 確保 し たり 解放 し たり する ため に 、 以下 の 関数 セット が 利用 でき ま す 。  これ ら の 関数 は  ANSI  C  標準 に 従 っ て モデル 化 さ れ て い ま す が 、 0  バイト の 領域 を 要求 し た 際 の 動作 に つ い て も 定義 し て い ま す : 
n  バイト を メモリ 確保 し 、 確保 さ れ た メモリ を 指 す  void *  型 の ポインタ を 返 し ま す 。 
確保 要求 に 失敗 し た 場合 に は  NULL  を 返 し ま す 。 
0  バイト を リクエスト する と 、 可能 なら ば 独立 し た 非 NULL  の ポインタ を 返 し ま す 。  この ポインタ は  PyMem_ Malloc ( 1 )  を 代わり に 呼 ん だ とき の よう な メモリ 領域 を 指 し て い ま す 。 
p  が  NULL なら ば 、 この 関数 は PyMem_ Malloc ( n )  と 等価 に な り ま す ;  それ 以外 の 場合 で 、 n  が ゼロ に 等し けれ ば 、 メモリ ブロック は サイズ 変更 さ れ ま す が 、 解放 さ れ ず 、 非  NULL の ポインタ を 返 し ま す 。 
p  の 値 を NULL に し な い の なら 、 以前 呼び出 し た  PyMem_ Malloc ( )  や  PyMem_ Realloc ( )  の 返 し た 値 で な けれ ば な り ま せ ん 。 
p  が 指 す メモリ ブロック を 解放 し ま す 。  p  は 以前 呼び出 し た  PyMem_ Malloc ( )  や  PyMem_ Realloc ( )  の 返 し た 値 で な けれ ば な り ま せ ん 。 
それ 以外 の 場合 や 、 すでに  PyMem_ Free ( p )  を 呼び出 し た 後 だっ た 場合 、 未 定義 の 動作 に な り ま す 。 
p  が  NULL なら 、 何 も 行 い ま せ ん 。 
以下 に 挙げ る 型 対象 の マクロ は 利便 性 の ため に 提供 さ れ て い る もの で す 。 
TYPE *  に 型 キャスト さ れ た ポインタ を 返 し ま す 。 
メモリ に は 何 の 初期 化 も 行 わ れ て い ま せ ん 。 
PyMem_ Realloc ( )  と 同じ で す が 、 ( n* sizeof ( TYPE) )  バイト に サイズ 変更 さ れ た メモリ を 確保 し ま す 。 
TYPE *  に 型 キャスト さ れ た ポインタ を 返 し ま す 。 
PyMem_ Free ( )  と 同じ で す 。 
上記 に 加え て 、 C  API  関数 を 介 する こと な く  Python  メモリ 操作 関数 を 直接 呼び出 す ため の 以下 の マクロセット が 提供 さ れ て い ま す 。 
ただし 、 これ ら の マクロ は  Python  バージョン 間 で の バイナリ 互換 性 を 保 て ず 、 それ ゆえ に 拡張 モジュール で は 撤廃 さ れ て い る の で 注意 し て くださ い 。 
PyMem_ MALLOC ( ) 、 PyMem_ REALLOC ( ) 、 PyMem_ FREE ( ) 。 
PyMem_ NEW ( ) 、 PyMem_ RESIZE ( ) 、 PyMem_ DEL ( ) 。 
Python  に おけ る メモリ 管理 に は 、 全て の  Python  オブジェクト と データ 構造 が 入 っ た プライベート ヒープ  ( private  heap )  が 必須 で す 。 
プライベート ヒープ の 管理 は 、 内部 的 に は Python  メモリ マネージャ  ( Python  memory  manager ) が 確実 に 行 い ま す 。 
これ ら は 同じ ヒープ を 操作 し 、 各 オブジェクト 型 固有 の 事情 に 合 っ た メモリ 管理 ポリシ を 実装 し て い ま す 。 
例えば 、 整数 オブジェクト は 文字 列 や タプル 、 辞書 と は 違 っ た や り 方 で ヒープ 内 で 管理 さ れ ま す 。  と い う の も 、 整数 に は 値 を 記憶 する 上 で 特別 な 要件 が あ り 、 速度 \/ 容量 の トレード オフ が 存在 する から で す 。 
この よう に 、  Python  メモリ マ ネジャ は 作業 の いく つ か を オブジェクト 固有 の メモリ 操作 関数 に 委譲 し ま す が 、 これ ら の 関数 が プライベート ヒープ から はみ出 し て メモリ 管理 を 行 わ な い よう に し て い ま す 。  重要 な の は 、 たとえ ユーザ が いつ も ヒープ 内 の メモリ ブロック を 指 す よう な オブジェクト ポインタ を 操作 し て い る と し て も 、 Python  用 ヒープ の 管理 は インタプリタ 自体 が 行 う もの で 、 ユーザ が それ を 制御 する 余地 は な い と 理解 する こと で す 。 
Python  オブジェクト や 内部 使用 さ れ る バッファ を 入れ る ため の ヒープ 空間 の メモリ 確保 は 、 必要 に 応 じ て 、 Python  メモリ マネージャ が この ドキュメント 内 で 列挙 し て い る Python\/C API  関数 群 を 介 し て 行 い ま す 。  メモリ 管理 の 崩壊 を 避け る ため 、 拡張 モジュール の 作者 は 決して  Python  オブジェクト を  C  ライブラリ が 公開 し て い る 関数 : malloc ( ) 
、 calloc ( ) 
、 realloc ( ) 
および free ( )  で 操作 し よう と し て は な り ま せ ん 。 
こう し た 関数 を 使 う と 、 C  の メモリ 操作 関数 と Python  メモリ マネージャ と の 間 で 関数 呼び出し が 交錯 し ま す 。 
C  の メモリ 操作 関数 と Python  メモリ マネージャ は 異な る アルゴリズム で 実装 さ れ て い て 、 異な る ヒープ を 操作 する ため 、 呼び出し の 交錯 は 致命 的 な 結果 を 招 き ま す 。 
と は い え 、 個別 の 目的 の ため なら 、  C  ライブラリ の メモリ 操作 関数 を 使 っ て 安全 に メモリ を 確保 し たり 解放 し たり でき ま す 。  例えば 、 以下 が その よう な 例 で す : 
この 例 で は 、 I \/ O  バッファ に 対 する メモリ 要求 は  C  ライブラリ の メモリ 操作 関数 を 使 っ て い ま す 。 
その 結果 、 特定 の 状況 で は 、 Python  メモリ マネージャ が ガベージ コレクション や メモリ の コンパクト 化 、 その 他 何 ら か の 予防 措置 と い っ た 、 適切 な 動作 を トリガ でき る こと が あ り ま す 。 
上 の 例 で 示 し た よう に  C  ライブラリ の メモリ 操作 関数 を 使 う と 、  I\/ O  バッファ 用 に 確保 し た メモリ は  Python  メモリ マネージャ の 管理 から 完全 に 外れ る こと に 注意 し て くださ い 。 
Message  インスタンス は 以下 の メソッド を 持 っ て い ま す : 
メッセージ 本体 の 先頭 を  seek  し ま す 。 
この メソッド は ファイル オブジェクト が  seek  可能 で あ る 場合 に のみ 動作 し ま す 。 
ある 行 が 正し い  RFC  28 2 2  ヘッダ で あ る 場合 、 その 行 の 正規 化 さ れ た フィールド 名  ( インデクス 指定 の 際 に 使 わ れ る 辞書 キー )  を 返 し ま す ; そう で な い 場合  None  を 返 し ま す  ( 解析 を ここ で 一 度 中断 し 、 行 データ を 入力 ストリーム に 押し戻 す こと を 意味 し ま す ) 。 
この メソッド を サブ クラス で 上書き する と 便利 な こと が あ り ま す 。 
与え られ た  line  が  Message  の 区切り と な る デリミタ で あ っ た 場合 に 真 を 返 し ま す 。 
この デリミタ 行 は 消費 さ れ 、 ファイル オブジェクト の 読み 位置 は その 直後 に な り ま す 。 
標準 で は この メソッド は 単に その 行 が 空行 か どう か を チェック し ま す が 、 サブ クラス で 上書き する こと も でき ま す 。 
与え られ た 行 全体 を 無視 し 、 単に 読み飛ば す とき に 真 を 返 し ま す 。  標準 で は 、 これ は 控え メソッド  ( stub )  で あ り 、 常 に  False  を 返 し ま す が 、 サブ クラス で 上書き する こと も でき ま す 。 
name  に 一致 する ヘッダ から な る 行 の リスト が あ れ ば 、 それ ら を 全て 返 し ま す 。 
各 物理 行 は 連続 し た 行 内容 で あ る か 否 か に 関わ ら ず 別々 の リスト 要素 に な り ま す 。 
name  に 一致 する ヘッダ が な い 場合 、 空 の リスト を 返 し ま す 。 
name  に 一致 する 最初 の ヘッダ と 、 その 行 に 連続 する  ( 複数 ) 行 から な る 行 データ の リスト を 返 し ま す 。 
name  に 一致 する ヘッダ が な い 場合  None  を 返 し ま す 。 
name  に 一致 する 最初 の ヘッダ に おけ る コロン 以降 の テキスト が 入 っ た 単一 の 文字 列 を 返 し ま す 。 
この テキスト に は 、 先頭 の 空白 、 末尾 の 改行 、 また 後続 の 行 が あ る 場合 に は 途中 の 改行 と 空白 が 含 ま れ ま す 。 
name  に 一致 する ヘッダ が 存在 し な い 場合 に は  None  を 返 し ま す 。 
getrawheader ( name )  に 似 て い ま す が 、 先頭 および 末尾 の 空白 を 剥ぎ取 り ま す 。 
途中 に あ る 空白 は 剥ぎ取 ら れ ま せ ん 。 
オプション の  default  引数 は 、 name  に 一致 する ヘッダ が 存在 し な い 場合 に 、 別 の デフォルト 値 を 返 す よう に 指定 する ため に 使 わ れ ま す 。 
正規 の 辞書 と の 互換 性 を より 高め る ため の  getheader ( ) の 別名  ( alias )  で す 。 
getheader ( name )  が 返 し た 文字 列 を 解析 し て 、 ( full  name , email  address )  から な る ペア を 返 し ま す 。 
getaddr( list )  に 似 て い ま す が 、 複数 の メイル アドレス から な る リスト が 入 っ た ヘッダ  ( 例えば  To :  ヘッダ )  を 解析 し 、  ( full  name , email  address )  の ペア から な る リスト を  ( たとえ ヘッダ に は 一 つ しか アドレス が 入 っ て い な かっ た と し て も )  返 し ま す 。 
getheader ( )  を 使 っ て ヘッダ を 取得 し て 解析 し 、 time. mktime( )  と 互換 な  9  要素 の タプル に し ま す ;  フィールド  6 、 7 、 および  8  は 有用 な 値 で は な い の で 注意 し て 下さ い 。 
name  に 一致 する ヘッダ が 存在 し な かっ たり 、 ヘッダ が 解析 不能 で あ っ た 場合 、 None  を 返 し ま す 。  日付 の 解析 は 妖術 の よう な もの で あ り 、 全て の ヘッダ が 標準 に 従 っ て い る と は 限 り ま せ ん 。 
この メソッド は 多く の 発信 源 から 集め られ た 膨大 な 数 の 電子 メール で テスト さ れ て お り 、 正し く 動作 する こと が 分か っ て い ま す が 、 間違 っ た 結果 を 出力 し て しま う 可能 性 は まだ あ り ま す 。 
getheader ( )  を 使 っ て ヘッダ を 取得 し て 解析 し 、 10  要素 の タプル に し ま す ;  最初 の  9  要素 は  time. mktime( )  と 互換 性 の あ る タプル を 形成 し 、 10  番 目 の 要素 は その 日 に お け る タイム ゾーン の  UTC  から の オフセット を 与え る 数字 に な り ま す 。 
getdate ( ) と 同様 に 、 name  に 一致 する ヘッダ が な かっ たり 、 解析 不能 で あ っ た 場合 、 None  を 返 し ま す 。 
Message  インスタンス は また 、 限定 的 な マップ 型 の インタフェース を 持 っ て い ま す 。  すなわち : 
m [ name ]  は 
m . getheader ( name )  に 似 て い ま す が 、 一致 する ヘッダ が な い 場合  KeyError  を 送出 し ま す ; len ( m ) 、 
] ) 、 
m . keys ( ) 、 
m . items ( ) 、 および 
] )  は 期待 通り に 動作 し ま す 。  ただし  setdefault ( )  は 標準 の 設定 値 と し て 空 文字 列 を と り ま す 。 
Message  インスタンス は また 、 マップ 型 へ の 書き込み を 行え る インタフェース 
m [ name ] = value  および  delm [ name ]  を サポート し て い ま す 。 
Message  オブジェクト で は 、  clear ( ) 、 copy ( ) 、 popitem ( ) 、 あるいは  update ( )  と い っ た マップ 型 インタフェース の メソッド は サポート し て い ま せ ん 。 
( get ( )  および  setdefault ( )  の サポート は  Python 2 . 2  で しか 追加 さ れ て い ま せ ん 。  ) 最後 に 、 Message  インスタンス は いく つ か の  public  な インスタンス 変数 を 持 っ て い ま す : 
ヘッダ 行 の セット 全体 が 、 ( setitem  を 呼び出 し て 変更 さ れ な い 限り )  読み出 さ れ た 順番 に 入れ られ た リスト で す 。 
各行 は 末尾 の 改行 を 含 ん で い ま す 。 
ヘッダ を 終端 する 空行 は リスト に 含 ま れ ま せ ん 。 
インスタンス 化 の 際 に 渡 さ れ た ファイル また は ファイル 類似 オブジェクト で す 。 
この 値 は メッセージ 本体 を 読み出 す ため に 使 う こと が でき ま す 。 
メッセージ に  Unix  " From "  行 が あ る 場合 は その 行 、 そう で な けれ ば 空 文字 列 に な り ま す 。 
この 値 は 例えば  mbox  形式 の メイル ボックス ファイル の よう な 、 ある コンテキスト 中 の メッセージ を 再 生成 する ため に 必要 で す 。 
8  setup  スクリプト を デバッグ する 
setup  スクリプト に は 、 名前 や バージョン に とどま ら ず 、 その 他 の メタデータ を 含め られ ま す 。 
以下 の よう な 情報 を 含め られ ま す : 
メタデータ 
パッケージ の 名前 
短 い 文字 列 
リリース の バージョン 
パッケージ 作者 の 名前 
パッケージ 作者 の 電子 メール アドレス 
電子 メール アドレス 
パッケージ メンテナンス 担当 者 の 名前 
パッケージ メンテナンス 担当 者 の 電子 メール アドレス 
パッケージ の ホーム ページ 
パッケージ に つ い て の 簡潔 な 概要 説明 
パッケージ に つ い て の 詳細 な 説明 
長 い 文字 列 
パッケージ を ダウンロード でき る 場所 
Trove  分類 語 
文字 列 から な る リスト 
必須 の フィールド で す 。 
バージョン 番号 は major . minor [ . patch [ . sub ] 
の 形式 を と る よう 奨め ま す 。 
作者 か メンテナ の どちら か は 必ず 区別 し て くださ い 。 
これ ら の フィールド は 、 2 . 2 . 3  および  2 . 3  より 以前 の バージョン の  Python  で も 互換 性 を 持 た せ た い 場合 に は 指定 し て は な り ま せ ん 。 
リスト は  PyPI  ウェブサイト に あ り ま す 。 
「 短 い 文字 列 」 
200  文字 以内 の 一行 の テキスト 。 
「 長 い 文字 列 」 
複数 行 から な り 、 ReStructuredText  形式 で 書 か れ た プレーン テキスト  ( http:\/\/docutils . sf . net\/ を 参照 し て くださ い ) 。 
「 文字 列 の リスト 」 
下記 を 参照 し て くださ い 。 
これ ら の 文字 列 は いずれ も  Unicode  で あ っ て は な り ま せ ん 。  バージョン 情報 の コード 化 は 、 それ 自体 が 一 つ の アート で す 。 
Python  の パッケージ は 一般 的 に 、 major . minor [ . patch ] 
と い う バージョン 表記 に 従 い ま す 。 
メジャー  ( major )  番号 は 最初 は  0  で 、 これ は ソフトウェア が 実験 的 リリース に あ る こと を 示 し ま す 。 
メジャー 番号 は 、 パッケージ が 主要 な 開発 目標 を 達成 し た とき 、 それ を 示 す ため に 加算 さ れ て ゆ き ま す 。 
マイナー  ( minor ) 番号 は 、 パッケージ に 重要 な 新 機能 が 追加 さ れ た とき に 加算 さ れ て ゆ き ま す 。 
パッチ  ( patch )  番号 は 、 バグ フィクス 版 の リリース が 作成 さ れ た とき に 加算 さ れ ま す 。 
末尾 に バージョン 情報 が 追加 さ れ 、 サブリリース を 示 す こと も あ り ま す 。 
これ は  " a 1 , a 2 , . . . , aN "  ( アルファ リリース の 場合 で 、 機能 や  API  が 変更 さ れ て い る とき ) 、 " b 1 ,b 2 , . . . , bN "  ( ベータ リリース の 場合 で 、 バグ フィクス のみ の とき )  、 そして  " pr 1 , pr 2 , . . . , prN "  ( プレ リリース の 最終 段階 で 、 リリース テスト の とき )  に な り ま す 。 
以下 に 例 を 示 し ま す : 
パッケージ の 最初 の 実験 的 な リリース 
1 . 0  の 最初 の パッチ バージョン に 対 する 、 2  回 目 の アルファ リリース 
classifiers  は 、  Python  の リスト 型 で 指定 し ま す : 
setup . py  に  classifiers  を 入れ て お き 、 なおかつ 2 . 2 . 3  より も 以前 の バージョン の  Python  と 後方 互換 性 を 保 ち た い なら 、 setup . py  中 で  setup ( )  を 呼び出 す 前 に 、 以下 の コード を 入れ ま す 。 
6 . 1  プリアン ブル 用 の マーク アップ 
アドレス の ドメイン ネーム 部分 は 小 文字 に し な けれ ば な り ま せ ん 。  この マーク アップ を 行 っ て も 著者 紹介 は 生成 さ れ ま せ ん が 、 だれ が ドキュメント に 貢献 し た か を 追跡 する 上 で の 補助 と し て 用い ま す 。 
クラス が 生成 さ れ る 前 に クラス 辞書 を 変更 する 
他 の クラス の インスタンス を 返 す  -  本質 的 に は ファクトリ 関数 の 役割 を 果た す 
と い っ た 、 クラス 生成 の プロセス を 監視 し たり 置き 換え たり する クラス や 関数 を 書 く こと が でき ま す 。 __metaclass_ _
この 変数 は  name 、 bases 、 および  dict  を 引数 と し て 取 る よう な 任意 の 呼び出し 可能 オブジェクト に でき ま す 。 
クラス 生成 の 際 、 組み込み の type ( )  の 代わり に 、 指定 さ れ た 呼び出 し オブジェクト が 呼び出 さ れ ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
以下 に 優先 順 で 並 ん だ 規則 に よ っ て 、 適切 な メタ クラス が 決定 さ れ ま す : 
dict [ '_ _metaclass_ _' ]  が あ れ ば それ を 使 い ま す 。 
それ 以外 の 場合 で 、 最低 で も 一 つ 基底 クラス を 持 っ て い る なら 、 基底 クラス の メタ クラス  (__class_ _ 属性 を 探 し 、 な けれ ば 基底 クラス の 型 )  を 使 い ま す 。 
それ 以外 の 場合 で 、 _ _metaclass_ _ と い う 名前 の グローバル 変数 が あ れ ば 、 それ を つか い ま す 。 
それ 以外 の 場合 に は 、 旧 形式 の メタ クラス (types . ClassType )  を 使 い ま す 。 
メタ クラス は 限り な い 潜在 的 利用 価値 を 持 っ て い ま す 。 
これ まで 試 さ れ て き た アイデア に は 、 ログ 記録 、 インタフェース の チェック 、 自動 デリゲーション 、 自動 プロパティ 生成 、 プロキシ 、 フレームワーク 、 そして 自動 リソース ロック \/ 同期 と い っ た もの が あ り ま す 。 
メソッド オブジェクト を 操作 する 上 で 便利 な 関数 が いく つ か あ り ま す 。 
この  PyTypeObject  の インスタンス は  Python  の メソッド オブジェクト 型 を 表現 し ま す 。  この オブジェクト は 、 types . MethodType 
と し て  Python  プログラム に 公開 さ れ て い ま す 。 
o  が メソッド オブジェクト  ( PyMethod_Type  型 で あ る ) 場合 に 真 を 返 し ま す 。 
パラメタ は  NULL  に でき ま せ ん 。 
任意 の 呼び出し 可能 オブジェクト func  を 使 っ た 新た な メソッド オブジェクト を 返 し ま す ;  関数  func  は 、 メソッド が 呼び出 さ れ た 時 に 呼び出 さ れ る オブジェクト で す 。 
この メソッド を インスタンス に 束縛  ( bind )  し た い 場合 、  self  を インスタンス 自体 に し て 、 class  を self  の クラス に し な けれ ば な り ま せ ん 。 
それ 以外 の 場合 は  self  を  NULL  に 、  class  を 非 束縛 メソッド を 提供 し て い る クラス に し な けれ ば な り ま せ ん 。  PyObject * 
メソッド オブジェクト  meth  を 生成 し た クラス オブジェクト を 返 し ま す ; インスタンス が メソッド オブジェクト を 生成 し た 場合 、 戻 り 値 は インスタンス の クラス に な り ま す 。 
Py Method_ Class ( )  を マクロ で 実装 し た バージョン で 、 エラー チェック を 行 い ま せ ん 。 
meth  に 関連 付け られ て い る 関数 オブジェクト を 返 し ま す 。 
Py Method_Function ( )  の マクロ 版 で 、 エラー チェック を 行 い ま せ ん 。 
meth  が 束縛 メソッド の 場合 に は 、 メソッド に 関連 付け られ て い る インスタンス を 返 し ま す 。  それ 以外 の 場合 に は  NULL  を 返 し ま す 。 
Py Method _ Self ( )  の マクロ 版 で 、 エラー チェック を 行 い ま せ ん 。 
さて 、 前 に 約束 し た よう に 、 spam_system ( )  Python  プログラム から どう や っ て 呼び出 す か を これ から 示 し ま す 。 
まず は 、 関数 名 と アドレス を ` ` メソッド テーブル  ( methodtable ) ' ' に 列挙 する 必要 が あ り ま す : 
リスト 要素 の 三 つ 目 の エントリ  ( " METH _ VARARGS " )  に 注意 し て くださ い 。 
この エントリ は 、 C  関数 が 使 う 呼び出 し 規約 を インタプリタ に 教え る ため の フラグ で す 。 
この 場合 、 C  関数 は 第 三 引数 に  " PyObject* "  を 受理 する よう に せ ね ば な り ま せ ん 。  この オブジェクト は 、 キー ワード 引数 の 辞書 に な り ま す 。 
こう し た 関数 で 引数 を 解釈 する に は 、 PyArg _ ParseTupleAndKeywords ( )  を 使 っ て くださ い 。  メソッド テーブル は 、 モジュール の 初期 化 関数 内 で インタプリタ に 渡 さ ね ば な り ま せ ん 。 
初期 化 関数 は モジュール の 名前 を  name と し た とき に  initname ( )  と い う 名前 で な けれ ば な ら ず 、 モジュール ファイル 内 で 定義 さ れ て い る もの の うち 、 唯一 の 非 static  要素 で な けれ ば な り ま せ ん : 
PyMODINIT_ FUNC  は 関数 の 戻 り 値 を  void  に な る よう に 宣言 し 、 プラットフォーム 毎 に 必要 と さ れ る 、 特有 の リンク 宣言  ( linkage declaration ) を 定義 する こと 、 さらに  C + +  の 場合 に は 関数 を  extern " C "  に 宣言 する こと に 注意 し て くださ い 。  Python  プログラム が モジュール  spam  を 初めて import する とき 、 initspam ( )  が 呼び出 さ れ ま す 。 
( Python  の 埋め込み に 関 する コメント は 下記 を 参照 し て くださ い 。 
) initspam ( )  は  Py _ InitModule ( )  を 呼び出 し て ` ` モジュール オブジェクト ' ' を 生成 し  ( オブジェクト は " spam "  を キー と し て 辞書  sys . modules  に 挿入 さ れ ま す ) 、 第 二 引数 と し て 与え た メソッド テーブル  ( PyMethodDef  構造 体 の 配列 )  の 情報 に 基づ い て 、 組み込 み 関数 オブジェクト を 新た な モジュール に 挿入 し て い き ま す 。  Py _ InitModule ( )  は 、 自ら が 生成 し た  ( この 段階 で は まだ 未 使用 の )  モジュール オブジェクト へ の ポインタ を 返 し ま す 。 
Py _ InitModule ( )  は 、 モジュール を 満足 に 初期 化 でき な かっ た 場合 、 致命 的 エラー で 中断 する ため 、 この 関数 の 呼び出 し 側 が エラー を チェック する 必要 は あ り ま せ ん 。  Python  を 埋め込 む 場合 に は 、 _ PyImport_ Inittab  テーブル の エントリ 内 に  initspam ( )  が な い 限り 、 initspam ( ) は 自動 的 に は 呼び出 さ れ ま せ ん 。 
この 問題 を 解決 する 最も 簡単 な 方法 は 、 Py _ Initialize ( )  や  Py Mac _ Initialize ( )  を 呼び出 し た 後 に  initspam ( )  を 直接 呼び出 し 、 静的 に リンク し て お い た モジュール を 静的 に 初期 化 し て しま う と い う もの で す : 
intmain ( int argc ,  char* argv [ ] ){\/* Python  インタプリタ に  argv [ 0 ]  を 渡 す *\/ Py _ Set Program Name( argv [ 0 ] ) ;\/* Python  インタプリタ を 初期 化 する 。 
必ず 必要 。 
* \/ Py _ Initialize ( ) ;\/* 静的 モジュール を 追加 する *\/initspam ( ) ;
Python  ソース 配布 物 中 の  Demo\/embed\/demo. c  ファイル 内 に 例 が あ り ま す 。 
より 実質 的 な モジュール 例 は 、 Python  ソース 配布 物 に Modules \/xxmodule . c  と い う 名前 で 入 っ て い ま す 。 
この ファイル は テンプレート と し て も 利用 でき ま す し 、 単に 例 と し て も 読め ま す 。 
ソース 配布 物 や  Windows  に インストール さ れ た  Python  に 入 っ て い る modulator . py  で は 、 拡張 モジュール で 実装 し な けれ ば な ら な い 関数 や オブジェクト を 宣言 し 、 実装 部分 を 埋め て 作成 する ため の テンプレート を 生成 でき る よう な 、 簡単 な グラフィカル ユーザ インタフェース を 提供 し て い ま す 。 
この スクリプト は Tools\/modulator \/  ディレクトリ に あ り ま す ; 詳し く は ディレクトリ 内 の  README  ファイル を 参照 し て くださ い 。 
Folder  インスタンス は 開 か れ た フォルダ を 表現 し 、 以下 の メソッド を 持 っ て い ま す : 
エラー メッセージ を 出力 し ま す  -  上書き する こと が でき ま す 。 
フォルダ の 完全 な パス 名 を 返 し ま す 。 
フォルダ 内 の シーケンス ファイル の 完全 な パス 名 を 返 し ま す 。 
フォルダ 内 の メッセージ  n  の 完全 な パス 名 を 返 し ま す 。 
フォルダ 内 の メッセージ の  ( 番号 の )  リスト を 返 し ま す 。 
現在 の メッセージ 番号 を 返 し ま す 。 
現在 の メッセージ 番号 を  n  に 設定 し ま す 。 
msgs  文 を 解釈 し て 、 メッセージ の リスト に し ま す 。 
最新 の メッセージ を 取得 し ま す 。  メッセージ が フォルダ に な い 場合 に は 0  を 返 し ま す 。 
最新 の メッセージ を 設定 し ま す  ( 内部 使用 のみ ) 。 
フォルダ 内 の シーケンス から な る 辞書 を 返 し ま す 。 
シーケンス 名 が キー と し て 使 わ れ 、 値 は シーケンス に 含 ま れ る メッセージ 番号 の リスト に な り ま す 。 
フォルダ 内 の シーケンス から な る 辞書  name : list  を 返 し ま す 。 
リスト 中 の メッセージ を フォルダ から 削除 し ま す 。 
リスト 中 の メッセージ を 他 の フォルダ に 移動 し ま す 。 
一 つ の メッセージ を 他 の フォルダ の 指定 先 に 移動 し ま す 。 
一 つ の メッセージ を 他 の フォルダ の 指定 先 に コピー し ま す 。 
Message  クラス は  mimetools . Message  の メソッド に 加え 、 一 つ メソッド を 持 っ て い ま す : 
新た な 開 か れ た メッセージ オブジェクト を 返 し ま す  ( ファイル 記述 子 を 一 つ 消費 し ま す ) 。 
MH  インスタンス は 以下 の メソッド を 持 っ て い ま す : 
プロファイル エントリ  ( 設定 さ れ て い な けれ ば  None )  を 返 し ま す 。 
メイル ボックス の パス 名 を 返 し ま す 。 
現在 の フォルダ 名 を 返 し ま す 。 
現在 の フォルダ 名 を 設定 し ま す 。 
トップ レベル フォルダ の リスト を 返 し ま す 。 
全て の フォルダ を 列挙 し ま す 。 
指定 し た フォルダ の 直下 に あ る サブ フォルダ の リスト を 返 し ま す 。 
指定 し た フォルダ の 下 に あ る 全て の サブ フォルダ の リスト を 返 し ま す 。 
新し い フォルダ を 生成 し ま す 。 
フォルダ を 削除 し ま す  -  サブ フォルダ が 入 っ て い て は いけ ま せ ん 。 
新た な 開 か れ た フォルダ オブジェクト を 返 し ま す 。 
Message  クラス は 、 rfc 822 . Message  メソッド に 加え て 、 以下 の メソッド を 定義 し て い ま す : 
Content- Type :  ヘッダ の パラメータ リスト を 返 し ま す 。 
これ は 文字 列 の リスト で す 。 
" の 形 の パラメータ に 対 し て は 、 key  は 小 文字 に 変換 さ れ ま す が 、  value  は 変換 さ れ ま せ ん 。 
たとえば 、 もし メッセージ に 、 ヘッダ " Content-type : text \/html ;spam = 1 ; Spam = 2 ;  Spam "  が 含 ま れ て い れ ば 、 getplist ( )  は 、 Python  リスト  ['spam = 1 ' , 'spam = 2 ' , 'Spam ' ] を 返 す で しょ う 。 
Content - Transfer - Encoding :  メッセージ ヘッダ で 指定 さ れ た 符号 化 方式 を 返 し ま す 。 
もし その よう な ヘッダ が 存在 し な けれ ば 、 ' 7 bit ' を 返 し ま す 。 
符号 化 方式 文字 列 は 小 文字 に 変換 さ れ ま す 。 
Content- Type :  ヘッダ で 指定 さ れ た ( " 
" の 形 で の ) メッセージ 型 を 返 し ま す 。 
もし その よう な ヘッダ が 存在 し な けれ ば 、 ' text \/plain' を 返 し ま す 。 
型 文字 列 は 小 文字 に 変換 さ れ ま す 。 
Content- Type :  ヘッダ で 指定 さ れ た 主要 型 を 返 し ま す 。 
もし その よう な ヘッダ が 存在 し な けれ ば 、 ' text ' を 返 し ま す 。 
主要 型 文字 列 は 小 文字 に 変換 さ れ ま す 。 
Content- Type : ヘッダ で 指定 さ れ た 下位 型 を 返 し ま す 。 
もし その よう な ヘッダ が 存在 し な けれ ば 、 'plain' を 返 し ま す 。 
下位 型 文字 列 は 小 文字 に 変換 さ れ ま す 。 
MimeTypes  インスタンス は 、 
モジュール の それ と 非常 に よく 似 た インターフェース を 提供 し ま す 。 
サ フィックス を サ フィックス に マップ する 辞書 。 
これ は 、 符号 化 方式 と 型 が 同一 拡張 子 で 示 さ れ る よう な 符号 化 ファイル が 認識 でき る よう に 使用 さ れ ま す 。 
例えば 、 . tgz  拡張 子 は 、 符号 化 方式 と 型 が 別個 に 認識 でき る よう に  . tar . gz に 対応 づけ られ ま す 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な  suffix _ map  の コピー で す 。 
ファイル 名 拡張 子 を 符号 化 型 に マッピング する 辞書 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な encodings_ map  の コピー で す 。 
ファイル 名 拡張 子 を MIME 型 に マッピング する る 辞書 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な types_map  の コピー で す 。 
ファイル 名 拡張 子 を 非 標準 で は あ る が 、 一般 に 使 わ れ て い る MIME 型 に マップ する 辞書 。 
これ は 、 最初 は モジュール で 定義 さ れ た グローバル な  common_types  の コピー で す 。 
guess_extension ( )  関数 と 同様 に 、 オブジェクト の 一部 と し て 保存 さ れ た テーブル を 使用 し ま す 。 
guess_type ( )  関数 と 同様 に 、 オブジェクト の 一部 と し て 保存 さ れ た テーブル を 使用 し ま す 。 
MIME 情報 を 、 path と い う 名 の ファイル から ロード し ま す 。 
これ は ファイル を 解析 する の に  readfp( )  を 使用 し ま す 。 
MIME 型 情報 を 、 オープン し た ファイル から ロード し ま す 。 
ファイル は 、 標準 の  mime.types  ファイル の 形式 で な けれ ば な り ま せ ん 。 
モジュール は 、 本質 的 に は DOM  1 . 0  互換 の  DOM に 、 いく つ か の  DOM  2  機能  ( 主に 名前 空間 機能 )  を 追加 し た もの で す 。  Python  に お け る  DOM  インタフェース は 率直 な もの で す 。 
以下 の 対応 付け 規則 が 適用 さ れ ま す : 
インタフェース は インスタンス オブジェクト を 介 し て アクセス さ れ ま す 。 
アプリケーション 自身 から 、 クラス を インスタンス 化 し て は な り ま せ ん ; Document  オブジェクト 上 で 利用 可能 な 生成 関数  ( creator function ) を 使 わ な けれ ば な り ま せ ん 。  導出 インタフェース で は 基底 インタフェース の 全て の 演算  ( および 属性 )  に 加え 、 新た な 演算 を サポート し ま す 。 
演算 は メソッド と し て 使 わ れ ま す 。 
DOM  で は  in  パラメタ のみ を 使 う の で 、 引数 は 通常 の 順番  ( 左 から 右 へ )  で 渡 さ れ ま す 。  オプション 引数 は あ り ま せ ん 。 
void  演算 は None を 返 し ま す 。 
IDL  属性 は インスタンス 属性 に 対応 付け られ ま す 。 
OMG  IDL  言語 に お け る  Python  へ の 対応 付け と の 互換 性 の ため に 、 属性  foo は アクセサ メソッド  _ get_foo( )  および _set_foo ( ) で も アクセス でき ま す 。  readonly  属性 は 変更 し て は な り ま せ ん ;  と は い え 、 これ は 実行 時 に は 強制 さ れ ま せ ん 。 
shortint  、 unsignedint  、 unsignedlong  long  、 および  boolean  型 は 、 全て  Python  整数 オブジェクト に 対応 付け られ ま す 。 
DOMString  型 は  Python  文字 列 型 に 対応 付け られ ま す 。 
で は バイト 文字 列  ( byte string )  および Unicode  文字 列 の どちら か に 対応 づけ られ ま す が 、 通常  Unicode  文字 列 を 生成 し ま す 。 
DOMString  型 の 値 は 、 W 3 C  の  DOM  仕様 で 、 IDLnull  値 に な っ て も よ い と さ れ て い る 場所 で は  None  に な る こと も あ り ま す 。 
const  宣言 を 行 う と 、 ( xml . dom. minidom. Node . PRO CESSING_ INSTRUCTION _ NODE  の よう に ) 対応 する スコープ 内 の 変数 に 対応 付け を 行 い ま す ; これ ら は 変更 し て は な り ま せ ん 。 
DOMException  は 現状 で は 
で サポート さ れ て い ま せ ん 。 
その 代わ り 、 
は 、 TypeError  や  AttributeError  と い っ た 標準 の  Python  例外 を 使 い ま す 。 
NodeList  オブジェクト は  Python  の 組み込 み リスト 型 を 使 っ て 実装 さ れ て い ま す 。 
Python  2 . 2  から は 、 これ ら の オブジェクト は DOM  仕様 で 定義 さ れ た インタフェース を 提供 し て い ま す が 、 それ 以前 の バージョン の  Python  で は 、 公式 の  API  を サポート し て い ま せ ん 。 
しかし ながら 、 これ ら の  API  は  W 3 C  勧告 で 定義 さ れ た インタフェース より も  `` Python  的 な ' '  もの に な っ て い ま す 。 
以下 の インタフェース は 
で は 全く 実装 さ れ て い ま せ ん : 
これ ら の 大 部分 は 、 ほとんど の  DOM  の ユーザ に と っ て 一般 的 な 用途 と し て 有用 と は な ら な い よう な  XML  文書 内 の 情報 を 反映 し て い ま す 。 
6 . 2 9 . 3  複数 の 出力 先 に ログ を 出力 する 
logging  パッケージ に は 高 い 柔軟 性 が あ り 、 その 設定 に たじろ ぐ こと も あ る で しょ う 。 
そこ で この 節 で は 、  logging  パッケージ を 簡単 に 使 う 方法 も あ る こと を 示 し ま す 。 
以下 の 最も 単純 な 例 で は 、 コンソール に ログ を 表示 し ま す : 
上 の スクリプト を 実行 する と 、 以下 の よう な メッセージ を 目 に する で しょ う : 
ここ で は ロガー を 特定 し な かっ た の で 、 システム は ルート ロガー を 使 っ て い ま す 。  デバッグ メッセージ や 情報 メッセージ は 表示 さ れ ま せ ん が 、 これ は デフォルト の ルート ロガー が  WARNING  以上 の 重要 度 を 持 つ メッセージ しか 処理 し な い よう に 設定 さ れ て い る から で す 。 
メッセージ の 書式 も デフォルト の 設定 に 従 っ て い ま す 。  出力 先 は sys . stderr  で 、 これ も デフォルト の 設定 で す 。 
重要 度 レベル や メッセージ の 形式 、 ログ の 出力 先 は 、 以下 の 例 の よう に 簡単 に 変更 でき ま す : 
ここ で は 、 basic Config ( )  メソッド を 使 っ て 、 以下 の よう な 出力 例 に な る  ( そして \/ tmp\/myapp . log  に 書き込 ま れ る )  よう に 、 デフォルト 設定 を 変更 し て い ま す : 
書式 化 文字 列 は 、 以下 の 指定 子  ( specifier )  を 常 に と り ま す 。 
指定 子 の 完全 な リスト に つ い て は  Formatter  の ドキュメント を 参照 し て くださ い 。 
書式 
ロガー の 名前  ( ログ チャネル )  の 名前 で す 。 
メッセージ の ログ レベル ( ' DEBUG ' , ' INFO ' , ' WARNING' , ' ERROR ' , ' CRITICAL ')  で す 。 
LogRecord  が 生成 さ れ た 際 の 時刻 を 、 人間 が 読み取れ る 形式 に し た もの で す 。 
デフォルト で は 、 ` `2003 - 0 7 - 0 8  16 : 49 : 45 , 89 6 ' '  の よう な 形式  ( コンマ の 後ろ は ミリ 秒 ) で す 。 
ログ メッセージ で す 。 
以下 の よう に 、 追加 の キー ワード パラメタ  datefmt  を 渡 す と 日付 や 時刻 の 書式 を 変更 でき ま す : 
出力 は 以下 の よう に な り ま す : 
日付 を 書式 化 する 文字 列 は 、 strftime( )  の 要求 に 従 い ま す  - 
モジュール を 参照 し て くださ い 。  コンソール や ファイル で は な く 、 別個 に 作成 し て お い た ファイル 類似 オブジェクト に ログ を 出力 し た い 場合 に は 、 basic Config ( )  に stream  キー ワード 引数 で 渡 し ま す 。 
stream  と filename  の 両方 の 引数 を 指定 し た 場合 、 stream  は 無視 さ れ る の で 注意 し て くださ い 。  状況 に 応 じ て 変化 する 情報 も もちろん ログ 出力 でき ま す 。 
以下 の よう に 、 単に メッセージ を 書式 化 文字 列 に し て 、 その 後ろ に 可変 情報 の 引数 を 渡 す だけ で す : 
出力 は 以下 の よう に な り ま す : 
6 . 6  雑多 な テキスト マーク アップ  イン ライン マーク アップ に 加え て 、 `` ブロック ' ' マーク アップ が いく つ か 定義 さ れ て い て 、 様々 な テキスト 断片 に 対 し て 読者 の 注意 を 引 か せ やす く し て い ま す 。 
この 節 で 述べ て い る マーク アップ は 、 こう し た 目的 の 他 に 、 ( verbatim  環境 の よう に )  一 つ 以上 の 段落 や 、 他 の ブロック 構造 を マーク する 際 に 使 う ため の もの で す 。 
読者 が さらに 注意 を 払 う べ き 段落 を ラベル し ま す 。 
どの 種 の 注意 を 求め て い る か は 、 type  に 指定 し ま す 。 
type  用 に 定義 さ れ て い る 値 は note  と warning  で す ;  これ ら は 、 同名 の イン ライン マーク アップ と 同じ 目的 に 使 い ま す 。 types  を 省略 する と 、 note  を 使 い ま す 。 
type  が 撮 り う る 値 は 将来 新た に 追加 さ れ る か も しれ ま せ ん 。 
6 . 7  モジュール 特有 の マーク アップ  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
5 .  各種 サービス 
この 章 で は 、 Python の すべて の バージョン で 利用 可能 な 各種 サービス に つ い て 説明 し ま す 。 
以下 に 概要 を 示 し ま す 。 
ドキュメント 生成 と オン ライン ヘルプ システム 
対話 モード を 使 っ た 使用 例 の 内容 を 検証 する ため の フレームワーク 。 
単体 テスト フレームワーク 
Python 用 テスト スイート を 含 む 回帰 テスト パッケージ 。 
Python  回帰 テスト の サポート 
汎用  10  進 数 算術 仕様  ( General  Decimal  Arithmetic  Specification ) の 実装 。 
数学 関数 ( sin ( )  など ) 。 
複素数 の ため の 数学 関数 で す 。 
よく 知 ら れ て い る 様々 な 分布 を も つ 擬似 乱数 を 生成 する 。 
浮動 小数 点数 の 擬似 乱数 生成 器 。 
バイナリ サーチ 用 の 配列 二 分 法 アルゴリズム 。 
ヒープ キュー  ( 別名 優先度 キュー )  アルゴリズム 。 
一様 な 型 を 持 つ 数値 から な る 効率 の よ い アレイ 。 
ユニーク な 要素 の 集合 の 実装 
効率 的 な ループ 実行 の ため の イテレータ 生成 関数 。 
Perl の よう な 複数 の 入力 ストリーム を また い だ 行 の 繰り返 し 処理 を サポート する ( その 場 で 保存 する 機能 つき ) 。 
Unix  の  cal  プログラム 相当 の 機能 を 含 ん だ カレンダー に 関 する 関数 群 
行 指向 の コマンド インタープリタ を 構築 
Unix  シェル 類似 の 言語 に 対 する 単純 な 字句 解析 。 
ミキサ オブジェクト に は 、 2 つ の ファイル 類似 メソッド が あ り ま す : 
すでに 開 か れ て い る ミキサ デバイス ファイル を 閉じ ま す 。 
ファイル を 閉じ た 後 で ミキサ を 使 お う と する と 、 IOError を 送出 し ま す 。 
開 か れ て い る ミキサ デバイス ファイル の ファイル ハンドル ナンバ を 返 し ま す 。 
以下 は オーディオ ミキシング 固有 の メソッド で す 。 
この メソッド は 、 利用 可能 な ミキサ コントロール  ( SOUND _ MIXER _ PCM や SOUND _ MIXER_ SYNTH  の よう に 、 ミキシング を 行え る チャネル ) を 指定 する ビット マスク を 返 し ま す 。 
この ビット マスク は 利用 可能 な 全て の ミキサ コントロール の サブ セット で す  --  定数 SOUND _ MIXER_* は モジュール レベル で 定義 さ れ て い ま す 。 
例えば 、 もし 現在 の ミキサ オブジェクト が PCM  ミキサ を サポート し て い る か 調べ る に は 、 以下 の Python コード を 実行 し ま す : 
ほとんど の 用途 に は 、 SOUND _ MIXER _ VOLUME  ( マスタ ボリューム )  と SOUND _ MIXER _ PCM コントロール が あ れ ば 十分 で しょ う  - - と は い え 、 ミキサ を 使 う コード を 書 く とき に は 、 コントロール を 選 ぶ 時 に 柔軟 性 を 持 た せ る べ き で す 。 
例えば Gravis Ultrasound  に は SOUND _ MIXER _ VOLUME  が あ り ま せ ん 。 
ステレオ ミキサ コントロール を 示 す ビット マスク を 返 し ま す 。 
ビット が 立 っ て い る コントロール は ステレオ で あ る こと を 示 し 、 立 っ て い な い コントロール は モノラル か 、 ミキサ が サポート し て い な い コントロール で あ る  ( どちら の 理由 か は controls ( )  と 組み合わせ て 使 う こと で 判別 でき ま す )  こと を 示 し ま す 。  ビット マスク から 情報 を 得 る 例 は 関数 controls ( ) の コード 例 を 参照 し て くださ い 。 
録音 に 使用 でき る ミキサ コントロール を 特定 する ビット マスク を 返 し ま す 。 
ビット マスク から 情報 を 得 る 例 は 関数 controls ( ) の コード 例 を 参照 し て くださ い 。 
指定 し た ミキサ コントロール の ボリューム を 返 し ま す 。 
2  要素 の タプル ( left_volume , right_volume)  を 返 し ま す 。 
ボリューム の 値 は  0  ( 無音 )  から 100  ( 最大 )  で 示 さ れ ま す 。 
指定 し た ミキサ コントロール の ボリューム を ( left , right ) に 設定 し ま す 。  left と right は 整数 で 、 0  ( 無音 )  から 100  ( 最大 )  の 間 で 指定 せ ね ば な り ま せ ん 。 
呼び出し に 成功 する と 新し い ボリューム 値 を  2  要素 の タプル で 返 し ま す 。  サウンド カード に よ っ て は 、 ミキサ の 分解 能 上 の 制限 から 、 指定 し た ボリューム と 厳密 に 同じ に は な ら な い 場合 が あ り ま す 。 
不正 な コントロール を 指定 し た 場合 や 、 指定 し た ボリューム 値 が 範囲 外 で あ っ た 場合 、 IOError  を 送出 し ま す 。  get_recsrc
現在 録音 の ソース に 使 わ れ て い る コントロール を 示 す ビット マスク を 返 し ま す 。 
録音 の ソース を 指定 に は この 関数 を 使 っ て くださ い 。 
呼び出し に 成功 する と 、 新た な 録音 の  ( 場合 に よ っ て は 複数 の )  ソース を 示 す ビット マスク を 返 し ま す ; 不正 な ソース を 指定 する と IOError を 送出 し ま す 。 
現在 の 録音 の ソース と し て マイク 入力 を 設定 する に は 、 以下 の よう に し ま す : 
この 章 で 記述 さ れ て い る モジュール は 、 主に マルチメディア アプリケーション に 役立 つ さまざま な アルゴリズム また は インターフェイス を 実装 し て い ま す 。 
これ ら の モジュール は インストール 時 の 自由 裁量 に 応 じ て 利用 でき ま す 。 
生 の 音声 データ を 操作 する 
生 の 画像 データ を 操作 する 。 
AIFF あるいは AIFC フォーマット の オーディオ ファイル の 読み書き 
Sun  AU サウンド フォーマット へ の インターフェース 
WAV サウンド フォーマット へ の インターフェイス 
IFF チャンク データ の 読み 込 み 。 
RGB  他 の 色 体系 間 の 変換 。 
` ` SGI  RGB ' '  形式 の 画像 ファイル を 読み書き し ま す  ( と は い え 、 この モジュール は  SGI  特有 の もの で は あ り ま せ ん  ! ) 。 
ファイル や バイト ストリーム に 含 ま れ る 画像 の 形式 を 決定 する 。 
サウンド ファイル の 識別 
OSS 互換 オーディオ デバイス へ の アクセス 。 
46  新し い Distutils コマンド の 作成 
22 .  MS  Windows  特有 の サービス 
Windows プラットフォーム で 利用 でき ま す 。 
これ ら の 関数 は  Windows  レジストリ  API  を  Python  で 使え る よう に し ま す 。 
他 の 計算 機上 に あ る 既定 の レジストリ ハンドル 接続 を 確立 し 、 ハンドル オブジェクト  ( handle object )  を 返 し ま す 。 
computer_ name  は リモート コンピュータ の 名前 で 、 r " computername "  の 形式 を と り ま す 。 
None の 場合 、 ローカル の 計算 機 が 使 わ れ ま す 。 
特定 の キー を 生成 する か 開 き 、 ハンドル オブジェクト を 返 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で す 。 
特定 の キー を 削除 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で す 。 
sub _key  は 文字 列 で 、 key  パラメタ に よ っ て 特定 さ れ た キー の サブ キー で な けれ ば な り ま せ ん 。 
この 値 は  None  で あ っ て は な ら ず 、 キー は サブ キー を 持 っ て い て は な り ま せ ん 。 
この メソッド は サブ キー を も つ キー を 削除 する こと は でき ま せ ん 。 
この メソッド の 実行 が 成功 する と 、 キー 全体 が 、 その 値 すべて を 含め て 削除 さ れ ま す 。 
この メソッド が 失敗 し た 場合 、 EnvironmentError  例外 が 送出 さ れ ま す 。 
レジストリ キー から 指定 さ れ た 名前 つき の 値 を 削除 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で な けれ ば な り ま せ ん 。 
value  は 削除 し た い 値 を 指定 する ため の 文字 列 で す 。 
開 か れ て い る レジストリキー の サブ キー を 列挙 し 、 文字 列 で 返 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で な けれ ば な り ま せ ん 。 
index  は 整数 値 で 、 取得 する キー の インデクス を 特定 し ま す 。  この 関数 は 呼び出 さ れ る たび に 一 つ の サブ キー の 名前 を 取得 し ま す 。 
この 関数 は 通常 、 これ 以上 サブキー が な い こと を 示 す EnvironmentError  例外 が 送出 さ れ る まで 繰り返 し 呼び出 さ れ ま す 。 
開 か れ て い る レジストリキー の 値 を 列挙 し 、 タプル で 返 し ま す 。 
index  は 整数 値 で 、 取得 する 値 の インデクス を 特定 し ま す 。  この 関数 は 呼び出 さ れ る たび に 一 つ の 値 の 名前 を 取得 し ま す 。 
この 関数 は 通常 、 これ 以上 値 が な い こと を 示 す EnvironmentError  例外 が 送出 さ れ る まで 繰り返 し 呼び出 さ れ ま す 。  結果 は  3  要素 の タプル に な り ま す : 
値 の 名前 を 特定 する 文字 列 
値 の データ を 保持 する ため の オブジェクト で 、 その 型 は 背後 の レジストリ 型 に 依存 し ま す 
値 の データ 型 を 特定 する 整数 で す 
キー の すべて の 属性 を レジストリ に 書き込 み ま す 。 
また 、 システム の 遮断 時 に も ディスク に フラッシュ さ れ ま す 。 
CloseKey ( )  と 違 っ て 、 FlushKey ( )  メソッド は レジストリ に 全て の データ を 書 き 終え た とき に のみ 返 り ま す 。  アプリケーション は 、 レジストリ へ の 変更 を 絶対 に 確実 に ディスク 上 に 反映 さ せ る 必要 が あ る 場合 に のみ 、 FlushKey ( )  を 呼 ぶ べ き で す 。 
FlushKey ( )  を 呼び出 す 必要 が あ る か どう か 分か ら な い 場合 、 おそらく その 必要 は あ り ま せ ん 。 
指定 さ れ た キー の 下 に サブキー を 生成 し 、 サブキー に 指定 さ れ た ファイル の レジストリ 情報 を 記録 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で す 。 
sub _key  は 記録 先 の サブ キー を 指定 する 文字 列 で す 。 file_name  は レジストリ データ を 読み出 す ため の ファイル 名 で す 。 
指定 さ れ た キー を 開 き 、 ハンドル オブジェクト  を 返 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で す 。 
sub _key  は 開 き た い サブ キー を 特定 する 文字 列 で す 。 
res  予約 さ れ て い る 整数 値 で 、 ゼロ で な く て は な り ま せ ん 。 
標準 の 値 は ゼロ で す 。 
sam  は 必要 な キー へ の セキュリティ アクセス を 記述 する 、 アクセス マスク を 指定 する 整数 で す 。 
標準 の 値 は  KEY_ READ  で す 。 
指定 さ れ た キー へ の 新し い ハンドル が 返 さ れ ま す 。  この 関数 が 失敗 する と  、 EnvironmentError  が 送出 さ れ ま す 。 
OpenKeyEx ( )  の 機能 は  OpenKey ( ) を 標準 の 引数 で 使 う こと で 提供 さ れ て い ま す 。 
キー に 関数 情報 を タプル と し て 返 し ま す 。 
key  は すでに 開 か れ た キー か 、 既定 の  HKEY_ *  定数 の うち の 一 つ で す 。  結果 は 以下 の  3  要素 から な る タプル で す : 
インデクス 
この キー が 持 つ サブキー の 数 を 表 す 整数 。 
この キー が 持 つ 値 の 数 を 表 す 整数 。 
最後 の キー の 変更 が  ( あ れ ば )  いつ だっ た か を 表 す 長 整数 で 、 1600  年  1  月  1  日 から の  100  ナノ 秒 単位 で 数え た もの 。 
キー に 対 する 、 名前付け られ て い な い 値 を 文字 列 で 取得 し ま す 。 
sub _key  は 値 が 関連 付け られ て い る サブキー の 名前 を 保持 する 文字 列 で す 。 
この 引数 が  None  また は 空 文字 列 の 場合 、 この 関数 は key  で 特定 さ れ る キー に 対 し て  SetValue ( )  メソッド で 設定 さ れ た 値 を 取得 し ま す 。  レジストリ 中 の 値 は 名前 、 型 、 および データ から 構成 さ れ て い ま す 。 
開 か れ た レジストリキー に 関連 付け られ て い る 、 指定 し た 名前 の 値 に 対 し て 、 型 および データ を 取得 し ま す 。 
value _name  は 要求 する 値 を 指定 する 文字 列 で す 。  結果 は  2  つ の 要素 から な る タプル で す : 
レジストリ 要素 の 名前 。 
この 値 の レジストリ 型 を 表 す 整数 。 
指定 さ れ た キー と 、 その サブ キー 全て を 指定 し た ファイル に 保存 し ま す 。 
file_name  は レジストリ データ を 保存 する ファイル の 名前 で す 、 この ファイル は すでに 存在 し て い て は いけ ま せ ん 。 
この 特権 は ファイル パー ミッション と は 異な り ま す  -  詳細 は  Win 32  ドキュメンテーション を 参照 し て くださ い 。  この 関数 は  security _ attributes  を  NULL  に し て  API  に 渡 し ま す 。 
値 を 指定 し た キー に 関連 付け ま す 。 
sub _key  は 値 が 関連 付け られ て い る サブキー の 名前 を 表 す 文字 列 で す 。 
type  は データ の 型 を 指定 する 整数 で す 。  現状 で は 、 この 値 は REG _ SZ  で な けれ ば な ら ず 、 これ は 文字 列 だけ が サポート さ れ て い る こと を 示 し ま す 。 
他 の データ 型 を サポート する に は SetValueEx ( )  を 使 っ て くださ い 。 
( 20 4 8  バイト 以上 の ) 長 い 値 は ファイル に 保存 し て 、 その ファイル 名 を 設定 レジストリ に 保存 する べ き で す 。 
そう すれ ば レジストリ を 効率 的 に 動作 さ せ る 役 に 立 ち ま す 。 key  引数 に 指定 さ れ た キー は  KEY_ SET _ VALUE アクセス で 開 か れ て い な けれ ば な り ま せ ん 。 
開 か れ た レジストリキー の 値 フィールド に データ を 記録 し ま す 。 
type  は データ の 型 を 指定 する 整数 で す 。 
値 は この モジュール で 定義 さ れ て い る 以下 の 定数 の うち の 一 つ で な けれ ば な り ま せ ん : 
何 ら か の 形式 の バイナリ データ 。 
32  ビット の 数 。 
32  ビット の リトル エンディアン 形式 の 数 。 
32  ビット の ビッグ エンディアン 形式 の 数 。 
環境 変数 を 参照 し て い る 、 ヌル 文字 で 終端 さ れ た 文字 列 。 
( " % PATH % " ) 。 
REG _ LINK  Unicode  の シンボリック リンク 。 
ヌル 文字 で 終端 さ れ た 文字 列 から な り 、 二 つ の ヌル 文字 で 終端 さ れ て い る 配列  ( Python  は この 終端 の 処理 を 自動 的 に 行 い ま す ) 。 
定義 さ れ て い な い 値 の 形式 。 
デバイス ドライバリソース の リスト 。  REG _ SZ
ヌル で 終端 さ れ た 文字 列 。 
reserved  は 何 も し ま せ ん  -  API  に は 常 に ゼロ が 渡 さ れ ま す 。 
value  は 新た な 値 を 指定 する 文字 列 で す 。  この メソッド で は また 、 指定 さ れ た キー に 対 し て 、 さらに 別 の 値 や 型 情報 を 設定 する こと が でき ま す 。 
そう すれ ば レジストリ を 効率 的 に 動作 さ せ る 役 に 立 ち ま す 。 
22 . 2 . 1  レジストリ ハンドル オブジェクト 
11 .  インターネット プロトコル と その 支援 
この モジュール で は 、  HTTP  サーバ  ( Web  サーバ )  を 実装 する ため の 二 つ の の クラス を 定義 し て い ま す 。 
通常 、 この モジュール が 直接 使用 さ れ る こと は な く 、 特定 の 機能 を 持 つ  Web  サーバ を 構築 する ため に 使 わ れ ま す 。 
モジュール を 参照 し て くださ い 。  最初 の クラス 、 HTTPServer  は  SocketServer . TCPServer  の サブ クラス で す 。 
HTTPServer  は  HTTP  ソケット を 生成 し て リクエスト 待ち  ( listen )  を 行 い 、 リクエスト を ハンドラ に 渡 し ま す 。 
サーバ を 作成 し て 動作 さ せ る ため の コード は 以下 の よう に な り ま す : 
クラス HTTPServer 
この クラス は  TCPServer  型 の クラス の 上 に 構築 さ れ て お り 、 サーバ の アドレス を インスタンス 変数  server_ name および  server_port  に 記憶 し ま す 。 
サーバ は ハンドラ から アクセス 可能 で 、 通常  server  インスタンス 変数 で アクセス し ま す 。 
クラス Base HTTPRequestHandler 
この クラス は サーバ に 到着 し た リクエスト を 処理 し ま す 。 
この メソッド 自体 で は 、 実際 の リクエスト に 応答 する こと は でき ま せ ん ;  ( GET  や  POST  の よう な )  各 リクエスト メソッド を 処理 する ため に は サブ クラス 化 し な けれ ば な り ま せ ん 。 
Base HTTPRequestHandler  で は 、 サブ クラス で 使 う ため の クラス や インスタンス 変数 、 メソッド 群 を 数多く 提供 し て い ま す 。  この ハンドラ は リクエスト を 解釈 し 、 次いで リクエスト 形式 ごと に 固有 の メソッド を 呼び出 し ま す 。 
メソッド 名 は リクエスト の 名称 から 構成 さ れ ま す 。 
例えば 、 リクエスト メソッド  " SPAM "  に 対 し て は 、 do _ SPAM ( )  メソッド が 引数 なし で 呼び出 さ れ ま す 。 
リクエスト に 関連 する 情報 は 全て 、 ハンドラ の インスタンス 変数 に 記憶 さ れ て い ま す 。 
サブ クラス で は  __init_ _( )  メソッド を 上書き し たり 拡張 し たり する 必要 は あ り ま せ ん 。 
Base HTTPRequestHandler  は 以下 の インスタンス 変数 を 持 っ て い ま す : 
HTTP  クライアント の アドレス を 参照 し て い る 、 ( host ,  port )  の 形式 を と る タプル が 入 っ て い ま す 。 
HTTP  命令  ( リクエスト 形式 )  が 入 っ て い ま す 。 
例えば ' GET '  で す 。 
リクエスト さ れ た パス が 入 っ て い ま す 。 
リクエスト の バージョン 文字 列 が 入 っ て い ま す 。 
例えば ' HTTP \/ 1 . 0 ' で す 。 
MessageClass  クラス 変数 で 指定 さ れ た クラス の インスタンス を 保持 し て い ま す 。 
この インスタンス は  HTTP  リクエスト の ヘッダ を 解釈 し 、 管理 し て い ま す 。 
入力 ストリーム が 入 っ て お り 、 その ファイル ポインタ は オプション 入力 データ 部 の 先頭 を 指 し て い ま す 。 
クライアント に 返送 する 応答 を 書き込 む ため の 出力 ストリーム が 入 っ て い ま す 。  この ストリーム に 書き込 む 際 に は 、 HTTP  プロトコル に 従 っ た 形式 を と ら な けれ ば な り ま せ ん 。 
Base HTTPRequestHandler  は 以下 の クラス 変数 を 持 っ て い ま す : 
サーバ の ソフトウェア バージョン を 指定 し ま す 。 
この 値 は 上書き する 必要 が 生じ る か も しれ ま せ ん 。  書式 は 複数 の 文字 列 を 空白 で 分割 し た もの で 、 各 文字 列 は ソフトウェア 名 [ \/ バージョン ]  の 形式 を と り ま す 。 
例えば 、 ' Base HTTP \/ 0 . 2 '  で す 。 sys_ version 
Python  処理 系 の バージョン が 、 version_string  メソッド や server_ version  クラス 変数 で 利用 可能 な 形式 で 入 っ て い ま す 。 
例えば ' Python \/ 1 . 4 '  で す 。 
クライアント に 返 す エラー 応答 を 構築 する ため の 書式 化 文字 列 を 指定 し ま す 。 
この 文字 列 は 丸括弧 で 囲 っ た キー 文字 列 で 指定 する 形式 を 使 う の で 、 書式 化 の 対象 と な る 値 は 辞書 で な けれ ば な り ま せ ん 。 
message  および  explain  の 標準 の 値 は response  クラス 変数 で みつけ る こと が でき ま す 。 
この 値 に は 応答 に 使 わ れ る  HTTP  プロトコル の バージョン を 指定 し ま す 。 
' HTTP \/ 1 . 1 '  に 設定 さ れ る と 、 サーバ は 持続 的  HTTP  接続 を 許可 し ま す ;  しかし その 場合 、 サーバ は 全て の クライアント に 対 する 応答 に 、 正確 な 値 を 持 つ  Content -Length  ヘッダ を  ( send _header ( )  を 使 っ て )  含め  な けれ ば な り ま せ ん 。 
以前 の バージョン と の 互換 性 を 保 つ ため 、 標準 の 設定 値 は ' HTTP \/ 1 . 0 '  で す 。 
HTTP  ヘッダ を 解釈 する ため の  rfc 822 . Message  類似 の クラス を 指定 し ま す 。 
通常 この 値 が 上書き さ れ る こと は な く 、 標準 の 値 mimetools . Message  に な っ て い ま す 。 
この 変数 は エラー コード を 表 す 整数 を 二 つ の 要素 を も つ タプル に 対応 付け ま す 。  タプル に は 短 い メッセージ と 長 い メッセージ が 入 っ て い ま す 。 
例えば 、 { code : ( shortmessage ,  longmessage ) } と い っ た よう に な り ま す 。 
shortmessage  は 通常 、 エラー 応答 に お け る  message  キー の 値 と し て 使 わ れ 、 longmessage  は  explain  キー の 値 と し て 使 わ れ ま す ( error _message_ format  クラス 変数 を 参照 し て くださ い )  。 
Base HTTPRequestHandler  インスタンス は 以下 の メソッド を 持 っ て い ま す : 
handle_one _request ( )  を 一 度 だけ  ( 持続 的 接続 が 有効 に な っ て い る 場合 に は 複数 回 )  呼び出 し て 、 HTTP  リクエスト を 処理 し ま す 。  この メソッド を 上書き する 必要 は まったく あ り ま せ ん ;  そう する 代わり に 適切 な  do_*()  を 実装 し て くださ い 。 
この メソッド は リクエスト を 解釈 し 、 適切 な  do_*( )  メソッド に 転送 し ま す 。 
この メソッド を 上書き する 必要 は まったく あ り ま せ ん 。 
完全 な エラー 応答 を クライアント に 送信 し 、 ログ 記録 し ま す 。 
code  は 数値 型 で 、  HTTP  エラー コード を 指定 し ま す 。  message  は オプション で 、 より 詳細 な メッセージ テキスト で す 。 
完全 な ヘッダ の セット が 送信 さ れ た 後 、 error _message_ format クラス 変数 を 使 っ て 組み立て られ た テキスト が 送 ら れ ま す 。 
応答 ヘッダ を 送信 し 、 受理 し た リクエスト を ログ 記録 し ま す 。 
HTTP 応答 行 が 送 ら れ た 後 、 Server  および  Date  ヘッダ が 送 ら れ ま す 。 
これ ら 二 つ の ヘッダ は それぞれ  version_string ( )  および  date_time_string ( )  メソッド で 取り出 し ま す 。 
出力 ストリーム に 特定 の  HTTP  ヘッダ を 書き込 み ま す 。 
keyword は ヘッダ の キー ワード を 指定 し 、 value  に は その 値 を 指定 し ま す 。 
応答 中 の  HTTP  ヘッダ の 終了 を 示 す 空行 を 送信 し ま す 。 
受理 さ れ た  ( 成功 し た )  リクエスト を ログ に 記録 し ま す 。  code  に は この 応答 に 関連 付け られ た  HTTP  コード 番号 を 指定 し ま す 。 
応答 メッセージ の 大き さ を 知 る こと が でき る 場合 、 size  パラメタ に 渡 す と よ い で しょ う 。 
リクエスト を 遂行 でき な かっ た 際 に 、 エラー を ログ に 記録 し ま す 。 
標準 で は 、 メッセージ を  log _message ( )  に 渡 し ま す 。  従 っ て 同じ 引数  ( format  と 追加 の 値 )  を 取 り ま す 。 
任意 の メッセージ を  sys . stderr  に ログ 記録 し ま す 。 
この メソッド は 通常 、 カスタム の エラー ログ 記録 機構 を 作成 する ため に 上書き さ れ ま す 。 
format  引数 は 標準 の  printf  形式 の 書式 化 文字 列 で 、 log _message ( )  に 渡 さ れ た 追加 の 引数 は 書式 化 の 入力 と し て 適用 さ れ ま す 。 
ログ 記録 さ れ る 全て の メッセージ に は 、 クライアント の アドレス および 現在 の 日付 、 時刻 が 先頭 に 付け られ ま す 。 
サーバ ソフトウェア の バージョン 文字 列 を 返 し ま す 。 
この 文字 列 は クラス 変数  server_ version  および  sys_ version  を 組み合わせ た もの で す 。 
メッセージ ヘッダ 向け に 書式 化 さ れ た 、 現在 の 日付 および 時刻 を 返 し ま す 。 
ログ 記録 向け に 書式 化 さ れ た 、 現在 の 日付 および 時刻 を 返 し ま す 。 
ログ 記録 向け に 書式 化 さ れ た 、 クライアント の アドレス を 返 し ま す 。 
この とき クライアント の  IP  アドレス に 対 する 名前 解決 を 行 い ま す 。 
参考 : 
: モジュール 
CGI  スクリプト を サポート する よう に 拡張 さ れ た リクエスト ハンドラ 。 
ドキュメント ルート の 下 に あ る ファイル に 対 する 要求 へ の 応答 のみ に 制限 し た 基本 リクエスト ハンドラ 。  . 
バージョン  2 . 3  で  変更  さ れ た 仕様 : Disabled  module 
警告 : この ドキュメント は 、 Bastion モジュール を 使用 し て い る 古 い コード を 読 む 際 の 参照 用 と し て 残 さ れ て い ま す 。 
辞書 に よ る と 、 バスティアン  ( bastion 、 要塞 )  と は 、 ` ` 防衛 さ れ た 領域 や 地点 ' ' 、 また は  ` ` 最後 の 砦 と 考え られ て い る もの ' ' で あ り 、 オブジェクト の 特定 の 属性 へ の アクセス を 禁じ る 方法 を 提供 する この モジュール に ふさわし い 名前 で す 。 
制限 モード 下 の プログラム に 対 し て 、 ある オブジェクト に お け る 特定 の 安全 な 属性 へ の アクセス を 許可 し 、 かつ その 他 の 安全 で な い 属性 へ の アクセス を 拒否 する に は 、 要塞 オブジェクト は 常 に 
モジュール と 共 に 使 わ れ な けれ ば な り ま せ ん 。 
オブジェクト  object  を 保護 し 、 オブジェクト に 対 する 要塞 オブジェクト を 返 し ま す 。 
オブジェクト の 属性 に 対 する アクセス の 試み は 全て 、 filter  関数 に よ っ て 認可 さ れ な けれ ば な り ま せ ん ;  アクセス が 拒否 さ れ た 場合  AttributeError  例外 が 送出 さ れ ま す 。 filter  が 存在 する 場合 、 この 関数 は 属性 名 を 含 む 文字 列 を 受理 し 、 その 属性 に 対 する アクセス が 許可 さ れ る 場合 に は 真 を 返 さ な けれ ば な り ま せ ん ; filter  が 偽 を 返 す 場合 、 アクセス は 拒否 さ れ ま す 。 
標準 の フィルタ は 、 アンダース コア  ( "_")  で 始ま る 全て の 関数 に 対 する アクセス を 拒否 し ま す 。 
name  の 値 が 与え られ た 場合 、 要塞 オブジェクト の 文字 列 表現 は  " Bastion  for  name "  に な り ま す ;  そう で な い 場合 、 " repr (object ) "  が 使 わ れ ま す 。 
class  が 存在 する 場合 、 BastionClass  の サブ クラス で な く て は な り ま せ ん ;  詳細 は  bastion . py  の コード を 参照 し て くださ い 。 
稀 に  BastionClass  の 標準 設定 を 上書き する 必要 ほとんど な い はず で す 。 
クラス BastionClass 
実際 に 要塞 オブジェクト を 実装 し て い る クラス で す 。 
この クラス は Bastion ( )  に よ っ て 使 わ れ る 標準 の クラス で す 。 
getfunc  引数 は 関数 で 、 唯一 の 引数 で あ る 属性 の 名前 を 与え て 呼び出 し た 際 、 制限 さ れ た 実行 環境 に 対 し て 、 開示 す べ き 属性 の 値 を 返 し ま す 。  name  は  BastionClass  インスタンス の repr ( )  を 構築 する ため に 使 わ れ ま す 。 
CGIHTTPServer  モジュール で は 、 Base HTTPServer . Base HTTPRequestHandler  互換 の インタフェース を 持 ち 、 Simple HTTPServer . Simple HTTPRequestHandler  の 動作 を 継承 し て い ま す が  CGI  スクリプト を 動作 する こと も でき る 、 HTTP  要求 処理 機構 クラス を 定義 し て い ま す 。 
注意 : この モジュール は  CGI  スクリプト を  Unix  および  Windows  システム 上 で 実行 さ せ る こと が でき ま す ;  Mac  OS  上 で は 、 自分 と 同じ プロセス 内 で Python  スクリプト を 実行 する こと しか でき な い はず で す 。 
CGIHTTPServer  モジュール で は 、 以下 の クラス を 定義 し て い ま す : 
クラス CGIHTTPRequestHandler 
この クラス は 、 現在 の ディレクトリ か その 下 の ディレクトリ に お い て 、 ファイル か CGI  スクリプト 出力 を 提供 する ため に 使 わ れ ま す 。 
HTTP  階層 構造 から ローカル な ディレクトリ 構造 へ の 対応 付け は Simple HTTPServer . Simple HTTPRequestHandler  と 全く 同じ な の で 注意 し て くださ い 。  この クラス で は 、 ファイル が  CGI  スクリプト で あ る と 推測 さ れ た 場合 、 これ を ファイル し て 提供 する 代わり に スクリプト を 実行 し ま す 。 
他 の 一般 的 な サーバ 設定 は 特殊 な 拡張 子 を 使 っ て  CGI  スクリプト で あ る こと を 示 す の に 対 し 、 ディレクトリ ベース の  CGI  だけ が 使 わ れ ま す 。  do _ GET ( )  および  do _ HEAD ( )  関数 は 、 HTTP  要求 が  cgi_directories  パス 以下 の どこ か を 指 し て い る 場合 、 ファイル を 提供 する の で は な く 、 CGI  スクリプト を 実行 し て その 出力 を 提供 する よう に 変更 さ れ て い ま す 。 
CGIHTTPRequestHandler  で は 以下 の データ メンバ を 定義 し て い ま す : 
この 値 は 標準 で  ['\/cgi- bin' , '\/htbin' ]  で あ り 、 CGI  スクリプト を 含 ん で い る こと を 示 す ディレクトリ を 記述 し ま す 。 
CGIHTTPRequestHandler  で は 以下 の メソッド を 定義 し て い ま す : 
この メソッド は 、 CGI  スクリプト で のみ 許 さ れ て い る  ' POST ' 型 の  HTTP  要求 に 対 する サービス を 行 い ま す 。 
CGI  で な い  url  に 対 し て  POST  を 試み た 場合 、 出力 は Error  501 ,  " Can only  POST  to  CGI  scripts "  に な り ま す 。 
セキュリティ 上 の 理由 から 、 CGI  スクリプト は ユーザ  nobody  の  UID  で 動作 する の で 注意 し て くださ い 。 
CGI  スクリプト が 原因 で 発生 し た 問題 は 、 Error  403  に 変換 さ れ ま す 。 
使用 例 に つ い て は 、 test ( )  関数 の 実装 を 参照 し て くださ い 。 
参考 : 
Web  サーバ と リクエスト 処理 機構 を 実装 し た 基底 クラス で す 。  . 
Macintosh プラットフォーム で 利用 でき ま す 。 
CFBase ,  CFArray ,  CFData ,  CFDictionary , CFString  と  CFURL  オブジェクト が いくら か 部分 的 に サポート さ れ て い ま す 。 
ColorPicker  モジュール は 標準 色 選択 ダイアログ へ の アクセス を 提供 し ま す 。 
標準 色 選択 ダイアログ を 表示 し 、 ユーザ が 色 を 選択 する こと を 可能 に し ま す 。 
この モジュール で は ,  ConfigParser クラス を 定義 し て い ま す 。 
ConfigParser  クラス は , Microsoft  Windows  の  INI ファイル に 見 られ る よう な 構造 を も つ , 基礎 的 な 設定 ファイル を 実装 し て い ま す . この モジュール を 使 っ て , エンド ユーザー が 簡単 に カスタマイズ でき る よう な Python  プログラム を 書 く こと が でき ま す 。 
警告 : この ライブラリ で は 、 Windows の レジストリ 用 に 拡張 さ れ た  INI  文法 は サポート し て い ま せ ん 。 
設定 ファイル は  1  つ 以上 の セクション から な り 、 セクション は " [ section ] "  ヘッダ と それ に 続 く RFC  82 2  形式 の " name : value "  エントリ から な っ て い ま す 。 
例 : 
この 場合 " % ( dir) s " は 変数 " dir "  ( この 場合 は " frob " ) に 展開 さ れ ま す 。 
参照 の 展開 は 必要 に 応 じ て 実行 さ れ ま す 。  デフォルト 値 は ConfigParser の コンストラクタ に 辞書 と し て 渡 す こと で 設定 でき ま す 。 
追加 の ( 他 の 値 を オーバーライド する ) デフォルト 値 は get ( ) メソッド に 渡 す こと が でき ま す 。 
クラス Raw ConfigParser 
基本 的 な 設定 オブジェクト で す 。 
defaults が 与え られ た 場合 、 オブジェクト に 固有 の デフォルト 値 が その 値 で 初期 化 さ れ ま す 。 
この クラス は 値 の 置換 を サポート し ま せ ん 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
クラス ConfigParser 
Raw ConfigParser の 派生 クラス で 値 の 置換 を 実装 し て お り 、 get ( ) メソッド と items ( ) メソッド に 省略 可能 な 引数 を 追加 し て い ま す 。 
defaults に 含 ま れ る 値 は " % ( ) s " に よ る 値 の 置換 に 適当 な もの で あ る 必要 が あ り ま す 。 
_ _ name__ は 組み込み の デフォルト 値 で 、 セクション 名 が 含 ま れ る の で defaults で 設定 し て も オーバーライド さ れ ま す 。  置換 で 使 わ れ る すべて の オプション 名 は 、 ほか の オプション 名 へ の 参照 と 同様 に optionxform ( )  メソッド を 介 し て 渡 さ れ ま す 。 
たとえば 、 optionxform ( )  の デフォルト 実装  ( これ は オプション 名 を 小 文字 に 変換 し ま す )  を 使 う と 、 値  " foo % ( bar) s "  および  " foo % ( BAR ) s "  は 同一 に な り ま す 。 
クラス Safe ConfigParser 
ConfigParser の 派生 クラス で より 安全 な 値 の 置換 を 実装 し て い ま す 。 
指定 し た セクション が 見つか ら な かっ た 時 に 起き る 例外 で す 。 
すでに 存在 する セクション 名 に 対 し て  add_ section ( )  が 呼び出 さ れ た 際 に 起き る 例外 で す 。 
指定 し た オプション が 指定 し た セクション に 存在 し な かっ た 時 に 起き る 例外 で す 。 
文字 列 の 置換 中 に 問題 が 起き た 時 に 発生 する 例外 の 基底 クラス で す 。 
InterpolationError の 派生 クラス で 、 文字 列 の 置換 回数 が MAX _ INTERPOLATION _ DEPTH を 越え た ため に 完了 し な かっ た 場合 に 発生 する 例外 で す 。 
InterpolationError の 派生 クラス で 、 値 が 参照 し て い る オプション が 見つか ら な い 場合 に 発生 する 例外 で す 。 
InterpolationError の 派生 クラス で 、 指定 さ れ た 構文 で 値 を 置換 する こと が でき な かっ た 場合 に 発生 する 例外 で す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
セクション ヘッダ を 持 た な い ファイル を 構文 解析 し よう と し た 時 に 起き る 例外 で す 。 
ファイル の 構文 解析 中 に エラー が 起き た 場合 に 発生 する 例外 で す 。 
ConfigParser クラス だけ に 関係 し ま す 。 
Unix  の シェル に 似 た , アプリケーション の 設定 ファイル 用 フォーマット と し て 使え る もう 一 つ の 小型 言語 で す . . 
Cookie モジュール は HTTP の 状態 管理 機能 で あ る cookie の 概念 を 抽象 化 、 定義 し て い る クラス で す 。 
単純 な 文字 列 のみ で 構成 さ れ る cookie の ほか 、 シリアル 化 可能 な あらゆる データ 型 で クッキー の 値 を 保持 する ため の 機能 も 備え て い ま す 。  この モジュール は 元々 RFC  2109 と RFC  2068 に 定義 さ れ て い る 構文 解析 の 規則 を 厳密 に 守 っ て い ま し た 。 
しかし 、 MSIE  3 . 0 x が これ ら の RFC で 定義 さ れ た 文字 の 規則 に 従 っ て い な い こと が 判明 し た ため 、 結局 、 やや 厳密 さ を 欠 く 構文 解析 規則 に せ ざる を 得 ま せ ん で し た 。 
属性 や Set - Cookie : ヘッダ が 正し く な い など 、 RFC  2109 に 合致 し て い な い とき に 発生 する 例外 で す 。 
クラス Base Cookie 
この クラス は キー が 文字 列 、 値 が Morsel インスタンス で 構成 さ れ る 辞書 風 オブジェクト で す 。 
値 に 対 する キー を 設定 する とき は 、 値 が キー と 値 を 含 む Morsel に 変換 さ れ る こと に 注意 し て くださ い 。  input が 与え られ た とき は 、 その まま load ( ) メソッド へ 渡 さ れ ま す 。 
クラス SimpleCookie 
この クラス は Base Cookie の 派生 クラス で 、 value_decode ( )  は 与え られ た 値 の 正当 性 を 確認 する よう に 、 value _encode ( ) は str ( ) で 文字 列 化 する よう に それぞれ オーバライド し ま す 。 
クラス Serial Cookie 
この クラス は Base Cookie の 派生 クラス で 、 value_decode ( ) と value _encode ( ) を それぞれ pickle . loads ( ) と pickle . dumps ( ) を 実行 する よう に オーバーライド し ま す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。  この クラス を 使 っ て は いけ ま せ ん !  信頼 でき な い cookie の データ から  pickle  化 さ れ た 値 を 読み込 む こと は 、 あなた の サーバ 上 で 任意 の コード を 実行 する ため に  pickle  化 し た 文字 列 の 作成 が 可能 で あ る こと を 意味 し 、 重大 な セキュリティ ホール と な り ま す 。 
クラス SmartCookie 
この クラス は Base Cookie の 派生 クラス で 、 value_decode ( )  を 、 値 が  pickle  化 さ れ た データ と し て 正当 な とき は pickle . loads ( ) を 実行 、 そう で な い とき は その 値 自体 を 返 す よう に オーバーライド し ま す 。 
また value _encode ( ) を 、 値 が 文字 列 以外 の とき は pickle . dumps ( ) を 実行 、 文字 列 の とき は その 値 自体 を 返 す よう に オーバーライド し ま す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。  Serial Cookie と 同じ セキュリティ 上 の 注意 が 当てはま り ま す 。 
関連 し て 、 さらなる セキュリティ 上 の 注意 が あ り ま す 。 
後方 互換 性 の ため 、 Cookie モジュール は Cookie と い う クラス 名 を SmartCookie の エイリアス と し て エクスポート し て い ま す 。 
これ は ほぼ 確実 に 誤 っ た 措置 で あ り 、 将来 の バージョン で は 削除 する こと が 適当 と 思 わ れ ま す 。 
アプリケーション に お い て Serial Cookie クラス を 使 う べ き で な い の と 同じ 理由 で Cookie クラス を 使 う べ き で は あ り ま せ ん 。 
Web クライアント 向け の  HTTP  クッキー 処理 で す 。 
cookielib と Cookie は 互い に 独立 し て い ま す 。  . 
この モジュール が 実装 し て い る HTTP の 状態 管理 に 関 する 規格 で す 。 
20 .  SGI  IRIX  特有 の サービス 
IRIX プラットフォーム で 利用 でき ま す 。 
この モジュール に は 、 Silicon  Graphics の Graphics  Library で 使 わ れ る 定数 が 定義 さ れ て い ま す 。  これ ら は C の プログラマー が ヘッダー ファイル gl \/ device . h の 中 から 使 っ て い る もの で す 。 
詳し く は モジュール の ソース ファイル を ご覧 くださ い 。 
DocXMLR PCServer  モジュール は  SimpleXMLR PCServer  クラス を 拡張 し 、 HTTP  GET  リクエスト に 対 し  HTML  ドキュメント を 返 し ま す 。 
サーバ は  DocXMLR PCServer  を 使 っ た スタンド アロン 環境 、 DocCGIXMLR PCRequestHandler  を 使 っ た  CGI  環境 の 2 つ が あ り ま す 。 
クラス DocXMLR PCServer 
当た な サーバ ・ インスタンス を 生成 し ま す 。 
各 パラメータ の 内容 は SimpleXMLR PCServer . SimpleXMLR PCServer  の もの と 同じ で す が 、 requestHandler  の デフォルト は  DocXMLR PCRequestHandler  に な っ て い ま す 。 
クラス DocCGIXMLR PCRequestHandler 
CGI 環境 に  XMR - RPC  リクエスト ・ ハンドラ の 新た な インスタンス を 生成 し ま す 。 
クラス DocXMLR PCRequestHandler 
リクエスト ・ ハンドラ の 新た な インスタンス を 生成 し ま す 。 
この リクエスト ・ ハンドラ は  XML - RPC  POST  リクエスト 、 ドキュメント の  GET 、 そして DocXMLR PCServer  コンストラクタ に 与え られ た  logRequests  パラメータ 設定 を 優先 する ため 、 ロギング の 変更 を サポート し ま す 。 
EasyDialogs モジュール に は 、  Macintosh  で 単純 な ダイアログ 操作 を 行 う ため の ルーチン が 入 っ て い ま す 。 
EasyDialogs  モジュール で は 以下 の 関数 を 定義 し て い ま す 。 
メッセージ テキスト str 付き の モーダル ダイアログ を 表示 し ま す 。  テキスト の 長 さ は 最大 255 文字 で す 。 
ボタン の テキスト は デフォルト で は ` ` OK ' ' で す が 、 文字 列 の 引数 ok  を 指定 し て 変更 でき ま す 。 
ユーザ が ` ` OK ' ' ボタン を クリック する と 処理 を 戻 し ま す 。 
ユーザ に 文字 列 値 の 入力 を 促 す モーダル ダイアログ を 表示 し ま す 。 
prompt は プロンプト メッセージ で 、 オプション の default  引数 は 入力 文字 列 の 初期 値 で す ( 指定 し な けれ ば " "  を 使 い ま す ) 。 
` ` OK ' ' と `` Cancel ' ' ボタン の 文字 列 は ok と cancel の 引数 で 変更 でき ま す 。 
文字 列 の 長 さ は 全て 最大 255 文字 で す 。  入力 さ れ た 文字 列 か 、 ユーザ が キャンセル し た 場合 に は None を 返 し ま す 。 
ユーザ に 文字 列 値 の 入力 を 促 す モーダル ダイアログ を 表示 し ま す 。 
AskString ( ) に 似 て い ま す が 、 ユーザ の 入力 し た テキスト は 点 で 表示 さ れ ま す 。 
引数 は AskString ( ) の もの と 同じ 意味 で す 。 
プロンプト question と ` ` Yes ' '、 `` No ' '、 `` Cancel ' ' と い う ラベル の 3 つ ボタン が 付 い た ダイアログ を 表示 し ま す 。 
ユーザ が ` ` Yes ' ' を 押 し た 場合 に は 1  を 、 `` No' ' なら ば 0  を 、 `` Cancel ' ' なら ば - 1  を 返 し ま す 。 
RETURN キー を 押 し た 場合 は default の 値 ( default  を 指定 し な い 場合 は 0 ) を 返 し ま す 。 
ボタン の テキスト は それぞれ 引数  yes 、 no 、 cancel で 変更 でき ま す 。  ボタン を 表示 し た く な けれ ば 引数 に " " を 指定 し ま す 。 
プログレス バー 付き の モードレス ダイアログ を 表示 し ま す 。 
コマンドライン 引数 リスト の 作成 を 補助 する ため の ダイアログ を 表示 し ま す 。 
これ ら の 引数 が 真 の 場合 、 それぞれ 実在 の ファイル 、 まだ  ( おそらく )  存在 し な い ファイル 、 フォルダ へ の パス を コマンドライン の パス と し て 設定 でき ま す 。  ( 注意 :  getopt . getopt ( )  が ファイル や フォルダ 引数 を 認識 でき る よう に する ため に は 、 オブション の 引数 が それ ら より 前 に 現れ る よう に し な けれ ば な り ま せ ん 。 
) 空白 を 含 む 引数 は 、 空白 を シングル クォート あるいは ダブル クォート で 囲 ん で 指定 でき ま す 。 
ユーザ が ` ` Cancel ' ' ボタン を 押 し た 場合 、 SystemExit 例外 を 送出 し ま す 。 
option list  に は 、 ポップ アップ メニュー で 選べ る 選択 肢 を 定義 し た リスト を 指定 し ま す 。 
ポップ アップ メニュー の 要素 に は 、 次 の 2 つ の 形式 、 optstr  また は (optstr ,  descr )  が あ り ま す 。 
descr  に 短 い 説明 文字 列 を 指定 する と 、 該当 の 選択 肢 を ポップ アップ メニュー で 選択 し い る 間 その 文字 列 を ダイアログ に 表示 し ま す 。 
optstr と コマンドライン 引数 の 対応 を 以下 に 示 し ま す : 
- x ( 短 い オプション ) 
x : あるいは x = 
- x  ( 値 を 持 つ 短 い オプション ) 
- - xyz  ( 長 い オプション ) 
xyz : あるいは xyz = 
- - xyz ( 値 を 持 つ 長 い オプション ) 
commandlist は cmdstr あるいは ( cmdstr , descr ) の 形 の アイテム から な る リスト で す 。  descr は 上 と 同じ で す 。 
cmdstr は ポップ アップ メニュー に 表示 さ れ ま す 。 
メニュー を 選択 する と cmdstr  は コマンドライン に 追加 さ れ ま す が 、 それ に 続 く " : " や " = "  は  ( 存在 し て い れ ば )  取り除 か れ ま す 。 
どの ファイル を 開 く か を ユーザ に 尋ね る ダイアログ を 表示 し 、 ユーザ が 選択 し た ファイル を 返 し ま す 。 
ユーザ が ダイアログ を キャンセル し た 場合 に は None を 返 し ま す 。 
その 他 の 引数 の 説明 に つ い て は Apple  Navigation  Services の ドキュメント と EasyDialogs の ソース コード を 参照 し て くださ い 。 
保存 先 の ファイル を ユーザ に 尋ね る ダイアログ を 表示 し て 、 ユーザ が 選択 し た ファイル を 返 し ま す 。 
ユーザ が ダイアログ を キャンセル し た 場合 に は None を 返 し ま す 。 
savedFileName  は 保存 先 の ファイル 名  ( 戻り 値 )  の デフォルト 値 で す 。 
その 他 の 引数 の 説明 に つ い て は AskFileFor Open ( ) を 参照 し て くださ い 。 
フォルダ の 選択 を ユーザ に 促 す ダイアログ を 表示 し て 、 ユーザ が 選択 し た フォルダ を 返 し ま す 。 
ユーザ が ダイアログ を キャンセル し た 場合 に は None を 返 し ま す 。 
Programmer's  reference  documentation の  Carbon  framework  の  Navigation  Services  の 項 。 
2 . 8 . 1  プログレス バー オブジェクト 
FrameWork  モジュール は 、 対話 型  Macintosh  アプリケーション の クラス で 、 同時 に フレームワーク を 提供 し ま す 。 
プログラマ は 、 サブ クラス を 作 っ て 基底 クラス の 様々 な メソッド を オーバーライド し 、 必要 な 機能 を 実装 する こと で アプリケーション を 組み立て られ ま す 。 
ソース か 例題 を 詳し く 見 て くださ い 。 
次 に あげ る の は 、 MacPython  ニュース グループ に ポスト さ れ た コメント で 、 FrameWork  の 強力 さ と 限界 に つ い て 述べ て い ま す 。 
FrameWork  の 最大 の 強み は 、 制御 の 流れ を たくさん の 異な る 部分 に 分割 でき る こと で す 。 
例えば  W 
を 使 っ て 、 いろいろ な 方法 で メニュー を オン \/ オフ し たり 、 残り を いじ ら ず に うま く プラグ イン さ せ る こと が でき ま す 。 
FrameWork  の 弱点 は 、 コマンド インタフェース が 抽象 化 さ れ て い な い こと ( と い っ て も 難し い わけ で は な い で す が ) 、 ダイアログ サポート が 最低 限 しか な い こと 、 それ から コントロール \/ ツール バー サポート が 全く な い こと で す 。 
FrameWork  モジュール は 次 の 関数 を 定義 し て い ま す 。 
アプリケーション 全体 を 表現 し て い る オブジェクト 。 
メソッド に つ い て の 詳細 は 以下 の 記述 を 参照 し て くださ い 。 
デフォルト  __init_ _( )  ルーチン は 、 空 の ウィンドウ 辞書 と アップル メニュー つきの メニュー バー を を 作成 し ま す 。 
メニュー バー を 表現 する オブジェクト 。 
この オブジェクト は 普通 は ユーザ は 作成 し ま せ ん 。 
メニュー を 表現 する オブジェクト 。 
生成 時 に は 、 メニュー が 現われ る  MenuBar  と 、 title  文字 列 、 メニュー が 表示 さ れ る べ き ( 1 から 始ま る ) 位置  after  ( デフォルト は 末尾 ) を 渡 し ま す 。 
メニュー アイテム オブジェクト を 作成 し ま す 。 
引数 は 作成 する メニュー と 、 アイテム の タイトル 文字 列 、 オプション の キーボード ショート カット 、 コール バック ルーチン で す 。 
コール バック は 、 メニュー ID 、 メニュー 内 の アイテム 番号 ( 1 から 数え る ) 、 現在 の フロント ウィンドウ 、 イベント レコード を 引数 に 呼 ば れ ま す 。  呼び出し 可能 な オブジェクト の かわり に 、 コール バック は 文字 列 で も 良 い で す 。 
この 場合 、 メニュー の 選択 は 、 最 前面 の ウィンドウ と アプリケーション の 中 で メソッド 探索 を 引き起こ し ま す 。 
メソッド 名 は 、 コール バック 文字 列 の 前 に ' domenu_' を 付け た もの で す 。  MenuBar  の  fixmenudimstate ( ) メソッド を 呼びだ す と 、 現在 の フロント ウィンドウ に もとづ い て 、 適切 な ディム 化 を 全て の メニュー アイテム に 対 し て ほどこ し ま す 。 
メニュー の 最後 に セパレータ を 追加 し ま す 。 
label  の 名前 の サブ メニュー を 、 メニュー  menu  の 下 に 作成 し ま す 。 
メニュー オブジェクト が 返 さ れ ま す 。 
( モードレス ) ウィンドウ を 作成 し ま す 。 
Parent  は 、 ウィンドウ が 属 する アプリケーション オブジェクト で す 。 
作成 さ れ た ウィンドウ は まだ 表示 さ れ ま せ ん 。 
モードレス ダイアログ ウィンドウ を 作成 し ま す 。 
与え た 幅 と 高 さ の ウィンドウ を 作成 する の に 必要 な 、 ( left , top ,  right ,  bottom)  から な る タプル を 返 し ま す 。 
ウィンドウ は 以前 の ウィンドウ に 対 し て 位置 を ずら し て 作成 さ れ 、 全体 の ウィンドウ が 画面 から なるべく 外れ な い よう に し ま す 。 
しかし 、 ウィンドウ は いつ で も 全く 同じ サイズ で 、 その ため 一部 は 画面 から 隠れ る 場合 も あ り ま す 。 
マウス カーソル を 時計 型 に 設定 し ま す 。 
マウス カーソル を 矢印 型 に 設定 し ま す 。 
2 . 9 . 1  アプリケーション オブジェクト 
13 .  構造 化 マーク アップ ツール 
13 . 1 . 1  HTML  パーザ アプリケーション の 例 
この モジュール で は  HTMLParser  クラス を 定義 し ま す 。  この クラス は  HTML 
( ハイパー テキスト 記述 言語 、 HyperText  Mark - up  Language )  および  X HTML 
で 書式 化 さ れ て い る テキスト ファイル を 解釈 する ため の 基礎 と な り ま す 。 
に ある パーザ と 違 っ て 、 この パーザ は 
の  SGML  パーザ に 基づ い て は い ま せ ん 。 
クラス HTMLParser 
HTMLParser  クラス は 引数 なし で イン スタンス 化 し ま す 。 
HTMLParser  インスタンス に  HTML  データ が 入力 さ れ る と 、 タグ が 開始 し た とき 、 及び 終了 し た とき に 関数 を 呼び出 し ま す 。 
HTMLParser  クラス は 、 ユーザ が 行 い た い 動作 を 提供 する ため に 上書き でき る よう に な っ て い ま す 。 
の パーザ と 違 い 、 この パーザ は 終了 タグ が 開始 タグ と 一致 し て い る か 調べ たり 、 外側 の タグ 要素 が 閉じ る とき に 内側 で 明示 的 に 閉じ られ て い な い タグ 要素 の タグ 終了 ハンドラ を 呼び出 し たり は し ま せ ん 。 
例外 も 定義 さ れ て い ま す : 
パーズ 中 に エラー に 遭遇 し た 場合 に HTMLParser  クラス が 送出 する 例外 で す 。 
この 例外 は 三 つ の 属性 を 提供 し て い ま す :  msg  は エラー の 内容 を 説明 する 簡単 な メッセージ 、 lineno  は 壊れ た マーク アップ 構造 を 検出 し た 場所 の 行 番号 、 offset  は 問題 の マーク アップ 構造 の 行内 で の 開始 位置 を 示 す 文字 数 で す 。 
HTMLParser  インスタンス は 以下 の メソッド を 提供 し ま す : 
インスタンス を リセット し ま す 。 
未 処理 の データ は 全て 失 わ れ ま す 。 
インスタンス 化 の 際 に 非 明示 的 に 呼び出 さ れ ま す 。 
パーザ に テキスト を 入力 し ま す 。 
入力 が 完全 な タグ 要素 で 構成 さ れ て い る 場合 に 限 り 処理 が 行 わ れ ま す ;  不 完全 な データ で あ っ た 場合 、 新た に データ が 入力 さ れ る か 、 close ( )  が 呼び出 さ れ る まで バッファ さ れ ま す 。 
全て の バッファ さ れ て い る データ に つ い て 、 その 後 に ファイル 終了 マーク が 続 い て い る と みな し て 強制 的 に 処理 を 行 い ま す 。 
この メソッド は 入力 データ の 終端 で 行 う べ き 追加 処理 を 定義 する ため に 導出 クラス で 上書き する こと が でき ま す が 、 再 定義 を 行 っ た クラス で は 常 に 、 HTMLParser  基底 クラス の メソッド  close ( )  を 呼び出 さ な く て は な り ま せ ん 。 
現在 の 行 番号 および オフセット 値 を 返 し ま す 。 
最も 最近 開 か れ た 開始 タグ の テキスト 部分 を 返 し ま す 。 
この テキスト は 必ず しも 元 データ を 構造 化 する 上 で 必須 で は あ り ま せ ん が 、 ` ` 広 く 知 ら れ て い る  ( as  deployed ) ' ' HTML  を 扱 っ たり 、 入力 を 最小 限 の 変更 で 再生成  ( 属性 間 の 空白 を その まま に する 、 など )  し たり する 場合 に 便利 な こと が あ り ま す 。 
この メソッド は タグ の 開始 部分 を 処理 する ため に 呼び出 さ れ ま す 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
tag  引数 は タグ の 名前 で 、 小 文字 に 変換 さ れ て い ま す 。 
attrs  引数 は  ( name ,  value )  の ペア から な る リスト で 、 タグ の  括弧 内 に あ る 属性 が 収め られ て い ま す 。 
name  は 小 文字 に 変換 さ れ 、 value  内 の エンティティ 参照 は 変換 さ れ ま す 。  二 重 引用 符 や バックス ラッシュ は 変換 し ま せ ん 。 
例えば 、 タグ  A  HREF = " http:\/\/www .cwi.nl \/ "  を 処理 する 場合 、 この メソッド は " handle_starttag ( ' a ' , [ ( 'href ' , 'http:\/\/www .cwi.nl \/') ] ) " と し て 呼び出 さ れ ま す 。 
handle_starttag ( )  と 似 て い ま す が 、 パーザ が  X HTML  形式 の 空 タグ  ( a . . .\/ )  に 遭遇 し た 場合 に 呼び出 さ れ ま す 。 
この 特定 の 語彙 情報  ( lexical  information )  が 必要 な 場合 、 この メソッド を サブ クラス で 上書き する こと が でき ま す ;  標準 の 実装 で は 、 単に  handle_starttag ( )  および  handle_endtag ( ) を 呼 ぶ だけ で す 。 
この メソッド は あ る タグ 要素 の 終了 タグ を 処理 する ため に 呼び出 さ れ ま す 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
tag  引数 は タグ の 名前 で 、 小 文字 に 変換 さ れ て い ま す 。 
この メソッド は 、 他 の メソッド に 当てはま ら な い 任意 の データ を 処理 する ため に 呼び出 さ れ ま す 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
この メソッド は タグ 外 の  " # ref ; "  形式 の 文字 参照 ( character  reference )  を 処理 する ため に 呼び出 さ れ ま す 。  ref  に は 、 先頭 の " # "  および 末尾 の " ; "  は 含 ま れ ま せ ん 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
この メソッド は タグ 外 の  " name ; "  形式 の 一般 の エンティティ 参照  ( entity  reference )  name  を 処理 する ため に 呼び出 さ れ ま す 。  name  に は 、 先頭 の " "  および 末尾 の " ; "  は 含 ま れ ま せ ん 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
この メソッド は コメント に 遭遇 し た 場合 に 呼び出 さ れ ま す 。 
comment 引数 は 文字 列 で 、 " - "  および  " - "  デリミタ 間 の 、 デリミタ 自体 を 除 い た テキスト が 収め られ て い ま す 。 
例えば 、 コメント " ! - text - "  が あ る と 、 この メソッド は 引数 ' text '  で 呼び出 さ れ ま す 。 
パーザ が  SGML  宣言 を 読み出 し た 際 に 呼び出 さ れ る メソッド で す 。 
decl  パラメタ は  ! . . .  記述 内 の 宣言 内容 全体 に な り ま す 。  導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
処理 指令 に 遭遇 し た 場合 に 呼び出 さ れ ま す 。 
data に は 、 処理 指令 全体 が 含 ま れ 、 例えば ? proc color = 'red ' と い う 処理 指令 の 場合 、 handle_pi ( " proc color = 'red '" ) の よう に 呼び出 さ れ ま す 。 
この メソッド は 導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
注意 : The HTMLParser クラス で は 、 処理 指令 に SGML の 構文 を 使用 し ま す 。 
末尾 に " ? " が X HTML の 処理 指令 で は 、 " ? " が data に 含 ま れ ま す 。 
この モジュール は 、 Python  インタプリタ 内 の  MacOS  固有 の 機能 に 対 する アクセス を 提供 し ま す 。  例えば 、 インタプリタ の イベント ループ 関数 など で す 。 
'carbon' か 'macho' の いずれ か で す 。 
現在 利用 し て い る  Python  が  Mac  OS  X  および  Mac  OS  9 互換 性 を も つ  CarbonLib  形式 、 あるいは  Mac  OS  X  のみ の  Mach - O  形式 を の どちら で あ る か 判断 でき ま す 。 
Python  の 初期 の バージョン で は 、 値が さらに 古 い  Mac  OS  8  ラン タイム モデル 用 の 'ppc' で あ る 事 が あ り ま す 。 
インタープリタ が どの よう な 方法 で リンク さ れ て い る か を 返 し ま す 。 
拡張 モジュール が リンク モデル 間 で 非 互換 性 か も しれ な い 場合 、 パッケージ は より 多く の 適切 な エラー メッセージ を 伝え る ため に この 情報 を 使用 する こと が でき ま す 。 
値 は 静的 リンク し た  Python  は 'static ' 、 Mac  OS  X  framework  で 構築 し た  Python  は 'framework ' 、 標準 の  unix  共有 ライブラリ ( shared  library ) で 構築 さ れ た  Python  は 'shared ' 、 Mac  OS  9  互換  Python  で は ' cfm ' と な り ま す 。 
MacOS  で エラー が あ る と 、 この モジュール の 関数 か 、 Mac  固有 な ツール ボックス インターフェース モジュール から 、 この 例外 が 生成 さ れ ま す 。 
引数 は 、 整数 エラー コード ( OSErr  値 ) と テキスト で 記述 さ れ た エラー コード で す 。  分か っ て い る 全て の エラー コード の シンボル 名 は 、 標準 モジュール 
で 定義 さ れ て い ま す 。 
内部 の インタプリタループ で は 、 ScheduleParams ( )  で 止め な い かぎり 、 Python  は 時々 イベント を チェック し ま す 。 
イベント が あ る 場合 は 、 この 関数 を 使 う と 、 Python イベント ハンドラ 関数 を 渡せ ま す 。 
既に イベント ハンドラ が セット さ れ て い る の に 、 さらに セット し よう と する と エラー に な り ま す 。  有効 性 : MacPython - OS 9 
これ は インタプリタ の 内部 ループ イベント ハンドラ に 影響 を 与え ま す 。 
Interval  は 、 インタプリタ が どれ だけ の 頻度 ( 浮動 小数 点数 の 秒 で 表わ さ れ る ) で イベント 処理 コード に 入 る か を 指定 し ま す 。 
真 なら  doint  は 割り込み ( コマンド ドット ) チェック が 行 わ れ ま す 。 evtmask  は インタプリタ に 、 イベント を マスク し て  ( 再 描画 、 他 の アプリケーション に 切り替わ る マウス クリック など ) イベント 処理 する よう 指示 し ま す 。 
besocial  フラグ は 、 他 の プロセス が 動作 する チャンス を 与え ま す 。 
Python  が 最 前面 で 動 い て い る 時 は 、 最小 限 の 実行 時間 が 割り当て られ 、 Python  が 背景 に あ る 場合 は 、 interval  当り に  bgyield  秒 が 与え られ ま す 。  全て の パラメータ は オプション で 、 現在 の 値 が デフォルト 値 と な り ま す 。 
イベント レコード  ev を  Python  の イベント ループ に 渡 す 、 と い う より は 、 sys . st dout  ウィンドウ ( Python を ビルド し た コンパイラ に もとづ い て )  の ハンドラ に 渡 さ れ る こと に な り ま す 。 
MacOS の エラー コード  errno  の テキスト 表現 を 返 し ま す 。 
この 関数 は 、 resid  で 与え た  DLOG  リソース の 内容 で 、 スプラッシュ ウィンドウ を 画面 に 表示 し ま す 。 
引数 なし で 呼びだ す と 、 スプラッシュ 画面 を 取り除 き ま す 。 
拡張 モジュール を たくさん ロード さ せ る 前 に 、 初期 化 の タイミング で アプレット に スプラッシュ 画面 を 表示 さ せ た い とき に 、 この 関数 が 便利 で しょ う 。  有効 性 : MacPython - OS 9 
Mac  OS  9 上 で は 、 メッセージ  message  を 出 し て ロー レベル デバッガ に 入 り ま す 。 
オプション の  object  引数 は 使 わ れ ま せ ん が 、 デバッガ から 内容 を 容易 に 検査 する こと が でき ま す 。 
この 関数 は 主に  Python  拡張 モジュール の 開発 者 の ため に 用意 さ れ て い ま す 。 
ベル を 鳴ら し ま す 。 
システム 起動 時 から の チック 数 ( clockticks 、 1 \/ 60 秒 ) を 得 ま す 。 
2 つ の 4 文字 の 文字 列 と し て ファイル クリエータ および ファイル タイプ を 返 し ま す 。 file  引数 は パス もしくは 、 FSSpec 、 FSRef  オブジェクト を 与え る 事 が でき ま す 。 
ファイル の リソース フォーク を 開 き ま す 。 
引数 は 組み込 み 関数  open ( )  と 同じ で す 。 
返 さ れ た オブジェクト は ファイル の よう に 見え る か も しれ ま せ ん が 、 これ は  Python  の ファイル オブジェクト で は あ り ま せ ん の で 扱い に 微妙 な 違い が あ り ま す 。 
現在 の プロセス が 動作 し て い る ウィンドウ マネージャ に アクセス し ま す 。  例えば 、 Mac  OS  X  サーバー 上 、 あるいは  SSH  で ログ イン し て い る 、 もしくは 現在 の インタープリタ が フル ブ ローン アプリケーション バンドル ( fullblownapplicationbun dle ) から 起動 さ れ て い な い 場合 など の よう な 、 ウィンドウ マネージャ が 存在 し な い 場合 は  False  を 返 し ま す 。 
Mac  OS  9  上 で は この 関数 は つね に  True  を 返 し ま す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。 
パッケージ を 、 MimeWriter モジュール より も 優先 し て 使用 す べ き で す 。 
この モジュール は 、 下位 互換 性 維持 の ため だけ に 存在 し ま す 。 
この モジュール は 、 クラス  MimeWriter を 定義 し ま す 。 
この MimeWriter  クラス は 、 MIME  マルチ パート ファイル を 作成 する ため の 基本 的 な フォーマッタ を 実装 し ま す 。 
これ は 出力 ファイル 内 を あちこち 移動 する こと も 、 大量 の バッファ スペース を 使 う こと も あ り ま せ ん 。 
あなた は 、 最終 の ファイル に 現れ る で あ ろ う 順番 に 、 パート を 書 か な けれ ば な り ま せ ん 。 
MimeWriter  は 、 あなた が 追加 する ヘッダ を バッファ し て 、 それ ら の 順番 を 並び替え る こと が でき る よう に し ま す 。 
クラス MimeWriter 
MimeWriter  クラス の 新し い インスタンス を 返 し ま す 。 
渡 さ れ る 唯一 の 引数  fp  は 、 書 く ため に 使用 する ファイル オブジェクト で す 。 
StringIO  オブジェクト を 使 う こと も でき る こと に 注意 し て 下さ い 。 
12 . 8 . 1  MimeWriter  オブジェクト 
Mini AEFrame モジュール は 、 アプリケーション に オープン スクリプティング アーキテクチャ 
( OSA ) サーバ 機能 を 持 た せ る ため の フレームワーク を 提供 し ま す 。 
つまり 、 AppleEvents
の 受信 と 処理 を 行 わ せ ま す 。 
と 連携 さ せ て も 良 い し 、 単独 で も 使え ま す 。 
実例 と し て 、 この モジュール は Python CGISlave の 中 で 使 わ れ て い ま す 。  Mini AEFrame に は 以下 の クラス が 定義 さ れ て い ま す 。 
クラス AEServer 
AppleEvent の 分岐 を 処理 する クラス 。 
作成 する アプリケーション は この クラス と 、 MiniApplication あるいは FrameWork . Application の サブ クラス で な けれ ば な り ま せ ん 。 
サブ クラス 化 し た クラス で は _ _ init_ _( ) メソッド で 、 継承 し た 両方 の クラス の _ _ init_ _( ) メソッド を 呼びだ さ な けれ ば な り ま せ ん 。 
クラス MiniApplication 
FrameWork . Application と ある 程度 互換 な クラス で す が 、 機能 は 少な い で す 。 
3 . 5 . 1  AEServer  オブジェクト 
Navigation  Services の 低 レベル インターフェース 。 
Pix MapWrapper  は Pix Map  オブジェクト を  Python  オブジェクト で ラップ し た もの で 、 各 フィールド に 対 し 名前 で アクセス でき る よう に な り ま す 。 
PIL  画像 と の 相互 の 変換 を する メソッド も 用意 さ れ て い ま す 。 
7 .  オプション の オペレーティング システム サービス 
Queue モジュール は 、 多 生産 者 - 多 消費 者 FIFO キュー を 実装 し ま す 。 
これ は 、 複数 の スレッド の 間 で 情報 を 安全 に 交換 し な けれ ば な ら な い とき の スレッド プログラミング で 特に 有益 で す 。 
この モジュール の Queue クラス は 、 必要 な すべて の ロックセ マンティクス を 実装 し て い ま す 。 
これ は Python の スレッド サポート の 状況 に 依存 し ま す 。  Queue モジュール は 以下 の クラス と 例外 を 定義 し ま す : 
クラス Queue 
クラス の コンストラクタ で す 。  maxsize は キュー に 置 く こと の でき る 要素数 の 上限 を 設定 する 整数 で す 。 
いったん この 大き さ に 達 し た ら 、 挿入 は キュー の 要素 が 消費 さ れ る まで ブロック さ れ ま す 。 
もし maxsize が 0 以下 で あ る なら ば 、 キュー の 大き さ は 無限 で す 。 
空 な Queue オブジェクト で 、 非 ブロック メソッド と し て get ( ) ( また は get_nowait( ) ) が 呼 ば れ た とき 、 送出 さ れ る 例外 で す 。 
満杯 な Queue オブジェクト で 、 非 ブロック メソッド と し て put ( ) ( また は put_nowait( ) ) が 呼 ば れ た とき 、 送出 さ れ る 例外 で す 。 
Tk プラットフォーム で 利用 でき ま す 。 
ScrolledText モジュール は ` ` 正し い 動作 ' ' を する よう に 設定 さ れ た 垂直 スクロール バー を も つ 基本 的 な テキストウィ ジェット を 実装 する 同じ 名前 の クラス を 提供 し ま す 。  ScrolledText クラス を 使 う こと は 、 テキストウィ ジェット と スクロール バー を 直接 設定 する より 簡単 で す 。 
コンストラクタ は Tkinter . Text クラス の もの を 同じ で す 。  テキストウィ ジェット と スクロール バー は Frame の 中 に 一緒 に pack さ れ 、 Grid と Pack ジオ メトリ マ ネジャ の メソッド は Frame オブジェクト から 得 られ ま す 。 
これ に よ っ て 、 もっとも 標準 的 な ジオ メトリ マ ネジャ の 振る舞い に する ため に 、 直接 ScrolledText ウィ ジェット を 使え る よう に な り ま す 。  特定 の 制御 が 必要 なら ば 、 以下 の 属性 が 利用 でき ま す : 
テキスト と スクロール バー ウィ ジェット を 取り囲 む フレーム 。 
スクロール バー ウィ ジェット 。 
クラス Simple HTTPRequestHandler 
この クラス は 、 現在 の ディレクトリ 以下 に あ る ファイル を 、 HTTP  リクエスト に お け る ディレクトリ 構造 に 直接 対応 付け て 提供 する ため に 利用 さ れ ま す 。 
リクエスト の 解釈 の よう な 、 多く の 作業 は 基底 クラス Base HTTPServer . Base HTTPRequestHandler  で 行 わ れ ま す 。  この クラス は 関数  do _ GET ( )  および  do _ HEAD ( )  を 実装 し て い ま す 。 
Simple HTTPRequestHandler  で は 以下 の メンバ 変数 を 定義 し て い ま す : 
server_ version  この 値 は  " Simple HTTP \/ " + __ version__ に な り ま す 。 
_ _ version__ は この モジュール で 定義 さ れ て い る 値 で す 。 
extensions _ map  拡張 子 を  MIME  型 指定 子 に 対応 付け る 辞書 で す 。 
標準 の 型 指定 は 空 文字 列 で 表 さ れ 、 この 値 は  application\/octet - stream  と 見な さ れ ま す 。  対応 付け は 大小 文字 の 区別 を する の で 、 小 文字 の キー のみ を 入れ る べ き で す 。 
Simple HTTPRequestHandler  で は 以下 の メソッド を 定義 し て い ま す : 
この メソッド は  ' HEAD ' 型 の リクエスト 処理 を 実行 し ま す :  すなわち 、 GET  リクエスト の 時 に 送信 さ れ る もの と 同じ ヘッダ を 送信 し ま す 。 
送信 さ れ る 可能 性 の あ る ヘッダ に つ い て の 完全 な 説明 は  do _ GET ( )  メソッド を 参照 し て くださ い 。 
この メソッド は os . listdir ( ) を ディレクトリ の スキャン に 用い て お り 、 listdir ( ) が 失敗 し た 場合 に は  40 4  応答 が 返 さ れ ま す 。  リクエスト が ファイル に 対応 付け られ た 場合 、 その ファイル を 開 い て 内容 を 返 し ま す 。 
要求 さ れ た ファイル を 開 く 際 に 何 ら か の  IOError  例外 が 送出 さ れ た 場合 、 リクエスト は  404 、 ' File  not  found '  エラー に 対応 づけ られ ま す 。 
そう で な い 場合 、 コンテント タイプ が extensions _ map  変数 を 用い て 推測 さ れ ま す 。  出力 は  ' Content-type :' と 推測 さ れ た コンテント タイプ で 、 その 後 に ヘッダ の 終了 を 示 す 空白 行 が 続 き 、 さらに その 後 に ファイル の 内容 が 続 き ま す 。 
この ファイル は コンテント タイプ が text \/ で 始ま っ て い る 場合 は テキスト モード で 、 そう で な けれ ば バイナリ モード で 開 か れ ま す 。 
使用 例 に つ い て は 関数  test ( )  の 実装 を 参照 し て くださ い 。 
Web  サーバ および 要求 ハンドラ の 基底 クラス 実装 。  . 
1 1 . 2 2 . 9  クライアント の サンプル 
SimpleXMLR PCServer モジュール は Python で 記述 さ れ た 基本 的 な XML - RPC サーバー フレームワーク を 提供 し ま す 。 
サーバー は スタンド アロン で あ る か 、 SimpleXMLR PCServer  を 使 う か 、 CGIXMLR PCRequestHandler  を 使 っ て  CGI  環境 に 組み込 ま れ る か の 、 いずれ か で す 。 
クラス SimpleXMLR PCServer 
新し く サーバー インスタンス を 作成 し ま す 。 
引数 requestHandler に は 、 リクエスト ハンドラー インスタンス の ファクトリー を 設定 し ま す 。  デフォルト は SimpleXMLR PCRequestHandler で す 。 
引数 addr と requestHandler は 
. TCPServer の コンストラクター に 引き渡 さ れ ま す 。 
もし 引数 logRequests が 真 ( true ) で あ れ ば 、 ( それ が デフォルト で す が 、 ) リクエスト は ログ に 記録 さ れ ま す 。  偽 ( false ) で あ る 場合 に は ログ は 記録 さ れ ま せ ん 。 
この クラス は XML - RPC プロトコル で 呼 ば れ る 関数 の 登録 の ため の メソッド を 提供 し ま す 。 
クラス CGIXMLR PCRequestHandler 
CGI  環境 に おけ る  XML - RPC  リクエスト ハンドラー を 、 新た に 作成 し ま す 。 
クラス SimpleXMLR PCRequestHandler 
新し く リクエスト ハンドラー インスタンス を 作成 し ま す 。 
この リクエスト ハンドラー は POST リクエスト を 受け持ち 、 SimpleXMLR PCServer の コンストラクター の 引数 logRequests に 従 っ た ログ 出力 を 行 い ま す 。 
SocketServer  モジュール は ネットワーク サーバ を 実装 する タスク を 単純 化 し ま す 。  この モジュール に は  4  つ の サーバ クラス が あ り ま す : TCPServer  は 、 クライアント と サーバ 間 に 継続 的 な データ 流路 を 提供 する 、 インターネット  TCP  プロトコル を 使 い ま す 。 
UDPServer  は 、 順序 通り に 到着 し な かっ たり 、 転送 中 に 喪失 し て しま っ て も かま わ な い 情報 の 断続 的 な パケット で あ る 、 データグラム を 使 い ま す 。 
UnixStream Server  および  UnixDatagram Server  クラス も 同様 で す が 、 Unix  ドメイン ソケット を 使 い ま す ;  従 っ て 非 Unix プラットフォーム で は 利用 でき ま せ ん 。 
ネットワーク プログラミング に つ い て の 詳細 は 、 W .  Richard  Steven  著  UNIX  Network  Programming や 、  RalphDavis  著  Win 32  Network  Programming  の よう な 書籍 を 参照 し て くださ い 。  これ ら の  4  つ の クラス は 要求 を  同期 的 に  ( synchronously )  処理 し ま す ;  各 要求 は 次 の 要求 を 開始 する 前 に 完結 し て い な けれ ば な り ま せ ん 。 
同期 的 な 処理 は 、 サーバ で 大量 の 計算 を 必要 と する 、 あるいは クライアント が 処理 する に は 時間 が かか り すぎ る よう な 大量 の データ を 返 す 、 と い っ た 理由 に よ っ て リクエスト に 長 い 時間 が かか る 状況 に は 向 い て い ま せ ん 。 
こう し た 状況 の 解決 方法 は 別 の プロセス を 生成 する か 、 個々 の 要求 を 扱 う スレッド を 生成 する こと で す ;  ForkingMixIn  および  ThreadingMixIn  配合 クラス ( mix - in  classes )  を 使 え ば 、 非 同期 的 な 動作 を サポート でき ま す 。  サーバ の 作成 に は いく つ か の ステップ が あ り ま す 。 
最初 に 、 BaseRequestHandler  クラス を サブ クラス 化 し て 要求 処理 クラス  ( request  hander class )  を 生成 し 、 その  handle ( ) メソッド を 上書き し な けれ ば な り ま せ ん ;  この メソッド で 入力 さ れ る 要求 を 処理 し ま す 。 
次 に 、 サーバ クラス の うち 一 つ を インスタンス 化 し て 、 サーバ の アドレス と 要求 処理 クラス を 渡 さ な けれ ば な り ま せ ん 。 
最後 に 、 サーバ オブジェクト の  handle_request ( )  また は  serve_ forever ( )  メソッド を 呼び出 し て 、 単一 また は 多数 の 要求 を 処理 し ま す 。  ThreadingMixIn  から 継承 し て スレッド を 利用 し た 接続 を 行 う 場合 、 突発 的 な 通信 切断 時 の 処理 を 明示 的 に 指定 する 必要 が あ り ま す 。 
ThreadingMixIn  クラス に は  daemon_threads  属性 が あ り 、 サーバ が スレッド の 終了 を 待ち合わせ る か どう か を 指定 する 事 が でき ま す 。 
サーバ が 要求 待ち を 行 っ て い る ソケット の ファイル 記述 子 を 整数 で 返 し ま す 。 
この 関数 は 一般 的 に 、 同じ プロセス 中 の 複数 の サーバ を 監視 でき る よう に する ため に 、 select . select ( )  に 渡 さ れ ま す 。 
単一 の 要求 を 処理 し ま す 。 
この 関数 は 以下 の メソッド : get_request ( ) 、  verify _ request ( ) 、 および process _request ( )  を 順番 に 呼び出 し ま す 。 
ハンドラ 中 で ユーザ に よ っ て 提供 さ れ た  handle ( )  が 例外 を 送出 し た 場合 、 サーバ の  handle_error ( )  メソッド が 呼び出 さ れ ま す 。 
無限 個 の 要求 を 処理 し ま す 。 
この 関数 は 単に 無限 ループ 内 で handle_request ( )  を 呼び出 し ま す 。 
address_ family  サーバ の ソケット が 属 し て い る プロトコル ファミリ で す 。 
取りえ る 値 は  socket . AF_INET  および  socket . AF _ UNIX  で す 。 
ユーザ が 提供 する 要求 処理 クラス で す ;  要求 ごと に この クラス の インスタンス が 生成 さ れ ま す 。 
インターネット プロトコル で は 、 この 値 は 例えば ( ' 12 7 . 0 . 0 . 1 ' ,  80 ) の よう に アドレス を 与え る 文字 列 と 整数 の ポート 番号 を 含 む タプル で す 。 
サーバ が 入力 の 要求 待ち を 行 う ため の ソケット オブジェクト で す 。 
サーバ クラス は 以下 の クラス 変数 を サポート し ま す : 
サーバ が アドレス の 再 使用 を 許 す か どう か を 示 す 値 で す 。 
この 値 は 標準 で  False  で 、 サブ クラス で 再 使用 ポリシ を 変更 する ため に 設定 する こと が でき ま す 。 
要求 待ち 行列  (queue )  の サイズ で す 。  単一 の 要求 を 処理 する の に 長 時間 かか る 場合 に は 、 サーバ が 処理 中 に 届 い た 要求 は 最大 request _queue _ size  個 まで 待ち 行列 に 置 か れ ま す 。 
待ち 行列 が 一杯 に な る と 、 それ 以降 の クライアント から の 要求 は ` ` 接続 拒否  ( Connection  denied ) ' ' エラー に な り ま す 。 
標準 の 値 は 通常  5  で す が 、 この 値 は サブ クラス で 上書き する こと が でき ま す 。 
サーバ が 使 う ソケット の 型 で す ;  取りえ る 値 は  2  つ で 、 socket . SOCK_ STREAM  と socket . SOCK _ DG RAM  で す 。 
TCPServer  の よう な 基底 クラス の サブ クラス で 上書き でき る サーバ メソッド は 多数 あ り ま す ;  これ ら の メソッド は サーバ オブジェクト の 外部 の ユーザ に と っ て は 役 に た た な い もの で す 。 
RequestHandlerClass  を インスタンス 化 し 、 handle ( ) メソッド を 呼び出 し て 、 実際 に 要求 を 処理 し ま す 。 
ソケット から 要求 を 受理 し て 、  クライアント と の 通信 に 使 わ れ る 新し い  ソケット オブジェクト 、 および クライアント の アドレス から な る 、 2  要素 の タプル を 返 し ま す 。 
この 関数 は  RequestHandlerClass  の  handle ( )  メソッド が 例外 を 送出 し た 際 に 呼び出 さ れ ま す 。 
必要 なら 、 この 関数 から 新た な プロセス か スレッド を 生成 し て 要求 を 処理 する こと が でき ま す ; その 処理 は  ForkingMixIn  また は  ThreadingMixIn  クラス が 行 い ま す 。 
サーバ の コンストラクタ に よ っ て 呼び出 さ れ 、 サーバ を 活動 状態 に し ま す 。 
この メソッド は 上書き でき ま す 。 
要求 処理 クラス で は 、 新た な  handle ( )  メソッド を 定義 し な く て は な ら ず 、 また 以下 の メソッド の いずれ か を 上書き する こと が でき ま す 。 
各 要求 ごと に 新た な インスタンス が 生成 さ れ ま す 。 
handle ( )  メソッド が 呼び出 さ れ た 後 、 何 ら か の 後 始末 を 行 う ため に 呼び出 さ れ ま す 。 
標準 の 実装 で は 何 も 行 い ま せ ん 。 
setup ( )  また は handle ( )  が 例外 を 送出 し た 場合 に は 、 この 関数 は 呼び出 さ れ ま せ ん 。 
この 関数 で は 、 クライアント から の 要求 を 実現 する ため に 必要 な 全て の 作業 を 行 わ な けれ ば な り ま せ ん 。 
self . request  の 型 は サービス が データグラム 型 か ストリーム 型 か で 異な り ま す 。 
ストリーム 型 で は 、 self . request  は ソケット オブジェクト で す ;  データグラム サービス で は 、 self . request  は 文字 列 に な り ま す 。 
しかし 、 この 違い は 要求 処理 配合 クラス の StreamRequestHandler  や DatagramRequestHandler を 使 う こと で 隠蔽 する こと が でき ま す 。 
これ ら の クラス で は  setup ( )  および  finish ( )  メソッド を 上書き し て お り 、 self . rfile  および  self . wfile  属性 を 提供 し て い ま す 。 
self . rfile  および  self . wfile  は 、 要求 データ を 取得 し たり クライアント に データ を 返 す ため に 、 それぞれ 読み出し 、 書き込み を 行 う こと が でき ま す 。 
handle ( )  メソッド より 前 に 呼び出 さ れ 、 何 ら か の 必要 な 初期 化 処理 を 行 い ま す 。 
標準 の 実装 で は 何 も 行 い ま せ ん 。 
この モジュール は 、 ( メモリ ファイル と し て も 知 ら れ て い る ) 文字 列 の バッファ に 対 し て 読み書き を 行 う ファイル の よう な クラス 、 StringIO  、 を 実装 し て い ま す 。 
操作 方法 に つ い て は ファイル オブジェクト の 説明 を 参照 し て くださ い ( セクション 2 . 3 . 9 ) 。 
クラス StringIO 
StringIO  オブジェクト を 作 る 際 に 、 コンストラクター に 文字 列 を 渡 す こと で 初期 化 する こと が でき ま す 。 
文字 列 を 渡 さ な い 場合 、 最初 は  StringIO  は カラ で す 。  StringIO  オブジェクト は ユニコード も  8 - bit  の 文字 列 も 受け付け ま す が 、 この 2 つ を 混ぜ る こと に は 少し 注意 が 必要 で す 。 
この 2 つ が 一緒 に 使 わ れ る と 、  getvalue ( )  が 呼 ば れ た とき に 、 ( 8 th  ビット を 使 っ て い る ) 7 - bit  ASCII  に 解釈 でき な い  8 - bit  の 文字 列 は 、 Unicode Error  を 引き起こ し ま す 。 
次 に あげ る  StringIO  オブジェクト の メソッド に は 特別 な 説明 が 必要 で す : 
StringIO  オブジェクト の  close ( )  メソッド が 呼 ば れ る 前 なら いつ で も 、 ` `file ' ' の 中身 全体 を 返 し ま す 。 
ユニコード と  8 - bit  の 文字 列 を 混ぜ る こと の 説明 は 、 上 の 注意 を 参照 し て くださ い 。  この 2 つ の 文字 コード を 混ぜ る と 、 この メソッド は  Unicode Error  を 引き起こ す か も しれ ま せ ん 。 
メモリ バッファ を 解放 し ま す 。 
16 . 1 . 6 . 9  画像 
Tix  ( Tk Interface  Extension ) モジュール は 豊富 な 追加 ウィ ジェット を 提供 し ま す 。 
標準 Tk ライブラリ に は 多く の 有用 な ウィ ジェット が あ り ま す が 、 完全 で は 決して あ り ま せ ん 。 
Tix ライブラリ は 標準 Tk に 欠け て い る 一般 的 に 必要 と さ れ る ウィ ジェット の 大 部分 を 提供 し ま す :  HList 、 ComboBox 、 Control  ( 別名 SpinBox ) および 各種 の スクロール 可能 な ウィ ジェット 。 
アプリケーション と ユーザ に 特有 の 要求 に 合 う よう に 、 大 部分 の アプリケーション ウィ ジェット を 選 ぶ こと に よ っ て 、 アプリケーション を 設計 でき ま す 。 
Tix の ホーム ページ 。 
ここ に は 追加 ドキュメント と ダウンロード へ の リンク が あ り ま す 。 
man ページ と 参考 資料 の オン ライン 版 。 
プログラマ 用 参考 資料 の オン ライン 版 。 
Tix と Tkinter プログラム の 開発 の ため の Tix アプリケーション 。  Tide アプリケーション は Tk また は Tkinter に 基づ い て 動作 し ま す 。 
また 、 リモート で Tix \/ Tk \/ Tkinter アプリケーション を 変更 や デバグ する ため の インスペクタ TixInspect が 含 ま れ ま す 。 
16 . 2 . 2 . 1  基本 ウィ ジェット 
16 . 2 . 2 . 2  ファイル セレクタ 
16 . 2 . 2 . 3  ハイ アラキカル リスト ボックス 
16 . 2 . 2 . 4  タビュラー リスト ボックス 
16 . 2 . 2 . 5  管理 ウィ ジェット 
16 . 2 . 2 . 6  画像 タイプ 
16 . 2 . 2 . 7  その 他 の ウィ ジェット 
16 . 2 . 2 . 8  ジオ メトリ マ ネジャ を 作 る 
Tkinter  モジュール  ( `` Tk  インタフェース ' ')  は 、 Tk  GUI  ツール キット に 対 する 標準 の  Python  インタフェース で す 。 
Tk  と  Tkinter  は ほとんど の  Unix  プラットフォーム の 他 、  Windows  や  Macintosh  システム 上 で も 利用 でき ま す 。 
( Tk  自体 は  Python  の 一部 で は あ り ま せ ん 。  Tk  は  ActiveState  で 保守 さ れ て い ま す 。 
)  参考 : 
Python  Tkinter  Topic  Guide  で は 、 Tk  を  Python  から 利用 する 上 で の 情報 と 、 その 他 の  Tk  に まつわ る 情報 源 を 数多く 提供 し て い ま す 。 
Fredrik  Lundh  の オン ライン リファレンス 資料 で す 。 
オン ライン リファレンス 資料 で す 。 
Jython  から  Tkinter  へ の インタフェース で す 。 
John  Grayson に よ る 解説 書  ( ISBN  1 - 88477 7 - 81 - 3 )  で す 。 
16 . 1 . 2  Tkinter  お 助け 手帳  ( life preserver ) 
16 . 1 . 2 . 1  この 節 の 使 い 方 
16 . 1 . 2 . 2  簡単 な Hello  World プログラム 
16 . 1 . 3  Tcl \/ Tk  を  ( 本当 に 少し だけ )  見渡 し て み る 
16 . 1 . 6 . 1  オプション の 設定 
16 . 1 . 6 . 3  Packer  の オプション 
16 . 1 . 6 . 4  ウィ ジェット 変数 を 関連 付け る 
16 . 1 . 6 . 5  ウィンドウ マ ネジャ 
16 . 1 . 6 . 6  Tk  オプション データ 型 
16 . 1 . 6 . 7  バインド と イベント 
16 . 1 . 6 . 8  index  パラメータ 
注意 : この モジュール は 後方 互換 性 の ため だけ に 残 さ れ て い ま す 。 
Python  2 . 2 より 前 の バージョン の Python で 動作 する 必要 の な い コード を 書 い て い る の なら ば 、 組み込 み dict 型 から 直接 サブ クラス 化 する こと を 検討 し て くださ い 。 
この モジュール は 辞書 オブジェクト の ラッパー と し て 働 く クラス を 定義 し ま す 。 
独自 の 辞書 に 似 た クラス の ため に 役 に 立 つ 基底 クラス で 、 これ を 継承 し 既存 の メソッド を オーバーライド し たり 、 あるいは 、 新し い もの を 追加 し たり する こと が でき ま す 。 
この よう な 方法 で 、 辞書 に 新し い 振る舞い を 追加 でき ま す 。  最小 限 の マッピング インターフェイス を すでに 持 っ て い る クラス の ため に 、 モジュール は すべて の 辞書 メソッド を 定義 し て い る mixin も 定義 し て い ま す 。 
これ に よ っ て 、 shelve モジュール の よう な 辞書 の 代わり を する 必要 が あ る クラス を 書 く こと が 非常 に 簡単 に な り ま す 。 UserDict モジュール は UserDict クラス と DictMixin を 定義 し て い ま す : 
クラス UserDict 
辞書 を シミュレート する クラス 。 
インスタンス の 内容 は 通常 の 辞書 に 保存 さ れ 、 UserDict インスタンス の data 属性 を 通 し て アクセス でき ま す 。 
initialdata が 与え られ れ ば 、 data は その 内容 で 初期 化 さ れ ま す 。  他 の 目的 の ため に 使え る よう に 、 initialdata へ の 参照 が 保存 さ れ な い こと が あ る と い う こと に 注意 し て くださ い 。 
マッピング の メソッド と 演算 ( 節 2 . 3 . 8 を 参照 ) に 加え て 、 UserDict インスタンス は 次 の 属性 を 提供 し ま す : 
UserDict クラス の 内容 を 保存 する ため に 使 わ れ る 実際 の 辞書 。 
クラス DictMixin 
_ _ getitem__、__setitem__、__ delitem_ _ および keys  と い っ た 最小 の 辞書 インタフェース を 既に 持 っ て い る クラス の ため に 、 全て の 辞書 メソッド を 定義 する  mixin  で す 。  この mixin は スーパー クラス と し て 使 わ れ る べ き で す 。 
上 の それぞれ の メソッド を 追加 する こと で 、 より 多く の 機能 が だんだん 追加 さ れ ま す 。 
Python  2 . 2 より 前 の バージョン の Python で 動作 する 必要 の な い コード を 書 い て い る の なら ば 、 組み込 み list 型 から 直接 サブ クラス 化 する こと を 検討 し て くださ い 。 
この モジュール は リスト オブジェクト の ラッパー と し て 働 く クラス を 定義 し ま す 。 
独自 の リスト に 似 た クラス の ため に 役 に 立 つ 基底 クラス で 、 これ を 継承 し 既存 の メソッド を オーバーライド し たり 、 あるいは 、 新し い もの を 追加 し たり する こと が でき ま す 。 
この よう な 方法 で 、 リスト に 新し い 振る舞い を 追加 でき ま す 。 UserList モジュール は UserList クラス を 定義 し て い ま す : 
クラス UserList 
リスト を シミュレート する クラス 。 
インスタンス の 内容 は 通常 の リスト に 保存 さ れ 、 UserList インスタンス の data 属性 を 通 し て アクセス でき ま す 。 
インスタンス の 内容 は 最初 に list の コピー に 設定 さ れ ま す が 、 デフォルト で は 空 リスト [ ] で す 。  list は 通常 の Python リスト か 、 UserList ( また は サブ クラス ) の インスタンス の どちら か で す 。 
変更 可能 シーケンス の メソッド と 演算 ( 節 2 . 3 . 6 を 参照 ) に 加え て 、 UserList インスタンス は 次 の 属性 を 提供 し ま す : 
UserList クラス の 内容 を 保存 する ため に 使 わ れ る 実際 の Python リスト オブジェクト 。 
サブ クラス 化 の 要件 :  UserList の サブ クラス は 引数 な しか 、 あるいは 一 つ の 引数 の どちら か と とも に 呼び出せ る コンストラクタ を 提供 する こと が 期待 さ れ ま す 。 
新し い シーケンス を 返 す リスト 演算 は 現在 の 実装 クラス の インスタンス を 作成 し よう と し ま す 。 
バージョン  2 . 0  で  変更  さ れ た 仕様 : Python バージョン 1 . 5 . 2 と 1 . 6 で は 、 コンストラクタ が 引数 なし で 呼び出し 可能 で あ る こと と 変更 可能 な data 属性 を 提供 する と い う こと も 要求 さ れ ま す 。 
Python の 初期 の バージョン で は 、 導出 クラス の インスタンス を 作成 し よう と は し ま せ ん 。 
注意 : この モジュール の UserString クラス は 後方 互換 性 の ため だけ に 残 さ れ て い ま す 。 
Python  2 . 2 より 前 の バージョン の Python で 動作 する 必要 の な い コード を 書 い て い る の なら ば 、 UserString を 使 う 代わり に 組み込 み str 型 から 直接 サブ クラス 化 する こと を 検討 し て くださ い ( 組み込み の MutableString と 等価 な もの は あ り ま せ ん ) 。 
この モジュール は 文字 列 オブジェクト の ラッパー と し て 働 く クラス を 定義 し ま す 。 
独自 の 文字 列 に 似 た クラス の ため に 役 に 立 つ 基底 クラス で 、 これ を 継承 し 既存 の メソッド を オーバーライド し たり 、 あるいは 、 新し い もの を 追加 し たり する こと が でき ま す 。 
クラス UserString 
文字 列 また は ユニ コード 文字 列 オブジェクト を シミュレート する クラス 。 
インスタンス の 内容 は 通常 の 文字 列 また は ユニ コード 文字 列 オブジェクト に 保存 さ れ 、 UserString インスタンス の data 属性 を 通 し て アクセス でき ま す 。 
インスタンス の 内容 は 最初 に sequence の コピー に 設定 さ れ ま す 。  sequence は 通常 の Python 文字 列 また は ユニ コード 文字 列 、 UserString ( また は サブ クラス ) の インスタンス 、 あるいは 組み込 み str ( ) 関数 を 使 っ て 文字 列 に 変換 でき る 任意 の シーケンス の いずれ か で す 。 
クラス MutableString 
この クラス は 上 の UserString から 導出 さ れ 、 変更 可能 に な る よう に 文字 列 を 再 定義 し ま す 。 
変更 可能 な 文字 列 は 辞書 の キー と し て 使 う こと が でき ま せ ん 。  なぜ なら 、 辞書 は キー と し て 変更 不能 な オブジェクト を 要求 する から で す 。 
この クラス の 主な 目的 は 、 辞書 の キー と し て 変更 可能 な オブジェクト を 使 う と い う 試み を 捕捉 する ため に 、 継承 と _ _ hash_ _( ) メソッド を 取り除 く ( オーバーライド する ) 必要 が あ る こと を 示 す 教育 的 な 例 を 提供 する こと で す 。  そう し な けれ ば 、 非常 に エラー に な り やす く 、 突き止め る こと が 困難 で しょ う 。 
文字 列 と ユニコード オブジェクト の メソッド と 演算 ( 節 2 . 3 . 6 、 ` ` 文字 列 メソッド ' ' を 参照 ) に 加え て 、 UserString インスタンス は 次 の 属性 を 提供 し ま す : 
UserString クラス の 内容 を 保存 する ため に 使 わ れ る 実際 の Python 文字 列 また は ユニコード オブジェクト 。 
W  ウィ ジェット は 、 IDE  で 頻繁 に 使 わ れ て い ま す 。 
aepack  モジュール は 、 Python  変数 から  AppleEvent  ディスク リプタ へ の 変換 ( パック ) と 、 その 逆 に 変換 ( アン パック ) する 関数 を 定義 し て い ま す 。  Python  内 で は  AppleEvent  ディスク リプタ は 、 組み込 み 型 で あ る  AEDesc  の Python  オブジェクト と し て 扱 わ れ ま す 。 
aepack  モジュール は 次 の 関数 を 定義 し て い ま す 。 
Python  値  x  を 変換 し た 値 を 保持 する  AEDesc  オブジェクト を 返 し ま す 。 
forcetype  が 与え る こと で 、 結果 の ディスク リプタ 型 を 指定 でき ま す 。 
それ 以外 で は 、 Python  型 から  Apple Event ディスク リプタ 型 へ の デフォルト の マッピング が 使 わ れ ま す 。  マッピング は 次 の 通り と な り ま す 。 
x  が Python インスタンス なら 、 この 関数 は _ _aepack_ _( )  メソッド を 呼びだ そ う と し ま す 。 
この メソッド は  AEDesc  オブジェクト を 返 し ま す 。  x  の 変換 が 上 で 定義 さ れ て い な い 場合 は 、 この 関数 は 、 テキスト ディスク リプタ と し て エンコード さ れ た 、 値 の ( repr ( ) 関数 に よ る ) Python 文字 列 表現 が 返 さ れ ま す 。 
x  は  AEDesc  タイプ の オブジェクト で な けれ ば いけ ま せ ん 。 
この 関数 は 、 Apple Event ディスク リプタ  x  の データ の Python オブジェクト 表現 を 返 し ま す 。 
単純 な AppleEvent データ 型 ( 整数 、 テキスト 、 浮動 少数 点数 ) の 、 対応 する Python 型 が 返 さ れ ま す 。  Apple Event リスト は Python リスト と し て 返さ れ 、 リスト の 要素 は 再帰 的 に アン パック さ れ ま す 。 
formodulename  の 指定 が な い 場合 、 オブジェクト 参照 ( 例 : line  3  of  document  1 ) が 、 aetypes .ObjectSpecifier  の インスタンス と し て 返さ れ ま す 。 
ディスク リプタ 型 が typeFSS で あ る AppleEvent ディスク リプタ が 、 FSSpec  オブジェクト と し て 返さ れ ま す 。 
AppleEvent レコード ディスク リプタ が 、 再帰 的 に アン パック さ れ た 、 型 の 4 文字 キー と 要素 を 持 つ Python 辞書 と し て 返さ れ ま す 。  オプション の  formodulename  引数 は  gensuitemodule  より 作成 さ れ る スタブ パッケージ に よ り 利用 さ れ 、 オブジェクト 指定 子 の ため の  OSA  クラス を モジュール の 中 で 見つけ られ る こと を 保証 し ま す 。 
これ は 、 例えば 、 ファインダ が ウィンドウ に 対 し て オブジェクト 指定 子 を 返 す 場合 、 Fin der . Window  の インスタンス が 得 られ 、 aetypes . Window  が 得 られ な い こと を 保証 し ま す 。 
前者 は 、 ファインダ 上 の ウィンドウ が 持 っ て い る 、 すべて の 特性 および 要素 の こと を 知 っ て い ま す 。  一方 、 後者 の もの は それ ら の こと を 知 り ま せ ん 。 
参考 :  Carbon . AE 
: モジュール 
Apple Event ディスク リプタ 型 と し て コード さ れ た Python 定義 . 
Macintosh 上 で の プロセス 間 通信 に 関 する 情報 
aetools  モジュール は  Python  で  Apple Script  クライアント と し て の 機能 を サポート する アプリケーション を 構築 する ため の 基本 的 な 機能 を 含 ん で い ま す 。 
さらに 、 この モジュール は 、  aetypes  および  aepack  モジュール の 中核 機能 を インポート し 再  エクスポート し ま す 。 
gensuitemodule  に よ っ て 生成 さ れ た スタブ パッケージ は  aetools  の かなり 適切 な 部分 を インポート する の で 、 通常 は それ を 明示 的 に インポート する 必要 は あ り ま せ ん 。 
生成 さ れ た パッケージ 群 を 使用 する こと が でき な い 場合 と 、 スクリプト 対応 の ため に よ り 低 い レベル の アクセス を 必要 と し て い る 場合 、 例外 が 発生 し ま す 。  aetools  モジュール は それ 自身 、 Carbon . AE  モジュール に よ っ て 提供 さ れ る  AppleEvent  サポート を 利用 し ま す 。 
この モジュール に は ウィンドウ マネージャ へ の アクセス を 必要 と する と い う 1 つ の 欠点 が あ り ま す 。  詳細 は 第  1 . 1 . 2  章 を 見 て くださ い 。 
この 制限 は 将来 の リリース で 撤廃 さ れ る か も しれ ま せ ん 。  aetools  モジュール は 下記 の 関数 を 定義 し て い ま す 。 
あらかじめ 作成 さ れ た  Carbon . AE . AEDesc  オブジェクト 中 の パラメーター および 属性 を 保存 し ま す 。  parameters  と  attributes  は Python  オブジェクト の 4 文字 の  OSA  パラメータ の キー を 写像 し た 辞書 で す 。 
この オブジェクト を パック する に は  aepack . pack ( )  を 使 い ま す 。 
再帰 的 に 、 Carbon . AE . AEDesc  イベント を Python  オブジェクト へ アン パック し ま す 。 
関数 は 引数 の 辞書 および 属性 の 辞書 を 返 し ま す 。  formodulename  引数 は  Apple Script  クラス を どこ に 捜 し に 行 く か 制御 する ため に 、 生成 さ れ た スタブ パッケージ に よ り 使用 さ れ ま す 。 
Python  キー ワード 引数 辞書  arguments  を 、 写像 に よ る 4 文字 の  OSA  キー と し て  keydict  の 中 で 指定 さ れ た Python  識別 子 で あ る キー の 交換 に よ り  packevent  に よ っ て 要求 さ れ る フォーマット へ 変換 し ま す 。 
生成 さ れ た パッケージ 群 に よ っ て 使用 さ れ ま す 。 
aetools  モジュール は 次 の クラス を 定義 し て い ま す 。 
クラス TalkTo
timeout  を 明示 的 に 設定 する 事 で 、  AppleEvent  の 返答 を 待 つ デフォルト の タイム アウト 時間 を 変更 する 事 が でき ま す 。 _start 
アプリケーション が 起動 し て い て る か 確認 し 、 起動 し て い な けれ ば 起動 し よう と し ま す 。 
OSA 指示 子  code ,  subcode  ( いずれ も 通常 4 文字 の 文字 列 で す ) を 持 っ た 変数 の ため に 、 parameters  を パック し 、 attributes に 戻 し 、 目標 アプリケーション に それ を 送 っ て 、 返答 を 待 ち 、 unpackevent  を 含 ん だ 返答 を アン パック し 、 AppleEvent  の 返答 を 返 し 、 辞書 と し て アン パック し た 値 と 属性 を 返 し て 、 AppleEvent  Carbon . AE . AEDesc  を 作成 し ま す 。 
aetypes  で は 、  Apple Event  データ デスク リプタ ( data descriptor )  や  Apple Event オブジェクト 指定子 ( object  specifier )  を 表現 する クラス を 定義 し て い ま す 。  Apple Event  データ は デスク リプタ に 含 ま れ て い て 、 これ ら の デスク リプタ は 片付け さ れ て い ま す 。 
多く の デスク リプタ は 、 単に 対応 する Python  の 型 で 表現 さ れ て い ま す 。  例えば 、 OSA  中 の typeText  は  Python  文字 列 型 で 、 typeFloat  は  浮動 小数 点 型 に な る 、 と い っ た 具合 で す 。 
この モジュール で は 、 OSA  の 型 の うち 、 直接 的 に 対応 する  Python  の 型 が な い もの の ため に クラス を 定義 し て い ま す 。 
その よう な クラス の インスタンス に 対 する パック や アン パック 操作 は 、  aepack  モジュール 自動 的 に 処理 し ま す 。  オブジェクト 指定 子 は 、 本質 的 に は  Apple Event  サーバ 中 に 実装 さ れ て い る オブジェクト へ の アドレス で す 。 
クラス Unknown
aepack  や  aetypes  が サポート し て い な い  OSA  の デスク リプタ データ 、 すなわち 、 この モジュール で 扱 っ て い る 他 の クラス や 、 Python  の 組み込 み 型 の 値 で 表現 さ れ て い な い よう な データ を 表現 する クラス で す 。 
クラス Enum 
列挙 値  ( enumeration  value )  を 表 す クラス で す 。  値 は  4  文字 の 文字 列 型 に な り ま す 。 
クラス InsertionLoc
オブジェクト  of  の 中 の  pos  の 位置 を 表 す クラス で す 。 
クラス Boolean 
ブール 値  ( 真偽 値 )  を 表 す クラス で す 。 
クラス StyledText 
スタイル 情報  ( フォント 、 タイプ フェイス など )  つき の テキスト を 表 す クラス で す 。 
クラス AEText 
スクリプト システム  ( script system )  および スタイル 情報 の 入 っ た テキスト を 表 す クラス で す 。 
クラス IntlText 
スクリプト システム と 言語 情報  ( language  information )  の 入 っ た テキスト を 表 す クラス で す 。 
クラス IntlWriting Code 
スクリプト システム と 言語 情報 を 表 す クラス で す 。 
クラス QDPoint 
QuickDraw の 点 を 表 す クラス で す 。 
クラス QDRectangle 
QuickDraw の 矩形 を 表 す クラス で す 。 
クラス RGBColor 
色 を 表 す クラス で す 。 
クラス Type 
OSA  の 型 ( type value )  を 表 す クラス で す 。  4  文字 から な る 名前 を 値 に 持 ち ま す 。 
クラス Keyword 
OSA  の キー ワード で す 。 
4  文字 から な る 名前 を 値 に 持 ち ま す 。  クラス Range 
範囲 を 表 す クラス で す 。 
クラス Ordinal 
先頭 を 表 す  " firs "  や 中央 を 表 す " mid d "  の よう に 、 数値 で な い 絶対 位置 指定 子 を 表 す クラス で す 。 
クラス Logical 
演算 子  logc を term  に 適用 し た とき の 論理 式 を 表 す クラス で す 。 
クラス Comparison 
obj 1  と obj 2  の relo  に よ る 比較 を 表 す クラス で す 。 
以下 の クラス は 、 生成 さ れ た スタブ パッケージ が 、 Apple Script  の クラス や プロパティ を  Python  で 表現 する 上 で 基底 クラス と し て 利用 し ま す 。 
クラス ComponentItem
OSA  クラス 用 の 抽象 基底 クラス で す 。 
サブ クラス で は 、 クラス 属性 want  を  4  文字 の  OSA  クラスコード に 設定 せ ね ば な り ま せ ん 。 
この クラス の サブ クラス の インスタンス は  Apple Script  オブジェクト 指定 子 と 同じ に な り ま す 。 
インスタンス 化 を 行 う 最 に は 、 which  に セレクタ を 渡 さ ね ば な り ま せ ん 。  また 、 任意 で 親 オブジェクト を fr  に 渡せ ま す 。 
クラス N Property 
OSA  プロパティ 用 の 抽象 基底 クラス で す 。 
サブ クラス で は 、 クラス 属性 want  と  which  を 設定 し て 、 どの プロパティ を 表 し て い る か を 指定 せ ね ば な り ま せ ん 。 
この クラス の サブ クラス の インスタンス は オブジェクト 指定 子 と 同じ に な り ま す 。 
クラス ObjectSpecifier 
ComponentItem と  N Property  の 基底 クラス で 、 汎用 の  OSA  オブジェクト 指定 子 を 表 し ま す 。 
パラメタ の 説明 は Apple  Open  Scripting  Architecture  の ドキュメント を 参照 し て くださ い 。 
この クラス は 抽象 クラス で は な い の で 注意 し て くださ い 。 
この モジュール は AIFF と AIFF - C ファイル の 読み書き を サポート し ま す 。 
AIFF ( Audio  Interchange  File  Format ) は デジタル オーディオ サンプル を ファイル に 保存 する ため の フォーマット で す 。 
AIFF - C は AIFF の 新し い バージョン で 、 オーディオ データ の 圧縮 に 対応 し て い ま す 。 
チャンネル 数 は 、 モノラル 、 ステレオ 、 4 チャンネル か どう か を 示 し ま す 。 
フレーム は それぞれ 、 チャンネル ごと に 一 つ の サンプル から な り ま す 。 
サンプル サイズ は 、 一 つ の サンプル の 大き さ を バイト 数 で 示 し た もの で す 。 
したが っ て 、 一 つ の フレーム は nchannels * samplesize バイト から な り 、 1 秒間 で は nchannels * samplesize * framerate バイト で 構成 さ れ ま す 。  例えば 、 CD 品質 の オーディオ は 2 バイト ( 16 ビット ) の サンプル サイズ を 持 っ て い て 、 2 チャンネル ( ステレオ ) で あ り 、 44 , 100 フレーム \/ 秒 の フレーム レート を 持 っ て い ま す 。 
その ため 、 フレーム サイズ は 4 バイト ( 2 * 2 ) で 、 1 秒間 で は 2 * 2 * 44100 バイト ( 176 , 400 バイト ) に な り ま す 。  aifc モジュール は 以下 の 関数 を 定義 し て い ま す : 
AIFF あるいは AIFF - C ファイル を 開 き 、 後述 する メソッド を 持 つ インスタンス を 返 し ま す 。 
引数 file は ファイル を 示 す 文字 列 か 、 ファイル オブジェクト の いずれ か で す 。  mode は 、 読み込 み 用 に 開 く とき に は ' r ' か 'rb ' の どちら か で 、 書き込み 用 に 開 く とき に は ' w ' か 'w b ' の どちら か で な けれ ば な り ま せ ん 。 
もし 省略 さ れ た ら 、 
file . mode が 存在 すれ ば それ が 使用 さ れ 、 な けれ ば ' rb ' が 使 わ れ ま す 。 
書き込み 用 に この メソッド を 使用 する とき に は 、 これ から 全部 で どれ だけ の サンプル 数 を 書き込 む の か 分か ら な かっ たり 、 writeframesraw ( ) と setnframes ( ) を 使 わ な い なら 、 ファイル オブジェクト は シーク 可能 で な けれ ば な り ま せ ん 。 
ファイル が open ( ) に よ っ て 読み込 み 用 に 開 か れ た とき に 返 さ れ る オブジェクト に は 、 以下 の メソッド が あ り ま す : 
オーディオ チャンネル 数 ( モノラル なら 1 、 ステレオ なら 2 ) を 返 し ま す 。 
サンプル サイズ を バイト 数 で 返 し ま す 。 
サンプリングレート ( 1 秒 あたり の オーディオ フレーム 数 ) を 返 し ま す 。 
ファイル の 中 の オーディオ フレーム 数 を 返 し ま す 。 
オーディオ ファイル で 使用 さ れ て い る 圧縮 形式 を 示 す 4 文字 の 文字 列 を 返 し ま す 。 
AIFF ファイル で は ' NONE ' が 返 さ れ ま す 。 
オーディオ ファイル の 圧縮 形式 を 人 に 判読 可能 な 形 に し た もの を 返 し ま す 。 
AIFF ファイル で は ' not  compressed ' が 返 さ れ ま す 。 
以上 の 全て の 値 を 上 の 順 に 並べ た タプル を 返 し ま す 。 
オーディオ ファイル の マーカー の リスト を 返 し ま す 。 
一 つ の マーカー は 三 つ の 要素 の タプル で す 。 
要素 の 1 番 目 は マーク ID ( 整数 ) 、 2 番 目 は マーク 位置 の フレーム 数 を データ の 始め から 数え た 値 ( 整数 ) 、 3 番 目 は マーク の 名称 ( 文字 列 ) で す 。 
与え られ た id の マーク の 要素 を getmarkers ( ) で 述べ た タプル で 返 し ま す 。 
オーディオ ファイル の 次 の nframes 個 の フレーム を 読み込 ん で 返 し ま す 。 
返 さ れ る データ は 、 全 チャンネル の 圧縮 さ れ て い な い サンプル を フレーム ごと に 文字 列 に し た もの で す 。 
読み込 む ポインタ を データ の 始め に 巻き戻 し ま す 。 
次 に readframes ( ) を 使用 する と 、 データ の 始め から 読み込 み ま す 。 
指定 し た フレーム 数 の 位置 に ポインタ を 設定 し ま す 。 
現在 の ポインタ の フレーム 位置 を 返 し ま す 。 
AIFF ファイル を 閉じ ま す 。 
この メソッド を 呼び出 し た あと で は 、 オブジェクト は もう 使用 でき ま せ ん 。 
ファイル が open ( ) に よ っ て 書き込み 用 に 開 か れ た とき に 返 さ れ る オブジェクト に は 、 readframes ( ) と setpos ( ) を 除 く 上述 の 全て の メソッド が あ り ま す 。 
さらに 以下 の メソッド が 定義 さ れ て い ま す 。 
get * ( ) メソッド は 、 対応 する set* ( ) を 呼び出 し た あと で のみ 呼び出し 可能 で す 。 
最初 に writeframes ( ) あるいは writeframesraw ( ) を 呼び出 す 前 に 、 フレーム 数 を 除 く 全て の パラメータ が 設定 さ れ て い な けれ ば な り ま せ ん 。 
AIFF ファイル を 作 り ま す 。 
デフォルト で は AIFF - C ファイル が 作 ら れ ま す が 、 ファイル 名 が ' . aiff ' で 終わ っ て い れ ば AIFF ファイル が 作 ら れ ま す 。 
AIFF - C ファイル を 作 り ま す 。 
オーディオ ファイル の チャンネル 数 を 設定 し ま す 。 
オーディオ の サンプル サイズ を バイト 数 で 設定 し ま す 。 
サンプリングレート を 1 秒 あたり の フレーム 数 で 設定 し ま す 。 
オーディオ ファイル に 書き込 ま れ る フレーム 数 を 設定 し ま す 。  もし この パラメータ が 設定 さ れ て い な かっ たり 正し く な かっ た ら 、 ファイル は シーク に 対応 し て い な けれ ば な り ま せ ん 。 
圧縮 形式 を 設定 し ま す 。 
もし 設定 し な けれ ば 、 オーディオ データ は 圧縮 さ れ ま せ ん 。 
AIFF ファイル は 圧縮 でき ま せ ん 。 
変数 name は 圧縮 形式 を 人 に 判読 可能 に し た もの で 、 変数 type は 4 文字 の 文字 列 で な けれ ば な り ま せ ん 。 
現在 の ところ 、 以下 の 圧縮 形式 が サポート さ れ て い ま す : NONE ,  ULAW ,  ALAW ,  G 722 。 
上 の 全 パラメータ を 一 度 に 設定 し ま す 。 
引数 は それぞれ の パラメータ から な る タプル で す 。 
つまり 、 setparams ( ) の 引数 と し て 、 getparams ( ) を 呼び出 し た 結果 を 使 う こと が でき ま す 。 
指定 し た ID ( 1 以上 ) 、 位置 、 名称 で マーク を 加え ま す 。 
この メソッド は 、 close ( ) の 前 なら いつ で も 呼び出 す こと が でき ま す 。 
出力 ファイル の 現在 の 書き込み 位置 を 返 し ま す 。 
setmark ( ) と の 組み合わせ で 使 う と 便利 で す 。 
出力 ファイル に データ を 書き込 み ま す 。 
この メソッド は 、 オーディオ ファイル の パラメータ を 設定 し た あと で のみ 呼び出し 可能 で す 。 
オーディオ ファイル の ヘッダ 情報 が 更新 さ れ な い こと を 除 い て 、 writeframes ( ) と 同じ で す 。 
ファイル の ヘッダ 情報 は 、 オーディオ データ の 実際 の サイズ を 反映 し て 更新 さ れ ま す 。 
この メソッド を 呼び出 し た あと で は 、 オブジェクト は もう 使用 でき ま せ ん 。 
この モジュール に は 、 組み込 み モジュール 
( 上記 参照 ) を 使用 する の に 必要 と さ れ る シンボリック 定数 が 定義 さ れ て い ま す 。  定数 の 名前 は C の include ファイル audioio . h で 接頭 辞 " AL _ " を 除 い た もの と 同じ で す 。 
定義 さ れ て い る 名前 の 完全 な リスト に つ い て は モジュール の ソース を 参照 し て くださ い 。 
お 勧め の 使 い 方 は 以下 の 通り で す : 
この モジュール を 使 う と 、 SGI  Indy と Indigo ワーク ステーション の オーディオ 装置 に アクセス でき ま す 。 
詳し く は IRIX の man ページ の セクション 3 A を 参照 し て くださ い 。 
ここ に 書 か れ た 関数 が 何 を する か を 理解 する に は 、 man ページ を 読 む 必要 が あ り ま す ! IRIX の リリース 4 . 0 . 5 より 前 の もの で は 使え な い 関数 も あ り ま す 。 
お 使い の プラットフォーム で 特定 の 関数 が 使え る か どう か 、 マニュアル で 確認 し て くださ い 。 
この モジュール で 定義 さ れ た 関数 と メソッド は 全て 、 名前 に " AL " の 接頭 辞 を 付け た C の 関数 と 同義 で す 。  C の ヘッダー ファイル audio . h の シンボル 定数 は 標準 モジュール 
に 定義 さ れ て い ま す 。  下記 を 参照 し て くださ い 。 
警告 : オーディオ ライブラリ の 現在 の バージョン は 、 不正 な 引数 が 渡 さ れ る と エラー ステイタス が 返 る の で は な く 、 core を 吐き出 す こと が あ り ま す 。 
この モジュール に は 、 以下 の 関数 が 定義 さ れ て い ま す : 
引数 name と direction は 文字 列 で す 。 
省略 可能 な 引数 config は 、 newconfig ( ) で 返 さ れ る コンフィギュレーション オブジェクト で す 。 
返り 値 は audio  portobject で す ; オーディオ ポート オブジェクト の メソッド は 下 に 書 か れ て い ま す 。 
返り 値 は 新し い audio  configuration object で す ; オーディオ コンフィギュレーション オブジェクト の メソッド は 下 に 書 か れ て い ま す 。 
引数 device は 整数 で す 。 
返り 値 は ALquery params ( ) で 返 さ れ る データ を 含 む 整数 の リスト で す 。 
引数 list は query params ( ) で 返 さ れ る よう な リスト で す ;query params ( ) を 適切 に ( ! ) 修正 し て 使 う こと が でき ま す 。 
引数 list は query params ( ) で 返 さ れ る よう な リスト で す 。 
20 . 1 . 1  コンフィギュレーション オブジェクト 
、 および 
- -  へ の 汎用 インタフェース で す 。 
これ ら の モジュール が どれ も インストール さ れ て い な い 場合 、 
モジュール の 低速 で 単純 な  DBM  実装 が 使 わ れ ま す 。 
データベース ファイル  filename  を 開 き 、 対応 する オブジェクト を 返 し ま す 。  データベース ファイル が すでに 存在 する 場合 、 
オプション の  mode  引数 は 、 新た に データベース を 作成 し な けれ ば な ら な い 場合 に 使 わ れ る  Unix  の ファイル モード で す 。 
標準 の 値 は  8  進数 の 0666  で す  ( この 値 は 現在 有効 な  umask  で 修飾 さ れ ま す ) 。 
サポート さ れ て い る モジュール の どれ か に よ っ て 送出 さ れ う る 例外 が 収め られ る タプル で 、 先頭 の 要素 は anydbm .error  に な っ て い ま す --anydbm .error  が 送出 さ れ た 場合 、 後者 が 使 わ れ ま す 。 
open ( )  に よ っ て 返さ れ た オブジェクト は 辞書 と ほとんど 同じ 同じ 機能 を サポート し ま す ;  キー と それ に 対応 付け られ た 値 を 記憶 し 、 引き出し 、 削除 する こと が でき 、 has _key( )  および keys ( )  メソッド を 使 う こと が でき ま す 。 
キー および 値 は 常 に 文字 列 で す 。 
BSD  db  データベース インタフェース 。 
標準 の  Unix  データベース インタフェース 。 
dbm  インタフェース の 移植 性 の あ る 実装 。 
dbm  インタフェース に 基づ い た  GNU  データベース インタフェース 。 
Python  dbm  インタフェース 上 に 構築 さ れ た 汎用 オブジェクト 永続 化 機構 。 
既存 の データベース が どの 形式 の データベース か 判定 する ユーティリティ モジュール 。  . 
この モジュール で は 、 基本 的 な 値  ( 文字 、 整数 、 浮動 小数 点数 )  の アレイ ( array 、 配列 )  を 効率 よ く 表現 でき る オブジェクト 型 を 定義 し て い ま す 。 
アレイ 
は シーケンス  ( sequence )  型 で あ り 、 中 に 入れ る オブジェクト の 型 に 制限 が あ る こと を 除 け ば 、 リスト と まったく 同じ よう に 振る舞 い ま す 。 
オブジェクト 生成 時 に 一 文字 の 型 コード  を 用い て 型 を 指定 し ま す 。 
次 の 型 コード が 定義 さ れ て い ま す : 
型 コード 
C  の 型 
Python  の 型 
最小 サイズ  ( バイト 単位 ) 
文字 ( str 型 ) 
int 型 
Unicode 文字 ( unicode 型 ) 
long 型 
float 型 
値 の 実際 の 表現 は マシン アーキテクチャ  ( 厳密 に 言 う と C の 実装 )  に よ っ て 決ま り ま す 。 
値 の 実際 の サイズ は itemsize  属性 から 得 られ ま す 。 
Python  の 通常 の 整数 型 で は  C  の unsigned ( long )  整数 の 最大 範囲 を 表せ な い ため 、 ' L ' と ' I ' で 表現 さ れ て い る 要素 に 入 る 値 は  Python で は 長 整数 と し て 表 さ れ ま す 。  この モジュール で は 次 の 型 を 定義 し て い ま す : 
それ 以外 の 場合 に は 、 イテレーション 可能 オブジェクト  initializer  は 新た に 作成 さ れ た オブジェクト の extend ( ) メソッド に 渡 さ れ ま す 。 
array の 別名 で す 。 
撤廃 さ れ ま し た 。  アレイ オブジェクト で は 、 インデクス 指定 、 スライス 、 連結 および 反復 と い っ た 、 通常 の シーケンス の 演算 を サポート し て い ま す 。 
アレイ を 作 る とき に 使 う 型 コード 文字 で す 。 
アレイ の 要素  1  つ の 内部 表現 に 使 わ れ る バイト 長 で す 。 
値 x  の 新た な 要素 を アレイ の 末尾 に 追加 し ま す 。 
アレイ の 内容 を 記憶 する ため に 使 っ て い る バッファ の 、 現在 の メモリ アドレス と 要素数 の 入 っ た タプル ( address , length )  を 返 し ま す 。 
バイト 単位 で 表 し た メモリ バッファ の 大き さ は 
array . buffer_ info ( ) [ 1 ] *array . itemsize で 計算 でき ま す 。 
例えば ioctl ( )  操作 の よう な 、 メモリ アドレス を 必要 と する 低 レベル な  ( そして 、 本質 的 に 危険 な )  I \/ O インタフェース を 使 っ て 作業 する 場合 に 、 ときどき 便利 で す 。 
アレイ 自体 が 存在 し 、 長 さ を 変え る よう な 演算 を 適用 し な い 限り 、 有効 な 値 を 返 し ま す 。 
注意 : C  や C + +  で 書 い た コード から アレイ オブジェクト を 使 う 場合 ( buffer_ info  の 情報 を 使 う 意味 の あ る 唯一 の 方法 で す )  は 、 アレイ オブジェクト で サポート し て い る バッファ インタフェース を 使 う 方 が より 理 に かな っ て い ま す 。 
この メソッド は 後方 互換 性 の ため に 保守 さ れ て お り 、 新し い コード で の 使用 は 避け る べ き で す 。 
バッファ インタフェース の 説明 は 
Python\/C API リファレンス マニュアル 
アレイ の すべて の 要素 に 対 し て 「 バイト スワップ 」 ( リトル エンディアン と ビッグ エンディアン の 変換 )  を 行 い ま す 。 
この メソッド は 大き さ が  1 、 2 、 4  および  8  バイト の 値 に のみ を サポート し て い ま す 。  他 の 型 の 値 に 使 う と RuntimeError  を 送出 し ま す 。 
異な る バイト オーダ を も つ 計算 機 で 書 か れ た ファイル から データ を 読み込 む とき に 役 に 立 ち ま す 。 
シーケンス 中 の x  の 出現 回数 を 返 し ま す 。 
iterable  から 要素 を 取り出 し 、 アレイ の 末尾 に 要素 を 追加 し ま す 。 
iterable  が 別 の アレイ 型 で あ る 場合 、 二 つ の アレイ は 全く 同じ 型 コード を で な けれ ば な り ま せ ん 。  それ 以外 の 場合 に は TypeError  を 送出 し ま す 。 
iterable  が アレイ で な い 場合 、 アレイ に 値 を 追加 でき る よう な 正し い 型 の 要素 から な る イテレーション 可能 オブジェクト で な けれ ば な り ま せ ん 。  バージョン  2 . 4  で  変更  さ れ た 仕様 : 以前 は 他 の アレイ 型 しか 引数 に 指定 でき ま せ ん で し た 。 
ファイル オブジェクト f  から  ( マシン 依存 の データ 形式 その まま で ) n  個 の 要素 を 読み出し 、 アレイ の 末尾 に 要素 を 追加 し ま す 。 
n  個 の 要素 を 読め な かっ た とき は EOFError  を 送出 し ま す が 、 それ まで に 読み 出せ た 値 は アレイ に 追加 さ れ て い ま す 。 
f  は 本当 の 組み込 み ファイル オブジェクト で な けれ ば な り ま せ ん 。  read ( ) メソッド を も つ 他 の 型 で は 動作 し ま せ ん 。 
リスト から 要素 を 追加 し ま す 。 
型 に 関 する エラー が 発生 し た 場合 に アレイ が 変更 さ れ な い こと を 除 き 、 " for  x  in  list : a . append ( x ) " と 同じ で す 。 
文字 列 から 要素 を 追加 し ま す 。 
文字 列 は 、  ( ファイル から fromfile ( )  メソッド を 使 っ て 値 を 読み込 ん だ とき の よう に ) マシン 依存 の データ 形式 で 表 さ れ た 値 の 配列 と し て 解釈 さ れ ま す 。 
指定 し た  Unicode  文字 列 の データ を 使 っ て アレイ を 拡張 し ま す 。 
アレイ 中 で x  が 出現 する インデクス の うち 最小 の 値  i  を 返 し ま す 。 
アレイ 中 の 位置 i  の 前 に 値 x  を も つ 新し い 要素 を 挿入 し ま す 。 
i  の 値 が 負 の 場合 、 アレイ の 末尾 から の 相対 位置 と し て 扱 い ま す 。 
アレイ から インデクス が i  の 要素 を 取り除 いて 返 し ま す 。 
オプション の 引数 は デフォルト で - 1  に な っ て い て 、 最後 の 要素 を 取り除 いて返 す よう に な っ て い ま す 。 
リリース  1 . 5 . 1  で 撤廃 さ れ ま し た 。 
fromfile ( ) メソッド を 使 っ て くださ い 。 
アレイ 中 の x  の うち 、 最初 に 現れ た もの を 取り除 き ま す 。 
アレイ の 要素 の 順番 を 逆 に し ま す 。 
アレイ の すべて の 要素 を ファイル オブジェクト f に ( マシン 依存 の データ 形式 その まま で ) 書き込 み ま す 。 
アレイ を 同じ 要素 を 持 つ 普通 の リスト に 変換 し ま す 。 
アレイ を マシン 依存 の データ アレイ に 変換 し 、 文字 列 表現 ( tofile ( )  メソッド に よ っ て ファイル に 書き込 ま れ る もの と 同じ バイト 列 )  を 返 し ま す 。 
アレイ を  Unicode  文字 列 に 変換 し ま す 。 
アレイ の 型 コード は  ' u ' で な けれ ば な り ま せ ん 。  それ 以外 の 場合 に は  ValueError  を 送出 し ま す 。 
他 の 型 の アレイ から  Unicode  文字 列 を 得 る に は 、 " array . tostring ( ) . decode (enc ) "  を 使 っ て くださ い 。 
リリース  1 . 5 . 1  で 撤廃 さ れ ま し た 。 
tofile ( ) メソッド を 使 っ て くださ い 。 
ファイル オブジェクト f に 、 全て の 要素 を ( マシン 依存 の データ 形式 その まま で ) 書き込 み ま す 。 
アレイ オブジェクト を 表示 し たり 文字 列 に 変換 し たり する と 、 array (typecode , initializer )  と い う 形式 で 表現 さ れ ま す 。 
アレイ が 空 の 場合 、 initializer  の 表示 を 省略 し ま す 。  アレイ が 空 で な けれ ば 、 typecode  が ' c ' の 場合 に は 文字 列 に 、 それ 以外 の 場合 に は 数値 の リスト に な り ま す 。 
関数 array ( )  を from array importarray  で import  し て い る 限り 、 変換 後 の 文字 列 に 逆 クォーテーション ( `` ) を 用い る と 元 の アレイ オブジェクト と 同じ データ 型 と 値 を 持 つ アレイ に 逆 変換 でき る こと が 保証 さ れ て い ま す 。 
文字 列 表現 の 例 を 以下 に 示 し ま す : 
異な る 種類 の バイナリ データ の パック および アン パック 。 
遠隔 手続き 呼び出 し システム で 使 わ れ る 外部 データ 表現 仕様  ( External  DataRepresentation ,  XDR )  の データ の パック および アン パック 。  . 
Numeric  Python  拡張 モジュール  ( NumPy )  で は 、 別 の 方法 で シーケンス 型 を 定義 し て い ま す 。 
Numerical  Python  に 関 する 詳し い 情報 は http:\/\/numpy . sourceforge . net\/ を 参照 し て くださ い 。  ( NumPy  マニュアル の  PDF  バージョン は http:\/\/numpy . sourceforge . net\/numdoc\/numdoc . pdf で 手 に 入 り ま す 。 
1 1 . 25 . 1  asyncore の 例 : 簡単 な HTTP クライアント 
asynchat  を 使 う と 、 
は 同じ 非 同期 ループ を 使用 し て お り 、 asyncore . dispatcher も asynchat . async _ chat も 同じ チャネル マップ に 登録 する 事 が でき ま す 。 
通常 、 asyncore . dispatcher は サーバ チャネル と し て 使用 し 、 リクエスト の 受け付け 時 に asynchat . async _ chat オブジェクト を 生成 し ま す 。 
クラス async _ chat
この クラス は 、 asyncore . dispatcher から 継承 し た 抽象 クラス で す 。 
使用 する 際 に は async _ chat の サブ クラス を 作成 し 、 collect_ incoming_ data ( ) と found_terminator ( ) を 定義 し な けれ ば な り ま せ ん 。 
asyncore . dispatcher の メソッド を 使用 する 事 も でき ま す が 、 メッセージ \/ レスポンス 処理 を 中心 に 行 う 場合 に は 使え な い メソッド も あ り ま す 。 
asyncore . dispatcher と 同様 に 、 async _ chat も select ( ) 呼出 し 後 の ソケット の 状態 から イベント を 生成 し ま す 。 
ポーリン グループ 開始 後 、 イベント 処理 フレームワーク が 自動 的 に async _ chat の メソッド を 呼び出 し ま す の で 、 プログラマ が 処理 を 記述 する 必要 は あ り ま せ ん 。 
asyncore . dispatcher と 違 い 、 async _ chat で は プロ デューサ の  first - in - first - out キュー ( fifo ) を 作成 する 事 が でき ま す 。 
プロデューサ は more ( ) メソッド を 必ず 持 ち 、 この メソッド で チャネル 上 に 送出 する データ を 返 し ま す 。 
プロデューサ が 枯渇 状態 ( i . e .  これ 以上 の データ を 持 た な い 状態 ) に あ る 場合 、 more ( ) は 空 文字 列 を 返 し ま す 。 
この 時 、 async _ chat は 枯渇 状態 に あ る プロデューサ を fifo から 除去 し 、 次 の プロデューサ が 存在 すれ ば その プロデューサ を 使用 し ま す 。 
fifo に プロデューサ が 存在 し な い 場合 、 handle_write ( ) は 何 も し ま せ ん 。 
リモート 端点 から の 入力 の 終了 や 重要 な 中断 点 を 検出 する 場合 は 、 set_terminator ( ) に 記述 し ま す 。 async _ chat の サブ クラス で は 、 入力 メソッド collect_ incoming_ data ( ) と found_terminator ( ) を 定義 し 、 チャネル が 非 同期 に 受信 する データ を 処理 し ま す 。 
以下 に メソッド の 解説 を 示 し ま す 。 
プロデューサ fifo の トップ に None を プッシュ し ま す 。 
この プロデューサ が ポップ さ れ る と 、 チャネル が クローズ し ま す 。 
チャネル が 受信 し た 不定長 の データ を data に 指定 し て 呼び出 さ れ ま す 。  この メソッド は 必ず オーバライド する 必要 が あ り 、 デフォルト の 実装 で は 、 NotImplementedError  例外 を 送出 し ま す 。 
非常 用 の メソッド で 、 全て の 入出力 バッファ と プロデューサ fifo を 廃棄 し ま す 。 
入力 データ ストリーム が 、 set_terminator で 指定 し た 終了 条件 と 一致 し た 場合 に 呼び出 さ れ ま す 。 
この メソッド は 必ず オーバライド する 必要 が あ り 、 デフォルト の 実装 で は 、 NotImplementedError  例外 を 送出 し ま す 。 
入力 データ を 参照 する 必要 が あ る 場合 で も 引数 と し て は 与え られ な い ため 、 入力 バッファ を インスタンス 属性 と し て 参照 し な けれ ば な り ま せ ん 。 
現在 の チャネル の 終了 条件 を 返 し ま す 。 
チャネル 閉じ た 時 に 呼び出 さ れ ま す 。 
デフォルト の 実装 で は 単に チャネル の ソケット を クローズ し ま す 。 
チャネル の 非 同期 ループ で read イベント が 発生 し た 時 に 呼び出 さ れ 、 デフォルト の 実装 で は 、 set_terminator ( ) で 設定 さ れ た 終了 条件 を チェック し ま す 。 
終了 条件 と し て 、 特定 の 文字 列 か 受信 文字 数 を 指定 する 事 が でき ま す 。 
終了 条件 が 満た さ れ て い る 場合 、 handle_read は 終了 条件 が 成立 する より も 前 の データ を 引数 と し て collect_ incoming_ data ( ) を 呼び出 し 、 その 後 found_terminator ( ) を 呼び出 し ま す 。 
アプリケーション が データ を 出力 する 時 に 呼び出 さ れ 、 デフォルト の 実装 で は initiate_send ( ) を 呼び出 し ま す 。 
initiate_send ( ) で は refill_buffer ( ) を 呼び出 し 、 チャネル の プロデューサ fifo から データ を 取得 し ま す 。 
data を 持 つ simple_producer ( 後述 ) オブジェクト を 生成 し 、 チャネル の producer _fifo に プッシュ し て 転送 し ま す 。 
データ を チャネル に 書き出 す ため に 必要 な の は これ だけ で す が 、 データ の 暗号 化 や チャンク 化 など を 行 う 場合 に は 独自 の プロデューサ を 使用 する 事 も でき ま す 。 push_with _producer 
指定 し た プロデューサ オブジェクト を チャネル の fifo に 追加 し ま す 。 
これ より 前 に push さ れ た プロデューサ が 全て 枯渇 し た 後 、 チャネル は この プロデューサ から more ( ) メソッド で データ を 取得 し 、 リモート 端点 に 送信 し ま す 。 
select ( ) ループ で この チャネル の 読み込 み 可能 チェック を 行 う 場合 に は 、 True を 返 し ま す 。 
fifo の 先頭 に あ る プロデューサ の more ( ) メソッド を 呼び出 し 、 出力 バッファ を 補充 し ま す 。 
先頭 の プロデューサ が 枯渇 状態 の 場合 に は fifo から ポップ さ れ 、 その 次 の プロデューサ が アクティブ に な り ま す 。  アクティブ な プロデューサ が None に な る と 、 チャネル は クローズ さ れ ま す 。 
チャネル で 検出 する 終了 条件 を 設定 し ま す 。 term は 入力 プロトコルデータ の 処理 方式 に よ っ て 以下 の 3 つ の 型 の 何れ か を 指定 し ま す 。 
入力 ストリーム 中 で string が 検出 さ れ た 時 、 found_terminator ( ) を 呼び出 し ま す 。 
指定 さ れ た 文字 数 が 読み込 ま れ た 時 、 found_terminator ( ) を 呼び出 し ま す 。 
永久 に データ を 読み込 み ま す 。 
終了 条件 が 成立 し て も 、 その 後 に 続 く データ は 、 found_terminator ( ) の 呼出 し 後 に 再び チャネル を 読み込め ば 取得 する 事 が でき ま す 。 
Should  return True  as  long  as items  remain  on the  producer  fifo ,or  the  channel is  connectedand  the  channel's outputbuffer  is  non -empty . プロデューサ fifo が 空 で は な い か 、 チャネル が 接続 中 で 出力 バッファ が 空 で な い 場合 、 True を 返 し ま す 。 
この モジュール は 、 非 同期 ソケット サービス の クライアント ・ サーバ を 開発 する ため の 基盤 と し て 使 わ れ ま す 。 
CPU が 一 つ しか な い 場合 、 プログラム が ` ` 二 つ の こと を 同時 に ' ' 実行 する 方法 は 二 つ しか あ り ま せ ん 。 
もっとも 簡単 で 一般 的 な の は マルチ スレッド を 利用 する 方法 で す が 、 これ と は まったく 異な る テクニック で 、 一 つ の スレッド だけ で マルチ スレッド と 同じ よう な 効果 を 得 られ る テクニック が あ り ま す 。  この テクニック は I \/ O 処理 が 中心 で あ る 場合 に のみ 有効 で 、 CPU 負荷 の 高 い プログラム で は 効果 が 無 く 、 この 場合 に は プリエンプティブ な スケジューリング が 可能 な スレッド が 有効 で しょ う 。 
asyncore は 多く の 複雑 な 問題 を 解決 済み な の で 、 洗練 さ れ 、 パフォーマンス に も 優れ た ネットワーク サーバ と クライアント を 簡単 に 開発 する こと が でき ま す 。 
とくに 、 
の よう な 、 対話 型 の アプリケーション や プロトコル に は 非常 に 有効 で しょ う 。  基本 的 に は 、 この 二 つ の モジュール を 使 う 場合 は 一 つ 以上 の ネットワーク チャネル を asyncore . dispatcher クラス 、 また は asynchat . async _ chat の インスタンス と し て 作成 し ま す 。 
作成 さ れ た チャネル は グローバル マップ に 登録 さ れ 、 loop ( ) 関数 で 参照 さ れ ま す 。 loop ( ) に は 、 専用 の マップ を 渡 す 事 も 可能 で す 。 
チャネル を 生成 後 、 loop ( ) を 呼び出 す と チャネル 処理 が 開始 し 、 最後 の チャネル ( 非 同期 処理 中 に マップ に 追加 さ れ た チャネル を 含 む ) が 閉じ る まで 継続 し ま す 。 
ポーリン グループ を 開始 し 、 count 回 が 過ぎ る か 、 全て の オープン 済み チャネル が クローズ さ れ た 場合 のみ 終了 し ま す 。 
全て の 引数 は オプション で す 。 
引数 count の デフォルト 値 は None で 、 ループ は 全て の チャネル が クローズ さ れ た 場合 のみ 終了 し ま す 。 
引数 map に は 、 監視 する チャネル を アイテム と し て 格納 し た 辞書 を 指定 し ま す 。 
map が 省略 さ れ た 場合 、 グローバル な マップ が 使用 さ れ る 。 
グローバル な マップ は 、 チャネル クラス の _ _ init_ _( ) メソッド が 呼び出 さ れ た とき に 自動 的 に 更新 さ れ ま す 。 -  この 仕組み を 利用 する の で あ れ ば 、 チャネル クラス の _ _ init_ _() は オーバライド する の で は な く 、 拡張 し な けれ ば な り ま せ ん 。 
クラス dispatcher 
dispatcher クラス は 、 低 レベル ソケット オブジェクト の 薄 い ラッパー で す 。  便宜 上 、 非 同期 ループ から 呼び出 さ れ る イベント 処理 メソッド を 追加 し て い ま す が 、 これ 以外 の 点 で は 、 non-blocking な ソケット と 同様 で す 。 
dispatcher クラス に は 二 つ の クラス 属性 が あ り 、 パフォーマンス 向上 や メモリ の 削減 の ため に 更新 する 事 が でき ま す 。 
非 同期 入力 バッファ の サイズ ( デフォルト  4096 ) 
非 同期 出力 バッファ の サイズ ( デフォルト  4096 ) 
非 同期 ループ 内 で 低 レベル イベント が 発生 し た 場合 、 発生 の タイミング や コネクション の 状態 から 特定 の 高 レベル イベント へ と 置き換え る こと が でき ま す 。 
例えば ソケット を 他 の ホスト に 接続 する 場合 、 最初 の 書き込み 可能 イベント が 発生 すれ ば 接続 が 完了 し た 事 が 分か り ま す ( この 時点 で 、 ソケット へ の 書き込み は 成功 する と 考え られ る ) 。 
この よう に 判定 でき る 高 レベル イベント を 以下 に 示 し ま す : 
イベント 
解説 
最初 に write イベント が 発生 し た 時 
読み込 み 可能 な データ なし で read イベント が 発生 し た 時 
listen 中 の ソケット で read イベント が 発生 し た 時 
非 同期 処理 中 、 マップ に 登録 さ れ た チャネル の readable ( ) メソッド と writable ( ) メソッド が 呼び出 さ れ 、 select ( ) か poll ( ) で read\/write イベント を 検出 する リスト に 登録 する か 否 か を 判定 し ま す 。 
この よう に し て 、 チャネル で は 低 レベル な ソケット イベント の 種類 より 多く の 種類 の イベント を 検出 する 事 が でき ま す 。 
以下 に あげ る イベント は 、 サブ クラス で オーバライド する こと が 可能 で す :  handle_read 
非 同期 ループ で 、 チャネル の ソケット の read ( ) メソッド の 呼び出し が 成功 し た 時 に 呼び出 さ れ ま す 。 
非 同期 ループ で 、 書き込み 可能 ソケット が 実際 に 書き込み 可能 に な っ た 時 に 呼び出 さ れ る 。 
この メソッド は 、 パフォーマンス の 向上 の ため バッファ リング を 行 う 場合 など に 利用 でき ま す 。 
out  of band  ( OOB ) データ が 検出 さ れ た 時 に 呼び出 さ れ ま す 。 
OOB は あまり サポート さ れ て お ら ず 、 また 滅多 に 使 わ れ な い の で 、 handle_expt ( ) が 呼び出 さ れ る こと は ほとんど あ り ま せ ん 。 
ソケット の 接続 が 確立 し た 時 に 呼び出 さ れ ま す 。 ` `welcome' ' バナー の 送信 、 プロトコルネゴシエーション の 初期 化 など を 行 い ま す 。 
ソケット が 閉じ た 時 に 呼び出 さ れ ま す 。 
捕捉 さ れ な い 例外 が 発生 し た 時 に 呼び出 さ れ ま す 。 
デフォルト で は 、 短縮 し た トレース バック 情報 が 出力 さ れ ま す 。 
listen 中 の チャネル が リモート ホスト から の connect ( ) で 接続 さ れ 、 接続 が 確立 し た 時 に 呼び出 さ れ ま す 。 
非 同期 ループ 中 に 呼び出 さ れ 、 read イベント の 監視 リスト に 加え る か 否 か を 決定 し ま す 。 
デフォルト の メソッド で は True を 返 し 、 read イベント の 発生 を 監視 し ま す 。 
非 同期 ループ 中 に 呼び出 さ れ 、 write イベント の 監視 リスト に 加え る か 否 か を 決定 し ま す 。 
デフォルト の メソッド で は True を 返 し 、 write イベント の 発生 を 監視 し ま す 。 
さらに 、 チャネル に は ソケット の メソッド と ほぼ 同じ メソッド が あ り 、 チャネル は ソケット の メソッド の 多く を 委譲 ・ 拡張 し て お り 、 ソケット と ほぼ 同じ メソッド を 持 っ て い ま す 。 
引数 も 含め 、 通常 の ソケット 生成 と 同じ 。 
モジュール を 参照 の こと 。 
通常 の ソケット オブジェクト と 同様 、 address に は 一番 目 の 値 が 接続 先 ホスト 、 2 番 目 の 値 が ポート 番号 で あ る タプル を 指定 し ま す 。 
リモート 側 の 端点 に data を 送出 し ま す 。 
リモート 側 の 端点 より 、 最大 buffer_ size バイト の データ を 読み込 み ま す 。  長 さ 0 の 文字 列 が 返 っ て き た 場合 、 チャネル は リモート から 切断 さ れ た 事 を 示 し ま す 。 
ソケット へ の 接続 を 待 つ 。 
引数 backlog は 、 キューイング でき る コネクション の 最大 数 を 指定 し ま す ( 1 以上 ) 。  最大 数 は システム に 依存 で し ま す ( 通常 は 5 ) 
ソケット を address に バインド し ま す 。 
ソケット は バインド 済み で あ っ て は な り ま せ ん 。 
接続 を 受け入れ ま す 。 
ソケット は アドレス に バインド 済み で あ り 、 listen ( ) で 接続 待ち 状態 で な けれ ば な り ま せ ん 。 
戻 り 値 は ( conn ,  address ) の ペア で 、 conn は データ の 送受信 を 行 う ソケット オブジェクト 、 address は 接続 先 ソケット が バインド さ れ て い る アドレス で す 。 
ソケット を クローズ し ま す 。 
以降 の 全て の 操作 は 失敗 し ま す 。 
リモート 端点 で は 、 キュー に 溜ま っ た データ 以外 、 これ 以降 の データ 受信 は 行え ま せ ん 。 
ソケット は ガベージ コレクト 時 に 自動 的 に クローズ さ れ ま す 。 
1 1 . 25 . 1  asyncore の 例 : 簡単 な HTTP クライアント 
atexit  モジュール で は 、 後 始末 関数 を 登録 する ため の 関数 を 一 つ だけ 定義 し て い ま す 。 
注意 :  sys . exitfunc を 設定 する 他 の コード と とも に 使用 し た 場合 に は 、 この モジュール は 正し く 動作 し な い で しょ う 。 
特に 、 他 の コア  Python  モジュール で は 、 プログラマ の 意図 を 知 ら な く て も atexit を 自由 に 使え ま す 。 
sys . exitfunc  を 使 っ て い る 人 は 、 代わり に atexit を 使 う コード に 変換 し て くださ い 。 
sys . exitfunc  を 設定 する コード を 変換 する に は 、 atexit  を import し 、 sys . exitfunc  へ 束縛 さ れ て い た 関数 を 登録 する の が 最も 簡単 で す 。 
終了 時 に 実行 さ れ る 関数 と し て func を 登録 し ま す 。 
すべて の func へ 渡 す オプション の 引数 を 、 register ( ) へ 引数 と し て わた さ な けれ ば な り ま せ ん 。  通常 の プログラム の 終了 時 、 例えば sys . exit ( )  が 呼び出 さ れ る とき 、 あるいは 、 メイン モジュール の 実行 が 完了 し た とき に 、 登録 さ れ た 全て の 関数 を 、 最後 に 登録 さ れ た もの から 順 に 呼び出 し ま す 。 
通常 、 より 低 レベル の モジュール は より 高 レベル の モジュール より 前 に import  さ れ る の で 、 後 で 後 始末 が 行 わ れ る と い う 仮定 に 基づ い て い ま す 。  終了 ハンドラ の 実行 中 に 例外 が 発生 する と 、 ( SystemExit 以外 の 場合 は ) トレース バック を 表示 し て 、 例外 の 情報 を 保存 し ま す 。 
全て の 終了 ハンドラ に 動作 する チャンス を 与え た 後 に 、 最後 に 送出 さ れ た 例外 を 再 送出 し ま す 。 
: モジュール 
ヒストリファイル を 読み書き する ため の atexit の 有用 な 例 で す 。 
audioop  モジュール は 音声 データ を 操作 する 関数 を 収録 し て い ま す 。 
この モジュール は 、 Python  文字 列 型 中 に 入 っ て い る  8 ,  16 ,  32  ビット の 符号 付き 整数 で でき た 音声 データ 、 すなわち 
で 使 わ れ て い る の と 同じ 形式 の 音声 データ を 操作 し ま す 。 
特に 指定 の 無 い かぎり 、 スカラ 量 を 表 す 要素 は すべて 整数 型 に な っ て い ま す 。  この モジュール は u - LAW と Intel \/ DVI  ADPCM エンコード を サポート し て い ま す 。 
複雑 な 操作 の うち いく つ か は サンプル 幅 が  16  ビット の データ に 対 し て のみ 働 き ま す が 、 それ 以外 は 常 に サンプル 幅 を 操作 の パラメタ と し て  ( バイト 単位 で )  渡 し ま す 。  この モジュール で は 以下 の 変数 と 関数 を 定義 し て い ま す : 
この 例外 は 、 未知 の サンプル 当たり の バイト 数 を 指定 し た 時 など 、 全般 的 な エラー に 対 し て 送出 さ れ ま す 。 
パラメタ に 渡 し た  2  つ の データ を 加算 し た 結果 を 返 し ま す 。 width は サンプル 幅 を バイト で 表 し た もの で 、 1 、 2 、 4 の うち いずれ か で す 。 
2  つ の データ は 同じ サンプル 幅 で な けれ ば な り ま せ ん 。 
Intel \/ DVI  ADPCM  形式 の データ を リニア  ( linear )  形式 に デコード し ま す 。 
ADPCM  符号 化 方式 の 詳細 に つ い て は lin 2adpcm ( )  の 説明 を 参照 し て 下さ い 。  ( sample ,  newstate )  から な る タプル を 返 し 、 サンプル は width  に 指定 し た 幅 に な り ま す 。 
3  ビット 符号 を 使 う 別 の  ADPCM  で 符号 化 さ れ て い る データ を デコード し ま す 。 
詳し く は lin 2adpcm3 ( ) を 参照 し て 下さ い 。 
データ 中 の 全 サンプル の 平均 値 を 返 し ま す 。 
データ 中 の 全 サンプル の 平均  peak - peak  振幅 を 返 し ま す 。  フィルタリング を 行 っ て い な い 場合 、 この ルーチン の 有用 性 は 疑問 で す 。 
元 データ の 各 サンプル に バイアス を 加え た データ を 返 し ま す 。 
引数 に 渡 し た データ 中 の ゼロ 交差 回数 を 返 し ま す 。 
rms ( add ( fragment , mul ( reference ,  - F)))  を 最小 に する よう な 係数 F  、 すなわち 、 reference  に 乗算 し た とき に もっとも  fragment  に 近 く な る よう な 値 を 返 し ま す 。  fragment と reference  の サンプル 幅 は いずれ も  2 バイト で な けれ ば な り ま せ ん 。 
この ルーチン の 実行 に 要 する 時間 は len ( fragment ) に 比例 し ま す 。 
reference  を 可能 な 限り  fragment  に 一致 さ せ よう と し ま す ( fragment  は  reference  より 長 く な けれ ば な り ま せ ん ) 。 
この 処理 は  ( 概念 的 に は )  fragment  から スライス を いく つ か 取り出 し 、 それぞれ に つ い て findfactor ( )  を 使 っ て 最良 な 一致 を 計算 し 、 誤差 が 最小 の 結果 を 選 ぶ こと で 実現 し ま す 。 
fragment と reference の サンプル 幅 は 両方 とも 2 バイト で な けれ ば な り ま せ ん 。 
(offset ,  factor )  から な る タプル を 返 し ま す 。  offset  は 最適 な 一致 箇所 が 始ま る fragment の オフセット 値 ( 整数 ) で 、 factor は findfactor ( )  の 返 す 係数 ( 浮動 小数 点数 )  で す 。 
fragment  から 、 長 さ が length  サンプル  ( バイト で は あ り ま せ ん ! ) で 最大 の エネルギー を 持 つ スライス 、 すなわち 、 rms ( fragment [ i * 2 : ( i + length ) * 2 ] )  を 最大 に する よう な スライス を 探 し 、  i  を 返 し ま す 。  データ の は サンプル 幅 は  2 バイト で な けれ ば な り ま せ ん 。 
この ルーチン の 実行 に 要 する 時間 は len ( fragment ) に 比例 し ま す 。 
データ 中 の index サンプル 目 の 値 を 返 し ま す 。 
サンプル 幅 を  1 、 2 、 4  バイト 形式 の 間 で 変換 し ま す 。 
データ を  4  ビット の  Intel \/ DVI  ADPCM  符号 化 方式 に 変換 し ま す 。 
ADPCM  符号 化 方式 と は 適応 符号 化 方式 の 一 つ で 、 ある サンプル と ( 可変 の )  ステップ だけ 離れ た その 次 の サンプル と の 差 を  4  ビット の 整数 で 表現 する 方式 で す 。 
Intel \/ DVI  ADPCM アルゴリズム は  IMA  ( 国際 MIDI 協会 )  に 採用 さ れ て い る の で 、 おそらく 標準 に な る はず で す 。 
state  は エンコーダ の 内部 状態 が 入 っ た タプル で す 。 
エンコーダ は ( adpcmfrag ,  newstate )  の タプル を 返 し 、 次 に  lin 2adpcm ( ) を 呼び出 す 時 に newstate  を 渡 さ ね ば な り ま せ ん 。 
最初 に 呼び出 す 時 に は state に None  を 渡 し て も かま い ま せ ん 。  adpcmfrag  は  ADPCM で 符号 化 さ れ た データ で 、 バイト 当たり  2  つ の 4 ビット 値 が パック さ れ て い ま す 。 
サンプル 当たり  3  ビット だけ しか 使 わ な い 別 の  ADPCM  符号 化 方式 の エンコーダ で す 。  Intel \/ DVI  ADPCM  形式 と の 互換 性 は な く 、 ( 作者 の 怠慢 から )  出力 は パック さ れ て い ま せ ん 。 
この エンコーダ の 使用 は 推奨 し ま せ ん 。 
音声 データ の 各 サンプル を  u - LAW  符号 で エンコード し 、 Python 文字 列 と し て 返 し ま す 。 
u - LAW  と は 音声 符号 化 方式 の 一 つ で 、 約  14  ビット に 相当 する ダイナミック レンジ を わずか  8  ビット で 実現 でき ま す 。 
Sun  や その 他 の 音声 ハードウェア で 使 わ れ て い ま す 。 
音声 データ 全 サンプル 中 に おけ る 最小 値 と 最大 値 から な る タプル を 返 し ま す 。 
音声 データ 全 サンプル の 絶対 値  の 最大 値 を 返 し ま す 。 
音声 データ の 最大  peak - peak  振幅 を 返 し ま す 。 
元 の データ の 全 サンプル に 浮動 小数 点数 factor を 掛け た データ を 返 し ま す 。 
オーバフロー が 起き て も 例外 を 送出 せ ず 無視 し ま す 。 
入力 し た データ の フレーム レート を 変換 し ま す 。 
state  は 変換 ルーチン の 内部 状態 を 入れ た タプル で す 。 
変換 ルーチン は ( newfragment ,  newstate ) を 返 し 、 次 に ratecv ( ) を 呼び出 す 時 に は newstate を 渡 さ な ね ば な り ま せ ん 。 
最初 の 呼び出し で は None を 渡 し ま す 。  引数 weightA と weightB  は 単純 な デジタル フィルタ の パラメタ で 、 デフォルト 値 は それぞれ 1  と 0 で す 。 
データ 内 の サンプル の 順序 を 逆転 し 、 変更 さ れ た データ を 返 し ま す 。 
データ の 自乗 平均 根  ( root - mean - square )  、 すなわち  を 返 し ま す 。 
これ は オーディオ 信号 の 強度  ( power )  を 測 る 一 つ の 目安 で す 。 
ステレオ 音声 データ を モノラル 音声 データ に 変換 し ま す 。 
左 チャネル の データ に  lfactor 、 右 チャネル の データ に  rfactor を 掛け た 後 、 二 つ の チャネル の 値 を 加算 し て 単一 チャネル の 信号 を 生成 し ま す 。 
モノラル 音声 データ を ステレオ 音声 データ に 変換 し ま す 。 
ステレオ 音声 データ の 各 サンプル 対 は 、 モノラル 音声 データ の 各 サンプル を それぞれ 左 チャネル は  lfactor  倍 、 右 チャネル は  rfactor  倍 し て 生成 し ま す 。 
u - LAW  で 符号 化 さ れ て い る 音声 データ を 線形 に 符号 化 さ れ た 音声 データ に 変換 し ま す 。 
u - LAW  符号 化 は 常 に サンプル 当たり  8  ビット を 使 う ため 、 width  は 出力 音声 データ の サンプル 幅 に しか 使 わ れ ま せ ん 。 
mul ( )  や max ( )  と い っ た 操作 は モノラル と ステレオ を 区別 し な い 、 すなわち 全て の データ を 平等 に 扱 う と い う こと に 注意 し て くださ い 。 
この 仕様 が 問題 に な る よう なら 、 あらかじめ ステレオ 音声 データ を 二 つ の モノラル 音声 データ に 分割 し て お き 、 操作 後 に 再度 統合 し て くださ い 。 
その よう な 例 を 以下 に 示 し ま す : 
ADPCM  エンコーダ を 使 っ て 音声 データ の 入 っ た ネットワーク パケット を 構築 する 際 、 自分 の プロトコル を  ( パケット ロス に 耐え られ る よう に ) ステートレス  ( stateless )  に し た い なら 、 データ だけ で な く 状態 変数  ( state ) も 伝送 せ ね ば な り ま せ ん 。 
この とき 、 伝送 する の は エンコード 後 状態 ( エンコーダ の 返 す 値 )  で は な く 、 エンコーダ の 初期 状態  ( lin 2adpcm ( )  に 渡 し た 値 )  initial  な の で 注意 し て くださ い 。 
struct . struct ( ) を 使 っ て 状態 変数 を バイナリ 形式 で 保存 し た い なら 、 最初 の 要素  ( 予測 値 )  は  16  ビット で 、 次 の 値  ( デルタ 係数 :  delta index)  は  8  ビット で 符号 化 でき ま す 。  この モジュール の  ADPCM  符号 の テスト は 自分 自身 に 対 し て のみ 行 っ て お り 、 他 の  ADPCM  符号 と の 間 で は 行 っ て い ま せ ん 。 
エコー 除去 を 十分 高速 に 行 う に は 、 出力 サンプル 中 から 最も 大きな エネルギー を 持 っ た 部分 を 取り出 し 、 この 部分 が 入力 サンプル 中 の どこ に あ る か を 調べ 、 入力 サンプル から 出力 サンプル 自体 を 減算 し ま す : 
defechocancel (outputdata ,  inputdata) : pos =  audioop . findmax (outputdata ,  80 0 )  #  1 \/ 10 秒 out_test  =  outputdata [ pos * 2 : ] in_test  = inputdata [ pos * 2 : ] ipos,  factor  =  audioop . findfit ( in_test ,  out_test ) # Optional  ( for  better  cancellation ) : #factor  =  audioop . findfactor ( in_test [ ipos * 2 :ipos * 2 + len (out_test ) ] ,# out_test ) prefill = ' \0 '* ( pos + ipos) * 2 postfill = ' \0 '* ( len ( inputdata) - len ( prefill) - len (outputdata) ) outputdata=  prefill +  audioop . mul (outputdata , 2 , - factor )  + postfillreturn audioop . add ( inputdata ,  outputdata ,  2 ) 
autoGIL モジュール は 、 自動 的 に イベント ループ を 実行 する 場合  、 Python  の グローバル インタープリタ を ロック し たり 、 ロック の 解除 を し たり する ため の 関数  installAutoGIL  を 提供 し ま す 。 
例えば 現在 の スレッド が ループ し て い な い など 、 オブザーバ に コール バック が でき な い 場合 に 発生 し ま す 。 
現在 の スレッド の イベント ループ ( CFRunLoop ) 中 の オブザーバ に コール バック を 行な い 、 適切 な 時 に グローバル インタープリタ ロック ( GIL ) を 、 イベント ループ が 使用 さ れ て い な い 間 、 他 の  Python  スレッド の 起動 が でき る よう に ロック し たり 、 ロック の 解除 を し たり し ま す 。  有効 性 : OSX  10 . 1 以降 
この モジュール は 、  RFC  35 4 8  で 定め られ た 仕様 に よ る データ の 符号 化  ( エンコード 、 encoding )  および 復元  ( デコード 、 decoding )  を 提供 し ま す 。 
この  RFC  標準 で は  Base 16 ,  Base 32  および  Base 64  が 定義 さ れ て お り 、 これ は バイナリ 文字 列 と テキスト 文字 列 と を エンコード あるいは デコード する ため の アルゴリズム で す 。  変換 さ れ た テキスト 文字 列 は  email  で 確実 に 送信 し たり 、 URL  の 一部 と し て 使用 し たり 、 HTTP  POST  リクエスト の 一部 に 含め る こと が でき ま す 。 
これ ら の 符号 化 アルゴリズム は  uuencode  で 使 わ れ て い る もの と は 別物 で す 。  この モジュール で は  2 つ の インターフェイス が 提供 さ れ て い ま す 。 
現代 的 な インターフェイス は 、 これ ら  3 種類 の アルファベット 集合 を 使 っ た 文字 列 オブジェクト の エンコード および デコード を すべて サポート し ま す 。 
一方 、 レガシー な インターフェイス は 、 文字 列 と とも に ファイル 風 の オブジェクト に 対 する エンコード  \/  デコード を 提供 し ま す が 、 Base 64  標準 の アルファベット 集合 しか 使 い ま せ ん 。 
現代 的 な インターフェイス は 以下 の もの を 提供 し ま す :  b 64encode 
Base 64  を つか っ て 、 文字 列 を  エンコード  ( 符号 化 )  し ま す 。 
s  は エンコード する 文字 列 で す 。 
オプション 引数  altchars  は 最低 で も  2  の 長 さ を も つ 文字 列 で  ( これ 以降 の 文字 は 無視 さ れ ま す ) 、 これ は  +  と \/  の 代わり に 使 わ れ る 代替 アルファベット を 指定 し ま す 。 
これ に よ り 、 アプリケーション は たとえば  URL  や ファイル システム の 影響 を うけ な い Base 64  文字 列 を 生成 する こと が でき ま す 。 
デフォルト の 値 は  None  で 、 これ は 標準 の  Base 64  アルファベット 集合 が 使 わ れ る こと を 意味 し ま す 。  エンコード さ れ た 文字 列 が 返 さ れ ま す 。 
Base 64  文字 列 を デコード  ( 復元 )  し ま す 。 
s  に は デコード する 文字 列 を 渡 し ま す 。 
オプション 引数 の  altchars  は 最低 で も  2  の 長 さ を も つ 文字 列 で  ( これ 以降 の 文字 は 無視 さ れ ま す ) 、 これ は  +  と \/  の 代わり に 使 わ れ る 代替 アルファベット を 指定 し ま す 。 
デコード さ れ た 文字 列 が 返 さ れ ま す 。  s  が 正し く パディング さ れ て い な かっ たり 、 規定 の アルファベット 以外 の 文字 が 含 ま れ て い た 場合 に は  TypeError  が 発生 し ま す 。 
標準 の  Base 64  アルファベット 集合 を もちい て 文字 列  s  を エンコード  ( 符号 化 )  し ま す 。 
標準 の  Base 64  アルファベット 集合 を もちい て 文字 列  s  を デコード  ( 復元 )  し ま す 。 
URL  用 に 安全 な アルファベット 集合 を もちい て 文字 列  s  を エンコード  ( 符号 化 )  し ま す 。 
これ は 、 標準 の  Base 64  アルファベット 集合 に あ る  +  の かわり に  -  を 使 い 、 \/  の かわり に _ を 使用 し ま す 。 urlsafe_b64decode 
URL  用 に 安全 な アルファベット 集合 を もちい て 文字 列  s  を デコード  ( 復元 )  し ま す 。 
これ は 、 標準 の  Base 64  アルファベット 集合 に あ る  +  の かわり に  -  を 使 い 、 \/  の かわり に _ を 使用 し ま す 。  b 32encode 
Base 32  を つか っ て 、 文字 列 を エンコード  ( 符号 化 )  し ま す 。 
s  に は エンコード する 文字 列 を 渡 し 、 エンコード さ れ た 文字 列 が 返 さ れ ま す 。 
Base 32  を つか っ て 、 文字 列 を デコード  ( 復元 )  し ま す 。 
s  に は エンコード する 文字 列 を 渡 し ま す 。 
オプション 引数  casefold  は 小 文字 の アルファベット を 受け つけ る か どう か を 指定 し ま す 。 
セキュリティ 上 の 理由 に よ り 、 デフォルト で は これ は  False  に な っ て い ま す 。 
RFC  35 4 8  は 付加 的 な マッピング と し て 、 数字 の  0  ( 零 )  を アルファベット の  O  ( オー )  に 、 数字 の  1  ( 壱 )  を アルファベット の  I  ( アイ )  また は  L  ( エル)  に 対応 さ せ る こと を 許 し て い ま す 。 
オプション 引数 は  map 01  は 、 None  で な い とき は 、 数字 の  1  を どの 文字 に 対応 づけ る か を 指定 し ま す ( map 01  が  None  で な い とき 、 数字 の  0  は つね に アルファベット の  O  ( オー )  に 対応 づけ られ ま す ) 。 
セキュリティ 上 の 理由 に よ り 、 これ は デフォルト で は  None  に な っ て い る ため 、 0  および  1  は 入力 と し て 許可 さ れ て い ま せ ん 。  デコード さ れ た 文字 列 が 返 さ れ ま す 。 
s  に は エンコード する 文字 列 を 渡 し 、 エンコード さ れ た 文字 列 が 返 さ れ ま す 。 
Base 16  を つか っ て 、 文字 列 を デコード  ( 復元 )  し ま す 。 
セキュリティ 上 の 理由 に よ り 、 デフォルト で は これ は  False  に な っ て い ま す 。  デコード さ れ た 文字 列 が 返 さ れ ま す 。 
s  が 正し く パディング さ れ て い な かっ たり 、 規定 の アルファベット 以外 の 文字 が 含 ま れ て い た 場合 に は  TypeError  が 発生 し ま す 。 
レガシー な インターフェイス は 以下 の もの を 提供 し ま す : 
input . read ( ) が 空 文字 列 を 返 す まで 読 ま れ ま す 。 
文字 列 s を デコード し て 結果 の バイナリ データ を 返 し ま す 。  s に は 一行 以上 の base 64 形式 で エンコード さ れ た データ が 含 ま れ て い る 必要 が あ り ま す 。 
input の 中身 を base 64 形式 で エンコード し た 結果 を output に 出力 し ま す 。  input 、 output とも に ファイル オブジェクト か 、 ファイル オブジェクト と 同じ インターフェース を 持 っ た オブジェクト で あ る 必要 が あ り ま す 。 
文字 列 s ( 任意 の バイナリ データ を 含 む こと が でき ま す ) を base 64 形式 で エンコード し た 結果 の ( 1 行 以上 の 文字 列 ) データ を 返 し ま す 。 
encodestring ( ) は エンコード さ れ た 一行 以上 の データ と 改行 文字 ( ' n' ) を 出力 し ま す 。 
ASCII  から バイナリ へ 、 バイナリ から ASCII へ の 変換 を サポート する モジュール 。 
binascii モジュール に は バイナリ と  ASCII コード 化 さ れ た バイナリ 表現 と の 間 の 変換 を 行 う ため の 多数 の メソッド が 含 ま れ て い ま す 。 
通常 、 これ ら の 関数 を 直接 使 う 必要 は な く 、 
や 
uuencode  さ れ た  1  行 の データ  を バイナリ に 変換 し 、 変換 後 の バイナリ データ を 返 し ま す 。 
最後 の 行 を 除 い て 、 通常  1  行 に は ( バイナリ データ で )  45  バイト が 含 ま れ ま す 。 
入力 データ の 先頭 に は 空白 文字 が 連続 し て い て も かま い ま せ ん 。 
バイナリ データ を  uuencode  し て  1  行 の  ASCII  文字 列 に 変換 し ま す 。  戻 り 値 は 変換 後 の  1  行 の 文字 列 で 、 改行 を 含 み ま す 。 
data  の 長さ は 45  バイト 以下 で な けれ ば な り ま せ ん 。 
base 64  で エンコード さ れ た データ の ブロック を バイナリ に 変換 し 、 変換 後 の バイナリ データ を 返 し ま す 。 
一 度 に  1  行 以上 の データ を 与え て も かま い ま せ ん 。 
バイナリ データ を  base 64  で エンコード し て  1  行 の  ASCII  文字 列 に 変換 し ま す 。  戻 り 値 は 変換 後 の  1  行 の 文字 列 で 、 改行 文字 を 含 み ま す 。 
base 64  標準 を 遵守 する ため に は 、 data  の 長 さ は  57  バイト 以下 で な く て は な り ま せ ん 。 a 2b_qp
quoted - printable  形式 の データ を バイナリ に 変換 し 、 バイナリ データ を 返 し ま す 。  一 度 に  1  行 以上 の データ を 渡 す こと が でき ま す 。 
オプション 引数  header  が 与え られ て お り 、 かつ その 値 が 真 で あ れ ば 、 アンダース コア は 空白 文字 に デコード さ れ ま す 。 
バイナリ データ を  quoted - printable  形式 で エンコード し て  1  行 から 複数 行 の ASCII  文字 列 に 変換 し ま す 。 
変換 後 の 文字 列 を 返 し ま す 。  オプション 引数  quptetabs  が 存在 し 、 かつ その 値 が 真 で あ れ ば 、 全て の タブ および 空白 文字 も エンコード さ れ ま す 。 
binhex 4  形式 の  ASCII  文字 列 データ を  RLE  展開 を 行 わ な い で バイナリ に 変換 し ま す 。 
文字 列 は バイナリ の バイト データ を 完全 に 含 む よう な 長 さ か 、 また は  ( binhex 4  データ の 最後 の 部分 の 場合 )  余白 の ビット が ゼロ に な っ て い な けれ ば な り ま せ ん 。 
data  に 対 し 、 binhex 4  標準 に 従 っ て  RLE  展開 を 行 い ま す 。 
この アルゴリズム で は 、 ある バイト の 後ろ に  0 x 90  が き た 場合 、 その バイト の 反復 を 指示 し て お り 、 さらに その 後ろ に 反復 カウント が 続 き ま す 。 
カウント が  0  の 場合  0 x 90  自体 を 示 し ま す 。 
この ルーチン は 入力 データ の 末端 に おけ る 反復 指定 が 不 完全 で な い かぎり 解凍 さ れ た データ を 返 し ま す が 、 不 完全 な 場合 、 例外 Incomplete  が 送出 さ れ ま す 。 
binhex 4  方式 の  RLE  圧縮 を  data  に 対 し て 行 い 、 その 結果 を 返 し ま す 。 
バイナリ を  hexbin 4  エンコード し て  ASCII  文字 列 に 変換 し 、 変換 後 の 文字 列 を 返 し ま す 。 
引数 の  data  は すでに  RLE  エンコード さ れ て い な けれ ば な ら ず 、 その 長 さ は  ( 最後 の フラグメント を 除 い て )  3  で 割り切れ な けれ ば な り ま せ ん 。 
data の  binhex 4  CRC  値 を 計算 し ま す 。 
初期 値 は  crc で 、 計算 結果 を 返 し ま す 。  crc 32 
32  ビット チェック サム で あ る  CRC - 32  を  data  に 対 し て 計算 し ま す 。  初期 値 は  crc  で す 。 
これ は  ZIP  ファイル の チェック サム と 同じ で す 。 
この アルゴリズム は チェック サム アルゴリズム と し て 設計 さ れ た もの で 、 一般 的 な ハッシュ アルゴリズム に は 向 き ま せ ん 。 
以下 の よう に し て 使 い ま す : 
バイナリ データ  data  の 16 進 数 表現 を 返 し ま す 。 
data  の 各 バイト は 対応 する  2  桁 の 16 進 数 表現 に 変換 さ れ ま す 。 
従 っ て 、 変換 結果 の 文字 列 は data の  2  倍 の 長 さ に な り ま す 。 
16  進 数 表記 の 文字 列  hexstr  の 表 す バイナリ データ を 返 し ま す 。 
エラー が 発生 し た 際 に 送出 さ れ る 例外 で す 。 
通常 は プログラム の エラー で す 。 
変換 する データ が 不 完全 な 場合 に 送出 さ れ る 例外 で す 。 
通常 は プログラム の エラー で は な く 、 多少 追加 読み込み を 行 っ て 再度 変換 を 試み る こと で 対処 でき ま す 。 
参考 :  base 64 
Machintosh  で 使 わ れ る  binhex  フォーマット の サポート 。 
Unix で 使 わ れ る  UU  エンコード の サポート 。 
MIME  電子 メール メッセージ で 使 わ れ る  quoted - printable  エンコード の サポート 。 
この モジュール は  binhex 4  形式 の ファイル に 対 する エンコード や デコード を 行 い ま す 。  binhex 4  は  Macintosh  の ファイル を  ASCII で 表現 でき る よう に し た もの で す 。 
ファイル 名  input  の バイナリ ファイル を ファイル 名  output の  binhex  形式 ファイル に 変換 し ま す 。 
output  パラメタ は ファイル 名 で も  ( write ( )  および  close ( )  メソッド を サポート する よう な ) ファイル 様 オブジェクト で も かま い ま せ ん 。 
以下 の 例外 も 定義 さ れ て い ま す : 
binhex  形式 を 使 っ て エンコード でき な かっ た 場合  ( 例えば 、 ファイル 名 が  filename  フィールド に 収ま ら な い くらい 長 かっ た 場合 など )  や 、 入力 が 正し く エンコード さ れ た  binhex  形式 の データ で な かっ た 場合 に 送出 さ れ る 例外 で す 。 
ASCII から バイナリ 、 および バイナリ から ASCII  へ の 変換 を サポート する モジュール 。 
この モジュール は 、 挿入 の 度 に リスト を ソート する こと な く 、 リスト を ソート さ れ た 順序 に 保 つ こと を サポート し ま す 。 
大量 の 比較 操作 を 伴 う よう な 、 アイテム が たくさん あ る リスト で は 、 より 一般 的 な アプローチ に 比べ て 、 パフォーマンス が 向上 し ま す 。 
動作 に 基本 的 な 二 分 法 アルゴリズム を 使 っ て い る の で 、 bisect  と 呼 ば れ て い ま す 。 
ソース コード は この アルゴリズム の 実例 と し て 一番 役 に 立 つ か も しれ ま せ ん ( 境界 条件 は すでに 正し い で す ! ) 。  次 の 関数 が 用意 さ れ て い ま す 。 
ソート さ れ た 順序 を 保 っ た まま  item を  list  に 挿入 する の に 適 し た 挿入 点 を 探し当て ま す 。 
リスト の 中 から 検索 する 部分 集合 を 指定 する に は 、 パラメーター の  lo  と hi  を 使 い ま す 。  デフォルト で は 、 リスト 全体 が 使 わ れ ま す 。 
item  が すでに  list  に 含 ま れ て い る 場合 、 挿入 点 は どの エントリー より も 前 ( 左 ) に な り ま す 。 
戻 り 値 は 、 
list . insert ( )  の 第 一 引数 と し て 使 う の に 適 し て い ま す 。  list  は すでに ソート さ れ て い る もの と し ま す 。 
バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
bisect_ right ( )  の エイリアス 。 
item を  list  に ソート さ れ た 順序 で ( ソート さ れ た まま ) 挿入 し ま す 。 
これ は 、 
list . insert( bisect . bisect _left ( list , item,  lo ,  hi ) , item ) と 同等 で す 。 
list  は すでに ソート さ れ て い る もの と し ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
insort_left ( )  と 似 て い ま す が 、 list  に 含 ま れ る  item の うち 、 どの エントリー より も 後ろ に item  を 挿入 し ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
insort_right ( )  の エイリアス 。 
7 . 13 . 1  ハッシュ 、 BTree 、 および レコード オブジェクト 
Unix ,  Windows プラットフォーム で 利用 でき ま す 。 
bsddb  モジュール は  Berkeley  DB  ライブラリ へ の インタフェース を 提供 し ま す 。 
ユーザ は 適当 な  open  呼び出し を 使 う こと で 、 ハッシュ 、 B - Tree 、  また は レコード に 基づ く データベース ファイル を 生成 する こと が でき ま す 。 
bsddb  オブジェクト は 辞書 と 大体 同じ よう に 振る舞 い ま す 。 
新し い Berkeley  DB インターフェース の ドキュメント が あ り ま す 。  新し い インターフェース は 、 BerkeleyDB  3 と 4 で sleepycat が 提供 し て い る オブジェクト 指向 インターフェース と ほぼ 同じ インターフェース と な っ て い ま す 。 
Sleepycat  Software  は 、 最新 の Berkeley  DB ライブラリ を 開発 し て い ま す 。 
以下 で は 、 従来 の bsddb モジュール と 互換 性 の あ る 、 古 い インターフェース を 解説 し て い ま す 。 
現在 の 、 Db  と  DbEnv に よ る オブジェクト 指向 的 インターフェース に つ い て は 上記  pybsddb  の URL を 参照 し て くださ い 。  bsddb  モジュール で は 、 適切 な 形式 の  Berkeley  DB  ファイル に アクセス する オブジェクト を 生成 する 以下 の 関数 を 定義 し て い ま す 。 
各 関数 の 最初 の 二 つ の 引数 は 同じ で す 。 
可搬 性 の ため に 、 ほとんど の インスタンス で は 最初 の 二 つ の 引数 だけ が 使 わ れ て い る はず で す 。 
filename  と 名づけ られ た ハッシュ 形式 の ファイル を 開 き ま す 。 
filename  に  None  を 指定 する こと で 、 ディスク に 保存 する つもり が な い ファイル を 生成 する こと も でき ま す 。 
オプション の  flag  に は 、 ファイル を 開 く ため の モード を 指定 し ま す 。 
この モード は " r "  ( 読み出し 専用 ) ,  " w "  ( 読み書き 可能 ) 、 " c "  ( 読み書き 可能  -  必要 なら ファイル を 生成  …  これ が デフォルト で す )  また は " n "  ( 読み書き 可能  -  ファイル 長 を  0  に 切り詰め ) 、 に する こと が でき ま す 。 
他 の 引数 は ほとんど 使 わ れ る こと は な く 、 下位 レベル の dbopen ( )  関数 に 渡 さ れ る だけ で す 。 
他 の 引数 の 使 い 方 および その 解釈 に つ い て は  Berkeley  DB  の ドキュメント を 読 ん で 下さ い 。 
filename  と 名づけ られ た  B - Tree  形式 の ファイル を 開 き ま す 。 
filename  に  None  を 指定 する こと で 、 ディスク に 保存 する つもり が な い ファイル を 生成 する こと も でき ま す 。 
この モード は " r "  ( 読み出し 専用 ) 、  " w "  ( 読み書き 可能 ) 、 " c "  ( 読み書き 可能  -  必要 なら ファイル を 生成  …  これ が デフォルト で す ) 、 また は " n "  ( 読み書き 可能  -  ファイル 長 を  0  に 切り詰め ) 、 に する こと が でき ま す 。 
他 の 引数 は ほとんど 使 わ れ る こと は な く 、 下位 レベル の dbopen ( )  関数 に 渡 さ れ る だけ で す 。 
他 の 引数 の 使 い 方 および その 解釈 に つ い て は  Berkeley  DB  の ドキュメント を 読 ん で 下さ い 。 
他 の 引数 は ほとんど 使 わ れ る こと は な く 、 下位 レベル の dbopen ( )  関数 に 渡 さ れ る だけ で す 、 他 の 引数 の 使 い 方 および その 解釈 に つ い て は  Berkeley  DB  の ドキュメント を 読 ん で 下さ い 。 
注意 : 2 . 3 以降 の Unix 版 Python に は 、 bsddb 185 モジュール が 存在 する 場合 が あ り ま す 。 
この モジュール は 古 い Berkeley  DB  1 . 85 データベース ライブラリ を 持 つ システム を サポート する ため だけ に 存在 し て い ま す 。 
新規 に 開発 する コード で は 、 bsddb 185 を 直接 使用 し な い で 下さ い 。 
bsddb  へ の  DBM  形式 の インタフェース . 
7 . 13 . 1  ハッシュ 、 BTree 、 および レコード オブジェクト 
この モジュール は Python の 全て の 「 組み込 み 」 識別 子 を 直接 アクセス する ため の もの で す 。 
例えば __builtin__. open  は open ( ) 関数 の ため の 全て の 組み込 み 関数 を 表示 し ま す 。 
第 2 . 1 節 ,  ` ` 組み込 み 関数 ' ' も 参照 し て くださ い 。 
BZ 2File  クラス は 、 readline ( ) ,  readlines ( ) , writelines ( ) , seek ( )  等 を 含 む 、 完全 な ファイル インタフェース を 実装 し ま す 。 
BZ 2File  クラス は  seek ( )  を エミュレーション で サポート し ま す 。 
BZ 2File  クラス は 広 範囲 の 改行 文字 バリエーション を サポート し ま す 。 
BZ 2File  クラス は ファイル オブジェクト で 言 う ところ の 先 読 み アルゴリズム を 用い た 行 単位 の イテレーション 機能 を 提供 し ま す 。 
BZ 2 Compressor  および BZ 2 Decompressor  クラス で は 逐次 的 圧縮 ( 解凍 ) を サポート し て い ま す 。 
compress ( )  および decompress ( )  で は 一括 圧縮 ( 解凍 ) を 関数 サポート し て い ま す 。 
個別 の ロック メカニズム に よ っ て スレッド 安全 性 を 持 っ て い ま す 。 
埋め込 み ドキュメント が 完備 し て い ま す 。 
7 . 17 . 1  ファイル の 圧縮 ( 解凍 ) 
cPickle  モジュール は  Python  オブジェクト の 直列 化 および 非 直列 化 を サポート し 、 
モジュール と ほとんど 同じ インタフェース と 機能 を 提供 し ま す 。 
つまり 、 pickle  化 や  unpickle  化 を 行 う カスタム の サブ クラス を 導出 する こと が でき な い と い う こと で す 。 
多く の アプリケーション で は この 機能 は 不要 な の で 、 cPickle モジュール に よ る 大きな パフォーマンス 向上 の 恩恵 を 受け られ る はず で す 。  pickle  と  cPickle  で 作 ら れ た  pickle  データ 列 は 同じ な の で 、 既存 の  pickle  データ に 対 し て pickle  と  cPickle  を 互換 に 使用 する こと が でき ま す 
3 . 1 1  。 
cPickle  と  pickle  の  API  間 に は 他 に も 些細 な 相違 が あ り ま す が 、 ほとんど の アプリケーション で 互換 性 が あ り ま す 。 
. . .  を 互換 に 使用 する こと が でき ま す  3 . 1 1 
pickle  データ 形式 は 実際 に は 小 規模 な スタック 指向 の プログラム 言語 で あ り 、 また ある オブジェクト を エンコード する 際 に 多少 の 自由 度 が あ る ため 、 二 つ の モジュール が 同じ 入力 オブジェクト に 対 し て 異な る データ 列 を 生成 する こと も あ り ま す 。 
しかし 、 常 に 互い に 他 の データ 列 を 読み 出せ る こと が 保証 さ れ て い ま す 。 
cStringIO  モジュール は 
モジュール と 同様 の インターフェース を 提供 し て い ま す 。 
StringIO . StringIO  オブジェクト を 酷使 する 場合 、  この モジュール に あ る  StringIO ( )  関数 を かわり に 使 う と 効果 的 で す 。  この モジュール は 、 ビルト イン 型 の オブジェクト を 返 す ファクトリー 関数 を 提供 し て い る の で 、 サブ クラス 化 し て 自分 用 の 物 を 作 る こと は でき ま せ ん 。 
そう し た 場合 に は 、 オリジナル の 
モジュール を 使 っ て くださ い 。 
モジュール で 実装 さ れ て い る メモリ ファイル と は 異な り 、 この モジュール で 提供 さ れ て い る もの は 、 プレイン  ASCII  文字 列 に エンコード でき な い ユニコード を 受け付け る こと が でき ま せ ん 。 
また 、 引数 に 文字 列 を 指定 し て StringIO ( ) 呼び出 す と 読み出し 専用 の オブジェクト が 生成 さ れ ま す が 、 この 場合  cStringIO . StringIO ( )  で は  write ( ) メソッド を 持 た な い オブジェクト を 生成 し ま す 。 
これ ら の オブジェクト は 普段 は 見え ま せ ん 。 
トレース バック に  StringI と  StringO  と し て 表示 さ れ ま す 。  次 に あげ る データ オブジェクト も 提供 さ れ て い ま す : 
文字 列 を パラメーター に 渡 し て  StringIO  を 呼 ん だ とき に 作 ら れ る オブジェクト の オブジェクト 型 。 
パラメーター を 渡 さ す に  StringIO  を 呼 ん だ とき に 返 さ れ る オブジェクト の オブジェクト 型 。 
この モジュール に は  C  API  も あ り ま す 。  詳し く は この モジュール の ソース を 参照 し て くださ い 。 
この モジュール は Unix の cal プログラム の よう な カレンダー 出力 を 行 い 、 それ に 加え て カレンダー に 関 する 有益 な 関数 群 を 提供 し ま す 。 
標準 で は これ ら の カレンダー は ( ヨーロッパ の 慣例 に 従 っ て ) 月曜 日 を 週 の 始まり と し 、 日曜 日 を 最後 の 日 と し て い ま す 。 
setfirstweekday ( ) を 用い る こと で 、 日曜 日 ( 6 ) や 他 の 曜日 を 週 の 始まり に 設定 する こと が でき ま す 。 
日付 を 表 す 引数 は 整数 値 で 与え ま す 。  この モジュール で 提供 する 関数 の ほとんど は  datetime に 依存 し て お り 、 過去 も 未来 も 現代 の グレゴリオ 暦 を 利用 し ま す 。 
この 方式 は Dershowitz と Reingold の 書籍 「 Calendrical  Calculations 」 に あ る proleptic  Gregorian 暦 に 一致 し て お り 、 同書 で は 全て の 計算 の 基礎 と な る 暦 と し て い ま す 。 
週 の 最初 の 曜日 ( 0 は 月曜 日 ,  6 は 日曜 日 ) を 設定 し ま す 。 
定数 MON DAY ,  TUESDAY , WED NESDAY , THURSDAY ,  FRIDAY , SATUR DAY 及び SUNDAY  は 便宜 上 提供 さ れ て い ま す 。 
例えば 、 日曜 日 を 週 の 開始 日 に 設定 する とき : 
現在 設定 さ れ て い る 週 の 最初 の 曜日 を 返 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
year が 閏年 なら True を 、 そう で な けれ ば False を 返 し ま す 。 
ここ で y 1 や y 2 は 年 を 表 し ま す 。 
バージョン  2 . 0  で  変更  さ れ た 仕様 : Python  1 . 5 . 2 で は 、 この 関数 は 世紀 を またが っ た 範囲 で は 動作 し ま せ ん 。 
year ( 1970 - . . . ) , month  ( 1 - 1 2 ) , day ( 1 - 3 1 ) で 与え られ た 日 の 曜日 ( 0 は 月曜 日 ) を 返 し ま す 。 
year と month で 指定 さ れ た 月 の 一 日 の 曜日 と 日数 を 返 し ま す 。 
月 の カレンダー を 行列 で 返 し ま す 。 
各行 が 週 を 表 し 、 月 の 範囲 外 の 日 は 0 に な り ま す 。  それぞれ の 週 は setfirstweekday ( ) で 設定 を し て い な い 限り 月曜 日 から 始ま り ま す 。 
month ( ) 関数 に よ っ て 返さ れ る 月 の カレンダー を 出力 し ま す 。 
月 の カレンダー を 複数 行 の 文字 列 で 返 し ま す 。 
w に よ り 日 の 列幅 を 変え る こと が でき 、 それ ら は センタリング さ れ ま す 。 
l に よ り 各週 の 表示 さ れ る 行数 を 変え る こと が でき ま す 。 
週 の 最初 の 曜日 は setfirstweekday ( ) 関数 の 設定 に 依存 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
calendar ( ) 関数 で 返 さ れ る 一 年間 の カレンダー を 出力 し ま す 。 
3 列 から な る 一 年間 の カレンダー を 複数 行 の 文字 列 で 返 し ま す 。  任意 の 引数 w , l ,  及び c は それぞれ 、 日付 列 の 表示 幅 、 各週 の 行数 及び 月 と 月 の 間 の スペース の 数 を 変更 する ため の もの で す 。 
週 の 最初 の 曜日 は setfirstweekday ( ) 関数 の 設定 に 依存 し ま す 。 
出力 さ れ る カレンダー の 起点 と な る 年 は プラットフォーム に 依存 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
関連 は あ り ま せ ん が 便利 な 関数 で 、 
モジュール の gmtime( ) 関数 の 戻値 の よう な 時間 の タプル を 受け取 り 、  1970 年 を 起点 と し 、 POSIX 規格 の エンコード に よ る Unix の タイム スタンプ に 相当 する 値 を 返 し ま す 。 
実際 、 time. gmtime( ) と timegm ( ) は 反対 の 動作 を し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
: モジュール 
モジュール と 似 た 機能 を 持 っ た 日付 と 時間 用 の オブジェクト 指向 インタフェース 。 
低 レベル の 時間 に 関連 し た 関数 群 。  . 
CD - ROM デバイス を open ( ) で 開 き 、 createparser ( ) で CD から データ を パース する ため の パーザ を 作 り ま す 。 
open ( ) で 返 さ れ る オブジェクト は CD から データ を 読み込 む の に 使 わ れ ま す が 、 CD - ROM デバイス の ステータス 情報 や 、 CD の 情報 、 たとえば 目次 など を 得 る の に も 使 わ れ ま す 。 
CD から 得 た データ は パーザ に 渡 さ れ 、 パーザ は フレーム を パース し 、 あらかじめ 加え られ た コール バック 関数 を 呼び出 し ま す 。  オーディオ CD は トラック tracks あるいは プログラム programs ( 同じ 意味 で 、 どちら か の 用語 が 使 わ れ ま す ) に 分け られ ま す 。 
トラック は さらに インデックス indices に 分け られ ま す 。 
オーディオ CD は 、 CD 上 の 各 トラック の スタート 位置 を 示 す 目次 table  of contents を 持 っ て い ま す 。 
インデックス 0 は 普通 、 トラック の 始まり の 前 の ポーズ で す 。 
目次 から 得 られ る トラック の スタート 位置 は 通常 、 インデックス 1 の スタート 位置 で す 。  CD 上 の 位置 は 2 通り の 方法 で 得 る こと が でき ま す 。 
それ は フレーム ナンバー と 、 分 、 秒 、 フレーム の 3 つ の 値 から な る タプル の 2 つ で す 。 
ほとんど の 関数 は 後者 を 使 い ま す 。 
位置 は CD の 開始 位置 と トラック の 開始 位置 の 両方 に 相対 的 に な り ま す 。  モジュール cd は 、 以下 の 関数 と 定数 を 定義 し て い ま す : 
不 透明 な パーザ オブジェクト を 作 っ て 返 し ま す 。 
パーザ オブジェクト の メソッド は 下 に 記載 さ れ て い ま す 。 
絶対 的 な タイム コード で あ る ( minutes , seconds ,  frames ) の 3 つ 組 の 表現 を 、 相当 する CD の フレーム ナンバー に 変換 し ま す 。 
CD - ROM デバイス を 開 き ま す 。 
不 透明 な プレーヤー オブジェクト を 返 し ま す ; プレーヤー オブジェクト の メソッド は 下 に 記載 さ れ て い ま す 。 
デバイス device は SCSI デバイス ファイル の 名前 で 、 例えば '\/ dev\/scsi\/sc0 d 4 l 0 ' あるいは None で す 。 
もし 省略 し たり 、 None なら 、 ハードウエア が 検索 さ れ て CD - ROM デバイス を 割り当て ま す 。 
mode は 、 省略 し な い なら ' r ' に す べ き で す 。 
この モジュール で は 以下 の 変数 を 定義 し て い ま す : 
様々 な エラー に つ い て 発生 する 例外 で す 。 
オーディオ データ の 1 フレーム の サイズ で す 。 
これ は audio タイプ の コール バック へ 渡 さ れ る オーディオ データ の サイズ で す 。 
オーディオ データ が 読み取 ら れ て い な い フレーム 1 つ の サイズ で す 。 
以下 の 変数 は getstatus ( ) で 返 さ れ る ステータス 情報 で す : 
オーディオ CD が ロード さ れ て 、 ドライブ が 操作 可能 で あ る こと を 示 し ま す 。 
ドライブ に CD が ロード さ れ て い な い こと を 示 し ま す 。 
ドライブ に CD - ROM が ロード さ れ て い る こと を 示 し ま す 。 
続 い て play あるいは read の 操作 を する と 、 I \/ O エラー を 返 し ま す 。 
ディスク や 目次 を 読み込 も う と し て い る とき に 起こ る エラー 。 
ドライブ が オーディオ CD を CD プレーヤー モード で オーディオ 端子 から 再生 し て い る こと を 示 し ま す 。 
ドライブ が CD プレーヤー モード で 、 再生 を 一時 停止 し て い る こと を 示 し ま す 。 
PAUSED と 同じ で す が 、 古 い モデル ( non  3301 ) で あ る Toshiba  CD - ROM ドライブ の もの で す 。 
この ドライブ は もう SGI から 出荷 さ れ て い ま せ ん 。 
cfmfile  は 、 コード フラグメント と 関連 する ` ` cfrg ' ' リソース を 処理 する モジュール で す 。 
この モジュール で コード フラグメント を 分解 や マージ でき て 、 全て の プラグ イン モジュール を まとめ て 、 一 つ の 実行 可能 ファイル に する ため 、 BuildApplication に よ っ て 利用 さ れ ま す 。 
ゲートウェイ インタフェース 規格  ( CGI )  に 準拠 し た スクリプト を サポート する ため の モジュール で す 。 
この モジュール で は 、  Python  で  CGI  スクリプト を 書 く 際 に 使え る 様々 な ユーティリティ を 定義 し て い ま す 。 
1 1 . 2 . 1  はじめ に 
1 1 . 2 . 10  よく あ る 問題 と 解決 法 
cgitb  モジュール で は 、 Python  スクリプト の ため の 特殊 な 例外 処理 を 提供 し ま す 。 
( 実 は この 説明 は 少し 的外れ で す 。 
この モジュール は もともと 徹底 的 な トレース バック 情報 を  CGI  スクリプト で 生成 し た  HTML  内 に 表示 する ため の 設計 さ れ ま し た 。 
その 後 この 情報 を 平文 テキスト で も 表示 でき る よう に 一般 化 さ れ て い ま す 。 
) この モジュール の 有効 化 後 に 捕捉 さ れ な い 例外 が 生 じ た 場合 、 詳細 で 書式 化 さ れ た 報告 が  Web  ブラウザ に 送信 さ れ ま す 。 
この 報告 に は 各 レベル に おけ る ソース コード の 抜粋 が 示 さ れ た トレース バック と 、 現在 動作 し て い る 関数 の 引数 や ローカル な 変数 が 収め られ て お り 、 問題 の デバッグ を 助け ま す 。 
オプション と し て 、 この 情報 を ブラウザ に 送信 する 代わり に ファイル に 保存 する こと も でき ま す 。  この 機能 を 有効 化 する ため に は 、 単に 自作 の  CGI  スクリプト の 最初 に 以下 の 一行 を 追加 し ま す : 
enable ( )  関数 の オプション は 、 報告 を ブラウザ に 表示 する か どう か と 、 後 で 解析 する ため に ファイル に 報告 を ログ 記録 する か どう か を 制御 し ま す 。 
この 関数 は 、 
. excepthook  を 設定 する こと で 、 インタプリタ の 標準 の 例外 処理 を  cgitb  モジュール に 肩代わり さ せ る よう に し ま す 。 
オプション の 引数  display  は 標準 で  1  に な っ て お り 、 この 値 は  0  に し て トレース バック を ブラウザ に 送 ら な い よう に 抑制 する こと も でき ま す 。 
その 他 の 値 を 指定 する と 平文 テキスト の 出力 を 強制 し ま す 。 
デフォルト の 値 は  " html "  で す 。 
この 関数 は 標準 の 設定  ( ブラウザ に 報告 を 表示 し ま す が ファイル に は ログ を 書き込 み ま せ ん )  を 使 っ て 例外 を 処理 し ま す 。  この 関数 は 、 例外 を 捕捉 し た 際 に  cgitb  を 使 っ て 報告 し た い 場合 に 使 う こと が でき ま す 。 
オプション の  info  引数 は 、 例外 の 型 、 例外 の 値 、 トレース バック オブジェクト から な る  3  要素 の タプル で な けれ ば な り ま せ ん 。  これ は 
. exc _ info ( )  に よ っ て 返さ れ る 値 と 全く 同じ で す 。 
info  引数 が 与え られ て い な い 場合 、 現在 の 例外 は 
. exc _ info ( )  から 取得 さ れ ま す 。 
この モジュール は EA  IFF  85 チャンク を 使用 し て い る ファイル の 読み 込 み の ため の インターフェース を 提供 し ま す 。 
この フォーマット は 少な く とも 、 Audio 
Interchange  File  Format ( AIFF \/ AIFF - C )  と Real 
( RMFF ) で 使 わ れ て い ま す 。 
WAVE オーディオ ファイル フォーマット も 厳密 に 対応 し て い る の で 、 この モジュール で 読み込み でき ま す 。  チャンク は 以下 の 構造 を 持 っ て い ま す : 
Offset 値 
長 さ 
チャンク ID 
big- endian で 示 し た チャンク の サイズ で 、 ヘッダ は 含 み ま せ ん 
バイト データ で 、 n は これ より 先 の フィールド の サイズ 
n が 奇数 なら チャンク の 整頓 の ため に 埋め られ る バイト 
この モジュール で 定義 さ れ る Chunk クラス の 使 い 方 と し て 提案 し て い る の は 、 それぞれ の チャンク の 始め に インスタンス を 作 り 、 終わり に 達 する まで その インスタンス から 読み取 り 、 その 後 で 新し い インスタンス を 作 る と い う こと で す 。  ファイル の 終わり で 新し い インスタンス を 作 ろ う と する と 、 EOFError の 例外 が 発生 し て 失敗 し ま す 。 
クラス Chunk
チャンク を 表現 する クラス 。 
引数 file は ファイル の よう な オブジェクト で あ る こと が 想定 さ れ て い ま す 。 
この クラス の インスタンス は 特別 に その よう に 認め られ て い ま す 。 
必要 と さ れ る メソッド は read ( ) だけ で す 。 
もし seek ( ) と tell ( ) メソッド が 呼び出 さ れ て 例外 を 発生 さ せ な かっ た ら 、 これ ら の メソッド も 動作 し ま す 。 
これ ら の メソッド が 呼び出 さ れ て 例外 を 発生 さ せ て も 、 オブジェクト を 変化 さ せ な い よう に な っ て い ま す 。 
省略 可能 な 引数 align が true なら 、 チャンク データ が 偶数 個 で 2 バイト ごと に 整頓 さ れ て い る と 想定 し ま す 。 
もし align が false なら 、 チャンク データ が 奇数 個 に な っ て い る と 想定 し ま す 。 
デフォルト 値 は true で す 。 
もし 省略 可能 な 引数 bigendian が false なら 、 チャン クサイズ は little - endian で あ る と 想定 し ま す 。 
この 引数 の 設定 は WAVE オーディオ ファイル で 必要 で す 。  デフォルト 値 は true で す 。 
もし 省略 可能 な 引数 inclheader が true なら 、 チャンク の ヘッダ から 得 られ る サイズ は ヘッダ の サイズ を 含 ん で い る と 想定 し ま す 。 
デフォルト 値 は false で す 。 
Chunk オブジェクト に は 以下 の メソッド が 定義 さ れ て い ま す : 
チャンク の 名前 ( ID ) を 返 し ま す 。 
これ は チャンク の 始め の 4 バイト で す 。 
チャンク の サイズ を 返 し ま す 。 
オブジェクト を 閉じ て 、 チャンク の 終わり まで 飛 び ま す 。 
これ は 元 の ファイル 自体 は 閉じ ま せ ん 。 
残り の 以下 の メソッド は 、 close ( ) メソッド を 呼び出 し た 後 に 呼び出 す と 例外 IOError を 発生 し ま す 。 
False を 返 し ま す 。 
チャンク の 現在 位置 を 設定 し ま す 。 
引数 whence は 省略 可能 で 、 デフォルト 値 は 0 ( ファイル の 絶対 位置 ) で す ; 他 に 1 ( 現在 位置 から 相対 的 に シーク し ま す ) と 2 ( ファイル の 末尾 から 相対 的 に シーク し ま す ) の 値 を 取 り ま す 。  何 も 値 は 返 し ま せ ん 。 
もし 元 の ファイル が シーク に 対応 し て い な けれ ば 、 前方 へ の シーク のみ が 可能 で す 。 
チャンク 内 の 現在 位置 を 返 し ま す 。 
チャンク から 最大 で size バイト ( size バイト を 読み込 む まで 、 少な く とも チャンク の 最後 に 行き着 く まで ) 読み込 み ま す 。 
もし 引数 size が 負か 省略 さ れ たら 、 チャンク の 最後 まで 全て の データ を 読み込 み ま す 。 
バイト 値 は 文字 列 の オブジェクト と し て 返さ れ ま す 。 
チャンク の 最後 に 行き着 い た ら 、 空 文字 列 を 返 し ま す 。 
チャンク の 最後 まで 飛 び ま す 。 
さらに チャンク の read ( ) を 呼び出 す と 、 ' ' が 返 さ れ ま す 。 
もし チャンク の 内容 に 興味 が な い なら 、 この メソッド を 呼び出 し て ファイル ポインタ を 次 の チャンク の 始め に 設定 し ま す 。 
. . . の インターフェース を 提供 し ま す 。 
この モジュール は 常 に 利用 でき ま す 。 
この モジュール で は 、 複素 数 を 扱 う 数学 関数 へ の アクセス 手段 を 提供 し て い ま す 。 
提供 し て い る 関数 を 以下 に 示 し ま す : 
x  の 逆 双 曲線 余弦 を 返 し ま す 。  branch  cut  が 一 つ あ り 、 1  の 左側 に 実数 軸 に 沿 っ て  - へ と 延び て い て 、 上 から 連続 し て い ま す 。 
x  の 逆 正弦 を 返 し ま す 。 acos ( )  と 同じ  branch  cut  を 持 ち ま す 。 
x  の 余弦 を 返 し ま す 。 
x  の 双曲 線 余弦 を 返 し ま す 。 
base を 底 と する x  の 対数 を 返 し ま す 。 
もし base が 指定 さ れ て い な い 場合 に は 、 x の 自然 対数 を 返 し ま す 。 
branch  cut  を 一 つ も ち 、 0  から 負 の 実数 軸 に 沿 っ て  - に 延び て お り 、 上 で 連続 し て い ま す 。  バージョン  2 . 4  で  変更  さ れ た 仕様 : 引数 base  が 追加 さ れ ま し た 。 
x  の 底  10  対数 を 返 し ま す 。 
log ( )  と 同じ branch  cut  を 持 ち ま す 。 
x  の 正弦 を 返 し ま す 。 
x  の 双曲 線 正弦 を 返 し ま す 。 
x  の 平方 根 を 返 し ま す 。 
log ( )  と 同じ  branch  cut  を 持 ち ま す 。 
x  の 正接 を 返 し ま す 。 
x  の 双曲 線 正接 を 返 し ま す 。 
この モジュール で は また 、 以下 の 数学 定数 も 定義 し て い ま す : 
数学 上 の 定数  pi  で 、 実数 で す 。 
数学 上 の 定数  e  で 、 実数 で す 。 
と 同じ よう な 関数 が 選 ば れ て い ま す が 、 全く 同じ で は な い の で 注意 し て くださ い 。 
機能 を 二 つ の モジュール に 分け て い る の は 、 複素数 に 興味 が な かっ たり 、 もし か する と 複素 数 と は 何 か すら 知 ら な い よう な ユーザ が い る から で す 。 
これ ら は 多く の 複素 関数 に お け る 必然 的 な 特性 で す 。 
複素 関数 を 計算 する 必要 が あ る 場合 、 これ ら の  branch  cut  に 関 し て 理解 し て い る もの と 仮定 し て い ま す 。 
悟り に 至 る ため に 何 ら か の ( 到底 基礎 的 と は いえ な い )  複素数 に 関 する 書 を ひも と い て くださ い 。 
数値 計算 を 目的 と し た  branch  cut  の 正し い 選択 方法 に つ い て の 情報 と し て は 、 以下 が よ い 参考 文献 と な り ま す : 
Cmd クラス で は 、 行 指向 の コマンド インタープリタ を 書 く ため の 簡単 な フレームワーク を 提供 し ま す 。 
テスト 用 の 仕掛け や 管理 ツール 、 そして 、 後 に よ り 洗練 さ れ た インターフェイス で ラップ する プロトタイプ と し て 、 こう し た インタープリタ は よく 役 に 立 ち ま す 。 
クラス Cmd 
Cmd インスタンス 、 あるいは サブ クラス の インスタンス は 、 行 指向 の インタープリタ ・ フレームワーク で す 。 
名 で す 。  デフォルト は Tab で す 。 
completekey が None で な く 、 readline が 利用 でき る なら ば 、 コマンド 補完 は 自動 的 に 行 わ れ ま す 。 
オプション 引数  stdin と st dout に は 、 Cmd  また は その サブ クラス の インスタンス が 入出力 に 使用 する ファイル オブジェクト を 指定 し ま す 。 
省略 時 に は sys . stdin  と sys . st dout  が 使用 さ れ ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : 引数  stdin  と st dout  を 追加 
code モジュール は read -eval - print ( 読み込 み - 評価 - 表示 ) ループ を Python で 実装 する ため の 機能 を 提供 し ま す 。 
対話 的 な インタプリタ プロンプト を 提供 する アプリケーション を 作 る ため に 使え る 二 つ の クラス と 便利 な 関数 が 含 ま れ て い ま す 。 
クラス InteractiveInterpreter 
この クラス は 構文 解析 と インタプリタ 状態 ( ユーザ の 名前 空間 ) を 取り扱 い ま す 。 
入力 バッファ リング や プロンプト 出力 、 また は 入力 ファイル 指定 を 扱 い ま せ ん ( ファイル 名 は 常 に 明示 的 に 渡 さ れ ま す ) 。  オプション の locals 引数 は その 中 で コード が 実行 さ れ る 辞書 を 指定 し ま す 。 
その 初期 値 は 、 キー '_ _name__' が '__console_ _' に 設定 さ れ 、 キー '__doc_ _' が None に 設定 さ れ た 新し く 作 ら れ た 辞書 で す 。  クラス Interactive Console 
対話 的 な Python インタプリタ の 振る舞い を 厳密 に エミュレート し ま す 。 
この クラス は InteractiveInterpreter を 元 に 作 ら れ て い て 、 通常 の sys . ps 1 と sys . ps 2 を つか っ た プロンプト 出力 と 入力 バッファ リング が 追加 さ れ て い ま す 。 
read -eval - print ループ を 実行 する ため の 便利 な 関数 。 
これ は Interactive Console の 新し い インスタンス を 作 り 、 readfunc が 与え られ た 場合 は raw _ input ( ) メソッド と し て 使 わ れ る よう に 設定 し ま す 。 
local が 与え られ た 場合 は 、 インタプリタループ の デフォルト 名前 空間 と し て 使 う ため に Interactive Console コンストラクタ へ 渡 さ れ ま す 。 
そして 、 インスタンス の interact ( ) メソッド は 見出し と し て 使 う ため に 渡 さ れ る banner を 受け取り 実行 さ れ ま す 。 
コンソール オブジェクト は 使 わ れ た 後 捨て られ ま す 。 
この 関数 は Python の インタプリタ メイン ループ ( 別名 、 read -eval - print ループ ) を エミュレート し よう と する プログラム に と っ て 役 に 立 ち ま す 。 
扱い にく い 部分 は 、 ユーザ が ( 完全 な コマンド や 構文 エラー で は な く ) さらに テキスト を 入力 すれ ば 完全 に な り う る 不 完全 な コマンド を 入力 し た とき を 決定 する こと で す 。 
この 関数 は ほとんど の 場合 に 実際 の インタプリタ メイン ループ と 同じ 決定 を 行 い ま す 。 
コマンド が 完全 で 構文 エラー を 含 む 場合 は 、 SyntaxError を 発生 さ せ ま す 。  また は 、 コマンド が 無効 な リテラル を 含 む 場合 は 、 OverflowError もしくは ValueError を 発生 さ せ ま す 。 
codec  検索 関数 を 登録 し ま す 。 
検索 関数 は 第  1  引数 に アルファベット の 小文字 から 成 る エンコーディング 名 を 取 り 、 関数 の タプル  ( encoder ,  decoder ,  stream _reader , stream _writer )  を 返 す こと に な っ て い ま す 。  戻 り 値 の 関数 が 取 る 引数 は 以下 の 通り で す 。 
encoder  と  decoder :  これ ら の 引数 は 、 Codec  インスタンス の encode ( ) と decode ( )  ( Codec  Interface  参照 )  と 同じ インタフェース を 持 つ 関数 、 また は メソッド で な けれ ば な り ま せ ん 。 
これ ら の 関数 ・ メソッド は 内部 状態 を 持 た ず に 動作 する  ( stateless mode )  と 想定 さ れ て い ま す 。 
stream _reader  と  stream _writer :  これ ら の 引数 は 、 次 の よう な インタフェース を 持 つ ファクトリ 関数 で な けれ ば な り ま せ ん : 
ファクトリ 関数 は 、 基底 クラス の  StreamWriter  や StreamReader  が 定義 し て い る インタフェース を 提供 する オブジェクト を 返 さ ね ば な り ま せ ん 。 
Python codec  レジストリ から  codec  の タプル を 探 し 、 上 で 定義 し た よう な 関数 の タプル を 返 し ま す 。 encoding  の 検索 は 、 まず に レジストリ の キャッシュ から 行 い ま す 。 
見つか ら な けれ ば 、 登録 さ れ て い る 検索 関数 の リスト から 探 し ま す 。 
見つか ら な けれ ば 、 LookupError  を 送出 し 、 見つか れ ば  codec の タプル を キャッシュ に 保存 し て 、 見つか っ た エンコーディング を 呼び出 し 側 に 返 し ま す 。 
さまざま な  codec  へ の アクセス を 簡便 化 する ため に 、 この モジュール は 以下 の よう な 関数 を 提供 し て い ま す 。  これ ら の 関数 は 、  codec  の 検索 に lookup ( )  を 使 い ま す 。 
encoding  に 指定 し た  codec  を 検索 し 、 エンコーダ 関数 を 返 し ま す 。 encoding  が 見つか ら な けれ ば  LookupError  を 送出 し ま す 。 
encoding  に 指定 し た  codec  を 検索 し 、 デコーダ 関数 を 返 し ま す 。 encoding  が 見つか ら な けれ ば  LookupError  を 送出 し ま す 。 
encoding  に 指定 し た  codec  を 検索 し 、 StreamReader  クラス 、 また は ファクトリ 関数 を 返 し ま す 。 encoding  が 見つか ら な けれ ば  LookupError  を 送出 し ま す 。 
encoding  に 指定 し た  codec  を 検索 し 、 StreamWriter  クラス 、 また は ファクトリ 関数 を 返 し ま す 。 encoding  が 見つか ら な けれ ば  LookupError  を 送出 し ま す 。 
エラー 処理 関数 は この 例外 を 送出 する か 、 別 の 例外 を 送出 する か 、 また は 入力 の エンコード が でき な かっ た 部分 の 代替 文字 列 と エンコード を 再開 する 場所 の 指定 が 入 っ た タプル を 返 すかし な けれ ば な り ま せ ん 。 
最後 の 場合 、 エンコーダ は 代替 文字 列 を エンコード し 、 元 の 入力 中 の 指定 位置 から エンコード を 再開 し ま す 。 
位置 を 負 の 値 に する と 、 入力 文字 列 の 末端 から の 相対 位置 と し て 扱 わ れ ま す 。 
境界 の 外側 に あ る 位置 を 返 し た 場合 に は In dexError  が 送出 さ れ ま す 。  デコード と 翻訳 は 同様 に 働 き ま す が 、 エラー 処理 関数 に 渡 さ れ る の が Unicode DecodeError  か Unicode TranslateError  で あ る 点 と 、 エラー 処理 関数 の 置換 し た 内容 が 直接 出力 に な る 点 が 異な り ま す 。 
名前 name  で 登録 済み の エラー 処理 関数 を 返 し ま す 。 
エラー 処理 関数 が 見つか ら な けれ ば  LookupError  を 送出 し ま す 。  strict_errors
strict  エラー 処理 の 実装 で す 。 
replace  エラー 処理 の 実装 で す 。 
ignore  エラー 処理 の 実装 で す 。 
xmlcharrefreplace  エラー 処理 の 実装 で す 。 
backslashreplace  エラー 処理 の 実装 で す 。 
エンコード さ れ た ファイル や ストリーム の 処理 を 簡便 化 する ため 、 ,  この モジュール は 次 の よう な ユーティリティ 関数 を 定義 し て い ま す 。 
mode  で エンコード さ れ た ファイル を 開 き 、  透過 的 に エンコード ・ デコード を 行 う よう に ラップ し た ファイル オブジェクト を 返 し ま す 。 
注意 : ラップ 版 の ファイル オブジェクト を 操作 する 関数 は 、 該当 する  codec  が 定義 し て い る 形式 の オブジェクト だけ を 受け付け ま す 。 
多く の 組み込 み  codec  で は  Unicode  オブジェクト で す 。 
関数 の 戻 り 値 も  codec  に 依存 し 、 通常 は  Unicode  オブジェクト で す 。 
encoding  に は ファイル の エンコーディング を 指定 し ま す 。 
errors  を 指定 し て 、 エラー 処理 を 定義 する こと も でき ま す 。 
デフォルト で は 'strict ' で 、 エンコード 時 に エラー が あ れ ば  ValueError  を 送出 し ま す 。 
buffering  は 、 組み込 み 関数  open ( )  と 同じ で す 。 
デフォルト で は 行 バッファ リング で す 。 
ラップ し た ファイル オブジェクト を 返 し ま す 。 
この オブジェクト は 透過 な エンコード 変換 を 提供 し ま す 。 
ラップ さ れ た ファイル に 書 か れ た 文字 列 は 、 input  に 指定 し た エンコーディング に 従 っ て 変換 さ れ 、 output  に 指定 し た エンコーディング を 使 っ て  string  型 に 変換 さ れ 、 ファイル に 書き込 ま れ ま す 。 
中間 エンコーディング は 指定 さ れ た  codecs  に 依存 し ま す が 、 普通 は  Unicode  で す 。  output  が 与え られ な けれ ば 、 input  が デフォルト に な り ま す 。 
errors  を 与え て 、 エラー 処理 を 定義 する こと も でき ま す 。 
デフォルト で は 'strict ' で 、 エンコード 時 に エラー が あ れ ば  ValueError  を 送出 し ま す 。 
この モジュール は 以下 の よう な 定数 を 定義 し て い ま す 。  プラットフォーム 依存 な ファイル を 読み書き する の に 役立 ち ま す 。 
ここ で 定義 さ れ た 定数 は 、 様々 な エンコーディング の  Unicode  の バイト オーダ マーカ  ( BOM )  で 、 UTF - 16  と  UTF - 32  に お け る データ ストリーム や ファイル ストリーム の バイト オーダ を 指定 し たり 、 UTF - 8  に お け る  Unicode  signature  と し て 使 わ れ ま す 。 
4 . 9 . 1 . 3  StreamReader  オブジェクト 
4 . 9 . 1 . 4  StreamReaderWriter  オブジェクト 
4 . 9 . 1 . 5  StreamRecoder  オブジェクト 
3 . 24  codeop -- Python コード を コンパイル する 
モジュール で 行 わ れ て い る よう な Python の read -eval - print ループ を エミュレート する ユーティリティ を codeop モジュール は 提供 し ま す 。 
結果 的 に 、 直接 モジュール を 使 い た い と は 思 わ な い か も しれ ま せ ん 。  あなた の プログラム に この よう な ループ を 含め た い 場合 は 、 代わり に 
モジュール を 使 う こと を おそらく 望 む で しょ う 。  この 仕事 に は 二 つ の 部分 が あ り ま す : 
入力 の 一行 が Python の 文 と し て 完全 で あ る か どう か を 見分け られ る こと :  簡単 に 言 え ば 、 次 が ` ' か 、 あるいは ` . . . ' か どう か を 見分け ま す 。 
どの future 文 を ユーザ が 入力 し た の か を 覚え て い る こと 。 
Python コード の 文字 列 で あ る べ き source を コンパイル し て み て 、 source が 有効 な Python コード の 場合 は コード オブジェクト を 返 し ま す 。 
この よう な 場合 、 コード オブジェクト の ファイル 名 属性 は 、 デフォルト で ' input ' で あ る filename で しょ う 。 
source が 有効 な Python コード で は な い が 、 有効 な Python コード の 接頭 語 で あ る 場合 に は 、 None を 返 し ま す 。 
他 の どんな 値 も ValueError を 発生 さ せ る 原因 と な り ま す 。 
警告 : ソース の 終わり に 達 する 前 に 、 成功 し た 結果 を も っ て パーサ は 構文 解析 を 止め る こと が ( でき そう で は な く ) でき ま す 。  この よう な 場合 、 後ろ に 続 く 記号 は エラー と な ら ず に 無視 さ れ ま す 。 
例えば 、 改行 が 後ろ に 付 く バックス ラッシュ に は 不定 の ゴミ が 付 い て い る か も しれ ま せ ん 。 
パーサ の API が より 良 く な れ ば すぐ に 、 これ は 修正 さ れ る で しょ う 。 
クラス Compile 
この クラス の インスタンス は 組み込 み 関数 compile ( ) と シグネチャ が 一致 する _ _ call_ _( ) メソッド を 持 っ て い ま す が 、 インスタンス が _ _future_ _ 文 を 含 む プログラム テキスト を コンパイル する 場合 は 、 インスタンス は 有効 な その 文 と とも に 続 く すべて の プログラム テキスト を ' 覚え て い て ' コンパイル する と い う 違い が あ り ま す 。 
クラス Command Compiler ( 
この クラス の インスタンス は compile_ command ( ) と シグネチャ が 一致 する _ _ call_ _( ) メソッド を 持 っ て い ま す 。 
インスタンス が _ _future_ _ 文 を 含 む プログラム テキスト を コンパイル する 場合 に 、 インスタンス は 有効 な その 文 と とも に それ に 続 く すべて の プログラム テキスト を ' 覚え て い て ' コンパイル する と い う 違い が あ り ま す 。 
バージョン 間 の 互換 性 に つ い て の 注意 :  Compile と Command Compiler は Python  2 . 2 で 導入 さ れ ま し た 。 
2 . 2 の future - tracking 機能 を 有効 に する だけ で な く 、 2 . 1 と Python の より 以前 の バージョン と の 互換 性 も 保 ち た い 場合 は 、 次 の よう に か く こと が でき ま す 
これ は 影響 の 小さ い 変更 で す が 、 あなた の プログラム に おそらく 望 ま れ な い グローバル 状態 を 導入 し ま す 。  また は 、 次 の よう に 書 く こと も でき ま す : 
そして 、 新た な コンパイラ オブジェクト が 必要 と な る たび に Command Compiler を 呼び出 し ま す 。 
この モジュール で は 高 性能 な コンテナ ・ データ 型 を 実装 し て い ま す 。 
現在 の ところ 、 実装 さ れ て い る 型 は  deque  のみ で す 。 
将来 的 に  B - tree  と  Fibonacci heap  が ふく ま れ る か も しれ ま せ ん 。 
iterable  で 与え られ る データ から 、 新し い  deque  オブジェクト を ( append ( )  を つか っ て )  左 → 右 に 初期 化 し 、 返 し ま す 。 
iterable  が 指定 さ れ な い 場合 、 新し い  deque  オブジェクト は 空 に な り ま す 。  Deque  と は 、 スタック と キュー を 一般 化 し た もの で す  ( この 名前 は 「 デック 」 と 発音 さ れ 、 これ は 「 double - endedqueue 」 の 省略 形 で す ) 。 
Deque  オブジェクト は 以下 の よう な メソッド を サポート し て い ま す : 
x  を  deque  の 右側 に つけ加え ま す 。 
x  を  deque  の 左側 に つけ加え ま す 。 
Deque  から すべて の 要素 を 削除 し 、 長 さ を  0  に し ま す 。 
イテレータ 化 可能 な 引数  iterable  から 得 られ る 要素 を  deque  の 右側 に 追加 し 拡張 し ま す 。 
イテレータ 化 可能 な 引数  iterable  から 得 られ る 要素 を  deque  の 左側 に 追加 し 拡張 し ま す 。 
注意 :  左 から 追加 し た 結果 は 、 イテレータ 引数 の 順序 と は 逆 に な り ま す 。 
Deque  の 右側 から 要素 を ひと つ 削除 し 、 その 要素 を 返 し ま す 。  要素 が ひと つ も 存在 し な い 場合 は  In dexError  を 発生 さ せ ま す 。 
Deque  の 左側 から 要素 を ひと つ 削除 し 、 その 要素 を 返 し ま す 。  要素 が ひと つ も 存在 し な い 場合 は  In dexError  を 発生 さ せ ま す 。 
Deque  の 要素 を 全体 で  n ステップ だけ 右 に ローテート し ま す 。 
n  が 負 の 値 の 場合 は 、 左 に ローテート し ま す 。 
Deque  を ひと つ 右 に ローテート する こと は  " d . appendleft ( d . pop ()) "  と 同じ で す 。 
colorsys  モジュール は 、 計算 機 の ディスプレイ モニタ で 使 わ れ て い る  RGB  ( Red  Green  Blue )  色 空間 で 表 さ れ た 色 と 、 他 の 3  種類 の 色 座標 系 :  YIQ ,  HLS  ( Hue  Lightness Saturation :  色相 、 彩度 、 飽和 )  および  HSV  ( Hue  Saturation  Value :  色相 、 彩度 、 明度 )  と の 間 の 双 方向 の 色 値 変換 を 定義 し ま す 。 
これ ら の 色 空間 に おけ る 色 座標 系 は 全て 浮動 小数 点数 で 表 さ れ ま す 。 
YIQ  空間 で は 、 Y  軸 は  0  から  1  で す が 、  I  および  Q  軸 は 正 の 値 も 負 の 値 もと り 得 ま す 。 
RGB  から  YIQ  に 変換 し ま す 。 
YIQ  から  RGB  に 変換 し ま す 。 
RGB  から  HLS  に 変換 し ま す 。 
HLS  から  RGB  に 変換 し ま す 。 
RGB  から  HSV  に 変換 し ま す 。 
HSV  から  RGB  に 変換 し ま す 。 
サンプル コード : 
Unix プラットフォーム で 利用 でき ま す 。 
文字 列 cmd を os . popen ( ) を 使 い シェル 上 で 実行 し 、 タプル ( status ,  output ) を 返 し ま す 。 
実際 に は {  cmd ;} 21 と 実行 さ れ る ため 、 標準 出力 と エラー 出力 が 混合 さ れ ま す 。 
また 、 出力 の 最後 の 改行 文字 は 取り除 か れ ま す 。 
コマンド の 終了 ステータス は C 言語 関数 の wait ( ) の 規則 に 従 っ て 解釈 する こと が でき ま す 。 
getstatusoutput ( ) に 似 て い ま す が 、 終了 ステータス は 無視 さ れ 、 コマンド の 出力 のみ を 返 し ま す 。 
" ls  -ld file  " の 出力 を 文字 列 で 返 し ま す 。 
例 : 
この モジュール は 、 指定 し た ディレクトリ に 含 ま れ る Python ソース を コンパイル する 関数 を 定義 し て い ま す 。 
dir で 指定 さ れ た ディレクトリ を 再帰 的 に 下降 し 、 見つか っ た . py を 全て コンパイル し ま す 。 
maxlevels は 、 下降 する 最大 の 深 さ ( デフォルト は 10 ) を 指定 し ま す 。 
ddir に は 、 エラー メッセージ で 使用 さ れ る ファイル 名 の 、 親 ディレクトリ 名 を 指定 する 事 が でき ま す 。 
force が 真 の 場合 、 モジュール は ファイル の 更新 日付 に 関わり な く 再 コンパイル さ れ ま す 。 
rx に は 、 検索 対象 から 除外 する ファイル 名 の 正規 表現 式 を 指定 し ま す 。 
sys . path に 含 ま れ る 、 全て の . py ファイル を バイト コンパイル し ま す 。 
skip_ curdir が 真 ( デフォルト ) の 時 、 カレント ディレクトリ は 検索 さ れ ま せ ん 。 
maxlevels と force は デフォルト で は 0 で 、 compile_dir ( ) に 渡 さ れ ま す 。 
参考 :  py_ compile 
compiler . ast  モジュール は 、 各 ノード の タイプ と その 要素 を 記述 し た テキスト ファイル から つく ら れ ま す 。 
各 ノード の タイプ は クラス と し て 表現 さ れ 、 その クラス は 抽象 基底 クラス  compiler . ast . Node  を 継承 し 子 ノード の 名前 属性 を 定義 し て い ま す 。 
クラス Node 
Node  インスタンス は パーザジェネレータ に よ っ て 自動 的 に 作成 さ れ ま す 。 
ある 特定 の  Node  インスタンス に 対 する 推奨 さ れ る インターフェイス と は 、 子 ノード に アクセス する ため に  public  な  ( 訳注 :  公開 さ れ た )  属性 を 使 う こと で す 。 
public  な 属性 は 単一 の ノード 、 あるいは 一連 の ノード の シーケンス に 束縛 さ れ て い る  ( 訳注 :  バインド さ れ て い る )  か も しれ ま せ ん が 、 これ は  Node  の タイプ に よ っ て 違 い ま す 。 
たとえば  Class  ノード の  bases  属性 は 基底 クラス の ノード の リスト に 束縛 さ れ て お り 、 doc  属性 は 単一 の ノード のみ に 束縛 さ れ て い る 、 と い っ た 具合 で す 。  各  Node  インスタンス は  lineno  属性 を も っ て お り 、 これ は  None  か も しれ ま せ ん 。 
XX X  どう い っ た ノード が 使用 可能 な  lineno  を も っ て い る か の 規則 は 定か で は な い 。 
Node  オブジェクト は すべて 以下 の メソッド を も っ て い ま す : 
子 ノード と 子 オブジェクト を 、 これ ら が 出 て き た 順 で 、 平ら な リスト 形式 に し て 返 し ま す 。 
とくに ノード の 順序 は 、  Python  文法 中 に 現れ る もの と 同じ に な っ て い ま す 。 
すべて の 子 が  Node  インスタンス な わけ で は あ り ま せ ん 。 
たとえば 関数 名 や クラス 名 と い っ た もの は 、 ただ の 文字 列 と し て 表 さ れ ま す 。 
子 ノード を これ ら が 出 て き た 順 で 平ら な リスト 形式 に し て 返 し ま す 。 
この メソッド は  getChildren ( )  に 似 て い ま す が 、 Node  インスタンス しか 返 さ な い と い う 点 で 異な っ て い ま す 。 
Node  クラス の 一般 的 な 構造 を 説明 する ため 、 以下 に  2 つ の 例 を 示 し ま す 。 
while  文 は 以下 の よう な 文 法 規則 に よ り 定義 さ れ て い ま す : 
While  ノード は  3 つ の 属性 を も っ て い ま す :  test 、 body 、  および  else_ で す 。 
( ある 属性 に ふさわし い 名前 が Python  の 予約 語 と し て すでに 使 わ れ て い る とき 、 その 名前 を 属性 名 に する こと は でき ま せ ん 。 
If  ノード で は 、 tests  および  else_ の 2 つ だけ の 属性 が 定義 さ れ て い ま す 。 
tests  属性 に は 条件 式 と その 後 の 動作 の タプル が リスト 形式 で 入 っ て い ま す 。 
おのおの の  if\/elif  節 ごと に 1 タプル で す 。 
各 タプル の 最初 の 要素 は 条件 式 で 、 2 番 目 の 要素 は もし その 式 が 真 なら ば 実行 さ れ る コード を ふ く ん だ  Stmt ノード に な っ て い ま す 。 
If  の  getChildren ( )  メソッド は 、 子 ノード の 平ら な リスト を 返 し ま す 。 
if\/elif  節 が  3 つ あ っ て else  節 が な い 場合 なら 、 getChildren ( )  は  6 要素 の リスト を 返 す で しょ う :  最初 の 条件 式 、 最初 の  Stmt、 2 番 目 の 条件 式 … と い っ た 具合 で す 。  以下 の 表 は  compiler . ast  で 定義 さ れ て い る  Node  サブ クラス と 、 それ ら の インスタンス に 対 し て 使用 可能 な パブリック な 属性 で す 。 
ほとんど の 属性 の 値 じた い は  Node  インスタンス か 、 インスタンス の リスト で す 。 
この 値 が インスタンス 型 以外 の 場合 、 その 型 は 備考 の 中 で 記 さ れ て い ま す 。 
これ ら 属性 の 順序 は 、 getChildren ( )  および  getChildNodes( )  が 返 す 順 で す 。 
ノード の 型 
左側 の 項 
右側 の 項 
項 の リスト 
代入 先 を あらわ す 属性 
ドット (.) の 左側 の 式 
属性 名 を あらわ す 文字 列 
代入 先 の リスト 要素 の リスト 
代入 先 の 名前 
代入 先 の タプル 要素 の リスト 
検査 さ れ る 条件 式 
AssertionError  の 値 
代入 先 の リスト 、 代入 記号 ( = ) ごと に ひと つ 
代入 する 値 
呼 ば れ る 側 を あらわ す 式 
引数 の リスト 
* - arg  拡張 引数 の 値 
* * -arg  拡張 引数 の 値 
クラス 名 を あらわ す 文字 列 
基底 クラス の リスト 
doc string 、 文字 列 あるいは  None 
クラス 文 の 本体 
関数 の デコレータ 表現 の リスト 
Decorators  か  None 
引数 を あわら す 文字 列 の リスト 
デフォルト 値 の リスト 
関数 の 本体 
モジュール 本体 、 Stmt インスタンス 
文 の リスト 
この パッケージ の トップ レベル で は  4 つ の 関数 が 定義 さ れ て い ま す 。 
compiler  モジュール を import  する と 、 これ ら の 関数 およびこの パッケージ に 含 ま れ て い る 一連 の モジュール が 使用 可能 に な り ま す 。 
buf  中 の  Python  ソース コード から 得 られ た 抽象 構文 木  AST  を 返 し ま す 。  ソース コード 中 に エラー が あ る 場合 、 この 関数 は  SyntaxError  を 発生 さ せ ま す 。 
返り 値 は  compiler . ast . Module  インスタンス で あ り 、 この 中 に 構文 木 が 格納 さ れ て い ま す 。 
path  で 指定 さ れ た ファイル 中 の  Python  ソース コード から 得 られ た 抽象 構文 木  AST  を 返 し ま す 。 
これ は  parse (open ( path ) . read ( ) )  と 等価 な 働き を し ま す 。 
ast  に 格納 さ れ た 抽象 構文 木 の 各 ノード を 先行 順序  ( pre - order )  で たど っ て い き ま す 。 
各 ノード ごと に  visitor  インスタンス の 該当 する メソッド が 呼 ば れ ま す 。 
文字 列  source 、 Python  モジュール 、 文 あるいは 式 を exec  文 あるいは  eval ( )  関数 で 実行 可能 な バイトコード オブジェクト に コンパイル し ま す 。 
ファイル  source  を コンパイル し 、 . pyc ファイル を 生成 し ま す 。 
compiler  パッケージ は 以下 の モジュール を 含 ん で い ま す : 
、  consts , 、 future 、 mis c 、 pyassem 、  pycodegen 、 symbols 、 transformer 、  そして 
。 
visitor  パターン は  . . . 
パッケージ は 、 Python  の イントロスペクション 機能 を 利用 し て visitor  の ため に 必要 な 大 部分 の インフラ を 省略 し た 、 visitor  パターン の 変種 を 使 っ て い ま す 。  visit  さ れ る クラス は 、 visitor  を 受け入れ る よう に プログラム さ れ て い る 必要 は あ り ま せ ん 。 
visitor  が 必要 な の は ただ それ が とくに 興味 ある クラス に 対 し て  visit  メソッド を 定義 する こと だけ で す 。  それ 以外 は デフォルト の  visit  メソッド が 処理 し ま す 。 
クラス ASTVisitor 
ASTVisitor  は 構文 木 を 正し い 順序 で わたり歩 く よう に し ま す 。 
それぞれ の ノード は まず  preorder ( )  の 呼び出し で はじま り ま す 。 
もし その メソッド が 存在 し て い る 場合 、 それ は その ノード を 第 一 引数 と し て 呼び出 さ れ ま す 。  ある 特定 の ノード 型 に 対 する  visitor  メソッド で は 、 その 子 ノード を どの よう に わたり歩 く か が 制御 でき ま す 。 
ASTVisitor  は  visitor  に  visit  メソッド を 追加 する こと で 、 その  visitor  引数 を 修正 し ま す 。 
特定 の ノード 型 に 対 する  visitor  が 存在 し な い 場合 、  default ( )  メソッド が 呼び出 さ れ ま す 。 
ASTVisitor  オブジェクト に は 以下 の よう な メソッド が あ り ま す : XXX  追加 の 引数 を 記述 
cookielib  モジュール は  HTTP  クッキー の 自動 処理 を おこな う クラス を 定義 し ま す 。 
RFC  2109  の クッキー は  Netscape  クッキー と し て 解析 さ れ 、 のち に RFC  296 5  と し て 処理 さ れ ま す 。 
cookielib  は デファクト スタンダード の Netscape  クッキー プロトコル  ( これ は 元々  Netscape  が 策定 し た 仕様 と は かなり 異な っ て い ま す )  に 従 う よう に な っ て お り 、 RFC  2109  で 導入 さ れ た  max - age  や  port  など の クッキー 属性 に も 注意 を 払 い ま す 。 
この 例外 は  File CookieJar  インスタンス が ファイル から クッキー を 読み込 む の に 失敗 し た 場合 に 発生 し ま す 。 
以下 の クラス が 提供 さ れ て い ま す : 
クラス CookieJar  ( 
policy  は  CookiePolicy  インターフェイス を 実装 する オブジェクト で す 。 
CookieJar  クラス に は  HTTP  クッキー を 保管 し ま す 。 
これ は  HTTP  リクエスト に 応 じ て クッキー を 取り出 し 、 それ を HTTP  レスポンス の 中 で 返 し ま す 。  必要 に 応 じ て 、 CookieJar  インスタンス は 保管 さ れ て い る クッキー を 自動 的 に 破棄 し ま す 。 
この サブ クラス は 、 クッキー を ファイル や データベース に 格納 し たり 取り出 し たり する 操作 を おこな う 役割 を 負 っ て い ま す 。 
クラス File CookieJar 
policy  は  CookiePolicy  インターフェイス を 実装 する オブジェクト で す 。 
これ 以外 の 引数 に つ い て は 、 該当 する 属性 の 説明 を 参照 し て くださ い 。  File CookieJar  は ディスク 上 の ファイル から の クッキー の 読み込 み 、 もしくは 書き込み を サポート し ま す 。 
実際 に は 、 load ( )  また は  revert ( )  の どちら か の メソッド が 呼 ば れ る まで クッキー は 指定 さ れ た ファイル から は ロード さ れ ま せ ん 。  この クラス の サブ クラス は  11 . 2 0 . 2  節 で 説明 し ま す 。 
クラス CookiePolicy 
この クラス は 、 ある クッキー を サーバ から 受け入れ る べ き か 、 そして サーバ に 返 す べ き か を 決定 する 役割 を 負 っ て い ま す 。 
クラス DefaultCookiePolicy 
コンストラクタ は キー ワード 引数 しか 取 り ま せ ん 。 
blocked_domains  は ドメイン 名 から な る シーケンス で 、 ここ から は 決して クッキー を 受けと ら な い し 、 この ドメイン に クッキー を 返 す こと も あ り ま せ ん 。  allowed_domains  が  None  で な い 場合 、 これ は この ドメイン のみ から クッキー を 受けと り 、 返 す と い う 指定 に な り ま す 。 
これ 以外 の 引数 に つ い て は CookiePolicy  および  DefaultCookiePolicy  オブジェクト の 説明 を ごらん くださ い 。 
DefaultCookiePolicy  は  Netscape  および  RFC  296 5  クッキー の 標準 的 な 許可  \/  拒絶 の ルール を 実装 し て い ま す 。 
RFC  2109  の クッキー ( Set - Cookie :  の  version  クッキー 属性 が  1  で 受けと ら れ る もの )  は RFC  296 5  の ルール で 扱 わ れ ま す 。 
また  DefaultCookiePolicy  に は いく つ か の 細か い ポリシー 設定 を おこな う パラメータ が 用意 さ れ て い ま す 。 
クラス Cookie 
この クラス は  Netscape  クッキー 、 RFC  2109  の クッキー 、 および  RFC  296 5  の クッキー を 表現 し ま す 。 
cookielib  の ユーザ が 自分 で  Cookie  インスタンス を 作成 する こと は 想定 さ れ て い ま せ ん 。 
かわり に 、 必要 に 応 じ て  CookieJar  インスタンス の make_cookies ( )  を 呼 ぶ こと に な っ て い ま す 。 
参考 : urllib 2 
HTTP  の クッキー クラス で 、 基本 的 に は サーバ サイド の コード で 有用 で す 。 
cookielib  および  Cookie  モジュール は 互い に 依存 し て は い ま せ ん 。 
この モジュール の 拡張 で 、 Windows  上 の  Microsoft  Internet  Explorer  クッキー を 読みこ む クラス が 含 ま れ て い ま す 。 
元祖  Netscape  の クッキー プロトコル の 仕様 で す 。 
今 で も これ が 主流 の プロトコル で す が 、 現在 の メジャー な ブラウザ  ( と  cookielib )  が 実装 し て い る 「 Netscape  クッキー プロトコル 」 は  cookie_ spec . html  で 述べ られ て い る もの と おおまか に しか 似 て い ま せ ん 。 
RFC  296 5  に よ っ て 過去 の 遺物 に な り ま し た 。  Set - Cookie :  の  version = 1  で 使 い ま す 。 
Netscape  プロトコル の バグ を 修正 し た もの で す 。 
Set - Cookie :  の かわり に Set - Cookie 2 :  を 使 い ま す が 、 普及 し て は い ま せ ん 。 
RFC  296 5  に 対 する 未完 の 正誤 表 で す 。 
1 1 . 2 0 . 1  CookieJar  および  File CookieJar  オブジェクト 
この モジュール で は 汎用 の  ( 浅 い \/ 深 い )  コピー 操作 を 提供 し て い ま す 。 
以下 に インタフェース を まとめ ま す : 
この モジュール 固有 の エラー に 対 し て は 、 copy . error  が 送出 さ れ ま す 。  浅 い  ( shallow )  コピー と 深 い  ( deep )  コピー の 違い が 関係 する の は 、 複合 オブジェクト  ( リスト や クラス インスタンス の よう な 他 の オブジェクト を 含 む オブジェクト )  だけ で す : 
浅 い コピー  ( shallowcopy )  は 新た な 複合 オブジェクト を 作成 し 、 その 後  ( 可能 な 限り )  元 の オブジェクト 中 に 見つか っ た オブジェクト に 対 する 参照  を 挿入 し ま す 。 
深 い コピー  ( deep copy )  は 新た な 複合 オブジェクト を 作成 し 、 その 後 元 の オブジェクト 中 に 見つか っ た オブジェクト の  コピー を 挿入 し ま す 。 
深 い コピー 操作 に は 、 しばしば 浅 い コピー 操作 の 時 に は 存在 し な い  2  つ の 問題 が つ い て まわ り ま す : 
再帰 的 な オブジェクト  ( 直接 、 間接 に 関わ ら ず 、 自分 自身 に 対 する 参照 を 持 つ 複合 オブジェクト )  は 再帰 ループ を 引き起こ し ま す 。 
深 い コピー で は 、 何 も か も  を コピー する ため 、 例えば 複数 の コピー 間 で 共有 さ れ る べ き 管理 データ 構造 まで も 、 余分 に コピー し て しま い ま す 。 
deepcopy ( )  関数 で は 、 これ ら の 問題 を 以下 の よう に し て 回避 し て い ま す : 
現在 の コピー 過程 で すでに コピー さ れ た オブジェクト から な る 、 `` メモ ' ' 辞書 を 保持 し ま す ;  かつ 
ユーザ 定義 の クラス で コピー 操作 や コピー さ れ る 内容 の 集合 を 上書き でき る よう に し ま す 。 
現在 の バージョン で は 、 モジュール 、 クラス 、 関数 、 メソッド 、 スタック 追跡 、 スタック 構造 、 ファイル 、 ソケット 、 ウィンドウ 、 アレイ 、 その 他 これ ら に 類似 の 型 を コピー し ま せ ん 。  クラス で は 、 pickle  化 を 制御 する ため の インタフェース と 同じ インタフェース を コピー の 制御 に 使 う こと が でき ま す 。 
これ ら の メソッド に 関 する 情報 は 
モジュール の 記述 を 参照 し て くださ い 。 
copy  モジュール は pickle  用 関数 登録 モジュール 
copy _ reg  を 使 い ま せ ん 。 
クラス 独自 の コピー 実装 を 定義 する ため に 、 特殊 メソッド __copy_ _( ) および __ deepcopy_ _( )  を 定義 する こと が でき ま す 。 
前者 は 浅 い コピー 操作 を 実装 する ため に 使 わ れ ま す ;  追加 の 引数 は あ り ま せ ん 。 
後者 は 深 い コピー 操作 を 実現 する ため に 呼び出 さ れ ま す ;  この 関数 に は 単一 の 引数 と し て メモ 辞書 が 渡 さ れ ま す 。 
__ deepcopy_ _( ) の 実装 で 、 内容 の オブジェクト に 対 し て 深 い コピー を 生成 する 必要 が あ る 場合 、 deepcopy ( )  を 呼び出 し 、 最初 の 引数 に その オブジェクト を 、 メモ 辞書 を 二 つ 目 の 引数 に 与え な けれ ば な り ま せ ん 。 
オブジェクト 状態 の 取得 と 復元 を サポート する ため に 使 わ れ る 特殊 メソッド に つ い て 議論 さ れ て い ま す 。  . 
copy _ reg モジュール は 
と 
モジュール に 対 する サポート を 提供 し ま す 。 
その 上 、 
モジュール は 将来 これ を つか う 可能 性 が 高 い で す 。 
クラス で な い オブジェクト コンストラクタ に つ い て の 設定 情報 を 提供 し ま す 。 
この よう な コンストラクタ は ファクトリ 関数 か 、 また は クラス インスタンス で しょ う 。 
object を 有効 な コンストラクタ で あ る と 宣言 し ま す 。 
object が 呼び出し 可能 で な けれ ば ( そして 、 それ ゆえ コンストラクタ と し て 有効 で な い なら ば ) 、 TypeError を 発生 し ま す 。 
function が 型 type の オブジェクト に 対 する ` ` リダクション ' ' 関数 と し て 使 う こと を 宣言 し ま す 。 
type は ` ` 標準 的 な ' ' クラス オブジェクト で あ っ て は いけ ま せ ん 。 
( 標準 的 な クラス は 異な っ た 扱 わ れ 方 を し ま す 。  詳細 は 、 
object が クラス で あ る か 、 また は constructor が 呼び出し 可能 で な い 場合 に 、 TypeError を 発生 し ま す 。 function と constructor の 求め られ る インターフェイス に つ い て の 詳細 は 、 
モジュール を 参照 し て くださ い 。 
この モジュール は  DES  アルゴリズム に 基づ い た 一 方向 ハッシュ 関数 で あ る 
ルーチン を 実装 し て い ま す 。 
詳細 に つ い て は  Unix  マニュアル ページ を 参照 し て くださ い 。 
この モジュール は 、 Python  スクリプト が ユーザ から 入力 さ れ た パスワード を 受理 でき る よう に し たり 、 Unix パスワード に  ( 脆弱 性 検査 の ため の )  辞書 攻撃 を 試み る の に 使え ま す 。  この モジュール は 実行 環境 の 
の 実装 に 依存 し て い ま す 。 
その ため 、 現在 の 実装 で 利用 可能 な 拡張 を 、 この モジュール で も その まま 利用 でき ま す 。 
word  は 通常 は ユーザ の パスワード で 、 プロンプト や グラフィカル インタフェース から タイプ 入力 さ れ ま す 。  salt  は 通常 ランダム な 2  文字 から な る 文字 列 で 、 DES  アルゴリズム に  4096  通り の うち  1  つ の 方法 で 外乱 を 与え る ため に 使 わ れ ま す 。 
salt  に 使 う 文字 は 集合 [ .\/a-zA - Z 0 - 9 ]  の 要素 で な けれ ば な り ま せ ん 。 
ハッシュ さ れ た パスワード を 文字 列 と し て 返 し ま す 。  パスワード 文字 列 は  salt  と 同じ 文字 集合 に 含 ま れ る 文字 から な り ま す  ( 最初 の 2  文字 は  salt  自体 で す ) .  いく つ か の 拡張 さ れ た 
は 異な る 値 と salt  の 長 さ を 許 し て い る の で 、 パスワード を チェック する 際 に は crypt  さ れ た パスワード 文字 列 全体 を salt と し て 渡 す よう 勧め ま す 。 
典型 的 な 使用 例 の サンプル コード : 
CSV  ( Comma  Separated  Values 、 カンマ 区切り 値列 )  と 呼 ば れ る 形式 は 、 スプレッド シート や データベース 間 で の データ の インポート や エクスポート に お け る 最も 一般 的 な 形式 で す 。 
` ` CSV  標準 ' '  は 存在 し な い ため 、 CSV  形式 は データ を 読み書き する 多く の アプリケーション 上 の 操作 に 応 じ て 定義 さ れ て い る に すぎ ま せ ん 。 
標準 が な い と い う こと は 、 異な る アプリケーション に よ っ て 生成 さ れ たり 取り込 ま れ たり する データ 間 で は 、 しばしば 微妙 な 違い が 発生 する と い う こと を 意味 し ま す 。 
こう し た 違い の ため に 、 複数 の データ 源 から 得 られ た  CSV  ファイル を 処理 する 作業 が 鬱陶し い もの に な る こと が あ り ま す 。 
と は い え 、 デリミタ  ( delimiter )  や クオート 文字 の 相違 は あ っ て も 、 全体 的 な 形式 は 十分 似通 っ て い る ため 、 こう し た データ を 効率 的 に 操作 し 、 データ の 読み書き に おけ る 細々 と し た こと を プログラマ から 隠蔽 する よう な 単一 の モジュール を 書 く こと は 可能 で す 。  csv  モジュール で は 、 CSV  形式 で 書 か れ た テーブル 状 の データ を 読み書き する ため の クラス を 実装 し て い ま す 。 
この モジュール を 使 う こと で 、 プログラマ は  Excel  で 使 わ れ て い る  CSV  形式 に 関 し て 詳し い 知識 を も っ て い な く て も 、 `` この データ を  Excel  で 推奨 さ れ て い る 形式 で 書 い て くださ い ' ' と か 、 `` データ を  Excel  で 作成 さ れ た この ファイル から 読み出 し て くださ い ' '  と 言 う こと が でき ま す 。 
プログラマ は また 、 他 の アプリケーション が 解釈 でき る  CSV  形式 を 記述 し たり 、 独自 の 特殊 な 目的 を も っ た  CSV  形式 を 定義 する こと が でき ま す 。  csv  モジュール の  reader  および  writer  オブジェクト は シーケンス 型 を 読み書き し ま す 。 
プログラマ は DictReader  や  DictWriter  クラス を 使 う こと で 、 データ を 辞書 形式 で 読み書き する こと も でき ま す 。 
注意 : この バージョン の  csv  モジュール は  Unicode  入力 を サポート し て い ま せ ん 。 
また 、 現在 の ところ 、  ASCII  NUL  文字 に 関連 し た いく つ か の 問題 が あ り ま す 。 
従 っ て 、 安全 を 期 す に は 、 全て の 入力 を 一般 的 に は 印字 可能 な ASCII  に し な けれ ば な り ま せ ん 。 
これ ら の 制限 は 将来 取り去 ら れ る こと に な っ て い ま す 。 
Python  へ の この モジュール の 追加 を 提案 し て い る  Python  改良 案  ( PEP :  Python  Enhancement  Proposal ) 
6 . 18  curses . ascii-- ASCII  文字 に 関 する ユーティリティ 
6 .  汎用 オペレーティング システム サービス 
6 . 18  curses . ascii -- ASCII  文字 に 関 する ユーティリティ 
バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
curses . ascii モジュール で は 、  ASCII  文字 を 指 す 名前 定数 と 、 様々 な  ASCII  文字 区分 に つ い て あ る 文字 が 帰属 する か どう か を 調べ る 関数 を 提供 し ま す 。 
この モジュール で 提供 さ れ て い る 定数 は 以下 の 制御 文字 の 名前 で す : 
NUL  空 
ヘディング 開始 、 コンソール 割り込み 
テキスト 開始 
テキスト 終了 
テキスト 伝送 終了 
問い合わせ 、 ACK  フロー 制御 時 に 使用 
肯定 応答 
ベル 
一 文字 後退 
タブ 
TAB  の 別名 : `` 水平 タブ ' '
改行 
LF  の 別名 : `` 改行 ' '
垂直 タブ 
改頁 
復帰 
シフト アウト 、 他 の 文字 セット の 開始 
シフト イン 、 標準 の 文字 セット に 復帰 
データ リンク で の エスケープ 
装置 制御  1 、 フロー 制御 の ため の  XON 
装置 制御  2 、 ブロック モード フロー 制御 
装置 制御  3 、 フロー 制御 の ため の  XOFF 
装置 制御  4 
否定 応答 
同期 信号 
ブロック 転送 終了 
キャンセル 
媒体 終端 
代入 文字 
エスケープ 文字 
ファイル 区切り 文字 
グループ 区切り 文字 
レコード 区切り 文字 、 ブロック モード 終了 子 
単位 区切り 文字 
空白 文字 
削除 
これ ら の 大 部分 は 、 最近 は 実際 に 定数 の 意味 通り に 使 わ れ る こと が ほとんど な い の で 注意 し て くださ い 。 
これ ら の ニーモニック 符号 は デジタル 計算 機 より 前 の テレ プリンタ に お け る 慣習 から 付け られ た もの で す 。  この モジュール で は 、 標準  C  ライブラリ の 関数 を 雛型 と する 以下 の 関数 を サポート し て い ま す : 
ASCII  英数 文字 か どう か を 調べ ま す ; " isalpha ( c ) or  isdigit ( c ) "  と 等価 で す 。 
ASCII  アルファベット 文字 か どう か を 調べ ま す ; " isupper ( c ) or  islower ( c ) "  と 等価 で す 。 
文字 が  7  ビット  ASCII  文字 に 合致 する か どう か を 調べ ま す 。 
ASCII  余白 文字 か どう か を 調べ ま す 。 
ASCII  制御 文字  ( 0 x 00  から  0 x 1 f  の 範囲 )  か どう か を 調べ ま す 。 
ASCII  10  進 数字 、 すなわち  " 0 "  から  " 9 "  まで の 文字 か どう か を 調べ ま す 。 
c in  string . digits "  と 等価 で す 。 
空白 以外 の  ASCII  印字 可能 文字 か どう か を 調べ ま す 。 
ASCII  小文字 か どう か を 調べ ま す 。 
空白 文字 を 含め 、  ASCII  印字 可能 文字 か どう か を 調べ ま す 。 
空白 また は 英数字 以外 の  ASCII  印字 可能 文字 か どう か を 調べ ま す 。 
ASCII  余白 文字 、 すなわち 空白 、 改行 、 復帰 、 改頁 、 水平 タブ 、 垂直 タブ か どう か を 調べ ま す 。 
ASCII  大 文字 か どう か を 調べ ま す 。 
ASCII  16  進数字 か どう か を 調べ ま す 。 
c in  string . hexdigits "  と 等価 で す 。 
ASCII  制御 文字  ( 0  から  31  まで の 値 )  か どう か を 調べ ま す 。 
非  ASCII  文字  ( 0 x 80  また は それ 以上 の 値 )  か どう か を 調べ ま す 。 
これ ら の 関数 は 数字 も 文字 列 も 使え ま す ;  引数 を 文字 列 に し た 場合 、 組み込 み 関数  ord ( )  を 使 っ て 変換 さ れ ま す 。  これ ら の 関数 は 全て 、 関数 に 渡 し た 文字 列 の 最初 の 文字 から 得 られ た ビット 値 を 調べ る の で 注意 し て くださ い ;  関数 は ホスト 計算 機 で 使 わ れ て い る 文字 列 エンコーディング に つ い て 何 ら 関知 し ま せ ん 。 
文字 列 エンコーディング に つ い て 関知 する  ( そして 国際 化 に 関 する プロパティ を 正し く 扱 う )  関数 に つ い て は 、  モジュール 
を 参照 し て くださ い 。  以下 の  2  つ の 関数 は 、 引数 と し て  1  文字 の 文字 列 また は 整数 で 表 し た バイト 値 の どちら で も と り 得 ま す ;  これ ら の 関数 は 引数 と 同じ 型 で 値 を 返 し ま す 。 
ASCII  値 を 返 し ま す 。  c  の 下位  7  ビット に 対応 し ま す 。 
与え た 文字 に 対応 する 制御 文字 を 返 し ま す  ( 0 x 1 f  と ビット 単位 で 論理 積 を 取 り ま す )  。 
与え た 文字 に 対応 する  8  ビット 文字 を 返 し ま す  ( 0 x 80  と ビット 単位 で 論理 和 を 取 り ま す )  。 
以下 の 関数 は  1  文字 から な る 文字 列 値 また は 整数 値 を 引数 に 取 り 、 文字 列 を 返 し ま す 。 
ASCII  文字  c  の 文字 列 表現 を 返 し ま す 。 
もし  c  が 印字 可能 文字 で あ れ ば 、 返 さ れ る 文字 列 は  c  その もの に な り ま す 。 
もし  c  が 制御 文字  ( 0 x 0 0 - 0 x 1 f )  で あ れ ば 、 キャレット  ( "^ " )  と 、 その 後ろ に 続 く  c  に 対応 し た 大 文字 から な る 文字 列 に な り ま す 。  c  が  ASCII  削除 文字  ( 0 x 7 f ) で あ れ ば 、 文字 列 は '^ ?' に な り ま す 。 
c  の メタビット ( 0 x 80 )  が セット さ れ て い れ ば 、 メタビット は 取り去 ら れ 、 前述 の ルール が 適用 さ れ 、 " ! "  が 前 に つけ られ ま す 。 
0  ( NUL )  から  0 x 1 f  ( US )  まで の  32  の  ASCII  制御 文字 と 、 空白 文字 " SP "  の ニーモニック 符号 名 から な る  33  要素 の 文字 列 に よ る シーケンス で す 。 
バージョン  1 . 6  で  変更  さ れ た 仕様 : ncurses  ライブラリ の サポート を 追加 し 、 パッケージ に 変換 し ま し た 
curses  モジュール は 、 可搬 性 の あ る 端末 操作 を 行 う ため の デファクト スタンダード で あ る 、 curses  ライブラリ へ の インタフェース を 提供 し ま す 。 Unix  環境 で は  curses  は 非常 に 広 く 用い られ て い ま す が 、 DOS 、 OS 2 、 そして おそらく 他 の システム の バージョン も 利用 する こと が でき ま す 。 
この 拡張 モジュール は  Linux  および  BSD  系 の Unix で 動作 する オープン ソース の  curses  ライブラリ で あ る  ncurses  の  API  に 合致 する よう に 設計 さ れ て い ま す 。 
ロケール 設定 に 関わ ら ず  ASCII  文字 を 扱 う ため の ユーティリティ 。 
curses  ウィンドウ に デプス 機能 を 追加 する パネル スタック 拡張 。 
Emacs  ライク な キー バインディング を サポート する 編集 可能 な  curses  用 テキストウィ ジェット 。 
アプリケーション の 起動 時 および 終了 時 に 適切 な 端末 の セットアップ と リセット を 確実 に 行 う ため の 関数 。  . 
Andrew Kuchling  および  Eric  Raymond に よ っ て 書 か れ た 、 curses  を  Python  で 使 う ため の チュートリアル で す 。  Python  Web  サイト で 入手 でき ま す 。 
Python  ソース コード の  Demo\/ curses\/ ディレクトリ に は 、 この モジュール で 提供 さ れ て い る  curses  バインディング を 使 っ た プログラム 例 が いく つ か 収め られ て い ま す 。 
6 . 19  curses . panel-- curses  の ため の パネル スタック 拡張 
6 . 1 9 . 1  関数 
パネル は 深 さ  ( depth )  の 機能 が 追加 さ れ た ウィンドウ で す 。  これ に よ り 、 ウィンドウ を お 互い に 重ね合わせ る こと が でき 、 各 ウィンドウ の 可視 部分 だけ が 表示 さ れ ま す 。 
パネル は スタック 中 に 追加 し たり 、 スタック 内 で 上下 移動 さ せ たり 、 スタック から 除去 する こと が でき ま す 。 
6 . 16  curses . text pad -- curses  プログラム の ため の テキスト 入力 ウィ ジェット 
6 . 16  curses . text pad -- curses  プログラム の ため の テキスト 入力 ウィ ジェット 
curses . text pad  モジュール で は 、 curses  ウィンドウ 内 で の 基本 的 な テキスト 編集 を 処理 し 、 Emacs  に 似 た  ( すなわち  Netscape  Navigator ,  BBedit  6 . x ,  FrameMaker ,  その 他 諸々 の プログラム と も 似 た )  キー バインド を サポート し て い る  Text box  クラス を 提供 し ま す 。 
この モジュール で は また 、 テキスト ボックス を 枠 で 囲 む など の 目的 の ため に 有用 な 、 矩形 描画 関数 を 提供 し て い ま す 。 
curses . text pad  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
矩形 を 描画 し ま す 。 
最初 の 引数 は ウィンドウ オブジェクト で な けれ ば な り ま せ ん ;  残り の 引数 は その ウィンドウ から の 相対 座標 に な り ま す 。 
2  番目 および  3  番 目 の 引数 は 描画 す べ き 矩形 の 左上 角 の  y  および  x 座標 で す ;  4  番目 および  5  番 目 の 引数 は 右下 角 の  y  および  x  座標 で す 。  矩形 は 、  VT 100 \/ IBM  PC  に おけ る フォーム 文字 を 利用 でき る 端末 ( xterm  や その 他 の ほとんど の ソフトウェア 端末 エミュレータ を 含 む ) で は それ を 使 っ て 描画 さ れ ま す 。 
そう で な けれ ば  ASCII  文字 の ダッシュ 、 垂直 バー 、 および プラス 記号 で 描画 さ れ ま す 。 
6 . 17  curses . wrapper-- curses  プログラム の ため の 端末 ハンドラ 
6 . 17  curses . wrapper-- curses  プログラム の ため の 端末 ハンドラ 
この モジュール で は 関数  wrapper ( )  一 つ を 提供 し て い ま す 。  これ は  curses  使用 アプリケーション の 残り の 部分 と な る もう 一 つ の 関数 で す 。 
アプリケーション が 例外 を 送出 し た 場合 、 wrapper ( )  は 例外 を 再 送出 し て トレース バック を 生成 する 前 に 端末 を 正常 な 状態 に 復元 し ま す 。 
フック 関数 を 呼び出 す 前 に 、  wrapper ( )  は cbreak  モード を オン 、 エコー を オフ に し 、 端末 キー パッド を 有効 に し ま す 。  端末 が カラー を サポート し て い る 場合 に は カラー を 初期 化 し ま す 。 
( 通常 終了 も 例外 に よ る 終了 も )  終了 時 に は  cooked  モード に 復元 し 、 エコー を オン に し 、 端末 キー パッド を 無効 化 し ま す 。 
datetime モジュール で は 、 日付 や 時間 データ を 簡単 な 方法 と 複雑 な 方法 の 両方 で 操作 する ため の クラス を 提供 し て い ま す 。 
特定 の 数字 が メートル か 、 マイル か 、 質量 を 表 す か と い っ た こと が プログラム の 問題 で あ る よう に 、 naive  な  datetime オブジェクト が 標準 世界 時  ( UTC :  CoordinatedUniversaltime)  を 表現 する か 、 ローカル の 時刻 を 表現 する か 、 あり は 他 の いずれ か の タイム ゾーン に おけ る 時刻 を 表現 する か は 純粋 に プログラム の 問題 と な り ま す 。 
tzinfo  オブジェクト は  UTC  時刻 から の オフセット 、 タイム ゾーン 名 、 夏 時間 が 有効 に な っ て い る か どう か 、 と い っ た 情報 を 記憶 し て い ま す 。 
datetime モジュール で は 具体 的 な  tsinfo  クラス を 提供 し て い な い の で 注意 し て くださ い 。 
必要 な 詳細 仕様 を 備え た タイム ゾーン 機能 を 提供 する の は アプリケーション の 責任 で す 。 
世界 各国 に お け る 時刻 の 修正 に 関 する 法則 は 合理 的 と い う より も 政治 的 な もの で あ り 、 全て の アプリケーション に 適 し た 標準 と い う もの が 存在 し な い の で す 。  datetime モジュール で は 以下 の 定数 を 公開 し て い ま す : 
date  や  datetime オブジェクト で 許 さ れ て い る 、 年 を 表現 する 最小 の 数字 で す 。 
MINYEAR  は  1  で す 。 
date  や  datetime オブジェクト で 許 さ れ て い る 、 年 を 表現 する 最大 の 数字 で す 。 
MAXYEAR  は  9999  で す 。 
汎用 の カレンダー 関連 関数 。 
時刻 へ の アクセス と 変換 。 
dbhash  モジュール で は  BSD  db  ライブラリ を 使 っ て データベース を 開 く ため の 関数 を 提供 し ま す 。 
この モジュール は 、  DBM  形式 の データベース へ の アクセス を 提供 する 他 の  Python  データベース モジュール の インタフェース を その まま 反映 し て い ま す 。 
dbhash  を 使 う に は 
モジュール が 必要 で す 。  この モジュール で は 一 つ の 例外 と 一 つ の 関数 を 提供 し て い ま す : 
KeyError  以外 の データベース の エラー で 送出 さ れ ま す 。 
bsddb .error  と 同じ 意味 で す 。 
データベース  db  を 開 き 、 データベース オブジェクト を 返 し ま す 。 
オプション の  mode  引数 は 、 新た に データベース を 作成 し な けれ ば な ら な い とき に データベース ファイル に 設定 す べ き  Unix  ファイル 権限 ビット を 表 す ため に 使 わ れ ま す ;  この 値 は プロセス の 現在 の  umask  値 で マスク さ れ ま す 。 
dbm  形式 の データベース へ の 汎用 インタフェース 。 
BSD  db  ライブラリ へ の 低 レベル インタフェース 。 
既存 の データベース が どの 形式 の データベース か 判定 する ユーティリティ モジュール 。 
dbm モジュール は Unix ( n ) dbm インタフェース の ライブラリ を 提供 し ま す 。  dbm オブジェクト は 、 キー と 値 が 必ず 文字 列 で あ る 以外 は 辞書 オブジェクト の よう な ふるまい を し ま す 。 
I \/ O エラー の よう な dbm 特有 の エラー が 起 っ た とき に 上げ られ る 値 で す 。  また 、 正し く な い キー が 与え られ た 場合 に 通常 の マッピング エラー の よう な KeyError が 上げ られ ま す 。 
ndbm が 使用 し て い る 実装 ライブラリ 名 で す 。 
dbm データベース を 開 い て dbm オブジェクト を 返 し ま す 。 
存在 する データベース を 読取り 専用 で 開 き ま す 。 
( デフォルト )  ' w '
存在 する データベース を 読み書き 可能 な 状態 で 開 き ま す 。 
データベース を 読み書き 可能 な 状態 で 開 き ま す 。 
また 、 データベース が 存在 し な い 場合 は 新た に 作成 し ま す 。 'n'
デフォルト で は 8 進 数 の 066 6 で す 
dbm スタイル の 一般 的 な インタフェース . 
GNU  GDBM ライブラリ の 類似 し た インタフェース . 
存在 し て い る データベース の 形式 を 決め る ため の ユーティリティ モジュール . 
decimal  モジュール は 10  進 の 浮動 小数 点 算術 を サポート し ま す 。 
decimal  に は 、  float ( )  データ 型 に 比べ て 、 以下 の よう な 利点 が あ り ま す : 
10  進数 を 正確 に 表現 でき ま す 。 
1 . 1  の よう な 数 は 、 2  進数 の 浮動 小数 点 型 で は 正し く 表現 でき ま せ ん 。  エンド ユーザ は 普通 、 2  進数 に お け る 1 . 1  の 近似 値 が 1 . 1000000000000001  だ から と い っ て 、 その よう に 表示 し て ほし い と は 考え な い もの で す 。 
値 の 正確 さ は 算術 に も 及 び ま す 。 
10  進 の 浮動 小数 点 に よ る 計算 で は 、 " 0 . 1  +  0 . 1  +  0 . 1  -  0 . 3 "  は 厳密 に ゼロ に 等し く な り ま す 。 
2  進 浮動 小数 点 で は 5 . 5 5 1 1 15 1231 257827 e - 0 17  に な っ て しま い ま す 。 
decimal  モジュール で は 、 有効 桁数 の 表記 が 取り入れ られ て お り 、 例えば  " 1 . 30  +  1 . 20 "  は  2 . 50  に な り ま す 。 
すなわち 、 末尾 の ゼロ は 有効 数字 を 示 す ため に 残 さ れ ま す 。 
こう し た 仕様 は 通貨 計算 を 行 う アプリケーション で は 慣例 で す 。 
乗算 の 場合 、 「 教科 書 的 な 」 アプローチ で は 、 乗算 の 被 演算 子 すべて の 桁数 を 使 い ま す 。 
例えば 、 " 1 . 3  *  1 . 2 "  は  1 . 56  に な り 、 " 1 . 30  *  1 . 20 "  は  1 . 5600  に な り ま す 。 
ハードウェア に よ る  2  進 浮動 小数 点 表現 と 違 い 、 decimal  モジュール で は 計算 精度 を ユーザ が 指定 でき ま す ( デフォルト で は  28  桁 で す ) 。  この 桁数 は ほとんど の 問題 解決 に 十分 な 大きさ で す : 
2  進 と  10  進 の 浮動 小数 点 は 、 いずれ も 広 く 公開 さ れ て い る 標準 仕様 の もと に 実装 さ れ て い ま す 。 
組み込み の 浮動 小数 点 型 で は 、 標準 仕様 で 提唱 さ れ て い る 機能 の ほんの ささやか な 部分 を 利用 でき る に すぎ ま せ ん が 、  decimal  で は 標準 仕様 が 要求 し て い る 全て の 機能 を 利用 でき ま す 。  必要 に 応 じ て 、 プログラマ は 値 の 丸め や シグナル 処理 を 完全 に 制御 でき ま す 。 
この モジュール は 、  10  進数 型 、 算術 コンテキスト  ( context  for  arithmetic ) 、 そして シグナル  ( signal )  と い う 三 つ の 概念 を 中心 に 設計 さ れ て い ま す 、 10  進数 型 は 変更 不 可能 な 型 で す 。 
この 型 に は 符号 部 、 仮数 部 、 そして 指数 部 が あ り ま す 。 
有効 桁数 を 残 す ため に 、 仮数 部 の 末尾 に あ る ゼロ の 切り詰め は 行 わ れ ま せ ん 。 
decimal  で は 、 Infinity ,  - Infinity ,  および  NaN  と い っ た 特殊 な 値 も 定義 さ れ て い ま す 。 
丸め 規則 に は RO UND _ CEILING , RO UND _ DOWN ,  ROUND _ FLOOR ,  ROUND _ HALF _ DOWN , RO UND _ HALF _ EVEN ,  ROUND _ HALF _ UP ,  および RO UND _ UP  が あ り ま す 。  シグナル と は 、 演算 の 過程 で 生じ る 例外 的 条件 で す 。 
個々 の シグナル は 、 アプリケーション それぞれ の 要求 に 従 っ て 、 無視 さ れ たり 、 単なる 情報 と みな さ れ たり 、 例外 と し て 扱 わ れ たり し ま す 。 
decimal  モジュール に は 、 Clamped ,  Invalid Operation , DivisionByZero ,  Inexact ,  Rounded , Subnormal ,  Overflow ,  および  Underflow と い っ た シグナル が あ り ま す 。  各 シグナル に は 、 フラグ と トラップ イネー ブラ が あ り ま す 。 
演算 上 何 ら か の シグナル に 遭遇 する と 、 フラグ は ゼロ から インクリメント さ れ て ゆ き ま す 。  この とき 、 もし トラップ イネー ブラ が  1  に セット さ れ て い れ ば 、 例外 を 送出 し ま す 。 
フラグ の 値 は 膠着 型  ( sticky )  な の で 、 演算 に よ る フラグ の 変化 を モニタ し た けれ ば 、 予め フラグ を リセット し て お か ね ば な り ま せ ん 。 
IBM  に よ る 汎用  10  進 演算 仕様 、 
IEEE  標準 化 仕様  85 4 - 1987 , 
IEEE  85 4  に 関 する 非 公式 の テキスト 
。 
柔軟 性 の あ る クラス で 、 ハッシュ 化 でき る 要素 の 連続 で あ れ ば 、 どんな 型 の もの で あ っ て も 比較 可能 で す 。 
基礎 的 な アルゴリズム は 可塑 的 な もの で あ り 、 1980 年代 の 後半 に 発表 さ れ た Ratcliff と Obershelp に よ る アルゴリズム 、 大げさ に 名づけ られ た ` ` ゲシュタルト パターン マッチング ' ' より は もう 少し 良 さ そう な もの で す 。  その 考え 方 は 、 ``junk ' ' 要素 を 含 ま な い 最も 長 い マッチ 列 を 探 す こと で す ( Ratcliff と Obershelp の アルゴリズム で は junk を 示 し ま せ ん ) 。 
この アイデア は 、 下位 の マッチ 列 から 左 また は 右 に 伸び る 列 の 断片 に 対 し て 再帰 的 に あてはま り ま す 。 
これ は 小さな 文字 列 に 対 し て 効率 良 い もの で は あ り ま せ ん が 、 人間 の 目 から み て 「 良く 見え る 」 よう に マッチ する 傾向 が あ り ま す 。 
タイミング :  基本 的 な Ratcliff -Obershelp アルゴリズム は 、 予想 の 3 乗 、 最悪 の 場合 で も 2 乗 と な り ま す 。  Sequence Matcher オブジェクト は 、 最悪 の ケース に 比べ て 4 倍 、 予想 さ れ る 挙動 は 、 シーケンス の 中 に どの くらい の 要素 が あ る の か ( 最良 な の は 一 列 の 場合 ) 、 と い う ややこし い 状況 に 依存 し て い ま す 。 
テキスト 行 から な る シーケンス を 比較 する クラス で す 。 
コード 
列 は 文字 列 1 に のみ 存在 する 
列 は 文字 列 2 に のみ 存在 する 
列 は 両方 の 文字 列 で 同一 
列 は 入力 文字 列 の どちら に も 存在 し な い 
'? ' で 始ま る 列 は 線 内 の 差異 に 注意 を 向け よう と し ま す 。  その 差異 は 、 入力 さ れ た シーケンス の どちら に も 存在 し ま せ ん 。 
シーケンス が タブ 文字 を 含 む とき 、 これ ら の ライン は 判別 し づら い もの に な る こと が あ り ま す 。 
この クラス は 、 二 つ の テキスト を 左右 に 並べ て 比較 表示 し 、 行間 あるいは 行内 の 変更 点 を 強調 表示 する よう な  HTML  テーブル  ( また は テーブル の 入 っ た 完全 な  HTML  ファイル )  を 生成 する ため に 使 い ま す 。 
テーブル は 完全 差分 モード 、 コンテキスト 差分 モード の いずれ で も 生成 でき ま す 。  この クラス の コンストラクタ は 以下 の よう に な っ て い ま す : 
HtmlDiff  の インスタンス を 初期 化 し ま す 。 
tabsize  は オプション の キー ワード 引数 で 、 タブ ストップ 幅 を 指定 し ま す 。  デフォルト は  8  で す 。 
wrapcolumn  は オプション の キー ワード 引数 で 、 テキスト を 折り返 す カラム 幅 を 指定 し ま す 。  デフォルト は  None  で 折り返し を 行 い ま せ ん 。 
linejunk  および  charjunk  は オプション の キー ワード 引数 で 、 ndiff ( )  ( HtmlDiff  は この 関数 を 使 っ て 左右 の テキスト の 差分 を  HTML  で 生成 し ま す )  に 渡 さ れ ま す 。 
それぞれ の 引数 の デフォルト 値 および 説明 は ndiff ( )  の ドキュメント を 参照 し て くださ い 。 
以下 の メソッド が  public  に な っ て い ま す : 
fromlines  と  tolines  ( いずれ も 文字 列 の リスト )  を 比較 し 、 行間 また は 行内 の 変更 点 が 強調 表示 さ れ た 行 差分 の 入 っ た 表 を 持 つ 完全 な  HTML  ファイル を 文字 列 で 返 し ま す 。 
fromdesc  および  todesc  は オプション の キー ワード 引数 で 、 差分 表示 テーブル に おけ る それぞれ 差分 元 、 差分 先 ファイル の カラム の ヘッダ に な る 文字 列 を 指定 し ま す  ( いずれ も デフォルト 値 は 空 文字 列 で す ) 。 
context  および  numlines  は とも に オプション の キー ワード 引数 で す 。  contest  を  True  に する と コンテキスト 差分 を 表示 し 、 デフォルト の  False  に する と 完全 な ファイル 差分 を 表示 し ま す 。 
context  が  False  の 場合 、 numlines  は  " next "  と 書 か れ た ハイパーリンク を たど っ た 時 に 到達 する 場所 が 次 の 変更 部分 より 何 行 前 に あ る か を 制御 し ま す ( 値 を ゼロ に し た 場合 、 " next "  ハイパーリンク を 辿 る と 変更 部分 の 強調 表示 が ブラウザ の 最 上 部 に 表示 さ れ る よう に な り ま す ) 。 
fromlines  と  tolines  ( いずれ も 文字 列 の リスト )  を 比較 し 、 行間 また は 行内 の 変更 点 が 強調 表示 さ れ た 行 差分 の 入 っ た 完全 な  HTML  テーブル を 文字 列 で 返 し ま す 。  この メソッド の 引数 は 、 make_file ( )  メソッド の 引数 と 同じ で す 。 
Tools\/scripts\/diff . py  は この クラス へ の コマンドライン フロント エンド で 、 使 い 方 を 学 ぶ 上 で 格好 の 例題 が 入 っ て い ま す 。 
a  と  b  ( 文字 列 の リスト )  を 比較 し 、 差異  ( 差異 の あ る 行 を 生成 する ジェネレータ )  を 、 diff  の コンテクスト 形式 で 返 し ま す 。  コンテクスト 形式 は 、 変更 が あ っ た 行 に 前後 数行 を 加え て あ る 、 コンパクト な 表現 方法 で す 。 
変更 箇所 は 、 変更 前 \/ 変更 後 に 分け て 表 し ま す 。 
行末 に 改行 文字 を 持 た な い 入力 に 対 し て は 、 出力 で も 改行 文字 を 付加 し な い よう に  lineterm  引数 に  " "  を 渡 し て くださ い 。  diff  コンテクスト 形式 は 、 通常 、 ヘッダ に ファイル 名 と 変更 時刻 を 持 っ て い ま す 。 
この 情報 は 、 文字 列  fromfile 、 tofile 、 fromfiledate、 tofiledate  で 指定 でき ま す 。  変更 時刻 の 書式 は 、 通常 、 time. ctime( )  の 戻 り 値 と 同じ もの を 使 い ま す 。 
指定 し な かっ た 場合 の デフォルト 値 は 、 空 文字 列 で す 。 
Tools\/scripts\/diff . py  は 、 この 関数 の コマンドライン の フロント エンド ( インターフェイス ) に な っ て い ま す 。 
possibilities は word に マッチ さ せ る ( 一般 的 に は 文字 列 ) シーケンス の リスト で す 。 
可能 性 の あ る 、 ( 少な く とも  n  に 比べ て ) 最も よ い マッチ は リスト に よ っ て 返さ れ 、 同一 性 を 表 す 数値 に 応じ て 最も 近 い もの から 順 に 格納 さ れ ま す 。 
a  と  b  ( 文字 列 から な る リスト ) を 比較 し 、 Differ  オブジェクト 形式 の 差異 ( 解析 器 は 差異 の あ る 列 ) を 返 し ま す 。  オプション の パラメータ  linejunk  と  charjunk  は 、 filter 機能 の ため の キー ワード で す ( 使 わ な い とき は 空 に する ) 。 
linejunk: string 型 の 引数 ひと つ を 受け取 る 関数 で 、 文字 列 が junk か 否 か に よ っ て true を ( 違 う とき に は true を ) 返 し ま す 。  Python 2 . 3 以降 、 デフォルト で は ( None ) に な り ま す 。 
charjunk :  長 さ 1 の 文字 を 受け取 る 関数 で す 。  デフォルト で は 、 モジュール レべル の 関数  IS _ CHARACTER _ JUNK ( ) で あ り 、 これ は 空白 文字 列 ( 空白 また は タブ 、 注 : 改行 文字 を これ に 含め る の は 悪 い アイデア ! ) を フィルタリング し ま す 。 
Tools\/scripts\/ndiff . py  は 、 この 関数 の コマンドライン の フロント エンド ( インターフェイス ) で す 。 
差異 を 生成 し た シーケンス の ひと つ を 返 し ま す 。 
与え られ る sequence は  Differ . compare ( )  また は ndiff ( ) に よ っ て 生成 さ れ 、 ファイル 1 また は 2 ( 引数 which で 指定 さ れ る ) に よ っ て 元 の 列 に 復元 さ れ 、 行頭 の プレフィクス が 取りのぞ か れ ま す 。 
例 : diff =ndiff ( 'one \\ntwo\\nthree \n'. splitlines ( 1 ) , . . .  'ore \ntree \nemu \n'. splitlines ( 1 ) )  diff = list ( diff ) #materialize the  generated deltainto a  list  print  ' '. join ( restore ( diff ,  1 ) ) , onetwothree  print  ' '. join ( restore ( diff ,  2 ) ) , oretreeemu 
a  と  b  ( 共 に 文字 列 の リスト )  を 比較 し 、 diff  の unified  形式 で 、 差異  ( 差分 行 を 生成 する ジェネレータ )  を 返 し ま す 。 unified  形式 は 変更 が あ っ た 行 に 前後 数行 を 加え た 、 コンパクト な 表現 方法 で す 。 
変更 箇所 は  ( 変更 前 \/ 変更 後 を 分離 し た ブロック で は な く )  イン ライン ・ スタイル で 表 さ れ ま す 。 
行末 に 改行 文字 を 持 た な い 入力 に は 、 出力 も 同じ よう に 改行 なし に な る よう に 、 lineterm  引数 を  " "  に セット し て くださ い diff  コンテクスト 形式 は 、 通常 、 ヘッダ に ファイル 名 と 変更 時刻 を 持 っ て い ま す 。 
Tools\/scripts\/diff . py  は 、 この 関数 の コマンドライン の フロント エンド ( インターフェイス ) で す 。 
無視 でき る 列 の とき true を 返 し ま す 。 
列  line  が 空白 、 また は  " # " "  ひと つ の とき に は 無視 でき ま す 。  それ 以外 の 時 に は 無視 でき ま せ ん 。 
ndiff ( )  の 引数 linkjunk と し て デフォルト で 使用 さ れ ま す 。 ndiff ( ) の linejunk は Python  2 . 3 以前 の もの で す 。 
無視 でき る 文字 の とき true を 返 し ま す 。 
文字  ch  が 空白 、 また は タブ 文字 の とき に は 無視 でき ま す 。  それ 以外 の 時 に は 無視 でき ま せ ん 。 
ndiff ( )  の 引数 charjunk と し て デフォルト で 使用 さ れ ま す 。 
Pattern Matching :  The  Gestalt  Approach  ( パターン マッチング :  全体 アプローチ ) 
John  W .  Ratcliff  と  D .  E .  Metzener  に よ る 同一 性 アルゴリズム に 関 する 議論 。 
1988 年 7 月 号 掲載 。 
os . listdir ( )  に よ っ て 得 た  path  の ディレクトリ 一覧 を 返 し ま す 。 
path  を 変え な い 限り 、 以降 の  listdir ( )  を 呼び出 し て も ディレクトリ 構造 を 読み込 みなお す こと は し な い の で 注意 し て くださ い 。 
返 さ れ る リスト は 読み出し 専用 で あ る と 見な さ れ る の で 注意 し て くださ い ( おそらく 将来 の バージョン で は タプル を 返 す よう に 変更 さ れ る はず  ?  で す ) 。 
listdir ( )  と 同じ で す 。 
以前 の バージョン と の 互換 性 の ため に 定義 さ れ て い ま す 。 
list  を  head  の 相対 パス から な る リスト と し て 、 各 パス が ディレクトリ を 指 す 場合 に は  " \/ "  を パス 名 の 後ろ に 追加 し た もの に 置き換え ま す 。 
18 . 10 . 1  Python バイトコード 命令 
dis モジュール は Python バイトコード を 逆 アセンブル し て バイトコード の 解析 を 助け ま す 。 
Python アセン ブラ が な い ため 、 この モジュール が Python アセンブリ 言語 を 定義 し て い ま す 。 
この モジュール が 入力 と し て 受け取 る Python バイトコード は ファイル Include \/opcode . h に 定義 さ れ て お り 、 コンパイラ と インタプリタ が 使用 し て い ま す 。  例 :  関数 myfunc を 考え る と : 
次 の コマンド を myfunc ( ) の 逆 アセンブリ を 得 る ため に 使 う こと が でき ま す : 
( ` ` 2 ' ' は 行 番号 で す ) 。  dis モジュール は 次 の 関数 と 定数 を 定義 し ま す : 
bytesource オブジェクト を 逆 アセンブル し ま す 。 
bytesource は モジュール 、 クラス 、 関数 、 あるいは コード オブジェクト の いずれ か を 示 し ま す 。 
モジュール に 対 し て は 、 すべて の 関数 を 逆 アセンブル し ま す 。 
クラス に 対 し て は 、 すべて の メソッド を 逆 アセンブル し ま す 。 
単一 の コード シーケンス に 対 し て は 、 バイトコード 命令 ごと に 一行 を プリント し ま す 。 
オブジェクト が 与え られ な い 場合 は 、 最後 の トレース バック を 逆 アセンブル し ま す 。 
トレース バック の スタック の 先頭 の 関数 を 逆 アセンブル し ま す 。  None が 渡 さ れ た 場合 は 最後 の トレース バック を 使 い ま す 。 
例外 を 引き起こ し た 命令 が 表示 さ れ ま す 。 
コード オブジェクト を 逆 アセンブル し ま す 。  lasti が 与え られ た 場合 は 、 最後 の 命令 を 示 し ま す 。 
出力 は 次 の よう な カラム に 分割 さ れ ま す : 
各行 の 最初 の 命令 に 対 する 行 番号 。 
現在 の 命令 。  " - " と し て 示 さ れ ま す 。 
命令 の アドレス 。 
演算 コード 名 。 
演算 パラメータ 。 
括弧 の 中 の パラメータ の インタプリテーション 。 
パラメータ インタープリテーション は ローカル および グルーバル 変数 名 、 定数 値 、 分岐 目標 、 そして 比較 演算 子 を 認識 し ま す 。 
disassemble の 別名 。 
より タイプ し やす く 、 以前 の Python リリース と 互換 性 が あ り ま す 。 
演算 名 。  一連 の バイトコード を 使 っ て インデキシング でき ま す 。 
すべて の 比較 演算 名 。 
定数 腹 メータ を 持 つ 一連 の バイトコード 。 
自由 変数 に アクセス する 一連 の バイトコード 。 
名前 に よ っ て 属性 に アクセス する 一連 の バイトコード 。 
相対 ジャンプ ターゲット を も つ 一連 の バイトコード 。 
絶対 ジャンプ ターゲット を も つ 一連 の バイトコード 。 
ローカル 変数 に アクセス する 一連 の バイトコード 。 
ブール 演算 の 一連 の バイトコード 。 
18 . 10 . 1  Python バイトコード 命令 
この モジュール は アーカイブ ファイル ( tar や zip ) を 作成 する 関数 を 提供 し ま す 。 
アーカイブ ファイル ( 例 :  zip や tar ) を 作成 し ま す 。 
base_name は 作成 する ファイル 名 から フォーマット の 拡張 子 を 除 い た もの で す 。  format は アーカイブ の フォーマット で zip 、tar 、 ztar 、 gztar の いずれ か で す 。 
アーカイブ ファイル 名 を 返 し ま す 。 
警告 : この 関数 は bz 2 ファイル を 扱え る よう に 変更 さ れ る べ き で す 
base_dir 以下 の 全 ファイル から 、 tar ファイル を 作成 ( オプション で 圧縮 ) し ま す 。  compress は ' gzip ' 、 ' compress' 、 'bzip 2 ' 、 また は  None で あ る 必要 が あ り ま す 。 
'tar ' と 圧縮 ユーティリティ ' compress ' に は パス が 通 っ て い る 必要 が あ る の で 、 これ は おそらく Unix だけ で 有効 で す 。 
出力 tar ファイル は 
base_dir.tar と い う 名前 に な り 、 圧縮 に よ っ て 拡張 子 が つ き ま す (. gz 、  . bz 2  また は . Z ) 。 
出力 ファイル 名 が 返 り ま す 。 
警告 : これ は tarfile モジュール の 呼び出し に 置換 さ れ る べ き で す 。 
base_dir 以下 の 全 ファイル から 、 zip ファイル を 作成 し ま す 。 
出力 さ れ る zip ファイル は base_dir +  . zip と い う 名前 に な り ま す 。 
zipfilePython モジュール ( 利用 可能 なら ) また は Info ZIP  zip ユーティリティ ( インストール さ れ て い て パス が 通 っ て い る なら ) を 使 い ま す 。 
もし どちら も 利用 でき な けれ ば 、 DistutilsExecError が 起き ま す 。 
出力 zip ファイル 名 が 返 り ま す 。 
この モジュール は BorlandCCompiler クラス を 提供 し ま す 。  抽象 クラス CCompiler の 具象 クラス で Borland  C + +  コンパイラ 向け で す 。 
この モジュール は  CCompiler クラス の 抽象 ベース クラス を 提供 し ま す 。 
CCompiler の インスタンス は プロジェクト に お け る 全て の コンパイル および リンク に 使 わ れ ま す 。 
コンパイラ の オプション を 設定 する ため の メソッド が 提供 さ れ ま す --  マクロ 定義 、 include ディレクトリ 、 リンク パス 、 ライブラリ など 。  この モジュール は 以下 の 関数 を 提供 し ま す 。 
ライブラリ を 探索 する ディレクトリ 、 特定 の ライブラリ と の リンク を する ため の リン カ オプション を 生成 し ま す 。  libraries  と  library_ dirs  は それぞれ ライブラリ 名 ( ファイル 名 で は あ り ま せ ん ! ) の リスト と 、 探索 ディレクトリ の リスト で す 。 
compiler で 利用 でき る コマンドライン オプション の リスト ( 指定 さ れ た フォーマット 文字 列 に 依存 し ま す ) を 返 し ま す 。 
Unix  の コンパイラ と 、 Visual  C + + で 利用 でき る コマンドライン オプション の リスト を 返 し ま す 。 
指定 さ れ た プラットフォーム の デフォルト コンパイラ を 返 し ま す 。 
問い合わせ の osname は Python 標準 の OS 名 ( os . name で 返 さ れ る もの ) の ひと つ で あ る べ き で 、 platform は sys . platform で 返 さ れ る 共通 の 値 で す 。 
パラメータ が 指定 さ れ て い な い 場合 の デフォルト 値 は os . name と  sys . platform で す 。 
指定 さ れ た プラットフォーム \/ コンパイラ の 組み合わせ 向け に 、 CCompiler サブ クラス の インスタンス を 生成 する ファクトリ 関数 で す 。 
plat  の デフォルト 値 は  os . name  ( 例 : 'posix ' , 'nt' ) , compiler ) 、 compiler の デフォルト 値 は プラト フォーム の デフォルト コンパイラ で す 。 
現在 は ' posix ' と 'nt ' だけ が サポート さ れ て い ま す 、 デフォルト の コンパイラ は ` `traditional Unix  interface ' '( UnixCCompiler クラス )  と 、 Visual  C + + ( MSVC Compiler  クラス )  で す 。 
Windows で Unix コンパイラ オブジェクト を 要求 する こと も 、 Unix で Microsoft コンパイラ オブジェクト を 要求 する こと も 可能 で す 。  compiler 引数 を 与え る と  plat は 無視 さ れ ま す 。 
利用 可能 な コンパイラ の リスト を 表示 し ま す ( build ,build_ext , build_clib の 、 - -help- compiler オプション で 使 わ れ ま す 。 
)  クラス CCompiler 
抽象 ベース クラス  CCompiler は 実際 の コンパイラクラス で 実装 さ れ る 必要 の あ る インタフェース を 定義 し て い ま す 。 
この クラス は コンパイラクラス で 利用 さ れ る ユーティリティ メソッド も 定義 し て い ま す 。  コンパイラ 抽象 クラス の 基本 的 な 前提 は 、 各 インスタンス は あ る プロジェクト を ビルド する とき の 全 コンパイル \/ リンク で 利用 でき る と い う こと で す 。 
そこ で 、 コンパイル と リンクステップ で 共通 する 属性 - -  インク ルード ディレクトリ 、 マクロ 定義 、 リンク する ライブラリ  など  --  は コンパイラ インスタンス の 属性 に な り ま す 。 
フラグ は  verbose ( 冗長 な 出力 を 表示 し ま す ) 、 dry _ run ( 実際 に は その ステップ を 実行 し ま せ ん ) 、 そして force ( 依存 関係 を 無視 し て 全て 再 ビルド し ま す ) で す 。 
これ ら の フラグ は 全て デフォルト 値 が 0 ( 無効 ) に な っ て い ま す 。 
CCompiler また は サブ クラス を 直接 インスタンス 化 し た く な い 場合 に は 、 かわり に distutils . CCompiler . new_ compiler ( ) ファクトリ 関数 を 利用 し て くださ い 。  以下 の メソッド で 、 Compiler クラス の インスタンス が 使 う コンパイラ オプション を 手動 で 変更 でき ま す 。 
dir を ヘッダ ファイル 探索 ディレクトリ の リスト に 追加 し ま す 。 
コンパイラ は add_ include_dir ( ) を 呼び出 し た 順 に ディレクトリ を 探索 する よう 指定 さ れ ま す 。 
探索 さ れ る ディレクトリ の リスト を  dirs  ( 文字 列 の リスト ) に 設定 し ま す 。 
先 に 実行 さ れ た  add_ include_dir ( ) は 上書き さ れ ま す 。  後 で 実行 する add_ include_dir ( ) は set_include_dirs ( ) の リスト に ディレクトリ を 追加 し ま す 。 
これ は コンパイラ が デフォルト で 探索 する 標準 インク ルード ディレクトリ に は 影響 し ま せ ん 。 
libname を コンパイラ オブジェクト に よ る リンク 時 に 使 わ れ る ライブラリ の リスト に 追加 し ま す 。 
libname は ライブラリ を 含 む ファイル 名 で は な く 、 ライブラリ その もの の 名前 で す :  実際 の ファイル 名 は リンカ 、 コンパイラ 、 また は コンパイラクラス ( プラットフォーム に 依存 し ま す ) から 推測 さ れ ま す 。  リンカ は add_ library ( ) と set_library ( ) で 渡 さ れ た 順 に ライブラリ を リンク し よう と し ま す 。 
ライブラリ 名 が 重な る こと は 問題 あ り ま せ ん 。  リンカ は 指定 さ れ た 回数 だけ ライブラリ と リンク し よう と し ま す 。 
コンパイラ オブジェクト に よ る リンク 時 に 使 わ れ る ライブラリ の リスト を  libnames ( 文字 列 の リスト ) に 設定 し ま す 。 
これ は リンカ が デフォルト で リンク する 標準 の システム ライブラリ に は 影響 し ま せ ん 。 
add_ library ( )  と  set_libraries ( ) で 指定 さ れ た ライブラリ を 探索 する ディレクトリ の リスト に dir を 追加 し ま す 。 
リンカ は add_ library_ dir ( ) と  set_library_ dirs ( ) で 指定 さ れ た 順 に ディレクトリ を 探索 さ れ ま す 。 
ライブラリ を 探索 する ディレクトリ を  dirs ( 文字 列 の リスト ) に 設定 し ま す 。 
これ は リンカ が デフォルト で 探索 する 標準 ライブラリ 探索 パス に は 影響 し ま せ ん 。 
実行 時 に 共有 ライブラリ を 探索 する ディレクトリ の リスト に dir を 追加 し ま す 。 
実行 時 に 共有 ライブラリ を 探索 する ディレクトリ の リスト を dir に 設定 し ま す 。 
これ は ラン タイム リンカ が デフォルト で 利用 する 標準 探索 パス に は 影響 し ま せ ん 。 
この コンパイラ オブジェクト で 実行 さ れ る 全て の コンパイル で 利用 さ れ る プリ プロセッサ の マクロ を 定義 し ま す 。 
この コンパイラ オブジェクト で 実行 さ れ る 全て の コンパイル で 利用 さ れ る プリ プロセッサ の マクロ 定義 を 消 し ま す 。 
同じ マクロ を define _macro ( ) で 定義 し 、 undefine _macro ( ) で 定義 を 削除 し た 場合 、 後 で 呼び出 さ れ た もの が 優先 さ れ る ( 複数 の 再 定義 と 削除 を 含 み ま す ) 。 
もし コンパイル ごと ( すなわち compile ( ) の 呼び出 し ごと ) に マクロ が 再 定義 \/ 削除 さ れ る 場合 も 後 で 呼び出 さ れ た もの が 優先 さ れ ま す 。 
この コンパイラ オブジェクト に よ る 全て の リンク で 利用 さ れ る オブジェクト ファイル ( また は 類似 の ライブラリ ファイル や ` ` リソース コンパイラ ' ' の 出力 ) の リスト に object を 追加 し ま す 。 
この コンパイラ オブジェクト に よ る 全て の リンク で 利用 さ れ る オブジェクト ファイル ( また は 類似 の もの ) の リスト を objects に 設定 し ま す 。 
これ は リンカ が デフォルト 利用 する 標準 オブジェクト ファイル ( システム ライブラリ など ) に は 影響 し ま せ ん 。 
以下 の メソッド は コンパイラ オプション の 自動 検出 を 実装 し て お り 、 GNU  autoconf に 似 た いく つ か の 機能 を 提供 し ま す 。 
与え られ た ファイル また は ファイル の リスト の 言語 を 検出 し ま す 。 
インスタンス 属性 language _map ( 辞書 ) と 、 language_order  ( リスト ) を 仕事 に 使 い ま す 。 
指定 さ れ た ディレクトリ の リスト から 、 スタティック また は 共有 ライブラリ ファイル lib を 探 し 、 その ファイル の フル パス を 返 し ま す 。 
もし debug が 真 なら 、 ( 現在 の プラットフォーム で 意味 が あ れ ば ) デバッグ 版 を 探 し ま す 。 
指定 さ れ た どの ディレクトリ で も  lib  が 見つか ら な けれ ば  None を 返 し ま す 。 
funcname が 現在 の プラットフォーム で サポート さ れ て い る か どう か を ブール 値 で 返 し ま す 。 
省略 可能 引数 は 追加 の インク ルード ファイル や パス 、 ライブラリ や パス を 与え る こと で コンパイル 環境 を 指定 し ま す 。 
dir を ライブラリ 探索 ディレクトリ に 追加 する コンパイラ オプション を 返 し ま す 。 
共有 ライブラリ また は 実行 ファイル に リンク さ れ る ライブラリ 一覧 に lib を 追加 する コンパイラ オプション を 返 し ま す 。 
ラン タイム ライブラリ を 検索 する ディレクトリ の リスト に  dir を 追加 する コンパイラ オプション を 返 し ま す 。 
コンパイル の いろいろ な ステージ で 実行 さ れ る 実行 ファイル ( と その 引数 ) を 定義 し ま す 。 
コンパイラクラス ( の ' executables ' 属性 ) に よ っ て 実行 ファイル の セット は 変わ る 可能 性 が あ り ま す が 、 ほとんど は 以下 の もの を 持 っ て い ま す : 
C \/ C + +  コンパイラ 
シェアード オブジェクト 、 ライブラリ を 作 る ため に 使 う リンカ 
バイナリ 実行 可能 ファイル を 作 る ため に 使 う リンカ 
静的 ライブラリ を 作 る アーカイバ 
コマンドライン を も つ プラットフォーム ( Unix ,  DOS\/ Windows ) で は 、 それぞれ の 文字 列 は 実行 ファイル 名 と ( 省略 可能 な ) 引数 リスト に 分割 さ れ ま す 。 
( 文字 列 の 分割 は Unix  の シェル が 行 う もの に 似 て い ま す :  単語 は スペース で 区切 ら れ ま す が 、 クォート と バックス ラッシュ で オーバーライド でき ま す 。 
distutils .util . split_quoted ( ) を ごらん くださ い 。  ) 
以下 の メソッド は ビルド プロセス の ステージ を 呼び出 し ま す 。 
1 つ 以上 の ソース ファイル を コンパイル し ま す 。 
オブジェクト ファイル を 生成 ( たとえば  . c  ファイル を  . o ファイル に 変換 ) し ま す 。 
sources  は ファイル 名 の リスト で あ る 必要 が あ り ま す 。 
おそらく  C \/ C + + ファイル で す が 、 実際 に は コンパイラ と コンパイラクラス で 扱え る もの ( 例 : MSVC Compiler は リソース ファイル を  sources に と る こと が でき ま す ) なら 何 で も 指定 でき ま す 。 
sources の ソース ファイル ひと つ ずつ に 対応 する オブジェクト ファイル 名 の リスト を 返 し ま す 。 
前者 は マクロ を 定義 し ま す 。 
もし value が None で あ れ ば 、 マクロ は 特定 の 値 を も た な い で 定義 さ れ ま す 。 
1 要素 の タプル は マクロ 定義 を 削除 し ま す 。 
後 で 実行 さ れ た 定義 \/ 再 定義 \/ 削除 が 優先 さ れ ま す 。 
もし 真 なら 、 コンパイラ は デバッグ シンボル を オブジェクト ファイル に ( また は 別 ファイル に ) 出力 し ま す 。 
extra_postargs と extra_postargs は 実装 依存 で す 。 
コマンドライン を も っ て い る プラットフォーム ( 例  Unix ,  DOS\/ Windows ) で は 、 おそらく 文字 列 の リスト :  コンパイラ の コマンドライン 引数 の 前 \/ 後 に 追加 する コマンドライン 引数 で す 。 
他 の プラットフォーム で は 、 実装 クラス の ドキュメント を 参照 し て くださ い 。 
どの 場合 で も 、 これ ら の 引数 は 抽象 コンパイラフレームワーク が 期待 に 沿 わ な い 時 の 脱出口 と し て 意図 さ れ て い ま す 。 
depends は ( もし 指定 さ れ て い れ ば ) ターゲット が 依存 し て い る ファイル 名 の リスト で す 。 
ソース ファイル が 依存 し て い る ファイル の どれ か より 古 けれ ば 、 ソース ファイル は 再 コンパイル さ れ ま す 。 
これ は 依存 関係 の トラッキング を サポート し て い ま す が 、 荒 い 粒度 で しか 行 わ れ ま せ ん 。  失敗 する と CompileError を 起こ し ま す 。 
静的 ライブラリ ファイル を 作 る ため に 元 ファイル 群 を リンク し ま す 。 
「 元 ファイル 群 」 は objects で 指定 さ れ た オブジェクト ファイル の リスト を 基礎 に し て い ま す 。 
output_dir は ライブラリ ファイル が 起 か れ る ディレクトリ で す 。 
debug は ブール 値 で す 。 
真 なら 、 デバッグ 情報 が ライブラリ に 含 ま れ ま す ( ほとんど の プラットフォーム で は コンパイル ステップ で 意味 を も ち ま す : debug フラグ は 一貫 性 の ため に ここ に も あ り ま す 。  ) 。 
target_lang  は オブジェクト が コンパイル さ れ る 対象 に な る 言語 で す 。 
これ は その 言語 特有 の リンク 時 の 処理 を 可能 に し ま す 。  失敗 する と  LibError  を 起こ し ま す 。 
もし output_dir が 指定 さ れ て い れ ば 、 それ に 対 する 相対 パス と し て output_filename は 扱 わ れ ま す ( 必要 なら ば output_filename  は ディレクトリ 名 を 含 む こと が でき ま す 。  ) 。 
libraries は リンク する ライブラリ の リスト で す 。 
ただし これ ら は ディレクトリ 名 を 含 む こと が でき 、 その 場合 は リンカ は 通常 の 場所 全体 を 探 す の で は な く 特定 の ディレクトリ を 参照 し ま す 。 
library_ dirs は もし 指定 さ れ る なら ば 、 修飾 さ れ て い な い ( ディレクトリ 名 を 含 ん で い な い ) ライブラリ 名 で 指定 さ れ た ライブラリ を 探索 する ディレクトリ の リスト で す 。 
) 。  export_symbols は 共有 ライブラリ が エクスポート する シンボル の リスト で す 。 
( これ は Windows だけ で 意味 が あ る よう で す 。 
)  debug は  compile ( )  や  create_static_ lib ( ) と 同じ で す が 、  少し だけ 違い が あ り 、 ( create_static_ lib ( ) で は debug フラグ は 形式 を あわせ る ため に 存在 し て い た の に 対 し て ) ほとんど の プラットフォーム で 意識 さ れ ま す 。 
extra_preargs と  extra_postargs は  compile ( )  と 同じ で す が 、 コンパイラ で は な く リンカ へ の 引数 と し て 扱 わ れ ま す 。 
target_lang は 指定 さ れ た オブジェクト が コンパイル さ れ た 対象 言語 で す 。 
リンク 時 に 言語 特有 の 処理 を 行え る よう に し ま す 。  失敗 する と  LinkError  が 起き ま す 。 
実行 ファイル を リンク し ま す 。 
output_progname は 実行 ファイル の 名前 で す 。 
objects は リンク さ れ る オブジェクト の ファイル 名 の リスト で す 。 
他 の 引数 は link メソッド と 同じ で す 。 
共有 ライブラリ を リンク し ま す 。 
output_ libname は 出力 先 の ライブラリ 名 で す 。 objects は リンク さ れ る オブジェクト の ファイル 名 の リスト で す 。 
共有 オブジェクト を リンク し ま す 。 
objects は リンク さ れ る オブジェクト の ファイル 名 の リスト で す 。 
source で 指定 さ れ た ひと つ の  C \/ C + + ソース ファイル を プリ プロセス し ま す 。 
以下 の ユーティリティ メソッド は 具体 的 な サブ クラス で 使 う ため に 、 CCompiler クラス で 定義 さ れ て い ま す 。 
basename で 指定 さ れ た 実行 ファイル の ファイル 名 を 返 し ま す 。 
Windows 以外 の 典型 的 な プラットフォーム で は basename その まま が 、 Windows で は  . exe が 追加 さ れ た もの が 返 り ま す 。 
現在 の プラットフォーム で の ライブラリ ファイル 名 を 返 し ま す 。 Unix で lib_type が 'static ' の 場合 、 liblibname . a の 形式 を 返 し 、 lib_type  が 'dynamic ' の 場合 は liblibname . so の 形式 を 返 し ま す 。 
指定 さ れ た ソース ファイル に 対応 する オブジェクト ファイル 名 を 返 し ま す 。 
source_filenames  は ファイル 名 の リスト で す 。  shared _object_filename 
basename に 対応 する 共有 オブジェクト ファイル の ファイル 名 を 返 し ま す 。 
distutils .util . execute ( ) を 呼びだ し ま す 。 
この メソッド は ログ を 取 り 、 dry _ run フラグ を 考慮 に いれ て 、 Python 関数 func に 引数 args を 与え て 呼びだ し ま す 。 
distutils .util . spawn ( ) を 呼び出 し ま す 。 
これ は 指定 し た コマンド を 実行 する 外部 プロセス を 呼び出 し ま す 。 
distutils . dir_util . mkpath ( ) を 呼び出 し ま す 。 
これ は 親 ディレクトリ 込み で ディレクトリ を 作成 し ま す 。 
distutils . file_util . move_file ( ) を 呼び出 し ま す 。 
src を dst に リネーム し ま す 。 
distutils . log . debug ( ) 関数 を 使 っ て メッセージ を 書き出 し ま す 。 
警告 メッセージ msg を 標準 エラー 出力 に 書き出 し ま す 。 
もし この  CCompiler インスタンス で  debug フラグ が 指定 さ れ て い れ ば msg を 標準 出力 に 出力 し 、 そう で な けれ ば 何 も 出力 し ま せ ん 。 
この モジュール は 抽象 ベース クラス  Command  を 提供 し ま す 。 
クラス Command 
コマンド クラス を 定義 する ため の 抽象 ベース クラス --distutils の 「 働きバチ 」 - - で す 。 
コマンド クラス は  options  と よ ば れ る ローカル 変数 を 持 っ た サブルーチン と 考え る こと が でき ま す 。 
オプション は initialize_options ( ) で 宣言 さ れ 、 finalize_options ( )  で 定義 さ ( 最終 的 な 値 を 与えら ) れ ま す 。  どちら も 全て の コマンド クラス で 実装 する 必要 が あ り ま す 。 
サブルーチン の 本体 は 全て の 処理 を オプション の 値 に もとづ い て 行 う run ( ) メソッド で 、 これ も 全て の コマンド クラス で 実装 さ れ る 必要 が あ り ま す 。  クラス の コンストラクタ は Distribution の インスタンス で あ る 単一 の 引数 dist を と り ま す 。 
29  distutils . command . bdist_dumb --`` ダム ' ' インストー ラ を 構築 
30  distutils . command . bdist _rpm --  Redhat  RPM と SRPM 形式  の バイナリ ディストリビューション を 構築 
31  distutils . command . bdist_wininst -- Windows インストー ラ の 構築 
33  distutils . command . build--  パッケージ 中 の 全 ファイル を  構築 
40  distutils . command . install--  パッケージ の インストー  ル
41  distutils . command . install_ data--  パッケージ 中 の データ ファイル を インストール 
42  distutils . command . install_headers--  パッケージ から  C \/ C + +  ヘッダ ファイル を インストール 
43  distutils . command . install_ lib --  パッケージ から  ライブラリ ファイル を インストール 
44  distutils . command . install_scripts--  パッケージ から  スクリプト ファイル を インストール 
45  distutils . command . register -- モジュール を Python  Package In dex に 登録 する 
register コマンド は パッケージ を Python  Package In dex に 登録 し ま す 。 
この 詳細 は  PEP  30 1  に 記述 さ れ て い ま す 。 
Distutils を 使 う ため に インストール する 必要 が あ る 唯一 の モジュール が distutils . core モジュール で す 。 
setup ( ) 関数 ( セットアップ スクリプト から 呼び出 さ れ ま す ) を 提供 し ま す 。 
間接 的 に distutils . dist . Distribution クラス と  distutils . cmd . Command クラス を 提供 し ま す 。 
全て を 実行 する 基本 的 な 関数 で 、 Distutils で でき る ほとんど の こと を 実行 し ま す 。 
XXX X を 参照 し て くださ い 。  setup 関数 は たくさん の 引数 を と り ま す 。 
以下 の テーブル に まとめ ま す 。 
パッケージ の 名前 
文字 列 
パッケージ の バージョン 番号 
1 行 で 書 い た パッケージ 解説 
パッケージ の 長 い 解説 
パッケージ 作者 の 名前 
パッケージ 作者 の email アドレス 
現在 の メンテナ の 名前 ( パッケージ 作者 と 異な る 場合 ) 
文字 列 
maintainer_email  現在 の メンテナ の email アドレス ( パッケージ 作者 と 異な る 場合 ) 
パッケージ の URL ( ホーム ページ ) 
パッケージ ダウンロード 用 URL 
distutils が 操作 する Python パッケージ の リスト 
文字 列 の リスト 
distutils が 操作 する Python モジュール の リスト 
ビルド および インストール する 単体 スクリプト ファイル の リスト 
ビルド する 拡張 モジュール 
distutils . core . Extension インスタンス の リスト 
パッケージ の Trove  カテゴリ の リスト 
XX X  もっと 良 い 定義 へ の リンク 
使用 する  Distribution クラス 
distutils . core . Distribution の サブ クラス 
setup . py スクリプト の 名前  -  デフォルト で は sys . argv [ 0 ] 
セットアップ スクリプト の 引数 
セットアップ スクリプト の デフォルト 引数 
パッケージ の ライセンス 
説明 用 メタデータ 。 
PEP  314 を 参照 し て くださ い 
コマンド 名 から  Command  サブ クラス へ の マッピング 
辞書 
制御 さ れ た 環境 で セットアップ スクリプト を 実行 し 、 いろいろ な もの を 操作 する distutils . dist . Distribution クラス の インスタンス を 返 し ま す 。 
これ は ディストリビューション の メタデータ ( キー ワード 引数 script と し て  関数 setup ( ) に 渡 さ れ る ) を 参照 し たり 、 設定 ファイル や コマンドライン の 内容 を 調べ る 時 に 便利 で す 。 
script_name  は  execfile ( ) で 実行 さ れ る ファイル で す 。 
stop_after  は  いつ 動作 を 停止 する か 関数 setup ( )  に 伝え ま す 。  と り う る 値 は : 
値 
説明 
Distribution インスタンス を 作成 し 、 キー ワード 引数 を setup ( ) に 渡 し た あと に 停止 する 。 
設定 ファイル を パーズ し た あと 停止 する ( そして その データ は Distribution インスタンス に 保存 さ れ る ) 。 
コマンドライン  ( sys . argv [ 1 : ]  また は script_args)  が パーズ さ れ た あと に 停止 する  ( そして その データ は Distribution インスタンス に 保存 さ れ る ) 。 
全て の コマンド を 実行 し た あと に 停止 する ( 関数  setup ( ) を 通常 の 方法 で 呼び出 し た 場合 と 同じ ) 。 
デフォルト 値 。 
これ に 加え て 、 distutils . core モジュール は 他 の モジュール に あ る いく つ か の クラス を 公開 し て い ま す 。 
Extension  は 
distutils . extension  から 。 
Command  は 
distutils . cmd  から 。 
Distribution  は 
完全 な 説明 に つ い て は それぞれ の モジュール を ごらん くださ い 。 
Extension  クラス は 、 セットアップ スクリプト 中 で  C  また は  C + + 拡張 モジュール を 表 し ま す 。 
コンストラクタ で 以下 の キー ワード 引数 を と り ま す 。 
拡張 の フル ネーム ( パッケージ を 含 む ) -- ファイル 名 や パス 名 で は な く 、 Python の ピリオド 区切り の 名前 
ソース ファイル 名 の リスト 。  配布 物 ルート ディレクトリ ( setup スクリプト の あ る 場所 )  から の 相対 パス 、 プラットフォーム 独立 の ため Unix 形式 ( スラッシュ で 区切 る ) で 記述 し ま す 。 
ソース ファイル は  C ,  C + + , SWIG  (.i ) 、 特定 プラットフォーム 用 の リソース ファイル 、 その 他 build_ext コマンド が ソース ファイル だ と 認識 する どの 形式 で も あ り え ま す 。 
C \/ C + + ヘッダ ファイル を 検索 する ディレクトリ の リスト ( プラットフォーム 独立 の ため  Unix  形式 で 記述 する ) 
定義 する マクロ の リスト ;  それぞれ の マクロ は 2 要素 の タプル で 定義 さ れ ま す 。 ' 値 ' に は 定義 し よう と し て い る 文字 列 、 また は 内容 なし で 定義 する 場合 は None ( ソース コード 中 で # define  FOO と 書 く 、 また は  Unix  C コンパイラ の コマンドライン で - DFOO  を 指定 する の と 等価 で す ) を 指定 し ま す 。 
( string , string )  また は  ( name , None )  の タプル 
定義 を 消 す マクロ の リスト 
リンク 時 に C \/ C + + ライブラリ を 検索 する ディレクトリ の リスト 
リンク する ライブラリ 名 の リスト  ( ファイル 名 や パス で は な い ) 
実行 時 ( shared extension で は 、 拡張 が 読み込 ま れ る 時 ) に  C \/ C + + ライブラリ を 探索 する ディレクトリ の リスト 
追加 で リンク する ファイル ( 'sources ' に 対応 する コード が 含 ま れ て い な い ファイル 、 バイナリ 形式 の リソース ファイル など ) の リスト 
'sources ' の ソース を コンパイル する 時 に 追加 する プラットフォーム 特有 また は コンパイラ 特有 の 情報 コマンドライン を 利用 でき る プラット ホーム と コンパイラ で は 、 これ は 通常 コマンドライン 引数 の リスト で す が 、 他 の プラット ホーム で も 、 それ は 何 か に 使え ま す 。 
オブジェクト ファイル を リンク し て 拡張 ( また は 新し い Python インタプリタ ) を 作 る 時 に 追加 する プラットフォーム 特有 また は コンパイラ 特有 の 情報 ' extra_ compile_args ' に 似 た 実装 で す 。 
shared extension から エクスポート さ れ る シンボル の リスト 。 
全て の プラットフォーム で は 使 わ れ ず 、 Python 拡張 ( 典型 的 に は  init  +  extension_name  と い う 1 つ の シンボル だけ エクスポート する ) に 一般 的 に 必要 な もの で も な い 。 
拡張 が 依存 する ファイル の リスト 
拡張 の 言語  ( 例 : 'c ' , ' c + + ' , 'objc') 。 
指定 し な けれ ば ソース の 拡張 子 で 検出 さ れ る 。 
Distribution は Python ソフトウェア パッケージ を どの よう に ビルド 、 インストール 、 パッケージ する か を 定義 する 。 
Distribution の コンストラクタ が 取 り う る キー ワード 引数 の リスト に 関 し て は 、 setup ( ) 関数 を 見 て くださ い 。  setup ( ) は Distribution の インスタンス を 作 り ま す 。 
Command クラス ( その サブ クラス の インスタンス ) は distutils の あ る コマンド を 実装 し ま す 。 
この モジュール は CygwinCCompiler クラス を 提供 し ま す 。 UnixCCompiler の サブ クラス で  Cygwin に 移植 さ れ た Windows 用 の  GNUC  コンパイラ 向け で す 。 
さらに  Mingw 32 C Compiler  クラス を 含 ん で お り 、 これ は  mingw 32  向け に 移植 さ れ た GCC  ( cygwin の  no- cygwin モード と 同じ ) 向け で す 。 
この モジュール は DEBUG フラグ を 提供 し ま す 。 
この モジュール は シンプル な タイム スタンプ を 元 に し た ファイル や ファイル 群 の 依存 関係 を 処理 する 関数 を 提供 し ま す 。  さらに 、 それ ら の 依存 関係 解析 を 元 に し た 関数 を 提供 し ま す 。 
source が 存在 し て 、 target より 最近 変更 さ れ て い る 、 また は source が 存在 し て 、 target が 存在 し て い な い 場合 は 真 を 返 し ま す 。  両方 が 存在 し て い て 、 target の ほう が source より 新し い か 同じ 場合 に は 偽 を 返 し ま す 。 
source が 存在 し な い 場合 に は  DistutilsFileError を 起こ し ま す 。  newer_pairwise 
ふた つ の ファイル 名 リスト を 並列 に 探索 し て 、 それぞれ の ソース が 対応 する ターゲット より 新し い か を テスト し ま す 。 
newer ( ) の 意味 で ターゲット より ソース が 新し い ペア の リスト ( sources ,targets ) を 返 し ま す 。 
target が source に リスト アップ さ れ た どれ か の ファイル より 古 けれ ば 真 を 返 し ま す 。 
もし 'ignore ' なら 、 単に 存在 し な い ソース ファイル を 無視 し ま す 。  もし ' newer ' なら 、 存在 し な い ソース ファイル に つ い て は target が 古 い と みな し ま す ( これ は ' 'dry -tun' ' モード で 便利 で す :  入力 が な い の で コマンド は 実行 でき ま せ ん が 実際 に 実行 し よう と し て い な い の で 問題 に な り ま せ ん ) 。 
この モジュール は ディレクトリ と ディレクトリ ツリー を 操作 する 関数 を 提供 し ま す 。 
ディレクトリ と 、 必要 な 親 ディレクトリ を 作成 し ま す 。 
もし ディレクトリ が 既に 存在 し て い る ( name が 空 文字 列 の 場合 、 カレント ディレクトリ を 示 す の で もちろん 存在 し て い ま す ) 場合 、 何 も し ま せ ん 。 
ディレクトリ を 作成 でき な かっ た 場合 ( 例 :  ディレクトリ と 同じ 名前 の ファイル が 既に 存在 し て い た ) 、 DistutilsFileError を 起こ し ま す 。 
もし  verbose が 真 なら 、 それぞれ の mkdir に つ い て 1 行 、 標準 出力 に 出力 し ま す 。 
実際 に 作成 さ れ た ディレクトリ の リスト を 返 し ま す 。  create_tree 
src ディレクトリ ツリー 全体 を dst に コピー し ま す 。 
src と  dst は どちら も ディレクトリ 名 で あ る 必要 が あ り ま す 。 
もし src が ディレクトリ で な けれ ば 、 DistutilsFileError を 起こ し ま す 。 
もし dst が 存在 し な けれ ば 、 mkpath ( ) で 作成 さ れ ま す 。 
実行 結果 は 、 src 以下 の 全て の ファイル が dst に コピー さ れ 、 src 以下 の 全て の ディレクトリ が dst に 再帰 的 に コピー さ れ ま す 。 
コピー さ れ た ( また は さ れ る はず ) の ファイル の リスト を 返 し ま す 。 
返り 値 は update また は dry _ run に 影響 さ れ ま せ ん :  src 以下 の 全 ファイル を 単に dst 以下 に 改名 し た リスト が 返 さ れ ま す 。 
preserve_ mode  と  preserve_times は 
の copy _file と 同じ で す :  通常 の ファイル に は 適用 さ れ ま す が 、 ディレクトリ に は 適用 さ れ ま せ ん 。 
もし preserve_symlinks  が 真 なら 、 シンボリック リンク は ( サポート さ れ て い る システム で は ) シンボリック リンク と し て コピー さ れ ま す 。 
再帰 的 に  directory と その 下 の 全 ファイル を 削除 し ま す 。 
エラー は 無視 さ れ ま す ( verbose が 真 の 時 は st dout に 出力 さ れ ま す ) 
この モジュール は Distribution クラス を 提供 し ま す 。  これ は 構築 \/ インストール \/ 配布 さ れ る 配布 物 を あらわ し ま す 。 
この モジュール は EMXCCompiler クラス を 提供 し ま す 。 UnixCCompiler の サブ クラス で  GNU C  コンパイラ の  OS \/ 2  向け  EMX ポート を 扱 い ま す 。 
distutils の モジュール で 使用 さ れ る 例外 を 提供 し ま す 。 
16  distutils . debug  15  distutils . extension --  Extension  クラス 
この モジュール は Extension クラス を 提供 し ま す 。 
C \/ C + + 拡張 モジュール を セットアップ スクリプト で 表 す ため に 使 わ れ ま す 。 
18  distutils . fancy _ getopt --  標準  getopt  モジュール の ラッパ 
この モジュール は ファイル システム を 見 て 、 ファイル の リスト を 構築 する ため に 使 わ れ る FileList  クラス を 提供 し ま す 。 
この モジュール は それぞれ の ファイル を 操作 する ユーティリティ 関数 を 提供 し ま す 。 
ファイル src を dst に コピー し ま す 。 
もし dst が ディレクトリ なら 、 src は そこ へ 同じ 名前 で コピー さ れ ま す ;  そう で な けれ ば 、 ファイル 名 と し て 扱 わ れ ま す 。 
( もし ファイル が 存在 する なら 、 上書き さ れ ま す 。 
)  mosilpreserve_ mode が 真 ( デフォルト ) なら 、 ファイル の モード ( タイプ や パー ミッション 、 その 他 プラットフォーム が サポート する もの ) も コピー さ れ ま す 。 
もし  preserve_times が 真 ( デフォルト ) なら 、 最終 更新 、 最終 アクセス 時刻 も コピー さ れ ま す 。 
もし update が 真 なら 、 src は dst が 存在 し な い 場合 か 、 dst が src より 古 い 時 に だけ コピー し ま す 。 
link は 値 を ' hard ' また は 'sym ' に 設定 する こと で コピー の かわり に ハードリンク (os . link を 使 い ま す ) また は シンボリック リンク (os. symlink を 使 い ま す ) を 許可 し ま す 。 
None ( デフォルト ) の 時 に は 、 ファイル は コピー さ れ ま す 。 
link を サポート し て い な い システム で 有効 に し な い で くださ い 。  copy _file ( ) は ハードリンク 、 シンボリック リンク が 可能 か チェック し て い ま せ ん 。 
ファイル の 内容 を コピー する ため に _ copy _file_contents ( ) を 利用 し て い ま す 。  " ( dest _ name , copied ) " の タプル を 返 し ま す :  dest _ name は 出力 ファイル の 実際 の 名前 、 copied は ファイル が コピー さ れ た ( dry _ run が 真 の 時 に は コピー さ れ る こと に な っ た ) 場合 に は 真 で す 。 
ファイル src を dst に 移動 し ま す 。 
もし dst が ディレクトリ なら 、 ファイル は その ディレクトリ に 同じ 名前 で 移動 さ れ ま す 。  そう で な けれ ば 、 src は dst に 単に リネーム さ れ ま す 。 
新し い ファイル の 名前 を 返 し ま す 。 
警告 : Unix  で は  デバイス を またが る 移動 は copy _file ( ) を 利用 し て 扱 っ て い ま す 。 
他 の システム で は どう な っ て い る  ? ? ? 
filename  を 作成 し 、 contents ( 行末 文字 が な い 文字 列 の シーケンス ) を 書き込 み ま す 。 
18 . 10 . 1  Python バイトコード 命令 
distutils  パッケージ は 、 現在 インストール さ れ て い る  Python  に 追加 する ため の モジュール 構築 、 および 実際 の インストール を 支援 し ま す 。 
新規 の モジュール は  100 % - pure Python  で も 、 C  で 書 か れ た 拡張 モジュール で も 、 あるいは  Python  と  C  両方 の コード が 入 っ て い る モジュール から な る Python  パッケージ で も かま い ま せ ん 。  この パッケージ は 、 Python  ドキュメンテーション  パッケージ に 含 ま れ て い る これ と は 別 の  2 つ の ドキュメント で 詳し く 説明 さ れ て い ま す 。 
distutils の 機能 を 使 っ て 新し い モジュール を 配布 する 方法 は 、 
Python  モジュール を 配布 する 
に 書 か れ て い ま す 。  この ドキュメント に は  distutils  を 拡張 する 方法 も 含 ま れ て い ま す 。 
Python  モジュール を インストール する 方法 は 、 モジュール の 作者 が  distutils  パッケージ を 使 っ て い る 場合 で も い な い 場合 で も 、 
Python  モジュール を インストール する 
に 書 か れ て い ま す 。 
この マニュアル は Python  モジュール の 開発 者 および パッケージ 担当 に 向け た もの で す 。 
ここ で は 、 現在 インストール さ れ て い る  Python  に 簡単 に 追加 でき る distutils ベース の パッケージ を どう や っ て 用意 する か に つ い て 説明 し て い ま す 。 
現在 インストール さ れ て い る  Python  に モジュール を 追加 する ため の 情報 が 書 か れ た  ` ` 管理 者 ' '  向け の マニュアル で す 。  この 文書 を 読 む の に  Python  プログラマ で あ る 必要 は あ り ま せ ん 。 
20  distutils . log -- シンプル な  PEP  28 2  スタイル の ロギング 
警告 : 標準 の logging  モジュール に 置き換え られ る べ き 
この モジュール は  MSVC Compiler クラス を 提供 し ま す 。  抽象 クラス CCompiler の 具象 クラス で Microsoft  Visual  Studio 向け の もの で す 。 
. Net  SDK の 一部 と し て 無償 で 入手 でき る コンパイラ を 扱 う こと も でき ま す 。 
8  distutils . mwerkscompiler--  Metrowerks  CodeWarrior  サポート 
MWerks Compiler クラス を 提供 し ま す 。  抽象 クラス CCompiler の 具象 クラス で  Macintosh の  MetroWerks  CodeWarrior 向け で す 。 
CW  on  Windows  を サポート する に は 作業 が 必要 で す 。 
22  distutils . sysconfig-- システム 設定 情報 
distutils . sysconfig  モジュール で は 、  Python  の 低 水準 の 設定 情報 へ の アクセス 手段 を 提供 し て い ま す 。 
どの 設定 情報 変数 に アクセス でき る か は 、 プラットフォーム と 設定 自体 に 大き く 左右 さ れ ま す 。  また 、 特定 の 変数 は 、 使 っ て い る  Python  の バージョン に 対 する ビルド プロセス に 左右 さ れ ま す ;  こう し た 変数 は 、 Unix  システム で は 、 Makefile  や  Python  と 一緒 に インストール さ れ る 設定 ヘッダ から 探し出 さ れ ま す 。 
設定 ファイル の ヘッダ は 、 2 . 2  以降 の バージョン で は pyconfig . h  、 それ 以前 の バージョン で は  config . h  で す 。  他 に も 、 distutils  パッケージ の 別 の 部分 を 操作 する 上 で 便利 な 関数 が いく つ か 提供 さ れ て い ま す 。 
os . path . normpath ( sys . prefix )  の 結果 で す 。 
os . path . normpath ( sys . exec _prefix )  の 結果 で す 。 
ある 一 つ の 設定 変数 に 対 する 値 を 返 し ま す 。 
get_config_ vars ( ) . get ( name )  と 同じ で す 。 
定義 さ れ て い る 変数 の セット を 返 し ま す 。 
引数 を 指定 し な けれ ば 、 設定 変数 名 を 変数 の 値 に 対応 付け る マップ 型 を 返 し ま す 。 
引数 を 指定 する 場合 、 引数 の 各値 は 文字 列 で な けれ ば な ら ず 、 戻 り 値 は 引数 に 関連 付け られ た 各 設定 変数 の 値 から な る シーケンス に な り ま す 。 
引数 に 指定 し た 名前 の 設定 変数 に 値 が な い 場合 、 その 変数 値 に は None  が 入 り ま す 。  get_config_h_filename 
設定 ヘッダ の フル パス 名 を 返 し ま す 。 
Unix の 場合 、 この ヘッダ ファイル は configure  スクリプト に よ っ て 生成 さ れ る ヘッダ ファイル 名 で す ; 他 の プラットフォーム で は 、 ヘッダ は  Python  ソース 配布 物 中 で 直接 与え られ て い ま す 。 
ファイル は プラットフォーム 固有 の テキスト ファイル で す 。 
Python  を ビルド する 際 に 用い る  Makefile  の フル パス を 返 し ま す 。 
Unix の 場合 、 この ファイル は  configure  スクリプト に よ っ て 生成 さ れ ま す ;  他 の プラットフォーム で は 、 この 関数 の 返 す 値 の 意味 は 様々 で す 。  有意 な ファイル 名 を 返 す 場合 、 ファイル は プラットフォーム 固有 の テキスト ファイル 形式 で す 。 
この 関数 は  POSIX  プラットフォーム で のみ 有用 で す 。 
C  インク ルード ファイル ディレクトリ に つ い て 、 一般 的 な ディレクトリ 名 か 、 プラットフォーム 依存 の ディレクトリ 名の いずれ か を 返 し ま す 。 
plat_specific  が 真 で あ れ ば 、 プラットフォーム 依存 の インク ルード ディレクトリ 名 を 返 し ま す ;  plat_specific  が 偽 か 、 省略 さ れ た 場合 に は 、 プラットフォーム に 依存 し な い ディレクトリ を 返 し ま す 。 
prefix  が 指定 さ れ て い れ ば 、 PREFIX の 代わり に 用い られ ま す 。 
また 、  plat_specific  が 真 の 場合 、 EXEC _ PREFIX  の 代わり に 用い られ ま す 。  get_python_lib 
ライブラリ ディレクトリ に つ い て 、 一般 的 な ディレクトリ 名 か 、 プラットフォーム 依存 の ディレクトリ 名の いずれ か を 返 し ま す 。 
plat_specific  が 真 で あ れ ば 、 プラットフォーム 依存 の ライブラリ ディレクトリ 名 を 返 し ま す ;  plat_specific  が 偽 か 、 省略 さ れ た 場合 に は 、 プラットフォーム に 依存 し な い ディレクトリ を 返 し ま す 。  prefix  が 指定 さ れ て い れ ば 、 PREFIX の 代わり に 用い られ ま す 。 
また 、  plat_specific  が 真 の 場合 、 EXEC _ PREFIX  の 代わり に 用い られ ま す 。 
standard_ lib  が 真 で あ れ ば 、 サード パーティ 製 の 拡張 モジュール を インストール する ディレクトリ の 代わり に 、 標準 ライブラリ の ディレクトリ を 返 し ま す 。 
以下 の 関数 は 、 distutils  パッケージ 内 の 使用 だけ を 前提 に し て い ま す 。 
distutils . ccompiler . CCompiler  インスタンス に 対 し て 、 プラットフォーム 固有 の カスタマイズ を 行 い ま す 。  この 関数 は 現在 の ところ 、 Unix  だけ で 必要 で す が 、 将来 の 互換 性 を 考慮 し て 一貫 し て 常 に 呼び出 さ れ ま す 。 
この 関数 は 様々 な Unix  の 変種 ごと に 異な る 情報 や 、 Python  の Makefile  に 書 か れ た 情報 を インスタンス に 挿入 し ま す 。 
この 情報 に は 、 選択 さ れ た コンパイラ や コンパイラ \/ リンカ の オプション 、 そして 共有 オブジェクト を 扱 う ため に リンカ に 指定 する 拡張 子 が 含 ま れ ま す 。 
この 関数 は もっと 特殊 用途 向け で 、 Python  自体 の ビルド プロセス で しか 使 わ れ ま せ ん 。  set_python_build
distutils . sysconfig  モジュール に 、 モジュール が  Python  の ビルド プロセス の 一部 と し て 使 わ れ る こと を 知 ら せ ま す 。 
これ に よ っ て 、 ファイル コピー 先 を 示 す 相対 位置 が 大幅 に 変更 さ れ 、 インストール 済み の Python  で は な く 、 ビルド 作業 領域 に ファイル が 置 か れ る よう に な り ま す 。 
24  distutils . version  23  distutils . text _file -- TextFile  クラス 
この モジュール は  TextFile クラス を 提供 し ま す 。 
これ は テキスト ファイル へ の インタフェース を 提供 し 、 コメント の 削除 、 空行 の 無視 、 バックス ラッシュ で の 行 の 連結 を 任意 に 行え ま す 。  クラス TextFile 
この クラス は ファイル の よう な オブジェクト を 提供 し ま す 。  これ は 行 指向 の テキスト ファイル を 処理 する 時 に 共通 し て 必要 と な る 処理 を 行 い ま す :  ( # が コメント 文字 なら ) コメント の 削除 、 空行 の スキップ 、 ( 行末 の バックス ラッシュ で の ) 改行 の エスケープ に よ る 行 の 連結 、 先頭 \/ 末尾 の 空白 文字 の 削除 。 
また unreadline ( ) メソッド が 一行 先 読み を 実装 する ため に 提供 さ れ て い ま す 。 
TextFile の インスタンス は filename 、 file 、 また は その 両方 を と っ て 作成 さ れ ま す 。 
両方 が  None  の 場合  RuntimeError  が 起き ま す 。 filename は 文字 列 、 file は ファイル オブジェクト ( また は readline ( ) と close ( ) の メソッド を 提供 する 何 か ) で あ る 必要 が あ り ま す 。 
TextFile が 生成 する 警告 メッセージ に 含め る こと が でき る の で 、 filename を 与え る こと が 推奨 さ れ ま す 、 もし file が 提供 さ れ な けれ ば 、  TextFile  は 組み込み の  open ( ) を 利用 し て 自分 で 作成 し ま す 。 
オプション は 全て 真偽 値 で 、 readline ( ) で 返 さ れ る 値 に 影響 し ま す 。 
オプション 名 
デフォルト 値 
行 を 返 す 前 に 先頭 の 空白 文字 の 並び を 削除 し ま す 。 
行 を 返 す 前 に 行末 の 空白 文字 ( 改行 文字 を 含 み ま す ! ) の 並び を 削除 し ま す 。 
コメント と 空白 を 除 い た * あと で * 内容 が な い 行 を スキップ し ま す 。 
もし コメント と 空白 文字 を 削除 し た あと で 、 バックス ラッシュ が 最後 の 改行 文字 で な い 文字 なら 、 次 の 行 を 接続 し て 一 つ の 論理 行 と し ま す :  N 行 の 連続 し た 行 が バックス ラッシュ で 終わ る 場合 、 N + 1  行 の 物理 行 が 1 行 の 論理 行 と し て 扱 わ れ ま す 。 
前 の 行 と 接続 する とき 、 行頭 の 空白 文字 を 削除 し ま す 。  " ( join_linesand  not  lstrip_ ws) "  の 時 だけ 意味 を も ち ま す 。 
rstrip_ ws は 行末 の 改行 を 削除 する の で 、 readline ( ) の セマンティクス が 組み込 み ファイル オブジェクト の readline ( ) メソッド と は 変わ っ て しま い ま す ! 特に 、 rstrip_ ws  が 真 で  skip_blanks  が 偽 の とき 、 readline ( )  は ファイル の 終端 で None を 返 し 、 空 文字 列 を 返 し た とき は 空行 ( また は 全て 空白 文字 の 行 ) で す 。 
新し い ファイル filename を 開 き ま す 。 
これ は コンストラクタ 引数 の file と filename を 上書き し ま す 。 
現在 の ファイル を 閉じ 、 ( ファイル 名 や 現在 の 行 番号 を 含め ) 現在 の ファイル に つ い て の 情報 を 全て 消 し ま す 。 
標準 エラー 出力 に 現在 の ファイル の 論理 行 に 結びつ い た 警告 メッセージ を 出力 し ま す 。 
もし 現在 の 論理 行 が 複数 の 物理 行 に 対応 する なら 、 警告 メッセージ は 以下 の よう に 全体 を 参照 し ま す : " " lines  3 - 5 " " 。 
もし  line  が 与え られ て い れ ば 、 現在 の 行 番号 を 上書き し ま す ;  物理 行 の レンジ を あらわ す リスト また は タプル 、 もし くは あ る 物理 行 を あらわ す 整数 の どれ で も 与え られ ま す 。 
現在 の ファイル ( また は unreadline ( ) で ' 'unread ' ' を 直前 に 行 っ て い れ ば バッファ ) から 論理 行 を 1 行 読み込 ん で 返 し ま す 。 
もし join_lines オプション が 真 なら 、 この メソッド は 複数 の 物理 行 を 読み込 ん で 接続 し た 文字 列 を 返 し ま す 。 
現在 の 行 番号 を 更新 し ま す 。  その ため readline ( ) の あと に warn ( ) を 呼 ぶ と 丁度 読 ん だ 行 に つ い て の 警告 を 出 し ま す 。 
rstrip_ ws が 真 で 、 strip_blanks が 偽 の とき 空 文字 列 が 返 る の で 、 ファイル の 終端 で は None を 返 し ま す 。 
現在 の ファイル で 残 っ て い る 全て の 論理 行 の リスト を 読み込 ん で 返 し ま す 。  行 番号 を 、 ファイル の 最後 の 行 に 更新 し ま す 。 
line ( 文字 列 ) を 次 の readline ( ) 用 に 、 内部 バッファ に push し ま す 。 
行 の 先 読み を 必要 と する パーサ を 実装 する 時 に 便利 で す 。 
unreadline で ` `unread ' ' さ れ た 行 は readline で 読み込 む 際 に 再度 処理 ( 空白 の 除去 など ) さ れ ま せ ん 。 
もし unreadlinee を 、 readline を 呼 ぶ 前 に 複数 回 実行 する と 、 最後 に unread し た 行 から 返 さ れ ま す 。 
この モジュール は UnixCCompiler クラス を 提供 し ま す 。  CCompiler クラス の サブ クラス で 、 典型 的 な Unix スタイル の コマンドライン C コンパイラ を 扱 い ま す : 
マクロ は  - Dname 
で 定義 さ れ ま す 。  マクロ は  - Uname 
ライブラリ は - llib  で 指定 さ れ ま す 。 
ライブラリ の 探索 ディレクトリ は  -Ldir  で 指定 さ れ ま す 。 
コンパイル は  cc  ( また は それ に 似 た )  実行 ファイル に 、 - c  オプション を つけ て 実行 し ま す :  . c  を . o に コンパイル し ま す 。 
静的 ライブラリ は  ar コマンド で 処理 さ れ ま す ( ranlib を 使 う か も しれ ま せ ん ) 
共有 ライブラリ の リンク は  cc  - shared  で 処理 さ れ ま す 。 
この モジュール は 他 の ユーティリティ モジュール に あ わ な い もの を 提供 し て い ま す 。 
現在 の プラットフォーム を 示 す 文字 列 を 返 し ま す 。 
これ は プラットフォーム 依存 の ビルド ディレクトリ や プラットフォーム 依存 の 配布 物 を 区別 する ため に 使 わ れ ま す 。 
POSIX  で な い プラットフォーム で は 、 今 の ところ 単に sys . platform が 返 さ れ ま す 。 
' pathname ' を ファイル システム で 利用 でき る 名前 に し て 返 し ま す 。  すなわち 、 '\/' で 分割 し 、 現在 の ディレクトリセパレータ で 接続 し なお し ま す 。 
セットアップ スクリプト 中 の ファイル 名 は Unix スタイル で 提供 さ れ 、 実際 に 利用 する 前 に 変換 する 必要 が あ る ため 、 この 関数 が 必要 に な り ま す 。 
もし  pathname  の 最初 また は 最後 が  スラッシュ の 場合 、 Unix 的 で な い システム で は ValueError が 起き ま す 。 
pathname の 前 に new_ root を 追加 し た もの を 返 し ま す 。 
'os . environ' に 、 ユーザ が config ファイル 、 コマンドライン オプション など で 利用 でき る こと を 保証 し て い る 環境 変数 が あ る こと を 確認 し ま す 。 
現在 は 以下 の もの が 含 ま れ て い ま す : 
HOME  -  ユーザ の ホーム ディレクトリ  ( Unix  のみ ) 
PLAT  -  ハードウェア と OS を 含 む 現在 の プラットフォーム の 説明 。 
(  get_platform ( ) を 参照 )  subst_vars
shell \/ Perl スタイル の 変数 置換 を s に つ い て 行 い ま す 。 
全て の $ に 名前 が 続 い た もの は 変数 と みな さ れ 、 辞書 local _vars で みつか っ た 値 に 置換 さ れ ま す 。  local _vars で 見つか ら な かっ た 場合 に は os . environ で 置換 さ れ ま す 。 
os . environ は 最初 に あ る 値 を 含 ん で い る こと を チェック さ れ ま す : check _environ ( ) を 参照 。 
local _varsor os . environ の どちら に も 値 が 見つか ら な かっ た 場合 、 ValueError を 起こ し ま す 。 
これ は 完全 な 文字 列 挿入 関数 で は な い こと に 注意 し て くださ い 。 
$ variable の 名前 に は 大小 英字 、 数字 、 アンダー バー だけ を 含 む こと が でき ま す 。 
{} や 
を 使 っ た 引用 形式 は 利用 でき ま せ ん 。 
例外 オブジェクト  EnvironmentError  ( IOError  また は  OSError )  から 、 エラー メッセージ を 生成 し ま す 。 
Python  1 . 5 . 1  また は それ 以降 の 形式 を 扱 い 、 ファイル 名 を 含 ん で い な い 例外 オブジェクト も 扱 い ま す 。  この よう な 状況 は エラー が 2 つ の ファイル に 関係 する 操作 、 たとえば rename ( ) や link ( ) で 発生 し ま す 。 
prefix を プレフィクス に 持 つ エラー メッセージ を 返 し ま す 。 
文字 列 を Unix の シェル の よう な ルール ( 引用 符 や バックス ラッシュ の 扱い ) で 分割 し ま す 。 
2 文字 で の エスケープ シーケンス に 使 わ れ て い る バックス ラッシュ は 削除 さ れ 、 エスケープ さ れ て い た 文字 だけ が 残 り ま す 。 
引用 符 は 文字 列 から 削除 さ れ ま す 。 
語 の リスト が 返 り ま す 。 
外部 に 影響 する いく つ か の アクション ( たとえば 、 ファイル システム へ の 書き込み ) を 実行 し ま す 。 
その よう な アクション は dry _ run フラグ で 無効 に する 必要 が あ る の で 特別 で す 。 
この 関数 は その 繁雑 な 処理 を 行 い ま す 。  関数 と 引数 の タプル 、 ( 実行 する 「 アクション 」 を はっきり さ せ る ため の ) 表示 に 使 わ れ る 任意 の メッセージ を 渡 し て くださ い 。 
val が 上 の どれ で も な い 時 は  ValueError を 起こ し ま す 。 
0  -  最適 化 し な い  (.pyc ファイル を 作成 し ま す ) 
1  -  通常 の 最適 化  ( " python - O " の よう に ) 
2  -  さらに 最適 化  ( " python - OO " の よう に ) 
通常 は byte_ compile ( ) に 直接 か そう で な い か を まかせ ま す ( 詳細 に つ い て は ソース を ごらん くださ い ) 。 
direct フラグ は 関節 モード で 作成 さ れ た スクリプト で 使用 さ れ ま す 。  何 を や っ て い る か 理解 し て い な い 時 は None の まま に し て お い て くださ い 。 
dl モジュール は dlopen ( ) 関数 へ の インターフェース を 定義 し ま す 。  これ は ダイナミックライブラリ に ハンドル する ため の Unix プラットフォーム 上 の 最も 一般 的 な インターフェース で す 。 
その ライブラリ の 任意 の 関数 を 呼 ぶ プログラム を 与え ま す 。 
注意 : この モジュール は sizeof ( int ) = = sizeof ( long ) = = sizeof ( char*) で な けれ ば 働 き ま せ ん 。 
そう で な けれ ば import する とき に SystemError が 送出 さ れ る で しょ う 。 
dl モジュール は 次 の 関数 を 定義 し ま す : 
共有 オブジェクト ファイル を 開 い て 、 ハンドル を 返 し ま す 。 
モード は 遅延 結合 ( RTLD _ LAZY ) また は 即時 結合 ( RTLD _ NOW ) を 表 し ま す 。 
デフォルト は RTLD _ LAZY で す 。 
いく つ か の システム は RTLD _ NOW を サポート し て い な い こと に 注意 し て くださ い 。  返り 値 は dlobject で す 。 
dl モジュール は 次 の 定数 を 定義 し ま す : 
open ( ) の 引数 と し て 使 い ま す 。 
即時 結合 を サポート し な い システム で は 、 この 定数 が モジュール に 現われ な い こと に 注意 し て くださ い 。 
最大 の ポータビリティ を 求め る なら ば 、 システム が 即時 結合 を サポート する か どう か を 決定 する ため に hasattr ( ) を 使用 し て くださ い 。 
dl モジュール は 次 の 例外 を 定義 し ま す : 
動的 な ロード や リンクルーチン の 内部 で エラー が 生 じ た とき に 送出 さ れ る 例外 で す 。 
例 : 
この 例 は Debian  GNU \/ Linux システム 上 で 行な っ た もの で 、 この モジュール の 使用 は たいてい 悪 い 選択 肢 で あ る と い う 事実 の よ い 例 で す 。 
5 . 2  doctest  - - 対話 モード を 使 っ た 使用 例 の 内容 を テスト する 
モジュール は 、 対話 的  Python  セッション の よう に 見え る テキスト を 探し出 し 、 セッション の 内容 を 実行 し て 、 そこ に 書 か れ て い る 通り に 振舞 う か を 調べ ま す 。 
doctest  は 以下 の よう な 用途 に よく 使 わ れ て い ま す : 
モジュール の  docstring  ( ドキュメンテーション 文字 列 )  中 に あ る 対話 モード で の 使用 例 全て が 書 か れ て い る 通り に 動作 する か を 検証 する こと で 、 docstring  の 内容 が 最新 の もの に な る よう 保 ち ま す 。 
テスト ファイル や テスト オブジェクト 中 の 対話 モード に おけ る 使用 例 が 期待 通り に 動作 する か を 検証 する こと で 、 回帰 テスト を 実現 し ま す 。 
入出力 例 を ふんだん に 使 っ た パッケージ の チュートリアル ドキュメント を 書け ま す 。 
入出力 例 と 解説 文 の どちら に 注目 する か に よ っ て 、 ドキュメント は 「 読め る テスト 」 に も 「 実行 でき る ドキュメント 」 に も な り ま す 。 
以下 に ちょっと し た 、 それ で い て 完全 な 例 を 示 し ま す : 
doctest  モジュール は 、 モジュール の  docstring  から 、 これ ら の セッション を 実際 に 実行 し て 、 そこ に 書 か れ て い る 通り に 動作 する か 検証 し ま す 。 
example . py  を コマンドライン から 直接 実行 する と 、 
は その 魔法 を 働 か せ ま す : 
出力 は 何 も あ り ま せ ん !  しかし これ が 正常 で 、 全て の 例 が 正し く 動作 する こと を 意味 し て い ま す 。 
スクリプト に  - v  を 与え る と 、 
は 何 を 行 お う と し て い る の か を 記録 し た 詳細 な ログ を 出力 し 、 最後 に まとめ を 出力 し ま す : 
と い っ た 具合 で 、 最後 に は : 
詳細 な 事柄 は 後続 の 各節 で 全て 説明 し て い ま す 。 
doctest  の 例 は 、 標準 の  Python  テスト スイート や ライブラリ 中 に 沢山 あ り ま す 。 
標準 の テスト ファイル  Lib \/test\/test _ doctest . py  に は 、 特に 便利 な 例題 が あ り ま す 。 
doctest . py  内 の  docstring  に は  doctest  の 全て の 側面 に つ い て の 詳細 な 情報 が 入 っ て お り 、 ここ で は より 重要 な 点 を カバー する だけ に し ま す 。 
5 . 2 . 5  実行 コンテキスト と は 何 か ? 
注意 :  dumbdbm  モジュール は 、 
が 安定 な モジュール を 他 に 見つけ る こと が でき な かっ た 際 の 最後 の 手段 と さ れ て い ま す 。 dumbdbm  モジュール は 速度 を 重視 し て 書 か れ て い る わけ で は な く 、 他 の データベース モジュール の よう に 重 い 使 い 方 を する ため の もの で は あ り ま せ ん 。 
dumbdbm  モジュール は 永続 性 辞書 に 類似 し た インタフェース を 提供 し 、 全て  Python  で 書 か れ て い ま す 。 
や 
と い っ た モジュール と 異な り 、 外部 ライブラリ は 必要 あ り ま せ ん 。 
他 の 永続 性 マップ 型 の よう に 、 キー および 値 は 常 に 文字 列 で な けれ ば な り ま せ ん 。  この モジュール で は 以下 の 内容 を 定義 し て し ま す : 
I\/ O  エラー の よう な  dumbdbm  特有 の エラー の 際 に 送出 さ れ ま す 。 
不正 な キー を 指定 し た とき の よう な 、 一般 的 な 対応 付け エラー の 際 に は KeyError  が 送出 さ れ ま す 。 
dumbdbm  データベース を 開 き 、  dubmdbm  オブジェクト を 返 し ま す 。 
filename  引数 は データベース ファイル 名 の 雛型  ( 特定 の 拡張 子 を も た な い もの )  で す 。 
デフォルト で は  8  進 コード の  0666  に な っ て い ま す  ( umask  に よ っ て 修正 を 受け ま す ) 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : mode  引数 は 以前 の バージョン で は 無視 さ れ ま す 
dbm  形式 の データベース に 対 する 汎用 インタフェース 。 
DBM \/ NDBM  ライブラリ に 対 する 同様 の インタフェース 。 
GNU  GDBM  ライブラリ に 対 する 同様 の インタフェース 。 
非 文字 列 データ を 記録 する 永続 化 モジュール 。 
既存 の データベース の 形式 を 判定 する ため に 使 わ れ る ユーティリティ モジュール 。 
この モジュール は 
モジュール の インターフェース を そっくり まね る もの で す 。 
モジュール が サポート さ れ て い な い プラットフォーム で import  する こと を 意図 し て 作 ら れ た もの で す 。  使用 例 : 
生成 する スレッド が 、 他 の ブロック し た スレッド を 待 ち 、 デッド ロック 発生 の 可能 性 が あ る 場合 に は 、 この モジュール を 使 わ な い よう に し て くださ い 。 
ブロッキング  I \/ O  を 使 っ て い る 場合 に よく 起き ま す 。 
モジュール の インターフェース を そっくり まね る もの で す 。 
使用 例 : 
この モジュール は 文字 セット を 表現 する  Charset  クラス と 電子 メール メッセージ に ふく ま れ る 文字 セット 間 の 変換 、 および 文字 セット の レジストリ と この レジストリ を 操作 する ため の いく つ か の 便宜 的 な メソッド を 提供 し ま す 。 
Charset  インスタンス は email  パッケージ 中 に あ る ほか の いく つ か の モジュール で 使用 さ れ ま す 。 
バージョン  2 . 2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
クラス Charset ( 
文字 セット を email  の プロパティ に 写像 する 。 
Map character sets to theiremail  properties . この クラス は あ る 特定 の 文字 セット に 対 し 、 電子 メール に 課 さ れ る 制約 の 情報 を 提供 し ま す 。 
また 、 与え られ た 適用 可能 な  codec  を つか っ て 、 文字 セット 間 の 変換 を おこな う 便宜 的 な ルーチン も 提供 し ま す 。 
この 値 は つね に 小 文字 に 強制 的 に 変換 さ れ ま す 。 
そして 文字 セット の 別名 が 正規 化 さ れ た あと 、 この 値 は 文字 セット の レジストリ 内 を 検索 し 、 ヘッダ の エンコーディング と メッセージ 本体 の エンコーディング 、 および 出力 時 の 変換 に 使 わ れ る  codec  を みつけ る の に 使 わ れ ま す 。 
たとえば  input _ charset  が  iso - 885 9 - 1  の 場合 、 ヘッダ および メッセージ 本体 は quoted - printable  で エンコード さ れ 、 出力 時 の 変換 用  codec  は 必要 あ り ま せ ん 。 
もし  input _ charset  が euc- jp なら ば 、 ヘッダ は  base 64  で エンコード さ れ 、 メッセージ 本体 は エンコード さ れ ま せ ん が 、 出力 さ れ る テキスト は  euc- jp 文字 セット から iso - 2022 - jp 文字 セット に 変換 さ れ ま す 。 
Charset  インスタンス は 以下 の よう な データ 属性 を も っ て い ま す : 
最初 に 指定 さ れ る 文字 セット で す 。 
一般 に 通用 し て い る 別名 は 、 正式 な  電子 メール 用 の 名前 に 変換 さ れ ま す ( たとえば 、 latin _1  は  iso - 885 9 - 1  に 変換 さ れ ま す ) 。 
デフォルト は  7 - bit  の  us - ascii で す 。 
この 文字 セット が 電子 メール ヘッダ に 使 わ れ る 前 に エンコード さ れ る 必要 が あ る 場合 、 この 属性 は  Charset . QP  ( quoted - printable  エンコーディング ) 、 Charset . BASE 64  ( base 64  エンコーディング ) 、 あるいは 最短 の  QP  また は  BASE 64  エンコーディング で あ る  Charset . SHORTEST  に 設定 さ れ ま す 。  そう で な い 場合 、 この 値 は  None  に な り ま す 。 
header_encoding  と 同じ で す が 、 この 値 は メッセージ 本体 の ため の エンコーディング を 記述 し ま す 。  これ は ヘッダ 用 の エンコーディング と は 違 う か も しれ ま せ ん 。 
body _encoding  で は 、 Charset . SHORTEST  を 使 う こと は でき ま せ ん 。 
文字 セット に よ っ て は 、 電子 メール の ヘッダ あるいは メッセージ 本体 に 使 う 前 に それ を 変換 する 必要 が あ り ま す 。 
もし  input _ charset  が それ ら の 文字 セット の どれ か を さ し て い た ら 、 この  output_ charset  属性 は それ が 出力 時 に 変換 さ れ る 文字 セット の 名前 を あらわ し て い ま す 。 
それ 以外 の 場合 、 この 値 は  None  に な り ま す 。 
input _ charset  を  Unicode  に 変換 する ため の  Python  用  codec  名 で す 。 
変換 用 の  codec  が 必要 な い とき は 、 この 値 は  None  に な り ま す 。 
Unicode  を  output_ charset  に 変換 する ため の  Python  用  codec  名 で す 。 
変換 用 の  codec  が 必要 な い とき は 、 この 値 は  None  に な り ま す 。  この 属性 は  input_codec  と 同じ 値 を も つ こと に な る で しょ う 。 
Charset  インスタンス は 、 以下 の メソッド も 持 っ て い ま す : 
文字 列  s  を  input_codec  から  output_codec  に 変換 し ま す 。 
おそらく マルチ バイト の 文字 列 を 、 安全 に  split  でき る 形式 に 変換 し ま す 。 
split  でき る 文字 列 を エンコード さ れ た 文字 列 に 変換 し なお し ま す 。 
ustr  は ` ` 逆 split' ' する ため の  Unicode  文字 列 で す 。 
この メソッド で は 、 文字 列 を  Unicode  から べつ の エンコード 形式 に 変換 する ため に 適切 な  codec  を 使用 し ま す 。 
to _output が  False  の 場合 、 これ は input_codec  を 使用 し ま す 。 
出力 用 の 文字 セット を 返 し ま す 。  これ は  output_ charset  属性 が  None  で な けれ ば その 値 に な り ま す 。 
それ 以外 の 場合 、 この 値 は  input _ charset  と 同じ で す 。 encoded_header_len 
エンコード さ れ た ヘッダ 文字 列 の 長 さ を 返 し ま す 。 
これ は  quoted - printable  エンコーディング あるいは  base 64  エンコーディング に 対 し て も 正し く 計算 さ れ ま す 。  header_encode 
文字 列  s  を ヘッダ 用 に エンコード し ま す 。 
convert が  True  の 場合 、 文字 列 は 入力 用 文字 セット から 出力 用 文字 セット に 自動 的 に 変換 さ れ ま す 。 
これ は 行 の 長 さ 問題 の あ る マルチ バイト の 文字 セット に 対 し て は 役 に 立 ち ま せ ん ( マルチ バイト 文字 は バイト 境界 で は な く 、 文字 ごと の 境界 で  split  する 必要 が あ り ま す ) 。  これ ら の 問題 を 扱 う に は 、 高 水準 の クラス で あ る  Header  クラス を 使 っ て くださ い  ( 
email. Header  を 参照 ) 。 
convert  の 値 は デフォルト で は  False  で す 。  エンコーディング の 形式  ( base 64  また は  quoted - printable )  は 、 header_encoding  属性 に 基づ き ま す 。 
文字 列  s  を メッセージ 本体 用 に エンコード し ま す 。 
Charset  クラス に は 、 標準 的 な 演算 と 組み込 み 関数 を サポート する いく つ か の メソッド が あ り ま す 。 
input _ charset  を 小 文字 に 変換 さ れ た 文字 列 型 と し て 返 し ま す 。 __repr_ _( )  は 、__str_ _( )  の 別名 と な っ て い ま す 。 
この メソッド は 、 2 つ の  Charset  インスタンス が 同じ か どう か を チェック する の に 使 い ま す 。 
この メソッド は 、 2 つ の  Charset  インスタンス が 異な る か どう か を チェック する の に 使 い ま す 。 
また 、 email . Charset  モジュール に は 、 グローバル な 文字 セット 、 文字 セット の 別名 ( エイリアス )  および  codec  用 の レジストリ に 新し い エントリ を 追加 する 以下 の 関数 も ふく ま れ て い ま す :  add_ charset 
文字 の 属性 を グローバル な レジストリ に 追加 し ま す 。 
デフォルト の 値 は エンコーディング なし の  None  に な っ て い ま す 。  オプション 引数  output_ charset  に は 出力 用 の 文字 セット が 入 り ま す 。 
Charset . convert ( )  が 呼 ば れ た とき の 変換 は まず 入力 用 の 文字 セット を  Unicode  に 変換 し 、 それ から 出力 用 の 文字 セット に 変換 さ れ ま す 。 
デフォルト で は 、 出力 は 入力 と 同じ 文字 セット に な っ て い ま す 。 
モジュール の 文書 を 参照 し て くださ い 。  グローバル な 文字 セット 用 の レジストリ は 、 モジュール の  global  辞書 CHAR SETS  内 に 保持 さ れ て い ま す 。 
与え られ た 文字 セット の 文字 と  Unicode  と の 変換 を おこな う  codec  を 追加 し ま す 。 
charset  は ある 文字 セット の 正式 名称 で 、 codecname  は  Python  用  codec  の 名前 で す 。  これ は 組み込 み 関数  unicode ( )  の 第 2 引数 か 、 あるいは  Unicode  文字 列 型 の  encode ( )  メソッド に 適 し た 形式 に な っ て い な けれ ば な り ま せ ん 。 
12 . 2 . 8  例外 および 障害 クラス 
実際 に は これ ら の エンコーダ は  MIMEAudio  および  MIMEImage  クラス の コンストラクタ で デフォルト エンコーダ と し て 使 わ れ て い ま す 。 
すべて の エンコーディング 関数 は 、 エンコード する メッセージ オブジェクト ひと つ だけ を 引数 に と り ま す 。 
これ ら は ふつう ペイロード を 取りだ し 、 それ を エンコード し て 、 ペイロード を エンコード さ れ た もの に セット し なお し ま す 。 
これ ら は また  Content - Transfer - Encoding :  ヘッダ を 適切 な 値 に 設定 し ま す 。 
提供 さ れ て い る エンコーディング 関数 は 以下 の とおり で す : encode _quopri
これ は その ペイロード の ほとんど が 通常 の 印刷 可能 な 文字 から な っ て い る が 、 印刷 不 可能 な 文字 が すこし だけ あ る とき の エンコード 方法 と し て 適 し て い ま す 。 
ペイロード を  base 64  形式 で エンコード し 、 Content - Transfer - Encoding :  ヘッダ を base 64  に 変更 し ま す 。 
これ は ペイロード 中 の データ の ほとんど が 印刷 不 可能 な 文字 で あ る 場合 に 適 し て い ま す 。  quoted - printable  形式 より も 結果 と し て は コンパクト な サイズ に な る から で す 。 
base 64  形式 の 欠点 は 、 これ が 人間 に は まったく 読め な い テキスト に な っ て しま う こと で す 。 
これ は 実際 に は ペイロード を 変更 は し ま せ ん が 、 ペイロード の 形式 に 応 じ て Content - Transfer - Encoding :  ヘッダ を  7 bit  あるいは 8 bit  に 適 し た 形 に 設定 し ま す 。 
これ は 何 も し な い エンコーダ で す 。  Content - Transfer - Encoding :  ヘッダ を 設定 さえ し ま せ ん 。 
注意 : encode _quopri( )  を 使 っ て エンコード する と 、 データ 中 の タブ 文字 や 空白 文字 も エンコード さ れ ま す 。 
email . Errors  モジュール で は 、 以下 の 例外 クラス が 定義 さ れ て い ま す : 
例外 MessageError 
これ は email  パッケージ が 発生 し う る すべて の 例外 の 基底 クラス で す 。 
これ は 標準 の  Exception  クラス から 派生 し て お り 、 追加 の メソッド は まったく 定義 さ れ て い ま せ ん 。 
例外 MessageParseError 
これ は  Parser  クラス が 発生 し う る 例外 の 基底 クラス で す 。 
MessageError  から 派生 し て い ま す 。 
例外 HeaderParseError 
メッセージ の  RFC  28 2 2  ヘッダ を 解析 し て い る 途中 に あ る 条件 で エラー が おこ る と 発生 し ま す 。  これ は  MessageParseError  から 派生 し て い ま す 。 
メッセージ の  RFC  28 2 2  ヘッダ を 解析 し て い る 途中 に あ る 条件 で エラー が おこ る と 発生 し ま す 。  これ は  MessageParseError  から 派生 し て い ま す 。 
この 例外 は 、 Message  オブジェクト に  add_ payload ( )  メソッド を 使 っ て ペイロード を 追加 する とき 、 その ペイロード が すでに 単一 の 値 で あ る ( 訳注 :  リスト で な い )  に も かかわ ら ず 、 その メッセージ の  Content- Type :  ヘッダ の メイン タイプ が すでに 設定 さ れ て い て 、 それ が  multipart  以外 に な っ て しま っ て い る 場合 に この 例外 が 発生 し ま す 。 
Multipart ConversionError  は  MessageError  と 組み込み の  TypeError  を 両方 継承 し て い ま す 。  Message . add_ payload ( )  は もはや 推奨 さ れ な い メソッド の ため 、 この 例外 は ふつう めった に 発生 し ま せ ん 。 
しかし この 例外 は attach ( )  メソッド が  MIME NonMultipart  から 派生 し た クラス の インスタンス  ( 例 :  MIMEImage  など )  に 対 し て 呼 ば れ た とき に も 発生 する こと が あ り ま す 。 
以下 は  FeedParser  が メッセージ の 解析 中 に 検出 する 障害  ( defect )  の 一覧 で す 。 
注意 :  これ ら の 障害 は 、 問題 が 見つか っ た メッセージ に 追加 さ れ る ため 、 たとえば multipart\/alternative  内 に あ る ネスト し た メッセージ が 異常 な ヘッダ を も っ て い た 場合 に は 、 その ネスト し た メッセージ が 障害 を 持 っ て い る が 、 その 親 メッセージ に は 障害 は な い と みな さ れ ま す 。  すべて の 障害 クラス は email . Errors . MessageDefect  の サブ クラス で す が 、 これ は 例外 と は 違 い ま す の で 注意 し て くださ い 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 : All the defect classes  were  added
NoBoundaryInMultipartDefect  -  メッセージ が  multipart  だ と 宣言 さ れ て い る の に 、 boundary  パラメータ が な い 。 
Start BoundaryNotFoundDefect  -  Content- Type :  ヘッダ で 宣言 さ れ た 開始 境界 が な い 。 
First HeaderLineIsContinuationDefect  -  メッセージ の 最初 の ヘッダ が 継続 行 から 始ま っ て い る 。 
MisplacedEnvelopeHeaderDefect  -  ヘッダ ブロック の 途中 に ``Unix  From ' ' ヘッダ が あ る 。 
MalformedHeaderDefect  -  コロン の な い ヘッダ が あ る 、 あるいは それ 以外 の 異常 な ヘッダ で あ る 。 
Multipart InvariantViolationDefect  -  メッセージ が  multipart  だ と 宣言 さ れ て い る の に 、 サブ パート が 存在 し な い 。 
注意 :  メッセージ が この 障害 を 持 っ て い る とき 、 is _multipart ( )  メソッド は  たとえ その  content-type  が  multipart  で あ っ て も false  を 返 す こと が あ り ま す 。 
12 . 2 . 2 . 3  追加 事項 
よく あ る 作業 の ひと つ は 、 メッセージ オブジェクト 構造 から フラット な 電子 メール テキスト を 生成 する こと で す 。 
この 作業 は 
や 
モジュール を 使 っ て メッセージ を 送信 し たり 、 メッセージ を コンソール に 出力 し たり する とき に 必要 に な り ま す 。 
ある メッセージ オブジェクト 構造 を と っ て き て 、 そこ から フラット な テキスト 文書 を 生成 する の は  Generator  クラス の 仕事 で す 。 
繰り返し に な り ま す が 、 email . Parser 
モジュール と 同じく 、 この 機能 は 既存 の  Generator  だけ に 限 ら れ る わけ で は あ り ま せ ん 。 
Generator  クラス で 公開 さ れ て い る メソッド に は 、 以下 の よう な もの が あ り ま す :  クラス Generator 
これ は 、 この よう な 行 が  Unix  の mailbox  形式 の エンペ ローブ ヘッダ 区切り 文字 列 と し て 誤 認識 さ れ る の を 防 ぐ ため の 、 移植 性 あ る 唯一 の 方法 で す  ( 詳し く は WHY THE  CONTENT - LENGTH  FORMAT  IS  BAD  ( なぜ  Content -Length  形式 が 有害 か ) を 参照 し て くださ い ) 。 
デフォルト で は  mangle_ from _ は  True  に な っ て い ま す が 、 Unix  の mailbox  形式 ファイル に 出力 し な い の なら ば これ は  False  に 設定 し て も かま い ま せ ん 。  オプション 引数  maxheaderlen  は 連続 し て い な い ヘッダ の 最大 長 を 指定 し ま す 。 
ひと つ の ヘッダ 行 が  maxheaderlen  ( これ は 文字 数 で す 、 tab  は 空白  8 文字 に 展開 さ れ ま す )  より も 長 い 場合 、 ヘッダ は email. Header  クラス で 定義 さ れ て い る よう に 途中 で 折り返 さ れ 、 間 に は セミコロン が 挿入 さ れ ま す 。  もし セミコロン が 見つか ら な い 場合 、 その ヘッダ は 放置 さ れ ま す 。 
ヘッダ の 折り返し を 禁止 する に は この 値 に ゼロ を 指定 し て くださ い 。 
デフォルト は  78  文字 で 、 RFC  28 2 2  で 推奨 さ れ て い る  ( で す が 強制 で は あ り ま せ ん )  値 で す 。 
これ 以外 の パブリック な  Generator  メソッド は 以下 の とおり で す : 
msg  を 基点 と する メッセージ オブジェクト 構造 体 の 文字 表現 を 出力 し ま す 。  出力 先 の ファイル に は この  Generator  インスタンス が 作成 さ れ た とき に 指定 さ れ た もの が 使 わ れ ま す 。 
各  subpart  は 深 さ 優先 順序 ( depth - first )  で 出力 さ れ 、 得 られ る テキスト は 適切 に  MIME  エンコード さ れ た もの に な っ て い ま す 。  オプション 引数  unixfrom  は 、 基点 と な る メッセージ オブジェクト の 最初 の  RFC  28 2 2  ヘッダ が 現れ る 前 に 、 エンペ ローブ ヘッダ 区切り 文字 列 を 出力 する こと を 強制 する フラグ で す 。 
その メッセージ オブジェクト が エンペ ローブ ヘッダ を も た な い 場合 、 標準 的 な エンペ ローブ ヘッダ が 自動 的 に 作成 さ れ ま す 。 
デフォルト で は この 値 は  False  に 設定 さ れ て お り 、 エンペ ローブ ヘッダ 区切り 文字 列 は 出力 さ れ ま せ ん 。  注意 :  各  subpart  に 関 し て は 、 エンペ ローブ ヘッダ は 出力 さ れ ま せ ん 。 
この  Generator  インスタンス の 独立 し た クローン を 生成 し 返 し ま す 。  オプション は すべて 同一 に な っ て い ま す 。 
文字 列  s  を 既定 の ファイル に 出力 し ま す 。 
ここ で い う 出力 先 は  Generator  コンストラクタ に 渡 し た  outfp  の こと を さ し ま す 。 
この 関数 は ただ 単に 拡張  print  文 で 使 わ れ る  Generator  インスタンス に 対 し て ファイル 操作 風 の  API  を 提供 する ため だけ の もの で す 。 
ユーザ の 便宜 を はか る ため 、 メソッド  Message . as_string ( )  と str ( aMessage )  ( つまり  Message .__str_ _( )  の こと で す )  を つか え ば メッセージ オブジェクト を 特定 の 書式 で フォーマット さ れ た 文字 列 に 簡単 に 変換 する こと が でき ま す 。 
詳細 は 
これ は  DecodedGenerator  と 呼 ば れ る もの で 、 Generator  基底 クラス と 似 て い ま す が 、 非 text 型 の  subpart  を 特定 の 書式 で フォーマット さ れ た 表現 形式 で 置きかえ る ところ が 違 っ て い ま す 。 
クラス DecodedGenerator 
この クラス は  Generator  から 派生 し た もの で 、 メッセージ の  subpart  を すべて 渡り 歩 き ま す 。 
type - 非 text 型  subpart  の  MIME  形式 
maintype - 非 text 型  subpart  の  MIME  主 形式  (maintype ) 
subtype - 非 text 型  subpart  の  MIME  副 形式  ( subtype ) 
filename  - 非 text 型  subpart  の ファイル 名 
description  - 非 text 型  subpart  に つけ られ た 説明 文字 列 
encoding  - 非 text 型  subpart  の  Content - transfer- encoding 
fmt  の デフォルト 値 は  None  で す 。 
こう する と 以下 の 形式 で 出力 し ま す :  [ Non - text  ( %(type ) s )  part  of  message omitted , filename % ( filename ) s ] 
訳注 : file - like object  12 . 2 . 3 . 1  Deprecated  methods 
12 . 2 . 4  電子 メール および  MIME  オブジェクト を ゼロ から 作成 する 
RFC  28 2 2  は 電子 メール メッセージ の 形式 を 規定 する 基本 規格 で す 。 
これ は ほとんど の 電子 メール が  ASCII  文字 のみ で 構成 さ れ て い た ころ 普及 し た RFC  82 2  標準 から 発展 し た もの で す 。 
Message  オブジェクト の 該当 フィールド に 文字 列 で は な く 、 Header  インスタンス を 値 と し て 使 う の で す 。  たとえば : 
from email . Message import Message  from email. Header import  Header  msg  =  Message ( )  h=  Header ( 'p \xf6stal ' , ' iso - 885 9 - 1 ' )  msg ['Subject'] =h print  msg . as_string ( ) Subject : ptal 
Subject :  フィールド に 非 ASCII 文字 を ふくめ て い る こと に 注目 し て くださ い 。 
ここ で は 、 含め た い バイト 列 が エンコード さ れ て い る 文字 セット を 指定 し て  Header  インスタンス を 作成 する こと に よ っ て 実現 し て い ま す 。 
のち に この  Message  インスタンス から フラット な テキスト を 生成 する さい に 、 この  Subject :  フィールド は RFC  20 4 7  準拠 の 適切 な 形式 に エンコード さ れ ま す 。 
MIME  機能 の つ い て い る メーラ なら 、 この ヘッダ に 埋めこ ま れ た  ISO - 885 9 - 1  文字 を ただし く 表示 する で しょ う 。 
以下 は  Header  クラス の 説明 で す : 
クラス Header
別 の 文字 セット の 文字 列 を ふく む  MIME 準拠 な ヘッダ を 作成 し ま す 。 
オプション 引数  s  は ヘッダ の 値 の 初期 値 で す 。 
これ が  None  の 場合  ( デフォルト ) 、 ヘッダ の 初期 値 は 設定 さ れ ま せ ん 。 
もう ひと つ の 目的 は 、 これ 以降  charset  引数 を 省略 し た  append ( )  メソッド 呼び出し すべて に お け る 、 デフォルト 文字 セット を 決定 する もの で す 。 
コンストラクタ に charset  が 与え られ な い 場合  ( デフォルト ) 、 初期 値 の  s  および 以後 の  append ( )  呼び出し に お け る 文字 セット と し て us - ascii が 使 わ れ ま す 。  行 の 最大 長 は  maxlinelen  に よ っ て 明示 的 に 指定 でき ま す 。 
最初 の 行 を  ( Subject :  など の  s  に 含 ま れ な い フィールド ヘッダ の 責任 を と る ため )  短 く 切り と る 場合 、 header_ name  に その フィールド 名 を 指定 し て くださ い 。 
ここ で 指定 さ れ た 文字 は 複数 に わた る 行 の 行頭 に 挿入 さ れ ま す 。  オプション 引数  errors  は 、 append ( )  メソッド に その まま 渡 さ れ ま す 。 
この  MIME  ヘッダ に 文字 列  s  を 追加 し ま す 。  オプション 引数  charset  が もし 与え られ た 場合 、 これ は Charset  インスタンス  ( 
email . Charset  を 参照 )  か 、 あるいは 文字 セット の 名前 で な けれ ば な り ま せ ん 。 
この 場合 は  Charset  インスタンス に 変換 さ れ ま す 。 
この 値 が  None  の 場合  ( デフォルト ) 、 コンストラクタ で 与え られ た  charset  が 使 わ れ ま す 。 
s  は バイト 文字 列 か 、 Unicode  文字 列 で す 。 
これ ば バイト 文字 列  ( isinstance ( s ,  str )  が 真 )  の 場合 、 charset  は その 文字 列 の エンコーディング で あ り 、 これ が 与え られ た 文字 セット で うま く デコード でき な い とき は Unicode Error  が 発生 し ま す 。  いっぽう  s  が  Unicode  文字 列 の 場合 、 charset  は その 文字 列 の 文字 セット を 決定 する ため の ヒント と し て 使 わ れ ま す 。 
この 場合 、 RFC  2822 準 拠 の ヘッダ は  RFC  20 4 7  の 規則 を もちい て 作成 さ れ 、 Unicode  文字 列 は 以下 の 文字 セット を  ( この 優先 順位 で )  適用 し て エンコード さ れ ま す : us - ascii、  charset  で 与え られ た ヒント 、 それ も な けれ ば utf - 8 。 
最初 の 文字 セット は  Unicode Error  を なるべく ふせ ぐ ため に 使 わ れ ま す 。  オプション 引数  errors は unicode ( )  又 は  ustr . encode ( ) の 呼び出 し 時 に 使用 し 、 デフォルト 値 は  ``strict ' ' で す 。 
メッセージ ヘッダ を  RFC  に 沿 っ た や り 方 で エンコード し ま す 。  おそらく 長 い 行 は 折り返 さ れ 、 非 ASCII 部分 は  base 64  また は quoted - printable  エンコーディング で 包含 さ れ る で しょ う 。 
オプション 引数  splitchars  に は 長 い ASCII 行 を 分割 する 文字 の 文字 列 を 指定 し 、  RFC  28 2 2  の highest  levelsyntactic  breaks の 大まか な サポート の 為 に 使用 し ま す 。 
この 引数 は  RFC  20 4 7  で エンコード さ れ た 行 に は 影響 し ま せ ん 。 
Header  クラス は 、 標準 の 演算 子 や 組み込 み 関数 を サポート する ため の メソッド も いく つ か 提供 し て い ま す 。 
Header . encode ( )  と 同じ で す 。 
str ( aHeader )  など と する と 有用 で しょ う 。 
組み込み の  unicode ( )  関数 の 補助 で す 。 
ヘッダ を  Unicode  文字 列 と し て 返 し ま す 。 
この メソッド は 、 ふた つ の  Header  インスタンス どうし が 等し い か どう か 判定 する の に 使え ま す 。 
この メソッド は 、 ふた つ の  Header  インスタンス どうし が 異な っ て い る か どう か を 判定 する の に 使え ま す 。 
さらに 、 email. Header  モジュール は 以下 の よう な 便宜 的 な 関数 も 提供 し て い ま す 。 
decode _header ( )  に よ っ て 返さ れ る  2 要素 タプル の リスト から Header  インスタンス を 作成 し ま す 。 
decode _header ( )  は ヘッダ の 値 を と っ て き て 、 ( decoded_string ,  charset )  と い う 形式 の  2 要素 タプル から な る リスト を 返 し ま す 。 
ここ で  decoded_string  は デコード さ れ た 文字 列 、 charset  は その 文字 セット で す 。  この 関数 は これ ら の リスト の 項目 から 、 Header  インスタンス を 返 し ま す 。 
オプション 引数  maxlinelen 、 header_ name  および continuation_ws  は  Header  コンストラクタ に 与え る もの と 同じ で す 。 
Message . walk ( )  メソッド を 使 う と 、 簡単 に メッセージ オブジェクト ツリー 内 を 次 から 次 へ と たど る  ( iteration )  こと が でき ま す 。 
email . Iterators  モジュール は この ため の 高 水準 イテレータ を いく つ か 提供 し ま す 。 
この イテレータ は  msg  中 の すべて の サブ パート に 含 ま れ る ペイロード を すべて 順 に たど っ て い き 、 ペイロード 内 の 文字 列 を  1 行 ずつ 返 し ま す 。 
サブ パート の ヘッダ は すべて 無視 さ れ 、 Python  文字 列 で な い ペイロード から な る サブ パート も 無視 さ れ ま す 。 
これ は  readline ( )  を 使 っ て 、 ファイル から メッセージ を  ( ヘッダ だけ とば し て )  フラット な テキスト と し て 読 む の に いくぶん 似 て い る か も しれ ま せ ん 。 
オプション 引数  decode  は 、 Message . get_payload ( ) に その まま 渡 さ れ ま す 。 typed_subpart _iterator 
以下 の 関数 は 役 に 立 つ デバッグ 用 ツール と し て 追加 さ れ た もの で 、 パッケージ と し て 公式 な サポート の あ る インターフェイス で は あ り ま せ ん 。 
その メッセージ オブジェクト 構造 の  content-type  を インデント つき で 表示 し ま す 。 
たとえば : 
12 . 2 . 1 . 1  推奨 さ れ な い メソッド 
Message  クラス は 、 email  パッケージ の 中心 と な る クラス で す 。  これ は email  オブジェクト モデル の 基底 クラス に な っ て い ま す 。 
Message  は ヘッダ フィールド を 検索 し たり メッセージ 本体 に アクセス する ため の 核 と な る 機能 を 提供 し ま す 。  概念 的 に は 、 Message  オブジェクト に は  ヘッダ  と  ペイロード  が 格納 さ れ て い ま す 。 
ヘッダ は 、 RFC  28 2 2  形式 の フィールド 名 および フィールド 値 が コロン で 区切 ら れ た もの で す 。 
コロン は フィールド 名 また は フィールド 値 の どちら に も 含 ま れ ま せ ん 。  ヘッダ は 大 文字 小 文字 を 区別 し た 形式 で 保存 さ れ ま す が 、 ヘッダ 名 が 一致 する か どう か の 検査 は 大 文字 小 文字 を 区別 せ ず に おこな う こと が でき ま す 。 
Unix - From  ヘッダ また は From _ ヘッダ と し て 知 ら れ る エンベロープ ヘッダ が ひと つ 存在 する こと も あ り ま す 。 
ペイロード は 、 単純 な メッセージ オブジェクト の 場合 は 単なる 文字 列 で す が 、 MIME  コンテナ 文書  ( multipart\/* また は message\/rfc 822  など )  の 場合 は  Message  オブジェクト の リスト に な っ て い ま す 。 
Message  オブジェクト は 、 メッセージ ヘッダ に アクセス する ため の マップ  ( 辞書 )  形式 の インタ フェイス と 、 ヘッダ および ペイロード の 両方 に アクセス する ため の 明示 的 な インタ フェイス を 提供 し ま す 。 
これ に は メッセージ オブジェクト ツリー から フラット な テキスト 文書 を 生成 し たり 、 一般 的 に 使 わ れ る ヘッダ の パラメータ に アクセス し たり 、 また オブジェクト ツリー を 再帰 的 に たど っ たり する ため の 便利 な メソッド を 含 み ま す 。 
Message  クラス の メソッド は 以下 の とおり で す :  クラス Message 
コンストラクタ は 引数 を と り ま せ ん 。 
メッセージ 全体 を フラット な 文字 列 と し て 返 し ま す 。 
たとえば 、 これ は デフォルト で は  From  で 始ま る 行 を 変更 し て しま い ま す 。 
以下 の 例 の よう に  Generator  の インスタンス を 生成 し て  flatten ( )  メソッド を 直接 呼び出 せ ば より 柔軟 な 処理 を 行 う 事 が でき ま す 。 
as _string ( unixfrom = True )  と 同じ で す 。 
メッセージ の ペイロード が 子  Message  オブジェクト から な る リスト で あ れ ば  True  を 返 し 、 そう で な けれ ば  False  を 返 し ま す 。 
is _multipart ( )  が  False  を 返 し た 場合 は 、 ペイロード は 文字 列 オブジェクト で あ る 必要 が あ り ま す 。 
メッセージ の エンベロープ ヘッダ を  unixfrom  に 設定 し ま す 。 
これ は 文字 列 で あ る 必要 が あ り ま す 。  get_unixfrom 
メッセージ の エンベロープ ヘッダ を 返 し ま す 。 
エンベロープ ヘッダ が 設定 さ れ て い な い 場合 は  None  が 返 さ れ ま す 。 
ペイロード に スカラー オブジェクト  ( 文字 列 など )  を 格納 し た い 場合 は 、 かわり に set_payload ( )  を 使 っ て くださ い 。 
現在 の ペイロード へ の 参照 を 返 し ま す 。  これ は  is _multipart ( )  が  True の 場合  Message  オブジェクト の リスト に な り 、 is _multipart ( )  が False  の 場合 は 文字 列 に な り ま す 。 
ペイロード が リスト の 場合 、 リスト を 変更 する こと は その メッセージ の ペイロード を 変更 する こと に な り ま す 。  オプション 引数 の  i  が あ る 場合 、 is _multipart ( )  が  True  なら ば  get_payload ( )  は ペイロード 中 で  0  から 数え て  i  番 目 の 要素 を 返 し ま す 。 
i  が 0  より 小さ い 場合 、 あるいは ペイロード の 個数 以上 の 場合 は In dexError  が 発生 し ま す 。 
これ 以外 の エンコーディング が 使 わ れ て い る 場合 、 Content - Transfer - Encoding :  ヘッダ が な い 場合 、 あるいは 曖昧 な base 64 データ が 含 ま れ る 場合 は 、 ペイロード は その まま  ( デコード さ れ ず に )  返 さ れ ま す 。 
もし メッセージ が  multipart  で  decode  フラグ が  True  の 場合 は None  が 返 さ れ ま す 。 
decode  の デフォルト 値 は  False  で す 。 
メッセージ 全体 の オブジェクト の ペイロード を  payload  に 設定 し ま す 。 
ペイロード の 形式 を ととのえ る の は 呼び出 し 側 の 責任 で す 。 
オプション の  charset  は メッセージ の デフォルト 文字 セット を 設定 し ま す 。  詳し く は  set_charset ( )  を 参照 し て くださ い 。 
バージョン  2 . 2 . 2  で  変更  さ れ た 仕様 : charset  引数 の 追加 
ペイロード の 文字 セット を  charset  に 変更 し ま す 。  ここ に は  Charset インスタンス  ( 
参照 ) 、 文字 セット 名 を あらわ す 文字 列 、 あるいは  None  の いずれ か が 指定 でき ま す 。 
文字 列 を 指定 し た 場合 、 これ は  Charset  インスタンス に 変換 さ れ ま す 。 
charset  が  None  の 場合 、 charset  パラメータ は Content- Type :  ヘッダ から 除去 さ れ ま す 。 
これ 以外 の もの を 文字 セット と し て 指定 し た 場合 、 TypeError  が 発生 し ま す 。  ここ で い う メッセージ と は 、 charset . input _ charset  で エンコード さ れ た text \/* 形式 の もの を 仮定 し て い ま す 。 
これ は 、 もし 必要 と あ ら ば プレーン テキスト 形式 を 変換 する さい に  charset . output_ charset  の エンコード に 変換 さ れ ま す 。 
MIME  ヘッダ  ( MIME - Version : ,  Content- Type : ,  Content - Transfer - Encoding : ) は 必要 に 応 じ て 追加 さ れ ま す 。 
その メッセージ 中 の ペイロード の  Charset  インスタンス を 返 し ま す 。  バージョン  2 . 2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の メソッド は 、 メッセージ の  RFC  28 2 2  ヘッダ に アクセス する ため の マップ  ( 辞書 )  形式 の インタ フェイス を 実装 し た もの で す 。 
これ ら の メソッド と 、 通常 の マップ  ( 辞書 )  型 は まったく 同じ 意味 を も つ わけ で は な い こと に 注意 し て くださ い 。 
たとえば 辞書 型 で は 、 同じ キー が 複数 あ る こと は 許 さ れ て い ま せ ん が 、 ここ で は 同じ メッセージ ヘッダ が 複数 あ る 場合 が あ り ま す 。 
また 、 辞書 型 で は  keys ( )  で 返 さ れ る キー の 順序 は 保証 さ れ て い ま せ ん が 、 Message  オブジェクト 内 の ヘッダ は つね に 元 の メッセージ 中 に 現れ た 順序 、 あるいは その あと に 追加 さ れ た 順序 で 返 さ れ ま す 。 
複製 さ れ た もの も ふくめ て ヘッダ 数 の 合計 を 返 し ま す 。 
この メソッド は 以下 の よう に  in  演算 子 で 使 わ れ ま す : 
指定 さ れ た 名前 の ヘッダ フィールド の 値 を 返 し ま す 。  name  は 最後 に コロン を ふ く ん で い て は いけ ま せ ん 。 
その ヘッダ が な い 場合 は  None  が 返 さ れ 、 KeyError  例外 は 発生 し ま せ ん 。  注意 :  指定 さ れ た 名前 の フィールド が メッセージ の ヘッダ に  2 回 以上 現れ て い る 場合 、 どちら の 値 が 返 さ れ る か は 未 定義 で す 。 
ヘッダ に 存在 する フィールド の 値 を すべて 取り出 し た い 場合 は  get_all ( )  メソッド を 使 っ て くださ い 。 
メッセージ ヘッダ に  name  と い う 名前 の  val  と い う 値 を も つ フィールド を あらた に 追加 し ま す 。 
この フィールド は 現在 メッセージ に 存在 する フィールド の いちばん 後 に 追加 さ れ ま す 。 
注意 :  この メソッド で は 、 すでに 同一 の 名前 で 存在 する フィールド は 上書き さ れ ま せ ん 。  もし メッセージ が 名前  name  を も つ フィールド を ひと つ しか 持 た な い よう に し た けれ ば 、 最初 に それ を 除去 し て くださ い 。 
たとえば :  del  msg [ ' subject ' ] msg [ ' subject '] = ' PythonPythonPython ! '
メッセージ の ヘッダ から 、  name  と い う 名前 を も つ フィールド を すべて 除去 し ま す 。 
たとえ この 名前 を も つ ヘッダ が 存在 し て い な く て も 例外 は 発生 し ま せ ん 。 
メッセージ が  name  と い う 名前 を も つ ヘッダ フィールド を 持 っ て い れ ば 真 を 、 そう で な けれ ば 偽 を 返 し ま す 。 
メッセージ 中 に あ る すべて の ヘッダ の フィールド 名 の リスト を 返 し ま す 。 
メッセージ 中 に あ る すべて の フィールド の 値 の リスト を 返 し ま す 。 
メッセージ 中 に あ る すべて の ヘッダ の フィールド 名 と その 値 を 2 - タプル の リスト と し て 返 し ま す 。 
指定 さ れ た 名前 を も つ フィールド の 値 を 返 し ま す 。 
これ は 指定 さ れ た 名前 が な い とき に オプション 引数 の  failobj  ( デフォルト で は  None )  を 返 す こと を のぞ け ば 、 _ _ getitem__( )  と 同じ で す 。 
役 に 立 つ メソッド を いく つ か 紹介 し ま す : 
name  の 名前 を も つ フィールド の すべて の 値 から な る リスト を 返 し ま す 。 
該当 する 名前 の ヘッダ が メッセージ 中 に 含 ま れ て い な い 場合 は  failobj  ( デフォルト で は  None )  が 返 さ れ ま す 。 
拡張 ヘッダ 設定 。 
この メソッド は __setitem__( )  と 似 て い ま す が 、 追加 の ヘッダ ・ パラメータ を キー ワード 引数 で 指定 でき る ところ が 違 っ て い ま す 。 
パラメータ の 値 が  None  の とき は キー のみ が 追加 さ れ ま す 。  例 を 示 し ま しょ う : 
こう する と ヘッダ に は 以下 の よう に 追加 さ れ ま す 。 
ヘッダ の 置換 。 
_ name  と 一致 する ヘッダ で 最初 に 見つか っ た もの を 置き換え ま す 。  この とき ヘッダ の 順序 と フィールド 名 の 大 文字 小 文字 は 保存 さ れ ま す 。 
一致 する ヘッダ が な い 場合 、 KeyError  が 発生 し ま す 。 
その メッセージ の  content-type  を 返 し ま す 。 
返 さ れ た 文字 列 は 強制 的 に 小 文字 で maintype\/subtype  の 形式 に 変換 さ れ ま す 。 
メッセージ 中 に  Content- Type :  ヘッダ が な い 場合 、 デフォルト の content-type  は  get_default_type ( )  が 返 す 値 に よ っ て 与え られ ま す 。 
RFC  2045  に よ れ ば メッセージ は つね に デフォルト の  content-type  を も っ て い る の で 、 get_content_type ( )  はつね に なん ら か の 値 を 返 す はず で す 。 
RFC  2045  は メッセージ の デフォルト  content-type  を 、 それ が  multipart\/digest  コンテナ に 現れ て い る とき 以外 は text \/plain  に 規定 し て い ま す 。  ある メッセージ が multipart\/digest  コンテナ 中 に あ る 場合 、 その content-type  は  message\/rfc 822  に な り ま す 。 
もし  Content- Type :  ヘッダ が 適切 で な い  content-type  書式 だっ た 場合 、 RFC  2045  は それ の デフォルト を  text \/plain  と し て 扱 う よう 定め て い ま す 。 
その メッセージ の 主 content-type  を 返 し ま す 。 
これ は  get_content_type ( )  に よ っ て 返さ れ る 文字 列 の maintype  部分 で す 。 
その メッセージ の 副  content-type  ( sub content-type 、 subtype )  を 返 し ま す 。 
これ は  get_content_type ( )  に よ っ て 返さ れ る 文字 列 の  subtype  部分 で す 。 
デフォルト の  content-type  を 返 し ま す 。 
ほどんどの メッセージ で は デフォルト の  content-type  は text \/plain  で す が 、 メッセージ が  multipart\/digest  コンテナ に 含 ま れ て い る とき だけ 例外 的 に  message\/rfc 822  に な り ま す 。 
デフォルト の  content-type  を 設定 し ま す 。 ctype  は  text \/plain  あるいは  message\/rfc 822 で あ る 必要 が あ り ま す が 、 強制 で は あ り ま せ ん 。 
デフォルト の  content-type  は ヘッダ の  Content- Type :  に は 格納 さ れ ま せ ん 。 
メッセージ の  Content- Type :  パラメータ を リスト と し て 返 し ま す 。 
返 さ れ る リスト は  キー \/ 値 の 組 から な る  2 要素 タプル が 連な っ た もの で あ り 、 これ ら は  " = "  記号 で 分離 さ れ て い ま す 。 
" = "  の 左側 は キー に な り 、 右側 は 値 に な り ま す 。  パラメータ 中 に  " = "  が な かっ た 場合 、 値 の 部分 は 空 文字 列 に な り 、 そう で な けれ ば その 値 は  get_param ( )  で 説明 さ れ て い る 形式 に な り ま す 。 
また 、 オプション 引数  unquote  が True  ( デフォルト )  で あ る 場合 、 この 値 は  unquote  さ れ ま す 。  オプション 引数  failobj  は 、 Content- Type :  ヘッダ が 存在 し な かっ た 場合 に 返 す オブジェクト で す 。 
オプション 引数  header  に は Content- Type :  の かわり に 検索 す べ き ヘッダ を 指定 し ま す 。 
バージョン  2 . 2 . 2  で  変更  さ れ た 仕様 : unquote  が 追加 さ れ ま し た 
メッセージ の  Content- Type :  ヘッダ 中 の パラメータ  param  を 文字 列 と し て 返 し ま す 。 
返り 値 は 文字 列 か  3  要素 の タプル で 、 タプル に な る の は パラメータ が  RFC  223 1  エンコード さ れ て い る 場合 で す 。 
3  要素 タプル の 場合 、 各 要素 の 値 は ( CHARSET ,  LANGUAGE ,  VALUE )  の 形式 に な っ て い ま す 。 
CHARSET  と  LAGUAGE  は  None  に な る こと が あ り 、 その 場合 VALUE  は  us - ascii 文字 セット で エンコード さ れ て い る と みな さ ね ば な ら な い の で 注意 し て くださ い 。 
普段 は  LANGUAGE  を 無視 でき ま す 。  この 関数 を 使 う アプリケーション が 、 パラメータ が  RFC  223 1  形式 で エンコード さ れ て い る か どう か を 気 に し な い の で あ れ ば 、 email .Utils . collapse_rfc 2231 _ value ( )  に get_param ( )  の 返り 値 を 渡 し て 呼び出 す こと で 、 この パラメータ を ひと つ に まとめ る こと が でき ま す 。 
この 値 が タプル なら ば この 関数 は 適切 に デコード さ れ た  Unicode  文字 列 を 返 し 、 そう で な い 場合 は  unquote  さ れ た 元 の 文字 列 を 返 し ま す 。 
たとえば : 
いずれ の 場合 も パラメータ の 値 は  ( 文字 列 で あ れ  3 要素 タプル の VALUE  項目 で あ れ )  つね に  unquote  さ れ ま す 。  ただし 、 unquote  が  False  に 指定 さ れ て い る 場合 は unquote  さ れ ま せ ん 。 
バージョン  2 . 2 . 2  で  変更  さ れ た 仕様 : unquote  引数 の 追加 、 3 要素 タプル が 返り 値 に な る 可能 性 あ り 
Content- Type :  ヘッダ 中 の パラメータ を 設定 し ま す 。 
指定 さ れ た パラメータ が ヘッダ 中 に すでに 存在 する 場合 、 その 値 は value  に 置き換え られ ま す 。 
オプション 引数  language  は  RFC  2231  の 言語 を 指定 し ま す が 、 デフォルト で は これ は 空 文字 列 と な り ま す 。 
charset  と language  は どちら も 文字 列 で あ る 必要 が あ り ま す 。 
指定 さ れ た パラメータ を  Content- Type :  ヘッダ 中 から 完全 に とりのぞ き ま す 。 
ヘッダ は その パラメータ と 値 が な い 状態 に 書き換え られ ま す 。 
requote  が  False  で な い 限り  ( デフォルト で は  True  で す ) 、 すべて の 値 は 必要 に 応 じ て  quote  さ れ ま す 。 
オプション 変数  header  が 与え られ た 場合 、 Content- Type :  の かわり に その ヘッダ が 使用 さ れ ま す 。 
type  は maintype\/subtype  と い う 形 の 文字 列 で な けれ ば な り ま せ ん 。 
それ 以外 の 場合 は  ValueError  が 発生 し ま す 。  この メソッド は  Content- Type :  ヘッダ を 置き換え ま す が 、 すべて の パラメータ は その まま に し ま す 。 
その メッセージ 中 の  Content - Disposition :  ヘッダ に あ る 、 filename  パラメータ の 値 を 返 し ま す 。  目的 の ヘッダ が 欠け て い たり 、 filename  パラメータ が な い 場合 に は  failobj  が 返 さ れ ま す 。 
返 さ れ る 文字 列 は つね に Utils . unquote ( )  に よ っ て  unquote  さ れ ま す 。  get_boundary 
その メッセージ 中 の  Content- Type :  ヘッダ に あ る 、 boundary  パラメータ の 値 を 返 し ま す 。 
目的 の ヘッダ が 欠け て い たり 、 boundary  パラメータ が な い 場合 に は  failobj  が 返 さ れ ま す 。 
返 さ れ る 文字 列 は つね に Utils . unquote ( )  に よ っ て  unquote  さ れ ま す 。 
メッセージ 中 の  Content- Type :  ヘッダ に あ る 、 boundary  パラメータ に 値 を 設定 し ま す 。 
その メッセージ 中 の  Content- Type :  ヘッダ に あ る 、 charset  パラメータ の 値 を 返 し ま す 。  値 は すべて 小 文字 に 変換 さ れ ま す 。 
メッセージ 中 に 含 ま れ る 文字 セット の 名前 を すべて リスト に し て 返 し ま す 。 
しかし 、 その  subpart  が  Content- Type :  を も っ て な い か 、 charset  が な い か 、 あるいは  MIME maintype  が  text  で な い いずれ か の 場合 に は 、 リスト の 要素 と し て  failobj  が 返 さ れ ま す 。 
walk ( )  メソッド は 多 目的 の ジェネレータ で 、 これ は ある メッセージ オブジェクト ツリー 中 の すべて の  part  および  subpart  を わたり歩 く の に 使え ま す 。 
Message  オブジェクト は オプション と し て  2 つ の インスタンス 属性 を と る こと が でき ま す 。  これ は ある  MIME  メッセージ から プレーン テキスト を 生成 する の に 使 う こと が でき ま す 。 
MIME  ドキュメント の 形式 で は 、 ヘッダ 直後 に くる 空行 と 最初 の  multipart  境界 を あらわ す 文字 列 の あいだ に いくら か の テキスト  ( 訳注 :  preamble ,  序文 )  を 埋めこ む こと を 許 し て い ま す 。  この テキスト は 標準 的 な  MIME  の 範疇 から はみ出 し て い る の で 、 MIME  形式 を 認識 する メール ソフト から これ ら は 通常 まったく 見え ま せ ん 。 
しかし メッセージ の テキスト を 生 で 見 る 場合 、 あるいは メッセージ を MIME  対応 し て い な い メール ソフト で 見 る 場合 、 この テキスト は 目 に 見え る こと に な り ま す 。  preamble  属性 は  MIME  ドキュメント に 加え る この 最初 の  MIME  範囲 外 テキスト を 含 ん で い ま す 。 
Parser  が あ る テキスト を ヘッダ 以降 に 発見 し た が 、 それ は まだ 最初 の  MIME  境界 文字 列 が 現れ る 前 だっ た 場合 、 パーザ は その テキスト を メッセージ の  preamble  属性 に 格納 し ま す 。 
を 参照 し て くださ い 。 
epilogue  属性 は メッセージ の 最後 の  MIME  境界 文字 列 から メッセージ 末尾 まで の テキスト を 含 む もの で 、 それ 以外 は  preamble  属性 と 同じ で す 。  注意 :  multipart  メッセージ から フラット な テキスト を 生成 する とき 、 ( 標準 的 な  Generator  を 使 っ た と し て )  もし その メッセージ に epilogue  が な い 場合 、 最後 の  MIME  境界 文字 列 の あと に は 改行 文字 が 追加 さ れ ま せ ん 。 
もし その メッセージ オブジェクト が epilogue  を も っ て お り 、 それ が 改行 文字 から 始ま っ て い な い 場合 、 改行 文字 が  MIME  境界 文字 列 の あと に 追加 さ れ ま す 。 
これ は ややぶ かっこう に 見え ま す が 、 ほとんど の 場合 は これ で うま く い き ま す 。 
要 する に 、 もし  multipart  境界 の あと に かならず 改行 を 入れ る よう に し た けれ ば 、 epilogue  に 空 文字 列 を 入れ て お け ば よ い の で す 。 
12 . 2 . 1 . 1  推奨 さ れ な い メソッド 
この パーザ に 文字 列 あるいは ファイル オブジェクト を 渡 せ ば 、 パーザ は その オブジェクト 構造 の 基底 と な る  ( root  の )  Message  インスタンス を 返 し ま す 。 
簡単 な 非 MIME メッセージ で あ れ ば 、 この 基底 オブジェクト の ペイロード は たん に メッセージ の テキスト を 格納 する 文字 列 に な る で しょ う 。 
旧式 の  Parser  API  は メッセージ 全体 の テキスト が 文字 列 と し て すでに メモリ 上 に あ る か 、 それ が ローカル な ファイル システム 上 に 存在 し て い る とき に は 問題 あ り ま せ ん 。 
FeedParser  は メッセージ を 読み込 む とき に 、 その ストリーム が 入力 待ち の ため に ブロック さ れ る よう な 場合  ( ソケット から  email  メッセージ を 読み込 む 時 など )  に 、 より 有効 で す 。 
FeedParser  は 漸進 的 に メッセージ を 読み込 み 、 解析 し ま す 。  パーザ を  close  し た とき に は 根っこ  ( root )  の オブジェクト のみ が 返 さ れ ま す 
12 . 1  。 
この パーザ は 、 ある 制限 さ れ た 方法 で 拡張 でき ま す 。  また 、 もちろん 自分 で ご 自分 の パーザ を 完全 に 無 から 実装 する こと も でき ま す 。 
email  パッケージ に つ い て い る パーザ と  Message  クラス の 間 に 隠 さ れ た 秘密 の 関係 は なに も あ り ま せ ん の で 、 ご 自分 で 実装 さ れ た パーザ も 、 それ が 必要 と する や り かた で メッセージ オブジェクト ツリー を 作成 する こと が でき ま す 。 
. . . 返 さ れ ま す  12 . 1 
Python  2 . 4  から 導入 さ れ た  email  パッケージ  バージョン  3 . 0  で は 、 旧式 の  Parser  は  FeedParser  に よ っ て 書き直 さ れ ま し た 。 
その ため パーザ の 意味 論 と 得 られ る 結果 は  2 つ の パーザ で 同一 の もの に な り ま す 。 
12 . 2 . 2 . 2  Parser  クラス  API 
email .Utils  モジュール で は いく つ か の 便利 な ユーティリティ を 提供 し て い ま す 。 
文字 列  str  内 の バックス ラッシュ を  バックス ラッシュ 2 つ  に 置換 し た 新し い 文字 列 を 返 し ま す 。  また 、 ダブル クォート は  バックス ラッシュ  +  ダブル クォート に 置換 さ れ ま す 。 
文字 列  str  を  逆 クォート し た 新し い 文字 列 を 返 し ま す 。  もし  str  の 先頭 あるいは 末尾 が ダブル クォート だっ た 場合 、 これ ら は 単に 切りおと さ れ ま す 。 
同様 に もし  str  の 先頭 あるいは 末尾 が 角 ブラケット  ( 、 )  だっ た 場合 も 切りおと さ れ ま す 。 
アドレス を パーズ し ま す 。 
To : や  Cc :  の よう な アドレス を ふ く ん だ フィールド の 値 を 与え る と 、 構成 部分 の 実名  と  電子 メール アドレス  を 取り出 し ま す 。  パーズ に 成功 し た 場合 、 これ ら の 情報 を タプル ( realname , email _ address )  に し て 返 し ま す 。 
失敗 し た 場合 は  2 要素 の タプル  ( ' ', '')  を 返 し ま す 。 
parseaddr( )  の 逆 で 、 実名 と 電子 メール アドレス から な る 2 要素 の タプル  ( realname , email _ address )  を 引数 に と り 、 To :  あるいは  Cc :  ヘッダ に 適 し た 形式 の 文字 列 を 返 し ま す 。 
タプル  pair の 第 1 要素 が 偽 で あ る 場合 、 第 2 要素 の 値 を その まま 返 し ま す 。 
この メソッド は  2 要素 タプル の リスト を  parseaddr( )  と 同じ 形式 で 返 し ま す 。 fieldvalues  は たとえば  Message . get_all ( )  が 返 す よう な 、 ヘッダ の フィールド 値 から な る シーケンス で す 。 
以下 は あ る 電子 メール メッセージ から すべて の 受け取り 人 を 得 る 一 例 で す : 
日付 の 解析 に 成功 し た 場合 、 parsedate ( )  は 関数  time. mktime( )  に 直接 渡せ る 形式 の 9 要素 から な る タプル を 返 し 、 失敗 し た 場合 は  None  を 返 し ま す 。 
返 さ れ る タプル の  6 、 7 、8 番 目 の フィールド は 有効 で は な い の で 注意 し て くださ い 。 
parsedate ( )  と 同様 の 機能 を 提供 し ま す が 、 None  また は  10 要素 の タプル を 返 す ところ が 違 い ま す 。 
最初 の  9 つ の 要素 は  time. mktime( )  に 直接 渡せ る 形式 の もの で あ り 、 最後 の  10 番 目 の 要素 は 、 その 日 付 の 時間 帯 の  UTC ( グリニッジ 標準 時 の 公式 な 呼び名 で す )  に 対 する オフセット で す 
入力 さ れ た 文字 列 に 時間 帯 が 指定 さ れ て い な かっ た 場合 、 10 番 目 の 要素 に は None  が 入 り ま す 。 
タプル の  6 、 7 、8 番 目 の フィールド は 有効 で は な い の で 注意 し て くださ い 。 
parsedate_tz ( )  が 返 す  10 要素 の タプル を  UTC  の タイム スタンプ に 変換 し ま す 。 
与え られ た 時間 帯 が  None  で あ る 場合 、 時間 帯 と し て 現地 時間  ( localtime)  が 仮定 さ れ ま す 。 
マイナー な 欠点 :  mktime_tz ( )  は まず  tuple  の 最初 の  8 要素 を localtime と し て 変換 し 、 つぎ に 時間 帯 の 差 を 加味 し て い ま す 。 
夏 時間 を 使 っ て い る 場合 に は 、 これ は 通常 の 使用 に は さしつかえ な い もの の 、 わずか な 誤差 を 生じ る か も しれ ま せ ん 。 
日付 を  RFC  28 2 2  形式 の 文字 列 で 返 し ま す 。 
例 :  Fri ,  0 9  Nov 2001  0 1 : 0 8 : 47  - 0000 
オプション と し て  float  型 の 値 を も つ 引数  timeval  が 与え られ た 場合 、 これ は  time. gmtime( )  および  time. localtime( )  に 渡 さ れ ま す 。 
それ 以外 の 場合 、 現在 の 時刻 が 使 わ れ ま す 。 
これ は  ( HTTP  など の )  いく つ か の プロトコル で 必要 で す 。 
この 機能 は  localtime が  False  の とき のみ 適用 さ れ ま す 。 
RFC  28 2 2  準拠 形式 の  Message - ID :  ヘッダ に 適 し た 文字 列 を 返 し ま す 。 
オプション 引数  idstring  が 文字 列 と し て 与え られ た 場合 、 これ は メッセージ  ID  の 一意 性 を 高め る の に 利用 さ れ ま す 。 
RFC  2231  に 従 っ て 文字 列  s  を デコード し ま す 。 
RFC  2231  に 従 っ て  s  を エンコード し ま す 。 
オプション 引数  charset  および  language  が 与え られ た 場合 、 これ ら は 文字 セット 名 と 言語 名 と し て 使 わ れ ま す 。 
もし これ ら の どちら も 与え られ て い な い 場合 、 s  は その まま 返 さ れ ま す 。 
charset  は 与え られ て い る が  language  が 与え られ て い な い 場合 、 文字 列  s  は  language  の 空 文字 列 を 使 っ て エンコード さ れ ま す 。 
オプション 引数  errors は built - in  で あ る  unicode ( )  関数 の 引数  errors  に 渡 さ れ ま す 。  この デフォルト 値 は  replace  と な っ て い ま す 。 
オプション 引数  fallback _ charset  は 、 もし  RFC  2231  ヘッダ の 使用 し て い る 文字 セット が  Python  の 知 っ て い る もの で は な かっ た 場合 の 非常 用 文字 セット と し て 使 わ れ ま す 。  デフォルト で は 、 この 値 は  us - ascii で す 。 
RFC  2231  に 従 っ て パラメータ の リスト を デコード し ま す 。  params  は ( content-type ,  string - value )  の よう な 形式 の 2 要素 から な る タプル で す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : dump_ address_pair( )  関数 は 撤去 さ れ ま し た 。  かわり に  formataddr( )  関数 を 使 っ て くださ い 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : decode ( )  関数 は 撤去 さ れ ま し た 。  かわり に  Header . decode _header ( )  メソッド を 使 っ て くださ い 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : encode ( )  関数 は 撤去 さ れ ま し た 。 
かわり に  Header . encode ( )  メソッド を 使 っ て くださ い 。 
. . .  に 対 する オフセット で す 
注意 :  この 時間 帯 の オフセット 値 は  time. timezone  の 値 と 符合 が 逆 で す 。 
これ は  time. timezone  が  POSIX  標準 に 準拠 し て い る の に 対 し て 、 こちら は  RFC  28 2 2  に 準拠 し て い る から で す 。 
12 . 2 . 1  電子 メール メッセージ の 表現 
email  パッケージ は 電子 メール の メッセージ を 管理 する ライブラリ で す 。  これ に は  MIME  や それ 以外 の  RFC  2822 ベース の メッセージ 文書 も ふく ま れ ま す 。 
この パッケージ は いく つ か の 古 い 標準 パッケージ 、 
など に ふく ま れ て い た 機能 の ほとんど を 持 ち 、 くわえ て 標準 で は な かっ た  mimecntl  など の 機能 も ふく ん で い ま す 。 
この パッケージ は 、 とくに 電子 メール の メッセージ を SMTP  ( RFC  28 2 1 )  サーバ に 送信 する ため に 作 ら れ て い る と い う わけ で は あ り ま せ ん 。  それ は 
モジュール の 機能 で す 。 
email  パッケージ は  RFC  28 2 2  に 加え て 、 RFC  2045 ,  RFC  2046 ,  RFC  2047 および  RFC  2231  など  MIME  関連 の  RFC  を サポート し て お り 、 でき る かぎり  RFC  に 準拠 する こと を めざ し て い ま す 。 email  パッケージ の 一番 の 特徴 は 、 電子 メール の 内部 表現 で あ る オブジェクト モデル  と 、 電子 メール メッセージ の 解析 および 生成 と を 分離 し て い る こと で す 。 
email  パッケージ を 使 う アプリケーション は 基本 的 に は オブジェクト を 処理 する こと が でき ま す 。  メッセージ に 子 オブジェクト を 追加 し たり 、 メッセージ から 子 オブジェクト を 削除 し たり 、 内容 を 完全 に 並べかえ たり 、 と い っ た こと が でき ま す 。 
フラット な テキスト 文書 から オブジェクト モデル へ の 変換 、 また そこ から フラット な 文書 へ と 戻 す 変換 は それぞれ 別々 の 解析 器  ( パーサ )  と 生成 器  ( ジェネレータ )  が 担当 し て い ま す 。 
また 、 一般 的 な  MIME  オブジェクト タイプ の いく つ か に つ い て は 手軽 な サブ クラス が 存在 し て お り 、 メッセージ フィールド 値 を 抽出 し たり 解析 し たり 、 RFC  準拠 の 日付 を 生成 し たり など の よく おこわれ る タスク に つ い て は いく つ か の 雑用 ユーティリティ も つ い て い ま す 。 
この 場合 も 上 と 似 た よう な 作業 順序 に な る で しょ う 。  また ここ に は  email  パッケージ が 提供 する すべて の クラス および モジュール に 関 する 説明 と 、 email  パッケージ を 使 っ て い く うえ で 遭遇 する か も しれ な い 例外 クラス 、 いく つ か の 補助 ユーティリティ 、 そして 少々 の サンプル も 含 ま れ て い ま す 。 
古 い  mimelib  や 前 バージョン の email  パッケージ の の ユーザ の ため に 、 現行 バージョン と の 違い と 移植 に つ い て の 節 も 設け て あ り ま す 。 
SMTP  プロトコル  クライアント . 
12 . 2 . 1  電子 メール メッセージ の 表現 
この モジュール で は  RFC  3490  ( アプリケーション に お け る 国際 化 ドメイン 名 ,  IDNA :  Internationalized  Domain  Namesin Applications )  および  RFC  3492  ( Nameprep :  国際 化 ドメイン 名  ( IDN )  の ため の  stringprep  プロファイル )  を 実装 し て い ま す 。 
この モジュール は punycode  エンコーディング および stringprep  の 上 に 構築 さ れ て い ま す 。 
これ ら の  RFC  は とも に 、 非  ASCII  文字 の 入 っ た ドメイン 名 を サポート する ため の プロトコル を 定義 し て い ま す 。 
( `` w w w . Alliancefranaise . nu' ' の よう な )  非  ASCII  文字 を 含 む ドメイン 名 は 、  ASCII と 互換 性 の あ る エンコーディング  ( ACE 、 `` w w w .xn - alliancefranaise - npb.nu' ' の よう な 形式 )  に 変換 さ れ ま す 。 
ドメイン 名 の  ACE  形式 は 、 DNS  クエリ 、 HTTP  Host :  フィールド など と い っ た 、 プロトコル 中 で 任意 の 文字 を 使え な い よう な 全て の 局面 で 用い られ ま す 。 
この 変換 は アプリケーション 内 で 行 わ れ ま す ;  可能 なら ユーザ から は 不 可視 と な り ま す :  アプリケーション は  Unicode  ドメイン ラベル を ワイヤ 上 に 載せ る 際 に  IDNA  に 、  ACE  ドメイン ラベル を ユーザ に 提供 する 前 に  Unicode  に 、 それぞれ 透過 的 に 変換 し な けれ ば な り ま せ ん 。 
Python  で は この 変換 を いく つ か の 方法 で サポート し ま す : idnacodec は  Unicode  と  ACE  間 の 変換 を 行 い ま す 。 
さらに 、 socket  モジュール は  Unicode  ホスト 名 を  ACE  に 透過 的 に 変換 する ため 、 アプリケーション は ホスト 名 を  socket  モジュール に 渡 す 際 に ホスト 名 の 変換 に 煩わ さ れ る こと が あ り ま せ ん 。 
( 逆 引き など に よ っ て )  ワイヤ 越し に ホスト 名 を 受信 する 際 、 Unicode へ の 自動 変換 は 行 わ れ ま せ ん :  こう し た ホスト 名 を ユーザ に 提供 し た い アプリケーション で は 、 Unicode  に デコード し て や る 必要 が あ り ま す 。 
encodings . idna  で は また 、 nameprep  手続き を 実装 し て い ま す 。  nameprep  は ホスト 名 に 対 し て あ る 正規 化 を 行 っ て 、 国際 化 ドメイン 名 で 大小 文字 を 区別 し な い よう に する と とも に 、 類似 の 文字 を 一元 化 し ま す 。 
nameprep  関数 は 必要 なら 直接 使 う こと も でき ま す 。 
label を  nameprep  し た バージョン を 返 し ま す 。 
現在 の 実装 で は クエリ 文字 列 を 仮定 し て い る の で 、  AllowUnassigned  は 真 で す 。 
RFC  3490  仕様 に 従 っ て ラベル を  ASCII に 変換 し ま す 。 UseSTD 3 ASCIIRules  は 偽 で あ る と 仮定 し ま す 。 
RFC  3490  仕様 に 従 っ て ラベル を  Unicode  に 変換 し ま す 。 
errno  値 を 背後 の システム に お け る 文字 列 表現 に 対応 付け る 辞書 で す 。 
例えば 、 errno . errorcode [errno . EPERM ]  は ' EPERM ' に 対応 付け られ ま す 。 
数値 の エラー コード を エラー メッセージ に 変換 する に は 、 os . strerror ( )  を 使 っ て くださ い 。 
以下 の リスト の 内 、 現在 の プラットフォーム で 使 わ れ て い な い シンボル は モジュール 上 で 定義 さ れ て い ま せ ん 。 
定義 さ れ て い る シンボル だけ を 挙げ た リスト は  errno . errorcode . keys ( )  と し て 取得 する こと が でき ま す 。 
取得 でき る シンボル に は 以下 の よう な もの が あ り ま す : 
許可 さ れ て い な い 操作 で す  ( Operation  not  permitted ) 
ファイル また は ディレクトリ が あ り ま せ ん  ( No such file or  directory ) 
指定 し た プロセス が 存在 し ま せ ん  ( No such  process ) 
割り込み システム コール で す  ( Interrupted system  call ) 
I\/ O  エラー で す  ( I\/ O error ) 
その よう な デバイス また は アドレス は あ り ま せ ん  ( No such  device or  address ) 
引数 リスト が 長 すぎ ま す  ( Arg  list  too long ) 
実行 形式 に エラー が あ り ま す  ( Exec  format error ) 
ファイル 番号 が 間違 っ て い ま す  ( Bad file  number ) 
子 プロセス が あ り ま せ ん  ( No child  processes ) 
再 試行 し て くださ い  ( Try  again ) 
空き メモリ が あ り ま せ ん  ( Out  of  memory ) 
許可 が あ り ま せ ん  ( Permis sion  denied ) 
不正 な アドレス で す  ( Bad  address ) 
ブロック デバイス が 必要 で す  ( Block  device  required ) 
その デバイス また は 資源 は 使用 中 で す  ( Device or  resource busy) 
ファイル が すでに 存在 し ま す ( File exists ) 
デバイス 間 の リンク で す  ( Cross - device  link ) 
その よう な デバイス は あ り ま せ ん  ( No such  device ) 
ディレクトリ で は あ り ま せ ん  ( Not  a directory ) 
ディレクトリ で す  ( Is a  directory ) 
無効 な 引数 で す  ( Invalid  argument ) 
ファイル テーブル が オーバフロー し て い ま す  ( Filetable  overflow ) 
開 か れ た ファイル が 多 すぎ ま す  ( Too many open files ) 
タイプライタ で は あ り ま せ ん  ( Not  atypewriter ) 
テキスト ファイル が 使用 中 で す  ( Text  filebusy) 
ファイル が 大き すぎ ま す  ( File too large ) 
デバイス 上 に 空き が あ り ま せ ん  ( Nospace  left  on  device ) 
不正 な シーク で す  (Illegal seek ) 
読み出し 専用 ファイル システム で す  ( Read - onlyfile system ) 
リンク が 多 すぎ ま す  ( Too many links ) 
パイプ が 壊れ ま し た  ( Broken pipe ) 
数学 引数 が 関数 の 定義 域 を 越え て い ま す  ( Mathargument  out  of  domain  of func ) 
表現 でき な い 数学 演算 結果 に な り ま し た  ( Math  result  not  representable ) 
リソース の デッド ロック が 起き ま す  ( Resource  deadlock  would occur ) 
ファイル 名 が 長 すぎ ま す  ( File  nametoo long ) 
レコード ロッキング が 利用 でき ま せ ん  ( No record  locksavailable ) 
実装 さ れ て い な い 機能 で す  ( Function  not implemented ) 
ディレクトリ が 空 で は あ り ま せ ん  ( Directory  not empty) 
これ 以上 シンボリック リンク を 追跡 でき ま せ ん  ( Too manysymbolic  linksencountered ) 
操作 が ブロック し ま す  ( Operation  would block ) 
指定 さ れ た 型 の メッセージ は あ り ま せ ん  ( No message  of  desiredtype ) 
識別 子 が 除去 さ れ ま し た  ( Identifier  removed ) 
チャネル 番号 が 範囲 を 超え ま し た  ( Channel number  out  of  range ) 
レベル  2  で 同期 が とれ て い ま せ ん  ( Level  2  not synchronized ) 
レベル  3  で 終了 し ま し た  ( Level  3  halted ) 
レベル  3  で リセット し ま し た  ( Level  3  reset ) 
リンク 番号 が 範囲 を 超え て い ま す  ( Link number  out  of  range ) 
プロトコル ドライバ が 接続 さ れ て い ま せ ん  ( Protocol driver  not  attached ) 
CSI  構造 体 が あ り ま せ ん  ( No CSI  structure  available ) 
レベル  2  で 終了 し ま し た  ( Level  2  halted ) 
無効 な 変換 で す  ( Invalid  exchange ) 
無効 な 要求 記述 子 で す  ( Invalid  request  descriptor ) 
変換 テーブル が 一杯 で す  ( Exchange  full ) 
陰極 が あ り ま せ ん  ( Noanode ) 
無効 な リクエスト コード で す  ( Invalid  request  code ) 
無効 な スロット で す  ( Invalid slot ) 
ファイル ロック に お け る デッド ロック エラー で す  ( File  locking  deadlock error ) 
フォント ファイル 形式 が 間違 っ て い ま す  ( Bad  font file  format ) 
ストリーム 型 で な い デバイス で す  ( Device  not  a stream ) 
利用 可能 な データ が あ り ま せ ん  ( No data available ) 
時間 切れ で す  ( Timer  expired ) 
streams  リソース を 使 い 切 り ま し た  ( Out  of  streams  resources ) 
計算 機 は ネットワーク 上 に あ り ま せ ん  ( Machine  is  not  on the  network ) 
パッケージ が インストール さ れ て い ま せ ん  ( Package not  installed ) 
対象 物 は 遠隔 に あ り ま す  ( Object  is  remote ) 
リンク が 切 ら れ ま し た  ( Link has  been severed ) 
Advertise  エラー で す  ( Advertise error ) 
Srmount  エラー で す  ( Srmount error ) 
送信 時 の 通信 エラー で す  ( Communication error  onsend ) 
プロトコル エラー で す  ( Protocol error ) 
多重 ホップ を 試み ま し た  ( Multihop  attempted ) 
RFS  特有 の エラー で す  ( RFS  specific error ) 
データ メッセージ で は あ り ま せ ん  ( Not  a  data message ) 
定義 さ れ た データ 型 に と っ て 大き すぎ る 値 で す  ( Value  too large  for  defined datatype ) 
名前 が ネットワーク 上 で 一意 で あ り ま せ ん  ( Name not unique  on  network ) 
ファイル 記述 子 の 状態 が 不正 で す  ( File  descriptor  in  bad  state ) 
遠隔 の アドレス が 変更 さ れ ま し た  ( Remote address changed ) 
必要 な 共有 ライブラリ に アクセス でき ま せ ん  ( Can  not  accessa  neededshared  library ) 
壊れ た 共有 ライブラリ に アクセス し て い ま す  ( Accessing  acorrupted shared  library ) 
a . out  の  . lib  セクション が 壊れ て い ま す  (. lib section in  a . outcorrupted ) 
リンク を 試み る 共有 ライブラリ が 多 すぎ ま す  ( Attempting  to  link in  too many shared  libraries ) 
共有 ライブラリ を 直接 実行 する こと が でき ま せ ん  ( Cannot  exec  a  shared  library  directly) 
不正 な バイト 列 で す  (Illegal  byte sequence ) 
割り込み システム コール を 復帰 し な けれ ば な り ま せ ん  ( Interrupted system  call  should  be  restarted ) 
ストリーム パイプ の エラー で す  ( Streams pipe error ) 
ユーザ が 多 すぎ ま す  ( Too many users ) 
非 ソケット に 対 する ソケット 操作 で す  ( Socket operation  on  non - socket ) 
目的 アドレス が 必要 で す  ( Destination  addressrequired ) 
メッセージ が 長 すぎ ま す  ( Message  too long ) 
ソケット に 対 し て 不正 な プロトコル 型 で す  ( Protocol  wrongtype  for  socket ) 
利用 でき な い プロトコル で す  ( Protocol  not  available ) 
サポート さ れ て い な い プロトコル で す  ( Protocol  not  supported ) 
サポート さ れ て い な い ソケット 型 で す  ( Sockettype not  supported ) 
通信 端点 に 対 し て サポート さ れ て い な い 操作 で す  ( Operation  not  supported on transportendpoint ) 
サポート さ れ て い な い プロトコル ファミリ で す  ( Protocol  family  not  supported ) 
プロトコル で サポート さ れ て い な い アドレス ファミリ で す  ( Address  family  not  supported  by  protocol ) 
アドレス は 使用 中 で す  ( Address  alreadyin use ) 
要求 さ れ た アドレス を 割り当て でき ま せ ん  ( Cannot  assign  requested  address ) 
ネットワーク が ダウン し て い ま す  ( Network  is  down) 
ネットワーク に 到達 でき ま せ ん  ( Network  is unreachable ) 
リセット に よ っ て ネットワーク 接続 が 切 ら れ ま し た  ( Network  droppedconnection  because  of  reset ) 
ソフトウェア に よ っ て 接続 が 終了 さ れ ま し た  ( Software  caused connectionabort) 
接続 が ピア に よ っ て リセット さ れ ま し た  ( Connection  reset by  peer ) 
バッファ に 空き が あ り ま せ ん  ( Nobufferspace  available ) 
通信 端点 が すでに 接続 さ れ て い ま す  ( Transportendpoint  is  already connected ) 
通信 端点 が 接続 さ れ て い ま せ ん  ( Transportendpoint  is  not  connected ) 
通信 端点 の シャットダウン 後 は 送信 でき ま せ ん  ( Cannotsend  after transportendpoint  shutdown) 
参照 が 多 すぎ ま す :  接続 でき ま せ ん  ( Too many references :cannot splice ) 
接続 が タイム アウト し ま し た  ( Connectiontimed out ) 
接続 を 拒否 さ れ ま し た  ( Connection  refused ) 
ホスト は システム ダウン し て い ま す  ( Host  is  down) 
ホスト へ の 経路 が あ り ま せ ん  ( No route to  host ) 
すでに 処理 中 で す  ( Operation  alreadyin  progress ) 
現在 処理 中 で す  ( Operation now in  progress ) 
無効 な  NFS  ファイル ハンドル で す  ( Stale  NFS file  handle ) 
XENIX  名前 付き ファイル で は あ り ま せ ん  ( Not  a  XENIX  namedtype file ) 
XENIX  セマフォ は 利用 でき ま せ ん  ( No XENIX semaphores available ) 
名前 付き ファイル で す  ( Isa  namedtype file ) 
遠隔 側 の  I \/ O  エラー で す  ( Remote I \/ O error ) 
ディスク クオータ を 超え ま し た  ( Quota  exceeded) 
例外 は クラス オブジェクト で す 。 
例外 は モジュール  exceptions  で 定義 さ れ て い ま す 。 
この モジュール を 明示 的 に インポート する 必要 は あ り ま せ ん : 例外 は  exceptions  モジュール と 同様 に 組み込 み 名前 空間 で 与え られ ま す 。 
注意 : 過去 の  Python  の バージョン で は 、 文字 列 の 例外 が サポート さ れ て い ま し た 。 
これ は プログラマ に 対 し て 、 例外 処理 を 指定 する 際 に 、 文字 列 で は な く 例外 名 を 使 わ せ る ため の 変更 で す 。  組み込 み 例外 の 文字 列 値 は 全て その 名前 と な り ま す が 、 ユーザ 定義 の 例外 や ライブラリ モジュール で 定義 さ れ る 例外 に つ い て も そう する よう に 要求 し て い る わけ で は あ り ま せ ん 。 
文 の 中 で 、 except
節 を 使 っ て 特定 の 例外 クラス に つ い て 記述 し た 場合 、 その 節 は 指定 し た 例外 クラス から 導出 さ れ た クラス も 扱 い ま す  ( 指定 し た 例外 クラス を 導出 し た 元 の クラス は 含 み ま せ ん ) サブ クラス 化 の 関係 に な い 例外 クラス が 二 つ あ っ た 場合 、 それ ら に 同じ 名前 を 付け た と し て も 、 等し く な る こと は あ り ま せ ん 。 
以下 に 列挙 し た 組み込 み 例外 は インタプリタ や 組み込 み 関数 に よ っ て 生成 さ れ ま す 。 
文 の 二 つ 目 の 引数 で す 。 
文字 列 の 例外 の 場合 、 関連 値 自体 は  except  節  ( あ っ た 場合 ) の 二 つ 目 の 引数 と し て 与え た 名前 を 持 つ 変数 に 記憶 さ れ ま す 。 
クラス 例外 の 場合 、 この 値 は 例外 クラス の インスタンス で す 。 
例外 が 標準 の ルート クラス で あ る  Exception  から 導出 さ れ た 場合 、 関連 値 は 例外 インスタンス の  args  属性 中 に 他 の 属性 と 同様 に 置 か れ ま す 。  ユーザ に よ る コード も 組み込 み 例外 を 送出 する こと が でき ま す 。 
例外 を 定義 する 上 で の 詳し い 情報 は 、 
の ` ` ユーザ 定義 の 例外 ' '  の 項目 に あ り ま す 。 
以下 の 例外 クラス は 他 の 例外 クラス の 基底 クラス と し て のみ 使 わ れ ま す 。 
例外 の ルート クラス で す 。 
全て の 組み込 み 例外 は この クラス から 導出 さ れ て い ま す 。 
全て の ユーザ 定義 例外 は この クラス から 導出 さ れ る べ き で す が 、 ( 今 の ところ まだ )  それ は 強制 で は あ り ま せ ん 。 
str ( )  を この クラス  ( また は ほとんど の 導出 クラス )  の インスタンス に 適用 する と 、 引数 を 文字 列 に し た が 返 さ れ る か 、 インスタンス の コンストラクタ が 引数 なし の 場合 に は 空 の 文字 列 が 返 さ れ ま す 。 
インスタンス を シーケンス と し て 使 う と 、 コンストラクタ に 渡 さ れ た 引数 に アクセス する こと が でき ま す  ( 古 い コード と の 互換 性 の ため に 便利 で す ) 。 
引数 は また 、 インスタンス の  args  属性 と し て 、 タプル で 得 る こと も でき ま す 。 
StopIteration  および  SystemExit  以外 の 、 全て の 組み込 み 例外 の 基底 クラス で す 。  StandardError  自体 は ルート クラス  Exception から 導出 さ れ て い ま す 。 
算術 上 の 様々 な エラー に お い て 送出 さ れ る 組み込 み 例外 :  OverflowError 、 ZeroDivisionError 、 Floating PointError  の 基底 クラス で す 。 
マップ 型 また は シーケンス 型 に 使 っ た キー や インデクス が 無効 な 値 の 場合 に 送出 さ れ る 例外 : In dexError 、 KeyError の 基底 クラス で す 。 
sys . setdefaultencoding ( ) に よ っ て 直接 送出 さ れ る こと も あ り ま す 。 
Python  システム の 外部 で 起こ っ て い る はず の 例外 :  IOError 、 OSError  の 基底 クラス で す 。 
この 型 の 例外 が  2  つ の 要素 を も つ タプル で 生成 さ れ た 場合 、 最初 の 要素 は インスタンス の  errno  属性 で 得 る こと が でき ま す  ( この 値 は エラー 番号 と 見な さ れ ま す ) 。  二 つ め の 要素 は  strerror  属性 で す  ( この 値 は 通常 、 エラー に 関連 する メッセージ で す ) 。 
タプル 自体 は  args  属性 から 得 る こと も でき ま す 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
EnvironmentError  例外 が  3  要素 の タプル で 生成 さ れ た 場合 、 最初 の  2  つ の 要素 は 上 と 同様 に 得 る こと が でき る 一方 、 3  つ 目 の 要素 は filename  属性 で 得 る こと が でき ま す 。 
しかし ながら 、 以前 の バージョン と の 互換 性 の ため に 、 args  属性 に は コンストラクタ に 渡 し た 最初 の  2  つ の 引数 から な る  2  要素 の タプル しか 含 み ま せ ん 。  この 例外 が  3  つ 以外 の 引数 で 生成 さ れ た 場合 、 filename  属性 は None  に な り ま す 。 
この 例外 が  2  また は  3  つ 以外 の 引数 で 生成 さ れ た 場合 、 errno  および  strerror  属性 も None  に な り ま す 。 
後者 の ケース で は 、 args  が コンストラクタ に 与え た 引数 を その まま タプル の 形 で 含 ん で い ま す 。 
以下 の 例外 は 実際 に 送出 さ れ る 例外 で す 。 
assert  文 が 失敗 し た 場合 に 送出 さ れ ま す 。 
属性 の 参照 や 代入 が 失敗 し た 場合 に 送出 さ れ ま す 。 
( 対照 の オブジェクト が 属性 の 参照 や 属性 の 代入 を まったく サポート し て い な い 場合 に は TypeError  が 送出 さ れ ま す 。 ) 
浮動 小数 点 演算 が 失敗 し た 場合 に 送出 さ れ ま す 。 
この 例外 は どの  Python の バージョン で も 常 に 定義 さ れ て い ま す が 、 Python  が -- with - fpectl  オプション を つけ た 状態 に 設定 さ れ て い る か 、 pyconfig . h  ファイル に シンボル WANT _ SIG FPE _ HANDLER  が 定義 さ れ て い る 場合 に のみ 送出 さ れ ま す 。 
( print  文 、 組み込み の  open ( )  また は ファイル オブジェクト に 対 する メソッド と い っ た )  I\/ O  操作 が 、 例えば ` ` ファイル が 存在 し ま せ ん ' ' や ` ` ディスク の 空 き 領域 が あ り ま せ ん ' ' と い っ た  I \/ O  に 関連 し た 理由 で 失敗 し た 場合 に 送出 さ れ ま す 。  この クラス は  EnvironmentError  から 導出 さ れ て い ま す 。 
この 例外 クラス の インスタンス 属性 に 関 する 情報 は 上記 の  EnvironmentError  に 関 する 議論 を 参照 し て くださ い 。 
import  文 で モジュール 定義 を 見つけ られ な かっ た 場合 や 、 from  . . . import  文 で 指定 し た 名前 を インポート する こと が でき な かっ た 場合 に 送出 さ れ ま す 。 
シーケンス の インデクス 指定 が シーケンス の 範囲 を 超え て い る 場合 に 送出 さ れ ま す 。 
( スライス の インデクス は シーケンス の 範囲 に 収ま る よう に 暗黙 の うち に 調整 さ れ ま す ;  インデクス が 通常 の 整数 で な い 場合 、 TypeError が 送出 さ れ ま す 。 ) 
マップ 型  ( 辞書 型 )  オブジェクト の キー が 、 オブジェクト の キー 集合 内 に 見つか ら な かっ た 場合 に 送出 さ れ ま す 。 
ユーザ が 割り込み キー  ( 通常 は  Control - C  また は  Delete  キー で す )  を 押 し た 場合 に 送出 さ れ ま す 。 
割り込み が 起き た か どう か は インタプリタ の 実行 中 に 定期 的 に 調べ られ ま す 。  組み込 み 関数  input ( )  や  raw _ input ( )  が ユーザ の 入力 を 待 っ て い る 間 に 割り込み キー を 押 し て も 、 この 例外 が 送出 さ れ ま す 。 
あ る 操作 中 に メモリ が 不足 し た が 、 その 状況 は  ( オブジェクト を いく つ か 消去 する こと で )  まだ 復旧 可能 か も しれ な い 場合 に 送出 さ れ ま す 。 
例外 に 関連 づけ られ た 値 は 、 どの 種 の  ( 内部 )  操作 が メモリ 不足 に な っ て い る か を 示 す 文字 列 で す 。  背後 に あ る メモリ 管理 アーキテクチャ  ( C  の malloc ( )  関数 )  に よ っ て は 、 インタプリタ が 常 に その 状況 を 完璧 に 復旧 でき る と は かぎ ら な い の で 注意 し て くださ い ;  プログラム の 暴走 が 原因 の 場合 に も 、 やはり 実行 スタック の 追跡 結果 を 出力 でき る よう に する ため に 例外 が 送出 さ れ ま す 。 
ローカル また は グローバル の 名前 が 見つか ら な かっ た 場合 に 送出 さ れ ま す 。 
これ は 非 限定 の 名前 のみ に 適用 さ れ ま す 。 
関連 付け られ た 値 は 見つか ら な かっ た 名前 を 含 む エラー メッセージ で す 。 
この 例外 は  RuntimeError  から 導出 さ れ て い ま す 。 
ユーザ 定義 の 基底 クラス に お い て 、 その クラス の 導出 クラス に お い て オーバライド する こと が 必要 な 抽象 化 メソッド は この 例外 を 送出 し な く て は な り ま せ ん 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
この クラス は  EnvironmentError  から 導出 さ れ て お り 、 主に 
モジュール の  os . error  例外 で 使 わ れ て い ま す 。 
例外 に 関連 付け られ る 可能 性 の あ る 値 に つ い て は 、 上記 の  EnvironmentError  を 参照 し て くださ い 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
算術 演算 の 結果 、 表現 する に は 大き すぎ る 値 に な っ た 場合 に 送出 さ れ ま す 。 
これ は 長 整数 の 演算 で は 起こ り ま せ ん  ( 長 整数 の 演算 で は むしろ MemoryError  が 送出 さ れ る こと に な る で しょ う ) 。 
C  で は 浮動 小数 点 演算 に お け る 例外 処理 の 標準 化 が 行 わ れ て い な い の で 、 ほとんど の 浮動 小数 点 演算 も チェック さ れ て い ま せ ん 。 
通常 の 整数 で は 、 オーバフロー を 起こ す 全て の 演算 が チェック さ れ ま す 。  例外 は 左 シフト で 、 典型 的 な アプリケーション で は 左 シフト の オーバフロー で は 例外 を 送出 する より も むしろ 、 オーバフロー し た ビット を 捨て る よう に し て い ま す 。 
弱 参照 に つ い て は 
モジュール を 参照 し て くださ い 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 : 以前 は 
. ReferenceError 例外 と し て 知 ら れ て い ま し た 。 
他 の カテゴリ に 分類 でき な い エラー が 検出 さ れ た 場合 に 送出 さ れ ま す 。 
関連 付け られ た 値 は 何 が 問題 だっ た の か を より 詳細 に 示 す 文字 列 で す 。 
( この 例外 は ほとんど 過去 の バージョン の インタプリタ に お け る 遺物 で す ; この 例外 は もはや あまり 使 わ れ る こと は あ り ま せ ん ) 
パーザ が 構文 エラー に 遭遇 し た 場合 に 送出 さ れ ま す 。 
インタプリタ が 内部 エラー を 発見 し た が 、 その 状況 は 全て の 望み を 棄て させ る ほど 深刻 で は な い よう に 思 わ れ る 場合 に 送出 さ れ ま す 。 
この 例外 は  sys . exit ( )  関数 に よ っ て 送出 さ れ ま す 。 
この 例外 が 処理 さ れ な かっ た 場合 、 Python  インタプリタ は 終了 し ま す ;  スタック の トレース バック は 全く 印字 さ れ ま せ ん 。 
即座 に 終了 する こと が 真 に 強 く 必要 で あ る とき ( 例えば 、 fork ( )  を 呼 ん だ 後 の 子 プロセス 内 )  に は os . _exit ( )  関数 を 使 う こと が でき ま す 。 
組み込 み 演算 また は 関数 が 適切 で な い 型 の オブジェクト に 対 し て 適用 さ れ た 際 に 送出 さ れ ま す 。 
関連 付け られ る 値 は 型 の 不 整合 に 関 し て 詳細 を 述べ た 文字 列 で す 。 
関数 や メソッド 内 の ローカル な 変数 に 対 し て 参照 を 行 っ た が 、 その 変数 に は 値 が バインド さ れ て い な かっ た 際 に 送出 さ れ ま す 。 
NameError の サブ クラス で す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
Unicode  に 関 する エンコード また は デコード の エラー が 発生 し た 際 に 送出 さ れ ま す 。 
ValueError  の サブ クラス で す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
Unicode  関連 の エラー が エンコード 中 に 発生 し た 際 に 送出 さ れ ま す 。 
Unicode Error  の サブ クラス で す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
Unicode  関連 の エラー が デコード 中 に 発生 し た 際 に 送出 さ れ ま す 。 
Unicode  関連 の エラー が コード 翻訳 に 発生 し た 際 に 送出 さ れ ま す 。 
組み込 み 演算 や 関数 が 、 正し い 型 だ が 適切 で な い 値 を 受け取 っ た 場合 、 および  In dexError  の よう に 、 より 詳細 な 説明 の でき な い 状況 で 送出 さ れ ま す 。 
Windows  特有 の エラー か 、 エラー 番号 が  errno  値 に 対応 し な い 場合 に 送出 さ れ ま す 。 
除算 また モジュロ 演算 に おけ る 二 つ 目 の 引数 が ゼロ で あ っ た 場合 に 送出 さ れ ま す 。 
関連 付け られ て い る 値 は 文字 列 で 、 その 演算 に お け る 被 演算 子 の 型 を 示 し ま す 。 
以下 の 例外 は 警告 カテゴリ と し て 使 わ れ ま す ;  詳細 に つ い て は 
モジュール を 参照 し て くださ い 。 
警告 カテゴリ の 基底 クラス で す 。 
ユーザ コード に よ っ て 生成 さ れ る 警告 の 基底 クラス で す 。 
廃用 さ れ た 機能 に 対 する 警告 の 基底 クラス で す 。 
将来 廃用 さ れ る こと に な っ て い る 機能 に 対 する 警告 の 基底 クラス で す 。 
曖昧 な 構文 に 対 する 警告 の 基底 クラス で す 。 
あいまい な ラン タイム 挙動 に 対 する 警告 の 基底 クラス で す 。 
将来 意味 構成 が 変わ る こと に な っ て い る 文 の 構成 に 対 する 警告 の 基底 クラス で す 。 
組み込 み 例外 の クラス 階層 は 以下 の よう に な っ て い ま す : 
Exception + - - SystemExit + --  StopIteration + - -  StandardError |  +-- KeyboardInterrupt | +-- ImportError |  +-- EnvironmentError || +--  IOError || +--  OSError || +--  WindowsError |  +--  EOFError |  +--  RuntimeError || +--  NotImplementedError |  +--  NameError || +--UnboundLocal Error |  +--  AttributeError |  +--SyntaxError || +-- IndentationError || +-- TabError |  +--TypeError |  +--  AssertionError |  +-- LookupError || +-- In dexError || +-- KeyError |  +--  ArithmeticError || +--  OverflowError || +-- ZeroDivisionError || +--Floating PointError |  +--  ValueError || +--Unicode Error || +--Unicode EncodeError || +--Unicode DecodeError || +--Unicode TranslateError |  +--  ReferenceError |  +-- SystemError |  +--  MemoryError + -- - Warning + - - UserWarning + - -  DeprecationWarning + - - PendingDeprecationWarning + - -SyntaxWarning + - -  OverflowWarning  ( 2 . 4 で は 生成 さ れ ま せ ん 。  2 . 5 で は 無くな り ま す ) + --  RuntimeWarning + - -  FutureWarning 
この モジュール で は 、 ファイル 記述 子  ( file  descriptor )  に 基づ い た ファイル 制御 および  I \/ O  制御 を 実現 し ま す 。  この モジュール は 、 Unix  の ルーチン で あ る  fcntl ( )  および  ioctl ( )  へ の インタフェース で す 。 
この モジュール 内 の 全て の 関数 は ファイル 記述 子  fd  を 最初 の 引数 に 取 り ま す 。 
この 値 は  sys . stdin . fileno( )  が 返 す よう な 整数 の ファイル 記述 子 で も 、 sys . stdin  自体 の よう な 、 純粋 に ファイル 記述 子 だけ を 返 す  fileno( )  メソッド を 提供 し て い る ファイル オブジェクト で も かま い ま せ ん 。  この モジュール で は 以下 の 関数 を 定義 し て い ま す : 
要求 さ れ た 操作 を ファイル 記述 子  fd  ( また は  fileno( )  メソッド を 提供 し て い る ファイル オブジェクト )  に 対 し て 実行 し ま す 。  操作 は  op  で 定義 さ れ 、 オペレーティング システム 依存 で す 。 
これ ら の 操作 コード は  fcntl  モジュール 内 に も あ り ま す 。 
引数  arg  は オプション で 、 標準 で は 整数 値  0  で す 。 
この 引数 を 与え る 場合 、 整数 か 文字 列 の 値 を と り ま す 。 
引数 が 無 い か 整数 値 の 場合 、 この 関数 の 戻 り 値 は  C  言語 の fcntl ( )  を 呼び出 し た 際 の 整数 の 戻 り 値 に な り ま す 。 
引数 が 文字 列 の 場合 に は 、 
. pack ( )  で 作 ら れ る よう な バイナリ の 構造 体 を 表 し ま す 。 
バイナリ データ は バッファ に コピー さ れ 、 その アドレス が C  言語 の  fcntl ( )  呼び出し に 渡 さ れ ま す 。 
呼び出し が 成功 し た 後 に 戻 さ れ る 値 は バッファ の 内容 で 、 文字 列 オブジェクト に 変換 さ れ て い ま す 。 
返 さ れ る 文字 列 は  arg  引数 と 同じ 長 さ に な ま す 。 
この 値 は  10 2 4  バイト に 制限 さ れ て い ま す 。 
オペレーティング システム から バッファ に 返 さ れ る 情報 の 長 さ が  10 2 4  バイト より も 大き い 場合 、 大抵 は セグメンテーション 違反 と な る か 、 より 不可思議 な データ の 破損 を 引き起こ し ま す 。  fcntl ( )  が 失敗 し た 場合 、 IOError  が 送出 さ れ ま す 。 
ファイル 記述 子  fd  ( fileno( )  メソッド を 提供 し て い る ファイル オブジェクト も 含 む )  に 対 し て ロック 操作  op  を 実行 し ま す 。 
詳細 は  Unix  マニュアル の 
flock ( 3 )  を 参照 し て くださ い ( システム に よ っ て は 、 この 関数 は  fcntl ( )  を 使 っ て エミュレーション さ れ て い ま す ) 。 
本質 的 に  fcntl ( )  に よ る ロッキング の 呼び出し を ラップ し た もの で す 。 
fd  は ロック また は アン ロック する ファイル の ファイル 記述 子 で 、 operation  は 以下 の 値 : 
LOCK _ UN  -  アン ロック 
LOCK _ SH  -  共有 ロック を 取得 
LOCK _ EX  -  排他 的 ロック を 取得 
の うち いずれ か に な り ま す 。  operation  が  LOCK _ SH  また は  LOCK _ EX の 場合 、 LOCK _ NB  と ビット  OR  に する こと で ロック 取得 時 に ブロック し な い よう に する こと が でき ま す 。 
LOCK _ NB  が 使 わ れ 、 ロック が 取得 でき な かっ た 場合 、 IOError  が 送出 さ れ 、 例外 は  errno  属性 を 持 ち 、 その 値 は  EACCESS また は  EAGAIN  に な り ま す  ( オペレーティング システム に 依存 し ま す ;  可搬 性 の ため 、 両方 の 値 を チェック し て くださ い ) 。 
少な く とも いく つ か の システム で は 、  ファイル 記述 子 が 参照 し て い る ファイル が 書き込み の ため に 開 か れ て い る 場合 、 LOCK _ EX だけ しか 使 う こと が でき ま せ ん 。 
length  は ロック を 行 い た い バイト 数 、 start  は ロック 領域 先頭 の  whence  から の 相対 的 な バイト オフセット 、 whence  は fileobj . seek ( )  と 同じ で 、 具体 的 に は : 
0  -  ファイル 先頭 から の 相対 位置 ( SEEK_ SET ) 
1  -  現在 の バッファ 位置 から の 相対 位置 ( SEEK_ CUR ) 
2  -  ファイル の 末尾 から の 相対 位置 ( SEEK_ END ) 
start  の 標準 の 値 は  0  で 、 ファイル の 先頭 から 開始 する こと を 意味 し ま す 。 
whence  の 標準 の 値 も  0  で す 。 
以下 に  ( 全て の  SVR 4  互換 システム で の )  例 を 示 し ま す : 
最初 の 例 で は 、 戻り 値  rv  は 整数 値 を 保持 し て い ま す ;  二 つ 目 の 例 で は 文字 列 値 を 保持 し て い ま す 。 
lockdata  変数 の 構造 体 レイアウト は システム 依存 で す  - -  従 っ て  flock ( )  を 呼 ぶ 方 が ベター で す 。 
filecmp  モジュール で は 、 ファイル および ディレクトリ を 比較 する ため 、 様々 な 時間 \/ 正確 性 の トレード オフ に 関 する オプション を 備え た 関数 を 定義 し て い ま す 。 filecmp  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
名前 が  f 1  および  f 2  の ファイル を 比較 し 、 二 つ の ファイル が 同じ ら し けれ ば  True  を 返 し 、 そう で な けれ ば  false  を 返 し ま す 。 
shallow  が 与え られ て お り かつ 偽 で な けれ ば 、 os . stat ( ) の 返 す シグネチャ が 一致 する ファイル は 同じ で あ る と 見な さ れ ま す 。  バージョン  2 . 3  で  変更  さ れ た 仕様 : use_statcache  は 廃止 さ れ 、 指定 し て も 無視 さ れ ま す 。 
の キャッシュ から 古 い ファイル  stat  値 が 使 わ れ ま す 。  可搬 性 と 効率 の ため に 、 個 の 関数 は 外部 プログラム を 一切 呼び出 さ な い の で 注意 し て くださ い 。 
ファイル 名 から な る  3 つ の リスト : match 、 mismatch 、 errors  を 返 し ま す 。 
この モジュール は 標準 入力 や ファイル の 並び に またが る ループ を 素早 く 書 く ため の ヘルパー クラス と 関数 を 提供 し て い ま す 。  典型 的 な 使 い 方 は 以下 の 通り で す : 
この プログラム は sys . argv [ 1 : ] に 含 ま れ る 全て の ファイル を また い で 繰り返 し ま す 。  もし 該当 する もの が な けれ ば 、 sys . stdin が デフォルト と し て 扱 わ れ ま す 。 
ファイル 名 と し て ' - ' が 与え られ た 場合 も 、 sys . stdin に 置き換え られ ま す 。 
別 の ファイル 名 リスト を 使 い た い 時 に は 、 input ( ) の 最初 の 引数 に リスト を 与え ま す 。 
FileInput クラス の インスタンス を 作 り ま す 。 
生成 さ れ た インスタンス は 、 この モジュール の 関数 群 が 利用 する グローバル な 状態 と し て 利用 さ れ ま す 。 
この 関数 へ の 引数 は FileInput クラス の コンストラクタ へ 渡 さ れ ま す 。 
以下 の 関数 は input ( ) 関数 に よ っ て 作 ら れ た グローバル な 状態 を 利用 し ま す 。  アクティブ な 状態 が 無 い 場合 に は 、 RuntimeError が 発生 し ま す 。 
現在 読み込 み 中 の ファイル 名 を 返 し ま す 。 
一行 目 が 読み込 ま れ る 前 は None を 返 し ま す 。 
最後 に 読み込 ま れ た 行 の 、 累積 し た 行 番号 を 返 し ま す 。 
1 行 目 が 読み込 ま れ る 前 は 0 を 返 し ま す 。 
最後 の ファイル の 最終 行 が 読み込 ま れ た 後 に は 、 その 行 の 行 番号 を 返 し ま す 。 
現在 の ファイル 中 で の 行 番号 を 返 し ま す 。 
1 行 目 が 読み込 ま れ る 前 は 0 を 返 し ま す 。 
最後 の ファイル の 最終 行 が 読み込 ま れ た 後 に は 、 その 行 の ファイル 中 で の 行 番号 を 返 し ま す 。 
最後 に 読み込 ま れ た 行 が ファイル の 1 行 目 なら True 、 そう で な けれ ば False を 返 し ま す 。 
最後 に 読み込 ま れ た 行 が sys . stdin から 読 ま れ て い れ ば True 、 そう で な けれ ば False を 返 し ま す 。 
ファイル 名 は 次 の ファイル の 最初 の 行 が 読み込 ま れ る まで 変更 さ れ ま せ ん 。 
最初 の 行 の 読み込 み が 行 わ れ る まで は 、 この 関数 は 呼び出 さ れ て も 何 も し ま せ ん の で 、 最初 の ファイル を スキップ する ため に 利用 する こと は でき ま せ ん 。 
最後 の ファイル の 最終 行 が 読み込 ま れ た 後 に も 、 この 関数 は 呼び出 さ れ て も 何 も し ま せ ん 。 
シーケンス を 閉じ ま す 。 
この モジュール の シーケンス の 振舞い を 実装 し て い る クラス の サブ クラス を 作 る こと も でき ま す 。 
クラス FileInput
FileInput クラス は モジュール の 関数 に 対応 する メソッド filename ( ) 、 lineno ( ) 、 fileline ( ) 、 isfirstline ( ) 、 isstdin ( ) 、 nextfile ( ) 、 close ( ) を 実装 し て い ま す 。 
それ に 加え て 、 次 の 入力 行 を 返 す readline ( ) メソッド と 、 シーケンス の 振舞い の 実装 を し て い る _ _ getitem__( ) メソッド が あ り ま す 。 
シーケンス は シーケンシャル に 読み込 む こと しか でき ま せ ん 。  つまり ランダム アクセス と readline ( ) を 混在 さ せ る こと は でき ま せ ん 。 
その 場 で 保存 する オプション 機能 :  キー ワード 引数 
inplace = 1  が  input ( ) か FileInput クラス の コンストラクタ に 渡 さ れ た 場合 に は 、 入力 ファイル は バックアップ ファイル に 移動 さ れ 、 標準 出力 が 入力 ファイル に 設定 さ れ ま す ( バックアップ ファイル と 同じ 名前 の ファイル が 既に 存在 し て い た 場合 に は 、 警告 無し に 置き替え られ ま す ) 。  これ に よ っ て 入力 ファイル を その 場 で 書き替え る フィルタ を 書 く こと が でき ま す 。 
キー ワード 引数 
その 場 で 保存 する 機能 は 、 標準 入力 を 読み込 ん で い る 間 は 無効 に さ れ ま す 。 
警告 :  現在 の 実装 は MS - DOS の 8 + 3 ファイル システム で は 動作 し ま せ ん 。 
この モジュール の ルーチン を 使 う と 、 Python プログラム から ファインダ が 持 つ いく つ か の 機能 へ アクセス でき ま す 。 
これ ら の 機能 は ファインダ へ の AppleEvent 
ファインダ に file を 起動 する よう に 命令 し ま す 。 
起動 が 意味 する もの は file に 依存 し ま す 。  アプリケーション なら 起動 し ま す し 、 フォルダ なら 開 か れ 、 文書 なら 適切 な アプリケーション で 開 か れ ま す 。 
ファインダ に ファイル を 印刷 する よう 命令 し ま す 。 
実際 の 動作 は ファイル を 選択 し 、 ファインダ の ファイル メニュー から 印刷 コマンド を 使 う の と 同じ で す 。 
ファインダ に ファイル か フォルダ で あ る file を フォルダ destdir に コピー する よう 命令 し ま す 。 
この 関数 は 新し い ファイル を 示 す Alias オブジェクト を 返 し ま す 。 
ファインダ に ファイル か フォルダ で あ る file を フォルダ destdir に 移動 する よう に 命令 し ま す 。 
マシン が サポート し て い れ ば 、 ファインダ に Macintosh を スリープ さ せ る よう 命令 し ま す 。 
ファインダ に 、 マシン を 適切 に 再 起動 する よう 命令 し ま す 。 
ファインダ に 、 マシン を 適切 に シャットダウン する よう 命令 し ま す 。 
を 使 う の に 必要 な シンボル 定数 が 定義 さ れ て い ま す ( 上記 参照 ) ; これ ら は 名前 の 接頭 辞 " FL _ " が 省 か れ て い る こと を 除 い て 、 C の ヘッダ ファイル forms . h に 定義 さ れ て い る もの と 同じ で す 。 
定義 さ れ て い る 名称 の 完全 な リスト に つ い て は 、 モジュール の ソース を ご覧 くださ い 。 
お 勧め する 使 い 方 は 以下 の 通り で す : 
へ の インターフェース を 提供 し ま す 。 
FORMS ライブラリ の ソース は anonymous  ftp " ftp . cs . ruu. nl " の SGI \/ FORMS ディレクトリ から 入手 でき ま す 。 
最新 の テスト は バージョン 2 . 0 b で 行 い ま し た 。  ほとんど の 関数 は 接頭 辞 の " fl _ " を 取 る と 、 対応 する C の 関数 名 に な り ま す 。 
ライブラリ で 使 わ れ る 定数 は 後述 の 
しかし 、 GL イベント ハンドル へ の FORMS インターフェース が 利用 可能 で 、 純粋 な GL ウィンドウ に FORMS を 組み合わせ る こと が でき ま す 。 
注意 :  fl を インポート する と 、 GL の 関数 foreground ( ) と FORMS の ルーチン fl _ init ( ) を 呼び出 し ま す 。 
この モジュール に は 、 FORMS ライブラリ ( 上記 の 
この モジュール は IRIS  Font  Manager ライブラリ へ の アクセス を 提供 し ま す 。 
フォント ハンドル オブジェクト を 返 し ま す 。  fmfindfont ( fontname ) を 呼び出 し ま す 。 
利用 可能 な フォント 名 の リスト を 返 し ま す 。  この 関数 は fmenumerate ( ) へ の インターフェース で す 。 
現在 の フォント を 使 っ て 文字 列 を レンダリング し ま す ( 下 の フォント ハンドル メソッド setfont ( ) を 参照 ) 。  fmprstr ( string ) を 呼び出 し ま す 。 
現在 の フォント 検索 パス を 返 し ま す 。 
フォント ハンドル オブジェクト は 以下 の 操作 を サポート し ま す : 
scale font  ( フォント ハンドル メソッド ) ( 
この フォント を 拡大 \/ 縮小 し た ハンドル を 返 し ま す 。  fmscale font ( fh , factor ) を 呼び出 し ま す 。 
setfont  ( フォント ハンドル メソッド ) ( 
getfontname  ( フォント ハンドル メソッド ) ( 
この フォント の 名前 を 返 し ま す 。  fmgetfontname ( fh ) を 呼び出 し ま す 。 
getcomment  ( フォント ハンドル メソッド ) ( 
この フォント に 関連 付け られ た コメント 文字 列 を 返 し ま す 。 
コメント 文字 列 が 何 も な けれ ば 例外 を 返 し ま す 。  fmgetcomment ( fh ) を 呼び出 し ま す 。 
getfontinfo  ( フォント ハンドル メソッド ) ( 
この フォント に 関連 し た データ を 含 む タプル を 返 し ま す 。 
これ は fmgetfontinfo ( ) へ の インターフェース で す 。  以下 の 数値 を 含 む タプル を 返 し ま す : ( 
printermatched 、 fixed_width 、 xorig 、 yorig 、 xsize 、 ysize 、 height 、 nglyphs
) 。 
getstrwidth  ( フォント ハンドル メソッド ) ( 
この フォント で string を 描 い た とき の 幅 を ピクセル 数 で 返 し ま す 。  fmgetstrwidth ( fh , string ) を 呼び出 し ま す 。 
この モジュール は Unix  の シェル 形式 の ワイルド カード へ の 対応 を 提供 し ま す が 、 ( 
モジュール で ドキュメント 化 さ れ て い る ) 正規 表現 と 同じ で は あ り ま せ ん 。 
シェル 形式 の ワイルド カード で 使 わ れ る 特別 な 文字 は 、 
すべて に マッチ し ま す 
任意 の 一 文字 に マッチ し ま す 
seq に あ る 任意 の 文字 に マッチ し ま す 
seq に な い 任意 の 文字 に マッチ し ま す 
ファイル 名 の セパレーター ( Unix で は '\/') は この モジュール に 固有 な もの で は  な い  こと に 注意 し て くださ い 。 
パス 名 展開 に つ い て は 、 
モジュール を 参照 し て くださ い ( 
は パス 名 の 部分 に マッチ さ せ る の に fnmatch ( ) を 使 っ て い ま す ) 。 
同様 に 、 ピリオド で 始ま る ファイル 名 は この モジュール に 固有 で は な く て 、 * と ?  の パターン で マッチ し ま す 。 
filename の 文字 列 が pattern の 文字 列 に マッチ する か テスト し て 、 真 、 偽 の いずれ か を 返 し ま す 。 
オペレーティング システム が 大 文字 、 小 文字 を 区別 し な い 場合 、 比較 を 行 う 前 に 、 両方 の パラメタ を 全て 大 文字 、 また は 全て 小 文字 に 揃え ま す 。 
オペレーティング システム が 標準 で どう な っ て い る か に 関係 な く 、 大小 文字 を 区別 し て 比較 し た い 場合 に は 、 fnmatchcase ( )  を 代わり に 使 っ て くださ い 。 
filename  が  pattern  に マッチ する か テスト し て 、 真 、 偽 を 返 し ま す 。  比較 は 大 文字 、 小 文字 を 区別 し ま す 。 
pattern  に マッチ する  names  の リスト の 部分 集合 を 返 し ま す 。 
[ n  for n in  namesiffnmatch ( n ,  pattern ) ] と 同じ で す が 、 もっと 効率 よ く 実装 し て い ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
Unix  シェル 形式 の パス 展開 。  . 
この モジュール で は 、 二 つ の インタフェース 定義 を 提供 し て お り 、 それ ら の 各 インタフェース に つ い て 複数 の 実装 を 提供 し て い ま す 。 
formatter  インタフェース は 
モジュール の HTMLParser  クラス で 使 わ れ て お り 、 writer  インタフェース は  formatter  インタフェース を 使 う 上 で 必要 で す 。 
formatter  オブジェクト は あ る 抽象 化 さ れ た 書式 イベント の 流れ を writer  オブジェクト 上 の 特定 の 出力 イベント に 変換 し ま す 。 
formatter  は いく つ か の スタック 構造 を 管理 する こと で 、 writer  オブジェクト の 様々 な 属性 を 変更 し たり 復元 し たり でき る よう に し て い ま す ;  この ため 、 writer  は 相対 的 な 変更 や  `` 元 に 戻 す ' '  操作 を 処理 でき な く て も かま い ま せ ん 。 
writer  の 特定 の プロパティ の うち 、 formatter  オブジェクト を 介 し て 制御 でき る の は 、 水平 方向 の 字 揃え 、 フォント 、 そして 左 マージン の 字下げ で す 。 
任意 の 、 非 排他 的 な スタイル 設定 を  writer  に 提供 する ため の メカニズム も 提供 さ れ て い ま す 。 
さらに 、 段落 分割 の よう に 、 可逆 で な い 書式 化 イベント の 機能 を 提供 する インタフェース も あ り ま す 。  writer  オブジェクト は デバイス インタフェース を カプセル 化 し ま す 。 
ファイル 形式 の よう な 抽象 デバイス も 物理 デバイス 同様 に サポート さ れ て い ま す 。 
ここ で 提供 さ れ て い る 実装 内容 は すべて 抽象 デバイス 上 で 動作 し ま す 。 
デバイス インタフェース は  formatter  オブジェクト が 管理 し て い る プロパティ を 設定 し 、 データ を 出力 端 に 書き込め る よう に し ま す 。 
3 . 3 . 3  拡張 型 に お け る 弱 参照 
ほとんど の コンピュータ は いわゆる IEEE - 754 標準 に 準拠 し た 浮動 小数 点 演算 
( 上 の 例 は 多く の プラット ホーム で 動作 し ま す 。 
SIG FPE を 生成 する よう に 切り替え 、 適切 な シグナル ハンドラ を 設定 し ま す 。 
浮動 小数 点 例外 の デフォルト の 処理 に 再 設定 し ま す 。 
turnon_sigfpe ( ) が 実行 さ れ た 後 に 、 IEEE - 754 例外 で あ る Division  by Zero 、 Overflow また は Invalid  operation の 一 つ を 発生 する 浮動 小数 点 演算 は 、 次 に この 標準 Python 例外 を 発生 し ま す 。 
注意 : This  module  is unneeded: everything  here  couldbe done  via the%string  interpolation operator .  fpformat  モジュール は 浮動 小数 点数 の 表示 を  100 %  純粋 に  Python  だけ で 行 う ため の 関数 を 定義 し て い ま す 。 
注意 : この モジュール は 必要 あ り ま せ ん :  この モジュール の すべて の こと は 、 %  を 使 っ て 、 文字 列 の 補間 演算 に よ り 可能 で す 。 
fpformat  モジュール は 次 に あげ る 関数 と 例外 を 定義 し て い ま す 。 
x  を  [ - ] ddd . ddd  の 形 に フォーマット し ま す 。  小数 点 の 後ろ に  digs  桁 と 、 小数 点 の 前 に 少な く とも 1 桁 で す 。 
vardigs =  0  の 場合 、 小数 点 以下 は 切り捨て られ ま す 。 
x  を  [ - ] d . dddE [ + - ] ddd  の 形 に フォーマット し ま す 。  小数 点 の 後ろ に  digs  桁 と 、 小数 点 の 前 に 1 桁 だけ で す 。 
vardigs =  0  の 場合 、 1 桁 だけ 残 さ れ 、 小数 点 以下 は 切り捨て られ ま す 。 
fix ( )  や sci ( )  に パラメータ と し て 渡 さ れ た 文字 列  x  が 数字 と し て 認識 でき な かっ た 場合 、 例外 が 発生 し ま す 。  標準 の 例外 が 文字 列 の 場合 、 この 例外 は  ValueError  の サブ クラス で す 。 
例外 値 は 、 例外 を 発生 さ せ た 不 適切 に フォーマット さ れ た 文字 列 で す 。 
この モジュール で は FTP クラス と 、 それ に 関連 する いく つ か の 項目 を 定義 し て い ま す 。  FTP クラス は 、 FTP プロトコル の クライアント 側 の 機能 を 備え て い ま す 。 
モジュール も FTP を 使 う URL を 操作 する の に この クラス を 使 っ て い ま す 。 
FTP  ( File  Transfer  Protocol ) に つ い て の 詳し い 情報 は Internet  RFC  959 を 参照 し て 下さ い 。  ftplib モジュール を 使 っ た サンプル を 以下 に 示 し ま す : 
from  ftplib import FTP  ftp= FTP ( ' ftp . cwi. nl') # ホスト の デフォルト ポート へ 接続  ftp . login ( ) # ユーザ 名  anonymous 、 パスワード  anonyumous @ ftp . retrlines ( ' LIST ') # ディレクトリ の 内容 を リスト アップ total  24418 drwxrwsr - x  5  ftp -usr  pdmaint  1536  Mar  20  0 9 : 48  . dr - xr - srwt 105  ftp -usr  pdmaint  1536  Mar  21  14 : 32  . . - rw - r -- r- -  1  ftp -usr  pdmaint  530 5  Mar  20  0 9 : 48  INDEX . . .  ftp . retrbinary ( ' RETR  README ' ,  open ( ' README ' , 'wb') . write ) ' 226  Transfer  complete . ' ftp . quit ( ) 
この モジュール は 以下 の 項目 を 定義 し て い ま す : 
クラス FTP 
FTP クラス の 新し い インスタンス を 返 し ま す 。 
host が 与え られ る と 、 connect ( host ) メソッド が 実行 さ れ ま す 。 
user が 与え られ る と 、 さらに login ( user ,  passwd, aracct ) メソッド が 実行 さ れ ま す ( この passwd と acct は 指定 さ れ な けれ ば デフォルト で は 空 文字 列 で す ) 。 
FTP インスタンス の メソッド の 結果 、 FTP 接続 で ( プログラミング の エラー と 考え られ る メソッド の 実行 に よ っ て ) 発生 する 全て の 例外 ( タプル 形式 ) 。 
この 例外 に は 以下 の 4 つ の エラー は もちろん 、 socket . error と IOError も 含 ま れ ま す 。 
サーバ から 想定 外 の 応答 が あ っ た 時 に 発生 する 例外 。 
400 - 499 の 範囲 の エラー 応答 コード を 受け取 っ た 時 に 発生 する 例外 。 
500 - 599 の 範囲 の エラー 応答 コード を 受け取 っ た 時 に 発生 する 例外 。 
1 - 5 の 数字 で 始ま ら な い 応答 コード を サーバ から 受け取 っ た 時 に 発生 する 例外 。 
. netrc ファイル フォーマット の パーザ 。 
. netrc ファイル は 、 FTP クライアント が ユーザ に プロンプト を 出 す 前 に 、 ユーザ 認証 情報 を ロード する の に よく 使 わ れ ま す 。  . 
Python の ソース ディストリビューション の Tools\/scripts\/ftpmirror . py 
_ _future_ _ は 実際 に モジュール で あ り 、 3 つ の 役割 が あ り ま す 。 
import  ステートメント を 解析 する 既存 の ツール を 混乱 さ せ る の を 避け 、 その ステートメント が インポート し よう と し て い る モジュール を 見つけ られ る よう に する ため 。 
いつ 互換 で な い 変化 が 導入 さ れ 、 いつ 強制 的 に な る  -  あるいは 、 なっ た  -  の か 文書 化 する ため 。 
これ は 実行 でき る 形式 で 書 か れ た ドキュメント で な の で 、 _ _future_ _ を インポート し 、 その 中身 を 調べ る よう プログラム すれ ば 確かめ られ ま す 。 
_ _future__. py  の 各 ステートメント は 次 の よう な 形 を し て い ま す : 
ここ で 、 普通 は 、 OptionalRelease  は  MandatoryRelease  より 小さ く 、 2 つ とも sys . version _info  と 同じ フォーマット の 5 つ の タプル から な り ま す 。 
CompilerFlag  は 動的 に コンパイル さ れ る コード で その 機能 を 有効 に する ため に 、 組み込 み 関数  compile ( )  の 第 4 引数 に 渡 さ れ な けれ ば な ら な い ( ビット フィールド ) フラグ で す 。 
この フラグ は _Future  インスタンス の  compilier_flag  属性 に 保存 さ れ て い ま す 。 __future_ _ で 解説 さ れ て い る 機能 の うち 、 削除 さ れ た もの は まだ あ り ま せ ん 。 
gc モジュール は 、 インタプリタ の ビルド オプション で 循環 ガベージ コレクタ を 有効 に し た 場合 のみ 使用 する こと が でき ま す ( デフォルト で 有効 ) 。 
もし 無効 に な っ て い る 場合 に この モジュール を インポート する と 、 ImportError が 発生 し ま す 。 
この モジュール は 、 循環 ガベージ コレクタ の 無効 化 ・ 検出 頻度 の 調整 ・ デバッグ オブション の 設定 など を 行 う インターフェース を 提供 し ま す 。 
また 、 検出 し た 到達 不能 オブジェクト の うち 、 解放 する 事 が でき な い オブジェクト を 参照 する 事 も でき ま す 。 
循環 ガベージ コレクタ は Pyhon の 参照 カウント を 補 う ため の もの で す の で 、 もし プログラム 中 で 循環 参照 が 発生 し な い 事 が 明らか な 場合 に は 検出 を する 必要 は あ り ま せ ん 。 
自動 検出 は 、 gc . disable ( ) で 停止 する 事 が でき ま す 。 
メモリ リーク を デバッグ する とき に は 、 gc. set_debug ( gc . DEBUG _ LEAK ) と し ま す 。 gc モジュール は 、 以下 の 関数 を 提供 し て い ま す 。 
自動 ガベージ コレクション を 有効 に し ま す 。 
自動 ガベージ コレクション を 無効 に し ま す 。 
自動 ガベージ コレクション が 有効 なら 真 を 返 し ま す 。 
全て の 検出 を 行 い ま す 。 
全て の 世代 を 検査 し 、 検出 し た 到達 不可 オブジェクト の 数 を 返 し ま す 。 
ガベージ コレクション の デバッグ フラグ を 設定 し ま す 。  デバッグ 情報 は sys . stderr に 出力 さ れ ま す 。 
デバッグ フラグ は 、 下 の 値 の 組み合わせ を 指定 する 事 が でき ま す 。 
現在 の デバッグ フラグ を 返 し ま す 。 
現在 、 追跡 し て い る オブジェクト の リスト を 返 し ま す 。 
ガベージ コレクション の 閾値 ( 検出 頻度 ) を 指定 し ま す 。 
threshold 0 を 0 に する と 、 検出 は 行 わ れ ま せ ん 。  GC は 、 オブジェクト を 、 走査 さ れ た 回数 に 従 っ て 3 世代 に 分類 し ま す 。 
新し い オブジェクト は 最も 若 い ( 0 世代 ) に 分類 さ れ ま す 。 
もし 、 その オブジェクト が ガベージ コレクション で 削除 さ れ な けれ ば 、 次 に 古 い 世代 に 分類 さ れ ま す 。 
もっとも 古 い 世代 は 2 世代 で 、 この 世代 に 属 する オブジェクト は 他 の 世代 に 移動 し ま せ ん 。 
ガベージ コレクタ は 、 最後 に 検出 を 行 っ て から 生成 ・ 削除 し た オブジェクト の 数 を カウント し て お り 、 この 数 に よ っ て 検出 を 開始 し ま す 。 
オブジェクト の 生成 数  -  削除 数  が threshold 0 より 大き く な る と 、 検出 を 開始 し ま す 。 
最初 は 0 世代 の オブジェクト のみ が 検査 さ れ ま す 。 
0 世代 の 検査 が threshold 1 回 実行 さ れ る と 、 1 世代 の オブジェクト の 検査 を 行 い ま す 。 
同様 に 、 1 世代 が threshold 2 回 検査 さ れ る と 、 2 世代 の 検査 を 行 い ま す 。 
現在 の 検出 閾値 を 、 ( threshold 0 ,  threshold 1 ,threshold 2 ) の タプル で 返 し ま す 。 
objs で 指定 し た オブジェクト の いずれ か を 参照 し て い る オブジェクト の リスト を 返 し ま す 。 
有効 な オブジェクト のみ を 取得 する 場合 、 get_referrers ( ) の 前 に collect ( ) を 呼び出 し て くださ い 。  get_referrers ( ) から 返 さ れ る オブジェクト は 作りかけ や 利用 でき な い 状態 で あ る 場合 が あ る の で 、 利用 する 際 に は 注意 が 必要 で す 。 
get_referrers ( ) を デバッグ 以外 の 目的 で 利用 する の は 避け て くださ い 。 
引数 で 指定 し た オブジェクト の いずれ か から 参照 さ れ て い る 、 全て の オブジェクト の リスト を 返 し ま す 。 
参照 先 の オブジェクト は 、 引数 で 指定 し た オブジェクト の C レベル メソッド tp_traverse で 取得 し 、 全て の オブジェクト が 直接 到達 可能 な 全て の オブジェクト を 返 す わけ で は あ り ま せ ん 。 tp_traverse は ガベージ コレクション を サポート する オブジェクト のみ が 実装 し て お り 、 ここ で 取得 でき る オブジェクト は 循環 参照 の 一部 と な る 可能 性 の あ る オブジェクト のみ で す 。 
従 っ て 、 例えば 整数 オブジェクト が 直接 到達 可能 で あ っ て も 、 この オブジェクト は 戻 り 値 に は 含 ま れ ま せ ん 。 
到達 不能 で あ る こと が 検出 さ れ た が 、 解放 する 事 が でき な い オブジェクト の リスト ( 回収 不能 オブジェクト ) 。 
デフォルト で は 、 __ del_ _( ) メソッド を 持 つ オブジェクト のみ が 格納 さ れ ま す 。 
__ del_ _( ) メソッド を 持 つ オブジェクト が 循環 参照 に 含 ま れ て い る 場合 、 その 循環 参照 全体 と 、 循環 参照 から のみ 到達 する 事 が でき る オブジェクト は 回収 不能 と な り ま す 。 
この よう な 場合 に は 、 Python は 安全 に __ del_ _( ) を 呼び出 す 順番 を 決定 する 事 が でき な い ため 、 自動 的 に 解放 する こと は でき ま せ ん 。 
もし 安全 な 解放 順序 が わか る の で あ れ ば 、 garbage リスト を 参照 し て 循環 参照 を 破壊 する 事 が でき ま す 。 
循環 参照 を 破壊 し た 後 で も 、 その オブジェクト は garbage リスト から 参照 さ れ て い る ため 、 解放 さ れ ま せ ん 。 
解放 する ため に は 、 循環 参照 を 破壊 し た 後 、 del gc.garbage [ : ] の よう に garbage から オブジェクト を 削除 する 必要 が あ り ま す 。 
一般 的 に は __ del_ _( ) を 持 つ オブジェクト が 循環 参照 の 一部 と は な ら な い よう に 配慮 し 、 garbage は その よう な 循環 参照 が 発生 し て い な い 事 を 確認 する ため に 利用 する 方 が 良 い で しょ う 。  DEBUG_ SAVEALL が 設定 さ れ て い る 場合 、 全て の 到達 不能 オブジェクト は 解放 さ れ ず に この リスト に 格納 さ れ ま す 。 
以下 は set_debug ( ) に 指定 する こと の でき る 定数 で す 。 
検出 中 に 統計 情報 を 出力 し ま す 。 
この 情報 は 、 検出 頻度 を 最適 化 する 際 に 有益 で す 。 
回収 不能 オブジェクト は 、 garbade リスト に 追加 さ れ ま す 。 
DEBUG_ COLLECTABLE か DEBUG _ UNCOLLECTABLE が 設定 さ れ て い る 場合 、 見つか っ た インスタンス オブジェクト の 情報 を 出力 し ま す 。 
DEBUG_ COLLECTABLE か DEBUG _ UNCOLLECTABLE が 設定 さ れ て い る 場合 、 見つか っ た インスタンス オブジェクト 以外 の オブジェクト の 情報 を 出力 し ま す 。 
設定 さ れ て い る 場合 、 全て の 到達 不能 オブジェクト は 解放 さ れ ず に garbage に 追加 さ れ ま す 。 
これ は プログラム の メモリ リーク を デバッグ する とき に 便利 で す 。 
. . . 持 つ オブジェクト のみ が 格納 さ れ ま す 。 
Python  2 . 2 より 前 の バージョン で は 、 __ del_ _( ) メソッド を 持 つ オブジェクト だけ で な く 、 全て の 到達 不能 オブジェクト が 格納 さ れ て い た 。  ) 
この モジュール は 
モジュール に よく 似 て い ま す が 、 gdbm  を 使 っ て いく つ か の 追加 機能 を 提供 し て い ま す 。 
I\/ O  エラー の よう な  gdbm  特有 の エラー で 送出 さ れ ま す 。  誤 っ た キー の 指定 の よう に 、 一般 的 な マップ 型 の エラー に 対 し て は KeyError  が 送出 さ れ ま す 。 
gdbm  データベース を 開 い て  gdbm  オブジェクト を 返 し ま す 。 
' f '--  データベース を 高速 モード で 開 き ま す 。 
この モード で は データベース へ の 書き込み は ファイル システム と 同期 さ れ ま せ ん 。 
's '--  同期 モード で 開 き ま す 。 
データベース へ の 変更 は ファイル に 即座 い に 書き込 ま れ ま す 。 
' u '--  データベース を ロック し ま せ ん 。 
全て の バージョン の  gdbm  で 全て の フラグ が 有効 と は 限 り ま せ ん 。 
モジュール 定数  open _flags  は サポート さ れ て い る フラグ 文字 から な る 文字 列 で す 。 
無効 な フラグ が 指定 さ れ た 場合 、 例外  error が 送出 さ れ ま す 。  オプション の  mode  引数 は 、 新た に データベース を 作成 し な けれ ば な ら な い 場合 に 使 わ れ る  Unix  の ファイル モード で す 。 
標準 の 値 は  8  進数 の 0666  で す 。 
辞書 型 形式 の メソッド に 加え て 、 gdbm  オブジェクト に は 以下 の メソッド が あ り ま す : 
この メソッド と  next ( )  メソッド を 使 っ て 、 データベース の 全て の キー に わた っ て ループ 処理 を 行 う こと が でき ま す 。 
探索 は  gdbm  の 内部 ハッシュ 値 の 順番 に 行 わ れ 、 キー の 値 に 順 に 並 ん で い る と は 限 り ま せ ん 。 
データベース の 順 方向 探索 に お い て 、 key  より も 後 に 来る キー を 返 し ま す 。 
以下 の コード は データベース  db  に つ い て 、 キー 全て を 含 む リスト を メモリ 上 に 生成 する こと な く 全て の キー を 出力 し ま す : 
大量 の 削除 を 実行 し た 後 、 gdbm  ファイル の 占め る スペース を 削減 し た い 場合 、 この ルーチン は データベース を 再 組織 化 し ま す 。 
この 再 組織 化 を 使 う 以外 に  gdbm  は データベース ファイル の 大き さ を 短 く する こと は あ り ま せ ん ;  そう で な い 場合 、 削除 さ れ た 部分 の ファイル スペース は 保持 さ れ 、 新た な  ( キー 、 値 の )  ペア が 追加 さ れ る 際 に 再 利用 さ れ ま す 。 
データベース が 高速 モード で 開 か れ て い た 場合 、 この メソッド は ディスク に まだ 書き込 ま れ て い な い データ を 全て 書き込 ま せ ま す 。 
gensuitemodule  モジュール は  Apple Script  辞書 に よ っ て 特定 の アプリケーション に 実装 さ れ て い る  Apple Script  群 の ため の スタブ コード を 実装 し た  Python  パッケージ を 作成 し ま す 。  この モジュール は 、 通常 は  PythonIDE  から ユーザ に よ っ て 起動 さ れ ま す が 、 コマンドライン から スクリプト と し て 実行 する ( オプション と し て ヘルプ に  - -help  を 与え て み て くださ い ) こと も でき ま す し 、 Python  コード で イン ポート し て 利用 する 事 も でき ま す 。 
使用 例 と し て 、 どの よう に し て 標準 ライブラリ に 含 ま れ て い る スタブ パッケージ を 生成 する か 、  Mac\/scripts\/genallsuites . py  に あ る ソース を 見 て くださ い 。  この モジュール は 次 の 関数 を 定義 し て い ま す 。 
application  と し て パス 名 を 与え た アプリケーション が スクリプト 可能 で あ り そう な 場合 、 真 を 返 し ま す 。 
返り 値 は やや 不 確実 な 場合 が あ り ま す 。  Internet  Explorer  は スクリプト 不 可能 な よう に 見え て しま い ま す が 、 実際 は スクリプト 可能 で す 。 
パス 名 と し て 渡 さ れ た  application  の ため の スタブ パッケージ を 作成 し ま す 。 
dump  に は ファイル オブジェクト を 与え ま す 、 これ を 指定 する と リソース を 読取 っ た 後 に 停止 し て  processfile  が コード 化 し た 用語 リソース の  Python  表現 を ダンプ し ま す 。 
verbose  に も また ファイル オブジェクト を 与え 、 これ を 指定 する と  processfile  の 行な っ て い る 処理 の 詳細 を 出力 し ま す 。  processfile_ fromresource 
この 関数 は 、 用語 リソース を 得 る の に 異な る 方法 を 使用 する 以外 は 、 processfile  と 同じ で す 。 
この 関数 で は 、 リソース ファイル と し て  application  を 開 き 、 この ファイル から  " aete "  および  " aeut "  リソース を すべて 読み込 む 事 で 、 Apple Script  用語 リソース 読み込み を 行な い ま す 。 
3 番 目 の 引数 ( 省略 可能 ) を 設定 する こと で 、 GNU の ソフトウェア で サポート さ れ て い る よう な 長形式 の オプション も 利用 する こと が でき ま す 。  この モジュール は 1 つ の 関数 と 例外 を 提供 し て い ま す : 
コマンドライン オプション と パラメータ の リスト を 構文 解析 し ま す 。 args は 構文 解析 の 対象 に な る 引数 リスト で す 。 
これ は 先頭 の プログラム 名 を 除 い た もの で 、 通常 " sys . argv [ 1 : ] " で 与え られ ま す 。 options  は スクリプト で 認識 さ せ た い オプション 文字 と 、 引数 が 必要 な 場合 に は コロン ( " : " ) を つけ ま す 。 
つまり Unix の getopt ( ) と 同じ フォーマット に な り ま す 。 
注意 : GNU の  getopt ( ) と は 違 っ て 、 オプション で な い 引数 の 後 は 全て オプション で は な い と 判断 さ れ ま す 。  これ は  GNU で な い 、 Unix システム の 挙動 に 近 い もの で す 。 
long _options は 長形式 の オプション の 名前 を 示 す 文字 列 の リスト で す 。 
名前 に は 、 先頭 の ' - 
- ' は 含め ま せ ん 。 
引数 が 必要 な 場合 に は 名前 の 最後 に 等号 ( " = " ) を 入れ ま す 。 
長 形式 の オプション だけ を 受け つけ る ため に は 、 options は 空 文字 列 で あ る 必要 が あ り ま す 。 
長 形式 の オプション は 、 該当 する オプション を 一意 に 決定 でき る 長 さ まで 入力 さ れ て い れ ば 認識 さ れ ま す 。 
- long - option' ) と な り 、 引数 が 2 番 目 の 要素 に な り ま す 。 
引数 を と ら な い 場合 に は 空 文字 列 が 入 り ま す 。 
オプション は 見つか っ た 順 に 並 ん で い て 、 複数 回 同じ オプション を 指定 する こと が でき ま す 。 
長 形式 と 短形式 の オプション は 混在 さ せ る こと が でき ま す 。 
この 関数 は デフォルト で GNU スタイル の スキャン モード を 使 う 以外 は getopt ( ) と 同じ よう に 動作 し ま す 。 
つまり 、 オプション と オプション で な い 引数 と を 混在 さ せ る こと が でき ま す 。 
getopt ( ) 関数 は オプション で な い 引数 を 見つけ る と 解析 を やめ て しま い ま す 。  オプション 文字 列 の 最初 の 文字 が  ' + ' に する か 、 環境 変数 POSIXLY_ CORRECT を 設定 する こと で 、 オプション で な い 引数 を 見つけ る と 解析 を やめ る よう に 振舞い を 変え る こと が でき ま す 。 
引数 リスト の 中 に 認識 でき な い オプション が あ っ た 場合 か 、 引数 が 必要 な オプション に 引数 が 与え られ な かっ た 場合 に 発生 し ま す 。 
例外 の 引数 は 原因 を 示 す 文字 列 で す 。 
バージョン  1 . 6  で  変更  さ れ た 仕様 : GetoptError  は error の 別名 と し て 導入 さ れ ま し た 。 
GetoptError へ の エイリアス で す 。  後方 互換 性 の ため に 残 さ れ て い ま す 。 
Unix スタイル の オプション を 使 っ た 例 で す : 
長 形式 の オプション を 使 っ て も 同様 で す : 
スクリプト 中 で の 典型 的 な 使 い 方 は 以下 の よう に な り ま す : 
import getopt , sysdefmain ( ) :try : opts , args =  getopt . getopt ( sys . argv [ 1 : ] , " ho: v " ,  [ " help " ,  " output= " ] ) except  getopt . GetoptError : # ヘルプ メッセージ を 出力 し て 終了 u sage ( ) sys . exit ( 2 ) output =  Noneverbose  =  Falsefor  o , a in opts: if o== " - v " : verbose  =  Trueifo in  ( " - h " ,  " - -help " ) : u sage ( ) sys . exit ( ) if o in  ( " - o " ,  " - - output " ) : output = a # . . . if __name__== "_ _main__" :main ( ) 
より オブジェクト 指向 的 な コマンドライン オプション の パーズ を 提供 し ま す 。  . 
The  getpass  module  providestwofunctions : getpass モジュール は 二 つ の 機能 を 提供 し ま す : 
エコー なし で ユーザー に パスワード を 入力 さ せ る プロンプト 。 
ユーザー は prompt の 文字 列 を プロンプト に 使え ま す 、 デフォルト は ' Password : ' で す 。  利用 でき る システム :  Machintosh , Unix ,  Windows 
ユーザー の ` ` ログ イン 名 ' ' を 返 し ま す 。 
有効 性 : Unix 、 Windows この 関数 は 環境 変数 LOGNAME  USER  LNAME  USERNAME の 順序 で チェック し て 、 最初 の 空 で は な い 文字 列 が 設定 さ れ た 値 を 返 し ま す 。 
もし 、 なに も 設定 さ れ て い な い 場合 は pwd モジュール が 提供 する システム 上 の パスワード データベース から 返 し ま す 。 
それ 以外 は 、 例外 が 上が り ま す 。 
gettext  モジュール は 、  Python  に よ る モジュール や アプリケーション の 国際 化  ( I 18 N ,  I-nternationalizatio - N )  および 地域 化  ( L 10 N ,  L -ocalizatio - N )  サービス を 提供 し ま す 。  この モジュール は  GNU  gettext  メッセージ カタログ へ の  API  と 、 より 高 レベル で  Python  ファイル に 適 し て い る クラス に 基づ い た  API  の 両方 を サポート し て ま す 。 
以下 で 述べ る インタフェース を 使 う こと で 、 モジュール や アプリケーション の メッセージ を ある 自然 言語 で 記述 し て お き 、 翻訳 さ れ た メッセージ の カタログ を 与え て 他 の 異な る 自然 言語 の 環境 下 で 動作 さ せ る こと が でき ま す 。 
ここ で は  Python  の モジュール や アプリケーション を 地域 化 する ため の いく つ か の ヒント も 提供 し て い ま す 。 
6 . 28 . 2 . 1  NullTranslations  クラス 
6 . 28 . 2 . 2  GNUTranslations  クラス 
6 . 28 . 2 . 3  Solaris  メッセージ カタログ 機構 の サポート 
6 . 28 . 2 . 4  Catalog  コンストラクタ 
6 . 28 . 3 . 1  モジュール を 地域 化 する 
6 . 28 . 3 . 2  アプリケーション を 地域 化 する 
6 . 28 . 3 . 3  動作 中  (on the fly)  に 言語 を 切り替え る 
6 . 28 . 3 . 4  翻訳 処理 の 遅延 解決 
この モジュール に は Silicon  Graphics の Graphics  Library で 使 わ れ る C の ヘッダー ファイル gl \/ gl . h の 定数 が 定義 さ れ て い ま す 。  詳し く は モジュール の ソース ファイル を ご覧 くださ い 。 
この モジュール は Silicon  Graphics の Graphics  Library へ の アクセス を 提供 し ま す 。  Silicon  Graphics マシン 上 だけ で 利用 可能 で す 。 
警告 : GL ライブラリ の 不 適切 な 呼び出し に よ っ て は 、 Python インタープリタ が コア を 吐き出 す こと が あ り ま す 。  特に 、 GL の ほとんど の 関数 で は 最初 の ウィンドウ を 開 く 前 に 呼び出 す の は 安全 で は あ り ま せ ん 。 
この モジュール は とても 大き い の で 、 ここ に 全て を 記述 する こと は でき ま せ ん が 、 以下 の 説明 で 出発 点 と し て は 十分 で しょ う 。  C の 関数 の パラメータ は 、 以下 の よう な 決まり に 従 っ て Python に 翻訳 さ れ ま す : 
全て ( short 、 long 、 unsigned ) の 整数 値 ( int ) は Python の 整数 に 相当 し ま す 。 
全て の 浮動 小数 点数 と 倍 精度 浮動 小数 点数 は Python の 浮動 小数 点数 に 相当 し ま す 。  たいてい の 場合 、 Python の 整数 も 使え ま す 。 
全て の 配列 は Python の 一 次元 の リスト に 相当 し ま す 。  たいてい の 場合 、 タプル も 使え ま す 。 
全て の 文字 列 と 文字 の 引数 は 、 Python の 文字 列 に 相当 し ま す 。  例えば 、 winopen ( ' Hi  There ! ') と rotate ( 900 , ' z ') 。 
配列 で あ る 引数 の 長 さ を 特定 する ため だけ に 使 わ れ る 全て ( short 、 long 、 unsigned ) の 整数 値 の 引数 あるいは 返り 値 は 、 無視 さ れ ま す 。  例えば 、 C の 呼び出し で 、 
これ は Python で は 、 こう な り ま す 。 
これ は Python で は こう な り ま す 。 
以下 の 関数 は 一般 的 で な い か 、 引数 に 特別 な 決まり を 持 っ て い ま す : 
座標 は ( マニュアル ページ に あ る よう に ) 必要 で あ れ ば  z  =  0 . 0 と 仮定 し て 、 常 に 3 次元 の 精密 な 座標 に 変換 さ れ 、 各 座標 に つ い て v 3 d ( ) が 呼び出 さ れ ま す 。 
各 座標 と 各 法線 は ( x ,  y ,  z ) から な る タプル で な けれ ば な り ま せ ん 。  3 つ の 座標 が 渡 さ れ な けれ ば な り ま せ ん 。 
浮動 小数 点数 と 整数 を 混合 し て 使え ま す 。  各 ペア に つ い て 、 法線 に 対 し て n 3 f ( ) が 呼び出 さ れ 、 座標 に 対 し て v 3 f ( ) が 呼び出 さ れ ま す 。 
nvarray ( ) と 似 て い ま す が 、 各 ペア は 始め に 座標 を 、 2 番 目 に 法線 を 持 っ て い ま す 。 
nurbs ( 非 均一 有理 B スプライン ) 曲面 を 定義 し ま す 。 
ctl [ ] [ ] の 次元 は 以下 の よう に 計算 さ れ ま す : [ len (s_k) -s_ord ] 、 [ len (t_k) -t_ord ] 。 
nurbs ( 非 均一 有理 B スプライン ) 曲線 を 定義 し ま す 。 ctlpoints の 長 さ は 、 len ( knots)  -order 
区分 線形 曲線 ( piecewise - linear  curve ) を 定義 し ま す 。  points は 座標 の リスト で す 。 
type は N _ ST で な けれ ば な り ま せ ん 。 
これ ら の 関数 は ただ 一 つ の 引数 を 取 り 、 pick\/select に 使 う バッファ の サイズ を 設定 し ま す 。 
これ ら の 関数 は 引数 を 取 り ま せ ん 。 
pick\/select に 使 わ れ て い る バッファ の 大き さ を 示 す 整数 の リスト を 返 し ま す 。  バッファ が あふれ て い る の を 検出 する メソッド は あ り ま せ ん 。 
小さ い で す が 完全 な Python の GL プログラム の 例 を ここ に 挙げ ま す : 
Py OpenGL :  Python の OpenGL と の 結合 
へ の インターフェース が 利用 でき ま す ; 詳し く は Py OpenGL 
プロジェクト http:\/\/pyopengl . sourceforge . net\/ から 情報 を 入手 でき ま す 。 
これ は 、 SGI の ハードウェア が 1996 年頃 より 前 で あ る 必要 が な い の で 、 OpenGL の 方 が 良 い 選択 か も しれ ま せ ん 。 
glob  モジュール は Unix  シェル で 使 わ れ て い る ルール に 従 っ て 指定 さ れ た パターン に マッチ する すべて の パス 名 を 見つけ 出 し ま す 。 
チルダ 展開 は 使え ま せ ん が 、 * 、 ? と  [ ] で 表 さ れ る 文字 範囲 に は 正し く マッチ し ま す 。 
( チルダ 展開 と シェル 変数 展開 を 利用 し た けれ ば 、 os . path . expantion ( )  と os . path . expandvars ( ) を 使 っ て くださ い 。 
結果 に は ( シェル と 同じく ) 壊れ た シンボリック リンク も 含 ま れ ま す 。 
たとえば 、 次 の ファイル だけ が あ る ディレクトリ を 考え て くださ い :  1 . gif 、 2 . txt 、  and  card . gif 。  glob ( ) は 次 の よう な 結果 に な り ま す 。 
パス に 接頭 する どの 部分 が 保 た れ て い る か に 注意 し て くださ い 。 
シェル 形式 の ( パス で は な い ) ファイル 名 展開 . 
この モジュール で は 、 gopher  プロトコル の クライアント 側 に つ い て 最小 限 の 実装 を 提供 し て い ま す 。 
この モジュール は 
モジュール で gopher  プロトコル を 使 う  URL  を 扱 う ため に 用い られ ま す 。  この モジュール で は 以下 の 関数 を 定義 し て い ま す : 
selector  文字 列 を  host  および  port ( 標準 の 値 は  70  で す )  の gopher  サーバ に 送信 し ま す 。 
返信 さ れ た ドキュメント データ を 読み出 す ため の 、 開 か れ た 状態 の ファイル オブジェクト を 返 し ま す 。 
selector  文字 列 、 および query  文字 列 を  host  および  port  ( 標準 の 値 は  70  で す )  の gopher  サーバ に 送信 し ま す 。 
返信 さ れ た ドキュメント データ を 読み出 す ため の 、 開 か れ た 状態 の ファイル オブジェクト を 返 し ま す 。 
gopher  サーバ から 返 さ れ る データ は 任意 の 形式 で あ り 、 セレクタ  ( selector ) 文字 列 の 最初 の 文字 に 依存 する の で 注意 し て くださ い 。 
データ が テキスト ( セレクタ の 最初 の 文字 が  " 0 " )  の 場合 、 各行 は  CRLF  で 終端 さ れ 、 データ 全体 は  " . "  一 個 だけ から な る 行 で 終端 さ れ ま す 。  " . . "  で 始ま る 行 の 先頭 は  " . "  に 置き換え られ ま す 。 
ディレクトリ リスト  ( セレクタ の 最初 の 文字 が  " 1 " )  の 場合 に も 、 同じ プロトコル で 転送 さ れ ま す 。 
グループ 名 
( 暗号 化 さ れ た )  グループ パスワード ;  しばしば 空 文字 列 に な り ま す 
数字 の グループ  ID 
グループ メンバ の 全て の ユーザ 名 
gid  は 整数 、 名前 および パスワード は 文字 列 、 そして メン バリスト は 文字 列 から な る リスト で す 。  ( ほとんど の ユーザ は 、 パスワード データベース で 自分 が 入れ られ て い る グループ の メンバ と し て グループ データベース 内 で は 明示 的 に 列挙 さ れ て い な い の で 注意 し て くださ い 。 
完全 な メンバ 情報 を 取得 する に は 両方 の データベース を 調べ て くださ い 。  ) この モジュール で は 以下 の 内容 を 定義 し て い ま す : 
与え られ た グループ  ID  に 対 する グループ データベース エントリ を 返 し ま す 。  要求 し た エントリ が 見つか ら な かっ た 場合 、 KeyError  が 送出 さ れ ま す 。 
与え られ た グループ 名 に 対 する グループ データベース エントリ を 返 し ま す 。  要求 し た エントリ が 見つか ら な かっ た 場合 、 KeyError  が 送出 さ れ ま す 。 
全て の 入手 可能 な グループ エントリ を 返 し ま す 。  順番 は 決ま っ て い ま せ ん 。 
この モジュール と 類似 の 、 ユーザ データベース へ の インタフェース 。  . 
gzip  や  gunzip  プログラム で 解凍 でき る 、 compress  や  pack  に よ る 他 の 形式 の 圧縮 ファイル は この モジュール で は サポート さ れ て い な い の で 注意 し て くださ い 。  この モジュール で は 以下 の 項目 を 定義 し て い ま す : 
クラス GzipFile 
GzipFile  クラス の コンストラクタ で す 。  GzipFile  オブジェクト は  readinto ( )  と truncate ( )  メソッド を 除 く ほとんど の ファイル オブジェクト の メソッド を シミュレート し ま す 。 
値 は デフォルト で は  None  で 、 ファイル オブジェクト を 生成 する ため に  filename  を 開 き ま す 。  gzip  ファイル ヘッダ 中 に は 、 ファイル が 解凍 さ れ た とき の 元 の ファイル 名 を 収め る こと が でき ま す が 、 fileobj  が  None  で な い 場合 、 引数  filename  が ファイル 名 と し て 認識 でき る 文字 列 で あ れ ば 、 filename  は ファイル ヘッダ に 収め る ため だけ に 使 わ れ ま す 。 
デフォルト の 値 は  9  で す 。  圧縮 し た データ の 後ろ に さらに 何 か 追記 し た い 場合 も あ る の で 、 GzipFile  オブジェクト の  close ( )  メソッド 呼び出し は  fileobj  を クローズ し ま せ ん 。 
この 機能 に よ っ て 、 書き込み の ため に オープン し た  StringIO  オブジェクト を fileobj  と し て 渡 し 、 ( GzipFile  を  close ( )  し た 後 に ) StringIO  オブジェクト の  getvalue ( )  メソッド を 使 っ て 書き込 ん だ データ の 入 っ て い る メモリ バッファ を 取得 する こと が でき ま す 。 
compresslevel )  の 短縮 形 で す 。 
引数  filename  は 必須 で す 。  デフォルト で  mode  は 'rb ' に 、 compresslevel  は  9  に 設定 さ れ て い ま す 。 
gzip  ファイル 形式 の サポート を 行 う ため に 必要 な 基本 ライブラリ モジュール 。  . 
この モジュール で は ヒープ キュー アルゴリズム の 一 実装 を 提供 し て い ま す 。 
優先 度 キュー アルゴリズム と し て も 知 ら れ て い ま す 。 
ヒープ と は 、 全て の  k  に 対 し て 、 ゼロ から 要素 を 数え て い っ た 際 に 、 
heap [ 0 ]  が 常 に 最小 の 要素 に な る こと で す 。 
以下 の  API  は 教科 書 に お け る ヒー プ アルゴリズム と は  2  つ の 側面 で 異な っ て い ま す :  ( a )  ゼロ ベース の インデクス 化 を 行 っ て い ま す 。 
これ に よ り 、 ノード に 対 する インデクス と その 子 ノード の インデクス の 関係 が やや 明瞭 で な く な り ま す が 、 Python  は ゼロ ベース の インデクス 化 を 使 っ て い る の で より しっくり き ま す 。 
( b )  われわれ の  pop  メソッド は 最大 の 要素 で は な く 最小 の 要素  ( 教科 書 で は  " min  heap : 最小 ヒープ "  と 呼 ば れ て い ま す ; 教科 書 で は 並べ替え を イン プレース で 行 う の に 適 し た  " max  heap : 最大 ヒープ "  が 一般 的 で す ) 。  これ ら の  2  点 に よ っ て 、 ユーザ に 戸惑い を 与え る こと な く 、 ヒープ を 通常 の  Python  リスト と し て 見 る こと が でき ま す : 
heap [ 0 ]  が 最小 の 要素 と な り 、 
heap . sort ( )  は ヒープ を 不変 な まま に 保 ち ま す ! ヒープ を 作成 する に は 、 [ ]  に 初期 化 さ れ た リスト を 使 う か 、 heapify ( )  を 用い て 要素 の 入 っ た リスト を 変換 し ま す 。  以下 の 関数 が 提供 さ れ て い ま す : 
item を  heap  に push  し ま す 。  ヒープ を 不変 に 保 ち ま す 。 
pop  を 行 い 、 heap  から 最初 の 要素 を 返 し ま す 。  ヒープ は 不変 に 保 た れ ま す 。 
ヒープ が 空 の 場合 、 In dexError  が 送出 さ れ ま す 。 
リスト  x  を イン プレース 処理 し 、 線形 時間 で ヒープ に 変換 し ま す 。 
heap  から 最小 の 要素 を  pop  し て 返 し 、 新た に  item を push  し ま す 。 
返 さ れ る 値 は  item  より も 大き く な る か も しれ な い の で 気 を つけ て くださ い !  これ に よ り 、 この ルーチン の 合理 的 な 利用 法 は 条件 つ き 置換 の 一部 と し て 使 わ れ る こと に 制限 さ れ て い ま す 。 
使用 例 を 以下 に 示 し ま す : 
この モジュール で は さらに 2 つ の ヒープ に 基 く 汎用 関数 を 提供 し ま す 。 
iterable で 定義 さ れ る データ セット の うち 、 最大 値 から 降順 に n 個 の 値 の リスト を 返 し ま す 。 
以下 の コード と 同等 で す : sorted (iterable ,  reverse = True ) [ :n ]  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
iterable で 定義 さ れ る データ セット の うち 、 最小 値 から 昇順 に n 個 の 値 の リスト を 返 し ま す 。 
以下 の コード と 同等 で す : sorted (iterable) [ :n ] 
どちら の 関数 も n の 値 が 小さな 場合 に 最適 な 動作 を し ま す 。 
大きな 値 の 時 に は sorted ( ) 関数 の 方 が 効率 的 で す 。 
さらに 、 n = = 1 の 時 に は min ( ) および max ( )  関数 の 方 が 効率 的 で す 。 
この モジュール で は  RFC  2104  で 記述 さ れ て い る  HMAC  アルゴリズム を 実装 し て い ま す 。 
新た な  hmac  オブジェクト を 返 し ま す 。 
標準 で は 
モジュール に な っ て い ま す 。 
HMAC  オブジェクト は 以下 の メソッド を 持 っ て い ま す : 
hmac  オブジェクト を 文字 列  msg  で 更新 し ま す 。 
繰り返 し 呼び出し を 行 う と 、 それ ら の 引数 を 全て 結合 し た 引数 で 単一 の 呼び出し を し た 際 と 同じ に 等価 に な り ま す :  すなわち  m . update ( a ) ; m . update( b )  は m . update ( a  + b )  と 等価 で す 。 
これ まで  update ( )  メソッド に 渡 さ れ た 文字 列 の ダイジェスト 値 を 返 し ま す 。 
個 の 値 は  16  バイト の 文字 列  ( 
の 場合 )  か 、 20  バイト の 文字 列  ( 
の 場合 )  で 、 NULL  バイト を 含 む 非  ASCII  文字 が 含 ま れ る こと が あ り ま す 。 
digest ( )  と 似 て い ま す が 、 ダイジェスト 値 が 
の とき で 長 さ  32  文字  ( 
の とき で  40 文字 )  の  16 進 数字 のみ を 含 む 文字 列 で 返 さ れ ま す 。 
この 値 は 電子 メール や その 他 の 非 バイナリ 環境 で 値 を やり取り する 際 に 使 う こと が でき ま す 。 
hmac  オブジェクト の  ( `` クローン ' ' の )  コピー を 返 し ま す 。 
この コピー は 最初 の 部分 文字 列 が 共通 に な っ て い る 文字 列 の ダイジェスト 値 を 効率 よ く 計算 する ため に 使 う こと が でき ま す 。 
10 . 8  拡張 
この モジュール は _hotshot C  モジュール へ の より 良 い インターフェース を 提供 し ま す 。  Hotshot  は 既存 の 
に 置き換わ る もの で す 。 
その 大半 が  C  で 書 か れ て い る ため 、 
に 比べ パフォーマンス 上 の 影響 が はるか に 少な く 済 み ま す 。  hotshot プロファイラ は まだ スレッド 環境 で は うま く 動作 し ま せ ん 。 
測定 し た い コード 上 で プロファイラ を 実行 する ため に スレッド を 使 わ な い 版 の スクリプト を 使 う 方法 が 有用 で す 。 
クラス Profile 
プロファイラ ・ オブジェクト 。 
引数  logfile  は プロファイル ・ データ の ログ を 保存 する ファイル 名 で す 。 
引数  lineevents  は ソース コード の 1  行 ごと に イベント を 発生 さ せ る か 、 関数 の 呼び出 し \/ リターン の とき だけ 発生 さ せ る か を 指定 し ま す 。 
デフォルト の 値 は  0  ( 関数 の 呼び出 し \/ リターン の とき だけ ログ を 残 す ) で す 。 
引数  linetimings  は 時間 情報 を 記録 する か どう か を 指定 し ま す 。 
デフォルト の 値 は  1  ( 時間 情報 を 記録 する ) で す 。 
この モジュール は  hotshot  プロファイル ・ データ を 標準 の  pstats オブジェクト に ロード し ま す 。 
filename  から  hotshot  データ を 読み込 み 、 pstats . Stats  クラス の インスタンス を 返 し ま す 。 
profile  モジュール の  Stats  クラス . 
この モジュール で は entitydefs、 codepoint 2 name 、 entitydefs の 三 つ の 辞書 を 定義 し て い ま す 。 entitydefs は 
モジュール で  HTMLParser  クラス の entitydefs  メンバ を 定義 する ため に 使 わ れ ま す 。 
この モジュール で は  X HTML  1 . 0  で 定義 さ れ た 全て の エンティティ を 提供 し て お り 、 Latin - 1  キャラクタ セット  ( ISO - 885 9 - 1 ) の 簡単 な テキスト 置換 を 行 う 事 が でき ま す 。 
各  X HTML  1 . 0  エンティティ 定義 に つ い て 、 ISO  Latin - 1  に お け る 置換 テキスト へ の 対応 付け を 行 っ て い る 辞書 で す 。 
HTML の エンティティ 名 を Unicode の コード ポイント に 変換 する ため の 辞書 で す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。  codepoint 2 name 
Adictionary that  mapsUnicode codepoints to HTML entity names . Unicode の コード ポイント を HTML の エンティティ 名 に 変換 する ため の 辞書 で す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
この モジュール で は 、 ハイパー テキスト 記述 言語  ( HTML ,  HyperText  Mark - up  Language )  形式 で 書式 化 さ れ た テキスト ファイル を 解析 する ため の 基盤 と し て 役立 つ クラス を 定義 し て い ま す 。 
この クラス は  I \/ O  と 直接 的 に は 接続 さ れ ま せ ん --  この クラス に は メソッド を 介 し て 文字 列 形式 の 入力 を 提供 する 必要 が あ り 、 出力 を 生成 する に は  ` ` フォーマッタ  ( formatter ) ' ' オブジェクト の メソッド を 何 度 か 呼び出 さ な く て は な り ま せ ん 。 
HTMLParser  クラス は 、 機能 を 追加 する ため に 他 の クラス の 基底 クラス と し て 利用 する よう に 設計 さ れ て お り 、 ほとんど の メソッド が 拡張 し たり 上書き し たり でき る よう に な っ て い ま す 。 
さらに この クラス は 
モジュール で 定義 さ れ て い る  SGMLParser  クラス から 導出 さ れ て お り 、 その 機能 を 拡張 し て い ま す 。 
HTMLParser  の 実装 は 、 RFC  186 6 で 解説 さ れ て い る  HTML  2 . 0  記述 言語 を サポート し ま す 。 
formatter  で は  2  つ の フォーマッタ オブジェクト 実装 が 提供 さ れ て い ま す ;  フォーマッタ の インタフェース に つ い て の 情報 は 
モジュール の ドキュメント を 参照 し て くださ い 。 
以下 は  sgmllib . SGMLParser  で 定義 さ れ て い る インタフェース の 概要 で す : 
インスタンス に データ を 与え る ため の インタフェース は  feed ( ) メソッド で 、 この メソッド は 文字 列 を 引数 に 取 り ま す 。 
この メソッド に 一 度 に 与え る テキスト は 必要 に 応 じ て 多 く も 少な く も でき ま す ;  と い う の は  " p . feed ( a ) ; p . feed ( b ) "  は  " p . feed ( a + b ) "  と 同じ 効果 を 持 つ から で す 。 
与え られ た データ が 完全 な  HTML  マーク アップ 文 を 含 む 場合 、 それ ら の 文 は 即座 に 処理 さ れ ま す ;  不 完全 な マーク アップ 構造 は バッファ に 保存 さ れ ま す 。 
全て の 未 処理 データ を 強制 的 に 処理 さ せ る に は 、  close ( )  メソッド を 呼び出 し ま す 。  例えば 、 ファイル の 全 内容 を 解析 する に は : 
parser . feed (open ( 'myfile . html' ) . read ( ) ) parser . close ( )  の よう に し ま す 。 
HTML  タグ に 対 し て 意味 付け を 定義 する ため の インタフェース は とても 単純 で す :  サブ クラス を 導出 し て 、 start_tag ( ) 、 end_tag ( ) 、 あるいは  do_tag ( ) と い っ た メソッド を 定義 する だけ で す 。 
パーザ は これ ら の メソッド を 適切 な タイミング で 呼び出 し ま す :  start_tag 
や  do_tag ( )  は tag  . . .  の 形式 の 開始 タグ に 遭遇 し た 時 に 呼び出 さ れ ま す ; end_tag ( )  は tag  の 形式 の 終了 タグ に 遭遇 し た 時 に 呼び出 さ れ ま す 。 
H 1  . . .  \/ H 1  の よう に 開始 タグ が 終了 タグ と 対応 し て い る 必要 が あ る 場合 、 クラス 中 で start_tag ( )  が 定義 さ れ て い な けれ ば な り ま せ ん ; P  の よう に 終了 タグ が 必要 な い 場合 、 クラス 中 で は do_tag ( )  を 定義 し な けれ ば な り ま せ ん 。 
この モジュール で は パー ザクラス と 例外 を 一 つ づ つ 定義 し て い ま す : 
基底 と な る  HTML  パーザクラス で す 。 
X HTML  1 . 0  仕様  ( http:\/\/www . w 3 . rog \/ TR \/xhtml 1 )  勧告 で 要求 さ れ て い る 全て の エンティティ 名 を サポート し て い ま す 。 
HTMLParser  クラス が パーズ 処理 中 に エラー に 遭遇 し た 場合 に 送出 する 例外 で す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
抽象 化 さ れ た 書式 イベント の 流れ を writer  オブジェクト 上 の 特定 の 出力 イベント に 変換 する ため の インターフェース 。 
HTML  パーザ の ひと つ で す 。  やや 低 い レベル で しか 入力 を 扱え ま せ ん が 、 X HTML  を 扱 う こと が でき る よう に 設計 さ れ て い ま す 。 
` ` 広 く 知 ら れ て い る  HTML  ( HTML  as  deployed ) ' ' で は 使 わ れ て お ら ず かつ  X HTML  で は 正し く な い と さ れ る  SGML  構文 の いく つ か は 実装 さ れ て い ま せ ん 。  . 
X HTML  1 . 0  エンティティ に 対 する 置換 テキスト の 定義 。 
HTMLParser  の 基底 クラス 。 
この モジュール で は  HTTP  および  HTTPS  プロトコル の クライアント 側 を 実装 し て い る クラス を 定義 し て い ま す 。 
通常 、 この モジュール は 直接 使 い ま せ ん --
モジュール が HTTP  や  HTTPS  を 使 っ た  URL  を 扱 う 上 で この モジュール を 使 い ま す 。 
注意 : HTTPS  の サポート は 、 SSL  を サポート する よう に 
この モジュール で は 以下 の クラス を 提供 し て い ま す : 
クラス HTTPConnection 
HTTPConnection  インスタンス は 、 HTTP  サーバ と の 一 回 の トランザクション を 表現 し ま す 。 
インスタンス の 生成 は ホスト 名 と オプション の ポート 番号 を 与え て 行 い ま す 。  ポート 番号 を 指定 し な かっ た 場合 、 ホスト 名 文字 列 が 
の 形式 で あ れ ば 、 ホスト 名 から ポート 番号 を 導 き 、 そう で な い 場合 に は 標準 の  HTTP  ポート 番号  ( 80 )  を 使 い ま す 。 
例えば 、 以下 の 呼び出し は 全て 同じ サーバ の 同じ ポート に 接続 する インスタンス を 生成 し ま す : 
クラス HTTPSConnection 
HTTPConnection  の サブ クラス で 、 セキュア な サーバ と 通信 する ため に  SSL  を 使 い ま す 。 
標準 の ポート 番号 は  443 で す 。 key_ file に は 、 秘密 鍵 を 格納 し た PEM 形式 ファイル の ファイル 名 を 指定 し ま す 。 
この モジュール に おけ る 他 の 例外 クラス の 基底 クラス で す 。 
Exception  の サブ クラス で す 。 
HTTPException  サブ クラス で す 。 
HTTPException  の サブ クラス で す 。  ポート 番号 を 指定 し た もの の 、 その 値 が 数字 で な かっ たり 空 の オブジェクト で あ っ た 場合 に 送出 さ れ ま す 。 
HTTPException  の サブ クラス で す 。 
Improper ConnectionState  の サブ クラス で す 。 
HTTPException  の サブ クラス で す 。 
サーバ が 理解 でき な い  HTTP  状態 コード で 応答 し た 場合 に 送出 さ れ ま す 。 
この モジュール で 定義 さ れ て い る 定数 は 以下 の 通り で す : 
HTTP  プロトコル の 標準 の ポート  ( 通常 は  80 )  で す 。 
HTTPS  プロトコル の 標準 の ポート  ( 通常 は  443 )  で す 。 
また 、 整数 の 状態 コード に つ い て 以下 の 定数 が 定義 さ れ て い ま す : 
1 1 . 6 . 1  HTTPConnection  オブジェクト 
この モジュール で は 、 Macintosh の インターネット 設定  ( Internet  Config )  パッケージ へ の アクセス を 提供 し て い ま す 。 
この パッケージ に は インターネット プログラム の 設定 、 例えば メール アドレス 、 デフォルト の ホーム ページ など が 収録 さ れ て い ま す 。 
それ 以外 に も 、 インターネット 設定 に は  Macintosh  の クリエータ \/ タイプ と ファイル 名 の 拡張 子 と の 対応 付け や 、 ファイル の 転送 方法  ( バイナリ 、 アスキー など )  に 関 する 情報 が 収め られ て い ま す 。 
MacOS  9  以降 で は 、 この モジュール は 「 インターネット 」 と い う 名前 の コントロール パネル に な り ま し た 。 
この モジュール に は 、 icglue  と い う 低 水準 の 関連 モジュール が あ り 、 インターネット 設定 へ の 基本 的 な アクセス 機能 を 提供 し て い ま す 。 
ic モジュール 内部 で エラー が 生 じ た とき に 送出 さ れ る 例外 で す 。 
ic モジュール は 以下 の クラス と 関数 を 定義 し て い ま す : 
クラス IC 
インターネット 設定 オブジェクト を 作成 し ま す 。 
signature は 、 IC  の 設定 に 影響 を 及ぼ す 可能 性 の あ る 現在 の アプリケーション を 表 す 4 文字 の クリエータコード  ( デフォルト は ' Pyth')  で す 。 
オプション の 引数 ic  は 低 水準 モジュール で あらかじめ 作成 し て お い た icglue . icinstance で 、 別 の 設定 ファイル など から 設定 を 得 る 場合 に 便利 で す 。 
これ ら の 関数 は 、 後述 する 同名 の メソッド へ の 「 ショート カット 」 で す 。 
icopen  を インポート する と 、 組込 み  open ( )  を 新し い ファイル 用 に ファイル タイプ および クリエーター を 設定 する ため に  Internet Config を 使用 する バージョン に 置き換え ま す 。 
imageop モジュール は 画像 に 関 する 便利 な 演算 が ふく ま れ て い ま す 。  Python 文字 列 に 保存 さ れ て い る 8 また は 32 ビット の ピクセル から 構成 さ れ る 画像 を 操作 し ま す 。 
これ は gl . lrectwrite ( ) と 
モジュール が 使用 し て い る もの と 同じ フォーマット で す 。  モジュール は 次 の 変数 と 関数 を 定義 し て い ま す : 
この 例外 は ピクセル 当り の 未知 の ビット 数 など の すべて の エラー で 発生 さ せ られ ま す 。 
image は width × height の 大き さ で 、 psize バイト の ピクセル から 構成 さ れ な けれ ば な り ま せ ん 。 
x 0 、 y 0 、 x 1 および y 1 は gl . lrectread ( ) パラメータ と 同様 で す 。  すなわち 、 境界 は 新 画像 に 含 ま れ ま す 。 
新し い 境界 は 画像 の 内部 で あ る 必要 は あ り ま せ ん 。 
旧 画像 の 外側 に な る ピクセル は 値 を ゼロ に 設定 さ れ ま す 。 
x 0 が x 1 より 大き けれ ば 、 新 画像 は 鏡像 反転 さ れ ま す 。 
y 軸 に つ い て も 同じ こと が 適用 さ れ ま す 。 
その ため 、 コンピュータ で 作 っ た 画像 や ディザ 処理 さ れ た 画像 は 伸縮 し た 後見 た 目 が 良く あ り ま せ ん 。 
垂直 ローパス フィルタ 処理 を 画像 全体 に 行 い ま す 。 
それぞれ の 目標 ピクセル を 垂直 に 並 ん だ 二 つ の 元 ピクセル から 計算 する こと で 行 い ま す 。 
この ルーチン の 主な 用途 と し て は 、 画像 が インターレース 走査 の ビデオ 装置 に 表示 さ れ た 場合 に 極端 な ちらつき を 抑え る ため に 用い ま す 。  その ため 、 この 名前 が あ り ま す 。 
全 ピクセル を 二 値 化 する こと に よ っ て 、 深 さ 8 ビット の グレース ケール 画像 を 深 さ 1 ビット の 画像 へ 変換 し ま す 。 
処理 後 の 画像 は 隙間 な く 詰め込 ま れ 、 おそらく mono2grey ( ) の 引数 と し て しか 使い 道 が な い で しょ う 。 
( ばかばかし い ほど 単純 な ) ディザ 処理 アルゴリズム を 用い て 、 8 ビット グレース ケール 画像 を 1 ビット の モノクロ 画像 に 変換 し ま す 。 
1 ビット モノクロ が 象 画像 を 8 ビット の グレース ケール また は カラー 画像 に 変換 し ま す 。  入力 で 値 ゼロ の 全て の ピクセル は 出力 で は 値 p 0 を 取 り 、 値 0 の 入力 ピクセル は 出力 で は 値 p 1 を 取 り ま す 。 
白黒 の モノクロ 画像 を グレース ケール へ 変換 する ため に は 、 値 0 と 255 を それぞれ 渡 し て くださ い 。 
ディザ 処理 を 行 わ ず に 、 8 ビット グレース ケール 画像 を 4 ビット グレース ケール 画像 へ 変換 し ま す 。 
ディザ 処理 を 行 わ ず に 、 8 ビット グレース ケール 画像 を 2 ビット グレース ケール 画像 に 変換 し ま す 。 
ディザ 処理 を 行 い 、 8 ビット グレース ケール 画像 を 2 ビット グレース ケール 画像 へ 変換 し ま す 。 
dither 2mono ( ) に つ い て は 、 ディザ 処理 アルゴリズム は 現在 とても 単純 で す 。 
4 ビット グレース ケール 画像 を 8 ビット グレース ケール 画像 へ 変換 し ま す 。 
2 ビット グレース ケール 画像 を 8 ビット グレース ケール 画像 へ 変換 し ま す 。 
0  に セット する と 、 この モジュール の 関数 は 、 リトル エンディアン の システム で 以前 の バージョン と 互換 性 の な い 方法 で マルチ バイト ピクセル 値 を 表現 する よう に な り ま す 。 
この モジュール で は 三 つ の クラス 、 IMAP 4 ,  IMAP 4 _ SSL  と  IMAP 4_stream を 定義 し ま す 。  これ ら の クラス は  IMAP 4  サーバ へ の 接続 を カプセル 化 し 、 RFC  20 6 0  に 定義 さ れ て い る  IMAP 4rev 1  クライアント プロトコル の 大 規模 な サブセット を 実装 し て い ま す 。 
この クラス は  IMAP 4  ( RFC  1730 )  準拠 の サーバ と 後方 互換 性 が あ り ま す が 、 " STATUS "  コマンド は  IMAP 4  で は サポート さ れ て い な い の で 注意 し て くださ い 。  imaplib  モジュール 内 で は 三 つ の クラス を 提供 し て お り 、 IMAP 4  は 基底 クラス と な り ま す : 
クラス IMAP 4 
この クラス は 実際 の  IMAP 4  プロトコル を 実装 し て い ま す 。 
例外 は  IMAP 4  クラス の 属性 と し て 定義 さ れ て い ま す : 
何 ら か の エラー 発生 の 際 に 送出 さ れ る 例外 で す 。 
例外 の 理由 は 文字 列 と し て コンストラクタ に 渡 さ れ ま す 。 
IMAP 4  サーバ の エラー が 生じ る と 、 この 例外 が 送出 さ れ ま す 。 
この 例外 は  IMAP 4 . error  の サブ クラス で す 。 
通常 、 インスタンス を 閉じ 、 新た な インスタンス を 再び 生成 する こと で 、 この 例外 から 復旧 でき ま す 。 
この 例外 は 書き込み 可能 な メイル ボックス の 状態 が サーバ に よ っ て 変更 さ れ た 際 に 送出 さ れ ま す 。 
この 例外 は  IMAP 4 . error  の サブ クラス で す 。 
他 の 何 ら か の クライアント が 現在 書き込み 権限 を 獲得 し て お り 、 メイル ボックス を 開きなお し て 書き込み 権限 を 再 獲得 する 必要 が あ り ま す 。 
この モジュール で は もう 一 つ 、 安全  ( secure )  な 接続 を 使 っ た サブ クラス が あ り ま す : 
クラス IMAP 4 _ SSL 
IMAP 4  から 導出 さ れ た サブ クラス で 、 SSL  暗号 化 ソケット を 介 し て 接続 を 行 い ま す  ( この クラス を 利用 する ため に は  SSL  サポート 付き で コンパイル さ れ た  socket  モジュール が 必要 で す )  。 
host  が 指定 さ れ て い な い 場合 、 '' ( ローカル ホスト )  が 用い られ ま す 。 
port  が 省略 さ れ た 場合 、 標準 の  IMAP 4 - over - SSL  ポート 番号  ( 993 )  が 用い られ ま す 。 
keyfile  および  certfile  も オプション で す  -  これ ら は SSL  接続 の ため の  PEM  形式 の 秘密 鍵  ( private key)  と 認証 チェイン  ( certificate chain)  ファイル で す 。 
さらに もう 一 つ の サブ クラス は 、 子 プロセス で 確立 し た 接続 を 使用 する 場合 に 使用 し ま す 。 
クラス IMAP 4_stream 
IMAP 4  から 導出 さ れ た サブ クラス で 、 command を os . popen 2 ( ) に 渡 し て 作成 さ れ る  stdin\/stdout ディスク リプタ と 接続 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の ユーティリティ 関数 が 定義 さ れ て い ま す : 
IMAP 4  INTERNALDATE  文字 列 を 標準 世界 時  ( CoordinatedUniversal  Time ) に 変換 し ま す 。 
モジュール 形式 の タプル を 返 し ま す 。 
整数 を  [ A . .  P ]  から な る 文字 集合 を 用い て 表現 し た 文字 列 に 変換 し ま す 。 
IMAP 4  " FLAGS "  応答 を 個々 の フラグ から な る タプル に 変換 し ま す 。 
モジュール タプル を  IMAP 4  " INTERNALDATE " 表現 形式 に 変換 し ま す 。 
文字 列 形式 :  " DD -Mmm - YYYY  HH : MM : SS  + H HMM "  ( 二 重 引用 符 含 む )  を 返 し ま す 。 
IMAP 4  メッセージ 番号 は 、 メイル ボックス に 対 する 変更 が 行 わ れ た 後 に は 変化 し ま す ;  特に 、  " EXPUNGE "  命令 は メッセージ の 削除 を 行 い ま す が 、 残 っ た メッセージ に は 再度 番号 を 振りなお し ま す 。 
従 っ て 、 メッセージ 番号 で は な く 、  UID  命令 を 使 い 、 その  UID  を 利用 する よう 強 く 勧め ま す 。  モジュール の 末尾 に 、 より 拡張 的 な 使用 例 が 収め られ た テスト セクション が あ り ま す 。 
プロトコル に 関 する 記述 、 および プロトコル を 実装 し た サーバ の ソース と バイナリ は 、 全て  ワシントン 大学 の  IMAP  Information  Center ( http:\/\/www . cac . washington . edu\/imap\/)  に あ り ま す 。 
imgfile  モジュール は 、 Python  プログラム が  SGI  imglib  画像 ファイル  (.rgb  ファイル と し て も 知 ら れ て い ま す )  に アクセス でき る よう に し ま す 。 
この モジュール は 完全 な もの に は ほど遠 い で す が 、 その 機能 は あ る 状況 で 十分 役 に 立 つ もの な の で 、 ライブラリ で 提供 さ れ て い ま す 。 
現在 、 カラーマップ 形式 の ファイル は サポート さ れ て い ま せ ん 。  この モジュール で は 以下 の 変数 および 関数 が 定義 さ れ て い ま す : 
この 例外 は 、 サポート さ れ て い な い ファイル 形式 の 場合 の よう な 全て の エラー で 送出 さ れ ま す 。 
この 関数 は タプル  ( x ,  y ,  z )  を 返 し ま す 。  x  および  y  は 画像 の サイズ を ピクセル で 表 し た もの で 、 z  は ピクセル あたり の バイト 長 で す 。 
3  バイト の  RGB  ピクセル と 1  バイト の グレイス ケール ピクセル のみ が 現在 サポート さ れ て い ま す 。 
この 関数 は 指定 さ れ た ファイル 上 の 画像 を 読み出 し て 復号 化 し 、 Python  文字 列 と し て 返 し ま す 。 
この 文字 列 は  1  バイト の グレイス ケール ピクセル か 、 4  バイト の  RGBA  ピクセル に よ る もの で す 。 
左下 の ピクセル が 文字 列 中 の 最初 の ピクセル に な り ま す 。 
これ は  gl . lrectwrite ( ) に 渡 す の に 適 し た 形式 で す 。 
この 関数 は  read  と 同じ で す が 、 x  および  y  の サイズ に スケール さ れ た 画像 を 返 し ま す 。 
filter  および  blur  パラメタ が 省略 さ れ た 場合 、 単に ピクセル データ を 捨て たり 複製 し たり する こと に よ っ て スケール 操作 が 行 わ れ る の で 、 処理 結果 は 、 特に 計算 機上 で 合成 し た 画像 の 場合 に は およそ 完璧 と は いえ な い もの に な り ま す 。  そう する 代わり に 、 スケール 操作 後 に 画像 を 平滑 化 する ため に 用い る フィルタ を 指定 する こと が でき ま す 。 
サポート さ れ て い る フィルタ の 形式 は  'impulse' 、 ' box' 、 'triangle' 、 'quadratic ' 、 および 'gaussian' で す 。 
フィルタ を 指定 する 場合 、 blur  は オプション の パラメタ で 、 フィルタ の 不明瞭 化 度 を 指定 し ま す 。 
標準 の 値 は  1 . 0  で す 。 
readscaled ( )  は 正し い アスペクト 比 を まったく 維持 し よう と し な い の で 、 それ は ユーザ の 責任 に な り ま す 。 
この 関数 は 画像 の スキャン ライン の 読み書き を 下 から 上 に 向か っ て 行 う  ( フラグ が ゼロ の 場合 で 、 SGI  GL  互換 で す )  か 、 上 から 下 に 向か っ て 行 う  ( フラグ が  1  の 場合 で 、 X  互換 で す )  か を 決定 する 大域 的 な フラグ を 設定 し ま す 。 
この 関数 は  data  中 の  RGB  また は グレイス ケール の データ を 画像 ファイル  file  に 書き込 み ま す 。 
x  および  y  に は 画像 の サイズ を 与え 、 z  は  1  バイト グレイス ケール 画像 の 場合 に は  1  で 、 RGB  画像 の 場合 に は  3  ( 4  バイト の 値 と し て 記憶 さ れ 、 下位  3  バイト が 使 わ れ ま す )  で す 。  これ ら は  gl . lrectread ( ) が 返 す データ の 形式 で す 。 
imghdr モジュール は ファイル や バイト ストリーム に 含 ま れ る 画像 の 形式 を 決定 し ま す 。  imghdr モジュール は 次 の 関数 を 定義 し て い ま す : 
filename と い う 名前 の ファイル 内 の 画像 データ を テスト し 、 画像 形式 を 表 す 文字 列 を 返 し ま す 。 
オプション の h が 与え られ た 場合 は 、 filename は 無視 さ れ 、 テスト する バイト ストリーム を 含 ん で い る と h は 仮定 さ れ ま す 。 
以下 に what ( ) から の 戻 り 値 と とも に リスト する よう に 、 次 の 画像 形式 が 認識 さ れ ま す : 
この 変数 に 追加 する こと で 、 あなた は imghdr が 認識 でき る ファイル 形式 の リスト を 拡張 でき ま す : 
個別 の テスト を 行 う 関数 の リスト 。 
この 
モジュール は import 文 を 実装 する ため に 使 わ れ て い る メカニズム へ の インターフェイス を 提供 し ま す 。 
次 の 定数 と 関数 が 定義 さ れ て い ま す : 
バイト コンパイル さ れ た コード ファイル (.pyc ファイル ) を 認識 する ため に 使 わ れ る マジック 文字 列 値 を 返 し ま す 。 
( この 値 は Python の 各 バージョン で 異な り ま す 。 
三 つ 組み の リスト を 返 し ま す 。 
それぞれ は モジュール の 特定 の 型 を 説明 し て い ま す 。 
各 三 つ 組み は 形式 ( suffix ,  mode ,type ) を 持 ち ま す 。  ここ で 、 suffix は 探 す ファイル 名 を 作 る ため に モジュール 名 に 追加 する 文字 列 で す 。 
検索 パス path 上 で モジュール name を 見つけ よ う と し ま す 。 
path が ディレクトリ 名 の リスト なら ば 、 上 の get_suffixes ( ) が 返 す 拡張 子 の いずれ か を 伴 っ た ファイル を 各 ディレクトリ の 中 で 検索 し ま す 。 
リスト 内 の 有効 で な い 名前 は 黙 っ て 無視 さ れ ま す ( しかし 、 すべて の リスト 項目 は 文字 列 で な けれ ば な ら な い ) 。 
path が 省略 さ れ る か None なら ば 、 sys . path の ディレクトリ 名 の リスト が 検索 さ れ ま す 。 
他 の 例外 は 引数 また は 環境 に 問題 が あ る こと を 示唆 し ま す 。  この 関数 は 階層 的 な モジュール 名 ( ドット を 含 ん だ 名前 ) を 扱 い ま せ ん 。 
P . M 、 すなわち 、 パッケージ P の サブ モジュール M を 見つけ る ため に は 、 パッケージ P を 見つけ て ロード する ため に find _ module ( ) と load _ module ( ) を 使 い 、 それ から 
P ._ _ path_ _ に 設定 さ れ た path 引数 と とも に find _ module ( ) を 使 っ て くださ い 。 
P 自身 が ドット 名 の とき は 、 この レシピ を 再帰 的 に 適用 し て くださ い 。 
find _ module ( ) を 使 っ て ( あるいは 、 互換 性 の あ る 結果 を 作り出 す 検索 を 行 っ て ) 以前 見つけ た モジュール を ロード し ま す 。 
name 引数 は ( これ が パッケージ の サブ モジュール なら ば パッケージ 名 を 含 む ) 完全 な モジュール 名 を 示 し ま す 。 
file 引数 は オープン し た ファイル で 、 filename は 対応 する ファイル 名 で す 。  モジュール が ファイル から ロード さ れ よう と し て い な い とき 、 これ ら は それぞれ None と ' ' で あ っ て も 構 い ま せ ん 。 
重要 : file 引数 が None で な けれ ば 、 例外 が 発生 し た 時 で さえ 呼び出 し 側 に は それ を 閉じ る 責任 が あ り ま す 。 
これ を 行 う に は 、 try  . . .  finally 文 を つか う こと が 最も 良 い で す 。 
name と い う 名前 の 新し い 空 モジュール オブジェクト を 返 し ま す 。 
この オブジェクト は sys . modules に 挿入 さ れ ま せ ん 。 
言い換え る と 、 元 の スレッド が その インポート ( および 、 もし あ る なら ば 、 それ に よ っ て 引き起こ さ れ る インポート ) の 途中 で 構築 し た 不 完全 な モジュール オブジェクト を 、 他 の スレッド が 見 られ な い よう に し ま す 。  acquire_lock 
実行 中 の スレッド で インタープリタ の インポート ロック を 取得 し ま す 。 
スレッド セーフ な インポート フック で は 、 インポート 時 に この ロック を 取得 し ま す 。  スレッド の な い プラット ホーム で は この 関数 は 何 も し ま せ ん 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。  release_lock 
整数 値 を も つ 次 の 定数 は この モジュール の 中 で 定義 さ れ て お り 、 find _ module ( ) の 検索 結果 を 表 す ため に 使 わ れ ま す 。 
ソース ファイル と し て モジュール が 発見 さ れ た 。 
コンパイル さ れ た コード オブジェクト ファイル と し て モジュール が 発見 さ れ た 。 
動的 に ロード 可能 な 共有 ライブラリ と し て モジュール が 発見 さ れ た 。 
モジュール が Macintosh リソース と し て 発見 さ れ た 。 
この 値 は Macintosh で のみ 返 さ れ る 。 
パッケージ ディレクトリ と し て モジュール が 発見 さ れ た 。 
モジュール が 組み込 み モジュール と し て 発見 さ れ た 。 
モジュール が フリーズ さ れ た モジュール と し て 発見 さ れ た ( init_ frozen ( ) を 参照 ) 。 
使 わ れ て い ま せ ん 。 
name と い う 名前 の 組み込 み モジュール を 初期 化 し 、 その モジュール オブジェクト を 返 し ま す 。 
モジュール が 既に 初期 化 さ れ て い る 場合 は 、 再度 初期 化 さ れ ま す 。 
いく つ か の モジュール は 二 度 初期 化 する こと が でき ま せ ん 。 --  これ を 再び 初期 化 し よう と する と 、 ImportError 例外 が 発生 し ま す 。 
name と い う 名前 の 組み込 み モジュール が な い 場合 は 、 None を 返 し ま す 。 
name と い う 名前 の フリーズ さ れ た モジュール を 初期 化 し 、 モジュール オブジェクト を 返 し ま す 。 
name と い う 名前 の フリーズ さ れ た モジュール が な い 場合 は 、 None を 返 し ま す 。 
( フリーズ さ れ た モジュール は Python で 書 か れ た モジュール で 、 その コンパイル さ れ た バイトコード オブジェクト が Python の freeze ユーティリティ を 使 っ て カスタム ビルト Python インタープリタ へ 組み込 ま れ て い ま す 。  差し当たり 、 Tools\/freeze \/ を 参照 し て くださ い 。 
name と い う 名前 の 再度 初期 化 でき る 組み込 み モジュール が あ る 場合 は 、 1 を 返 し ま す 。 
name と い う 名前 の 再度 初期 化 でき な い 組み込 み モジュール が あ る 場合 は 、 - 1 を 返 し ま す ( init_builtin ( ) を 参照 し て くださ い ) 。 
name と い う 名前 の 組み込 み モジュール が な い 場合 は 、 0 を 返 し ま す 。  is _frozen 
name と い う 名前 の フリーズ さ れ た モジュール ( init_ frozen ( ) を 参照 ) が あ る 場合 は 、 True を 返 し ま す 。  また は 、 その よう な モジュール が な い 場合 は 、 False を 返 し ま す 。 
バイト コンパイル さ れ た コード ファイル と し て 実装 さ れ て い る モジュール を ロード し て 初期 化 し 、 その モジュール オブジェクト を 返 し ま す 。 
モジュール が 既に 初期 化 さ れ て い る 場合 は 、 再度 初期 化 さ れ ま す 。 
name 引数 は モジュール オブジェクト を 作 っ たり 、 アクセス する ため に 使 い ま す 。 
pathname 引数 は バイト コンパイル さ れ た コード ファイル を 指 し ま す 。 
file 引数 は バイト コンパイル さ れ た コード ファイル で 、 バイナリ モード で オープン さ れ 、 先頭 から アクセス さ れ ま す 。  現在 は 、 ユーザ 定義 の ファイル を エミュレート する クラス で は な く 、 実際 の ファイル オブジェクト で な けれ ば な り ま せ ん 。 
動的 ロード 可能 な 共有 ライブラリ と し て 実装 さ れ て い る モジュール を ロード し て 初期 化 し ま す 。 
モジュール が 既に 初期 化 さ れ て い る 場合 は 、 再度 初期 化 し ま す 。 
いく つ か の モジュール で は それ が でき ず に 、 例外 を 発生 する か も しれ ま せ ん 。 
pathname 引数 は 共有 ライブラリ を 指 し て い な けれ ば な り ま せ ん 。 
name 引数 は 初期 化 関数 の 名前 を 作 る ため に 使 わ れ ま す 。  共有 ライブラリ の " initname ( ) " と い う 名前 の 外部 C 関数 が 呼び出 さ れ ま す 。 
オプション の file 引数 は 無視 さ れ ま す 。 
( 注意 :  共有 ライブラリ は システム に 大き く 依存 し ま す 。 
Python ソース ファイル と し て 実装 さ れ て い る モジュール を ロード し て 初期 化 し 、 モジュール オブジェクト を 返 し ま す 。 
モジュール が 既に 初期 化 さ れ て い る 場合 は 、 再度 初期 化 し ま す 。 
name 引数 は モジュール オブジェクト を 作成 し たり 、 アクセス し たり する ため に 使 わ れ ま す 。 
pathname 引数 は ソース ファイル を 指 し ま す 。 
file 引数 は ソース ファイル で 、 テキスト と し て 読み込 む ため に オープン さ れ 、 先頭 から アクセス さ れ ま す 。  現在 は 、 ユーザ 定義 の ファイル を エミュレート する クラス で は な く 、 実際 の ファイル オブジェクト で な けれ ば な り ま せ ん 。 
( 拡張 子 . pyc また は . pyo を も つ ) 正し く 対応 する バイト コンパイル さ れ た ファイル が 存在 する 場合 は 、 与え られ た ソース ファイル を 構文 解析 する 代わり に それ が 使 わ れ る こと に 注意 し て くださ い 。 
3 . 10 . 1  演算 子 から 関数 へ の 対応 表 
inspect は 、 モジュール ・ クラス ・ メソッド ・ 関数 ・ トレース バック ・ フレーム オブジェクト ・ コード オブジェクト など の オブジェクト から 情報 を 取得 する 関数 を 定義 し て お り 、 クラス の 内容 を 調べ る 、 メソッド の ソース コード を 取得 する 、 関数 の 引数 リスト を 取得 し て 整形 する 、 トレース バック から 必要 な 情報 だけ を 取得 し て 表示 する 、 など の 処理 を 行 う 場合 に 利用 し ま す 。 
この モジュール の 機能 は 、 型 チェック ・ ソース コード の 取得 ・ クラス \/ 関数 から 情報 を 取得 ・ インタープリタ の スタック 情報 の 調査 、 の 4 種類 に 分類 する 事 が でき ま す 。 
5 . 1 4 . 3  不変 に 自動 変換 する ため の プロトコル 
この モジュール で は イテレータ を 構築 する 部品 を 実装 し て い ま す 。  プログラム 言語 Haskell と SML から アイデア を 得 て い ま す が 、 Python に 適 し た 形 に 修正 さ れ て い ま す 。 
この モジュール は 、 高速 で メモリ 効率 に 優れ 、 単独 で も 組み合わせ て も 使用 する こと の でき る ツール を 標準 化 し た もの で す 。 
標準 化 に よ り 、 多数 の 個人 が 、 それぞれ の 好み と 命名 規約 で 、 それぞれ 少し だけ 異な る 実装 を 行 う 為 に 発生 する 可読 性 と 信頼 性 の 問題 を 軽減 する 事 が でき ま す 。 
ここ で 定義 し た ツール は 簡単 に 組み合わせ て 使用 する こと が でき る よう に な っ て お り 、 アプリケーション 固有 の ツール を 簡潔 かつ 効率 的 に 作成 する 事 が でき ま す 。  例えば 、 SML の 作表 ツール tabulate ( f ) は f ( 0 ) ,  f ( 1 ) , . . . の シーケンス を 作成 し ま す 。 
この ツール ボックス で は imap ( ) と count ( ) を 用意 し て お り 、 この 二 つ を 組み合わせ て imap ( f ,  count ( ) ) と すれ ば 同じ 結果 を 得 る 事 が でき ま す 。  同様 に 、 
この jpeg モジュール は In dependent  JPEG  Group 
( IJG ) に よ っ て 書 か れ た JEPG 圧縮 及び 展開 アルゴリズム を 提供 し ま す 。 
JPEG 形式 は 写真 等 の 画像 圧縮 で 標準 的 に 利用 さ れ 、 ISO  10918 で 定義 さ れ て ま す 。 
JPEG 、 あるいは In dependent  JPEG  Group ソフトウェア の 詳細 は 、 標準 JPEG 、 若しくは 提供 さ れ る ソフトウェア の ドキュメント を 参照 し て くださ い 。  JPEG ファイル を 扱 う ポータブル な インタフェース は Fredrik  Lundh に よ る Python  Imaging  Library  ( PIL ) が あ り ま す 。 
また 、 PIL の 情報 は http:\/\/www .pythonware . com\/products\/pil \/ で 見つけ る こと が でき ま す 。 
モジュール jpeg で は 、 一 つ の 例外 と いく つ か の 関数 を 定義 し て い ま す 。 
関数 compress ( ) また は decompress ( ) の エラー で 上げ られ る 例外 で す 。 
イメージ ファイル の 幅 w 、 高 さ h 、 1 ピクセル あたり の バイト 数 b を 引数 と し て 扱 い ま す 。 
データ は SGI  GL 順 に な っ て い て 、 最初 の ピクセル は 左下 端 に な り ま す 。 
形式 の イメージ が 含 ま れ た 文字 列 を 返 し ま す 。 
データ は 圧縮 さ れ た JFIF 
形式 の イメージ が 含 ま れ た 文字 列 で 、 この 関数 は タプル ( data , width , height , bytesperpixel ) を 返 し ま す 。 
また 、 その データ は gl . lrectwrite ( ) を 通過 し ま す 。 
compress ( ) と decompress ( ) を 呼 ぶ ため の 様々 な オプション を セット し ま す 。 
次 の オプション が 利用 でき ま す : 
オプション 
効果 
入力 が RGB で も 強制 的 に グレース ケール を 出力 し ま す 。 
圧縮 後 イメージ の 品質 を 0 から 100 の 間 の 値 で 指定 し ま す ( デフォルト は 75 で す ) 。 
これ は 圧縮 に のみ 影響 し ま す 。 
ハフマン テーブル を 最適 化 し ま す 。 
時間 が かか り ま す が 、 高圧縮 に な り ま す 。 
これ は 圧縮 に のみ 影響 し ま す 。 
圧縮 さ れ て い な い イメージ 上 で インター ブロックス ムーシング を 行 い ま す 。 
低 品質 イメージ に 役立 ち ま す 。 
これ は 展開 に のみ 影響 し ま す 。 
この モジュール で は 、 Python プログラム で 文字 列 が キー ワード か 否 か を チェック する 機能 を 提供 し ま す 。 
s が Python の キー ワード で あ れ ば 真 を 返 し ま す 。 
インタープリタ で 定義 し て い る 全て の キー ワード の シーケンス 。 
特定 の _ _future_ _ 宣言 が な けれ ば 有効 で は な い キー ワード で も この リスト に は 含 ま れ ま す 。 
linecache  モジュール は 、 キャッシュ ( 一 つ の ファイル から 何 行 も 読 ん で お く の が 一般 的 で す ) を 使 っ て 、 内部 で 最適 化 を 図 り つつ 、 任意 の ファイル の 任意 の 行 を 取得 する の を 可能 に し ま す 。 
この モジュール は 
モジュール で 、 インク ルード し た ソース を フォーマット さ れ た トレース バック で 復元 する の に 使 わ れ て い ま す 。  linecache  モジュール で は 次 の 関数 が 定義 さ れ て い ま す : 
filename  と い う 名前 の ファイル から  lineno  行目 を 取得 し ま す 。 
、 つまり 、  sys . path  で その ファイル を 探 し ま す 。 
キャッシュ を クリア し ま す 。 
それ まで に  getline ( )  を 使 っ て 読み込 ん だ ファイル の 行 が 必要 で な く な っ た ら 、 この 関数 を 使 っ て くださ い 。 
キャッシュ が 有効 か チェック し ま す 。 
キャッシュ し た ファイル に ディスク 上 で 変更 が あ っ た か も しれ な く て 、 更新 が 必要 な とき に この 関数 を 使 っ て くださ い 。 
もし filename が な けれ ば 、 全て の キャッシュ エントリ を チェック し ま す 。 
サンプル : 
locale  モジュール は  POSIX  ロケール データベース および ロケール 関連 機能 へ の アクセス を 提供 し ま す 。 
POSIX  ロケール 機構 を 使 う こと で 、 プログラマ は ソフトウェア が 実行 さ れ る 各国 に お け る 詳細 を 知 ら な く て も 、 アプリケーション 上 で 特定 の 地域 文化 に 関係 する 部分 を 扱 う こと が でき ま す 。  locale  モジュール は 、 _ locale 
を 被 う よう に 実装 さ れ て お り 、 ANSI  C  ロケール 実装 を 使 っ て い る _ locale  が 利用 可能 なら 、 こちら を 先 に 使 う よう に な っ て い ま す 。  locale  モジュール で は 以下 の 例外 と 関数 を 定義 し て い ま す : 
setlocale ( )  が 失敗 し た とき に 送出 さ れ る 例外 で す 。 
locale  を 指定 する 場合 、 文字 列 、 ( language  code , encoding ) 、 から な る タプル 、 また は None  を と る こと が でき ま す 。  locale  が タプル の の 場合 、 ロケール 別名 解決 エンジン に よ っ て 文字 列 に 変換 さ れ ま す 。 
locale  が 与え られ て い て 、 かつ  None  で な い 場合 、 setlocale ( )  は  category  の 設定 を 変更 し ま す 。 
変更 する こと の でき る カテゴリ は 以下 に 列記 さ れ て お り 、 値 は ロケール 設定 の 名前 で す 。 
空 の 文字 列 を 指定 する と 、 ユーザ の 環境 に おけ る 標準 設定 に な り ま す 。 
ロケール の 変更 に 失敗 し た 場合 、 Error  が 送出 さ れ ま す 。 
成功 し た 場合 、 新た な ロケール 設定 が 返 さ れ ま す 。  locale  が 省略 さ れ たり  None  の 場合 、 category  の 現在 の 設定 が 返 さ れ ま す 。 
setlocale ( )  は ほとんど の システム で スレッド 安全 で は あ り ま せ ん 。 
これ は 全て の カテゴリ を ユーザ の 環境 に おけ る 標準 設定  ( 大抵 は 環境 変数  LANG  で 指定 さ れ て い ま す ) に 設定 し ま す 。 
その 後 複数 スレッド を 使 っ て ロケール を 変更 し たり し な い 限り 、 問題 は 起こ ら な い はず で す 。 
バージョン  2 . 0  で  変更  さ れ た 仕様 : 引数  locale  の 値 と し て タプル を サポート し ま し た 。 
地域 的 な 慣行 の データベース を 辞書 と し て 返 し ま す 。  辞書 は 以下 の 文字 列 を キー と し て 持 っ て い ま す : 
キー 名 
カテゴリ 
小数 点 を 表 す 文字 で す 。 
'thousands_sep' が 来る か も しれ な い 場所 を 相対 的 に 表 し た 数 から な る 配列 で す 。 
配列 が  CHAR _ MAX  で 終端 さ れ て い る 場合 、 それ 以上 の 桁 で は 桁数 字 の グループ 化 を 行 い ま せ ん 。 
配列 が  0 で 終端 さ れ て い る 場合 、 最後 に 指定 し た グループ が 反復 的 に 使 わ れ ま す 。 
桁 グループ 間 を 区切 る ため に 使 わ れ る 文字 で す 。 
国際 通貨 を 表現 する 記号 で す 。 
地域 的 な 通貨 を 表現 する 記号 で す 。 
金額 表示 の 際 に 使 わ れ る 小数 点 で す 。 
金額 表示 の 際 に 桁 区切り 記号 で す 。 
'grouping '  と 同じ で 、 金額 表示 の 際 に 使 わ れ ま す 。 
正 の 値 の 金額 表示 に 使 わ れ る 記号 で す 。 
負 の 値 の 金額 表示 に 使 わ れ る 記号 で す 。 
金額 を 地域 的 な 方法 で 表現 する 際 の 小数 点 以下 の 桁数 で す 。 
金額 を 国際 的 な 方法 で 表現 する 際 の 小数 点 以下 の 桁数 で す 。 
'p _ sign_posn' および 'n_sing _ posn' の 取り 得 る 値 は 以下 の 通り で す 。 
説明 
通貨 記号 および 値 は 丸括弧 で 囲 わ れ ま す 。 
符号 は 値 と 通貨 記号 より 前 に 来 ま す 。 
符号 は 値 と 通貨 記号 の 後 に 続 き ま す 。 
符号 は 値 の 直前 に 来 ま す 。 
符号 は 値 の 直後 に 来 ま す 。 
この ロケール で は 特に 指定 し ま せ ん 。 
ロケール 特有 の 情報 を 文字 列 と し て 返 し ま す 。 
この 関数 は 全て の システム で 利用 可能 な わけ で は な く 、 指定 でき る  option  も プラットフォーム 間 で 大き く 異な り ま す 。 
引数 と し て 使え る の は 、 locale  モジュール で 利用 可能 な シンボル 定数 を 表 す 数字 で す 。 
標準 の ロケール 設定 を 取得 し よ う と 試み 、 結果 を タプル ( language  code , encoding )  の 形式 で 返 し ま す 。  POSIX に よ る と 、 setlocale ( LC _ ALL , '')  を 呼 ば な かっ た プログラム は 、 移植 可能 な  ' C ' ロケール 設定 を 使 い ま す 。 
setlocale ( LC _ ALL , '')  を 呼 ぶ こと で 、 LANG  変数 で 定義 さ れ た 標準 の ロケール 設定 を 使 う よう に な り ま す 。 
Python  で は 現在 の ロケール 設定 に 干渉 し た く な い の で 、 上 で 述べ た よう な 方法 で その 挙動 を エミュレーション し て い ま す 。  他 の プラットフォーム と の 互換 性 を 維持 する ため に 、 環境 変数  LANG だけ で な く 、 引数  envvars  で 指定 さ れ た 環境 変数 の リスト も 調べ られ ま す 。 
envvars  は 標準 で は  GNU  gettext  で 使 わ れ て い る サーチ パス に な り ま す ;  パス に は 必ず 変数 名  " LANG "  が 含 ま れ て い る から で す 。 
与え られ た ロケール カテゴリ に 対 する 現在 の 設定 を 、 language  code 、 encoding  を 含 む シーケンス で 返 し ま す 。 
テキスト データ を エンコード する 方法 を 、 ユーザ の 設定 に 基づ いて 返 し ま す 。 
与え た ロケール 名 を 規格 化 し た ロケール コード を 返 し ま す 。 
返 さ れ る ロケール コード は  setlocale ( )  で 使 う ため に 書式 化 さ れ て い ま す 。 
category  の ロケール を 標準 設定 に し ま す 。 
現在 の  LC _ COLLATE  設定 に 従 っ て 二 つ の 文字 列 を 比較 し ま す 。 
他 の 比較 を 行 う 関数 と 同じ よう に 、 string 1  が  string 2  に 対 し て 前 に 来る か 、 後 に 来る か 、 あるいは 二 つ が 等し い か に よ っ て 、 それぞれ 負 の 値 、 正 の 値 、 あるいは  0  を 返 し ま す 。 
文字 列 を 組み込 み 関数  cmp ( ) 
で 使え る 形式 に 変換 し 、 かつ ロケール に 則 し た 結果 を 返 し ま す 。 
この 関数 は 同じ 文字 列 が 何 度 も 比較 さ れ る 場合 、 例えば 文字 列 から な る シーケンス を 順序 付け て 並べ る 際 に 使 う こと が でき ま す 。 
数値  val  を 現在 の  LC _ NUMERIC  の 設定 に 基づ い て 書式 化 し ま す 。 
書式 は  %  演算 子 の 慣行 に 従 い ま す 。 
浮動 小数 点数 に つ い て は 、 必要 に 応 じ て 浮動 小数 点 が 変更 さ れ ま す 。 
grouping が 真 なら 、 ロケール に 配慮 し た 桁数 の 区切り が 行 わ れ ま す 。 
浮動 小数 点数 を  str ( float )  と 同じ よう に 書式 化 し ま す が 、 ロケール に 配慮 し た 小数 点 が 使 わ れ ま す 。 
文字 列 を  LC _ NUMERIC  で 設定 さ れ た 慣行 に 従 っ て 浮動 小数 点 に 変換 し ま す 。 
文字 列 を  LC _ NUMERIC  で 設定 さ れ た 慣行 に 従 っ て 整数 に 変換 し ま す 。 
文字 タイプ 関連 の 関数 の ため の ロケール カテゴリ で す 。 
この カテゴリ の 設定 に 従 っ て 、 モジュール 
に お け る 関数 の 振る舞い が 変わ り ま す 。 
文字 列 を 並べ替え る ため の ロケール カテゴリ で す 。 
locale モジュール の 関数  strcoll ( )  および  strxfrm ( )  が 影響 を 受け ま す 。 
時刻 を 書式 化 する ため の ロケール カテゴリ で す 。 
time. strftime( )  は この カテゴリ に 設定 さ れ て い る 慣行 に 従 い ま す 。 
設定 可能 な オプション は 関数  localeconv ( )  で 得 る こと が でき ま す 。 
メッセージ 表示 の ため の ロケール カテゴリ で す 。 
現在  Python  は アプリケーション 毎 に ロケール に 対応 し た メッセージ を 出力 する 機能 は サポート し て い ま せ ん 。 
os . strerror ( )  が 返 す よう な 、 オペレーティング システム に よ っ て 表示 さ れ る メッセージ は この カテゴリ に よ っ て 影響 を 受け ま す 。 
数字 を 書式 化 する ため の ロケール カテゴリ で す 。 
関数  format ( ) 、 atoi ( ) 、 atof ( )  および  locale  モジュール の  str ( )  が 影響 を 受け ま す 。 
他 の 数値 書式 化 操作 は 影響 を 受け ま せ ん 。 
全て の ロケール 設定 を 総合 し た もの で す 。 
ロケール を 変更 する 際 に この フラグ が 使 わ れ た 場合 、 その ロケール に おけ る 全て の カテゴリ を 設定 し よう と 試み ま す 。 
一 つ で も 失敗 し た カテゴリ が あ っ た 場合 、 全て の カテゴリ に お い て 設定 変更 を 行 い ま せ ん 。 
この フラグ を 使 っ て ロケール を 取得 し た 場合 、 全て の カテゴリ に お け る 設定 を 示 す 文字 列 が 返 さ れ ま す 。 
この 文字 列 は 、 後 に 設定 を 元 に 戻 す ため に 使 う こと が でき ま す 。 
localeconv ( )  の 返 す 特別 な 値 の ため の シンボル 定数 で す 。 
関数  nl_ langinfo  は 以下 の キー の うち 一 つ を 受理 し ま す 。  ほとんど の 記述 は  GNU C  ライブラリ 中 の 対応 する 説明 から 引用 さ れ て い ま す 。 
選択 さ れ た ロケール で 用い られ て い る 文字 エンコーディング の 名前 を 文字 列 で 返 し ま す 。 
時刻 および 日付 を ロケール 特有 の 方法 で 表現 する ため に 、  strftime ( 3 )  の 書式 化 文字 列 と し て 用い る こと の でき る 文字 列 を 返 し ま す 。 
日付 を ロケール 特有 の 方法 で 表現 する ため に 、  strftime ( 3 )  の 書式 化 文字 列 と し て 用い る こと の でき る 文字 列 を 返 し ま す 。 
時刻 を ロケール 特有 の 方法 で 表現 する ため に 、  strftime ( 3 )  の 書式 化 文字 列 と し て 用い る こと の でき る 文字 列 を 返 し ま す 。 
時刻 を  午前 \/ 午後 の 書式 で 表現 する ため に 、  strftime ( 3 )  の 書式 化 文字 列 と し て 用い る こと の でき る 文字 列 を 返 し ま す 。  返 さ れ る 値 は 
1  週間 中 の  n  番 目 の 曜日 名 を 返 し ま す 。 
警告 : ロケール  US  に お け る 、 DAY _ 1  を 日曜 日 と する 慣行 に 従 っ て い ま す 。  国際 的 な  ( ISO  86 0 1 ) 月曜 日 を 週 の 初め と する 慣行 で は あ り ま せ ん 。 
1  週間 中 の  n  番 目 の 曜日 名 を 略式 表記 で 返 し ま す 。 
n  番 目 の 月 の 名前 を 返 し ま す 。 
n  番 目 の 月 の 名前 を 略式 表記 で 返 し ま す 。 
基数 点  ( 小数 点 ドット 、 あるいは 小数 点 コンマ 、 等 )  を 返 し ま す 。 
1000  単位 桁 区切り  ( 3  桁 ごと の グループ 化 )  の 区切り 文字 を 返 し ま す 。 
肯定 \/ 否定 で 答え る 質問 に 対 する 肯定 回答 を 正規 表現 関数 で 認識 する ため に 利用 でき る 正規 表現 を 返 し ま す 。 
警告 : 表現 は  C  ライブラリ の  regex ( )  関数 に 合 っ た もの で な けれ ば な ら ず 、 これ は 
で 使 わ れ て い る 構文 と は 異な る か も しれ ま せ ん 。 
肯定 \/ 否定 で 答え る 質問 に 対 する 否定 回答 を 正規 表現 関数 で 認識 する ため に 利用 でき る 正規 表現 を 返 し ま す 。 
通貨 シンボル を 返 し ま す 。  シンボル を 値 の 前 に 表示 さ せ る 場合 に は " - "  、 値 の 後ろ に 表示 さ せ る 場合 に は  " + "  、 シンボル を 基数 点 と 置き換え る 場合 に は  " . "  を 前 に つけ ま す 。 
現在 の ロケール で 使 わ れ て い る 年代 を 表現 する 値 を 返 し ま す 。 
ほとんど の ロケール で は この 値 を 定義 し て い ま せ ん 。  この 値 を 設定 し て い る ロケール の 例 は 日本 で す 。 
返 さ れ る 文字 列 の 様式 は 決め られ て い な い の で 、 異な る システム 間 で 様式 に 関 する 同じ 知識 が 使え る と 期待 し て は いけ ま せ ん 。 
返 さ れ る 値 は ロケール で の 現 年代 の 年 値 で す 。 
返 さ れ る 値 は  strftime で 日付 および 時間 を ロケール 固有 の 年代 に 基づ い た 方法 で 表現 する ため の 書式 化 文字 列 と し て 使 う こと が でき ま す 。 
返 さ れ る 値 は  strftime で 日付 を ロケール 固有 の 年代 に 基づ い た 方法 で 表現 する ため の 書式 化 文字 列 と し て 使 う こと が でき ま す 。 
返 さ れ る 値 は  0  から  99  まで の  100  個 の 値 の 表現 で す 。 
各 インスタンス は 名前 を も ち 、 ドット  ( ピリオド )  を 区切り 文字 と し て 表記 する こと で 、 概念 的 に は 名前 空間 中 の 階層 構造 に 配置 さ れ る こと に な り ま す 。 
簡便 性 の ため に 、 Logger  の 適切 な メソッド 群 を 呼 ぶ こと で 、 ログ に 記録 さ れ た メッセージ の 重要 性 を 指定 する こと が でき ま す 。 
それ ら の メソッド と は 、 デフォルト の レベル を 反映 する 形 で 、 debug ( ) 、  info ( ) 、 warning ( ) 、 error ( )  および  critical ( )  と な っ て い ま す 。 
これ ら の レベル を 指定 する に あた っ て 制限 は あ り ま せ ん :  Logger  の より 汎用 的 な メソッド で 、 明示 的 な レベル 指定 の ため の 引数 を 持 つ log ( )  を 使 っ て 自分 自身 で レベル を 定義 し たり 使用 し たり でき ま す 。 
レベル も ロガー に 関連 付け る こと が でき 、 デベロッパ が 設定 する こと も 、 保存 さ れ た ログ 記録 設定 を 読み込 む 際 に 設定 する こと も でき ま す 。  ロガー に 対 し て ログ 記録 メソッド が 呼び出 さ れ る と 、 ロガー は 自ら の レベル と メソッド 呼び出し に 関連 付け られ た レベル を 比較 し ま す 。 
ロガー の レベル が メソッド 呼び出し の レベル より も 高 い 場合 、 実際 の ログ メッセージ は 生成 さ れ ま せ ん 。 
ハンドラ は  Handler クラス の サブ クラス の インスタンス で 、 ログ 記録 さ れ た  ( LogRecord 形式 の )  メッセージ が 、 その メッセージ の 伝達 対象 と な る 相手  ( エンド ユーザ 、 サポート デスク の スタッフ 、 システム 管理 者 、 開発 者 )  に 行き着 く よう に する 役割 を 持 ち ま す 。 
ハンドラ に は 特定 の 行き 先 に 方向 付け られ た  LogRecord  インスタンス が 渡 さ れ ま す 。 
ほとんど の ユーザ 定義 の  Handler  の サブ クラス で 、 この  emit ( ) を オーバライド する 必要 が あ る で しょ う 。  基底 クラス と な る  Handler  クラス に 加え て 、 多く の 有用 な サブ クラス が 提供 さ れ て い ま す : 
StreamHandler  の インスタンス は ストリーム  ( ファイル 様 オブジェクト )  に エラー メッセージ を 送信 し ま す 。 
FileHandler  の インスタンス は ディスク 上 の ファイル に エラー メッセージ を 送信 し ま す 。 
BaseRotatingHandler  は ログ ファイル を ある 時点 で 交替 さ せ る ハンドラ の 基底 クラス で す 。 
直接 インスタンス 化 する ため の クラス で は あ り ま せ ん 。 
RotatingFileHandler  や TimeRotatingFileHandler  を 使 う よう に し て くださ い 。 
RotatingFileHandler  の インスタンス は 最大 ログ ファイル の サイズ 指定 と ログ ファイル の 交替 機能 を サポート し ながら 、 ディスク 上 の ファイル に エラー メッセージ を 送信 し ま す 。 
TimeRotatingFileHandler  の インスタンス は 、 ログ ファイル を 一定 時間 間隔 ごと に 交替 し ながら 、 ディスク 上 の ファイル に エラー メッセージ を 送信 し ま す 。 
SocketHandler  の インスタンス は  TCP \/ IP  ソケット に エラー メッセージ を 送信 し ま す 。 
DatagramHandler  の インスタンス は  UDP  ソケット に エラー メッセージ を 送信 し ま す 。 
SMTPHandler  の インスタンス は 指定 さ れ た 電子 メール アドレス に エラー メッセージ を 送信 し ま す 。 
SysLogHandler  の インスタンス は 遠隔 を 含 む マシン 上 の  syslog  デーモン に エラー メッセージ を 送信 し ま す 。 
NTEventLogHandler  の インスタンス は  Windows NT\/2000 \/ XP  イベント ログ に エラー メッセージ を 送信 し ま す 。 
MemoryHandler  の インスタンス は メモリ 上 の バッファ に エラー メッセージ を 送信 し 、 指定 さ れ た 条件 で フラッシュ さ れ る よう に し ま す 。 
HTTPHandler  の インスタンス は  " GET "  か  " POST " セマンティクス を 使 っ て  HTTP  サーバ に エラー メッセージ を 送信 し ま す 。 
StreamHandler  および  FileHandler  クラス は 、 中核 と な る ログ 化 機構 パッケージ 内 で 定義 さ れ て い ま す 。 
他 の ハンドラ は サブ モジュール 、 logging . handlers  で 定義 さ れ て い ま す 。 
( サブ モジュール に は もう ひと つ  logging . config  が あ り 、 これ は 環境 設定 機能 の ため の もの で す 。 
) ログ 記録 さ れ た メッセージ は  Formatter  クラス の インスタンス を 介 し 、 表示 用 に 書式 化 さ れ ま す 。 
これ ら の インスタンス は  %  演算 子 と 辞書 を 使 う の に 適 し た 書式 化 文字 列 で 初期 化 さ れ ま す 。 
いずれ か の フィルタ が 偽 と な る 値 を 返 し た 場合 、 メッセージ の 処理 は 行 わ れ ま せ ん 。  基本 的 な  Filter  機能 で は 、 指定 さ れ た ロガー 名 で フィルタ を 行え る よう に な っ て い ま す 。 
この 機能 が 利用 さ れ た 場合 、 名前付け さ れ た ロガー と その 下位 に あ る ロガー に 送 ら れ た メッセージ が フィルタ を 通過 でき る よう に な り 、 その 他 の メッセージ は 捨て られ ま す 。  上 で 述べ た クラス に 加え て 、 いく つ か の モジュール レベル の 関数 が 存在 し ま す 。 
指定 さ れ た 名前 の ロガー を 返 し ま す 。 
名前 が 指定 さ れ て い な い 場合 、 ロガー 階層 の ルート  ( root )  に あ る ロガー を 返 し ま す 。 
name  を 指定 する 場合 に は 、 通常 は  " a " ,  " a . b " ,  あるいは  " a . b . c . d "  と い っ た よう な ドット 区切り の 階層 的 な 名前 に し ま す 。  名前 の 付け 方 は ログ 機能 を 使 う 開発 者 次第 で す 。 
与え られ た 名前 に 対 し て 、 この 関数 は どの 呼び出し で も 同じ ロガー インスタンス を 返 し ま す 。  従 っ て 、 ロガー インスタンス を アプリケーション の 各部 で やりとり する 必要 は なくな り ま す 。 
標準 の Logger  クラス か 、 最後 に setLoggerClass ( )  に 渡 し た クラス を 返 し ま す 。 
この 関数 は 、 新た に 定義 する クラス 内 で 呼び出 し 、 カスタマイズ し た Logger  クラス の インストール を 行 う とき に 既に 他 の コード で 適用 し た カスタマイズ を 取り消 そ う と し て い な い か 確かめ る の に 使 い ま す 。 
レベル  DEBUG  の メッセージ を ルート ロガー で 記録 し ま す 。  msg  は メッセージ の 書式 化 文字 列 で 、 args は  msg  に 取り込 む ため の 引数 で す 。 
キー ワード 文字 列  kwargs  から は  exc _ info  のみ が 調べ られ 、 この 値 の 評価 値 が 偽 で な い 場合 、 例外 情報 を ログ メッセージ に 追加 し ま す 。 
( sys . exc _ info  の 返 す 形式 の )  例外 情報 を 表 す タプル が 与え られ て い れ ば 、 それ を メッセージ に 使 い ま す 。  それ 以外 の 場合 に は 、 sys . exc _ info  を 呼び出 し て 例外 情報 を 取得 し ま す 。 
レベル  INFO  の メッセージ を ルート ロガー で 記録 し ま す 。  引数 は  debug ( )  と 同じ よう に 解釈 さ れ ま す 。 
レベル  WARNING  の メッセージ を ルート ロガー で 記録 し ま す 。  引数 は  debug ( )  と 同じ よう に 解釈 さ れ ま す 。 
レベル  ERROR  の メッセージ を ルート ロガー で 記録 し ま す 。  引数 は  debug ( )  と 同じ よう に 解釈 さ れ ま す 。 
レベル  CRITICAL  の メッセージ を ルート ロガー で 記録 し ま す 。  引数 は  debug ( )  と 同じ よう に 解釈 さ れ ま す 。 
例外 情報 は ログ メッセージ に 追加 さ れ ま す 。 
この メソッド は 例外 ハンドラ から のみ 呼び出 さ れ ま す 。 
レベル  level  の メッセージ を ルート ロガー で 記録 し ま す 。  その 他 の 引数 は  debug ( )  と 同じ よう に 解釈 さ れ ま す 。 
全て の ロガー に 対 し て 、 ロガー 自体 の レベル に 優先 する よう な 上書き レベル lvl  を 与え ま す 。 
アプリケーション 全体 に わた っ て 一時 的 に ログ 出力 の 頻度 を 押し下げ る 必要 が 生 じ た 場合 に は この 関数 が 有効 で す 。 
使 わ れ る レベル 対 する 唯一 の 制限 は 、 レベル は 正 の 整数 で な く て は な ら ず 、 メッセージ の 深刻 さ が 上が る に 従 っ て レベル の 数 も 上が ら な く て は な ら な い と い う こと で す 。 
ログ 記録 レベル  lvl の テキスト 表現 を 返 し ま す 。 
レベル が 定義 済み の レベル  CRITICAL 、 ERROR 、 WARNING 、  INFO 、 あるいは  DEBUG の いずれ か で あ る 場合 、 対応 する 文字 列 が 返 さ れ ま す 。 
addLevelName( )  を 使 っ て レベル に 名前 を 関連 づけ て い た 場合 、 lvl  に 関連 付け られ て い た 名前 が 返 さ れ ま す 。 
定義 済み の レベル に 対応 する 数値 を 指定 し た 場合 、 レベル に 対応 し た 文字 列 表現 を 返 し ま す 。 
そう で な い 場合 、 文字 列  " Level  % s " %lvl  を 返 し ま す 。 
attrdict  で 属性 を 定義 し た 、 新し い  LogRecord  インスタンス を 返 し ま す 。 
この 関数 は 、 逆  pickle  化 さ れ た  LogRecord  属性 辞書 を  socket  越し に 受け取 り 、 受信 端 で  LogRecord  インスタンス に 再 構築 する 場合 に 有用 で す 。 
デフォルト の フォーマッタ  ( formatter )  を 持 つ  StreamHandler  を 生成 し て ルート ロガー に 追加 し 、 ログ 記録 システム の 基本 的 な 環境 設定 を 行 い ま す 。 
関数  debug ( ) 、 info ( ) 、 warning ( ) 、 error ( ) 、 および  critical ( )  は 、 ルート ロガー に ハンドラ が 定義 さ れ て い な い 場合 に 自動 的 に  basic Config ( )  を 呼び出 し ま す 。 
ログ 記録 システム に 対 し て 、 バッファ の フラッシュ を 行 い 、 全て の ハンドラ を 閉じ る こと で 順次 シャットダウン を 行 う よう に 告知 し ま す 。 
ログ 記録 システム に 対 し て 、 ロガー を インスタンス 化 する 際 に クラス klass  を 使 う よう に 指示 し ま す 。 
指定 する クラス は 引数 と し て 名前 だけ を と る よう な メソッド  __init_ _( )  を 定義 し て い な けれ ば な ら ず 、 _ _init_ _( )  で は  Logger . __init_ _( ) を 呼び出 さ な けれ ば な り ま せ ん 。 
典型 的 な 利用 法 と し て 、 この 関数 は 自作 の ロガー を 必要 と する よう な アプリケーション に お い て 、 他 の ロガー が インスタンス 化 さ れ る 前 に インスタンス 化 さ れ ま す 。 
本 機能 を  Python  標準 ライブラリ に 含め る よう 記述 し て い る 提案 書 。 
この  logging  パッケージ の オリジナル 
オリジナル の logging パッケージ 。 
この サイト に あ る バージョン の パッケージ は 、 標準 で logging パッケージ を 含 ま な い Python  1 . 5 . 2  と  2 . 1 . x 、 2 . 2 . x で も 使用 でき ま す 
この モジュール は 、 標準 モジュール  os  で サポート さ れ る の と 同様 の 機能 を 、 Mac  OS  9  オペレーティング システム に 依存 し た 機能 と し て 実装 し て い ま す 。 
この モジュール を 利用 する 一番 良 い 使 い 方 は  posix  モジュール 経由 で 使 う こと で す 。 
この モジュール は  MacPython - OS 9  に のみ 存在 し 、 MacPython - OSX  上 で は  posix  を 利用 し ま す 。 
この モジュール で は 次 の 関数 が 使え ま す 。  chdir ( ) 、 close ( ) 、 dup ( ) 、 fdopen ( ) 、 getcwd( ) 、 lseek ( ) 、 listdir ( ) 、 mkdir ( ) 、 open ( ) 、 read ( ) 、 rename ( ) 、 rmdir ( ) 、 stat ( ) 、 sync ( ) 、 unlink ( ) 、 write ( ) 、 そして 例外  error  も 定義 さ れ て い ま す 。 
stat ( )  に よ り 返 さ れ る 時間 は 浮動 小数 点数 で 、  MacPython - OS 9  で 使 わ れ る 他 の 時間 の 値 と 同様 で す 。 
macerrors  は 、 MacOS  エラー コード を 意味 する 定数 定義 を 含 み ま す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。  macfs モジュール は 旧式 の もの で す 。 
FSSpec 、 FSRef 、 Alias  の 操作 に は 、 Carbon . File また は 
モジュール を 、 ファイル ダイアログ に は 
を 使 っ て くださ い 。 
また 、 この モジュール は UFS パーティション で は 正確 に は 動作 し な い こと が わか っ て い ま す 。 
この モジュール で は 、 Macintosh の FSSpec  の 操作 、 エイリアス マネージャ 、 finder エイリアス 、 および 標準 ファイル パッケージ へ の アクセス を 提供 し て い ま す 。 
関数 や メソッド が file  引数 を と る よう に な っ て い る 場合 、 引数 は 常 に 次 の  3  つ 、 ( 1 )  Macintosh  の フル パス 名 あるいは 部分 パス 名 、 ( 2 )  FSSpec  オブジェクト 、 ( 3 )  Inside  Macintosh : Files  で 解説 さ れ て い る  3  要素 の タプル ( wdRefNum ,  parID ,  name ) の うち の いずれ か に な り ま す 。 
FSSpec  は 、 実在 し な い ファイル で も 、 実在 する フォルダ の 下 に 配置 さ れ て い る こと に な っ て い る 限り 表現 でき ま す 。  MacPython  で は パス 名 も 同じ よう に 扱え ま す が 、 unix  ベース の  Python  で は パス 名 と FSRefs の 挙動 が 異な る ため 扱え ま せ ん 。 
詳し く は  Apple  の ドキュメント を 参照 し て くださ い 。  エイリアス と 標準 ファイル パッケージ の 詳細 も  Apple  の ドキュメント に 書 か れ て い ま す 。 
指定 し た ファイル に 対 する FSSpec オブジェクト を 作成 し ま す 。 
FSSpec  の  C  構造 体 の 生 データ が 入 っ た 文字 列 から FSSpec オブジェクト を 作成 し ま す 。 
主に FSSpec 構造 体 を ネットワーク 経由 で 得 る 場合 に 便利 で す 。 
Alias  の  C  構造 体 の 生 データ が 入 っ た 文字 列 から Alias オブジェクト を 作成 し ま す 。 
主に Alias 構造 体 を ネットワーク 経由 で 得 る 場合 に 便利 で す 。 
ゼロ で 埋め た FInfo オブジェクト を 作成 し ま す 。 
エイリアス ファイル を 解決 し ま す  ( オリジナル の ファイル と の 対応 を 取 り ま す ) 。 
標準 的 イアログ  「 入力 ファイル を 開 く 」 を ユーザ に 提示 し ま す 。 
オプション と し て 、 ユーザ が 選択 でき る ファイル を 制限 する ため に 4  文字 の 文字 列 で 表 さ れ た ファイル タイプ 指定 子 を  4  つ まで 渡せ ま す 。 
この 関数 は 、 FSSpec オブジェクト と ユーザ が キャンセル し な い で ダイアログ を 閉じ た か どう か を 示 す フラグ を 返 し ま す 。 
StandardGetFile ( )  と ほぼ 同じ で す が 、 ダイアログ の 一番 上 に 表示 さ れ る プロンプト を 指定 でき ま す 。 
この 関数 は 、 FSSpec オブジェクト と ユーザ が キャンセル し な い で ダイアログ を 閉じ た か どう か を 示 す フラグ を 返 し ま す 。 
非 標準 的 ダイアログ 「 ディレクトリ を 選 ぶ 」 を ユーザ に 提示 し ま す 。 
この ダイアログ で は 、 選択 し た い ディレクトリ を 開 い て お い て から 、 ``select  current directory ' ' ボタン を クリック し ま す 。  prompt  は プロンプト 文字 列 で 、 ダイアログ の 一番 上 に 表示 さ れ ま す 。 
この 関数 は 、 FSSpec オブジェクト と ユーザ が キャンセル し な い で ダイアログ を 閉じ た か どう か を 示 す フラグ を 返 し ま す 。 
ファイル 選択 ダイアログ を 提示 する 時 に 最初 に 表示 さ れ る フォルダ を 設定 し ま す 。  fsspec  に は 、 フォルダ その もの で は な く 、 フォルダ 内 の ファイル を 指定 し ま す  ( 実在 し な い ファイル で も かま い ま せ ん ) 。 
引数 を 渡 さ な い 場合 は 、 フォルダ は カレント ディレクトリ 、 つまり  os . getcwd ( ) で 返 さ れ る ディレクトリ に 設定 さ れ ま す 。 
System  7 . 5  以降 で は 、 ユーザ は 「 一般 設定 」 コントロール パネル で 標準 ファイル パッケージ の 振る舞い を 変更 でき 、 設定 に よ っ て は この 関数 の 呼び出し が 無効 化 さ れ る の で 注意 し て くださ い 。 
ゴミ箱 や 初期 設定 フォルダ など 、 Mac  OS  が 管理 し て い る 「 特別 な 」 フォルダ の 位置 を 検索 し ま す 。  w here  は 検索 し た い ディスク 、 which  は 検索 し た い フォルダ を 指定 する 4 文字 の 文字 列 で す 。 
create  を 設定 する と 、 該当 する フォルダ が 存在 し な い 場合 に 新た に 生成 し ま す 。 
( vrefnum ,  dirid )  から な る タプル を 返 し ま す 。  w here  と which  に 指定 でき る 定数 は 、 標準 モジュール Carbon . Folders に あ り ま す 。 
与え られ た ファイル を 指 す 最小 限 の alias オブジェクト を 返 し ま す 。  ファイル は フル パス 名 で 与え な けれ ば な り ま せ ん 。 
これ は 存在 し な い ファイル を 指 す Alias を 作成 する 唯一 の 方法 で す 。 
4  文字 の クリエータコード creator  を 持 っ た アプリケーション の 位置 を 探し出 し ま す 。 
この 関数 は アプリケーション を 指 す FSSpec オブジェクト を 返 し ま す 。 
2 . 3 . 1  FSSpec  オブジェクト 
この モジュール に は 、 Macintosh  上 で の ファイル 操作 を 便利 に する ため の ルーチン が いく つ か 入 っ て い ま す 。 
全て ファイル パラメタ は , パス 名 か FSRef  また は FSSpec  オブジェクト で 指定 でき ま す 。 
この モジュール は 、 リソース フォーク つき ファイル  ( forked file )  を サポート する ファイル システム を 想定 し て い る の で 、 UFS パーティション に 使 っ て は な り ま せ ん .  macostools  モジュール で は 以下 の 関数 を 定義 し て い ま す 。 
ファイル src を dst へ コピー し ま す 。 
カスタム アイコン 、 コメント 、 アイコン 位置 は コピー さ れ ま せ ん 。 
src から dst へ 再帰 的 に ファイル の ツリー を コピー し ま す 。  必要 に 応 じ て フォルダ を 作成 し て ゆ き ま す . src と dst は パス 名 で 指定 し な けれ ば な り ま せ ん 。 
src を 示 す ファイン ダ エイリアス dst を 作成 し ま す 。 
ファイル dst の クリエータ や タイプ など の ファインダ 情報 が 変わ っ た こと を ファインダ に 知 ら せ ま す 。 
ファイル は パス 名 か FSSpec で 指定 でき ま す 。 
この 呼び出し は , ファインダ に アイコン を 再 描画 さ せ る よう 命令 し ま す 。 
copy に 用い る バッファ サイズ で 、 デフォルト は  1  メガバイト で す 。 
Apple  の ドキュメント で は , ファイン ダ エイリアス の 作成 プロセス を 規定 し て い ま せ ん . その ため , mkalias ( )  で 作成 し た エイリアス が 互換 性 の な い 振る舞い を する 可能 性 が あ る の で 注意 し て くださ い 。 
この モジュール は  os . path  モジュール の  Macintosh  実装 で す 。 
この モジュール で 、 os . path
へ の 最も 汎用 性 の あ る アクセス が でき ま す 。 
を 参照 し て くださ い 。 
次 の 関数 が この モジュール で 利用 でき ま す 。 normcase ( ) 、 normpath ( ) 、 isabs ( ) 、 join ( ) 、 split ( ) 、 isdir ( ) 、 isfile ( ) 、 walk ( ) 、 exists ( ) 。 
os . path  で 利用 でき る 他 の 関数 に つ い て は 、 ダミー の 関数 と し て 相当 する 物 が 利用 でき ま す 。 
macresource  は スクリプト が  MacPython  上 や  MacPython  アプレット および  OSX Python  上 で 起動 さ れ て い る 時 、 特別 な 処理 を せ ず に ダイアログ や メニュー など の よう な リソース を 見つけ る ため の ヘルパー スクリプト で す 。 
この モジュール で は  ( Unix の )  メイル ボックス 内 の メイル に 簡単 かつ 一様 な 方法 で アクセス でき る よう に する クラス を 定義 し て い ま す 。 
クラス Unix Mailbox 
全て の メッセージ が 単一 の ファイル に 収め られ 、 " From  "  ( " From _"  と し て 知 ら れ て い ま す )  行 に よ っ て 分割 さ れ て い る よう な 、 旧来 の  Unix 形式 の メイル ボックス に アクセス し ま す 。 
ファイル オブジェクト  fp  は メイル ボックス ファイル を 指 し ま す 。 
オプション の  factory  パラメタ は 新た な メッセージ オブジェクト を 生成 する よう な 呼び出し 可能 オブジェクト で す 。  factory  は 、 メイル ボックス オブジェクト に 対 し て  next ( )  メソッド を 実行 し た 際 に 、 単一 の 引数 、 fp  を 伴 っ て 呼び出 さ れ ま す 。 
この 引数 の 標準 の 値 は  rfc 822 . Message  クラス で す ( 
モジュール  -  および 以下  -  を 参照 し て くださ い ) 。 
注意 : この モジュール の 実装 上 の 理由 に よ り 、 fp  オブジェクト は バイナリ モード で 開 く よう に し て くださ い 。 
特に Windows 上 で は 注意 が 必要 で す 。 
可搬 性 を 最大 限 に する ため に 、 Unix 形式 の メイル ボックス 内 に あ る メッセージ は 、 正確 に  ' From ' ( 末尾 の 空白 に 注意 し て くださ い )  で 始ま る 文字 列 が 、 直前 の 正し く 二 つ の 改行 の 後 に くる よう な 行 で 分割 さ れ ま す 。 
現実 的 に は 広範 な バリエーション が あ る ため 、 それ 以外 の From _ 行 に つ い て 考慮 す べ き で は な い の で す が 、 現在 の 実装 で は 先頭 の 二 つ の 改行 を チェック し て い ま せ ん 。 
これ は ほとんど の アプリケーション で うま く 動作 し ま す 。 Unix Mailbox  クラス で は 、 ほぼ 正確 に  From _ デリミタ に マッチ する よう な 正規 表現 を 用い る こと で 、 より 厳密 に  From _ 行 の チェック を 行 う バージョン を 実装 し て い ま す 。 
Unix Mailbox  で は デリミタ 行 が " From  nametime
"  の 行 に 分割 さ れ る もの と 考え ま す 。 
可搬 性 を 最大 限 に する ため に は 、 代わり に  PortableUnix Mailbox  クラス を 使 っ て くださ い 。 
この クラス は Unix Mailbox  と 同じ で す が 、 個々 の メッセージ は  " From  "  行 だけ で 分割 さ れ る もの と みな し ま す 。  より 詳細 な 情報 に つ い て は 、 
クラス PortableUnix Mailbox 
厳密 性 の 低 い  Unix Mailbox  の バージョン で 、 メッセージ を 分割 する 行 は  " From  "  のみ で あ る と 見な し ま す 。 
実際 に 見 られ る メイル ボックス の バリエーション に 対応 する ため 、  From  行 に お け る ` ` nametime' ' 部分 は 無視 さ れ ま す 。 
メイル 処理 ソフトウェア は メッセージ 中 の  ' From ' で 始ま る 行 を クオート する ため 、 この 分割 は うま く 動作 し ま す 。 
クラス MmdfMailbox 
全て の メッセージ が 単一 の ファイル に 収め られ 、 4  つ の  control - A  文字 に よ っ て 分割 さ れ て い る よう な 、 MMDF  形式 の メイル ボックス に アクセス し ま す 。 
ファイル オブジェクト  fp  は メイル ボックス ファイル を さ し ま す 。  オプション の  factory  は Unix Mailbox  クラス に おけ る の と 同様 で す 。 
クラス MH Mailbox 
数字 で 名前 の つけ られ た 別々 の ファイル に 個々 の メッセージ を 収め た ディレクトリ で あ る 、 MH  メイル ボックス に アクセス し ま す 。  メイル ボックス ディレクトリ の 名前 は  dirname  で 渡 し ま す 。 
factory  は Unix Mailbox  クラス に おけ る の と 同様 で す 。 
クラス Maildir
Qmail  メイル ディレクトリ に アクセス し ま す 。 
dirname  で 指定 さ れ た 全て の 新規 および 現在 の メッセージ に アクセス でき ま す 。 
クラス Babyl Mailbox 
MMDF  メイル ボックス と 似 て い る 、 Babyl  メイル ボックス に アクセス し ま す 。 
Babyl  形式 で は 、 各 メッセージ は 二 つ の ヘッダ から な る セット 、 original  ヘッダ および  visible  ヘッダ を を 持 っ て い ま す 。 
original  ヘッダ は '* * *EOOH  * * *'( End - Of - Original - Headers )  だけ を 含 む 行 の 前 に あ り 、 visible  ヘッダ は  EOOH  行 の 後 に あ り ま す 。 
Babyl  互換 の メイル リーダ は  visible  ヘッダ のみ を 表示 し 、  Babyl Mailbox  オブジェクト は  visible  ヘッダ のみ を 含 む よう な メッセージ を 返 し ま す 。 
メイル メッセージ は  EOOH  行 で 始ま り 、 ' 0 3 7 0 1 4 '  だけ を 含 む 行 で 終わ り ま す 。 
factory  は Unix Mailbox  クラス に おけ る の と 同様 で す 。 
モジュール が 撤廃 さ れ た こと に よ り 、 
パッケージ を 使 っ て メイル ボックス から メッセージ オブジェクト を 生成 する よう 推奨 さ れ て い る の で 注意 し て くださ い 。 
( デフォルト の 設定 は 以前 の バージョン と の 互換 性 の ため に 変更 さ れ て い ま せ ん 。 
)  安全 に 移行 を 行 う に は 、 以下 の ちょっと し た コード を 使 い ま す : 
上 の ラッパ は メイル ボックス 内 に あ る 不正 な 形式 の  MIME  メッセージ に 対 し て 防御 性 が あ る 反面 、 メイル ボックス の  next ( )  メソッド が 空 文字 列 を 渡 す 場合 に 備え な けれ ば な り ま せ ん 。 
逆 に 、 もし メイル ボックス 内 に は 正し い 形式 の  MIME  メッセージ しか 入 っ て い な い と 分か っ て い る の なら 、 単に 以下 の よう に し ま す : 
伝統 的 な `` mbox ' ' メイル ボックス 形式 に 関 する 記述 で す 。 
` `maildir' ' メイル ボックス 形式 の 記述 で す 。 
メイル ボックス ファイル に 記録 さ れ て い る  Content -Length :  ヘッダ に 依存 し た 場合 に 発生 する 問題 に つ い て の 記述 で す 。 
mailcap  ファイル は 、 メイル リーダ や  Web  ブラウザ の よう な  MIME  対応 の アプリケーション が 、 異な る  MIME  タイプ の ファイル に どの よう に 反応 する か を 設定 する ため に 使 わ れ ま す ( ``mailcap ' ' の 名前 は ``mail  capability ' ' から 取 ら れ ま し た ) 。 
例えば 、 ある  mailcap  ファイル に  " video\/ mpeg ; x mpeg  % s "  の よう な 行 が 入 っ て い た と し ま す 。 
ユーザ が email  メッセージ や  Web  ドキュメント 上 で その  MIME  タイプ  video\/ mpeg  に 遭遇 する と 、 " % s "  は ファイル 名  ( 通常 テンポラリ ファイル に 属 する もの に な り ま す ) に 置き換え られ 、 ファイル を 閲覧 する ため に  x mpeg  プログラム が 自動 的 に 起動 さ れ ま す 。 mailcap  の 形式 は  RFC  15 2 4 , `` A User  AgentConfiguration  Mechanism  For Multimedia  Mail  Format Information ' ' で 文書 化 さ れ て い ま す が 、 この 文書 は インターネット 標準 で は あ り ま せ ん 。 
しかし ながら 、 mailcap  ファイル は ほとんど の  Unix  システム で サポート さ れ て い ま す 。 
2  要素 の タプル を 返 し ま す ;  最初 の 要素 は 文字 列 で 、 実行 す べ き コマンド  (os. system ( )  に 渡 さ れ ま す )  が 入 っ て い ま す 。 
二 つ め の 要素 は 与え られ た  MIME  タイプ に 対 する  mailcap  エントリ で す 。 
一致 する  MIME  タイプ が 見つか ら な かっ た 場合 、 ( None ,  None )  が 返 さ れ ま す 。 
key は  desired  フィールド の 値 で 、 実行 す べ き 動作 の タイプ を 表現 し ま す ;  ほとんど の 場合 、 単に MIME  形式 の データ 本体 を 見 た い と 思 う の で 、 標準 の 値 は 'view' に な っ て い ま す 。 
与え られ た  MIME  型 を も つ 新た な データ 本体 を 作成 し た 場合 や 、 既存 の データ 本体 を 置き換え た い 場合 に は 、 'view' の 他 に ' compose ' および  'edit'  を 取 る こと も でき ま す 。 
これ ら フィールド の 完全 な リスト に つ い て は  RFC  15 2 4  を 参照 し て くださ い 。 
filename  は コマンドライン 中 で  " % s "  に 代入 さ れ る ファイル 名 で す ;  標準 の 値 は '\/ dev\/null' で 、 たいてい この 値 を 使 い た い わけ で は な い はず で す 。  従 っ て 、 ファイル 名 を 指定 し て この フィールド を 上書き する 必要 が あ る で しょ う 。 
plist  は 名前付け さ れ た パラメタ の リスト で す ;  標準 の 値 は 単なる 空 の リスト で す 。 
リスト 中 の 各 エントリ は パラメタ 名 を 含 む 文字 列 、 等号  ( " = " ) 、 および パラメタ の 値 で な けれ ば な り ま せ ん 。 
mailcap  エントリ に は  % { foo}  と い っ た よう な 名前 つき の パラメタ を 含め る こと が でき 、 ' foo'  と 名づけ られ た パラメタ の 値 に 置き換え られ ま す 。 
例えば 、 コマンドライン " showpartial %{ id }%{ number }%{ total } " が mailcap  ファイル に あ り 、 plist  が  [ 'id = 1 ' , 'number = 2 ' , 'total = 3 ' ]  に 設定 さ れ て い れ ば 、 コマンドライン は ' showpartial  1  2  3 '  に な り ま す 。 
mailcap  ファイル 中 で は 、  オプション の `` test ' ' フィールド を 使 っ て 、 ( 計算 機 アーキテクチャ や 、 利用 し て い る ウィンドウ システム と い っ た ) 何 ら か の 外部 条件 を テスト する よう 指定 する こと が でき ま す 。 findmatch ( )  は これ ら の 条件 を 自動 的 に チェック し 、 チェック が 失敗 し た エントリ を 読み飛ば し ま す 。 
MIME  タイプ を  mailcap  ファイル の エントリ に 対応 付け る 辞書 を 返 し ま す 。 
この 辞書 は  findmatch ( )  関数 に 渡 さ れ る べ き もの で す 。 
エントリ は 辞書 の リスト と し て 記憶 さ れ ま す が 、 この 表現 形式 の 詳細 に つ い て 知 っ て お く 必要 は な い で しょ う 。  mailcap  情報 は システム 上 で 見つか っ た 全て の  mailcap  ファイル から 導出 さ れ ま す 。 
ユーザ 設定 の  mailcap  ファイル  $ HOME \/ . mailcap は システム の mailcap  ファイル \/ etc\/mailcap 、 \/ usr\/etc\/mailcap 、 および  \/ usr\/ local \/ etc\/mailcap の 内容 を 上書き し ま す 。 
以下 に 使用 例 を 示 し ま す : 
この 環境 は Python スクリプト を メイン プログラム と し て 実行 さ れ る 際 に よく 使 わ れ る ` ` 条件 付き スクリプト ' ' の 一節 が 実行 さ れ る 環境 で す 。 
6 . 8  ライブラリ レベル の マーク アップ 
6 . 7  モジュール 特有 の マーク アップ  この 節 で 説明 し て い る マーク アップ は 、 記述 対象 の モジュール に 関 する 情報 を 提供 する ため に 使 い ま す 。 
この マーク アップ は 、 モジュール を 説明 し て い る 節 の 先頭 で よく 使 い ま す 。 
典型 的 な 例 は 、 以下 の よう に な り ま す : 
\section { \module {spam }--- SPAM  機能 へ の アクセス } \declaremodule { extension } {spam }\platform {Unix } \modulesynopsis { \UNIX  の  SPAM  機能 へ の アクセス 手段 。 }\moduleauthor { Jane  Doe} {jane . doe@frobnitz . org } 
Python  の パッケージ 
- -  ひと まとまり の 単位 と し て 記述 でき る よう な モジュール の 集合  - - は 、 モジュール と 同じ マーク アップ を 使 っ て 解説 し ま す 。 
パッケージ 内 の モジュール 名 は ` ` 完全 限定  ( fullyqualified ) ' ' 形式 で 入力 せ ね ば な り ま せ ん ( つまり 、 パッケージ 名 を 含め ね ば な り ま せ ん ) 。 
例えば 、 ``bar' ' と い う パッケージ 内 の ` ` foo' ' と い う モジュール は module { bar . foo}  と 書 き 、 リファレンス の 先頭 は 以下 の よう に な り ま す : \section { \module { bar . foo} ---\module { bar }  パッケージ 内 の モジュール } \declaremodule { extension}{ bar . foo} \modulesynopsis { \module { bar }  パッケージ 内 の 小さな モジュール } \moduleauthor { Jane  Doe} {jane . doe@frobnitz . org } 
パッケージ の 名前 も また 、 module  で マーク し ま す 。 
二 つ の パラメタ :  モジュール の 種類  ( "standard " 、 " builtin " 、 " extension " 、 また は " 
" )  と 、 モジュール の 名前 を 必要 と し ま す 。  この 節 に リンク を 張 っ たり 参照 を 行 っ たり する ため の  ` ` キー ' ' に よ っ て は 、 オプション の パラメタ を 指定 せ ね ば な り ま せ ん 。 
` ` キー ' ' は 、 モジュール の 名前 に アンダース コア が 入 っ て い る 場合 に のみ 用い 、 モジュール 名 から アンダース コア を 取り除 い た 名前 で な けれ ば な り ま せ ん 。 type  パラメタ は 上 に 述べ た 値 の いずれ か で な けれ ば な ら ず 、 そう で な い 値 を 指定 する と エラー が 出力 さ れ る の で 注意 し て くださ い 。 
パッケージ に 入 っ て い る よう な モジュール の 場合 、 name  パラメタ に は 完全 限定 形式 の 名前 を 指定 せ ね ば な り ま せ ん 。 
この マクロ は モジュール を 紹介 する section  の 先頭 に 置 か ね ば な り ま せ ん 。 
}  モジュール の 可搬 性 に つ い て 述べ る ため に 使 い ま す 。 
specifier  は モジュール を 利用 でき る よう な プラットフォーム を 指定 する キー を コンマ で 区切 っ た リスト で す 。 
キー は 短 い 識別 子 に し ま す ;  実際 に 使 わ れ て い る 例 に は " IRIX " 、 " Mac " 、 " Windows " 、 " Unix "  が あ り ま す 。 
ある プラットフォーム を 表 す 場合 、 すでに 使 わ れ て い る キー が あ る なら 、 それ を 使 う よう に する の が 重要 で す 。 
この 情報 は 、 モジュール 索引 や 、 HTML 形式 、 GNU info  形式 の 出力 に お け る 注釈 情報 に 使 わ れ ま す 。 
} text  は モジュール の 短 い  ` ` 一行 の ' ' 説明 で 、 各章 の 紹介 の 一部 と し て 使 わ れ る こと が あ り ま す 。 
この マクロ は  declaremodule の 後ろ に 配置 せ ね ば な り ま せ ん 。  モジュール の 概要 は 、 localmoduletable  マクロ に よ っ て 挿入 さ れ る 一覧 表 の 内容 を 構築 する 際 に 使 わ れ ま す 。 
マーク アップ を 行 っ た 場所 で は 何 の テキスト も 生成 さ れ ま せ ん 。 
この マクロ は モジュール の 作者 に つ い て の 情報 を 符号 化 する ため に 使 わ れ ま す 。 
現在 は 出力 生成 に 使 わ れ て い ま せ ん が 、 モジュール の 起源 を 判断 する 際 に 役立 つ はず で す 。 
6 . 8  ライブラリ レベル の マーク アップ  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
この モジュール に は  Python  値 を バイナリ 形式 で 読み書き でき る よう な 関数 が 含 ま れ て い ま す 。 
この バイナリ 形式 は  Python  特有 の もの で す が 、 マシン アーキテクチャ 非 依存 の もの で す  ( つまり 、 Python  の 値 を  PC  上 で ファイル に 書き込 み 、 Sun  に 転送 し 、 そこ で 読 み 戻 す こと が でき ま す ) 。 
バイナリ 形式 の 詳細 が ドキュメント さ れ て い な い の は 故意 に よ る もの で す ;  この 形式 は  ( 稀 に しか な い こと で す が )  Python  の バージョン 間 で 変更 さ れ る 可能 性 が あ る から で す 。 
この モジュール は 汎用 の  ` ` 永続 化  ( persistence ) ' ' モジュール で は あ り ま せ ん 。 
汎用 的 な 永続 化 や 、 RPC  呼び出し を 通 じ た Python  オブジェクト の 転送 に つ い て は 、 モジュール 
marshal  モジュール は 主に 、 ` ` 擬似 コンパイル さ れ た  (pseudo - compiled ) ' ' コード の  . pyc ファイル へ の 読み書き を サポート する ため に 存在 し ま す 。 
従 っ て 、  Python  の メンテナ は 、 必要 が 生じ れ ば  marshal  形式 を 後方 互換 性 の な い もの に 変更 する 権利 を 有 し て い ま す 。 
Python  オブジェクト を 直列 化 および 非 直列 化 し た い 場合 に は 、 pickle  モジュール を 使 っ て くださ い 。 
警告 : marshal モジュール は 、 誤 っ た データ や 悪意 を 持 っ て 作成 さ れ た データ に 対 する 安全 性 を 考慮 し て い ま せ ん 。 
信頼 でき な い 、 もしくは 認証 さ れ て い な い 出所 から の データ を 非 直列 化 し て は な り ま せ ん 。 
全て の  Python  オブジェクト 型 が サポート さ れ て い る わけ で は あ り ま せ ん ; 一般 的 に は 、 どの 起動 中 の  Python  上 に 存在 する か に 依存 し な い オブジェクト だけ が この モジュール で 読み書き でき ま す 。 
以下 の 型 : None 、 整数 、 長 整数 、 浮動 小数 点数 、 文字 列 、 Unicode  オブジェクト 、 タプル 、 リスト 、 辞書 、 タプル と し て 解釈 さ れ る コード オブジェクト 、 が サポート さ れ て い ま す 。  リスト と 辞書 は 含 ま れ て い る 要素 も サポート さ れ て い る 型 で あ る もの のみ サポート さ れ て い ま す ;  再帰 的 な リスト および 辞書 は 書き込 ん で は な り ま せ ん  ( 無限 ループ を 引き起こ し て しま い ま す ) 。 
補足 説明 :  C  言語 の  long  int  が  ( DEC  Alpha  の よう に )  32  ビット より も 長 い ビット 長 を 持 つ 場合 、 32  ビット より も 長 い  Python  整数 を 作成 する こと が 可能 で す 。  その よう な 整数 が 整列 化 さ れ た 後 、 C  言語 の  long  int  の ビット 長 が  32  ビット しか な い マシン 上 で 読 み 戻 さ れ た 場合 、 通常 整数 の 代わり に Python  長 整数 が 返 さ れ ま す 。 
型 は 異な り ま す が 、 数値 は 同じ で す 。 
( この 動作 は  Python  2 . 2  で 新た に 追加 さ れ た もの で す 。 
開 か れ た ファイル に 値 を 書き込 み ま す 。 
値 は サポート さ れ て い る 型 で な く て は な り ま せ ん 。 
ファイル は  sys . st dout  か 、 open ( )  や  posix . popen ( )  が 返 す よう な ファイル オブジェクト で な く て は な り ま せ ん 。 
また ファイル は バイナリ モード ( 'wb' また は  ' w + b ')  で 開 か れ て い な けれ ば な り ま せ ん 。  値  ( また は 値 の オブジェクト に 含 ま れ る オブジェクト )  が サポート さ れ て い な い 型 の 場合 、 ValueError  例外 が 送出 さ れ ま す -- が 、 同時 に ごみ の データ が ファイル に 書き込 ま れ ま す 。 
この オブジェクト は load ( )  で 適切 に 読み出 さ れ る こと は な い はず で す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 : dumps で 、 データ フォーマット を 表 す version  引数 を 利用 する べ き で す 。 
開 か れ た ファイル から 値 を 一 つ 読 ん で 返 し ま す 。 
有効 な 値 が 読み 出せ な かっ た 場合 、 EOFError 、 ValueError 、 また は TypeError  を 送出 し ま す 。 
ファイル は バイナリ モード ( 'rb ' また は  'r + b ')  で 開 か れ た ファイル オブジェクト で な けれ ば な り ま せ ん . 
警告 : サポート さ れ な い 型 を 含 む オブジェクト が  dump ( )  で 整列 化 さ れ て い る 場合 、 load ( )  は 整列 化 不能 な 値 を  None  で 置き換え ま す 。 
dump ( value , file )  で ファイル に 書き込 ま れ る よう な 文字 列 を 返 し ま す 。 
値 は サポート さ れ て い る 型 で な けれ ば な り ま せ ん 。 
値 が サポート さ れ て い な い 型  ( また は サポート さ れ て い な い 型 の オブジェクト を 含 む よう な )  オブジェクト の 場合 、 ValueError  例外 が 送出 さ れ ま す 。 
データ 文字 列 を 値 に 変換 し ま す 。 
有効 な 値 が 見つか ら な かっ た 場合 、 EOFError 、  ValueError 、 また は TypeError  が 送出 さ れ ま す 。 
文字 列 中 の 他 の 文字 は 無視 さ れ ま す 。 
これ に 加え て 、 以下 の 定数 が 定義 さ れ て い ま す : 
モジュール が 利用 する バージョン を 表 し ま す 。 
バージョン 0  は 歴史 的 な フォーマット で す 。  バージョン 1 ( Python  2 . 4 で 追加 さ れ ま し た ) は 文字 列 の 再 利用 を し ま す 。 
現在 の バージョン は 1 で す 。 
. . . 変更 さ れ る 可能 性 が あ る から で す 。 
この モジュール の 名前 は  ( 特に )  Modula - 3  の 設計 者 の 間 で 使 わ れ て い た 用語 の 一 つ に 由来 し て い ま す 。  彼 ら は データ を 自己 充足 的 な 形式 で 輸送 する 操作 に ` ` 整列 化  ( marshalling ) ' ' と い う 用語 を 使 い ま し た 。 
厳密 に 言 え ば 、 ` ` 整列 さ せ る  ( to marshal ) ' ' と は 、 ある データ を ( 例えば  RPC  バッファ の よう に )  内部 表現 形式 から 外部 表現 形式 に 変換 する こと を 意味 し 、 ` ` 非 整列 化  ( unmarshalling ) ' ' と は その 逆 を 意味 し ま す 。 
この モジュール は いつ で も 利用 でき ま す 。 
モジュール に あ る 同じ 名前 の 関数 を 使 っ て くださ い 。 
ほとんど の ユーザー は 複素数 を 理解 する の に 必要 な だけ の 数学 を 勉強 し た く な い の で 、 複素数 に 対応 し た 関数 と 対応 し て い な い 関数 の 区別 が さ れ て い ま す 。 
明示 的 な 注記 の な い 限り 、 戻 り 値 は 全て 浮動 小数 点数 に な り ま す 。  以下 は 整数 論 および 数 表 現 に まつわ る 関数 で す : 
x  の 天井 値  ( ceil ) 、 すなわち x  以上 の 最も 小さ い 整数 を float 型 で 返 し ま す 。 
x  の 絶対 値 を 返 し ま す 。 
x  の 床値  ( floor ) 、 すなわち x  以下 の 最も 大き い 整数 を float 型 で 返 し ま す 。 
プラットフォーム の  C  ライブラリ で 定義 さ れ て い る fmod ( x ,  y )  を 返 し ま す 。  Python  の 
と い う 式 は 必ず しも 同じ 結果 を 返 さ な い と い う こと に 注意 し て くださ い 。 
C  標準 の 要求 で は 、 fmod  は 除算 の 結果 が  x  と 同じ 符号 に な り 、 大き さ が abs( y )  より 小さ く な る よう な 整数  n  に つ い て は fmod ( x ,  y )  が 厳密 に ( 数学 的 に 、 つまり 限り な く 高 い 精度 で ) 
と 等価 で あ る よう 求め て い ま す 。 
Python  の 
は 、 y  と 同じ 符号 の 結果 を 返 し 、 浮動 小数 点 の 引数 に 対 し て 厳密 な 解 を 出せ な い こと が あ り ま す 。  例えば 、  fmod ( - 1 e - 100 ,  1 e 100 )  は  - 1 e - 100  で す が 、 Python  の - 1 e - 100  %  1 e 100  は  1 e 100 - 1 e - 100  に な り 、 浮動 小数 点 型 で 厳密 に 表現 でき ず 、 ややこし い こと に 1 e 100  に 丸め られ ま す 。 
この ため 、 一般 に は 浮動 小数 点 の 場合 に は 関数  fmod ( ) 、 整数 の 場合 に は 
を 使 う 方 が よ い で しょ う 。 
x  の 仮数 と 指数 を  ( m ,  e ) の ペア と し て 返 し ま す 。 
x  が ゼロ の 場合 は 、  ( 0 . 0 ,  0 ) を 返 し 、 それ 以外 の 場合 は 、 0 . 5  = abs ( m )  1  を 返 し ま す 。 
これ は 浮動 小数 点 型 の 内部 表現 を 可搬 性 を 保 っ た まま  " 分解 する  ( pick apart ) "  する ため で す 。 
x の 小数 部分 と 整数 部分 を 返 し ま す 。 
両方 の 結果 は  x の 符号 を 受け継 ぎ ま す 。  整数 部 は float 型 で 返 さ れ ま す 。 
通常 、 Python  の 浮動 小数 点 型 は  53  ビット 以上 の 精度 を も た な い  ( プラットフォーム に お け る  C  double  型 と 同じ )  の で 、 結果 的 に abs ( x )  =  2 * * 52  で あ る よう な 浮動 小数 点 型 x  は 小数 部分 を 持 た な く な る の で す 。  以下 は 指数 および 対数 関数 で す : 
を 返 し ま す 。 
base  を 底 と し た  x  の 対数 を 返 し ま す 。 
base  を 省略 し た 場合 x  の 自然 対数 を 返 し ま す 。  バージョン  2 . 3  で  変更  さ れ た 仕様 : baseargument  added
x  の 10 を 底 と し た 対数 を 返 し ま す 。 
x  の 平方 根 を 返 し ま す 。 
以下 は 三角 関数 で す : 
x  の 逆 余弦 を 返 し ま す 。 
x  の 逆 正弦 を 返 し ま す 。 
x  逆 正接 を 返 し ま す 。 
atan ( y  \/  x )  の 逆 正接 を ラジアン で 返 し ま す 。 
x  の 余弦 を 返 し ま す 。 
ユークリッド 距離 ( sqrt ( x * x  +y * y) ) を 返 し ま す 。 
x の 正弦 を 返 し ま す 。 
x  の 正接 を 返 し ま す 。 
以下 は 角度 に 関 する 関数 で す : 
角  x  を ラジアン から 度数 に 変換 し ま す 。 
角  x  を 度数 から ラジアン に 変換 し ま す 。 
以下 は 双曲線 関数 で す : 
x の 双曲 線 正弦 を 返 し ま す 。 
この モジュール で は 以下 の  2 つ の 数学 定数 も 定義 し て い ま す : 
数学 定数  pi 。 
数学 定数  e 。 
注意 :  math  モジュール は 、 ほとんど が 実行 プラットフォーム に お け る C  言語 の 数学 ライブラリ 関数 に 対 する 薄 い ラッパ で でき て い ま す 。 
例外 的 な 場合 で の 挙動 は 、  C  言語 標準 で は おお さっぱ に しか 定義 さ れ て お ら ず 、 さらに  Python  は 数学 関数 に お け る エラー 報告 機能 の 挙動 を プラットフォーム の C  実装 から 受け継 い で い ま す 。 
その 結果 と し て 、 エラー の 際  ( および なん ら か の 引数 が とにかく 例外 的 で あ る と 考え られ る 場合 )  に 送出 さ れ る 特定 の 例外 に つ い て は 、 プラットフォーム 間 や リリース バージョン 間 を 通 じ て 有意 な もの と な っ て い ま せ ん 。 
例えば 、 math . log ( 0 )  が - Inf  を 返 す か  ValueError  また は  OverflowError  を 送出 する か は 不定 で あ り 、 math . log ( 0 )  が  OverflowError  を 送出 する 場合 に お い て math . log ( 0 L )  が  ValueError  を 送出 する とき も あ り ま す 。 
この モジュール は  RSA  社 の  MD 5  メッセージ ダイジェスト  アルゴリズム へ の インタフェース を 実装 し て い ま す 。 
( Internet  RFC  1321  も 参照 し て くださ い ) 。 
利用 方法 は 極めて 単純 で す 。  まず  md 5  オブジェクト を  new( )  を 使 っ て 生成 し ま す 。 
後 は  update ( )  メソッド を 使 っ て 、 生成 さ れ た オブジェクト に 任意 の 文字 列 データ を 入力 し ま す 。  オブジェクト に 入力 さ れ た 文字 列 データ 全体 の  digest  (``fingerprint ' ' と し て 知 ら れ る 強力 な  128 - bit  チェック サム )  は  digest ( )  を 使 っ て いつ で も 調べ る こと が でき ま す 。 
例えば 、 文字 列  ' Nobody  inspects thespammis h  repetition' の ダイジェスト を 得 る ため に は 以下 の よう に し ま す : 
もっと 詰め て 書 く と 以下 の よう に な り ま す : 
以下 の 値 は モジュール の 中 で 定数 と し て 与え られ て お り 、 new ( ) で 返 さ れ る  md 5  オブジェクト の 属性 と し て も 与え られ ま す : 
digest _ size  返 さ れ る ダイジェスト 値 の バイト 数 で 表 し た 長 さ 。 
常 に  16  で す 。 
md 5  クラス オブジェクト は 以下 の メソッド を サポート し ま す : 
新た な  md 5  オブジェクト を 返 し ま す 。 
もし  arg  が 存在 する なら 、 update( arg )  を 呼び出 し ま す 。 
下位 互換 性 の ため に 、 new( )  の 別名 と し て 提供 さ れ て い ま す 。 
md 5  オブジェクト は 以下 の メソッド を サポート し ま す : 
文字 列  arg  を 入力 と し て  md 5  オブジェクト を 更新 し ま す 。 
この メソッド を 繰り返 し て 呼び出 す 操作 は 、 それぞれ の 呼び出 し 時 の 引数 arg  を 結合 し た データ を 引数 と し て 一 回 の 呼び出 す 操作 と 同等 に な り ま す :  つまり 、 m . update ( a ) ; m . update( b )  は m . update ( a + b )  と 同等 で す 。 
これ まで  update ( )  で 与え て き た 文字 列 入力 の ダイジェスト を 返 し ま す 。 
返り 値 は  16  バイト の 文字 列 で 、 null  バイト を 含 む 非  ASCII  文字 が 入 っ て い る か も しれ ま せ ん 。 
digest ( )  に 似 て い ま す が 、 ダイジェスト は 長 さ  32  の 文字 列 に な り 、 16  進 表記 文字 しか 含 み ま せ ん 。 
この 文字 列 は 電子 メール や その 他 の バイナリ を 受け付け な い 環境 で ダイジェスト を 安全 に やりとり する ため に 使 う こと が でき ま す 。 
md 5  オブジェクト の コピー  ( `` クローン ' ')  を 返 し ま す 。 
冒頭 の 部分 文字 列 が 共通 な 複数 の 文字 列 の ダイジェスト を 効率 よ く 計算 する 際 に 使 う こと が でき ま す 。 
Secure  Hash Algorithm  ( SHA )  を 実装 し た 類似 の モジュール 。 
SHA  アルゴリズム は より 安全 な ハッシュ アルゴリズム だ と 考え られ て い ま す 。  . 
mhlib  モジュール は  MH  フォルダ および その 内容 に 対 する  Python  インタフェース を 提供 し ま す 。  この モジュール に は 、 ある フォルダ の 集まり を 表現 する  MH 、 単一 の フォルダ を 表現 する  Folder 、 単一 の メッセージ を 表現 する  Message 、 の  3  つ の クラス が 入 っ て い ま す 。 
クラス MH 
MH  は  MH  フォルダ の 集まり を 表現 し ま す 。  クラス Folder
Folder  クラス は 単一 の フォルダ と フォルダ 内 の メッセージ 群 を 表現 し ま す 。 
クラス Message 
Message  オブジェクト は フォルダ 内 の 個々 の メッセージ を 表現 し ま す 。 
メッセージ クラス は  mimetools . Message  から 導出 さ れ て い ま す 。 
12 . 6 . 1  Message  オブジェクト の 追加 メソッド 
パッケージ を  mimetools モジュール より 優先 し て 使 う べ き で す 。 
この モジュール は 、 下位 互換 性 維持 の ため に のみ 存在 し て い ま す 。 
この モジュール は 、 
モジュール の Message  クラス の サブ クラス と 、 マルチ パート MIME  や 符合 化 メッセージ の 操作 に 役 に 立 つ 多く の ユーティリティ 関数 を 定義 し て い ま す 。  これ に は 以下 の 項目 が 定義 さ れ て い ま す : 
Message  クラス の 新し い インスタンス を 返 し ま す 。 
これ は 、 rfc 822 . Message  クラス の サブ クラス で 、 いく つ か の 追加 の メソッド が あ り ま す ( 以下 を 参照 の こと ) 。 
seekable  引数 は 、  rfc 822 . Message の もの と 同じ 意味 を 持 ち ま す 。 
パート の 境界 と し て 使 う こと が でき る 見込み が 高 い ユニーク な 文字 列 を 返 し ま す 。 
その 文字 列 は 、 'hostipaddr. uid . pid . timestamp . random' の 形 を し て い ま す 。 
オープン し た ファイル オブジェクト  input  から 、 許 さ れ る  MIME encoding を 使 っ て 符号 化 さ れ た データ を 読 ん で 、 オープン さ れ た ファイル オブジェクト output  に 復号 化 さ れ た データ を 書 き ま す 。 
encoding  に 許 さ れ る 値 は 、 ' base 64 ' , 'quoted - printable' , 'uuencode ' , 'x - uuencode ', 'uue ' , 'x - uue ' , ' 7 bit ' ,  および ' 8 bit ' で す 。 
' 7 bit '  あるいは  ' 8 bit '  で 符号 化 さ れ た メッセージ を 復号 化 し て も 何 も 効果 が あ り ま せ ん 。 
入力 が 出力 に 単純 に コピー さ れ る だけ で す 。 
オープン し た ファイル オブジェクト  input  から データ を 読 ん で 、 それ を 許 さ れ る  MIME encoding  を 使 っ て 符号 化 し て 、 オープン し た ファイル オブジェクト  output  に 書 き ま す 。 encoding  に 許 さ れ る 値 は 、 [ methoddecode ( ) の もの と 同じ で す 。 
オープン し た ファイル  input から 行 を  EOF  まで 読 ん で 、 それ ら を オープン し た ファイル  output  に 書 き ま す 。 
オープン し た ファイル  input から ブロック を  EOF  まで 読 ん で 、 それ ら を オープン し た ファイル  output  に 書 き ま す 。 
ブロック の 大き さ は 現在  8192  に 固定 さ れ て い ま す 。 
MIME  データ の よう な 、 別個 の パーツ を 含 む ファイル の 読み込み を サポート 。 
MIME  で よく 訊ね られ る 質問 。 
MIME の 概要 に 関 し て は 、 この 文書 の  Part  1  の 質問  1 . 1  へ の 答え を 見 る こと 。 
mimetypes  モジュール は 、 ファイル 名 あるいは  URL  と 、 ファイル 名 拡張子 に 関連 付け られ た  MIME  型 と を 変換 し ま す 。 
たとえ モジュール が 初期 化 さ れ て い な く て も 、 もし これ ら の 関数 が 、 init ( )  が セットアップ する 情報 に 依存 し て い れ ば 、 これ ら の 関数 は 、 init ( )  を 呼 び ま す 。 
filename  で 与え られ る ファイル 名 あるいは  URL  に 基づ い て 、 ファイル の 型 を 推定 し ま す 。 
戻 り 値 は 、 タプル (type , encoding )  で す 、 ここ で type は 、 もし 型 が ( 拡張 子 が な い あるいは 未 定義 の ため ) 推定 でき な い 場合 は 、 None  を 、 あるいは 、 MIME  content-type :  ヘッダ 
に 利用 でき る 、 'type\/subtype ' の 形 の 文字 列 で す 。 
符号 化 方式 の サ フィックス は 大 \/ 小文字 を 区別 し ま す ; データ 型 サ フィックス は 、 最初 大 \/ 小文字 を 区別 し て 試 し 、 それ から 大 \/ 小文字 を 区別 せ ず に 試 し ま す 。  省略 可能 な  strict は 、 既知 の  MIME  型 の リスト と し て 認識 さ れ る もの が 、 IANA と し て 登録 さ れ た 正式 な 型 のみ に 限定 さ れ る か どう か を 指定 する フラグ で す 。 
strict  が true  ( デフォール ) の 時 は 、 IANA  型 のみ が サポート さ れ ま す ; strict  が false  の とき は 、 いく つ か の 追加 の 、 非 標準 で は あ る が 、 一般 的 に 使用 さ れ る  MIME  型 も 認識 さ れ ま す 。 
type  で 与え られ る  MIME  型 に 基づ い て ファイル の 拡張 子 を 推定 し ま す 。 
戻 り 値 は 、 先頭 の ドット  ( " . " ) を 含 む 、 可能 な ファイル 拡張 子 すべて を 与え る 文字 列 の リスト で す 。 
拡張 子 と 特別 な データ ストリーム と の 関連 付け は 保証 さ れ ま せ ん が 、 guess_type ( ) に よ っ て  MIME 型  type  と マップ さ れ ま す 。  省略 可能 な  strict  は  guess_type ( )  関数 の もの と 同じ 意味 を 持 ち ま す 。 
戻 り 値 は 、 先頭 の ドット  ( " . " ) を 含 む 、 ファイル 拡張 子 を 与え る 文字 列 の リスト で す 。 
拡張 子 と 特別 な データ ストリーム と の 関連 付け は 保証 さ れ ま せ ん が 、 guess_type ( ) に よ っ て  MIME 型  type  と マップ さ れ ま す 。 
もし type に 対 し て 拡張 子 が 推定 でき な い 場合 は 、  None が 返 さ れ ま す 。  省略 可能 な  strict  は  guess_type ( )  関数 の もの と 同じ 意味 を 持 ち ま す 。 
モジュール の 動作 を 制御 する ため に 、 いく つ か の 追加 の 関数 と データ 項目 が 利用 でき ま す 。 
内部 の データ 構造 を 初期 化 し ま す 。 
もし  files  が 与え られ て い れ ば 、 これ は デフォールト の 型 の マップ を 増や す ため に 使 わ れ る 、 一連 の ファイル 名 で な けれ ば な り ま せ ん 。 
もし 省略 さ れ て い れ ば 、 使 わ れ る ファイル 名 は  knownfiles から 取 ら れ ま す 。 
file  あるいは  knownfiles  内 の 各 ファイル 名 は 、 それ 以前 に 現れ る 名前 より 優先 さ れ ま す 。  繰り返 し  init ( )  を 呼び出 す こと は 許 さ れ て い ま す 。 
ファル  filename  で 与え られ た 型 の マップ が 、 もし あ れ ば ロード し ま す 。 
型 の マップ は 、 先頭 の  dot ( " . " )  を 含 む ファイル 名 拡張 子 を 、 'type\/subtype ' の 形 の 文字 列 に マッピング する 辞書 と し て 返さ れ ま す 。 
もし ファイル  filename  が 存在 し な い か 、 読み込め な けれ ば 、 None  が 返 さ れ ま す 。 
mime 型 type  から の マッピング を 拡張 子  ext  に 追加 し ま す 。 
拡張 子 が すでに 既知 で あ れ ば 、 新し い 型 が 古 い もの に 置 き 替わ り ま す 。 
その 型 が すでに 既知 で あ れ ば 、 その 拡張 子 が 、 既知 の 拡張 子 の リスト に 追加 さ れ ま す 。  strict が あ る 時 は 、 その マッピング は 正式 な MIME 型 に 、 そう で な けれ ば 、 非 標準 の MIME 型 に 追加 さ れ ま す 。 
グローバル な データ 構造 が 初期 化 さ れ て い る か どう か を 示 す フラグ 。 
これ は  init ( )  に よ り  true  に 設定 さ れ ま す 。 
共通 に インストール さ れ た 型 マップ ファイル 名 の リスト 。 
これ ら の ファイル は 、 普通  mime.types と い う 名前 で あ り 、 パッケージ ごと に 異な る 場所 に インストール さ れ ま す 。 
これ は 、 符号 化 方式 と 型 が 同一 拡張 子 で 示 さ れ る 符号 化 ファイル が 認識 でき る よう に 使用 さ れ ま す 。 
例えば 、 . tgz  拡張 子 は 、 符号 化 と 型 が 別個 に 認識 でき る よう に  . tar . gz に マップ さ れ ま す 。 
ファイル 名 拡張 子 を 符号 化 方式 型 に マッピング する 辞書 
ファイル 名 拡張 子 を MIME 型 に マップ する 辞書 
ファイル 名 拡張 子 を 非 標準 で は あ る が 、 一般 に 使 わ れ て い る MIME 型 に マップ する 辞書 
MimeTypes  クラス は 、 1 つ 以上 の MIME - 型  データベース を 必要 と する アプリケーション に 役 に 立 つ で しょ う 。 
クラス MimeTypes
この クラス は 、 MIME - 型 データベース を 表現 し ま す 。 
デフォールト で は 、 この モジュール の 他 の もの と 同じ データベース へ の アクセス を 提供 し ま す 。 
初期 データベース は 、 この モジュール に よ っ て 提供 さ れ る もの の コピー で 、 追加 の  mime.types - 形式 の ファイル を 、 read ( )  あるいは  readfp ( ) メソッド を 使 っ て 、 データベース に ロード する こと で 拡張 さ れ ま す 。 
マッピング 辞書 も 、 もし デフォールト の データ が 望 む もの で な けれ ば 、 追加 の データ を ロード する 前 に クリア さ れ ま す 。  省略 可能 な  filenames パラメータ は 、 追加 の ファイル を 、 デフォールト データベース の " トップ に " ロード さ せ る の に 使 う こと が でき ま す 。 
12 . 7 . 1  Mime 型  オブジェクト 
リリース  2 . 3  で 撤廃 さ れ ま し た 。  mimify  モジュール を 使 う より も 
パッケージ を 使 う べ き で す 。 
この モジュール は 以前 の バージョン と の 互換 性 の ため に 保守 さ れ て い る に すぎ ま せ ん 。 
mimify  モジュール で は 電子 メイル メッセージ から  MIME  へ 、 および  MIME  から 電子 メイル メッセージ へ の 変換 を 行 う ため の 二 つ の 関数 を 定義 し て い ま す 。 
電子 メイル メッセージ は 単なる メッセージ で も 、 MIME  形式 で も かま い ま せ ん 。  各 パート は 個別 に 扱 わ れ ま す 。 
メッセージ  ( の 一部 )  の  MIME  化  ( mimify )  の 際 、 7  ビット  ASCII 文字 を 使 っ て 表現 でき な い 何 ら か の 文字 が 含 ま れ て い た 場合 、 メッセージ の quoted - printable  へ の 符号 化 が 伴 い ま す 。 
メッセージ が 送信 さ れ る 前 に 編集 し な けれ ば な ら な い 場合 、 MIME  化 および 非  MIME  化 は 特に 便利 で す 。 
典型 的 な 使用 法 は 以下 の よう に な り ま す : 
モジュール で は 以下 の ユーザ から 呼び出し 可能 な 関数 と 、 ユーザ が 設定 可能 な 変数 を 定義 し て い ま す : 
infile  を  outfile  に コピー し ま す 。 
decode _base 64  引数 が 与え られ て お り 、 その 値 が 真 で あ る 場合 、 base 64  符号 で 符号 化 さ れ て い る パート も 同様 に 復号 化 さ れ ま す 。 
line  内 の 符号 化 さ れ た ヘッダ 行 が 復号 化 さ れ た もの を 返 し ま す 。 
ISO  88 5 9 - 1  文字 セット  ( Latin - 1 )  だけ を サポート し ま す 。  mime_encode _header
line  内 の ヘッダ 行 が  MIME  符号 化 さ れ た もの を 返 し ま す 。 
標準 で は 、 非  ASCII  文字  ( 8  ビット 目 が セット さ れ て い る 文字 )  を 含 む か 、 MAXLEN  文字  ( 標準 の 値 は  200  で す )  より も 長 い 部分 は  quoted - printable  形式 で 符号 化 さ れ ま す 。 
文字 セット が メイル ヘッダ で 指定 さ れ て い な い 場合 指定 し な けれ ば な り ま せ ん 。 
使 わ れ て い る 文字 セット を 表 す 文字 列 は  CHARSET に 記憶 さ れ ま す 。  標準 の 値 は  ISO - 885 9 - 1  ( Latin 1  ( latin - one )  と し て も 知 ら れ て い ま す ) 。 
この モジュール は コマンドライン から 利用 する こと も でき ま す 。 
以下 の よう な 使用 法 : 
復号 化 の 際 に  - b  オプション が 与え られ て い れ ば 、 base 64  パート も 同様 に 復号 化 さ れ ま す 。 
MIME  quoted - printable  形式 ファイル の エンコード および デコード 。  . 
mkcwproject  は  Metrowerks  CodeWarrior  開発 環境 用 の プロジェクト ファイル を 作成 し ま す 。 
これ は  distutils  の ため の ヘルパー モジュール で す が 、 より 多く の 制御 の ため に 独立 し て 利用 でき ま す 。 
メモリ に マップ さ れ た ファイル オブジェクト は 、 文字 列 と ファイル オブジェクト の 両方 の よう に 振舞 い ま す 。 
しかし 通常 の 文字 列 オブジェクト と は 異な り 、 これ ら は 可変 で す 。 
文字 列 が 期待 さ れ る ほとんど の 場所 で mmap オブジェクト を 利用 でき ま す 。  例えば 、 メモリ マップ ファイル を 探索 する ため に re モジュール を 使 う こと が でき ま す 。 
それ ら は 可変 な の で 、  obj [ index] ='a ' の よう に 文字 を 変換 でき ま す し 、 スライス を 使 う こと で obj [ i 1 : i 2 ]  = '. . . '  の よう に 部分 文字 列 を 変換 する こと が でき ま す 。 
現在 の ファイル 位置 を データ の 始め と する 読込 み や 書込 み 、 ファイル の 異な る 位置 へ seek ( ) する こと も でき ま す 。  メモリ マップ ファイル は Unix 上 と Windows 上 と で は 異な る mmap ( ) 関数 に よ っ て 作 ら れ ま す 。 
いずれ の 場合 も 、 開 い た ファイル の ディスク リプタ を 、 更新 の ため に 提供 し な けれ ば な り ま せ ん 。  すでに 存在 する Python ファイル オブジェクト を マップ し た い 場合 は 、 fileno パラメータ の ため の 現在 値 を 手 に 入れ る ため に 、 fileno ( ) メソッド を 使用 し て 下さ い 。 
そう で な けれ ば 、 ファイル ・ ディスク リプタ を 直接 返 す os . open ( ) 関数 ( 呼び出 す とき に は まだ ファイル が 閉じ て い る 必要 が あ り ま す ) を 使 っ て 、 ファイル を 開 く こと が でき ま す 。 
access が 指定 さ れ な い 場合 、 Windows の mmap は 書き込み 可能 マップ を 返 し ま す 。 
3 つ の アクセス 型 すべて に 対 する 初期 メモリ 値 は 、 指定 さ れ た ファイル から 得 られ ま す 。 
ACCESS _ READ を 割り当て た メモリ マップ は TypeError 例外 を 送出 し ま す 。 
ACCESS _ WRITE を 割り当て た メモリ マップ は メモリ と 元 の ファイル の 両方 に 影響 を 与え ま す 。 
ACCESS _ COPY を 割り当て た メモリ マップ は メモリ に 影響 を 与え ま す が 、 元 の ファイル を 更新 する こと は あ り ま せ ん 。 
( Windows ) バージョン は ファイル ハンドル fileno に よ っ て 指定 さ れ た ファイル から length バイト を マップ し て 、 mmap オブジェクト を 返 し ま す 。 
length が 現在 の ファイル サイズ より 大きな 場合 、 ファイル サイズ は length を 含 む 大き さ に まで 拡張 さ れ ま す 。 
length が 0 の 場合 、 マップ の 最大 の 長 さ は Windows が 空 ファイル で 例外 を 起こ す ( Windows で は 空 の マップ を 作成 する こと が でき ま せ ん 。  ) こと を 除 い て は 、 mmap ( ) が 呼 ば れ た とき の ファイル サイズ に な り ま す 。 
tagname は 、 None 以外 で 指定 さ れ た 場合 、 マップ の タグ 名 を 与え る 文字 列 と な り ま す 。 
Windows は 同じ ファイル に 対 する 様々 な マップ を 持 つ こと を 可能 に し ま す 。 
既存 の タグ の 名前 を 指定 すれ ば その タグ が オープン さ れ 、 そう で な けれ ば この 名前 の 新し い タグ が 作成 さ れ ま す 。 
もし この パラメータ を 省略 し たり None を 与え たり し た なら ば 、 マップ は 名前 なし で 作成 さ れ ま す 。 
タグ ・ パラメータ の 使用 の 回避 は 、 あなた の コード を Unix と Windows の 間 で 移植 可能 に し て お く の を 助け て くれ る で しょ う 。 
( Unix ) バージョン は 、 ファイル ・ ディスク リプタ  fileno に よ っ て 指定 さ れ た ファイル から length バイト を マップ し 、 mmap オブジェクト を 返 し ま す 。 
デフォルト は MAP _ SHARED で す 。 
access は オプション の キー ワード ・ パラメータ と し て 、 flags と prot の 代わり に 指定 し て も かま い ま せ ん 。 
flags , prot と access の 両方 を 指定 する こと は 間違 っ て い ま す 。 
この パラメーター を 使用 法 に つ い て の 情報 は 、 access の 記述 を 参照 し て くださ い 。 
メモリ マップ フィイル オブジェクト は 以下 の メソッド を サポート し て い ま す : 
この 呼出し の 後 に オブジェクト の 他 の メソッド の 呼出 す こと は 、 例外 の 送出 を 引き起こ す で しょ う 。 
オブジェクト 内 で 部分 文字 列 string が 見つか っ た 場所 の 最も 小さ い インデックス を 返 し ま す 。  失敗 し た とき - 1 を 返 し ま す 。 
start は 探索 を 始め た い 場所 の インデックス で 、 デフォルト は 0 で す 。 
ファイル の メモリ コピー 内 で の 変更 を ディスク へ フラッシュ し ま す 。  この 呼出し を 使 わ な かっ た 場合 、 オブジェクト が 破壊 さ れ る 前 に 変更 が 書き込 ま れ る 保証 は あ り ま せ ん 。 
もし offset と size が 指定 さ れ た 場合 、 与え られ た バイト の 範囲 の 変更 だけ が ディスク に フラッシュ さ れ ま す 。  指定 さ れ な い 場合 、 マップ 全体 が フラッシュ さ れ ま す 。 
オフセット src から インデックス dest へ count バイト だけ コピー し ま す 。 
もし mmap が ACCESS _ READ で 作成 さ れ て い た 場合 、 TypeError 例外 を 送出 し ま す 。 
)  現在 の ファイル 位置 から num バイト の 文字 列 を 返 し ま す 。 
ファイル 位置 は 返 し た バイト の 分 だけ 後ろ の 位置 へ 更新 さ れ ま す 。 
現在 の ファイル 位置 から 長 さ 1 の 文字 列 を 返 し ま す 。  ファイル 位置 は 1 だけ 進 み ま す 。 
現在 の ファイル 位置 から 次 の 新し い 行 まで の 、 1 行 を 返 し ま す 。 
もし mmap が ACCESS _ READ また は ACCESS _ COPY で 作成 さ れ た なら ば 、 マップ の リサイズ は TypeError 例外 を 送出 し ま す 。 
ファイル の 現在 位置 を セット し ま す 。 
whence 引数 は オプション で あ り 、 デフォルト は 0 ( 絶対 位置 ) で す 。  その 他 の 値 と し て 、 1 ( 現在 位置 から の 相対 位置 ) と 2 ( ファイル の 終わり から の 相対 位置 ) が あ り ま す 。 
ファイル の 長 さ を 返 し ま す 。  メモリ マップ 領域 の サイズ より 大き い か も しれ ま せ ん 。 
ファイル ・ ポインタ の 現在 位置 を 返 し ま す 。 
メモリ 内 の ファイル ・ ポインタ の 現在 位置 から string の バイト 列 を 書き込 み ま す 。 
ファイル 位置 は バイト 列 が 書き込 ま れ た 後 の 位置 へ 更新 さ れ ま す 。  もし mmap が ACCESS _ READ で 作成 さ れ て い た 場合 、 書き込 み 時 に TypeError 例外 が 送出 さ れ る で しょ う 。 
この モジュール の 関数 は 、  Windows  プラットフォーム の 便利 な 機能 の いく つ か に 対 する アクセス 機構 を 提供 し て い ま す 。 
高 レベル モジュール の いく つ か は 、 提供 する サービス を  Windows  で 実装 する ため に 、 これ ら の 関数 を 使 っ て い ま す 。 
例えば 、 
モジュール は 関数  getpass ( )  を 実装 する ため に この モジュール の 関数 を 使 い ま す 。 
ここ に 挙げ た 関数 の 詳細 な ドキュメント に つ い て は 、 プラットフォーム  API ドキュメント で 見つけ る こと が でき ま す 。 
MultiFile  オブジェクト は テキスト ファイル を 区分 し た もの を ファイル 類似 の 入力 オブジェクト と し て 扱え る よう に し 、 指定 し た 区切り 文字 ( delimiter )  パタン に 遭遇 し た 際 に ' ' が 返 さ れ る よう に し ま す 。 
この クラス の 標準 設定 は  MIME  マルチ パート メッセージ を 解釈 する 上 で 便利 と な る よう に 設計 さ れ て い ま す が 、 サブ クラス 化 を 行 っ て 幾 つ か の メソッド を 上書き する こと で 、 簡単 に 汎用 目的 に 対応 さ せ る こと が でき ま す 。 
ま す 。  クラス MultiFile 
マルチ ファイル  ( multi - file )  を 生成 し ま す 。 
この クラス は open ( )  が 返 す ファイル オブジェクト の よう な 、 MultiFile  インスタンス が 行 データ を 取得 する ため の 入力 と な る オブジェクト を 引数 と し て インスタンス 化 を 行 わ な けれ ば な り ま せ ん 。 
MultiFile  は 入力 オブジェクト の  readline ( ) 、 seek ( ) 、 および tell ( )  メソッド しか 参照 せ ず 、 後者 の 二 つ の メソッド は 個々 の  MIME  パート に ランダム アクセス し た い 場合 に のみ 必要 で す 。 
MultiFile  を  seek  でき な い ストリーム オブジェクト で 使 う に は 、 オプション の  seekable  引数 の 値 を 偽 に し て くださ い ;  これ に よ り 、 入力 オブジェクト の  seek ( ) および tail ( )  メソッド を 使 わ な い よう に な り ま す 。 
MultiFile  の 視点 から 見 る と 、 テキスト は 三 種類 の 行 データ : データ 、 セクション 分割 子 、 終了 マーカ 、 から な る こと を 知 っ て い る と 約 に 立 つ で しょ う 。 
MultiFile  は 、 多重 入れ子 構造 に な っ て い る 可能 性 の あ る 、 それぞれ が 独自 の セクション 分割 子 および 終了 マーカ の パターン を 持 つ メッセージ パート を サポート する よう に 設計 さ れ て い ま す 。 
網羅 的 な 電子 メイル 操作 パッケージ ;  multifile  モジュール に 取 っ て 代わ り ま す 。 
mutex  モジュール で は 、 ロック  ( lock )  の 獲得 と 解除 に よ っ て 排他 制御 を 可能 に する クラス を 定義 し て い ま す 。 
排他 制御 は スレッド や マルチタスク を 使 う 上 で 便利 か も しれ ま せ ん が 、 この クラス が そう し た 機能 を 必要 と し て  ( い たり 、 想定 し て )  い る わけ で は あ り ま せ ん 。  mutex モジュール で は 以下 の クラス を 定義 し て い ま す : 
mutex  に は  2  つ の 状態 変数  --` ` ロック ' ' ビット  ( locked bit )  と キュー  (queue )  が あ り ま す 。 
mutex  が ロック さ れ て い な けれ ば 、 キュー は 空 で す 。 
function ( argument )  を 呼び出 し ま す 。  これ に よ っ て 、 先頭 に あ っ た エントリ が 新た な ロック を 獲得 し ま す 。 
当然 の こと ながら マルチ スレッド の 制御 に は 利用 でき ま せ ん  -  と い う の も 、 lock ( )  が 、 ロック を 獲得 し た ら 関数 を 呼び出 す と い う 変 な インタフェース だ から で す 。 
バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
netrc  クラス は 、 Unix  ftp  プログラム や 他 の FTP  クライアント で 用い られ る  netrc  ファイル 形式 を 解析 し 、 カプセル 化 ( encapsulate )  し ま す 。 
クラス netrc
netrc  の インスタンス や サブ クラス の インスタンス は  netrc ファイル の データ を カプセル 化 し ま す 。 
初期 化 の 際 の 引数 が 存在 する 場合 、 解析 対象 と な る ファイル の 指定 に な り ま す 。 
引数 が な い 場合 、 ユーザ の ホーム ディレクトリ 下 に あ る  . netrc  が 読み出 さ れ ま す 。 
解析 エラー が 発生 し た 場合 、 ファイル 名 、 行 番号 、 解析 を 中断 し た トークン に 関 する 情報 の 入 っ た  NetrcParseError  を 送出 し ま す 。 
ソース ファイル の テキスト 中 で 文法 エラー に 遭遇 し た 場合 に  netrc  クラス に よ っ て 送出 さ れ る 例外 で す 。 
この 例外 の インスタンス は  3  つ の インスタンス 変数 を 持 っ て い ま す :  msg  は テキスト に よ る エラー の 説明 で 、 filename  は ソース ファイル の 名前 、 そして  lineno  は エラー が 発見 さ れ た 行 番号 で す 。 
new モジュール は インタプリタ オブジェクト 作成 関数 へ の インターフェイス を 与え ま す 。 
新し い オブジェクト を ` ` 魔法 を 使 っ た よう に ' ' 作り出 す 必要 が あ る 、 通常 の 作成 関数 が 使え な い とき に 、 これ は 主に マーシャル 型 関数 で 使 わ れ ま す 。 
この 関数 は _ _ init_ _( ) コンストラクタ を 呼び出 さ ず に 辞書 dict を も つ class の インスタンス を 作り出 し ま す 。 
dict が 省略 さ れ る か 、 None で あ る 場合 は 、 新し い インスタンス の ため に 新し い 空 の 辞書 が 作 ら れ ま す 。 
オブジェクト が いつ も と 同じ 状態 で あ る と い う 保証 は な い こと に 注意 し て くださ い 。 
この 関数 は instance に 束縛 さ れ た メソッド オブジェクト か 、 あるいは instance が None の 場合 に 束縛 さ れ て い な い メソッド オブジェクト を 返 し ま す 。 function は 呼び出し 可能 で な けれ ば な り ま せ ん 。 
与え られ た コード と グローバル 変数 を も つ ( Python ) 関数 を 返 し ま す 。 
name を 与え る なら ば 、 文字 列 か None で な けれ ば な ら な い 。 
文字 列 の 場合 は 、 関数 は 与え られ た 名前 を も つ 。 
そう で な けれ ば 、 関数 名 は  code . co_ name から 取 ら れ る 。 
argdefs を 与え る 場合 は タプル で な けれ ば な ら ず 、 パラメータ の デフォルト 値 を 決め る ため に 使 わ れ ま す 。 
この 関数 は Py Code _New ( ) と い う C 関数 へ の インターフェイス で す 。 
この 関数 は name と い う 名前 の 新し い モジュール オブジェクト を 返 し ま す 。 
name は 文字 列 で な けれ ば な ら な い 。 
この 関数 は 新し い クラス オブジェクト を 返 し ま す 。  その クラス オブジェクト は ( クラス の タプル で あ る べ き ) baseclasses から 派生 し 、 名前 空間 dict を 持 ち 、 name と い う 名前 で す 。 
UNIX プラットフォーム で 利用 でき ま す 。 
match ( key ,  mapname ) = = value  と な る  key を  value  に 対応 付け る 辞書 を 返 し ま す 。 
辞書 内 の キー と 値 は 共 に 任意 の バイト 列 な の で 注意 し て くださ い 。  mapname  は 他 の 名前 の 別名 に な っ て い な い か 最初 に チェック さ れ ま す 。 
有効 な マップ の リスト を 返 し ま す 。 
nis  モジュール は 以下 の 例外 を 定義 し て い ま す : 
NIS  関数 が エラー コード を 返 し た 場合 に 送出 さ れ ま す 。 
この モジュール で は 、  クラス  NNTP  を 定義 し て い ま す 。 
この クラス は  NNTP  プロトコル の クライアント 側 を 実装 し て い ま す 。  この モジュール を 使 え ば 、 ニュース リーダ や 記事 投稿 プログラム 、 また は 自動 的 に ニュース 記事 を 処理 する プログラム を 実装 する こと が でき ま す 。 
NNTP  ( Network  News  Transfer Protocol 、 ネット ニュース 転送 プロトコル )  の 詳細 に つ い て は 、 インターネット  RFC  97 7  を 参照 し て くださ い 。  以下 に この モジュール の 使 い 方 の 小さな 例 を 二 つ 示 し ま す 。 
ニュース グループ に 関 する 統計 情報 を 列挙 し 、 最新  10  件 の 記事 を 出力 する に は 以下 の よう に し ま す : 
ファイル から 記事 を 投稿 する に は 、 以下 の よう に し ま す ( この 例 で は 記事 番号 は 有効 な 番号 を 指定 し て い る と 仮定 し て い ま す ) : 
この モジュール 自体 で は 以下 の 内容 を 定義 し て い ま す : 
クラス NNTP 
ホスト  host  上 で 動作 し 、 ポート 番号  port  で 要求 待ち を し て い る  NNTP  サーバ と の 接続 を 表現 する 新た な  NNTP  クラス の インスタンス を 返 し ま す 。 
標準 の port は  119  で す 。 
オプション の user  および  password  が 与え られ て い る か 、 また は \/ . netrc に 適切 な 認証 情報 が 指定 さ れ て い て usenetrc が 真  ( デフォルト )  の 場合 、 " AUTHINFO  USER "  および  " AUTHINFO  PASS "  命令 を 使 っ て サーバ に 対 し て 身元 証明 および 認証 を 行 い ま す 。 
オプション の フラグ readermode  が 真 の 場合 、 認証 の 実行 に 先立 っ て  " mode  reader "  命令 が 送信 さ れ ま す 。 
reader  モード は 、 ローカル マシン 上 の  NNTP  サーバ に 接続 し て い て 、 " group "  の よう な  reader  特有 の 命令 を 呼び出 し た い 場合 に 便利 な こと が あ り ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : usenetrc  引数 を 追加 し ま し た 
クラス NNTPError 
標準 の 例外  Exception  から 導出 さ れ て お り 、 nntplib モジュール が 送出 する 全て の 例外 の 基底 クラス で す 。 
クラス NNTPReplyError 
期待 はずれ の 応答 が サーバ から 返 さ れ た 場合 に 送出 さ れ る 例外 で す 。 
以前 の バージョン と の 互換 性 の ため に 、 error _reply  は この クラス と 等価 に な っ て い ま す 。 
クラス NNTPTemporaryError 
エラー コード の 範囲 が  400 - 499  の エラー を 受信 し た 場合 に 送出 さ れ る 例外 で す 。 
以前 の バージョン と の 互換 性 の ため に 、 error_temp  は この クラス と 等価 に な っ て い ま す 。 
クラス NNTPPermanentError 
エラー コード の 範囲 が  500 - 599  の エラー を 受信 し た 場合 に 送出 さ れ る 例外 で す 。 
以前 の バージョン と の 互換 性 の ため に 、 error _perm  は この クラス と 等価 に な っ て い ま す 。 
クラス NNTP ProtocolError 
サーバ から 返 さ れ る 応答 が  1 - 5  の 範囲 の 数字 で 始ま っ て い な い 場合 に 送出 さ れ る 例外 で す 。 
以前 の バージョン と の 互換 性 の ため に 、 error _proto  は この クラス と 等価 に な っ て い ま す 。 
クラス NNTPDataError 
応答 データ 中 に 何 ら か の エラー が 存在 する 場合 に 送出 さ れ る 例外 で す 。 
以前 の バージョン と の 互換 性 の ため に 、 error_ data  は この クラス と 等価 に な っ て い ま す 。 
nsremote  は  Netscape  の  OSA  モジュール の ラッパー で あ り 、 好き な ブラウザ に 対 し て  URL  を 簡単 に 送 る こと が でき ま す 。 
Macintosh モジュール リファレンス 
operator  モジュール は 、 Python  固有 の 各 演算 子 に 対応 し て い る C  言語 で 実装 さ れ た 関数 セット を 提供 し ま す 。 
例えば 、 operator . add ( x ,  y )  は 式  x + y  と 等価 で す 。 
これ ら は  a  および  b  の 大小 比較 を 行 い ま す 。 
特に 、 lt ( a ,  b )  は 
、 le ( a ,  b )  は 
、 eq ( a ,  b )  は 
、 ne ( a ,  b )  は 
、 gt ( a ,  b )  は 
a b  、 そして ge ( a ,  b )  は 
と 等価 で す 。 
組み込 み 関数  cmp ( )  と 違 っ て 、 これ ら の 関数 は どの よう な 値 を 返 し て も よ く 、 ブール 代数 値 と し て 解釈 でき て も でき な く て も かま い ま せ ん 。 
大小 比較 の 詳細 に つ い て は 
を 参照 し て くださ い 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
論理 演算 も また 全て の オブジェクト に 対 し て 適用 する こと が でき 、 真値 テスト 、 同一 性 テスト および ブール 演算 を サポート し ま す : 
not  o  の 結果 を 返 し ま す 。 
( オブジェクト の インスタンス に は __not__( )  メソッド は 適用 さ れ な い の で 注意 し て くださ い ; この 操作 を 定義 し て い る の は インタプリタコア だけ で す 。 
結果 は _ _nonzero_ _( )  および _ _len__( )  メソッド に よ っ て 影響 さ れ ま す 。 ) 
o  が 真 の 場合  True  を 返 し 、 そう で な い 場合  False  を 返 し ま す 。 
この 関数 は bool の コンストラクタ 呼び出し と 同等 で す 。 
を 返 し ま す 。 
演算 子 で 最も 多 い の は 数学 演算 および ビット 単位 の 演算 で す : 
o  の 絶対 値 を 返 し ま す 。 
数値  a  および  b  に つ い て  a  + b  を 返 し ま す 。 
a  と  b  の 論理 積 を 返 し ま す 。 
_ _future_ _. division  が 有効 で な い 場合 に は  a \/ b を 返 し ま す 。 
` ` 古 い ( classic ) ' ' 除算 と し て も 知 ら れ て い ま す 。 
a\/\/b  を 返 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
o  の ビット 単位 反転 を 返 し ま す 。 
o  と 同じ で す 。 
a  の  b  ビット 左 シフト を 返 し ま す 。 
a% b  を 返 し ま す 。 
数値  a  および  b  に つ い て  a* b を 返 し ま す 。 
o  の 符号 反転 を 返 し ま す 。 
a  と  b  の 論理 和 を 返 し ま す 。 
o  の 符号 非 反転 を 返 し ま す 。 
数値  a  および  b  に つ い て  a ** b を 返 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
a  の  b  ビット 右 シフト を 返 し ま す 。 
a  - b  を 返 し ま す 。 
_ _future_ _. division  が 有効 な 場合  a \/b  を 返 し ま す 。 
除算 と し て も 知 ら れ て い ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
a  および  b  の 排他 的 論理 和 を 返 し ま す 
シーケンス を 扱 う 演算 子 に は 以下 の よう な もの が あ り ま す : 
シーケンス  a  および  b  に つ い て  a  + b  を 返 し ま す 。 
b in  a  を 調べ た 結果 を 返 し ま す 。  演算 子 が 反転 し て い る の で 注意 し て くださ い 。 
関数 名_ _contains_ _( )  は  Python  2 . 0  で 追加 さ れ ま し た 。 
a  の 中 に  b  が 出現 する 回数 を 返 し ま す 。 
a  で イン デクス が  b  の 要素 を 削除 し ま す 。 
a  で イン デクス が  b  から  c 
- 1  の スライス 要素 を 削除 し ま す 。 
a  で イン デクス が  b  の 要素 を 削除 し ま す 。 
- 1  の スライス 要素 を 返 し ま す 。 
a  で 最初 に  b  が 出現 する 場所 の インデクス を 返 し ま す 。 
シーケンス  a  と 整数  b  に つ い て  a* b を 返 し ま す 。 
リリース  2 . 0  で 撤廃 さ れ ま し た 。  contains ( )  を 使 っ て くださ い 。 
contains ( )  の 別名 で す 。 
a  で イン デクス が  b  の 要素 の 値 を  c  に 設定 し ま す 。 
operator  モジュール で は 、 オブジェクト の 型 を 調べ る ため の 述語 演算 子 も 定義 し て い ま す 。 
注意 : これ ら の 関数 が 返 す 結果 に つ い て 誤 っ て 理解 し な い よう 注意 し て くださ い ;  インスタンス オブジェクト に 対 し て 常 に 信頼 でき る 値 を 返 す の は  isCallable ( )  だけ で す 。 
例えば 以下 の よう に な り ま す : 
リリース  2 . 0  で 撤廃 さ れ ま し た 。  callable ( )  を 使 っ て くださ い 。 
オブジェクト  o  を 関数 の よう に 呼び出 す こと が でき る 場合 真 を 返 し 、 それ 以外 の 場合  false  を 返 し ま す 。 
関数 、 バインド および 非 バインド メソッド 、 クラス オブジェクト 、 および __ call_ _( )  メソッド を サポート する インスタンス オブジェクト は 真 を 返 し ま す 。 
オブジェクト  o  が マップ 型 インタフェース を サポート する 場合 に 真 を 返 し ま す 。  辞書 および 全て の インスタンス オブジェクト に 対 し て は 、 この 値 は 真 に な り ま す 。 
警告 : インタフェース 自体 が 誤 っ た 定義 に な っ て い る ため 、 ある インスタンス が 完全 な マップ 型 プロトコル を 備え て い る か を 調べ る 信頼 性 の あ る 方法 は 存在 し ま せ ん 。 
この ため 、 この 関数 に よ る テスト は さほど 便利 で は あ り ま せ ん 。 
オブジェクト  o  が 数値 を 表現 し て い る 場合 に 真 を 返 し ま す 。 
C  で 実装 さ れ た 全て の 数値 型 、 および それ ら の インスタンス オブジェクト 全て 対 し て 、 この 値 は 真 に な り ま す 。 
警告 : インタフェース 自体 が 誤 っ た 定義 に な っ て い る ため 、 ある インスタンス が 完全 な 数値 型 の インタフェース を サポート し て い る か を 調べ る 信頼 性 の あ る 方法 は 存在 し ま せ ん 。 
o  が シーケンス 型 プロトコル を サポート する 場合 に 真 を 返 し ま す 。  シーケンス 型 メソッド を  C  で 定義 し て い る 全て の オブジェクト に 対 し て 、 この 値 は 真 に な り ま す 。 
警告 : インタフェース 自体 が 誤 っ た 定義 に な っ て い る ため 、 ある インスタンス が 完全 な シーケンス 型 の インタフェース を サポート し て い る か を 調べ る 信頼 性 の あ る 方法 は 存在 し ま せ ん 。 
この ため 、 この 関数 に よ る テスト は さほど 便利 で は あ り ま せ ん 。 
例 :  0  から  255  まで の 序数 を 文字 に 対応 付け る 辞書 を 構築 し ま す 。 
operator  モジュール は アトリビュート と アイテム の 汎用 的 な 検索 の ため の 道具 も 定義 し て い ま す 。 
map ( ) , sorted ( ) , itertools . groupby ( ) ,  や 関数 を 引数 に 取 る その 他 の 関数 に 対 し て 高速 に フィールド を 抽出 する 際 に 引数 と し て 使 う と 便利 で す 。 
例 : 
optparse  モジュール は 、 getopt  より も 簡便 で 、 柔軟 性 に 富 み 、 かつ 強力 な コマンドライン 解析 ライブラリ で す 。 optparse  で は 、 より 明快 な スタイル の コマンドライン 解析 手法 、 すなわち OptionParser  の インスタンス を 作成 し て オプション を 追加 し て ゆ き 、 その インスタンス で コマンドライン を 解析 する と い う 手法 を と っ て い ま す 。 
optparse  を 使 う と 、 GNU \/ POSIX  構文 で オプション を 指定 でき る だけ で な く 、 使用 法 や ヘルプ メッセージ の 生成 も 行え ま す 。 optparse  を 使 っ た 簡単 な スクリプト 例 を 以下 に 示 し ま す : 
この よう に わずか な 行数 の コード に よ っ て 、 スクリプト の ユーザ は コマンドライン 上 で 例えば 以下 の よう な  「 よく あ る 使 い 方 」  を 実行 でき る よう に な り ま す : 
コマンドライン 解析 の 中 で 、 optparse  は ユーザ の 指定 し た コマンドライン 引数 値 に 応じ て parse_args ( )  の 返 す options  の 属性 値 を 設定 し て ゆ き ま す 。 
parse_args ( )  が コマンドライン 解析 から 処理 を 戻 し た とき 、 options . filename  は " outfile "  に 、 options . verbose は  False  に な っ て い る はず で す 。 
optparse  は 長 い 形式 と 短 い 形式 の 両方 の オプション 表記 を サポート し て お り 、 短 い 形式 は 結合 し て 指定 でき ま す 。  また 、 様々 な 形 で オプション に 引数値 を 関連 付け られ ま す 。 
従 っ て 、 以下 の コマンドライン は 全て 上 の 例 と 同じ 意味 に な り ま す : 
さらに 、 ユーザ が 
の いずれ か を 実行 する と 、 optparse  は スクリプト の オプション に つ い て 簡単 に まとめ た 内容 を 出力 し ま す : 
6 . 21 . 1 . 2  オプション と は 何 か 
6 . 21 . 1 . 3  固定 引数 と は 何 か 
6 . 21 . 2 . 1  オプション ・ アクション を 理解 する 
6 . 21 . 2 . 2  store  アクション 
6 . 21 . 2 . 3  ブール 値  ( フラグ )  オプション の 処理 
6 . 21 . 2 . 4  その 他 の アクション 
6 . 21 . 2 . 5  デフォルト 値 
6 . 21 . 2 . 6  ヘルプ の 生成 
6 . 21 . 2 . 7  バージョン 番号 の 出力 
6 . 21 . 2 . 8  optparse  の エラー 処理 法 
6 . 21 . 2 . 9  全て を つなぎ合わせ る 
6 . 21 . 3 . 1  パーザ へ の オプション 追加 
6 . 21 . 3 . 2  オプション の 定義 
6 . 21 . 3 . 3  標準 的 な オプション ・ アクション 
6 . 21 . 3 . 5  オプション 解析 器 へ の 問い合わせ と 操作 
6 . 21 . 3 . 6  オプション 間 の 衝突 
6 . 21 . 4 . 1  callback オプション の 定義 
6 . 21 . 4 . 2  コール バック 関数 は どの よう に 呼び出 さ れ る か 
6 . 21 . 4 . 3  コール バック 中 で 例外 を 送出 する 
6 . 21 . 4 . 4  コール バック の 例  1 :  ありふれ た コール バック 
6 . 21 . 4 . 5  コール バック の 例  2 :  オプション の 順番 を チェック する 
6 . 21 . 4 . 6  コール バック の 例  3 :  オプション の 順番 を チェック する  ( 汎用 的 ) 
6 . 21 . 4 . 7  コール バック の 例  4 :  任意 の 条件 を チェック する 
6 . 21 . 4 . 8  コール バック の 例 5 :  固定 引数 
6 . 21 . 4 . 9  コール バック の 例 6 :  可変 個 の 引数 
この モジュール で は 、 オペレーティング システム 依存 の 機能 を 利用 する 方法 と し て 、 
や nt  と い っ た オペレーティング システム 依存 の 組み込 み モジュール を import  する より も 可搬 性 の 高 い 手段 を 提供 し て い ま す 。  この モジュール は 、 mac  や 
の よう な 、 オペレーティング システム 依存 の 組み込 み モジュール から 関数 や データ を 検索 し て 、 見つか っ た もの を 取り出 し  ( export )  ま す 。 
Python  に お け る 組み込み の オペレーティング システム 依存 モジュール は 、 同じ 機能 を 利用 する こと が でき る 限り 、 同じ インタフェース を 使 い ま す ;  たとえば 、 os . stat ( path )  は  path  に つ い て の  stat  情報 を ( たまたま  POSIX  インタフェース に 起源 する )  同じ 書式 で 返 し ま す 。  特定 の オペレーティング システム 固有 の 拡張 も  os  を 介 し て 利用 する こと が でき ま す が 、 これ ら の 利用 は もちろん 、 可搬 性 を 脅か し ま す ! 最初 の 
関数 が システム 関連 の エラー ( 引数 の 型 違い や 他 の あ り がち な エラー で は な い ) を 返 し た 場合 この 例外 が 発生 し ま す 。  これ は  OSError  と し て 知 ら れ る 組み込 み 例外 で も あ り ま す 。 
付属 する 値 は  errno  から と っ た 数値 の エラー コード と 、 エラー コード に 対応 する 、 C  関数 perror ( )  に より 出力 さ れ る の と 同じ 文字 列 から な る ペア で す 。 
背後 の オペレーティング システム で 定義 さ れ て い る エラー コード 名 が 収め られ て い る 
を 参照 し て くださ い 。  例外 が クラス の 場合 、 この 例外 は 二 つ の 属性 、 errno  と strerror  を 持 ち ま す 。 
前者 の 属性 は  C  の errno  変数 の 値 、 後者 は  strerror ( )  に よ る 対応 する エラー メッセージ の 値 を 持 ち ま す 。 
( chdir ( )  や unlink ( )  の よう な ) ファイル システム 上 の パス を 含 む 例外 に 対 し て は 、 この 例外 インスタンス は  3  つめ の 属性 、 filename  を 持 ち 、 関数 に 渡 さ れ た ファイル 名 と な り ま す 。 
import  さ れ て い る オペレーティング ・ システム 依存 モジュール の 名前 で す 。 
現在 次 の 名前 が 登録 さ れ て い ま す : 'posix ' , 'nt' 、 ' dos' 、 'mac' 、 'os 2 ' 、 'ce '  、 ' java ' 、 'riscos ' 。 
posixpath  や  macpath  の よう に 、 システム ごと に 対応 付け られ て い る パス 名 操作 の ため の システム 依存 の 標準 モジュール で す 。 
すなわち 、 正し く import  が 行 わ れ る かぎり 、 os . path . split ( file )  は  posixpath . split ( file ) と 等価 で あ り ながら より 汎用 性 が あ り ま す 。 
この モジュール 自体 が import  可能 な モジュール で も あ る の で 注意 し て くださ い 。 
と し て 直接  import  し て も かま い ま せ ん 。 
この モジュール に は 、 パス 名 を 操作 する 便利 な 関数 が 定義 さ れ て い ま す 。 
警告 : これ ら の 関数 の 多く は Windows の 一律 命名 規則 ( UNC パス 名 ) を 正し く サポート し て い ま せ ん 。  splitunc ( ) と ismount ( ) は 正し く UNC パス 名 を 操作 でき ま す 。 
パス 名 path の 末尾 の ファイル 名 を 返 し ま す 。 
これ は split ( path ) で 返 さ れ る ペア の 2 番 目 の 要素 で す 。 
この 関数 が 返 す 値 は Unix の  basename と は 異な り ま す ; Unix の basename は '\/ foo\/ bar \/ ' に 対 し て ' bar ' を 返 し ま す が 、 basename ( ) は 空 文字 列 ( ' ' ) を 返 し ま す 。 
パス の list の 中 の 共通 する 最長 の プレフィックス を ( パス 名 の 1 文字 1 文字 を 判断 し て ) 返 し ま す 。 
もし list が 空 なら 、 空 文字 列 ( ' ' ) を 返 し ま す 。 
これ は 一 度 に 1 文字 を 扱 う ため 、 不正 な パス を 返 す こと が あ る か も しれ ま せ ん の で 注意 し て 下さ い 。 
パス path の ディレクトリ 名 を 返 し ま す 。 
これ は split ( path ) で 返 さ れ る ペア の 最初 の 要素 で す 。 
path が 存在 する なら 、 True を 返 し ま す 。  壊れ た シンボリッッ クリンク に つ い て は False を 返 し ま す 。 
path  が 存在 する パス なら True  を 返 す 。  壊れ た シンボリッッ クリンク に つ い て は True を 返 し ま す 。 
os . lstat ( ) が な い 環境 で は exists ( ) と 同じ で す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
与え られ た 引数 の 最初 の " ~ " また は " ~ user 
" を 、 user の ホーム ディレクトリ の パス に 置き換え て 返 し ま す 。 
最初 が " ~ " なら 、 環境 変数 の HOME の 値 に 置き換え られ ま す ; " ~user 
" なら 、 ビルト イン モジュール 
を 使 っ て パスワード ディレクトリ から 該当 する もの を 検索 し ま す 。 
もし 置き換え に 失敗 し たり 、 引数 の パス が チルダ で 始ま っ て い な かっ た ら 、 パス を その まま 返 し ま す 。 
Macintosh で は path を その まま 返 し ま す 。 
引数 の パス を 環境 変数 に 展開 し て 返 し ま す 。 
引数 の 中 の " $ name 
" また は " $ { name } " の 文字 列 が 環境 変数 の name に 置き換え られ ま す 。 
不正 な 変数 名 や 存在 し な い 変数 名 の 場合 に は 変換 さ れ ず 、 その まま 返 し ま す 。 
Macintosh で は path を その まま 返 し ま す 。 
path に 最後 に アクセス し た 時刻 を 、 エポック ( 
モジュール を 参照 ) から の 経過 時間 を 示 す 秒数 で 返 し ま す 。 
ファイル が 存在 し な かっ たり アクセス でき な い 場合 は os . error を 発生 し ま す 。 
path の 最終 更新 時刻 を 、 エポック ( 
システム に よ っ て 、 ファイル の 最終 変更 時刻  ( Unix  の よう な  システム )  や 作成 時刻  ( Windows  の よう な システム )  を システム の ctime で 返 し ま す 。 
戻 り 値 は エポック ( 
モジュール を 参照 ) から の 経過 秒数 を 示 す 数値 で す 。 
ファイル path の サイズ を バイト 数 で 返 し ま す 。 
path が 絶対 パス ( スラッシュ で 始ま る ) なら 、 True を 返 し ま す 。 
path が 存在 する 正し い ファイル なら 、 True を 返 し ま す 。 
シンボリック リンク の 場合 に は その 実体 を チェック する の で 、 同じ パス に 対 し て islink ( ) と isfile ( ) の 両方 が True を 返 す こと が あ り ま す 。 
path が 存在 する なら 、 True を 返 し ま す 。 
シンボリック リンク の 場合 に は その 実体 を チェック する の で 、 同じ パス に 対 し て islink ( ) と isfile ( ) の 両方 が True を 返 す こと が あ り ま す 。 
path が シンボリック リンク なら 、 True を 返 し ま す 。 
シンボリック リンク が サポート さ れ て い な い プラットフォーム で は 、 常 に False を 返 し ま す 。 
パス 名 path が マウント ポイント mount point ( ファイル システム の 中 で 異な る ファイル システム が マウント さ れ て い る ところ ) なら 、 True を 返 し ま す : この 関数 は path の 親 ディレクトリ で あ る 
path\/. . が path と 異な る デバイス 上 に あ る か 、 あるいは 
path\/. . と path が 同じ デバイス 上 の 同じ i - node を 指 し て い る か を チェック し ま す - - これ に よ っ て 全て の Unix と POSIX 標準 で マウント ポイント が 検出 でき ま す 。 
パス に 1 つ あるいは それ 以上 の パス の 要素 を うま く 結合 し ま す 。 
付け加え る 要素 に 絶対 パス が あ れ ば 、 それ より 前 の 要素 は 全て 破棄 さ れ 、 以降 の 要素 を 結合 し ま す 。 
戻 り 値 は path 1 と 省略 可能 な path2 以降 を 結合 し た もの で 、 path 2 が 空 文字 列 で な い なら 、 ディレクトリ の 区切り 文字 (os. sep ) が 各 要素 の 間 に 挿入 さ れ ま す 。 
Windows で は 各 ドライブ に 対 し て カレント ディレクトリ が あ る の で 、 os . path . join ( " c : " ,  " foo " ) に よ っ て 、 c : foo で は な く 、 ドライブ C : 上 の カレント ディレクトリ から の 相対 パス ( c : foo ) が 返 さ れ ま す 。 
パス 名 の 大 文字 、 小 文字 を システム の 標準 に し ま す 。 
Unix で は その まま 返 し ま す 。  大 文字 、 小 文字 を 区別 し な い ファイル システム で は パス 名 を 小 文字 に 変換 し ま す 。 
Windows で は 、 スラッシュ を バックス ラッシュ に 変換 し ま す 。 
パス 名 を 標準 化 し ま す 。 
余分 な 区切り 文字 や 上位 レベル 参照 を 削除 し ま す 。 
例えば 、 A \/ \/B、 A \/ .\/B 、 A \/ foo\/ . . \/ B は 全て A \/ B に な り ま す 。 
大 文字 、 小 文字 は 標準 化 し ま せ ん ( それ に は normcase ( ) を 使 っ て 下さ い ) 。 
Windows で は 、 スラッシュ を バックス ラッシュ に 変換 し ま す 。 
パス が シンボリック リンク を 含 ん で い る か に よ っ て 意味 が 変わ る こと に 注意 し て くださ い 。 
2 つ の 引数 で あ る パス 名 が 同じ ファイル あるいは ディレクトリ を 指 し て い れ ば ( 同じ デバイス ナンバー と i - node ナンバー で 示 さ れ て い れ ば ) 、 True を 返 し ま す 。  どちら か の パス 名 で os . stat ( ) の 呼び出し に 失敗 し た 場合 に は 、 例外 が 発生 し ま す 。 
利用 可能 : Macintosh 、 Unix 
fp 1 と fp 2 が 同じ ファイル オブジェクト を 指 し て い た ら 、 True を 返 し ま す 。 
2 つ の ファイル オブジェクト が 異な る ファイル ディスク リプタ を 示 す こと も あ り ま す 。  利用 可能 : Macintosh 、 Unix 
stat タプル stat 1 と stat 2 が 同じ ファイル を 指 し て い た ら 、 True を 返 し ま す 。 
これ ら の タプル は fstat ( ) 、 lstat ( ) や stat ( ) で 返 さ れ た もの で かま い ま せ ん 。 
この 関数 は 、 samefile ( ) と sameopenfile ( ) で 使 わ れ る の と 同様 な もの を 背後 に 実装 し て い ま す 。  利用 可能 : Macintosh 、 Unix 
パス 名 path を ( head と tail ) の ペア に 分割 し ま す 。 
tail は パス の 構成 要素 の 末尾 で 、 head は それ より 前 の 部分 で す 。 tail は スラッシュ を 含 み ま せ ん ; もし path の 最後 に スラッシュ が あ れ ば 、 tail は 空 文字 列 に な り ま す 。 
もし path に スラッシュ が な けれ ば 、 head は 空 文字 列 に な り ま す 。 
path が 空 文字 列 なら 、 head と tail の どちら も 空 文字 列 に な り ま す 。 
head の 末尾 の スラッシュ は 、 head が ルート ディレクトリ ( 1 つ 以上 の スラッシュ のみ ) で な い 限り 、 取り除 か れ ま す 。 
ほとんど 全て の 場合 、 join ( head , tail ) の 結果 が path と 等し く な り ま す ( ただ 1 つ の 例外 は 、 複数 の スラッシュ が head と tail を 分け て い る 時 で す ) 。 
パス 名 path を ( drive , tail ) の ペア に 分割 し ま す 。 drive は ドライブ 名 か 、 空 文字 列 で す 。 
ドライブ 名 を 使用 し な い システム で は 、 drive は 常 に 空 文字 列 で す 。 
全て の 場合 に 
は path と 等し く な り ま す 。  バージョン  1 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
パス 名 path を ( root ,  ext ) の ペア に し ま す 。 
に な り ま す 。  ext は 空 文字 列 か 1 つ の ピリオド で 始ま り 、 多 く て も 1 つ の ピリオド を 含 み ま す 。 
path を ルート と する 各 ディレクトリ に 対 し て ( もし path が ディレクトリ なら path も 含 み ま す ) 、 ( arg ,  dirname ,  names ) を 引数 と し て 関数 visit を 呼び出 し ま す 。 
引数 dirname は 訪れ た ディレクトリ を 示 し 、 引数 names は その ディレクトリ 内 の ファイル の リスト (os . listdir ( dirname ) で 得 られ る ) で す 。 
関数 visit に よ っ て names を 変更 し て 、 dirname 以下 の 対象 と な る ディレクトリ の セット を 変更 する こと も でき ま す 。  例えば 、 ある ディレクトリ ツリー だけ 関数 を 適用 し な い など 。 
( names で 参照 さ れ る オブジェクト は 、 del あるいは スライス を 使 っ て 正し く 変更 し な けれ ば な り ま せ ん 。 
)  注意 : ディレクトリ へ の シンボリック リンク は サブ ディレクトリ と し て 扱 わ れ な い の で 、 walk ( ) に よ る 操作 対象 と は さ れ ま せ ん 。 
注意 : 新た に 追加 さ れ た 
. walk ( )  ジェネレータ を 使用 すれ ば 、 同じ 処理 を より 簡単 に 行 う 事 が でき ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
Linux ,  Free BSD プラットフォーム で 利用 でき ま す 。 
この モジュール を 使 う と OSS  ( Open  Sound System )  オーディオ インターフェース に アクセス でき ま す 。 
OSS は オープン ソース あるいは 商用 の Unix で 広 く 利用 でき 、 Linux  ( カーネル 2 . 4 まで )  と Free BSD で 標準 の オーディオ インターフェース で す 。 
OSS C  API  の 公式 ドキュメント 
この モジュール で は OSS デバイス ドライバー が 提供 し て い る 多く の 定数 を 定義 し て い ま す ;  定数 の リスト に つ い て は  Linux  や  Free BSD の sys\/soundcard . h を 参照 し て くださ い 。 
ossaudiodev で は 以下 の 変数 と 関数 を 定義 し て い ま す : 
何 ら か の エラー の とき に 送出 さ れ る 例外 で す 。 
引数 は 何 が 誤 っ て い る か を 示 す 文字 列 で す 。  (ossaudiodev が open ( ) 、 write ( ) 、 ioctl ( )  など の システム コール から エラー を 受け取 っ た 場合 に は  IOError  を 送出 し ま す 。 
オーディオ デバイス を 開 き 、 OSS オーディオ デバイス オブジェクト を 返 し ま す 。 
この オブジェクト は read ( ) 、 write ( ) 、 fileno ( ) と い っ た ファイル 類似 オブジェクト の メソッド を 数多く サポート し て い ま す 。  ( と は い え 、 伝統 的 な  Unix  の  read\/write  に お け る 意味 づけ と  OSS  デバイス の  read\/write  と の 間 に は 微妙 な 違い が あ り ま す ) 。 
また 、 オーディオ 特有 の 多く の メソッド が あ り ま す ; メソッド の 完全 な リスト に つ い て は 下記 を 参照 し て くださ い 。 
device は 使用 する オーディオ デバイス ファイル ネーム で す 。 
もし これ が 指定 さ れ な い なら 、 この モジュール は 使 う デバイス と し て 最初 に 環境 変数 AUDIODEV を 参照 し ま す 。 
見つか ら な けれ ば \/ dev\/ dsp を 参照 し ま す 。 
mode  は 読み出し 専用 アクセス の 場合 に は  ' r ' 、 書き込み 専用  ( プレイ バック )  アクセス の 場合 に は  ' w ' 、 読み書き アクセス の 場合 に は ' rw ' に し ま す . 多く の サウンド カード は 一 つ の プロセス が 一 度 に レコーダ と プレーヤ の どちら か しか 開け な い よう に し て い る ため , 必要 な 操作 に 応 じ た デバイス だけ を 開 く よう に する の が よ い で しょ う 。 
また , サウンド カード に は 半二 重  ( half- duplex )  方式 の もの が あ り ま す :  こう し た カード で は , デバイス を 読み出し また は 書き込み 用 に 開 く こと は でき ま す が , 両方 同時 に は 開け ま せ ん . 呼び出し の 文法 が 普通 と 異な る こと に 注意 し て くださ い : 最初 の 引数 は 省略 可能 で 、 2 番 目 が 必須 で す 。 
これ は ossaudiodev に と っ て かわ ら れ た 古 い linuxaudiodev と の 互換 性 の ため と い う 歴史 的 な 産物 で す 。 
ミキサ デバイス を 開 き 、 OSS ミキサ デバイス オブジェクト を 返 し ま す 。  device は 使用 する ミキサ デバイス の ファイル 名 で す 。 
device を 指定 し な い 場合 、 モジュール は まず 環境 変数 AUDIODEV を 参照 し て 使用 する デバイス を 探 し ま す 。 
見つか ら な けれ ば 、 \/ dev\/ mixer を 参照 し ま す 。 
1 4 . 1 1 . 1  オーディオ デバイス オブジェクト 
parser モジュール は Python の 内部 パーサ と バイトコード ・ コンパイラ へ の インターフェイス を 提供 し ま す 。 
この インターフェイス の 第 一 の 目的 は 、 Python コード から Python の 式 の 解析 木 を 編集 し たり 、 これ から 実行 可能 な コード を 作成 し たり でき る よう に する こと で す 。 
この モジュール に つ い て 注意 す べ き こと が 少し あ り ま す 。  それ は 作成 し た データ 構造 を 利用 する ため に 重要 な こと で す 。 
この 文書 は Python コード の 解析 木 を 編集 する ため の チュートリアル で は あ り ま せ ん が 、 parser モジュール を 使 っ た 例 を いく つ か 示 し て い ま す 。  もっとも 重要 な こと は 、 内部 パーサ が 処理 する Python の 文法 に つ い て よく 理解 し て お く 必要 が あ る と い う こと で す 。 
言語 の 文法 に 関 する 完全 な 情報 に つ い て は 、 
Python 言語 リファレンス 
標準 の Python ディストリビューション に 含 ま れ る ファイル Grammar \/ Grammar の 中 で 定義 さ れ て い る 文法 仕様 から 、 パーサ 自身 は 作成 さ れ て い ま す 。 
この モジュール が 作成 する AST オブジェクト の 中 に 格納 さ れ る 解析 木 は 、 下 で 説明 する expr ( ) また は suite ( ) 関数 に よ っ て 作 ら れ る とき に 内部 パーサ から 実際 に 出力 さ れ る もの で す 。 
sequence 2 ast ( ) が 作 る AST オブジェクト は 忠実 に これ ら の 構造 を シミュレート し て い ま す 。 
言語 の 形式 文法 が 改訂 さ れ る ため に 、 ` ` 正し い ' ' と 考え られ る シーケンス の 値 が Python の あ る バージョン から 別 の バージョン で 変化 する こと が あ る と い う こと に 注意 し て くださ い 。 
しかし 、 Python の あ る バージョン から 別 の バージョン へ テキスト の ソース の まま コード を 移 せ ば 、 目的 の バージョン で 正し い 解析 木 を 常 に 作成 でき ま す 。  ただし 、 インタープリタ の 古 い バージョン へ 移行 する 際 に 、 最近 の 言語 コンスト ラクト を サポート し て い な い こと が あ る と い う 制限 だけ が あ り ま す 。 
ソース コード が 常 に 前方 互換 性 が あ る の に 対 し て 、 一般 的 に 解析 木 は あ る バージョン から 別 の バージョン へ の 互換 性 が あ り ま せ ん 。  ast 2 list ( ) また は ast2tuple ( ) から 返 さ れ る シーケンス の それぞれ の 要素 は 単純 な 形式 で す 。 
文法 の 非 終端 要素 を 表 す シーケンス は 常 に 一 より 大き い 長 さ を 持 ち ま す 。 
最初 の 要素 は 文法 の 生成 規則 を 識別 する 整数 で す 。 
これ ら の 整数 は C ヘッダ ファイル Include\/graminit . h と Python モジュール 
の 中 の 特定 の シンボル 名 で す 。 
シーケンス に 付け加え られ て い る 各 要素 は 、 入力 文字 列 の 中 で 認識 さ れ た まま の 形 で 生成 規則 の 構成 要素 を 表 し て い ま す :  これ ら は 常 に 親 と 同じ 形式 を 持 つ シーケンス で す 。 
この 構造 の 注意 す べ き 重要 な 側面 は 、 if_stmt の 中 の キー ワード if の よう な 親 ノード の 型 を 識別 する ため に 使 わ れ る キー ワード が いかなる 特別 な 扱い も な く ノード ツリー に 含 ま れ て い る と い う こと で す 。 
例えば 、 if キー ワード は タプル ( 1 ,'if' ) と 表 さ れ ま す 。  ここ で 、 1 は 、 ユーザ が 定義 し た 変数 名 と 関数 名 を 含 む すべて の NAME トークン に 対応 する 数値 で す 。 
上記 の if キー ワード の 例 が 代表 的 な もの で す 。 
終端 記号 の いろいろ な 型 は 、 C ヘッダ ファイル Include\/token . h と Python モジュール 
で 定義 さ れ て い ま す 。  AST オブジェクト は この モジュール の 機能 を サポート する ため に 必要 あ り ま せ ん が 、 三 つ の 目的 から 提供 さ れ て い ま す :  アプリケーション が 複雑 な 解析 木 を 処理 する コスト を 償却 する ため 、 Python の リスト や タプル 表現 に 比べ て メモリ 空間 を 保全 する 解析 木 表現 を 提供 する ため 、 解析 木 を 操作 する 追加 モジュール を C で 作 る こと を 簡単 に する ため 。 
AST オブジェクト を 使 っ て い る こと を 隠 す ため に 、 簡単 な ` ` ラッパー ' ' クラス を Python で 作 る こと が でき ま す 。  parser モジュール は 二、三 の 別々 の 目的 の ため に 関数 を 定義 し て い ま す 。 
もっとも 重要 な 目的 は AST オブジェクト を 作 る こと と 、 AST オブジェクト を 解析 木 と コンパイル さ れ た コード オブジェクト の よう な 他 の 表現 に 変換 する こと で す 。 
しかし 、 AST オブジェクト で 表現 さ れ た 解析 木 の 型 を 調べ る ため に 役 に 立 つ 関数 も あ り ま す 。 
解析 木 の 内部 ノード を 表 す 便利 な 定数 。 
便利 な 解析 木の葉 の ノード を 表 す 定数 と ノード 値 を テスト する ため の 関数 。 
18 . 1 . 6 . 1  compile ( ) の エミュレーション 
18 . 1 . 6 . 2  情報 発見 
( 条件 付き ) ブレーク ポイント の 設定 や ソース 行 レベル で の シングル ステップ 実行 、 スタック フレーム の インスペクション 、 ソース コード リスティング および いかなる スタック フレーム の コンテキスト に お け る 任意 の Python コード の 評価 を サポート し て い ま す 。 
現在 これ に つ い て の ドキュメント は あ り ま せ ん が 、 ソース を 読 め ば 簡単 に 理解 でき ま す 。 
拡張 インターフェース は モジュール bdb 
( ドキュメント なし ) と 
他 の スクリプト を デバッグ する ため に 、 pdb . py を スクリプト と し て 呼び出 す こと も でき ま す せ ま す 。 
スクリプト と し て  pdb  を 起動 する と 、 デバッグ 中 の プログラム が 異常 終了 し た 時 に  pdb  が 自動 的 に 検死 デバッグ モード に 入 り ま す 。 
クラッシュ し た プログラム を 調べ る ため の 典型 的 な 使 い 方 は : 
モジュール は 以下 の 関数 を 定義 し て い ま す 。  それぞれ が 少し づつ 違 っ た 方法 で デバッガ に 入 り ま す : 
デバッガ に 制御 さ れ た 状態 で ( 文字 列 と し て 与え られ た ) statement を 実行 し ま す 。 
オプション の globals と locals 引数 は コード を 実行 する 環境 を 指定 し ま す 。  デフォルト で は 、 モジュール 
の 辞書 が 使 わ れ ま す 。 
( exec 文 また は eval ( ) 組み込 み 関数 の 説明 を 参照 し て くださ い 。  ) 
デバッガ の 制御 もと で ( 文字 列 と し て 与え られ る ) expression を 評価 し ま す 。 
runeval ( ) が リターン し た とき 、 式 の 値 を 返 し ま す 。 
その 他 の 点 で は 、 この 関数 は run ( ) を 同様 で す 。 
function ( 関数 また は メソッド オブジェクト 、 文字 列 で は あ り ま せ ん ) を 与え られ た 引数 と とも に 呼び出 し ま す 。 
runcall ( ) が リターン し た とき 、 関数 呼び出し が 返 し た もの は 何 で も 返 し ま す 。 
デバッガ プロンプト は 関数 に 入 る と すぐ に 現れ ま す 。 
スタック フレーム を 呼び出 し た ところ で デバッガ に 入 り ま す 。 
たとえ コード が 別 の 方法 で デバッグ さ れ て い る 最中 で な く て も ( 例えば 、 アサーション が 失敗 する とき ) 、 これ は プログラム の 所定 の 場所 で ブレーク ポイント を ハード コード する ため に 役 に 立 ち ま す 。 
与え られ た traceback オブジェクト の 事後 解析 デバッギング に 入 り ま す 。 
sys . last _traceback の トレース バック の 事後 解析 デバッギング に 入 り ま す 。 
3 . 1 4 . 1  他 の  Python  モジュール と の 関係 
pickle  モジュール で は 、 Python  オブジェクト データ 構造 を 直列 化  ( serialize )  し たり 非 直列 化  ( de -serialize )  する ため の 基礎 的 で す が 強力 な アルゴリズム を 実装 し て い ま す 。 
` ` Pickle  化  ( Pickling ) ' ' は  Python  の オブジェクト 階層 を バイト ストリーム に 変換 する 過程 を 指 し ま す 。 
` ` 非  Pickle  化  ( unpickling ) ' ' は その 逆 の 操作 で 、 バイト ストリーム を オブジェクト 階層 に 戻 す よう に 変換 し ま す 。 
この ドキュメント で は  pickle  モジュール および 
モジュール の 両方 に つ い て 記述 し ま す 。 
モジュール と 間違え な い よう に 注意 し て くださ い 
3 . 1 4 . 1  他 の  Python  モジュール と の 関係 
3 . 1 4 . 5 . 1  通常 の クラス インスタンス の  pickle  化 および  unpickle  化 
3 . 1 4 . 5 . 2  拡張 型 の  pickle  化 および  unpickle  化 
3 . 1 4 . 5 . 3  外部 オブジェクト の  pickle  化 および  unpickle  化 
pipes  モジュール で は 、 'pipeline ' の 概念  - -  ある ファイル を 別 の ファイル に 変換 する 機構 の 直列 接続  - -  を 抽象 化 する ため の クラス を 定義 し て い ま す 。 
この モジュール は \/ bin\/sh コマンドライン を 利用 する ため 、 os . system ( )  および  os . popen ( )  の ため の  POSIX  準拠 の シェル 、 また は 互換 の シェル が 必要 で す 。 
pipes  モジュール で は 、 以下 の クラス を 定義 し て い ま す : 
クラス Template 
パイプライン を 抽象 化 し た クラス 。 
使用 例 : 
この モジュール は 次 の 単一 の 関数 を 提供 し ま す 。 
パッケージ を 構成 する モジュール の サーチ パス を 拡張 し ま す 。 
パッケージ の  __init_ _. py  で 次 の よう に 書 く こと を 意図 し た もの で す 。  from  pkgutil import  extend_ path_ _ path__ =  extend_ path (__ path__, __name__) 
上記 は パッケージ の _ _ path_ _ に sys . path  の 全 ディレクトリ の サブ ディレクトリ と し て パッケージ 名 と 同じ 名前 を 追加 し ま す 。 
これ は 1 つ の 論理 的 な パッケージ の 異な る 部品 を 複数 の ディレクトリ に 分け て 配布 し た い とき に 役立 ち ま す 。  同時 に * . pkg  の *  の 部分 が  name  引数 に 指定 さ れ た 文字 列 に 一致 する ファイル の 検索 も おこな い ま す 。 
この 機能 は import  で 始ま る 特別 な 行 が な い こと を 除 き  * . pth  ファイル に 似 て い ま す ( 
の 項 を 参照 ) 。 
) 入力 パス が リスト で な い 場合 ( フリーズ さ れ た パッケージ の とき ) は 何 も せ ず に リターン し ま す 。 
入力 パス が 変更 さ れ て い な けれ ば 、 アイテム を 末尾 に 追加 し た だけ の コピー を 返 し ま す 。 
sys . path  は シーケンス で あ る こと が 前提 に な っ て い ま す 。 
sys . path  の 要素 の 内 、 実在 する ディレクトリ を 指 す ( ユニコード また は 8 ビット の ) 文字 列 と な っ て い な い もの は 無視 さ れ ま す 。 
ファイル 名 と し て 使 っ た とき に エラー が 発生 する  sys . path  の ユニコード 要素 が あ る 場合 、 この 関数 ( os . path . isdir ( )  を 実行 し て い る 行 ) で 例外 が 発生 する 可能 性 が あ り ま す 。 
6 . 3 0 . 3 . 1  Win 95 \/ 98  固有 
6 . 8 . 3 . 6  popen 2 . *  を 置き換え る 
6 . 9 . 1  Popen 3  および  Popen 4 
に あ る 関数 は この モジュール に おけ る ファクトリ 関数 と 同じ 名前 を 持 ち ま す が 、 戻 り 値 に 関 する 取り決め は 
の 関数 の 方 が より 直感 的 で す 。  この モジュール で 提供 さ れ て い る 第 一 の インタフェース は  3  つ の ファクトリ 関数 で す 。 
これ ら の 関数 の いずれ も 、 bufsize  を 指定 し た 場合 、  I\/ O  パイプ の バッファ サイズ を 決定 し ま す 。  mode  を 指定 する 場合 、 文字 列 ' b ' また は 't ' で な けれ ば な り ま せ ん ;  Windows  で は 、 ファイル オブジェクト を バイナリ あるいは テキスト モード の どちら で 開 く か を 決め な けれ ば な り ま せ ん 。 
cmd が 文字 列 の 場合 、 (os. system ( ) の よう に ) シェル に 渡 さ れ ま す 。 
子 プロセス から の リターン コード を 取得 する に は 、 Popen 3 および  Popen 4  クラス の  poll ( )  あるいは wait( )  メソッド を 使 う しか あ り ま せ ん ;  これ ら の 機能 は Unix で しか 利用 でき ま せ ん 。 
この 情報 は  popen 2 ( ) 、 popen 3 ( ) 、 および  popen 4 ( )  関数 、 あるいは 
モジュール に おけ る 同等 の 関数 の 使用 に よ っ て は 得 る こと が でき ま せ ん 。  ( 
モジュール の 関数 から 返 さ れ る タプル は popen 2 モジュール の 関数 から 返 さ れ る もの と は 違 う 順序 で す 。 
cmd  を サブ プロセス と し て 実行 し ま す 。 
ファイル オブジェクト ( child _stdout ,  child _stdin )  を 返 し ま す 。 
ファイル オブジェクト ( child _stdout ,  child _stdin ,  child _stderr ) を 返 し ま す 。 
ファイル オブジェクト ( child _stdout_and _stderr ,  child _stdin ) . バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
Unix で は 、 ファクトリ 関数 に よ っ て 返さ れ る オブジェクト を 定義 し て い る クラス も 利用 する こと が でき ま す 。 
これ ら の オブジェクト は  Windows  実装 で 使 わ れ て い な い ため 、 その プラットフォーム 上 で 使 う こと は でき ま せ ん 。 
クラス Popen 3 
この クラス は 子 プロセス を 表現 し ま す 。 
通常 、  Popen 3 インスタンス は 上 で 述べ た  popen 2 ( )  および  popen 3 ( )  ファクトリ 関数 を 使 っ て 生成 さ れ ま す 。  Popen 3  オブジェクト を 生成 する ため に いずれ か の ヘルパー 関数 を 使 っ て い な い の なら 、 cmd  パラメタ は 子 プロセス で 実行 する シェル コマンド に な り ま す 。 
capturestderr  フラグ が 真 で あ れ ば 、 この オブジェクト が 子 プロセス の 標準 エラー 出力 を 捕獲 し な けれ ば な ら な い こと を 意味 し ま す 。  標準 の 値 は 偽 で す 。 
bufsize  パラメタ が 存在 する 場合 、 子 プロセス へ の \/ から の  I \/ O  バッファ の サイズ を 指定 し ま す 。 
クラス Popen 4 
Popen 3  に 似 て い ま す が 、 標準 エラー 出力 を 標準 出力 と 同じ ファイル オブジェクト で 捕獲 し ま す 。 
この モジュール は 、  POP 3  クラス を 定義 し ま す 。  これ は POP 3 サーバ へ の 接続 と 、  RFC  1725  に 定め られ た プロトコル を 実装 し ま す 。 
POP 3  クラス は minimal と optinal と い う 2 つ の コマンド セット を サポート し ま す 。 
幾 つ も 実装 さ れ て い る POP 3 サーバー の 品質 は 、 貧弱 な もの が 多数 を 占め て い ま す 。 
もし 、 お 使い の メール サーバー が IMAP を サポート し て い る なら 、 
poplib  モジュール で は 、 ひと つ の クラス が 提供 さ れ て い ま す 。 
クラス POP 3 
この クラス が 、 実際 に POP 3 プロトコル を 実装 し ま す 。 
インスタンス が 初期 化 さ れ る とき に 、 コネクション が 作成 さ れ ま す 。  port  が 省略 さ れ る と 、 POP 3 標準 の ポート ( 110 ) が 使 わ れ ま す 。 
クラス POP 3 _ SSL 
POP 3  クラス の サブ クラス で 、 SSL で カプセル 化 さ れ た ソケット に よ る POP サーバ へ の 接続 を 提供 し ま す 。 
port  が 指定 さ れ て い な い 場合 、 POP 3 - over - SSL 標準 の 995 番 ポート が 使 わ れ ま す 。 
keyfile  と certfile  も オプション で  -  SSL 接続 に 使 わ れ る PEM フォーマット の 秘密 鍵 と 信頼 さ れ た # # を 含 み ま す 。 
1 つ の 例外 が 、  poplib  モジュール の アトリビュート と し て 定義 さ れ て い ま す 。 
例外 は 、 すべて の エラー で 発生 し ま す 。 
例外 の 理由 は 文字 列 と し て コンストラクタ に 渡 さ れ ま す 。 
この モジュール は オペレーティング システム の 機能 の うち 、 C  言語 標準 および  POSIX  標準  ( Unix  インタフェース を ほんの 少し 隠蔽 し た ) で 標準 化 さ れ て い る 機能 に 対 する アクセス 機構 を 提供 し ま す 。 
この モジュール を 直接  import  し な い で 下さ い 。 
その 代わり に 、 移植 性 の あ る インタフェース を 提供 し て い る 
を インポート し て くださ い 。 
Unix で は 、 
モジュール が 提供 する インタフェース は  posix  の 内容 を 内包 し て い ま す 。 
非  Unix  オペレーティング システム で は  posix  モジュール を 使 う こと は でき ま せ ん が 、 その 部分 的 な 機能 セット は 、 たいてい 
インタフェース を 介 し て 利用 する こと が でき ま す 。 
は 、 一 度  import  し て しま え ば  posix  の 代わり で あ る こと に よ る パフォーマンス 上 の ペナルティ は  全く あ り ま せ ん 。 
その 上 、 
は  os . environ  の 内容 が 変更 さ れ た 際 に 自動 的 に  putenv ( )  を 呼 ぶ など 、 いく つ か の 追加 機能 を 提供 し て い ま す 。 
一方 、 システム コール から 報告 さ れ た エラー は 以下 に 述べ る よう に error  ( 標準 例外  OSError  と 同義 で す )  を 送出 し ま す 。 
リリース  1 . 5  で 撤廃 さ れ ま し た 。  この モジュール が 提供 し て い る より も うま く 処理 が でき 、 可搬 性 も 高 い ロック 操作 が 
. lockf ( )  で 提供 さ れ て い ま す 。 
この モジュール で は 、 組み込み の ファイル オブジェクト の 上 に いく つ か の 追加 機能 を 実装 し て い ま す 。 
特に 、 この オブジェクト は ファイル の ロック 機構 、 ファイル フラグ へ の 操作 、 および ファイル オブジェクト を 複製 する ため の 簡単 な インタフェース を 実装 し て い ま す 。 
オブジェクト は 全て の 標準 ファイル オブジェクト の メソッド に 加え 、 以下 に 述べ る メソッド を 持 っ て い ま す 。 
この モジュール は ファイル の ロック 機構 に  fcntl . fcntl ( )  を 用い る ため 、 ある 種 の Unix で しか 動作 し ま せ ん 。 
posixfile  オブジェクト を インスタンス 化 する に は 、  posixfile モジュール の  open ( )  関数 を 使 い ま す 。 
生成 さ れ る オブジェクト は 標準 ファイル オブジェクト と だいたい 同じ ルック  フィール で す 。  posixfile  モジュール で は 、 以下 の 定数 を 定義 し て い ま す : 
オフセット を ファイル の 先頭 から 計算 し ま す 。 
オフセット を 現在 の ファイル 位置 から 計算 し ま す 。 
オフセット を ファイル の 末尾 から 計算 し ま す 。 
posixfile  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
指定 し た ファイル 名 と モード で 新し い  posixfile  オブジェクト を 作成 し ま す 。 
filename 、 mode  および  bufsize  引数 は 組み込み の  open ( )  関数 と 同じ よう に 解釈 さ れ ま す 。 
指定 し た 標準 ファイル オブジェクト で 新し い  posixfile  オブジェクト を 作成 し ま す 。  作成 さ れ る オブジェクト は 元 の ファイル オブジェクト と 同じ ファイル 名 および モード を 持 っ て い ま す 。 
posixfile  オブジェクト で は 以下 の 追加 メソッド を 定義 し て い ま す : 
ファイル オブジェクト が 参照 し て い る ファイル の 指定 部分 に ロック を かけ ま す 。 
指定 の 書式 は 下 の テーブル で 説明 さ れ て い ま す 。 
len  引数 に は ロック する 部分 の 長 さ を 指定 し ま す 。 
標準 の 値 は  0 で す 。  start  に は ロック する 部分 の 先頭 オフセット を 指定 し 、 その 標準 値 は  0  で す 。 
whence  引数 は オフセット を どこ から の 相対 位置 に する か を 指定 し ま す 。 
この 値 は 定数  SEEK_ SET 、 SEEK_ CUR 、 また は  SEEK_ END  の いずれ か に な り ま す 。 
標準 の 値 は  SEEK_ SET  で す 。 
引数 に つ い て の より 詳し い 情報 は システム の 
fcntl ( 2 )  マニュアル ページ を 参照 し て くださ い 。 
ファイル オブジェクト が 参照 し て い る ファイル に 指定 し た フラグ を 設定 し ま す 。 
新し い フラグ は 特に 指定 し な い 限り 以前 の フラグ と  OR  さ れ ま す 。 
指定 書式 は 下 の テーブル で 説明 さ れ て い ま す 。 
flags  引数 なし の 場合 、 現在 の フラグ を 示 す 文字 列 が 返 さ れ ま す  ( " ? "  修飾 子 と 同じ で す )  。 
フラグ に つ い て の より 詳し い 情報 は システム の 
ファイル オブジェクト と 、 背後 の ファイル ポインタ および ファイル 記述 子 を 複製 し ま す 。 
返 さ れ る オブジェクト は 新た に 開 か れ た ファイル の よう に 振舞 い ま す 。 
新た な オブジェクト は 指定 し た ファイル 記述 子 を 持 ち ま す 。  それ 以外 の 点 で は 、 返 さ れ る オブジェクト は 新た に 開 か れ た ファイル の よう に 振舞 い ま す 。 
posixfile  オブジェクト が 参照 し て い る 標準 ファイル オブジェクト を 返 し ま す 。 
この 関数 は 標準 ファイル オブジェクト を 使 う よう 強制 し て い る 関数 を 使 う 場合 に 便利 で す 。 
全て の メソッド で 、 要求 さ れ た 操作 が 失敗 し た 場合 に は  IOError が 送出 さ れ ま す 。  lock ( )  の 書式 指定 文字 に は 以下 の よう な 意味 が あ り ま す : 
書式 指定 
指定 領域 の ロック を 解除 し ま す 
指定 領域 の 読み出し ロック を 要求 し ま す 
指定 領域 の 書き込み ロック を 要求 し ま す 
これ に 加え 、 以下 の 修飾 子 を 書式 に 追加 でき ま す : 
修飾 子 
ロック 操作 が 処理 さ れ る まで 待 ち ま す 
要求 さ れ た ロック と 衝突 し て い る 第 一 の ロック を 返 す か 、 衝突 が な い 場合 に は  None  を 返 し ま す 。 
注釈 : 
返 さ れ る ロック は  ( mode , len , start ,  whence ,  pid )  の 形式 で 、 mode  は ロック の 形式 を 表 す 文字  ( 'r ' また は  ' w ')  で す 。 
この 修飾 子 は ロック 要求 の 許可 を 行 わ せ ま せ ん ;  すなわち 、 問い合わせ の 目的 に しか 使え ま せ ん 。 
flags( )  の 書式 指定 文字 に は 以下 の よう な 意味 が あ り ま す : 
追記 のみ  ( append  only )  フラグ 
実行 時 クローズ  ( close  on  exec )  フラグ 
無 遅延  ( no delay )  フラグ  ( 非 ブロック  ( non-blocking )  フラグ と も 呼 ば れ ま す ) 
同期  ( synchronization )  フラグ 
指定 し た フラグ を 通常 の  ' オン '  に せ ず  ' オフ ' に し ま す 
フラグ を 標準 の  ' OR '  操作 で は な く 置換 し ま す 。 
設定 さ れ て い る フラグ を 表現 する 文字 から な る 文字 列 を 返 し ま す 。 
" ! "  および  " = "  修飾 子 は 互い に 排他 の 関係 に あ り ま す 。 
この 文字 列 が 表 す フラグ は 同じ 呼び出し に よ っ て フラグ が 置き換え られ た 後 の もの で す 。 
以下 に 例 を 示 し ま す : 
pprint モジュール を 使 う と 、 Python の 任意 の データ 構造 を インタープリタ へ の 入力 で 使 わ れ る 形式 に し て ` ` pretty - print ' ' でき ま す 。 
フォーマット 化 さ れ た 構造 の 中 に Python の 基本 的 な タイプ で は な い オブジェクト が あ る なら 、 表示 でき な い か も しれ ま せ ん 。 
Python の 定数 と し て 表現 でき な い 多く の 組み込 み オブジェクト と 同様 、 ファイル 、 ソケット 、 クラス あるいは インスタンス の よう な オブジェクト が 含 ま れ て い た 場合 は 出力 でき ま せ ん 。  可能 で あ れ ば オブジェクト を フォーマット 化 し て 1 行 に 出力 し ま す が 、 与え られ た 幅 に 合 わ な い なら 複数 行 に 分け て 出力 し ま す 。 
無理 に 幅 を 設定 し た い なら 、 PrettyPrinter オブジェクト を 作成 し て 明示 し て くださ い 。  pprint モジュール に は 1 つ の クラス が 定義 さ れ て い ま す : 
クラス PrettyPrinter 
PrettyPrinter インスタンス を 作 り ま す 。 
この コンストラクタ に は いく つ か の キー ワード パラメータ を 設定 でき ま す 。 
stream キー ワード で 出力 ストリーム を 設定 でき ま す ; この ストリーム に 対 し て 呼び出 さ れ る メソッド は ファイル プロトコル の write ( ) メソッド だけ で す 。 
もし 設定 さ れ な けれ ば 、 PrettyPrinter は sys . st dout を 使用 し ま す 。 
さらに 3 つ の パラメータ で 出力 フォーマット を コントロール でき ま す 。 
その キー ワード は indent 、 depth と width で す 。 
再帰 的 な レベル ごと に 加え る インデント の 量 は indent で 設定 でき ま す ; デフォルト 値 は 1 で す 。 
他 の 値 に する と 出力 が 少し おかし く 見え ま す が 、 ネスト 化 さ れ た ところ が 見分け 易 く な り ま す 。 
出力 さ れ る レベル は depth で 設定 でき ま す ; 出力 さ れ る データ 構造 が 深 い なら 、 指定 以上 の 深 い レベル の もの は " . . . " で 置き換え られ て 表示 さ れ ま す 。 
デフォルト で は 、 オブジェクト の 深 さ を 制限 し ま せ ん 。 
width パラメータ を 使 う と 、 出力 する 幅 を 望み の 文字 数 に 設定 でき ま す ; デフォルト で は 80 文字 で す 。 
もし 指定 し た 幅 に フォーマット でき な い 場合 は 、 でき る だけ 近づけ ま す 。 
PrettyPrinter クラス に は いく つ か の 派生 する 関数 が 提供 さ れ て い ま す : 
object を フォーマット 化 し て stream に 出力 し 、 最後 に 改行 し ま す 。 
stream が 省略 さ れ た ら 、 sys . st dout に 出力 し ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 引数  indent 、 width と 、 depth が 追加 さ れ ま し た 
再帰 的 な オブジェクト に 対 し て は 常 に false を 返 し ま す 。 
object が 再帰 的 な 表現 か どう か を 返 し ま す 。 
さらに もう 1 つ 、 関数 が 定義 さ れ て い ま す : 
object の 文字 列 表現 を 、 再帰 的 な データ 構造 から 保護 し た 形式 で 返 し ま す 。 
もし object の 文字 列 表現 が 再帰 的 な 要素 を 持 っ て い る なら 、 再帰 的 な 参照 は " Recursion  ontypename  with  id= number " で 表示 さ れ ま す 。 
出力 は 他 と 違 っ て フォーマット 化 さ れ ま せ ん 。 
preferences  モジュール を 使 う と 、 ユーザ の 環境 設定 を システム 全体 の 環境 設定 フォルダ 中 に 保存 でき ま す 。  この とき 、 ユーザ の 環境 設定 に アプリケーション 自体 の デフォルト 設定 を 持 た せ たり 、 特定 の 状況 で 環境 設定 を オーバライド さ せ たり でき ま す 。 
10 . 4  決定 論 的 プロファイリング と は 何 か ? 
プロファイラ の プライマリ ・ エントリ ・ ポイント は グローバル 関数  profile . run ( )  で す 。 
通常 、 プロファイル 情報 の 作成 に 使 わ れ ま す 。 
情報 は  pstats . Stats  クラス の メソッド を 使 っ て 整形 や 出力 を おこな い ま す 。 
以下 は すべて の 標準 エントリ ポイント と 関数 の 解説 で す 。 
さらに いく つ か の コード の 詳細 を 知 り た けれ ば 、 「 プロファイラ の 拡張 」 を 読 ん で くださ い 。  派生 クラス を 使 っ て プロファイラ を ` ` 改善 ' ' する 方法 や モジュール の ソース コード の 読 み 方 が 述べ られ て い ま す 。 
この 関数 は オプション 引数 と し て  exec  文 に 渡 す ファイル 名 を 指定 でき ま す 。 
この ルーチン は 必ず 最初 の 引数 の  exec  を 試み 、 実行 結果 から プロファイル 情報 を 収集 し よう と し ま す 。 
ファイル 名 が 指定 さ れ て い な い とき は 、 各行 の 標準 名 ( standard  name ) 文字 列 ( ファイル 名 \/ 行数 \/ 関数 名 ) で ソート さ れ た 、 簡単 な レポート が 表示 さ れ ま す 。 
以下 は その 出力 例 で す 。 
最初 の 行 は この プロファイル が  profile . run ( 'main ( ) ')  の 呼び出し に よ っ て 生成 さ れ た もの で あ り 、 実行 さ れ た 文字 列 は  'main ( ) ' で あ る こと を 示 し て い ま す 。 
2 行 目 は 2706 回 の 関数 呼出し が あ っ た こと を 示 し て い ま す 。 
この うち 2004 回 は プリミティブ な もの で す 。 
呼出 し 回数 
この 関数 が 消費 し た 時間 の 合計 ( サブ 関数 呼出し の 時間 は 除 く ) 
tottime を ncalls  で 割 っ た 値 
サブ 関数 を 含 む 関数 の ( 実行 開始 から 終了 まで の ) 消費 時間 の 合計 。 
この 項目 は 再帰 的 な 関数 に お い て も 正確 に 計測 さ れ ま す 。 
cumtime を プリミティブ な 呼び出 し 回数 で 割 っ た 値 
その 関数 の ファイル 名 、 行 番号 、 関数 名 
( " 43 \/ 3 "  など ) 最初 の 欄 に 2 つ の 数字 が 表示 さ れ て い る 場合 、 最初 の 値 は 呼出 し 回数 、 2 番 目 は プリミティブ な 呼び出し の 回数 を 表 し て い ま す 。 
関数 が 再帰 し て い な い 場合 は どちら の 回数 も 同じ に な る ため 、 1 つ の 数値 しか 表示 さ れ ま せ ん 。 
この 関数 は  profile . run ( )  に 似 て い ま す が 、 command  文字 列 用 に グローバル 辞書 と ローカル 辞書 の 引数 を 追加 し て い ま す 。 
プロファイラ ・ データ の 分析 は  pstats  モジュール を 使 っ て おこな い ま す 。  クラス Stats
この コンストラクタ は  filename  で 指定 し た ( 単一 また は 複数 の ) ファイル から ` ` 統計 情報 オブジェクト ' ' の インスタンス を 生成 し ま す 。 
Stats  オブジェクト は レポート を 出力 する メソッド を 通 じ て 操作 し ま す 。  上記 コンストラクタ で 指定 する ファイル は 、 使用 する  Stats  に 対応 し た バージョン の  profile  で 作成 さ れ た もの で な けれ ば な り ま せ ん 。 
将来 の バージョン の プロファイラ と の 互換 性 は 保証 さ れ て お ら ず 、 ( 旧 バージョン の もの など ) 他 の プロファイラ と の 互換 性 も な い こと に 注意 し て くださ い 。  複数 の ファイル を 指定 し た 場合 、 同一 の 関数 の 統計 情報 は すべて 合算 さ れ 、 複数 の プロセス で 構成 さ れ る 全体 を ひと つ の レポート で 検証 する こと が 可能 に な り ま す 。 
既存 の  Stats  オブジェクト に 別 の ファイル の 情報 を 追加 する とき は 、 add ( )  メソッド を 使用 し ま す 。 
IRIX ,  Linux プラットフォーム で 利用 でき ま す 。 
pty モジュール は 擬似 端末 ( 他 の プロセス を 実行 し て その 制御 を し て い る 端末 を プログラム で 読み書き する ) を 制御 する 操作 を 定義 し て い ま す 。  擬似 端末 の 制御 は プラットフォーム に 強 く 依存 する の で 、 SGI と Linux 用 の コード しか 存在 し て い ま せ ん 。 
fork し ま す 。 
子 プロセス の 制御 端末 を 擬似 端末 に 接続 し ま す 。  返り 値 は ( pid ,  fd ) で す 。 
子 プロセス は pid と し て 0 、 、 fd と し て invalid  を それぞれ 受けと り ま す 。 
親 プロセス は pid と し て 子 プロセス の PID 、 fd と し て 子 プロセス の 制御 端末 ( 子 プロセス の 標準 入出力 に 接続 さ れ て い る ) の ファイル ディスク リプタ を 受けと り ま す 。 
新し い 擬似 端末 の ペア を 開 き ま す 。 
利用 でき る なら os . openpty ( ) を 使 い 、 利用 でき な けれ ば SGI と 一般 的 な Unix システム 用 の エミュレーション コード を 使 い ま す 。  マスター 、 スレーブ それぞれ の ため の ファイル ディスク リプタ 、 ( master , slave ) の タプル を 返 し ま す 。 
プロセス を 生成 し て 制御 端末 を 現在 の プロセス の 標準 入出力 に 接続 し ま す 。 
これ は 制御 端末 を 読 も う と する プログラム を ごまか す ため に 利用 さ れ ま す 。  master_ read と stdin_read に は ファイル ディスク リプタ から 読み込 む 関数 を 指定 し て くださ い 。 
デフォルト で は 呼 ば れ る たび に 1024 バイト ずつ 読み込 も う と し ま す 。 
この モジュール は Unix の ユーザ アカウント と パスワード の データベース へ の アクセス を 提供 し ま す 。 
全て の Unix 系 OS で 利用 でき ま す 。  パスワード データベース の 各 エントリ は タプル の よう な オブジェクト で 提供 さ れ 、 それぞれ の 属性 は passwd 構造 体 の メンバ に 対応 し て い ま す ( 下 の 属性 欄 に つ い て は 、 pwd . h を 見 て くださ い ) 。 
インデックス 
ログ イン 名 
暗号 化 さ れ た パスワード (optional) ) 
ユーザ ID ( UID ) 
グループ ID ( GID ) 
実名 また は コメント 
ホーム ディレクトリ 
シェル 
UID と GID は 整数 で 、 それ 以外 は 全て 文字 列 で す 。  検索 し た エントリ が 見つか ら な い と KeyError が 発生 し ま す 。 
注意 : 伝統 的 な Unix で は 、 pw_ passwd フィールド は DES 由来 の アルゴリズム で 暗号 化 さ れ た パスワード ( 
モジュール を ごらん くださ い ) が 含 ま れ て い ま す 。 
しかし 、 近代 的 な UNIX 系 OS で は シャドウ パスワード と よ ば れ る 仕組み を 利用 し て い ま す 。 
この 場合 に は pw_ passwd フィールド に は アスタ リスク ( '*') か 、 " x " と い う 一文字 だけ が 含 ま れ て お り 、 暗号 化 さ れ た パスワード は 、 一般 に は 見え な い \/ etc\/shadow と い う ファイル に 入 っ て い ま す 。 
この モジュール で は 以下 の もの が 定義 さ れ て い ま す : 
与え られ た UID に 対応 する パスワード データベース の エントリ を 返 し ま す 。 
与え られ た ユーザ 名 に 対応 する パスワード データベース の エントリ を 返 し ま す 。 
パスワード データベース の 全て の エントリ を 、 任意 の 順番 で 並べ た リスト を 返 し ま す 。 
この モジュール に 似 た 、 グループ データベース へ の アクセス を 提供 する モジュール 。  . 
この pyclbr は モジュール で 定義 さ れ た クラス 、 メソッド 、 および トップ レベル の 関数 に つ い て 、 限 ら れ た 量 の 情報 を 定義 する の に 使 わ れ ま す 。 
この クラス に よ っ て 提供 さ れ る 情報 は 、 伝統 的 な  3  ペイン 形式 の クラス ブラウザー を 実装 する の に 十分 な だけ の 量 に な り ま す 。 
情報 は モジュール の インポート に よ ら ず 、 ソース コード から 抽出 し ま す 。  この ため 、 この モジュール は 信用 でき な い ソース コード に 対 し て 利用 し て も 安全 で す 。 
この 制限 から 、 多く の 標準 モジュール や オプション の 拡張 モジュール を 含 む 、 Python  で 実装 さ れ て い な い モジュール に 対 し て 利用 する こと は でき ま せ ん 。 
モジュール を 読み込 み 、 辞書 マッピング クラス を 返 し 、 クラス 記述 オブジェクト に 名前 を つけ ま す 。 
パラメタ module は モジュール 名 を 表 す 文字 列 で な く て は な り ま せ ん ; パッケージ 内 の モジュール 名 で も かま い ま せ ん 。 
path  パラメタ は シーケンス 型 で な く て は な ら ず 、  モジュール の ソース コード が あ る 場所 を 特定 する 際 に  sys . path  の 値 に 補完 する 形 で 使 わ れ ま す 。 
readmodule ( )  に 似 て い ま す が 、 返 さ れ る 辞書 は 、 クラス 名 から クラス 記述 オブジェクト へ の 対応 付け に 加え て 、 トップ レベル 関数 から 関数 記述 オブジェクト へ の 対応 付け も 行 っ て い ま す 。 
さらに 、 読み出し 対象 の モジュール が パッケージ の 場合 、 返 さ れ る 辞書 は キー  '__ path_ _' を 持 ち 、 その 値 は パッケージ の 検索 パス が 入 っ た リスト に な り ま す 。 
18 . 7 . 2  関数 記述 オブジェクト  ( Function  Descriptor 
py _ compile モジュール に は 、 ソース ファイル から バイトコード ファイル を 作 る 関数 と 、 モジュール の ソース ファイル が スクリプト と し て 呼び出 さ れ る 時 に 使用 さ れ る 関数 が 定義 さ れ て い ま す 。  頻繁 に 必要 と な る わけ で は あ り ま せ ん が 、 共有 ライブラリ と し て モジュール を インストール する 場合 や 、 特に ソース コード の あ る ディレクトリ に バイトコード の キャッシュ ファイル を 書き込 む 権限 が な い ユーザ が い る とき に は 、 この 関数 は 役 に 立 ち ま す 。 
ファイル を コンパイル 中 に エラー が 発生 する と 、 Py CompileError 例外 が 送出 さ れ ま す 。 
ソース ファイル を バイトコード に コンパイル し て 、 バイトコード の キャッシュ ファイル に 書き出 し ま す 。 
ソース コード は ファイル 名 file で 渡 し ま す 。 
バイトコード は ファイル cfile に 書き込 ま れ 、 デフォルト で は file 
+ ' c ' ( 使用 し て い る インタープリタ で 最適 化 が 可能 なら ' o ' ) で す 。 
もし dfile が 指定 さ れ た ら 、 file の 代わり に ソース ファイル の 名前 と し て エラー メッセージ の 中 で 使 わ れ ま す 。 
doraise  =  True の 場合 、 コンパイル 中 に エラー が 発生 する と Py CompileError を 送出 し ま す 。 
doraise  =  False の 場合 ( デフォルト ) は エラー メッセージ は sys . stderr に 出力 し 、 例外 は 送出 し ま せ ん 。 
いく つ か 複数 の ソース ファイル を コンパイル し ま す 。 
args で ( あるいは args で 指定 さ れ な かっ た ら コマンドライン で ) 指定 さ れ た ファイル を コンパイル し 、 でき た バイトコード を 通常 の 方法 で 保存 し ま す 。 
この 関数 は ソース ファイル の 存在 する ディレクトリ を 検索 し ま せ ん ; 指定 さ れ た ファイル を コンパイル する だけ で す 。 
この モジュール が スクリプト と し て 実行 さ れ る と 、 main ( ) が コマンドライン で 指定 さ れ た ファイル を 全て コンパイル し ま す 。 
ディレクトリ ツリー 内 の Python ソース ファイル を 全て コンパイル する ライブラリ 。  . 
pydoc モジュール は 、 Python モジュール から 自動 的 に ドキュメント を 生成 し ま す 。 
pydoc を Python インタプリタ から は な く 、 オペレーティング システム の コマンド プロンプト から 起動 し た 場合 で も 、 同じ テキスト 形式 の ドキュメント を 見 る こと が でき ま す 。  例えば 、 以下 を shell から 実行 する と 
モジュール の ドキュメント を 、 Unix  の man コマンド の よう な 形式 で 表示 さ せ る こと が でき ま す 。 
pydoc の 引数 と し て 与え る こと が でき る の は 、 関数 名 ・ モジュール 名 ・ パッケージ 名 、 また 、 モジュール や パッケージ 内 の モジュール に 含 ま れ る クラス ・ メソッド ・ 関数 へ の ドット " . " 形式 で の 参照 で す 。 
pydoc - p  1234 と する と 、 HTTP サーバー を ポート 1234 に 起動 し ま す 。  これ で 、 お 好き な Web  browser を 使 っ て http:\/\/local host : 1234 \/ から ドキュメント を 見 る こと が でき ま す 。 
pydoc で ドキュメント を 生成 する 場合 、 その 時点 で の 環境 と パス 情報 に 基づ い て モジュール が どこ に あ る の か 決定 さ れ ま す 。 
その ため 、 pydocspam を 実行 し た 場合 に つく ら れ る ドキュメント は 、 Python インタプリタ を 起動 し て " importspam " と 入力 し た とき に 読み込 ま れ る モジュール に 対 する ドキュメント に な り ま す 。  コア モジュール の ドキュメント は http:\/\/www .python . org \/ doc\/current\/ lib \/ に あ る と 仮定 さ れ て い ま す 。 
これ は 、 ライブラリ リファレンス マニュアル を 置 い て い る 異な る URL か ローカル ディレクトリ を  環境 変数 PYTHON DOCS に 設定 する こと で オーバーライド する こと が でき ま す 。 
この モジュール は  BuildApplet  と BuildApplication  の ヘルパー モジュール と し て 主に 利用 さ れ て い ま す 。 
コンパイル 済み の  Python  コード に  ' PYC '  リソース を 付加 でき ま す 。 
この モジュール は  Python  インタプリタ の 初期 設定 の 読み込 み や 書き込み を 行え る よう に 
モジュール を 特化 し た もの で す 。 
quietconsole  を 使 う と 、 バッファ の  stdio  出力 を 表示 せ ず に  ( あるいは 、 EditPythonPrefs で 設定 さ れ て い れ ば 、 st dout  ウィンドウ を 全く 表示 し な い で )  保存 でき ま す 。  保存 さ れ る の は 、 stdin  から 読み込み を 始め る か 、 バッファ リング を 止め る か する まで の 間 で 、 その 時点 で 全て の 出力 は 今度 は ウィンドウ に 送 ら れ る こと に な り ま す 。 
グラフィカル ユーザ インターフェース ( GUI ) プログラム で 、 クラッシュ 時 の 出力 を 表示 し た い 場合 に 便利 で す 。 
この モジュール は  RFC  15 21 : `` MIME  ( Multipurpose  Internet  MailExtensions )  Part  One :  Mechanisms  for  Specifying  and  Describing  theFormat  of  Internet  Message  Bodies' ' で 定義 さ れ て い る  quoted - printable に よ る 伝送 の エンコード および デコード を 行 い ま す 。 
quoted - printable  円 コーディング は 比較 的 印字 不 可能 な 文字 の 少な い データ の ため に 設計 さ れ て い ま す ;  画像 ファイル を 送 る とき の よう に 印字 不 可能 な 文字 が たくさん あ る 場合 に は 、 
モジュール で 利用 でき る  base 64 エンコーディング の ほう が より コンパクト に な り ま す 。 
オプション 引数  header  が 存在 し 、 かつ その 値 が 真 で あ る 場合 、 アンダース コア は 空白 文字 に デコード さ れ ま す 。 
これ は  RFC  15 22 : `` MIME  ( Multipurpose  Internet  Mail  Extensions ) Part Two:  Message  Header  Extensions  for  Non - ASCII  Text ' ' で 記述 さ れ て い る ところ の `` Q ' ' - エンコード さ れ た ヘッダ を デコード する の に 使 わ れ ま す 。 
input . readline ( )  が 空 文字 列 を 返 す まで 読み つづけ られ ま す 。 
quotetabs  は データ 中 に 埋め込 ま れ た 空白 文字 や タブ を 変換 する か どう か 制御 する フラグ で す ;  この 値 が 真 なら 、 それ ら の 空白 を エンコード し ま す 。  偽 なら エンコード せ ず その まま に し て お き ま す 。 
行末 の スペース や タブ は  RFC  15 21  に 従 っ て 常 に 変換 さ れ る の で 注意 し て くださ い 。 
decode ( )  に 似 て い ま す が 、 文字 列 を 入力 と し て 受け取 り 、 デコード さ れ た 文字 列 を 返 し ま す 。 
Python  は 中心 と な る 乱数 生成 器 と し て  Mersenne Twister  を 使 い ま す 。 
これ は  53  ビット の 浮動 小数 点 を 生成 し 、 周期 が  2 * * 1993 7 - 1 、 本体 は  C  で 実装 さ れ て い て 、 高速 で スレッド セーフ で す 。 
Mersenne Twister  は 、 現存 する 中 で 、 最も 大 規模 に テスト さ れ た 乱数 生成 器 の ひと つ で す 。 
しかし 、 完全 に 決定 論 的 で あ る ため 、 この 乱数 生成 器 は 全て の 目的 に 合致 し て い る わけ で は な く 、 暗号 化 の 目的 に は 全く 向 い て い ま せ ん 。  この モジュール で 提供 さ れ て い る 関数 は 、 実際 に は  random. Random  クラス の 隠蔽 さ れ た インスタンス の メソッド に バインド さ れ て い ま す 。 
内部 状態 を 共有 し な い 生成 器 を 取得 する ため 、 自分 で  Random  の インスタンス を 生成 する こと が でき ま す 。 
サブ クラス 化 の 例 と し て 、 random モジュール は  WichmannHill  クラス を 提供 し ま す 。  この クラス は  Python  だけ で 書 か れ た 代替 生成 器 を 実装 し て い ま す 。 
この クラス は 、 乱数 生成 器 に  Wichmann- Hill  法 を 使 っ て い た 古 い バージョン の  Python  から 得 られ た 結果 を 再現 する ため の 、 後方 互換 の 手段 に な り ま す 。  バージョン  2 . 3  で  変更  さ れ た 仕様 : MersenneTwister  を Wichmann- Hill  の 代わり に 使 う 
保守 関数 : 
基本 乱数 生成 器 を 初期 化 し ま す 。 
オプション 引数  x  は ハッシュ 可能 な 任意 の オブジェクト を と り 得 ま す 。 
x  が 省略 さ れ る か  None  の 場合 、 現在 の システム 時間 が 使 わ れ ま す ;  現在 の システム 時間 は モジュール が 最初 に インポート さ れ た 時 に 乱数 生成 器 を 初期 化 する ため に も 使 わ れ ま す 。 
乱数 の 発生 源 を オペレーティング システム が 提供 し て い る 場合 、 システム 時刻 の 代わり に その 発生 源 が 使 わ れ ま す ( 詳細 に つ い て は  os . urandom ( ) 関数 を 参照 ) 。 
乱数 生成 器 の 現在 の 内部 状態 を 記憶 し た オブジェクト を 返 し ま す 。 
この オブジェクト を  setstate ( )  に 渡 し て 内部 状態 を 復帰 する こと が でき ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
内部 状態 を 、 現在 の 状態 から 、 非常 に 離れ て い る で あ ろ う 状態 に 変更 し ま す 。 
n  は 非負 の 整数 で す 。 
これ は マルチ スレッド の プログラム が 複数 の  Random  クラス の インスタンス と 結合 さ れ て い る 場合 に 非常 に 便利 で す :  setstate ( ) や  seed ( )  は 全て の インスタンス を 同じ 内部 状態 に する の に 使 う こと が でき 、 その 後  jumpahead ( )  を 使 っ て 各 インスタンス の 内部 状態 を 引き離 す こと が でき ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : n  ステップ 先 の 特定 の 状態 に な る の で は な く 、  jumpahead ( n )  は 何 ステップ も 離れ て い る で あ ろ う 別 の 状態 に する 
整数 用 の 関数 : 
range ( start 、 stop 、 step )  の 要素 から ランダム に 選 ば れ た 要素 を 返 し ま す 。 
この 関数 は  choice ( range ( start , stop ,  step ) ) と 等価 で す が 、 実際 に は  range  オブジェクト を 生成 し ま せ ん 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
で あ る よう な ランダム な 整数  N  を 返 し ま す 。 
空 で な い シーケンス  seq  から ランダム に 要素 を 返 し ま す 。  + seq  が 空 の とき は 、  In dexError  が 送出 さ れ ま す 。 
オプション の 引数  random は 、 値域 が  [ 0 . 0 ,  1 . 0 )  の ランダム な 浮動 小数 点数 を 返 す よう な 引数 を 持 た な い 関数 で す ;  標準 で は 、 この 関数 は  random( )  で す 。 
かなり 小さ い  len ( x )  で あ っ て も 、 x  の 順列 は ほとんど の 乱数 生成 器 の 周期 より も 大き く な る の で 注意 し て くださ い ; この こと は 長 い シーケンス に 対 し て は ほとんど の 順列 は 生成 さ れ な い こと を 意味 し ま す 。 
母 集団 の シーケンス から 選 ば れ た 長 さ  k  の 一意 な 要素 から な る リスト を 返 し ま す 。 
値 の 置換 を 行 わ な い ランダム サンプリング に 用い られ ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
母 集団 自体 を 変更 せ ず に 、 母 集団 内 の 要素 を 含 む 新た な リスト を 返 し ま す 。 
返 さ れ た リスト は 選択 さ れ た 順 に 並 ん で い る の で 、 この リスト の 部分 スライス も ランダム な サンプル に な り ま す 。  これ に よ り 、 くじ の 当選 者 を 1 等 賞 と 2 等 賞 ( の 部分 スライス ) に 分け る と い っ た こと も 可能 で す 。 
母 集団 の 要素 は ハッシュ 可能 で な く て も 、 ユニーク で な く て も 、 かま い ま せ ん 。 
母 集団 が 繰り返し を 含 む 場合 、 返 さ れ た リスト の 各 要素 は サンプル から 選択 可能 な 要素 に な り ま す 。  整数 の 並び から サンプル を 選 ぶ に は 、 引数 に  xrange  を 使 い ま しょ う 。 
特に 、 巨大 な 母 集団 から サンプル を 取 る とき 、 速度 と 空間 効率 が 上が り ま す 。  sample ( xrange ( 10000000 ) ,  60 ) 
以下 の 関数 は 特殊 な 実数 値 分布 を 生成 し ま す 。  関数 パラメタ は 対応 する 分布 の 公式 に お い て 、 数学 的 な 慣行 に 従 っ て 使 わ れ て い る 変数 から 取 ら れ た 名前 が つけ られ て い ま す ;  これ ら の 公式 の ほとんど は 多く の 統計 学 の テキスト に 載 っ て い ま す 。 
値域  [ 0 . 0 ,  1 . 0 )  の 次 の ランダム な 浮動 小数 点数 を 返 し ま す 。 
ベータ 分布 で す 。 
引数 の 満た す べ き 条件 は 
alpha  - 1  および 
beta - 1  で す 。  0  から  1  の 値 を 返 し ま す 。 
指数 分布 で す 。  lambd  は 平均 に し た い 値 で  1 . 0  を 割 っ た もの で す 。 
( この パラメタ は `` lambda ' ' と 呼 ぶ べ き な の で す が 、 Python  の 予約 語 な の で 使え ま せ ん 。 
)  返 さ れ る 値 の 範囲 は  0  から 正 の 無限 大 で す 。 
ガンマ 分布 で す 。 
( ガンマ 関数  で は あ り ま せ ん  ! )  引数 の 満た す べ き 条件 は 
alpha  0  および 
beta  0 で す 。 
ガウス 分布 で す 。  mu  は 平均 で あ り 、  sigma  は 標準 偏差 で す 。 
この 関数 は 後 で 定義 する 関数  normalvariate ( )  より 少し だけ 高速 で す 。 
対数 正規 分布 で す 。 
この 分布 を 自然 対数 を 用い た 分布 に し た 場合 、 平均  mu  で 標準 偏差  sigma  の 正規 分布 に な る で しょ う 。  mu  は 任意 の 値 を 取 る こと が でき 、  sigma  は ゼロ より 大き く な けれ ば な り ま せ ん 。 
正規 分布 で す 、 mu  は 平均 で 、 sigma  は 標準 偏差 で す 。 
mu  は 平均 の 角度 で 、 0  から  2 * pi  まで の ラジアン で 表 さ れ ま す 。  kappa  は 濃度 パラメタ で 、 ゼロ また は それ 以上 で な けれ ば な り ま せ ん 。 
kappa  が ゼロ に 等し い 場合 、 この 分布 は 範囲  0  から  2 * pi  の 一様 で ランダム な 角度 の 分布 に 退化 し ま す 。 
パレート 分布 で す 。  alpha  は 形状 パラメタ で す 。 
ワイブル 分布 で す 。  alpha  は スケール パラメタ で 、 beta  は 形状 パラメタ で す 。 
代替 の 乱数 生成 器 
クラス WichmannHill 
乱数 生成 器 と し て  Wichmann- Hill  アルゴリズム を 実装 する クラス で す 。 
Random  クラス と 同じ メソッド 全て と 、 下 で 説明 する  whseed  メソッド を 持 ち ま す 。 
この クラス は 、 Python  だけ で 実装 さ れ て い る の で 、 スレッド セーフ で は な く 、 呼び出し と 呼び出し の 間 に ロック が 必要 で す 。 
また 、 周期 が  6 , 953 , 60 7 ,8 7 1 , 644  と 短 く 、 独立 し た 2 つ の 乱数 列 が 重複 し な い よう に 注意 が 必要 で す 。 
取り得 る 内部 状態 の 個数 が  2 * * 24  以下 に な る 場合 も あ り ま す 。  クラス SystemRandom 
オペレーティング システム の 提供 する 発生 源 に よ っ て 乱数 を 生成 する os . urandom ( ) 関数 を 使 う クラス で す 。 
getstate ( )  と + setstate ( )  メソッド が 呼び出 さ れ る と 、 例外 NotImplementedError が 送出 さ れ ま す 。 
参考 : 
この モジュール で は 、 Perl  で 見 られ る もの と 同様 な 正規 表現 マッチング 操作 を 提供 し て い ま す 。 
正規 表現 の パターン 文字 列 に は ヌル バイト を 含め られ ま せ ん が 、 number 
記法 を 使 え ば ヌル バイト を 指定 でき ま す 。 
パターン と 検索 対象 文字 列 の 両方 に つ い て 、  8  ビット 文字 列 と  Unicode  文字 列 を 同じ よう に 扱え ま す 。 
re  モジュール は いつ で も 利用 でき ま す 。  正規 表現 で は 、 特殊 な 形式 を 表 し たり 、 特殊 文字 の 持 つ 特別 な 意味 を 呼び出 さ ず に その 特殊 な 文字 を 使え る よう に する ため に 、 バックス ラッシュ 文字 ( " " )  を 使 い ま す 。 
通常 、  Python  コード 中 で は 、 パターン を この  raw string  記法 を 使 っ て 表現 し ま す 。 
Mastering  Regular  Expressions  詳説  正規 表現 
Jeffrey  Friedl  著 、 O 'Reilly  刊 の 正規 表現 に 関 する 本 で す 。 
この 本 の 第 2 版 で は Pyhon に つ い て は 触れ て い ま せ ん が 、 良 い 正規 表現 パターン の 書 き 方 を 非常 に くわし く 説明 し て い ま す 。 
readline  モジュール で は 、 補完 を し やす く し たり 、 ヒストリファイル を  Python  インタプリタ から 読み書き でき る よう に する ため の いく つ か の 関数 を 定義 し て お り 、 これ ら は 直接 使 う こと も 
モジュール を 介 し て 使 う こと も でき ま す 。  readline  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
readline  初期 化 ファイル の 行 を 一行 解釈 し て 実行 し ま す 。 
行 編集 バッファ の 現在 の 内容 を 返 し ま す 。 
コマンドライン に テキスト を 挿入 し ま す 。 
readline  初期 化 ファイル を 解釈 し ま す 。  標準 の ファイル 名 設定 は 最後 に 使 わ れ た ファイル 名 で す 。 
readline  ヒストリファイル を 読み出 し ま す 。  標準 の ファイル 名 設定 は ~\/. history  で す 。 
readline  ヒストリファイル を 保存 し ま す 。  標準 の ファイル 名 設定 は ~\/. history  で す 。 
現在 の ヒストリ を クリア し ま す 。 
( 注意 : インストール さ れ て い る  GNU  readline が サポート し て い な い 場合 、 この 関数 は 利用 でき ま せ ん ) バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
ヒストリファイル に 必要 な 長 さ を 返 し ま す 。 
負 の 値 は ヒストリファイル の サイズ に 制限 が な い こと を 示 し ま す 。 
ヒストリファイル に 必要 な 長 さ を 設定 し ま す 。  この 値 は write_history _ file ( )  が ヒストリ を 保存 する 際 に ファイル を 切り詰め る ため に 使 い ま す 。 
負 の 値 は ヒストリファイル の サイズ を 制限 し な い こと を 示 し ま す 。 
現在 の ヒストリ 行数 を 返 し ま す ( この 値 は get_history _ length ( ) で 取得 する 異な り ま す 。 
get_history _ length ( ) は ヒストリファイル に 書き出 さ れ る 最大 行数 を 返 し ま す ) 。 
現在 の ヒストリ から 、 index  番 目 の 項目 を 返 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。  remove_ history _ item
指定 し た 位置 に あ る ヒストリ を 、 指定 し た  line  で 置き換え ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
画面 の 表示 を 、 現在 の ヒストリ 内容 に よ っ て 更新 し ま す 。 
startup_hook  関数 を 設定 また は 除去 し ま す 。 
function  が 指定 さ れ て い れ ば 、 新た な  startup_hook  関数 と し て 用い られ ま す ;  省略 さ れ る か  None  に な っ て い れ ば 、 現在 インストール さ れ て い る フック 関数 は 除去 さ れ ま す 。 
startup_hook  関数 は  readline  が 最初 の プロンプト を 出力 する 直前 に 引数 なし で 呼び出 さ れ ま す 。 
pre _ input _hook  関数 を 設定 また は 除去 し ま す 。 
function  が 指定 さ れ て い れ ば 、 新た な  pre _ input _hook  関数 と し て 用い られ ま す ;  省略 さ れ る か  None  に な っ て い れ ば 、 現在 インストール さ れ て い る フック 関数 は 除去 さ れ ま す 。 
pre _ input _hook  関数 は  readline  が 最初 の プロンプト を 出力 し た 後 で 、 かつ  readline  が 入力 さ れ た 文字 を 読み込 み 始め る 直前 に 引数 なし で 呼び出 さ れ ま す 。 
completer  関数 を 設定 また は 除去 し ま す 。 
function  が 指定 さ れ て い れ ば 、 新た な  completer  関数 と し て 用い られ ま す ;  省略 さ れ る か  None  に な っ て い れ ば 、 現在 インストール さ れ て い る  completer  関数 は 除去 さ れ ま す 。 
completer  関数 は 
function ( text ,  state ) の 形式 で 、 関数 が 文字 列 で な い 値 を 返 す まで  state  を 0 ,  1 ,  2 , . . . ,  に し て 呼び出 し ま す 。 
この 関数 は  text  から 始ま る 文字 列 の 補完 結果 と し て 可能 性 の あ る もの を 返 さ な く て は な り ま せ ん 。 
completer  関数 を 取得 し ま す 。 
completer  関数 が 設定 さ れ て い な けれ ば None を 返 し ま す 。 
readline  タブ 補完 スコープ の 先頭 の インデクス を 取得 し ま す 。 
readline  タブ 補完 スコープ の 末尾 の インデクス を 取得 し ま す 。 
タブ 補完 の ため の  readline  単語 区切り 文字 を 設定 し ま す 。 
タブ 補完 の ため の  readline  単語 区切り 文字 を 取得 し ま す 。 
1  行 を ヒストリ バッファ に 追加 し 、 最後 に 打ち込 ま れ た 行 の よう に し ま す 。 
対話 的 プロンプト で  Python  識別 子 を 補完 する 機能 。 
クラス Repr
組み込 み クラス repr ( ) に よく 似 た 関数 を 実装 する ため に 役 に 立 つ 書式 化 サービス を 提供 し ま す 。  過度 に 長 い 表現 を 作り出 さ な い よう に 、 異な る オブジェクト 型 に 対 する 大き さ の 制限 が 追加 さ れ ま す 。 
これ は 下 で 説明 さ れ る repr ( ) 関数 を 提供 する ため に 使 わ れ る Repr の インスタンス で す 。 
この オブジェクト の 属性 を 変更 する と 、 repr ( ) と Python デバッガ が 使 う サイズ 制限 に 影響 し ま す 。 
これ は aRepr の repr ( ) メソッド で す 。 
同じ 名前 の 組み込 み 関数 が 返 す 文字 列 と 似 て い ま す が 、 最大 サイズ に 制限 の あ る 文字 列 を 返 し ま す 。 
下 に 述べ る 関数 は 、 背後 に あ る システム コール が 予期 せ ず 失敗 し た 場合 、 この エラー を 送出 する か も しれ ま せ ん 。 
警告 : この ドキュメント は 、 rexec モジュール を 使用 し て い る 古 い コード を 読 む 際 の 参照 用 と し て 残 さ れ て い ま す 。 
警告 :  rexec  モジュール は 、 下記 の よう に 動作 する べ く 設計 さ れ て は い ま す が 、 注意 深 く 書 か れ た コード なら 利用 でき て しま う か も しれ な い 、 既知 の 脆弱 性 が いく つ か あ り ま す 。 
従 っ て 、 ` ` 製品 レベル ' '  の セキュリティ を 要 する 状況 で は 、 rexec  の 動作 を あて に する べ き で は あ り ま せ ん 。 
製品 レベル の セキュリティ を 求め る なら 、 サブ プロセス を 介 し た 実行 や 、 あるいは 処理 する コード と データ の 両方 に 対 する 非常 に 注意 深 い  ` ` 浄化 ' '  が 必要 で しょ う 。 
上記 の 代わり に 、 rexec  の 既知 の 脆弱 性 に 対 する パッチ 当て の 手伝い も 歓迎 し ま す 。 
注意 :  RExec  クラス は 、 プログラム コード に よ る ディスク ファイル の 読み書き や  TCP \/ IP  ソケット の 利用 と い っ た 、 安全 で な い 操作 の 実行 を 防 ぐ こと が でき ま す 。 
しかし 、 プログラム コード よ る 非常 に 大量 の メモリ や 処理 時間 の 消費 に 対 し て 防御 する こと は でき ま せ ん 。 
クラス RExec 
RExec  クラス の インスタンス を 返 し ま す 。 
その 代わ り 、 あらかじめ  RHooks  クラス に 渡 し て お い たり 、 コンストラクタ で 生成 さ れ た  RHooks  インスタンス の メソッド を 呼び出 し ま す 。 
( 実際 に は 、 RExec  オブジェクト は これ ら を 呼び出 し ま せ ん - -  呼び出し は 、 RExec  オブジェクト の 一部 で あ る モジュール ローダ オブジェクト に よ っ て 行 わ れ ま す 。 
例えば 、 RHooks  オブジェクト を 置き換え て 、 ILU  の よう な ある 種 の  RPC  メカニズム を 介 する こと で 、 全て の ファイル システム の 要求 を どこ か に あ る ファイル サーバ に 渡 す こと が でき ま す 。 
Grail  の アプレット ローダ は 、 アプレット を  URL  から ディレクトリ 上 に import  する 際 に この 機構 を 使 っ て い ま す 。  もし  verbose が  true  で あ れ ば 、 追加 の デバッグ 出力 が 標準 出力 に 送 ら れ ま す 。 
制限 さ れ た 環境 で 実行 する コード も 、 やはり  sys . exit ( )  関数 を 呼 ぶ こと が でき る こと を 知 っ て お く こと は 大事 な こと で す 。 
制限 さ れ た コード が インタプリタ から 抜け だ す こと を 許 さ な い ため に は 、 いつ で も 、 制限 さ れ た コード が 、 SystemExit  例外 を キャッチ する try\/except  文 と とも に 実行 する よう に 、 呼び出し を 防御 し ま す 。 
制限 さ れ た 環境 から  sys . exit ( ) 関数 を 除去 する だけ で は 不 十分 で す  - 制限 さ れ た コード は 、 やはり  raise SystemExit  を 使 う こと が でき て しま い ま す 。 
SystemExit を 取り除 く こと も 、 合理 的 な オプション で は あ り ま せ ん ; いく つ か の ライブラリ コード は これ を 使 っ て い ま す し 、 これ が 利用 でき な く な る と 中断 し て しま う で しょ う 。 
Grail  の ホーム ページ 
Grail  は すべて  Python  で 書 か れ た  Web  ブラウザ で す 。 
これ は 、 rexec モジュール を 、 Python  アプレット を サポート する の に 使 っ て い て 、 この モジュール の 使用 例 と し て 使 う こと が でき ま す 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。  rfc 822  モジュール を 使 う より も 
パッケージ を 使 う べ き で す 。 
この メッセージ は メッセージ ヘッダ 群 と メッセージ ボディ の 集まり から な り ま す 。 
この モジュール で は また 、 ヘルパー クラス  RFC  28 2 2  アドレス 群 を 解釈 する ため の  AddressList  クラス を 定義 し て い ま す 。 
RFC  28 2 2  メッセージ 固有 の 構文 に 関 する 情報 は  RFC  を 参照 し て くださ い 。 
モジュール で は 、 多く の エンド ユーザ メイル プログラム に よ っ て 生成 さ れ る メイル ボックス を 読み出 す ため の クラス を 提供 し て い ま す 。 
Message  インスタンス は 入力 オブジェクト を パラメタ に 与え て インスタンス 化 し ま す 。 
入力 オブジェクト の メソッド の うち 、 Message  が 依存 する の は  readline ( )  だけ で す ;  通常 の ファイル オブジェクト は 適格 で す 。 
インスタンス 化 を 行 う と 、 入力 オブジェクト から デリミタ 行  ( 通常 は 空行  1  行 )  に 到達 する まで ヘッダ を 読み出し 、 それ ら を インスタンス 中 に 保持 し ま す 。 
ヘッダ の 後 の メッセージ 本体 は 読み出し ま せ ん 。  この クラス は  readline ( )  メソッド を サポート する 任意 の 入力 オブジェクト を 扱 う こと が でき ま す 。 
入力 オブジェクト が  seek  および tell  でき る 場合 、  rewindbody ( )  メソッド が 動作 し ま す 。  また 、 不正 な 行 データ を 入力 ストリーム に プッシュ バック でき ま す 。 
入力 オブジェクト が  seek  でき な い 一方 で 、 入力 行 を プッシュ バック する unread ( )  メソッド を 持 っ て い る 場合 、 Message は 不正 な 行 データ に この プッシュ バック を 使 い ま す 。 
こう し て 、 この クラス は バッファ さ れ て い る ストリーム から 来る メッセージ を 解釈 する の に 使 う こと が でき ま す 。  オプション の  seekable  引数 は 、 lseek ( )  システム コール が 動作 し な い と 分か る まで は tell ( )  が バッファ さ れ た データ を 無視 する よう な 、 ある 種 の stdio  ライブラリ で 回避 手段 と し て 提供 さ れ て い ま す 。 
例えば 、  m [ ' From '] 、 
m [ ' from ' ] 、 および 
m [ ' FROM' ]  は 全て 同じ 結果 に な り ま す 。 
クラス AddressList 
RFC  28 3 3  アドレス を カンマ で 区切 っ た もの と し て 解釈 さ れ る 単一 の 文字 列 パラメタ を 使 っ て 、 AddressList  ヘルパー クラス を インスタンス 化 する こと が でき ま す 。 
( パラメタ  None  は 空 の リスト を 表 し ま す 。 ) 
str  中 の バックス ラッシュ が  2  つ の バックス ラッシュ に 置き換え られ 、 二 重 引用 符 が バックス ラッシュ 付き の 二 重 引用 符 に 置き換え られ た 、 新た な 文字 列 を 返 し ま す 。 
str  の  逆 クオート さ れ た  新た な 文字 列 を 返 し ま す 。  str  が 二重 引用 符 で 囲 わ れ て い た 場合 、 二 重 引用 符 を 剥ぎ取 り ま す 。 
同様 に 、  str  が 三 角 括弧 で 囲 わ れ て い た 場合 に も 剥ぎ取 り ま す 。 
parseaddr( )  の 逆 で 、 ( realname , email _ address )  形式 の  2  要素 の タプル を と り 、 To : や  Cc :  ヘッダ に 適 し た 文字 列 値 を 返 し ま す 。 
pair の 最初 の 要素 が 真値 を と ら な い 場合 、 二 つ 目 の 要素 を その まま 返 し ま す 。 
日付 の 解析 に 成功 し た 場合 、 parsedate ( )  は time. mktime( )  に その まま 渡 す こと が でき る よう な  9  要素 の タプル を 返 し ま す ;  そう で な い 場合 に は None  を 返 し ま す 。 
結果 の フィールド  6 、 7 、 および  8  は 有用 な 情報 で は あ り ま せ ん 。 
parsedate ( )  と 同じ 機能 を 実現 し ま す が 、 None  また は 10  要素 の タプル を 返 し ま す ;  最初 の  9  要素 は  time. mktime( ) に 直接 渡 す こと が でき る よう な タプル で 、  10  番 目 の 要素 は その 日 の タイム ゾーン に おけ る  UTC  ( グリニッチ 標準 時 の 公式 名称 )  から の オフセット で す 。 
( タイム ゾーン オフセット の 符号 は 、 同じ タイム ゾーン に おけ る  time. timezone  変数 の 符号 と 反転 し て い ま す ;  後者 の 変数 が  POSIX  標準 に 従 っ て い る 一方 、 この モジュール は  RFC  28 2 2  に 従 っ て い る から で す 。 
)  入力 文字 列 が タイム ゾーン 情報 を 持 た な い 場合 、 タプル の 最後 の 要素 は  None に な り ま す 。 
parsedata_tz ( )  が 返 す  10  要素 の タプル を  UTC  タイム スタンプ に 変換 し ま す 。 
タプル 内 の タイム ゾーン 要素 が  None  の 場合 、 地域 の 時刻 を 表 し て い る もの と 家庭 し ま す 。 
些細 な 欠陥 :  この 関数 は まず 最初 の 8  要素 を 地域 に お け る 時刻 と し て 変換 し 、 次 に タイム ゾーン の 違い に 対 する 補償 を 行 い ま す ;  これ に よ り 、 夏 時間 の 切り替え 日 前後 で ちょっと し た エラー が 生じ る か も しれ ま せ ん 。 
通常 の 利用 に 関 し て は 心配 あ り ま せ ん 。 
: モジュール 
網羅 的 な 電子 メイル 処理 パッケージ で す ;  rfc 822  モジュール を 代替 し ま す 。  . 
エンド ユーザ の メイル プログラム に よ っ て 生成 さ れ る 、 様々 な mailbox  形式 を 読み出 す ため の クラス 群 。 
MIME  エンコード さ れ た メッセージ を 処理 する  rfc 822 . Message  の サブ クラス 。 
この モジュール は もともと  RFC  82 2  に 適合 し て い た の で 、 そう い う 名前 に な っ て い ま す 。 
その 後 、 RFC  28 2 2  が  RFC  82 2  に 対 する 更新 と し て リリース さ れ ま し た 。 
この モジュール は  RFC  28 2 2  適合 で あ り 、 特に RFC  82 2  から の 構文 や 意味 付け に 対 する 変更 が な さ れ て い ま す 。 
rgbimg モジュール を 使 う と 、 Python プログラム から  SGI  imglib  画像 ファイル  (.rgb  と し て も 知 ら れ て い ま す )  に アクセス でき ま す 。 
この モジュール は 完全 と は いえ ま せ ん が 、 ちょっと し た 用途 に は 十分 な 機能 を 持 っ て い る ため 提供 さ れ て い ま す 。 
現在 の ところ カラーマップ ファイル は サポート さ れ て い ま せ ん 。 
注意 : この モジュール は デフォルト で は 32 ビット プラットフォーム 上 で しか 構築 さ れ ま せ ん 。  他 の システム で は 適切 に 動作 し そう に な い から で す 。 
この モジュール で は 以下 の 変数 と 関数 を 定義 し て い ま す : 
ファイル 形式 が サポート さ れ て い な い 場合 など 、 全て の エラー に 対 し て 送出 さ れ る 例外 で す 。 
指定 し た ファイル 上 の 画像 を 読み込 ん で デコード し 、 Python 文字 列 に し て 返 し ま す 。 
文字 列 は 4 バイト RGB ピクセル 形式 で す 。  左下 の ピクセル が 文字 列 の 先頭 に な り ま す 。 
この 形式 は 、 例えば gl . lrectwrite ( )  に 渡 す と い っ た 用途 に 適 し て い ま す 。 
data の  RGBA データ を 画像 ファイル file  に 書き込 み ま す 。 
x と y は 画像 の 大き さ を 表 し ま す 。  画像 を  1  バイト の z  は グレイス ケール で 保存 する 場合 に は  1  、 3 バイト の RGB データ の 場合 は  3  で す 、 4 バイト の RGBA  データ の 場合 に は  4  に な り ま す 。 
入力 データ は 常 に ピクセル 当たり  4  バイト に せ ね ば な り ま せ ん 。  gl . lrectread ( )  の 返 す 形式 と 同じ で す 。 
画像 の スキャン ライン を 下端 から 上端 に 向か っ て 読み書き する  ( flag  は ゼロ 、 SGI  GL  互換 の 方法 )  か 、 上端 から 下端 に 向か っ て 読み書き する  ( flag  は  1 、  X  互換 の 方法 )  か を 決め る グローバル な フラグ で す 。 
デフォルト 値 は ゼロ で す 。 
rlcompleter モジュール で は Python の 識別 子 や キー ワード を 定義 し た 
モジュール 向け の 補完 関数 を 定義 し て い ま す 。 
モジュール が Unix 依存 な の で この モジュール も Unix に 依存 し て い ま す 。 rlcompleter モジュール は Completer クラス を 定義 し て い ま す 。 
使用 例 : 
rlcompleter モジュール は  Python の 対話 モード で 利用 する 為 に デザイン さ れ て い ま す 。 
ユーザ は 以下 の 命令 を 初期 化 ファイル ( 環境 変数 PYTHON START UP に よ っ て 定義 さ れ ま す ) に 書き込 む こと で 、 Tab キー に よ る 補完 を 利用 でき ま す : 
この モジュール で は 単一 の クラス 、 RobotFileParser  を 提供 し ま す 。 
この クラス は 、 特定 の ユーザ エージェント が  robots . txt  ファイル を 公開 し て い る  Web  サイト の あ る  URL  を 取得 可能 か どう か の 質問 に 答え ま す 。 
robots . txt  ファイル の 構造 に 関 する 詳細 は http:\/\/www . robotstxt . org \/wc\/norobots . html を 参照 し て くださ い 。 
クラス RobotFileParser 
robots . txt  ファイル を 参照 する ため の  URL  を 設定 し ま す 。 
robots . txt  URL  を 読み出し 、 パーザ に 入力 し ま す 。 
引数  lines  の 内容 を 解釈 し ま す 。 
解釈 さ れ た  robots . txt  ファイル 中 に 記載 さ れ た 規則 に 従 っ た とき 、 useragent  が url を 取得 し て も よ い 場合 に は  True  を 返 し ま す 。 
robots . txt  ファイル を 最後 に 取得 し た 時刻 を 返 し ま す 。 
この 値 は 、 定期 的 に 新た な  robots . txt  を チェック する 必要 が あ る 、 長 時間 動作 する  Web  スパイダー プログラム を 実装 する 際 に 便利 で す 。 
robots . txt  ファイル を 最後 に 取得 し た 時刻 を 現在 の 時刻 に 設定 し ま す 。 
以下 に RobotFileParser  クラス の 利用 例 を 示 し ま す 。 
sched モジュール は 一般 的 な 目的 の ため の イベントスケジューラ を 実装 する クラス を 定義 し ま す :  クラス scheduler 
scheduler クラス は イベント を スケジュール する ため の 一般 的 な インターフェース を 定義 し ま す 。 
それ は ` ` 外部 世界 ' ' を 実際 に 扱 う ため の 2 つ の 関数 を 必要 と し ま す --timefunc は 引数 なし で 呼出し 可能 で あ る べ き で 、 そして 数 ( それ は ``time' ' で す ,  どんな 単位 で も かま い ま せ ん ) を 返 す よう に し ま す 。 
delayfunc は 1 つ の 引数 ( timefunc の 出力 と 互換 ) で 呼出し 可能 で あ り 、 その 時間 だけ 遅延 し な けれ ば いけ ま せ ん 。 
各々 の イベント が 、 マルチ スレッド アプリケーション の 中 で 他 の スレッド が 実行 する 機会 の 許可 を 実行 し た 後 に 、 delayfunc は 引数 0 で 呼 ば れ る で しょ う 。 
この モジュール で は 、 ほとんど の オペレーティング システム で 利用 可能 な select ( )  および  poll ( )  関数 へ の アクセス 機構 を 提供 し ま す 。 
Windows  の 上 で は ソケット に 対 し て しか 動作 し な い の で 注意 し て くださ い ;  その 他 の オペレーティング システム で は 、 他 の ファイル 形式 で も  ( 特に  Unix で は パイプ に も )  動作 し ま す 。 
通常 の ファイル に 対 し て 適用 し 、 最後 に ファイル を 読み出 し た 時 から 内容 が 増え て い る か を 決定 する ため に 使 う こと は でき ま せ ん 。  この モジュール で は 以下 の 内容 を 定義 し て い ま す : 
エラー が 発生 し た とき に 送出 さ れ る 例外 で す 。 
エラー に 付属 する 値 は 、 errno  から と っ た エラー コード を 表 す 数値 と その エラー コード に 対応 する 文字 列 から な る ペア で 、 C  関数 の perror ( )  が 出力 する もの と 同様 で す 。 
( 全て の オペレーティング システム で サポート さ れ て い る わけ で は あ り ま せ ん 。 
)  ポーリング オブジェクト を 返 し ま す 。  この オブジェクト は ファイル 記述 子 を 登録 し たり 登録 解除 し たり する こと が でき 、 ファイル 記述 子 に 対 する  I \/ O  イベント 発生 を ポーリング する こと が でき ま す ;  ポーリング オブジェクト が 提供 し て い る メソッド に つ い て は 下記 の 7 . 3 . 1  節 を 参照 し て くださ い 。 
Unix  の select ( )  システム コール に 対 する 直接 的 な インタフェース で す 。 
最初 の  3  つ の 引数 は  ` 待機 可能 な オブジェクト ' から な る シーケンス で す :  ファイル 記述 子 を 表 す 整数 値 、 また は 引数 を 持 た ず 、 整数 を 返 す メソッド  fileno( )  を 持 つ オブジェクト で す 。 
待機 可能 な オブジェクト の  3  つ の シーケンス は それぞれ 入力 、 出力 、 そして  ` 例外 状態 '  に 対応 し ま す 。 
いずれ か に 空 の シーケンス を 指定 し て も かま い ま せ ん が 、 3  つ 全て を 空 の シーケンス に し て も よ い か どう か は プラットフォーム に 依存 し ま す  ( Unix  で は 動作 し 、 Windows  で は 動作 し な い こと が 知 ら れ て い ま す ) 。 
オプション の timeout  引数 に は タイム アウト まで の 秒数 を 浮動 小数 点数 型 で 指定 し ま す 。 
timeout  引数 が 省略 さ れ た 場合 、 関数 は 少な く とも 一 つ の ファイル 記述 子 が 何 ら か の 準備 完了 状態 に な る まで ブロック し ま す 。 
タイム アウト 値 ゼロ は 、 ポーリング を 行 い ブロック し な い こと を 示 し ま す 。  戻 り 値 は 準備 完了 状態 の オブジェクト から な る  3  つ の リスト で す : 従 っ て この リスト は それぞれ 関数 の 最初 の  3  つ の 引数 の サブ セット に な り ま す 。 
ファイル 記述 子 の いずれ も 準備 完了 に な ら な い まま タイム アウト し た 場合 、 3  つ の 空 の リスト が 返 さ れ ま す 。 
シーケンス の 中 に 含め る こと の でき る オブジェクト は  Python  ファイル オブジェクト  ( すなわち  sys . stdin ,  あるいは  open ( )  や os . popen ( )  が 返 す オブジェクト ) 、 socket . socket ( ) が 返 す ソケット オブジェクト  で す 。 
wrapper  クラス を 自分 で 定義 する こと も でき ま す 。  この 場合 、 適切 な  ( 単なる 乱数 で は な く 本当 の ファイル 記述 子 を 返 す ) fileno( )  メソッド を 持 つ 必要 が あ り ま す 
注意 : select  は Windows  の ファイル オブジェクト を 受理 し ま せ ん が 、 ソケット は 受理 し ま す 
sets モジュール は 、 ユニーク な 要素 の 順序 なし コレクション を 構築 し 、 操作 する ため の クラス を 提供 し ま す 。 
帰属 関係 の テスト や シーケンス から 重複 を 取り除 い たり 、 積 集合 ・ 和 集合 ・ 差 集合 ・ 対称 差 集合 の よう な 標準 的 な 数学 操作 など を 含 み ま す 。  他 の コレクション の よう に 、 
を サポート し ま す 。 
順序 なし コレクション は 、 挿入 の 順序 や 要素 位置 を 記録 し ま せ ん 。 
従 っ て 、 インデックス ・ スライス ・ 他 の シーケンス 的 な 振舞い を サポート し ま せ ん 。  ほとんど の 集合 の アプリケーション は 、 _ _ hash_ _( ) を 除 い て すべて の 集合 の メソッド を 提供 する Set クラス を 使用 し ま す 。 
ハッシュ を 要求 する 高度 な アプリケーション に つ い て は 、 ImmutableSet クラス が _ _ hash_ _( ) メソッド を 加え て い る が 、 集合 の 内容 を 変更 する メソッド は 省略 さ れ ま す 。 
Set と ImmutableSet は 、 何 が 集合 ( isinstance (obj ,  BaseSet) ) で あ る か 決め る の に 役立 つ 抽象 クラス BaseSet から 派生 し ま す 。  集合 クラス は 辞書 を 使用 し て 実装 さ れ ま す 。 
その 結果 、 集合 は リスト や 辞書 の よう な 変更 可能 な 要素 を 含 む こと が でき ま せ ん 。  しかし それ ら は 、 タプル や ImmutableSet の インスタンス の よう な 不変 コレクション を 含 む こと が でき ま す 。 
集合 の 集合 の 実装 中 の 便宜 に つ い て は 、 内部 集合 が 自動 的 に 変更 不 可能 な 形式 に 変換 さ れ ま す 。 
例えば 、 Set ( [ Set ( [' dog'] ) ] ) は Set ( [ ImmutableSet ( [' dog'] ) ] ) へ 変換 さ れ ま す 。  クラス Set 
新し い 空 の Set オブジェクト を 構築 し ま す 。 
もし オプション iterable が 与え られ た ら 、 イタレータ から 得 られ た 要素 を 備え た 集合 と し て 更新 し ま す 。 
iterable 中 の 全て の 要素 は 、 変更 不 可能 で あ る か 、 また は 5 . 1 4 . 3 で 記述 さ れ た プロトコル を 使 っ て 変更 不 可能 な もの に 変換 可能 で あ る べ き で す 。  クラス ImmutableSet 
新し い 空 の ImmutableSet オブジェクト を 構築 し ま す 。 
もし オプション iterable が 与え られ た ら 、 イタレータ から 得 られ た 要素 を 備え た 集合 と し て 更新 し ま す 。 
iterable 中 の 全て の 要素 は 、 変更 不 可能 で あ る か 、 また は 5 . 1 4 . 3 で 記述 さ れ た プロトコル を 使 っ て 変更 不 可能 な もの に 変換 可能 で あ る べ き で す 。  ImmutableSet オブジェクト は _ _ hash_ _( ) メソッド を 備え て い る の で 、 集合 要素 また は 辞書 キー と し て 使用 する こと が でき ま す 。 
ImmutableSet オブジェクト は 要素 を 加え たり 取り除 い たり する メソッド を 持 っ て い ま せ ん 。 
したが っ て 、 コンストラクタ が 呼 ば れ た とき 要素 は すべて 知 ら れ て い な けれ ば な り ま せ ん 。 
この モジュール で は  SGML  ( Standard  Generalized  Mark - up  Language : 汎用 マーク アップ 言語 標準 )  で 書式 化 さ れ た テキスト ファイル を 解析 する ため の 基礎 と し て 働 く  SGMLParser  クラス を 定義 し て い ま す 。 
実際 に は 、 この クラス は 完全 な  SGML  パーザ を 提供 し て い る わけ で は あ り ま せ ん - -  この クラス は  HTML  で 用い られ て い る よう な  SGML  だけ を 解析 し 、 モジュール 自体 も 
モジュール の 基礎 に する ため だけ に 存在 し て い ま す 。 
X HTML  を サポート し 、 少し 異な っ た インタフェース を 提供 し て い る もう 一 つ の  HTML  パーザ は 、 
モジュール で 使 う こと が でき ま す 。 
クラス SGMLParser 
SGMLParser  クラス は 引数 無し で イン スタンス 化 さ れ ま す 。  この パーザ は 以下 の 構成 を 認識 する よう に ハード コード さ れ て い ま す : 
" tag  attr = " value "  . . . "  と "\/ tag "  で 表 さ れ る タグ の 開始 部 と 終了 部 。 
" # name ; "  形式 を と る 文字 の 数値 参照 。 
" name ; "  形式 を と る エンティティ 参照 。 
" ! - text - "  形式 を と る  SGML  コメント 。 
末尾 の  " "  と その 直前 に あ る  " - "  の 間 に は スペース 、 タブ 、 改行 を 入れ る こと が でき ま す 。 
例外 が 以下 の よう に 定義 さ れ ま す : 
SGMLParser クラス で 構文 解析 中 に エラー に 出逢 う と この 例外 が 発生 し ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
SGMLParser  インスタンス は 以下 の メソッド を 持 っ て い ま す : 
この メソッド は インスタンス 生成 時 に 非 明示 的 に 呼び出 さ れ ま す 。 
タグ の 処理 を 停止 し ま す 。 
以降 の 入力 を リテラル 入力  ( CDATA )  と し て 扱 い ま す 。 
( この 機能 は  HTML  タグ  PAINTEXT  を 実装 でき る よう に する ため だけ に 提供 さ れ て い ま す ) 
リテラル モード  ( CDATA  モード )  に 移行 し ま す 。 
テキスト を パーザ に 入力 し ま す 。 
入力 は 完全 な エレメント から 成り立 つ 場合 に 限 り 処理 さ れ ま す ;  不 完全 な データ は 追加 の データ が 入力 さ れ る か 、 close ( )  が 呼び出 さ れ る まで バッファ に 蓄積 さ れ ま す 。 
バッファ に 蓄積 さ れ て い る 全て の データ に つ い て 、 直後 に ファイル 終了 記号 が 来 た 時 の よう に し て 強制 的 に 処理 し ま す 。 
この メソッド は 導出 クラス で 再 定義 し て 、 入力 の 終了 時 に 追加 の 処理 行 う よう 定義 する こと が でき ま す が 、 この メソッド の 再 定義 さ れ た バージョン で は 常 に  close ( )  を 呼び出 さ な けれ ば な り ま せ ん 。 
もっとも 最近 開 か れ た 開始 タグ の テキスト を 返 し ま す 。 
通常 、 構造 化 さ れ た データ の 処理 を する 上 で この メソッド は 必要 あ り ま せ ん が 、 ` ` 広 く 知 ら れ て い る  ( as  deployed ) ' ' HTML  を 扱 っ たり 、 入力 を 最小 限 の 変更 で 再生成  ( 属性 間 の 空白 を その まま に する 、 など )  し たり する 場合 に 便利 な こと が あ り ま す 。 
この メソッド は  start_tag ( )  か  do_tag ( ) の どちら か の メソッド が 定義 さ れ て い る 開始 タグ を 処理 する ため に 呼び出 さ れ ま す 。 
name  は 小 文字 に 変換 さ れ 、  value  内 の 二 重 引用 符 と バックス ラッシュ も 変換 さ れ ま す 。  例えば 、 タグ  A  HREF = " http:\/\/www .cwi.nl \/ "  を 処理 する 場合 、 この メソッド は " unknown_starttag ( ' a ' , [ ( 'href ' , 'http:\/\/www .cwi.nl \/') ] ) " と し て 呼び出 さ れ ま す 。 
基底 クラス の 実装 で は 、 単に  method  を 単一 の 引数  attributes  と 共 に 呼び出 し ま す 。 
この メソッド は  end_tag ( )  メソッド の 定義 さ れ て い る 終了 タグ を 処理 する ため に 呼び出 さ れ ま す 。 
tag  引数 は タグ の 名前 で 、 小 文字 に 変換 さ れ て お り 、 method  引数 は 終了 タグ の 意味 解釈 を サポート する ため に 使 わ れ る バインド さ れ た メソッド で す 。 
end_tag ( )  メソッド が 終了 エレメント と し て 定義 さ れ て い な い 場合 、 ハンドラ は 一切 呼び出 さ れ ま せ ん 。 
基底 クラス の 実装 で は 単に  method  を 呼び出 し ま す 。 
この メソッド は 何 ら か の データ を 処理 する ため に 呼び出 さ れ ま す 。 
この メソッド は  " # ref ; "  形式 の 文字 参照 ( character  reference )  を 処理 する ため に 呼び出 さ れ ま す 。 
基底 クラス の 実装 で は 、 ref  は  0 - 255  の 範囲 の  10  進数 で な けれ ば な り ま せ ん 。 
この メソッド は 文字 を  ASCII  に 変換 し 、  その 文字 を 引数 と し て  handle_data ( )  を 呼び出 し ま す 。 
ref  が 無効 な 値 か 、 範囲 を 超え た 値 で あ る 場合 、 エラー を 処理 する ため に  unknown_charref ( ref )  が 呼び出 さ れ ま す 。 
名前 づけ さ れ た 文字 エンティティ を サポート する ため に は この メソッド を サブ クラス で 上書き し な けれ ば な り ま せ ん 。 
この メソッド は  ref  を 一般 エンティティ 参照 と し て 、 " ref ; "  形式 の エンティティ 参照 を 処理 する ため に 呼び出 さ れ ま す 。 
この メソッド は 、 エンティティ 名 を 対応 する 変換 文字 に 対応 付け て い る インスタンス  ( また は クラス )  変数 で あ る  entitydefs  中 で ref  を 探 し ま す 。 
変換 が 見つか っ た 場合 、 変換 さ れ た 文字 を 引数 に し て  handle_data ( )  を 呼び出 し ま す ;  そう で な い 場合 、 unknown_entityref ( ref )  を 呼び出 し ま す 。  標準 で は  entitydefs  は amp; 、 apos 、 gt ; 、 lt ; 、 および quot ;  の 変換 を 定義 し て い ま す 。 
comment 引数 は 文字 列 で 、 " ! - " and  " - "  デリミタ 間 の 、 デリミタ 自体 を 除 い た テキスト が 収め られ て い ま す 。 
例えば 、 コメント " ! - text - "  が あ る と 、 この メソッド は 引数  ' text '  で 呼び出 さ れ ま す 。 
基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
実際 に は 、 DOCTYPE  は  HTML  だけ に 見 られ る 宣言 で す が 、 パーザ は 宣言 間 の 相違  ( や 誤 っ た 宣言 )  を 判別 し ま せ ん 。 
DOCTYPE の 内部 サブセット 宣言 は サポート さ れ て い ま せ ん 。 
decl  パラメタ は  ! . . .  記述 内 の 宣言 内容 全体 に な り ま す 。 
基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
個 の メソッド は 対応 する 開始 エレメント の な い 終了 タグ が 発見 さ れ た 時 に 呼び出 さ れ ま す 。 
未知 の 開始 タグ を 処理 する ため に 呼び出 さ れ る メソッド で す 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
This  method  is  calledto  process an unknownend tag .  未知 の 終了 タグ を 処理 する ため に 呼び出 さ れ る メソッド で す 。 
この メソッド は 解決 不能 な 文字 参照 数値 を 処理 する ため に 呼び出 さ れ ま す 。 
標準 で 何 が 処理 可能 か は  handle_charref ( )  を 参照 し て くださ い 。 
導出 クラス で 上書き する ため の メソッド で す ;  基底 クラス の 実装 で は 何 も 行 い ま せ ん 。 
未知 の エンティティ 参照 を 処理 する ため に 呼び出 さ れ る メソッド で す 。 
上 に 挙げ た メソッド を 上書き し たり 拡張 し たり する の と は 別 に 、 導出 クラス で は 以下 の 形式 の メソッド を 定義 し て 、 特定 の タグ を 処理 する こと も でき ま す 。 
入力 ストリーム 中 の タグ 名 は 大小 文字 の 区別 に 依存 し ま せ ん ;  メソッド 名 中 の  tag  は 小 文字 で な けれ ば な り ま せ ん : 
この メソッド は 開始 タグ  tag  を 処理 する ため に 呼び出 さ れ ま す 。 
do _tag ( )  より も 高 い 優先 順位 が あ り ま す 。 
attributes  引数 は 上 の  handle_starttag ( )  で 記述 さ れ て い る の と 同じ 意味 で す 。 
この メソッド は 対応 する 終了 タグ の な い 開始 タグ  tag  を 処理 する ため に 呼び出 さ れ ま す 。 
attributes  引数 は 上 の  handle_starttag ( )  で 記述 さ れ て い る の と 同じ 意味 で す 。 
この メソッド は 終了 タグ  tag  を 処理 する ため に 呼び出 さ れ ま す 。 
パーザ は 開始 さ れ た エレメント の うち 、 終了 タグ が まだ 見つか っ て い な い もの の スタック を 維持 し て い る の で 注意 し て くださ い 。 
start_tag ( )  で 処理 さ れ た タグ だけ が スタック に プッシュ さ れ ま す 。 
are  pushed onthis stack .  Definition  ofan それ ら の タグ に 対 する  end_tag ( )  メソッド の 定義 は オプション で す 。 
do _tag ( )  や unknown_tag ( ) で 処理 さ れ る タグ に つ い て は 、 end_tag ( )  を 定義 し て は いけ ま せ ん ;  定義 さ れ て い て も 使 わ れ る こと は あ り ま せ ん 。  ある タグ に 対 し て  start_tag 
および  do_tag ( )  メソッド の 両方 が 存在 する 場合 、 start_tag ( )  が 優先 さ れ ま す 。 
この モジュール は 、 
SHA - 1  は オリジナル の  SHA  ハッシュ アルゴリズム を 改善 し た バージョン で す 。  md 5 
モジュール と 同じ よう に 使用 し ま す 。 
:  sha  オブジェクト を 生成 する ため に  new( )  を 使 い 、 update ( )  メソッド を 使 っ て 、 この オブジェクト に 任意 の 文字 列 を 入力 し 、 それ まで に 入力 し た 文字 列 全体 の  digest  を いつ で も 調べ る こと が でき ま す 。 
SHA - 1  の ダイジェスト は  MD 5  の  128  bit  と は 異な り 、 160  bit  で す 。 
新た な  sha  オブジェクト を 返 し ま す 。 
もし  string  が 存在 する なら 、 update ( string )  を 呼び出 し ま す 。 
以下 の 値 は モジュール の 中 で 定数 と し て 与え られ て お り 、 new( )  で 返 さ れ る  sha  オブジェクト の 属性 と し て も 与え られ ま す : 
ハッシュ 関数 に 入力 さ れ る ブロック の サイズ 。 
この サイズ は 常 に  1  で す 。 
この サイズ は 、 任意 の 文字 列 を ハッシュ でき る よう に する ため に 使 わ れ ま す 。 
digest _ size  返 さ れ る ダイジェスト 値 を バイト 数 で 表 し た 長 さ 。 
常 に  20  で す 。 
sha  オブジェクト に は  md 5  オブジェクト と 同じ メソッド が あ り ま す 。 
文字 列  arg  を 入力 と し て  sha  オブジェクト を 更新 し ま す 。 
この メソッド を 繰り返 し 呼び出 す ( 操作 は 、 それぞれ の 呼び出 し 時 の 引数 を 結合 し た データ を 引数 と し て 一 回 の 呼び出 す 操作 と 同等 に な り ま す 。 
つまり 、 m . update ( a ) ; m . update( b )  は m . update ( a + b )  と 同等 で す 。 
これ まで  update ( )  メソッド  で 与え て き た 文字 列 の ダイジェスト を 返 し ま す 。 
戻 り 値 は  20  バイト の 文字 列 で 、 null バイト を 含 む 非  ASCII  文字 が 入 っ て い る か も しれ ま せ ん 。 
digits ( )  と 似 て い ま す が 、 ダイジェスト は 長 さ 40 の 文字 列 に な り 、 16 進 表記 数字 しか 含 み ま せ ん 。 
電子 メール や その 他 の バイナリ を 受け付け な い 環境 で 安全 に 値 を やりとり する ため に 使 う こと が でき ま す 。 
sha  オブジェクト の コピー ( `` クローン ' ' ) を 返 し ま す 。 
参考 :  セキュア ハッシュ スタンダード 
セキュア ハッシュ アルゴリズム は  NIST  の ドキュメント  FIPS  PUB  180 - 2  で 定義 さ れ て い ま す 。 
セキュア ハッシュ スタンダード 
, 2002 年 8 月 出版 。 
暗号 ツール キット  ( セキュア ハッシュ ) 
NIST から は られ て い る セキュア ハッシュ に 関 する さまざま な 情報 へ の リンク 
` ` シェルフ  ( shelf ,  棚 ) ' ' は 辞書 に 似 た 永続 性 を 持 つ オブジェクト で す 。 
`` dbm' '  データベース と の 違い は 、 シェルフ の 値  ( キー で は あ り ま せ ん ! ) は 実質 上 どんな  Python  オブジェクト に も --
モジュール が 扱え る なら 何 で も -- でき る と い う こと で す 。 
これ に は ほとんど の クラス インスタンス 、 再帰 的 な データ 型 、 沢山 の 共有 さ れ た サブ オブジェクト を 含 む オブジェクト が 含 ま れ ま す 。 
キー は 通常 の 文字 列 で す 。 
永続 的 な 辞書 を 開 き ま す 。 
指定 さ れ た  filename  は 、 根底 に あ る データベース の 基本 ファイル 名 と な り ま す 。 
副 作用 と し て 、 filename に は 拡張 子 が つけ られ る 場合 が あ り 、 ひと つ 以上 の ファイル が 生成 さ れ る 可能 性 も あ り ま す 。 
デフォルト で は 、 根底 に あ る データベース ファイル は 読み書き 可能 な よう に 開 か れ ま す 。 
オプション の  flag  パラメタ は anydbm . open  に お け る  flag  パラメタ と 同様 に 解釈 さ れ ま す 。 
デフォルト で は 、 値 を 整列 化 する 際 に は バージョン  0  の  pickle  化 が 用い られ ま す 。 
pickle  化 プロトコル の バージョン は  protocol パラメタ で 指定 する こと が でき ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : protocol パラメタ が 追加 さ れ ま し た 。 
binary  パラメタ は 撤廃 さ れ 、 以前 の バージョン と の 互換 性 の ため に のみ 提供 さ れ て い ま す 
デフォルト で は 、 永続 的 な 辞書 の 可変 エントリ に 対 する 変更 を おこな っ て も 、 自動 的 に ファイル に は 書き 戻 さ れ ま せ ん 。 
オプション の  writeback パラメタ が  True  に 設定 さ れ て い れ ば 、 アクセス さ れ た すべて の エントリ は メモリ 上 に キャッシュ さ れ 、 ファイル を 閉じ る 際 に 書 き 戻 さ れ ま す ; この 機能 は 永続 的 な 辞書 上 の 可変 の 要素 に 対 する 変更 を 容易 に し ま す が 、 多数 の エントリ が アクセス さ れ た 場合 、 膨大 な 量 の メモリ が キャッシュ の ため に 消費 さ れ 、 アクセス さ れ た 全て の エントリ を 書 き 戻 す  ( アクセス さ れ た エントリ が 可変 で あ る か 、 あるいは 実際 に 変更 さ れ た か を 決定 する 方法 は 存在 し な い の で す )  ため に 、 ファイル を 閉じ る 操作 を 非常 に 低速 に し て しま い ま す 。 
shelve  オブジェクト は 辞書 が サポート する 全て の メソッド を サポート し て い ま す 。 
これ に よ り 、 辞書 ベース の スクリプト から 永続 的 な 記憶 媒体 を 必要 と する スクリプト に 容易 に 移行 でき る よう に な り ま す 。 
3 . 17 . 1  制限 事項 
5 . 2 0 . 2  shlex  オブジェクト 
5 . 2 0 . 1  モジュール の 内容 
shutil モジュール は ファイル や ファイル の 収集 に 関 する 多く の 高 レベル な 操作 方法 を 提供 し ま す 。 
特に ファイル の コピー や 削除 の ため の 関数 が 用意 さ れ て い ま す 。 
注意 :  MacOS に お い て は リソース フォーク や 他 の メタデータ は 取り扱 う こと が でき ま せ ん 。 
つまり 、 ファイル を コピー する 際 に これ ら の リソース は 失 わ れ たり 、 ファイル タイプ や 作成 者 コード は 正し く 認識 さ れ な い こと を 意味 し ま す 。 
src で 指定 さ れ た ファイル 内容 を dst で 指定 さ れ た ファイル へ と コピー し ま す 。 
キャラクタ や ブロック デバイス 、 パイプ 等 の 特別 な ファイル は この 関数 で は コピー でき ま せ ん 。  src と dst に は パス 名 を 文字 列 で 与え られ ま す 。 
ファイル 形式 の オブジェクト fsrc の 内容 を fdst へ コピー し ま す 。 
整数 値 length は バッファ サイズ を 表 し ま す 。 
特に 負 の length は チャンク 内 の ソース データ を 繰り返 し 操作 する こと な く コピー し ま す 。  つまり 標準 で は データ は 制御 不能 な メモリ 消費 を 避け る ため に チャンク 内 に 読み込 ま れ ま す 。 
src から dst へ パー ミッション を コピー し ま す 。 
ファイル 内容 や 所有 者 、 グループ は 影響 を 受け ま せ ん 。  src と dst に は 文字 列 と し て パス 名 を 与え られ ま す 。 
src から dst へ パー ミッション 最終 アクセス 時間 、 最終 更新 時間 を コピー し ま す 。 
ファイル 内容 や 所有 者 、 グループ は 影響 を 受け ま せ ん 。  src と dst に は 文字 列 と し て パス 名 を 与え られ ま す 。 
ファイル src を ファイル また は ディレクトリ dist へ コピー し ま す 。 
もし 、 dst が ディレクトリ で あ れ ば ファイル 名 は src と 同じ もの が 指定 さ れ た ディレクトリ 内 に 作成 ( また は 上書き ) さ れ ま す 。  パー ミッション は コピー さ れ ま す 。 
src と dst に は 文字 列 と し て パス 名 を 与え られ ま す 。 
copy ( ) と 類似 し て い ま す が 、 最終 アクセス 時間 や 最終 更新 時間 も 同様 に コピー さ れ ま す 。 
これ は  Unix  コマンド の  cp  - p と 同様 の 働き を し ま す 。 
src を 起点 と し て ディレクトリ ツリー 全体 を 再帰 的 に コピー し ま す 。 
dst で 指定 さ れ た ディレクトリ は 既存 の もの で は な く 新規 に 作成 さ れ る もの で な く て は な り ま せ ん 。 
個々 の ファイル は copy 2 ( ) に よ っ て コピー さ れ ま す 。 
この 関数 の ソース コード は 道具 と し て より も 使用 例 と し て 捉え られ る べ き で しょ う 。  バージョン  2 . 3  で  変更  さ れ た 仕様 : コピー 中 に エラー が 発生 し た 場合 、 メッセージ を 出力 する の で は な く 例外 を 引き起こ す よう に 変更 。 
ディレクトリ ツリー 全体 を 削除 し ま す 。 
もし ignore_errors が 真 で あ れ ば 削除 に 失敗 し た こと に よ る エラー は 無視 さ れ 、 偽 が 与え られ たり 省略 さ れ た 場合 は これ ら の エラー は onerror で 与え られ た ハンドラ を 呼び出 し て 処理 さ れ 、 これ が 省略 さ れ た 場合 は 例外 を 引き起こ し ま す 。  onerror が 与え られ た 場合 、 それ は 3 つ の パラメータ function , path および excinfo を 受け入れ て 呼び出し 可能 の もの で な く て は な り ま せ ん 。 
最初 の パラメータ function は 例外 を 引き起こ す 関数 で os . listdir ( ) 、 os . remove ( ) また は os . rmdir ( ) が 用い られ る で しょ う 。 
二番 目 の パラメータ は path は function へ 渡 ら せ る パス 名 で す 。 
三 番 目 の パラメータ excinfo は sys . exc _ info ( ) で 返 さ れ る よう な 例外 情報 に な る で しょ う 。 
onerror が 引き起こ す 例外 は キャッチ でき ま せ ん 。 
再帰 的 に ファイル や ディレクトリ を 別 の 場所 へ 移動 し ま す 。 
もし 移動 先 が 現在 の ファイル システム 上 で あ れ ば 単純 に 名前 を 変更 し ま す 。  そう で な い 場合 は コピー を 行 い 、 その 後 コピー 元 は 削除 さ れ ま す 。 
この 例外 は 複数 ファイル の 操作 を 行 っ て い る とき に 生じ る 例外 を まとめ た もの で す 。 
copytree に 対 し て は 例外 の 引数 は 3 つ の タプル ( srcname , dstname ,  exception ) から な る リスト で す 。 
6 . 2 6 . 1  使用 例 
この モジュール で は  Python  で シグナル ハンドラ を 使 う ため の 機構 を 提供 し ま す 。 
クリティカル セクション から 一時 的 に シグナル を ` ` ブロック ' ' する こと は でき ま せ ん 。  この 機能 を サポート し な い Unix 系 システム も 存在 する ため で す 。 
Python  の シグナル ハンドラ は  Python  の ユーザ が 望 む 限り 非 同期 で 呼び出 さ れ ま す が 、 呼び出 さ れ る の は  Python  インタプリタ の  ` ` 原子 的 な  ( atomic ) ' ' 命令 実行 単位 の 間 で す 。 
従 っ て 、 ( 巨大 な サイズ の テキスト に 対 する 正規 表現 の 一致 検索 の よう な )  純粋 に  C  言語 の レベル で 実現 さ れ て い る 時間 の かか る 処理 中 に 到着 し た シグナル は 、 不 定 期間 遅延 する 可能 性 が あ り ま す 。 
シグナル が  I \/ O  操作 中 に 到着 する と 、 シグナル ハンドラ が 処理 を 返 し た 後 に  I \/ O  操作 が 例外 を 送出 する 可能 性 が あ り ま す 。  これ は 背後 に あ る  Unix  システム が 割り込み システム コール に どう い う 意味 付け を し て い る か に 依存 し ま す 。 
C  言語 の シグナル ハンドラ は 常 に 処理 を 返 す の で 、 SIG FPE や  SIGSEGV  の よう な 同期 エラー の 捕捉 は ほとんど 意味 が あ り ま せ ん 。 
Python  は 標準 で ごく 小数 の シグナル ハンドラ を インストール し て い ま す : SIGPIPE  は 無視 さ れ ま す  ( 従 っ て 、 パイプ や ソケット に 対 する 書き込み で 生 じ た エラー は 通常 の  Python  例外 と し て 報告 さ れ ま す ) SIGINT は KeyboardInterrupt  例外 に 変換 さ れ ま す 。 
これ ら は どれ も 上書き する こと が でき ま す 。 
シグナル と スレッド の 両方 を 同じ プログラム で 使用 する 場合 に は いく つ か 注意 が 必要 で す 。 
シグナル と スレッド を 同時 に 利用 する 上 で 基本 的 に 注意 す べ き こと は :  常 に  signal ( )  命令 は 主 スレッド  (main thread ) の 処理 中 で 実行 する と い う こと で す 。 
どの スレッド も  alarm ( ) 、 getsignal ( ) 、 あるいは  pause ( )  を 実行 する こと が でき ま す ;  しかし 、 主 スレッド だけ が 新た な シグナル ハンドラ を 設定 する こと が でき 、 従 っ て シグナル を 受け取 る こと が でき る の は 主 スレッド だけ で す  ( これ は 、 背後 の スレッド 実装 が 個々 の スレッド に 対 する シグナル 送信 を サポート し て い る か に 関わ ら ず 、 Python  signal  モジュール が 強制 し て い る 仕様 で す ) 。 
従 っ て 、 シグナル を スレッド 間 通信 の 手段 と し て 使 う こと は でき ま せ ん 。 
代わり に ロック 機構 を 使 っ て くださ い 。 
以下 に  signal  モジュール で 定義 さ れ て い る 変数 を 示 し ま す : 
二 つ あ る 標準 シグナル 処理 オプション の うち の 一 つ で す ;  単に シグナル に 対 する 標準 の 関数 を 実行 し ま す 。 
例えば 、 ほとんど の システム で は 、 SIGQUIT  に 対 する 標準 の 動作 は コア ダンプ と 終了 で 、 SIGCLD  に 対 する 標準 の 動作 は 単に シグナル の 無視 で す 。 
もう 一 つ の 標準 シグナル 処理 オプション で 、 単に 受け取 っ た シグナル を 無視 し ま す 。 
全て の シグナル 番号 は シンボル 定義 さ れ て い ま す 。 
例えば 、 ハング アップ シグナル は  signal . SIGHUP  で 定義 さ れ て い ま す ;  変数 名 は C  言語 の プログラム で 使 わ れ て い る の と 同じ 名前 で 、 signal . h に あ り ま す 。 ` signal ( ) ' に 関 する  Unix  マニュアル ページ で は 、 システム で 定義 さ れ て い る シグナル を 列挙 し て い ま す ( ある システム で は リスト は 
signal ( 2 )  に 、 別 の システム で は 
signal ( 7 )  に 列挙 さ れ て い ま す ) 。  全て の システム で 同じ シグナル 名 の セット を 定義 し て い る わけ で は な い の で 注意 し て くださ い ;  この モジュール で は 、 システム で 定義 さ れ て い る シグナル 名 だけ を 定義 し て い ま す 。 
最も 大き い シグナル 番号 に  1  を 足 し た 値 で す 。 
signal  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
time が ゼロ で な い 値 の 場合 、 この 関数 は  time 秒 後 頃 に SIGALRM  を プロセス に 送 る よう に 要求 し ま す 。  それ 以前 に スケジュール し た アラーム は キャンセル さ れ ま す  ( 常 に 一 つ の アラーム しか スケジュール でき ま せ ん ) 。 
この 場合 、 戻 り 値 は 以前 に 設定 さ れ た アラーム シグナル が 通知 さ れ る まで あと 何 秒 だっ た か を 示 す 値 で す 。 time が ゼロ の 場合 、 アラーム は 一切 スケジュール さ れ ず 、 現在 スケジュール さ れ て い る アラーム が キャンセル さ れ ま す 。 
戻 り 値 は 以前 に スケジュール さ れ た アラーム が 通知 さ れ る 予定 時刻 まで の 残り 時間 で す 。 
戻 り 値 が ゼロ の 場合 、 現在 アラーム が スケジュール さ れ て い な い こと を 示 し ま す 。 
( Unix  マニュアル ページ 
alarm ( 2 ) を 参照 し て くださ い ) 。  利用 可能 : Unix 。 
シグナル  signalnum  に 対 する 現在 の シグナル ハンドラ を 返 し ま す 。  戻 り 値 は 呼び出し 可能 な  Python  オブジェクト か 、 signal . SIG _ IGN 、 signal . SIG _ DFL 、 および  None  と い っ た 特殊 な 値 の いずれ か で す 。 
ここ で  signal . SIG _ IGN  は 以前 その シグナル が 無視 さ れ て い た こと を 示 し 、 signal . SIG _ DFL  は 以前 その シグナル の 標準 の 処理 方法 が 使 わ れ て い た こと を 示 し 、 None  は シグナル ハンドラ が まだ  Python  に よ っ て インストール さ れ て い な い こと を 示 し ま す 。 
シグナル を 受け取 る まで プロセス を 一時 停止 し ま す ;  その 後 、 適切 な ハンドラ が 呼び出 さ れ ま す 。 
戻 り 値 は あ り ま せ ん 。 
Windows  で は 利用 でき ま せ ん 。 
signal ( 2 )  を 参照 し て くださ い 。  ) 
シグナル  signalnum  に 対 する ハンドラ を 関数  handler  に し ま す 。  handler  は 二 つ の 引数  ( 下記 参照 )  を 取 る 呼び出し 可能 な  Python  オブジェクト に する か 、 signal . SIG _ IGN  あるいは signal . SIG _ DFL  と い っ た 特殊 な 値 に する こと が でき ま す 。 
以前 に 使 わ れ て い た シグナル ハンドラ が 返 さ れ ま す ( 上記 の  getsignal ( )  の 記述 を 参照 し て くださ い ) 。 
( Unix  マニュアル ページ  signal ( 2 )  を 参照 し て くださ い 。 
) 複数 スレッド の 使用 が 有効 な 場合 、 この 関数 は 主 スレッド から のみ 呼び出 す こと が でき ま す ;  主 スレッド 以外 の スレッド で 呼び出 そ う と する と 、 例外 ValueError  が 送出 さ れ ま す 。  handler  は 二 つ の 引数 :  シグナル 番号 、 および 現在 の スタック フレーム ( None  また は フレーム オブジェクト ;  フレーム オブジェクト に つ い て の 記述 は リファレンス マニュアル の 標準 型 の 階層  か 、 
モジュール の 属性 の 説明 を 参照 し て くださ い ) 、 と とも に 呼び出 さ れ ま す 。 
前部 と 後部 から な る 最大 で 四 つ まで の ディレクトリ を 作成 する こと から 始め ま す 。 
前部 に は 、 sys . prefix と sys . exec _prefix を 使用 し ま す 。 
空 の 前部 は 省略 さ れ ま す 。 
後部 に は 、 ( Macintosh や Windows で は ) 空 文字 列 を 使用 し 、 ( Unix で は ) 最初 に lib\/python 2 . 4 \/ site - packages を 使 っ て から lib\/ site - python を 使 い ま す 。 
別個 の 前部 - 後部 の 組み合わせ の それぞれ に 対 し て 、 それ が 存在 する ディレクトリ を 参照 し て い る か どう か を 調べ 、 もし そう なら ば sys . path へ 追加 し ま す 。 
そして 、 設定 ファイル を 新し く 追加 さ れ た パス から も 検索 し ま す 。 
パス 設定 ファイル は  package . pth と い う 形式 の 名前 を も つ ファイル で 、 上 の 4 つ の ディレクトリ の ひと つ に あ り ま す 。 
その 内容 は sys . path に 追加 さ れ る 追加 項目 ( 一行 に 一 つ ) で す 。 
存在 し な い 項目 は sys . path へ は 決して 追加 さ れ ま せ ん が 、 項目 が ( ファイル で は な く ) ディレクトリ を 参照 し て い る か どう か は チェック さ れ ま せ ん 。 
項目 が sys . path へ 二 回 以上 追加 さ れ る こと は あ り ま せ ん 。 
空行 と # で 始ま る 行 は 読み飛ば さ れ ま す 。 
import で 始ま る 行 は 実行 さ れ ま す 。 
例えば 、 sys . prefix と sys . exec _prefix が \/ usr\/ local に 設定 さ れ て い る と 仮定 し ま す 。 
その とき Python  2 . 4  ライブラリ は \/ usr\/ local \/ lib\/python 2 . 4 に インストール さ れ て い ま す ( ここ で 、 sys . version の 最初 の 三 文字 だけ が インストール パス 名 を 作 る ため に 使 わ れ ま す ) 。 
ここ に は サブ ディレクトリ \/ usr\/ local \/ lib\/python 2 . 4 \/ site - packages が あ り 、 その 中 に 三 つ の サブ ディレクトリ foo、 bar および spam と 二 つ の パス 設定 ファイル foo . pth と bar . pth を も つ と 仮定 し ま す 。 
foo . pth に は 以下 の もの が 記載 さ れ て い る と 想定 し て くださ い : 
また 、 bar . pth に は : 
と い う 名前 の モジュール を インポート し よう し ま す 。  その モジュール は 任意 の サイト 固有 の カスタマイゼーション を 行 う こと が でき ま す 。 
の インポート は その とき で も 試み られ ま す 。 
この モジュール で は 、  SMTP  サーバ を 実装 する ため の クラス を いく つ か 提供 し て い ま す 。 
一 つ は 何 も 行 わ な い 、 オーバライド でき る 汎用 の サーバ で 、 その 他 の 二 つ で は 特定 の メール 送信 ストラテジ を 提供 し て い ま す 。 
smtplib モジュール は 、 SMTP また は ESMTP の リスナー デーモン を 備え た 任意 の インターネット 上 の ホスト に メイル を 送 る ため に 使用 する こと が でき る SMTP クライアント ・ セッション ・ オブジェクト を 定義 し ま す 。 
SMTP および ESMTP オペレーション の 詳細 は 、 RFC  821  ( Simple Mail  Transfer  Protocol )  や  RFC  18 6 9 ( SMTP  Service  Extensions ) を 調べ て くださ い 。 
クラス SMTP 
SMTP インスタンス は SMTP コネクション を カプセル 化 し 、 SMTP と ESMTP の 命令 を サポート を し ま す 。 
オプション で あ る host と port を 与え た 場合 は 、 SMTP クラス の インスタンス が 作成 さ れ る と 同時 に 、 connect ( ) メソッド を 呼び出 し 初期 化 さ れ ま す 。 
また 、 ホスト から 応答 が 無 い 場合 は 、 SMTP ConnectError が 上げ られ ま す 。  普通 に 使 う 場合 は 、 初期 化 と 接続 を 行 っ て から 、 sendmail ( ) と quit ( ) メソッド を 呼 び ま す 。 
使用 例 は 先 の 方 で 記載 し て い ま す 。 
この モジュール の 例外 に は 次 の もの が あ り ま す : 
この モジュール の 例外 クラス の ベース クラス で す 。 
この 例外 は サーバ が 突然 コネクション を 切断 する か 、 もしくは SMTP インスタンス を 生成 する 前 に コネクション を 張 ろ う と し た 場合 に 上げ られ ま す 。 
SMTP の エラー コード を 含 ん だ 例外 の クラス で す 。  これ ら の 例外 は SMTP サーバ が エラー コード を 返 す とき に 生成 さ れ ま す 。 
エラー コード は smtp_code 属性 に 格納 さ れ ま す 。  また 、 smtp _error 属性 に は エラー メッセージ が 格納 さ れ ま す 。 
送信 者 の アドレス が 弾 か れ た とき に 上げ られ る 例外 で す 。 
全て の SMTPResponseException 例外 に 、 SMTP サーバ が 弾 い た ` sen der ' アドレス の 文字 列 が セット さ れ ま す 。 
全て の 受取 人 アドレス が 弾 か れ た とき に 上げ られ る 例外 で す 。 
各 受取 人 の エラー は 属性 recipients に よ っ て アクセス 可能 で 、 SMTP . sendmail ( ) が 返 す 辞書 と 同じ 並び の 辞書 に な っ て い ま す 。 
SMTP サーバ が 、 メッセージ の データ を 受け入れ る こと を 拒絶 し た 時 に 上げ られ る 例外 で す 。 
サーバ へ の 接続 時 に エラー が  発生 し た 時 に 上げ られ る 例外 で す 。 
サーバー が " HELO " メッセージ を 弾 い た 時 に 上げ られ る 例外 で す 。 
SMTP  の プロトコル 定義 で す 。 
この ドキュメント で は  SMTP  の モデル 、 操作 手順 、 プロトコル の 詳細 に つ い て カバー し て い ま す 。 
SMTP  に 対 する  ESMTP  拡張 の 定義 で す 。 
この ドキュメント で は 、 新た な 命令 に よ る  SMTP  の 拡張 、 サーバ に よ っ て 提供 さ れ る 命令 を 動的 に 発見 する 機能 の サポート 、 および いく つ か の 追加 命令 定義 に つ い て 記述 し て い ま す 。 
sndhdr モジュール に は 、 ファイル に 保存 さ れ た サウンド データ の 形式 を 識別 する の に 便利 な 関数 が 定義 さ れ て い ま す 。 
どんな 形式 の サウンド データ が ファイル に 保存 さ れ て い る の か 識別 可能 な 場合 、 これ ら の 関数 は ( type 、 sampling _ rate 、 channels 、 frames、 bits_per_ sample ) の タプル を 返 し ま す 。 
type は データ の 形式 を 示 す 文字 列 で 、 'aifc' 、 'aiff ' 、 'au ' 、 'hcom' 、 'sndr' 、 'sndt' 、 'voc' 、 ' wav ' 、 ' 8 svx' 、 'sb ' 、 'ub' 、 'ul ' の うち の 一 つ で す 。 
sampling _ rate は 実際 の サンプリングレート 値 で 、 未知 の 場合 や 読み取 る こと が 出来 な かっ た 場合 は 0 で す 。 
同様 に 、 channels は チャンネル 数 で 、 識別 でき な い 場合 や 読み取 る こと が 出来 な かっ た 場合 は 0 で す 。 
frames は フレーム 数 で 、 識別 でき な い 場合 は - 1 で す 。 
タプル の 最後 の 要素 bits_per_ sample は サンプル サイズ を 示 す ビット 数 で す が 、 A - LAW
なら ' A '、 u - LAW
なら ' U ' で す 。 
whathdr ( ) を 使 っ て 、 ファイル filename に 保存 さ れ た サウンド データ の 形式 を 識別 し ま す 。 
識別 可能 なら 上記 の タプル を 返 し 、 識別 でき な い 場合 は None を 返 し ま す  。 
ファイル の ヘッダ 情報 を もと に 、 保存 さ れ た サウンド データ の 形式 を 識別 し ま す 。 
ファイル 名 は filename で 渡 さ れ ま す 。 
識別 可能 なら 上記 の タプル を 返 し 、 識別 でき な い 場合 は None を 返 し ま す 。 
Unix  Programmer's  Manual , Supplementary  Documents  1 ( PS 1 : 7 章  PS 1 : 8 章 ) 。 
ソケット の 詳細 に つ い て は 、 各 プラットフォーム の ソケット 関連 システム コール に 関 する ドキュメント ( Unix で は  マニュアル ページ 、 Windows で は WinSock ( また は WinSock 2 ) 仕様 書 ) も 参照 し て くださ い 。 
各種 ソケット 関連 の システム コール は 、 socket ( ) 関数 で 生成 する ソケット  オブジェクト  の メソッド と し て 実装 さ れ て い ま す 。 
後方 互換 性 の ため 、 socket モジュール の メソッド で は sin 6 _ flowinfo と sin 6 _scope _ id を 省略 する 事 が でき ま す が 、 scopeid を 省略 する と スコープ を 持 っ た IPv 6 アドレス の 処理 で 問題 が 発生 する 場合 が あ り ま す 。 
IPv 4 \/v 6 ソケット の host 部 に ホスト 名 を 指定 する と 、 処理 結果 が 一定 で は な い 場合 が あ り ま す 。  これ は Python は DNS から 取得 し た アドレス の うち 最初 の アドレス を 使用 する の で 、 DNS の 処理 や ホスト の 設定 に よ っ て 異な る IPv 4 \/ 6 アドレス を 取得 する 場合 が あ る ため で す 。 
常 に 同じ 結果 が 必要 で あ れ ば 、 host に 数値 の アドレス を 指定 し て くださ い 。  エラー 時 に は 例外 が 発生 し ま す 。 
socket モジュール で は 、 以下 の 定数 と 関数 を 提供 し て い ま す 。 
この 例外 は 、 ソケット 関連 の エラー が 発生 し た 場合 に 送出 さ れ ま す 。  例外 の 値 は 障害 の 内容 を 示 す 文字 列 か 、 また は os . error と 同様 な ( errno ,  string ) の ペア と な り ま す 。 
オペレーティング システム で 定義 さ れ て い る エラー コード に つ い て は 
を 参照 し て くださ い 。 
この 例外 は 、 C  API の gethostbyname _ex ( ) や gethostbyaddr ( ) など で 、 h_errno の よう な アドレス 関連 の エラー が 発生 し た 場合 に 送出 さ れ ま す 。  例外 の 値 は ( h_errno ,  string ) の ペア で 、 ライブラリ の 呼び出 し 結果 を 返 し ま す 。 
string は C 関数 hstrerror ( ) で 取得 し た 、 h_errno の 意味 を 示 す 文字 列 で す 。 
error の 値 は 、 この モジュール で 定義 さ れ る  EAI_*  定数 の 何れ か と な り ま す 。 
この 例外 は 、 あらかじめ  settimeout ( )  を 呼び出 し て タイム アウト を 有効 に し て あ る ソケット で タイム アウト が 生 じ た 際 に 送出 さ れ ま す 。 
例外 に 付属 する 値 は 文字 列 で 、 その 内容 は 現状 で は 常 に ``timed out ' ' と な り ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
アドレス ( および プロトコル ) ファミリ を 示 す 定数 で 、 socket ( ) の 最初 の 引数 に 指定 する こと が でき ま す 。 
AF _ UNIX ファミリ を サポート し な い プラットフォーム で は 、 AF _ UNIX は 未 定義 と な り ま す 。 
ソケット タイプ を 示 す 定数 で 、 socket ( ) の 2 番 目 の 引数 に 指定 する こと が でき ま す 。 
Unix の ソケット ・ IP プロトコル の ドキュメント で 定義 さ れ て い る 各種 定数 。  ソケット オブジェクト の setsockopt ( ) や getsockopt ( ) で 使用 し ま す 。 
ほとんど の シンボル は Unix の ヘッダ ファイル に 従 っ て い ま す 。  一部 の シンボル に は 、 デフォルト 値 を 定義 し て あ り ま す 。 
現在 の プラットフォーム で IPv 6 が サポート さ れ て い る か 否 か を 示 す 真偽 値 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
host と port  に 空 文字 列 か None  を 指定 する と  C  API に NULL を 渡せ ま す 。 
getattrinfo ( )  関数 は 以下 の 構造 を と る  5  要素 の タプル を 返 し ま す : 
モジュール など の ソース を 参考 に し て くださ い 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
name の 完全 修飾 ドメイン 名 を 返 し ま す 。 
name が 空 また は 省略 さ れ た 場合 、 ローカル ホスト を 指定 し た と みな し ま す 。 
完全 修飾 ドメイン 名 の 取得 に は まず gethostbyaddr ( ) で チェック し 、 次 に 可能 で あ れ ば エイリアス を 調べ 、 名前 に ピリオド を 含 む 最初 の 名前 を 値 と し て 返 し ま す 。 
完全 修飾 ドメイン 名 を 取得 でき な い 場合 、 ホスト 名 を 返 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
ホスト 名 を ' 100 . 50 . 200 . 5 ' の よう な IPv 4 形式 の アドレス に 変換 し ま す 。 
ホスト 名 と し て IPv 4 アドレス を 指定 し た 場合 、 その 値 は 変換 せ ず に その まま 返 り ま す 。 
Python インタープリタ を 現在 実行 中 の マシン の ホスト 名 を 示 す 文字 列 を 取得 し ま す 。 
ソケット アドレス sockaddr から 、 ( host ,  port ) の タプル を 取得 し ま す 。  flags の 設定 に 従 い 、 host は 完全 修飾 ドメイン 名 また は 数値 形式 アドレス と な り ま す 。 
同様 に 、 port は 文字 列 の ポート 名 また は 数値 の ポート 番号 と な り ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
'icmp ' の よう な インターネット プロトコル 名 を 、 socket ( ) の 第 三 引数 と し て 指定 する 事 が でき る 定数 に 変換 し ま す 。 
これ は 主に ソケット を ` ` raw ' ' モード ( SOCK _ RAW ) で オープン する 場合 に は 必要 で す が 、 通常 の ソケット モード で は 第 三 引数 に 0 を 指定 する か 省略 すれ ば 正し い プロトコル が 自動 的 に 選択 さ れ ま す 。 
インターネット サービス 名 と プロトコル から 、 その サービス の ポート 番号 を 取得 し ま す 。 
省略 可能 な プロトコル 名 と し て 、 'tcp ' か 'udp ' の どちら か を 指定 する こと が でき ま す 。  指定 が な けれ ば どちら の プロトコル に も マッチ し ま す 。 
インターネット ポート 番号 と プロトコル 名 から 、 サービス 名 を 取得 し ま す 。 
アドレス ファミリ 、 ソケット タイプ 、 プロトコル 番号 を 指定 し て ソケット を 作成 し ま す 。 
アドレス ファミリ に は AF _INET ( デフォルト 値 ) ・ AF_INET 6 ・ AF _ UNIX を 指定 する こと が でき ま す 。 
ソケット タイプ に は SOCK_ STREAM ( デフォルト 値 ) ・ SOCK _ DG RAM ・ また は 他 の " SOCK _ " 定数 の 何れ か を 指定 し ま す 。 
プロトコル 番号 は 通常 省略 する か 、 また は 0 を 指定 し ま す 。 
ソケット sock に よ る SSL 接続 を 初期 化 し ま す 。 
keyfile に は 、 PEM フォーマット の プライベート キー ファイル 名 を 指定 し ま す 。 certfile に は 、 PEM フォーマット の 認証 チェーン ファイル 名 を 指定 し ま す 。 
処理 が 成功 する と 、 新し い SSLObject が 返 り ま す 。 
警告 : 証明 書 の 認証 は 全く 行 い ま せ ん 。 
指定 さ れ た アドレス ファミリ 、 ソケット タイプ 、 プロトコル 番号 から 、 接続 さ れ た ソケット の ペア を 作成 し ま す 。 
アドレス ファミリ 、 ソケット タイプ 、 プロトコル 番号 は  socket ( ) 関数 と 同様 に 指定 し ま す 。  デフォルト の アドレス ファミリ は 、 プラットフォーム で 定義 さ れ て い れ ば AF _ UNIX 、 そう で な けれ ば AF _INET が 使 わ れ ま す 。 
利用 可能 : Unix .  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
既存 の ファイル ディスク リプタ ( ファイル オブジェクト の fileno ( ) で 返 る 整数 ) から 、 ソケット オブジェクト を 構築 し ま す 。 
アドレス ファミリ と プロトコル 番号 は socket ( ) と 同様 に 指定 し ま す 。 
ファイル ディスク リプタ は ソケット を 指 し て い な けれ ば な り ま せ ん が 、 実際 に ソケット で あ る か どう か の チェック は 行 っ て い ま せ ん 。  この ため 、 ソケット 以外 の ファイル ディスク リプタ を 指定 する と その 後 の 処理 が 失敗 する 場合 が あ り ま す 。 
この 関数 が 必要 な 事 は あまり あ り ま せ ん が 、 Unix の inet デーモン の よう に ソケット を 標準 入力 や 標準 出力 と し て 使用 する プログラム で 使 わ れ ま す 。 
この 関数 で 使用 する ソケット は 、 ブロッキング モード と 想定 し て い ま す 。  利用 可能 : Unix 
32 ビット 整数 の バイト オーダ を 、 ネットワーク バイト オーダ から ホスト バイト オーダ に 変換 し ま す 。 
ホスト バイト オーダ と ネットワーク バイト オーダ が 一致 する マシン で は 、 この 関数 は 何 も し ま せ ん 。  それ 以外 の 場合 は 4 バイト の スワップ を 行 い ま す 。 
16 ビット 整数 の バイト オーダ を 、 ネットワーク バイト オーダ から ホスト バイト オーダ に 変換 し ま す 。 
ホスト バイト オーダ と ネットワーク バイト オーダ が 一致 する マシン で は 、 この 関数 は 何 も し ま せ ん 。  それ 以外 の 場合 は 2 バイト の スワップ を 行 い ま す 。 
32 ビット 整数 の バイト オーダ を 、 ホスト バイト オーダ から ネットワーク バイト オーダ に 変換 し ま す 。 
16 ビット 整数 の バイト オーダ を 、 ホスト バイト オーダ から ネットワーク バイト オーダ に 変換 し ま す 。 
ドット 記法 に よ る IPv 4 アドレス ( ' 123 . 45 . 6 7 . 89 ' など ) を 32 ビット に パック し た バイナリ 形式 に 変換 し 、 長 さ 4 の 文字 列 と し て 返 し ま す 。 
この 関数 が 返 す 値 は 、 標準 C ライブラリ の struct  in_addr 型 を 使用 する 関数 に 渡 す 事 が でき ま す 。 
IPv 4 アドレス 文字 列 が 不正 で あ れ ば 、 socket . error が 発生 し ま す 。 
この チェック は 、 この 関数 で 使用 し て い る C の 実装  inet_aton ( ) で 行 わ れ ま す 。  inet_aton ( ) は 、 IPv 6 を サポート し ま せ ん 。 
IPv 4 \/v 6 の デュアル スタック を サポート する 場合 は getnameinfo ( ) を 使用 し ま す 。  inet_ntoa
32 ビット に パック し た バイナリ 形式 の IPv 4 アドレス を 、 ドット 記法 に よ る 文字 列 ( ' 123 . 45 . 6 7 . 89 ' など ) に 変換 し ま す 。 
この 関数 が 返 す 値 は 、 標準 C ライブラリ の struct  in_addr 型 を 使用 する 関数 に 渡 す 事 が でき ま す 。  この 関数 に 渡 す 文字 列 の 長 さ が 4 バイト 以外 で あ れ ば 、 socket . error が 発生 し ま す 。 
inet_ntoa ( ) は 、 IPv 6 を サポート し ま せ ん 。 
IPv 4 \/v 6 の デュアル スタック を サポート する 場合 は getnameinfo ( ) を 使用 し ま す 。  inet_pton 
利用 可能 : Unix  ( サポート し て い な い プラットフォーム も あ り ま す ) バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
パック し た IP アドレス ( 数 文字 の 文字 列 ) を 、 ' 7 . 10 . 0 . 5 ' や ' 5 aef : 2b : : 8 ' など の 標準 的 な 、 アドレス ファミリ 固有 の 文字 列 形式 に 変換 し ま す 。 
inet_ntop ( ) で エラー と な る と 、 socket . error が 発生 し ま す 。  利用 可能 : Unix  ( サポート し て い な い プラットフォーム も あ り ま す ) バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
新規 に 生成 さ れ た ソケット オブジェクト の 、 デフォルト の タイム アウト 値 を 浮動 小数 点 形式 の 秒数 で 返 し ま す 。 
ソケット オブジェクト の 型 を 示 す 型 オブジェクト 。 
type ( socket (... ) ) と 同じ で す 。 
ネットワーク サーバ の 開発 を 省力 化 する ため の クラス 群 。 
stat  モジュール で は 、 os . stat ( ) 、 os . lstat ( )  および  os . fstat ( )  ( 存在 すれ ば )  の 返 す 内容 を 解釈 する ため の 定数 や 関数 を 定義 し て い ま す 。 
stat ( ) 、 fstat ( ) 、 および  lstat ( )  の 関数 呼び出し に つ い て の 完全 な 記述 は システム の ドキュメント を 参照 し て くださ い 。 
stat  モジュール で は 、 特殊 な ファイル 型 を 判別 する ため の 以下 の 関数 を 定義 し て い ま す : 
ファイル の モード が ディレクトリ の 場合 に ゼロ で な い 値 を 返 し ま す 。 
ファイル の モード が キャラクタ 型 の 特殊 デバイス ファイル の 場合 に ゼロ で な い 値 を 返 し ま す 。 
ファイル の モード が ブロック 型 の 特殊 デバイス ファイル の 場合 に ゼロ で な い 値 を 返 し ま す 。 
ファイル の モード が 通常 ファイル の 場合 に ゼロ で な い 値 を 返 し ま す 。 
ファイル の モード が  FIFO  ( 名前 つき パイプ )  の 場合 に ゼロ で な い 値 を 返 し ま す 。 
ファイル の モード が シンボリック リンク の 場合 に ゼロ で な い 値 を 返 し ま す 。 
ファイル の モード が ソケット の 場合 に ゼロ で な い 値 を 返 し ま す 。 
より 一般 的 な ファイル の モード を 操作 する ため の 二 つ の 関数 が 定義 さ れ て い ま す : 
os . chmod ( )  で 設定 する こと の でき る 一部 の ファイル モード - -  すなわち 、 ファイル の 許可 ビット  ( permis sion bits )  に 加え 、 ( サポート さ れ て い る システム で は )  スティッキー ビット  ( sticky bit ) 、 実行 グループ  ID  設定  ( set-group - id )  および  実行 ユーザ  ID  設定  ( set -user - id )  ビット --  を 返 し ま す 。 
ファイル の 形式 を 記述 し て い る ファイル モード の 一部  ( 上記 の  S _IS * ( )  関数 で 使 わ れ ま す )  を 返 し ま す 。 
os . path  で 扱 う こと の でき な い ファイル の 情報 を 調べ る 際 に も 便利 で す 。 
I  ノード の 保護 モード 。 
I  ノード 番号 。 
I  ノード が 存在 する デバイス 。 
該当 する  I  ノード へ の リンク 数 。 
ファイル の 所持 者 の ユーザ  ID 。 
ファイル の 所持 者 の グループ  ID 。 
通常 ファイル で は バイト サイズ ;  いく つ か の 特殊 ファイル で は 処理 待ち の データ 量 。 
最後 に アクセス し た 時刻 。 
最後 に 変更 さ れ た 時刻 。 
オペレーティング システム から 返 さ れ る ` `ctime' ' 。 
ある OS ( Unix など ) で は 最後 に メタデータ が 更新 さ れ た 時間 と な り 、 別 の OS ( Windows など ) で は 作成 時間 と な り ま す ( 詳細 に つ い て は 各 プラットフォーム の ドキュメント を 参照 し て くださ い ) 。 
` ` ファイル サイズ ' '  の 解釈 は ファイル の 型 に よ っ て 異な り ま す 。 
通常 の ファイル の 場合 、 サイズ は ファイル の 大き さ を バイト で 表 し た もの で す 。 
他 の キャラクタ 型 および ブロック 型 デバイス に おけ る サイズ フィーる の 意味 は さらに 異な っ て い て 、 背後 の システム コール の 実装 に よ り ま す 。 
リリース  2 . 2  で 撤廃 さ れ ま し た 。  キャッシュ を 使 わ ず に 
. stat ( )  を 直接 使 っ て くださ い ;  キャッシュ は それ を 使 う アプリケーション に 非常 に 高 い レベル の 脆弱 性 を もたら し 、 キャッシュ 管理 の サポート を 追加 する こと で アプリケーション の ソース コード を 難解 に し て しま い ま す 。 
statcache  モジュール は  os . stat ( )  を 最後 に 呼び出 し た 際 の 値 を 記憶 する こと に よ る 最適 化 機能 を 提供 し ま す 。 
statcache  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
この モジュール の 主要 な エントリ ポイント で す 。 
os . stat ( )  と 同じ で す が 、 将来 同じ 呼び出し が 行 わ れ た とき の 為 に 結果 を 記憶 し て お き ま す 。 
その 他 の 関数 は キャッシュ や その 一部 を 消去 する ため に 用い られ ま す 。 
キャッシュ を 消去 し ま す :  これ まで の 全て の  stat ( )  呼び出し に よ る 結果 を 忘却 し ま す 。 
stat ( path )  の キャッシュ が 存在 すれ ば 、 それ を 忘却 し ま す 。 
prefix  で 始ま る  path  に 対 する  stat ( path )  の 結果 を すべて 忘却 し ま す 。 
prefix  で 始ま る  path  に 対 する  stat ( path )  の 結果 を 、 stat ( prefix )  も 含め て すべて 忘却 し ま す 。 
forget_prefix ( )  に 似 て い ま す が 、 prefix  で  始ま ら な い  全て の  path  に つ い て 忘却 し ま す 。 
statvfs  モジュール で は 、 os . statvfs ( )  の 返 す 値 を 解釈 する ため の 定数 を 定義 し て い ま す 。 
os . statvfs ( )  は `` マジック ナンバ ' ' を 記憶 せ ず に タプル を 生成 し て 返 し ま す 。 
この モジュール で 定義 さ れ て い る 各 定数 は  os . statvfs ( )  が 返 す タプル に お い て 、 特定 の 情報 が 収め られ て い る 各 エントリ へ の  インデクス  で す 。 
選択 さ れ て い る ファイル システム の ブロック サイズ で す 。 
ファイル システム の 基本 ブロック サイズ で す 。 
ブロック 数 の 総計 で す 。 
空き ブロック 数 の 総計 で す 。 
非 スーパユーザ が 利用 でき る 空き ブロック 数 で す 。 
ファイル ノード 数 の 総計 で す 。 
空き ファイル ノード 数 の 総計 で す 。 
非 スーパユーザ が 利用 でき る 空き ノード 数 で す 。 
フラグ で 、 システム 依存 で す : statvfs ( )  マニュアル ページ を 参照 し て くださ い 。 
ファイル 名 の 最大 長 で す 。 
string  モジュール に は 便利 な 定数 や クラス が 数多く 入 っ て い ま す 。  また 、 現在 は 文字 列 の メソッド と し て 利用 でき る 、 すでに 撤廃 さ れ た 古 い 関数 も は 言 っ て い ま す 。 
正規 表現 に 関 する 文字 列 操作 の 関数 は 
を 参照 し て くださ い 。 
( ホスト 名 の よう な )  インターネット 上 に あ る 存在 に 識別 名 を つけ る 際 、 しばしば 識別 名 間 の  ` ` 等価 性 ' '  比較 を 行 う 必要 が あ り ま す 。 
厳密 に は 、 例えば 大小 文字 の 区別 を する か し な い かい っ た よう に 、 比較 を どの よう に 行 う か は アプリケーション の 領域 に 依存 し ま す 。 
また 、 例えば  ` ` 印字 可能 な ' '  文字 で 構成 さ れ た 識別 名 だけ を 許可 する と い っ た よう に 、 可能 な 識別 名 を 制限 する こと も 必要 と な る か も しれ ま せ ん 。 
RFC  345 4  で は 、 インターネット プロトコル 上 で  Unicode  文字 列 を ` ` 調製  ( prepare ) ' ' する ため の プロシジャ を 定義 し て い ま す 。 
文字 列 は 通信 路 に 載せ られ る 前 に 調製 プロシジャ で 処理 さ れ 、 その 結果 あ る 正規 化 さ れ た 形式 に な り ま す 。 
RFC  で は あ る テーブル の 集合 を 定義 し て お り 、 それ ら は プロファイル に まとめ られ て い ま す 。 
各 プロファイル で は 、 どの テーブル を 使 い 、 stringprep  プロシジャ の どの オプション 部分 が プロファイル の 一部 に な っ て い る か を 定義 し て い ま す 。 
stringprep  プロファイル の 一 つ の 例 は  nameprep  で 、 国際 化 さ れ た ドメイン 名 に 使 わ れ ま す 。  stringprep  は  RFC  345 3  の テーブル を 公開 し て い る に 過ぎ ま せ ん 。 
これ ら の テーブル は 辞書 や リスト と し て 表  現 する に は バリエーション が 大き すぎ る の で 、 この モジュール で は  Unicode  文字 データベース を 内部 的 に 利用 し て い ま す 。 
モジュール ソース コード 自体 は  mkstringprep . py  ユーティリティ を 使 っ て 生成 さ れ ま し た 。  その 結果 、 これ ら の テーブル は データ 構造 体 で は な く 、 関数 と し て 公開 さ れ て い ま す 。 
RFC  に は  2  種類 の テーブル :  集合 および マップ 、 が 存在 し ま す 。 
集合 に つ い て は 、 stringprep  は `` 特性 関数  ( characteristic function ) ' ' 、 すなわち 引数 が 集合 の 一部 で あ る 場合 に 真 を 返 す 関数 を 提供 し ま す 。 
マップ に 対 し て は 、 マップ 関数 :  キー が 与え られ る と 、 それ に 関連 付け られ た 値 を 返 す 関数 、 を 提供 し ま す 。 
以下 は この モジュール で 利用 可能 な 全て の 関数 を 列挙 し た もの で す 。 
code  が テーブル  A . 1  ( Unicode  3 . 2  に お け る 未 割り当て コード 点 : unassignedcode  point )  か どう か 判定 し ま す 。 
code  が テーブル  B . 1  ( 一般 に は 何 に も 対応 付け られ て い な い : commonly mappedto  nothing )  か どう か 判定 し ま す 。 
テーブル  B . 2  ( NFKC  で 用い られ る 大 小 文字 の 対応 付け )  に 従 っ て 、  code  に 対応 付け られ た 値 を 返 し ま す 。 
テーブル  B . 3  ( 正規 化 を 伴 わ な い 大小 文字 の 対応 付け )  に 従 っ て 、  code  に 対応 付け られ た 値 を 返 し ま す 。 
code  が テーブル  C . 1 . 1  ( ASCII  スペース 文字 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 1 . 2  ( 非  ASCII  スペース 文字 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 1  ( スペース 文字 、 C . 1 . 1  および  C . 1 . 2  の 和 集合 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 2 . 1  ( ASCII  制御 文字 ) か どう か 判定 し ま す 。 
code  が テーブル  C . 2 . 2  ( 非  ASCII  制御 文字 ) か どう か 判定 し ま す 。 
code  が テーブル  C . 2  ( 制御 文字 、 C . 2 . 1  および  C . 2 . 2  の 和 集合 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 3  ( プライベート 利用 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 4  ( 非 文字 コード 点 :  non - character code  points ) か どう か 判定 し ま す 。 
code  が テーブル  C . 5  ( サロゲーション コード )  か どう か 判定 し ま す 。 
code  が テーブル  C . 6  ( 平文 : plain text  と し て 不 適切 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 7  ( 標準 表現 : canonical  representation  と し て 不 適切 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 8  ( 表示 プロパティ の 変更 また は 撤廃 )  か どう か 判定 し ま す 。 
code  が テーブル  C . 9  ( タグ 文字 )  か どう か 判定 し ま す 。 
code  が テーブル  D . 1  ( 双 方向 プロパティ  `` R ' ' また は ` ` AL' ' を 持 つ 文字 )  か どう か 判定 し ま す 。 
code  が テーブル  D . 2  ( 双 方向 プロパティ `` L' ' を 持 つ 文字 )  か どう か 判定 し ま す 。 
この モジュール は 、  Python  の 値 と  Python  上 で 文字 列 データ と し て 表 さ れ る C  の 構造 体 データ と の 間 の 変換 を 実現 し ま す 。 
この モジュール で は 、 C  構造 体 の レイアウト および  Python  の 値 と の 間 で 行 い た い 変換 を コンパクト に 表現 する ため に 、 フォーマット 文字 列  を 使 い ま す 。 
この モジュール は 特に 、 ファイル に 保存 さ れ たり 、 ネットワーク 接続 を 経由 し た バイナリ データ を 扱 う とき に 使 わ れ ま す 。  この モジュール は 以下 の 例外 と 関数 を 定義 し て い ま す : 
様々 な 状況 で 送出 さ れ た 例外 で す ;  引数 は 何 が 問題 か を 記述 する 文字 列 で す 。 
値 
v 1 , v 2 , . . .  が 与え られ た フォーマット で 含 ま れ る 文字 列 データ を 返 し ま す 。 
引数 は 指定 し た フォーマット が 要求 する 型 と 正確 に 一致 し て い な けれ ば な り ま せ ん 。 
( おそらく  pack ( fmt , . . . )  で パック さ れ た )  文字 列 データ を 、 与え られ た 書式 に 従 っ て アン パック し ま す 。 
値 が 一 つ しか な い 場合 を 含め 、 結果 は タプル で 返 さ れ ま す 。 
文字 列 データ に は フォーマット が 要求 する だけ の データ が 正確 に 含 ま れ て い な けれ ば な り ま せ ん ( len ( string )  が  calcsize ( fmt )  と 一致 し な けれ ば な り ま せ ん ) 。 
与え られ た フォーマット に 対応 する 構造 体 の サイズ  ( すなわち 文字 列 データ の サイズ )  を 返 し ま す 。 
フォーマット 文字  ( format  character )  は 以下 の 意味 を 持 っ て い ま す ;  C  と  Python  の 間 の 変換 で は 、 値 は 正確 に 以下 に 指定 さ れ た 型 で な く て は な り ま せ ん : 
フォーマット 
C  で の 型 
長 さ  1  の 文字 列 
整数 型  ( integer ) 
整数 型 
long  整数 型 
浮動 小数 点 型 
文字 列 
注意 事項 : 
フォーマット 文字  " q "  および  " Q "  は 、 プラットフォーム の  C  コンパイラ が  C  の  long  long  型 、 Windows  で は  __int 64  を サポート する 場合 に のみ 、 プラットフォーム ネイティブ の 値 と の 変換 を 行 う モード だけ で 利用 する こと が でき ま す 。 
バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
フォーマット 文字 の 前 に 整数 を つけ 、 繰り返 し 回数  ( count )  を 指定 する こと が でき ま す 。 
例えば 、 フォーマット 文字 列  ' 4 h ' は 'hhhh' と 全く 同じ 意味 で す 。  フォーマット 文字 間 の 空白 文字 は 無視 さ れ ま す ; count  と フォーマット 文字 の 間 に は スペース を 入れ て は いけ ま せ ん 。 
この データ の 先頭 の  1  バイト に は 文字 列 の 長 さ か 255  の うち 、 小さ い 方 の 数 が 収め られ ま す 。 
その 後 に 文字 列 の バイト データ が 続 き ま す 。 
pack ( )  に 渡 さ れ た  Pascal  文字 列 の 長 さ が 長 すぎ た  ( count - 1 より も 長 い )  場合 、 先頭 の  count - 1  バイト が 書き込 ま れ ま す 。 
文字 列 が count - 1  より も 短 い 場合 、 指定 し た  count  バイト に 達 する まで の 残り の 部分 は ヌル で 埋め られ ま す 。 
NULL  ポインタ は 常 に  Python  整数 型 の  0  に な り ま す 。 
ポインタ 型 の サイズ を 持 っ た 値 を パック する 際 に は 、 Python  整数 型  および long  整数 型 オブジェクト を 使 う こと が でき ま す 。 
バイト オーダ 
サイズ および アラインメント 
ネイティブ 
標準 
リトル エンディアン 
ビッグ エンディアン 
ネットワーク バイト オーダ  ( = ビッグ エンディアン ) 
フォーマット 文字 列 の 最初 の 文字 が 上 の いずれ か で な い 場合 、 "@"  で あ る と みな さ れ ま す 。  ネイティブ の バイト オーダ は ビッグ エンディアン か リトル エンディアン で 、 ホスト 計算 機 に 依存 し ま す 。 
" = "  を 指定 し た 場合 、 ホスト 計算 機 の バイト オーダ に 基づ い て リトル エンディアン と ビッグ エンディアン の どちら を 使 う か を 決め ま す 。 
struct  モジュール は この 設定 を ネイティブ の オーダ 設定 と し て 解釈 し な い の で 、 " P "  を 使 う こと は でき ま せ ん 。  以下 に 例 を 示 し ま す  ( この 例 は 全て ビッグ エンディアン の マシン で 、 ネイティブ の バイト オーダ 、 サイズ および アラインメント の 場合 で す ) : 
ヒント :  特定 の 型 に よ る アラインメント 要求 に 従 う よう に 構造 体 の 末端 を そろえ る に は 、 count  を ゼロ に し た 特定 の 型 で フォーマット を 終端 し ま す 。 
例えば 、 フォーマット 'llh0 l ' は 、  long  型 が  4  バイト を 境界 と し て そろえ られ て い る と 仮定 し て 、 末端 に  2  バイト を パディング し ま す 。 
この 機能 は 変換 対象 が ネイティブ の サイズ および アラインメント の 場合 に のみ 働 き ま す ;  標準 に 型 サイズ および アラインメント の 設定 で は いかなる アラインメント も 行 い ま せ ん 。 
一様 な データ 型 から な る バイナリ 記録 データ の パック . 
XDR  データ の パック および アン パック 。  . 
6 . 8 . 1  subprocess  モジュール を 使 う 
subprocess  モジュール は 、 新し く プロセス を 開始 し たり 、 それ ら の 標準 入出力 \/ エラー 出力 に 対 し て パイプ で 接続 し たり 、 それ ら の 終了 ステータス を 取得 し たり し ま す 。 
この モジュール は 以下 の よう な 古 い いく つ か の モジュール を 置き換え る こと を 目的 と し て い ま す : 
これ ら の モジュール や 関数 の 代わり に 、 subprocess  モジュール を どの よう に 使 う か に つ い て は 以下 の 節 で 説明 し ま す 。 
6 . 8 . 1 . 1  便利 な 関数 
6 . 8 . 1 . 2  例外 
6 . 8 . 1 . 3  セキュリティ 
6 . 8 . 3 . 1  \/ bin\/sh シェル の バック クォート を 置き換え る 
6 . 8 . 3 . 2  シェル の パイプライン を 置き換え る 
6 . 8 . 3 . 3  os . system ( )  を 置き換え る 
6 . 8 . 3 . 4  os . spawn*  を 置き換え る 
6 . 8 . 3 . 5  os . popen *  を 置き換え る 
6 . 8 . 3 . 6  popen 2 . *  を 置き換え る 
sunau モジュール は 、 Sun  AU サウンド フォーマット へ の 便利 な インターフェース を 提供 し ま す 。 
この モジュール は 、 
モジュール や 
モジュール と 互換 性 の あ る インターフェース を 備え て い ま す 。  オーディオ ファイル は ヘッダ と それ に 続 く データ から 構成 さ れ ま す 。 
ヘッダ の フィールド は 以下 の 通り で す : 
4 バイト 文字 列  " . snd " 。 
info を 含 む ヘッダ の サイズ を バイト 数 で 示 し た もの 。 
データ の 物理 サイズ を バイト 数 で 示 し た もの 。 
オーディオ サンプル の エンコード 形式 。 
サンプリングレート 。 
サンプル の チャンネル 数 。 
オーディオ ファイル に つ い て の 説明 を ASCII 文字 列 で 示 し た もの ( null  バイト で 埋め られ ま す ) 。 
file が 文字 列 なら その 名前 の ファイル を 開 き 、 そう で な い なら ファイル の よう に シーク 可能 な オブジェクト と し て 扱 い ま す 。  mode は 以下 の うち の いずれ か で す 。 
読み 込 み のみ の モード 。 
書き込み のみ の モード 。 
読み込 み \/ 書き込み 両方 の モード で 開 く こと は でき な い こと に 注意 し て 下さ い 。 ' r ' の mode は AU _read オブジェクト を 返 し 、 ' w ' と 'w b' の mode は AU _write オブジェクト を 返 し ま す 。 
open ( ) と 同義 。  後方 互換 性 の ため に 残 さ れ て い ま す 。 
sunau モジュール は 以下 の 例外 を 定義 し て い ま す : 
Sun  AU の 仕様 や 実装 に 対 する 不 適切 な 操作 に よ り 何 か 実行 不 可能 と な っ た 時 に 発生 する エラー 。 
sunau モジュール は 以下 の データ アイテム を 定義 し て い ま す : 
big- endian で 保存 さ れ た 正規 の Sun  AU ファイル は 全て この 整数 で 始ま り ま す 。 
これ は 文字 列 " . snd " を 整数 に 変換 し た もの で す 。 
AU ヘッダ の encoding フィールド の 値 で 、 この モジュール で サポート し て い る もの で す 。 
AU ヘッダ の encoding フィールド の 値 の うち 既知 の もの と し て 追加 さ れ て い る もの で す が 、 この モジュール で は サポート さ れ て い ま せ ん 。 
1 4 . 4 . 1  AU _read  オブジェクト 
SunOS プラットフォーム で 利用 でき ま す 。 
これ は 
に 付随 する モジュール で 、 MIN _ GAIN 、 MAX _ GAIN 、 SPEAKER など の 便利 な シンボル 定数 を 定義 し て い ま す 。 
定数 の 名前 は C の include ファイル sun\/audioio . h の もの と 同じ で 、 初め の 文字 列  " AUDIO_ " を 除 い た もの で す 。 
この モジュール を 使 う と 、 Sun の オーディオ インターフェース に アクセス でき ま す 。 
完全 な 説明 文書 は マニュアル ページ 
audio ( 7 I ) に あ り ま す 。  モジュール 
に は 、 この モジュール で 使 わ れ る 定数 が 定義 さ れ て い ま す 。  この モジュール に は 、 以下 の 変数 と 関数 が 定義 さ れ て い ま す : 
この 例外 は 、 全て の エラー に つ い て 発生 し ま す 。 
引数 は 誤り を 説明 する 文字 列 で す 。 
この 関数 は オーディオ デバイス を 開 き 、 Sun オーディオ デバイス の オブジェクト を 返 し ま す 。 
こう する こと で 、 オブジェクト が I \/ O に 使用 でき る よう に な り ま す 。 
パラメータ mode は 次 の うち の いずれ か 一 つ で 、 録音 のみ に は ' r ' 、 再生 のみ に は ' w ' 、 録音 と 再生 両方 に は ' rw ' 、 コントロール デバイス へ の アクセス に は ' control ' で す 。 
レコーダー や プレーヤー に は 同時 に 1 つ の プロセス しか アクセス が 許 さ れ て い な い の で 、 必要 な 動作 に つ い て だけ デバイス を オープン する の が い い 考え で す 。  詳し く は 
audio ( 7 I ) を 参照 し て くださ い 。 
マニュアル ページ に あ る よう に 、 この モジュール は 環境 変数 AUDIODEV の 中 の ベース オーディオ デバイス ファイル ネーム を 初め に 参照 し ま す 。 
見つか ら な い 場合 は \/ dev\/audio を 参照 し ま す 。 
コントロール デバイス に つ い て は 、 ベース オーディオ デバイス に ``ctl ' ' を 加え て 扱 わ れ ま す 。 
この モジュール は 解析 木 の 内部 ノード の 数値 を 表 す 定数 を 提供 し ま す 。 
ほとんど の Python 定数 と は 違 い 、 これ ら は 小 文字 の 名前 を 使 い ま す 。 
言語 の 文法 の コンテキスト に お け る 名前 の 定義 に つ い て は 、 Python ディストリビューション の ファイル Grammar \/ Grammar を 参照 し て くださ い 。 
名前 が マップ する 特定 の 数値 は Python の バージョン 間 で 変わ り ま す 。  この モジュール に は 、 データ オブジェクト も 一 つ 付け加え られ て い ま す : 
ディクショナリ は この モジュール で 定義 さ れ て い る 定数 の 数値 を 名前 の 文字 列 へ マップ し 、 より 人 が 読 み やす い よう に 解析 木 を 表現 し ま す 。 
: モジュール 
モジュール の 二番 目 の 例 で 、 symbol モジュール の 使 い 方 を 示 し て い ま す 。  . 
この モジュール で は 、 インタープリタ で 使用 ・ 管理 し て い る 変数 や 、 インタープリタ の 動作 に 深 く 関連 する 関数 を 定義 し て い ま す 。  この モジュール は 常 に 利用 可能 で す 。 
Python スクリプト に 渡 さ れ た コマンドライン 引数 の リスト 。  argv [ 0 ] は スクリプト の 名前 と な り ま す が 、 フル パス 名 か どう か は 、 オペレーティング システム に よ っ て 異な り ま す 。 
コマンドライン 引数 に - c を 付け て Python を 起動 し た 場合 、 argv [ 0 ] は 文字 列 ' - c ' と な り ま す 。 
引数 なし で Python を 起動 し た 場合 、 argv は 長 さ 0 の リスト に な り ま す 。 
プラットフォーム の バイト 順 を 示 し ま す 。 
ビッグ エンディアン ( 最 上位 バイト が 先頭 ) の プラットフォーム で は ' big' 、 リトル エンディアン ( 最 下位 バイト が 先頭 ) で は ' little ' と な り ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
コンパイル 時 に Python インタープリタ に 組み込 ま れ た 、 全て の モジュール 名 の タプル ( この 情報 は 、 他 の 手段 で は 取得 する こと が でき ま せ ん 。 
Python インタープリタ の 著作 権 を 表示 する 文字 列 。 
Python  DLL の ハンドル を 示 す 整数 。  利用 可能 :  Windows 
value が None 以外 の 場合 、 value を sys . st dout に 出力 し て _ _builtin__. _ に 保存 し ま す 。 
sys . displayhook は 、 Python の 対話 セッション で 入力 さ れ た 式 が 評価 さ れ た とき に 呼び出 さ れ ま す 。 
対話 セッション の 出力 を カスタマイズ する 場合 、 sys . displayhook に 引数 の 数 が 一 つ の 関数 を 指定 し ま す 。 
)  指定 し た トレース バック と 例外 を sys . stderr に 出力 し ま す 。 
例外 が 発生 し 、 その 例外 が 捕捉 さ れ な い 場合 、 インタープリタ は 例外 クラス ・ 例外 インスタンス ・ トレース バック オブジェクト を 引数 と し て sys . excepthook を 呼び出 し ま す 。 
対話 セッション 中 に 発生 し た 場合 は プロンプト に 戻 る 直前 に 呼び出 さ れ 、 Python プログラム の 実行 中 に 発生 し た 場合 は プログラム の 終了 直前 に 呼び出 さ れ ま す 。 
この トップ レベル で の 例外 情報 出力 処理 を カスタマイズ する 場合 、 sys . excepthook に 引数 の 数 が 三 つ の 関数 を 指定 し ま す 。 
それぞれ 、 起動 時 の displayhook と excepthook の 値 を 保存 し て い ま す 。 
この 値 は 、 displayhook と excepthook に 不正 な オブジェクト が 指定 さ れ た 場合 に 、 元 の 値 に 復旧 する ため に 使用 し ま す 。 
この 関数 は 、 現在 処理 中 の 例外 を 示 す 三 つ の 値 の タプル を 返 し ま す 。 
この 値 は 、 現在 の スレッド ・ 現在 の スタック フレーム の もの で す 。 
現在 の スタック フレーム が 例外 処理 中 で な い 場合 、 例外 処理 中 の スタック フレーム が 見つか る まで 次々 と その 呼び出し 元 スタック フレーム を 調べ ま す 。 
例外 が 発生 し て い る 場合 、 ( type ,  value , traceback ) を 返 し ま す 。 
exc _ clear ( ) が 呼び出 さ れ る と 、 現在 の スレッド で 他 の 例外 が 発生 する か 、 又 は 別 の 例外 を 処理 中 の フレーム に 実行 スタック が 復帰 する まで 、 exc _ info ( ) は 三 つ の None を 返 し ま す 。 
警告 : 例外 処理 中 に 戻 り 値 の traceback を ローカル 変数 に 代入 する と 循環 参照 が 発生 し 、 関数 内 の ローカル 変数 や トレース バック が 参照 し て い る 全て の オブジェクト は 解放 さ れ な く な り ま す 。 
特に トレース バック 情報 が 必要 で は な けれ ば exctype ,  value  =sys . exc _ info ( ) [ : 2 ] の よう に 例外 型 と 例外 オブジェクト のみ を 取得 する よう に し て 下さ い 。 
もし トレース バック が 必要 な 場合 に は 、 処理 終了 後 に delete し て 下さ い 。  この delete は 、 try . . .  finally . . . で 行 う と 良 い で しょ う 。 
注意 : Python  2 . 2  以降 で は 、 ガベージ コレクション が 有効 で あ れ ば この よう な 到達 不能 オブジェクト は 自動 的 に 削除 さ れ ま す 。  しかし 、 循環 参照 を 作 ら な い よう に し た ほう が 効率 的 で す 。 
この 関数 は 、 現在 の スレッド で 処理 中 、 又 は 最後 に 発生 し た 例外 の 情報 を 全て クリア し ま す 。 
この 関数 を 呼び出 す と 、 現在 の スレッド で 他 の 例外 が 発生 する か 、 又 は 別 の 例外 を 処理 中 の フレーム に 実行 スタック が 復帰 する まで 、 exc _ info ( ) は 三 つ の None を 返 し ま す 。  この 関数 が 必要 と な る こと は 滅多 に あ り ま せ ん 。 
ロギング や エラー 処理 など で 最後 に 発生 し た エラー の 報告 を 行 う 場合 など に 使用 し ま す 。 
また 、 リソース を 解放 し て オブジェクト の 終了 処理 を 起動 する ため に 使用 する こと も でき ま す が 、 オブジェクト が 実際 に さ れ る か どう か は 保障 の 限り で は あ り ま せ ん 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
リリース  1 . 5  で 撤廃 さ れ ま し た 。 
例外 処理 中 で な い 場合 、 exc_type の 値 は None と な り 、 exc _ value と exc _traceback は 未定義 と な り ま す 。 
exec _prefix  Python の プラットフォーム 依存 な ファイル が インストール さ れ て い る ディレクトリ 名 ( サイト 固有 ) 。 
デフォルト で は 、 この 値 は '\/ usr\/ local ' で す が 、 ビルド 時 に configure の - - exec - prefix 引数 で 指定 する こと が でき ま す 。 
全て の 設定 ファイル ( pyconfig . h など ) は exec _prefix  + '\/ lib\/pythonversion \/config' に 、 共有 ライブラリ は exec _prefix  + '\/ lib\/pythonversion\/ lib -dynload ' に インストール さ れ ま す ( 但し version は version [ : 3 ] ) 。 
Python インタープリタ の 実行 ファイル の 名前 を 示 す 文字 列 。  この よう な 名前 が 意味 を 持 つ システム で は 利用 可能 。 
Python を 終了 し ま す 。 
exit ( ) は SystemExit を 送出 する の で 、 try ステートメント の finally 節 に 終了 処理 を 記述 し たり 、 上位 レベル で 例外 を 捕捉 し て exit 処理 を 中断 し たり する こと が でき ま す 。 
オプション 引数 arg に は 、 終了 ステータス と し て 整数 ( デフォルト は 0 ) また は 整数 以外 の 型 の オブジェクト を 指定 する こと が でき ま す 。 
整数 を 指定 し た 場合 、 シェル 等 は 0 は ` ` 正常 終了 ' ' 、 0 以外 の 整数 を ` ` 異常 終了 ' ' と し て 扱 い ま す 。 
多く の システム で は 、 有効 な 終了 ステータス は 0 - 127 で 、 これ 以外 の 値 を 返 し た 場合 の 動作 は 未 定義 で す 。 
システム に よ っ て は 特定 の 終了 コード に 個別 の 意味 を 持 た せ て い る 場合 が あ り ま す が 、 この よう な 定義 は 僅か しか あ り ま せ ん 。 Unix プログラム で は 文法 エラー の 場合 に は 2 を 、 それ 以外 の エラー なら ば 1 を 返 し ま す 。 
arg に None を 指定 し た 場合 は 、 数値 の 0 を 指定 し た 場合 と 同じ で す 。  それ 以外 の オブジェクト を 指定 する と 、 その オブジェクト が sys . stderr に 出力 さ れ 、 終了 コード を し て 1 を 返 し ま す 。 
エラー 発生 時 に は sys . exit ( " エラー メッセージ " ) と 書 く と 、 簡単 に プログラム を 終了 する こと が でき ま す 。 
この 値 は モジュール に 存在 し ま せ ん が 、 ユーザ プログラム で プログラム 終了 時 に 呼び出 さ れ る 終了 処理 関数 と し て 、 引数 の 数 が 0 の 関数 を 設定 する こと が でき ま す 。 
この 関数 は 、 インタープリタ 終了 時 に 呼び出 さ れ ま す 。 
exitfunc に 指定 する こと が でき る 終了 処理 関数 は 一 つ だけ で す の で 、 複数 の クリーン アップ 処理 が 必要 な 場合 は 
モジュール を 使用 し て くださ い 。 
注意 : プログラム が シグナル で kill さ れ た 場合 , Python 内部 で 致命 的 な エラー が 発生 し た 場合 , o s . _exit ( ) が 呼び出 さ れ た 場合 に は , 終了 処理 関数 は 呼び出 さ れ ま せ ん 。 
リリース  2 . 4  で 撤廃 さ れ ま し た 。 
を 使 っ て くださ い . 
インタプリタ の  `` チェック インターバル  ( check  interval ) ' ' を 返 し ま す ; setcheckinterval ( )  を 参照 し て くださ い 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
現在 の Unicode 処理 の デフォルト エンコーディング 名 を 返 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
dlopen ( ) で 指定 さ れ る フラグ を 返 し ま す 。 
この フラグ は 
と DLFCN で 定義 さ れ て い ま す 。  利用 可能 : Unix . バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
Unicode ファイル 名 を システム の ファイル 名 に 変換 する 際 に 使用 する エンコード 名 を 返 し ま す 。 
システム の デフォルト エンコーディング を 使用 する 場合 に は None を 返 し ま す 。 
Windows  9 x で は 、 エンコーディング は `` mbcs' ' と な り ま す 。 
OS  X で は 、 エンコーディング は ` `utf - 8 ' '  と な り ま す 。 
Unix で は 、 エンコーディング は ユーザ の nl_ langinfo ( CODESET ) の 設定 と な り ま す 。  nl_ langinfo ( CODESET ) が 失敗 する と None を 返 し ま す 。 
Windows  NT + で は 、 Unicode を ファイル 名 と し て 使用 でき る の で 変換 の 必要 は あ り ま せ ん 。  getfilesystemencoding  は `` mbcs' ' を 返 し ま す が , これ は ある  Unicode  文字 列 を バイト 文字 列 に 明示 的 に 変換 し て , ファイル 名 と し て 使 う と 同じ ファイル を 指 す よう に し た い 場合 に , アプリケーション が 使 わ ね ば な ら な い エンコーディング で す . 
object の 参照 数 を 返 し ま す 。 
object は ( 一時 的 に ) getrefcount ( ) から も 参照 さ れ る ため 、 参照 数 は 予想 さ れ る 数 より も 1 多 く な り ま す 。 
現在 の 最大 再帰 数 を 返 し ま す 。 
最大 再帰 数 は 、 Python インタープリタ スタック の 最大 の 深 さ で す 。 
この 制限 は Python プログラム が 無限 に 再帰 し 、 C スタック が オーバー フロー し て クラッシュ する こと を 防止 する ため に 設け られ て い ま す 。 
この 値 は setrecursion limit ( ) で 指定 する こと が でき ま す 。 
コールスタック から フレーム オブジェクト を 取得 し ま す 。 
オプション 引数 depth を 指定 する と 、 スタック の トップ から depth だけ 下 の フレーム オブジェクト を 取得 し ま す 。 
depth が コールスタック より も 深 けれ ば 、 ValueError が 発生 し ま す 。 
depth の デフォルト 値 は 0 で 、 この 場合 は コールスタック の トップ の フレーム を 返 し ま す 。  この 関数 は 、 内部 的 な 、 特殊 な 用途 に のみ 利用 する こと が でき ま す 。 
実行 中 の Windows の バージョン を 示 す 、 以下 の 値 の タプル を 返 し ま す : major , minor , build , platform ,  text 。 
text は 文字 列 、 それ 以外 の 値 は 整数 で す 。 
platform は 、 以下 の 値 と な り ま す : 
整数 に エンコード さ れ た バージョン 番号 。 
この 値 は 新 バージョン ( 正規 リリース 以外 で あ っ て も ) ごと に かならず 増加 し ま す 。 
例えば 、 Python  1 . 5 . 2 以降 で のみ 動作 する プログラム で は 、 以下 の よう な チェック を 行 い ま す 。 
" hexversion " は hex ( ) で 16 進 数 に 変換 し な けれ ば 値 の 意味 が わか り ま せ ん 。 
より 読 み やす い バージョン 番号 が 必要 な 場合 に は version _info を 使用 し て くださ い 。 
通常 は 定義 さ れ て お ら ず 、 捕捉 さ れ な い 例外 が 発生 し て インタープリタ が エラー メッセージ と トレース バック を 出力 し た 場合 に のみ 設定 さ れ ま す 。 
この 値 は 、 対話 セッション 中 に エラー が 発生 し た とき 、 デバッグ モジュール を ロード ( 例 : " import pdb ; pdb . pm ( ) " など 。 
対話 セッション を 実行 する スレッド は 常 に 一 つ だけ な の で 、 exc_type の よう に スレッド に 関 する 問題 は 発生 し ま せ ん 。 
Python の 整数 型 で サポート さ れ る 、 最大 の 整数 。 
この 値 は 最低 で も 2 * * 31 - 1 で す 。 
最大 の 負数 は - maxint - 1 と な り ま す 。  正負 の 最大 数 が 非 対称 で す が 、 これ は 2 の 補数 計算 を 行 う ため で す 。 
Unicode 文字 の 最大 の コード ポイント を 示 す 整数 。 
この 値 は 、 オプション 設定 で Unicode 文字 の 保存 形式 と し て USC - 2 と UCS - 4 の いずれ を 指定 し た か に よ っ て 異な り ま す 。 
ロード 済み モジュール の モジュール 名 と モジュール オブジェクト の 辞書 。 
強制 的 に モジュール を 再 読み込 み する 場合 など に 使用 し ま す 。 
この 辞書 から モジュール を 削除 する の は 、 reload ( ) 
の 呼び出し と 等価 で は あ り ま せ ん 。 
スクリプト の ディレクトリ が な い ( インタープリタ で 対話 セッション で 起動 さ れ た 時 や 、 スクリプト を 標準 入力 から 読み込 む 場合 など ) 場合 、 path [ 0 ] に は 空 文字 列 と な り 、 Python は カレント ディレクトリ から モジュール の 検索 を 開始 し ま す 。 
スクリプト ディレクトリ は 、 PYTHONPATH で 指定 し た ディレクトリ の 前 に 挿入 さ れ ま す の で 注意 が 必要 で す 。  必要 に 応 じ て 、 プログラム 内 で 自由 に 変更 する こと が でき ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : Unicode  文字 列 が 無視 さ れ な く な り ま し た 
プラットフォーム を 識別 する 文字 列 ( 例 : 'sunos 5 ' , 'linux 1 ' 等 ) 。 
path に プラットフォーム 別 の サブ ディレクトリ を 追加 する 場合 など に 利用 し ま す 。 
サイト 固有 の 、 プラットフォーム に 依存 し な い ファイル を 格納 する ディレクトリ を 示 す 文字 列 。  デフォルト で は '\/ usr\/ local ' に な り ま す 。 
この 値 は ビルド 時 に configure スクリプト の - - prefix 引数 で 指定 する 事 が でき ま す 。 
Python ライブラリ の 主要 部分 は prefix  + '\/ lib\/pythonversion ' に インストール さ れ 、 プラットフォーム 非 依存 な ヘッダ ファイル ( pyconfig . h 以外 ) は prefix  + '\/include\/pythonversion ' に 格納 さ れ ま す ( 但し version は version [ : 3 ] ) 。 
インタープリタ の 一 次 プロンプト 、 二 次 プロンプト を 指定 する 文字 列 。 
対話 モード で 実行 中 のみ 定義 さ れ 、 初期 値 は '' と '. . .  ' で す 。 
文字 列 以外 の オブジェクト を 指定 し た 場合 、 インタープリタ が 対話 コマンド を 読み込 む ごと に オブジェクト の str ( ) を 評価 し ま す 。 
この 機能 は 、 動的 に 変化 する プロンプト を 実装 する 場合 に 利用 し ま す 。 
インタープリタ の ` ` チェック 間隔 ' ' を 示 す 整数 値 を 指定 し ま す 。 
この 値 は スレッド スイッチ や シグナル ハンドラ の チェック を 行 う 周期 を 決定 し ま す 。 
デフォルト 値 は 100 で 、 この 場合  100  の 仮想 命令 を 実行 する と チェック を 行 い ま す 。  この 値 を 大き く すれ ば スレッド を 利用 する プログラム の パフォーマンス が 向上 し ま す 。 
この 値 が = 0 以下 の 場合 、 全て の 仮想 命令 を 実行 する たび に チェック を 行 い 、 レスポンス 速度 と 最大 に な り ま す が オーバヘッド も また 最大 と な り ま す 。 
現在 の Unicode 処理 の デフォルト エンコーディング 名 を 設定 し ま す 。 
name に 一致 する エンコーディング が 見つか ら な い 場合 、 LookupError が 発生 し ま す 。 
この 関数 は 、 
モジュール の 実装 が 、 sitecustomize モジュール から 使用 する ため だけ に 定義 さ れ て い ま す 。 
から 呼び出 さ れ た 後 、 この 関数 は sys から 削除 さ れ ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
インタープリタ が 拡張 モジュール を ロード する 時 、 dlopen ( ) で 使用 する フラグ を 設定 し ま す 。 
sys . setdlopenflags ( 0 ) と すれ ば 、 モジュール インポート 時 に シンボル の 遅延 解決 を 行 う 事 が でき ま す 。 
シンボル を 拡張 モジュール 間 で 共有 する 場合 に は 、 sys . setdlopenflags( dl . RTLD _ NOW | dl . RTLD _ GLOBAL ) と 指定 し ま す 。 
フラグ の 定義 名 は 
か DLFCN で 定義 さ れ て い ま す 。 
DLFCN が 存在 し な い 場合 、 h2py スクリプト を 使 っ て \/ usr\/include\/dlfcn . h から 生成 する こと が でき ま す 。  利用 可能 : Unix . バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
システム の プロファイル 関数 を 登録 し ま す 。 
プロファイル 関数 は 、 Python の ソース コード プロファイル を 行 う 関数 で 、 Python で 記述 する こと が でき ま す 。 
詳細 は 10 を 参照 し て くださ い 。 
プロファイル 関数 は トレース 関数 ( settrace ( ) 参照 ) と 似 て い ま す が 、 ソース 行 が 実行 さ れ る ごと に 呼び出 さ れ る の で は な く 、 関数 の 呼出し と 復帰 時 のみ 呼び出 さ れ ま す ( 例外 が 発生 し て い る 場合 で も 、 復帰 時 の イベント は 発生 し ま す ) 。 
Python インタープリタ の 、 スタック の 最大 の 深 さ を limit に 設定 し ま す 。 
この 制限 は Python プログラム が 無限 に 再帰 し 、 C スタック が オーバー フロー し て クラッシュ する こと を 防止 する ため に 設け られ て い ま す 。 
limit の 最大 値 は プラットフォーム に よ っ て 異な り ま す 。 
深 い 再帰 処理 が 必要 な 場合 に は プラットフォーム が サポート し て い る 範囲 内 で より 大きな 値 を 指定 する こと が でき ま す が 、 この 値 が 大き すぎ れ ば クラッシュ する の で 注意 が 必要 で す 。 
システム の トレース 関数 を 登録 し ま す 。 
トレース 関数 は Python の ソース デバッガ を 実装 する ため に 使用 する こと が でき ま す 。 
9 . 2 の ` ` How It  Works , ' ' を 参照 し て くださ い 。 
トレース 関数 は スレッド 毎 に 設定 する こと が でき ま す の で 、 デバッグ を 行 う 全て の スレッド で settrace ( ) を 呼び出 し 、 トレース 関数 を 登録 し て くださ い 。 
注意 :  settrace ( )  関数 は , デバッガ , プロファイラ , カバレッジ ツール 等 で 使 う ため だけ の もの で す . この 関数 の 挙動 は 言語 定義 より も 実装 プラットフォーム の 分野 の 問題 で , 全て の  Python  実装 で 利用 でき る と は 限 り ま せ ん . 
インタープリタ の 標準 入力 ・ 標準 出力 ・ 標準 エラー 出力 に 対応 する ファイル オブジェクト 。 stdin は スクリプト の 読み込み を 除 く 全て の 入力 処理 で 使用 さ れ 、 input ( ) 
インタープリタ の プロンプト は ( ほとんど ) stderr に 出力 さ れ ま す 。 st dout と stderr は 必ず しも 組み込み の ファイル オブジェクト で あ る 必要 は な く 、 write ( ) メソッド を 持 つ オブジェクト で あ れ ば 使用 する こと が でき ま す 。 
st dout と stderr を 別 の オブジェクト に 置き換え て も 、 os . popen ( ) ・ os. system ( ) ・ 
の exec * ( ) など から 起動 さ れ た プロセス が 使用 する 標準 I \/ O ストリーム は 変更 さ れ ま せ ん 。 
それぞれ 起動 時 の stdin ・ stderr ・ st dout の 値 を 保存 し ま す 。 
終了 処理 時 や 、 不正 な オブジェクト が 指定 さ れ た 場合 に 元 の 値 に 復旧 する ため に 使用 し ま す 。 
捕捉 さ れ な い 例外 が 発生 し た 時 、 出力 さ れ る トレース バック 情報 の 最大 レベル 数 を 指定 する 整数 値 ( デフォルト 値 は 100 0 ) 。 
0 以下 の 値 が 設定 さ れ た 場合 、 トレース バック 情報 は 出力 さ れ ず 例外 型 と 例外 値 のみ が 出力 さ れ ま す 。 
Python インタープリタ の バージョン と ビルド 番号 ・ 使用 コンパイラ など の 情報 を 示 す 文字 列 で 、 ' バージョン ( # ビルド 番号 , ビルド 日付 ,  ビルド 時間 ) [ コンパイラ ] ' と な り ま す 。 
先頭 の 三 文字 は 、 バージョン ごと の インストール 先 ディレクトリ 内 を 識別 する ため に 使用 さ れ ま す 。 
例 : 
使用 中 の インタープリタ の C  API バージョン 。 
Python と 拡張 モジュール 間 の 不 整合 を デバッグ する 場合 など に 利用 でき ま す 。 
バージョン 番号 を 示 す 5 つ の 値 の タプル : major , minor , micro , releaselevel , serial releaselevel 以外 は 全て 整数 で す 。 
releaselevel の 値 は 、 'alpha' , 'beta' , 'candidate' , or  'final ' の 何れ か で す 。  Python  2 . 0 の version _info は 、 ( 2 ,  0 ,  0 ,  'final ' ,  0 ) と な り ま す 。 
バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
を 参照 し て くださ い 。 
Windows プラットフォーム で 、 レジストリ の キー と な る バージョン 番号 。  Python  DLL の 文字 列 リソース  1000 に 設定 さ れ て い ま す 。 
通常 、 この 値 は version の 先頭 三 文字 と な り ま す 。 
この モジュール で は  Unix  syslog  ライブラリ ルーチン 群 へ の インタフェース を 提供 し ま す 。 
syslog  の 便宜 レベル に 関 する 詳細 な 記述 は  Unix  マニュアル ページ を 参照 し て くださ い 。  この モジュール で は 以下 の 関数 を 定義 し て い ま す : 
文字 列  message  を システム ログ 機構 に 送信 し ま す 。 
末尾 の 改行 文字 は 必要 に 応 じ て 追加 さ れ ま す 。 
各 メッセージ は  facility  および level  から な る 優先 度 で タグ 付け さ れ ま す 。 
オプション の priority  引数 は メッセージ の 優先 度 を 定義 し ま す 。  標準 の 値 は  LOG _ INFO  で す 。 
priority  中 に 、 便宜 レベル が  ( LOG _ INFO | LOG _ USER  の よう に )  論理 和 を 使 っ て コード 化 さ れ て い な い 場合 、 openlog ( )  を 呼び出 し た 際 の 値 が 使 わ れ ま す 。 
標準 以外 の ログ オプション は 、 syslog ( )  の 呼び出し に 先立 っ て openlog ( )  で ログ ファイル を 開 く 際 、 明示 的 に 設定 する こと が でき ま す 。 
標準 の 値 は  ( 通常 ) indent = 'syslog ' 、 logopt  =  0 、 facility =  LOG _ USER  で す 。 
ident  引数 は 全て の メッセージ の 先頭 に 付加 する 文字 列 で す 。 
オプション の  logopt  引数 は ビット フィールド の 値 に な り ま す  - と り う る 組み合わせ 値 に つ い て は 以下 を 参照 し て くださ い 。 
オプション の  facility  引数 は 、 便宜 レベル コード の 設定 が 明示 的 に な さ れ て い な い メッセージ に 対 する 、 標準 の 便宜 レベル を 設定 し ま す 。 
ログ ファイル を 閉じ ま す 。 
優先 度 マスク を  maskpri  に 設定 し 、 以前 の マスク 値 を 返 し ま す 。 
maskpri  に 設定 さ れ て い な い 優先 度 レベル を 持 っ た  syslog ( ) の 呼び出し は 無視 さ れ ま す 。 
標準 で は 全て の 優先 度 を ログ 出力 し ま す 。 
関数  LOG _ MASK ( pri)  は 個々 の 優先 度  pri  に 対 する 優先 度 マスク を 計算 し ま す 。 
関数  LOG _ UPTO ( pri)  は 優先 度 pri  まで の 全て の 優先 度 を 含 む よう な マスク を 計算 し ま す 。 
この モジュール で は 以下 の 定数 を 定義 し て い ま す : 
優先 度  ( 高 い 優先 度 順 ) : 
LOG _ EMERG 、  LOG _ ALERT 、  LOG _ CRIT 、 LOG _ ERR 、  LOG _ WARNING 、  LOG _ NOTICE 、 LOG _ INFO 、  LOG _ DEBUG 。 
便宜 レベル : 
LOG _ KERN 、  LOG _ USER 、  LOG _ MAIL 、 LOG _ DAEMON 、  LOG _ AUTH 、  LOG _ LPR 、 LOG _ NEWS 、  LOG _ UUCP 、  LOG _ CRON 、 および LOG _ LOCAL 0  から  LOG _ LOCAL 7 。 
ログ オプション : 
syslog . h  で 定義 さ れ て い る 場合 、 LOG _ PID 、  LOG _ CONS 、  LOG _ NDELAY 、 LOG _ NOWAIT 、 および  LOG _ PERROR 。 
差し当たり 、 この モジュール は スクリプト と し て 呼び出 す こと を 意図 し て い ま す 。  しかし 、 IDE 上 に インポート し て 下 で 説明 する 関数 check ( ) を 使 う こと が でき ま す 。 
警告 : この モジュール が 提供 する API を 将来 の リリース で 変更 する 確率 が 高 い で す 。  この よう な 変更 は 後方 互換 性 が な い か も しれ ま せ ん 。 
file_or_dir が ディレクトリ で あ っ て シンボリック リンク で な い とき に 、 file_or_dir と い う 名前 の ディレクトリ ツリー を 再帰 的 に 下 っ て 行 き 、 この 通り道 に 沿 っ て すべて の . py ファイル を 変更 し ま す 。 
file_or_dir が 通常 の Python ソース ファイル の 場合 に は 、 問題 の あ る 空白 を チェック し ま す 。 
診断 メッセージ は print 文 を 使 っ て 標準 出力 に 書き込 ま れ ま す 。 
冗長 な メッセージ を プリント する か どう か を 示 す フラグ 。  スクリプト と し て 呼び出 さ れ た 場合 は 、 - v オプション に よ っ て 増加 し ま す 。 
スクリプト と し て 呼び出 さ れ た 場合 は 、 - q オプション に よ っ て 真 に 設定 さ れ ま す 。 
あいまい な インデント を 検出 し た 場合 に tokeneater ( ) に よ っ て 発生 さ せ られ ま す 。  check ( ) で 捕捉 さ れ 処理 さ れ ま す 。 
この 関数 は 関数 tokenize. tokenize ( ) へ の コール バック パラメータ と し て check ( ) に よ っ て 使 わ れ ま す 。 
Python ソース コード の 字句 解析 器 。  . 
tarfile  モジュール は 、 tar  アーカイブ を 読 ん で 作成 する こと が でき る よう に し ま す 。  いく つ か の 事実 と 外観 : 
gzip  と  bzip 2  で 圧縮 さ れ た アーカイブ を 読み書き し ま す 。 
POSIX  100 3 . 1 - 1990  準拠 あるいは  GNUtar  互換 の アーカイブ を 作成 し ま す 。 
GNUtar  拡張 機能  長 い 名前 、  longlink  および sparse  を 読 み ま す 。 
GNUtar  拡張 機能 を 使 っ て 、 無 制限 長 さ の パス 名 を 保存 し ま す 。 
ディレクトリ 、 普通 の ファイル 、 ハードリンク 、 シンボリック リンク 、 fifo 、 キャラクタ デバイス および ブロック デバイス を 処理 し ま す 。  また 、 タイム スタンプ 、 アクセス 許可 および オーナー の よう な ファイル 情報 の 取得 および 保存 が 可能 で す 。 
テープ デバイス を 取り扱 う こと が でき ま す 。 
パス 名  name に  TarFile  オブジェクト を 返 し ま す 。  TarFile  オブジェクト に 関 する 詳細 な 情報 に つ い て は 、 TarFile  オブジェクト  ( セクション  7 . 1 9 . 1 ) を 見 て 下さ い 。 
mode  は 'filemode [: compression ] ' の 形式 を と る 文字 列 で な けれ ば な り ま せ ん . デフォルト の 値 は  ' r ' で す . 以下 に mode の とり う る 組み合わせ 全て を 示 し ま す . 
動作 
透過 な 圧縮 つき で 読み込 む ため に オープン し ま す ( 推奨 ) 。 
圧縮 なし で 排他 的 に 読み込 む ため に オープン し ま す 。 
gzip  圧縮 で 読み込 む ため に オープン し ま す 。 
bzip 2  圧縮 で 読み込 む ため に オープン し ま す 。 
' a ' また は ' a :'
圧縮 なし で 追加 する ため に オープン し ま す 。 
' w ' また は ' w :'
非 圧縮 で 書き込 む ため に オープン し ま す 。 
gzip  圧縮 で 書き込 む ため に オープン し ま す 。 
bzip 2  圧縮 で 書き込 む ため に オープン し ま す 。 
'a : gz '  あるいは  'a : bz 2 ' は 可能 で は な い こと に 注意 し て 下さ い 。  もし  mode が 、 ある ( 圧縮 し た ) ファイル を 読み込 み 用 に オープン する の に 、 適 し て い な い なら 、 ReadError が 発生 し ま す 。 
これ を 防 ぐ に は mode ' r ' を 使 っ て 下さ い 。 
もし 圧縮 メソッド が サポート さ れ て い な けれ ば 、 CompressionError  が 発生 し ま す 。  もし  fileobj が 指定 さ れ て い れ ば 、 それ は  name で オープン さ れ た ファイル オブジェクト の 代替 と し て 使 う こと が でき ま す 。 
特別 な 目的 の ため に 、 mode の 2 番 目 の 形式 : ' ファイル モード | [ 圧縮 ] ' が あ り ま す 。 
この 形式 を 使 う と , open が 返 す の は データ を ブロック から な る ストリーム と し て 扱 う TarFile  オブジェクト に な り ま す . この 場合 , ファイル に 対 し て ランダム な  seek  を 行え な く な り ま す . fileobj  を 指定 する 場合 , read ( ) および write ( )  メソッド を 持 つ 任意 の オブジェクト に でき ま す . bufsize  に は ブロック サイズ を 指定 し ま す . デフォルト は 20 *  512  バイト で す 。 
sys . stdin  , ソケット ファイル オブジェクト , テーブ デバイス と 組み合わせ る 場合 に は この 形式 を 使 っ て くださ い . ただし , この よう な TarFile  オブジェクト に は ランダム アクセス を 行え な い と い う 制限 が あ り ま す . 例  ( セクション  7 . 1 9 . 3 ) を 参照 し て くださ い 。 
現在 可能 な モード は : 
モード 
非 圧縮  tar  ブロック の  ストリーム  を 読み込み に オープン し ま す 。 
gzip  圧縮  ストリーム を 読み込み に オープン し ま す 。 
bzip 2  圧縮  ストリーム  を 読み込み に オープン し ま す 。 
非 圧縮  ストリーム を 書き込み に オープン し ま す 。 
gzip  圧縮  ストリーム  を 書き込み に オープン し ま す 。 
bzip 2  圧縮  ストリーム を 書き込み に オープン し ま す 。 
tar  アーカイブ を 読 ん だり 、 書 い たり する ため の クラス で す 。 
この クラス を 直接 使 わ ず , 代わり に  open ( )  を 使 っ て くださ い . TarFile  オブジェクト  ( 7 . 1 9 . 1  節 )  を 参照 し て くださ い . 
もし  name が tar  アーカイブ ファイル で あ り , tarfile モジュール で 読み 出せ る 場合 に True を 返 し ま す . 
クラス TarFile Compat
非 圧縮  tar  アーカイブ の ため の 定数 。 
圧縮  tar  アーカイブ の ため の 定数 。 
すべて の tarfile  例外 の ため の 基本 クラス で す 。 
tar  アーカイブ が オープン さ れ た 時 、 tarfile  モジュール で 操作 でき な い か 、 あるいは 何 か 無効 で あ る とき 発生 し ま す 。 
圧縮 方法 が サポート さ れ て い な い か 、 あるいは データ を 正し く デコード でき な い 時 に 発生 し ま す 。 
ストリーム 風 の  TarFile  オブジェクト で 典型 的 な 制限 の ため に 発生 し ま す 。 
extract ( ) を 使 っ た 時 、 もし TarFile . error level 
= =  2 の  フェータル で な い  エラー に 対 し て だけ 発生 し ま す 。 
参考 :  zipfile 
標準 モジュール の ドキュメント 。 
GNUtar  マニュアル 、 標準 セクション 
GNUtar  拡張 機能 を 含 む 、 tar  アーカイブ ファイル の ため の ドキュメント 。 
7 . 1 9 . 1  TarFile  オブジェクト 
telnetlib  モジュール で は 、 Telnet  プロトコル を 実装 し て い る Telnet  クラス を 提供 し ま す 。 
Telnet  プロトコル に つ い て の 詳細 は RFC  85 4  を 参照 し て くださ い 。 
加え て 、 この モジュール で は  Telnet プロトコル に おけ る 制御 文字  ( 下 を 参照 し て くださ い )  と 、 telnet  オプション に 対 する シンボル 定数 を 提供 し て い ま す 。 
telnet  オプション に 対 する シンボル 名 は  arpa\/telnet . h  の  TELOPT _ が な い 状態 で の 定義 に 従 い ま す 。 
伝統 的 に  arpa\/telnet . h  に 含め られ て い な い telnet  オプション の シンボル 名 に つ い て は 、 この モジュール の ソース コード 自体 を 参照 し て くださ い 。 telnet  コマンド の シンボル 定数 は 、 IAC 、 DONT 、 DO 、 WONT 、 WILL 、 SE ( サブ ネゴシエーション 終了 ) 、 NOP  ( 何 も し な い ) 、 DM  ( データ マーク ) 、 BRK  ( ブレーク ) 、 IP  ( プロセス 割り込み ) 、 AO  ( 出力 中断 ) 、 AYT  ( 応答 確認 ) 、 EC  ( 文字 削除 ) 、 EL  ( 行 削除 ) 、 GA  ( 進め ) 、 SB  ( サブ ネゴシエーション 開始 )  で す 。 
クラス Telnet 
Telnet  は  Telnet  サーバ へ の 接続 を 表現 し ま す 。 
標準 で は 、 Telnet  クラス の インスタンス は 最初 は サーバ に 接続 し て い ま せ ん ;  接続 を 確立 する に は  open ( )  を 使 わ な けれ ば な り ま せ ん 。 
詳し く は 下記 の 個々 の 説明 を 参照 し て くださ い 。 
RFC  85 4 ,  Telnet  プロトコル 仕様  ( Telnet  Protocol  Specification ) 
Telnet  プロトコル の 定義 。 
1 1 . 1 4 . 1  Telnet  オブジェクト 
6 . 21 . 4 . 9  コール バック の 例 6 :  可変 個 の 引数 
この モジュール を 使 う と 、 一時 的 な ファイル や ディレクトリ を 生成 でき ま す 。 
この モジュール は サポート さ れ て い る 全て の プラットフォーム で 利用 可能 で す 。  バージョン  2 . 3  の  Python  で は 、 この モジュール に 対 し て セキュリティ を 高め る 為 の 見直し が 行 わ れ ま し た 。 
現在 で は 新た に  3  つ の 関数 、 NamedTemporaryFile ( ) 、  mkstemp ( ) 、 および mkdtemp ( )  が 提供 さ れ て お り 、 安全 で な い  mktemp  を 使 い つづけ る 必要 を なく し ま し た 。 
この モジュール で 生成 さ れ る 一時 ファイル は もはや プロセス 番号 を 含 み ま せ ん ;  その 代わ り 、 6  桁 の ランダム な 文字 から な る 文字 列 が 使 わ れ ま す 。  また 、 ユーザ から 呼び出し 可能 な 関数 は 全て 、 一時 ファイル の 場所 や 名前 を 直接 操作 でき る よう に する ため の 追加 の 引数 を と る よう に な り ま し た 。 
もはや 変数  tempdir  および  template  を 使 う 必要 は あ り ま せ ん 。 
以前 の バージョン と の 互換 性 を 維持 する ため に 、 引数 の 順番 は 多少 変 で す ;  明確 さ の ため に キー ワード 引数 を 使 う こと を お 勧め し ま す 。  この モジュール で は ユーザ から 呼び出し 可能 な 以下 の 関数 を 定義 し て い ま す : 
一時 的 な 記憶 領域 と し て 使 う こと が でき る ファイル  ( また は ファイル 類似 の )  オブジェクト を 返 し ま す 。 
ファイル は  mkstemp  を 使 っ て 生成 さ れ ま す 。 
この ファイル は 閉じ られ る と  ( オブジェクト が ガーベジ コレクション さ れ た 際 に 、 暗黙 の うち に 閉じ られ る 場合 を 含 み ま す ) すぐ に 消去 さ れ ま す 。 
Unix 環境 で は 、 ファイル が 生成 さ れ る と すぐ に その ファイル の ディレクトリエントリ は 除去 さ れ て しま い ま す 。 
一方 、 他 の プラットフォーム で は この 機能 は サポート さ れ て い ま せ ん ;  従 っ て 、 コード を 書 く とき に は 、 この 関数 で 作成 し た 一時 ファイル を ファイル システム 上 で 見 る こと が でき る 、 あるいは でき な い と い う こと を あて に す べ き で は あ り ま せ ん 。  生成 さ れ た ファイル を 一旦 閉じ な く て も ファイル を 読み書き でき る よう に する ため に 、 mode  パラメタ は 標準 で  ' w + b '  に 設定 さ れ て い ま す 。 
この 関数 は ファイル が ファイル システム 上 で 見 る こと が でき る よう 保証 さ れ て い る 点 を 除 き 、 TemporaryFile ( )  と 全く 同じ に 働 き ま す 。 
( Unix で は 、 ディレクトリ  エントリ は unlink さ れ ま せ ん ) ファイル 名 は ファイル オブジェクト の  name  メンバ から 取得 する こと が でき ま す 。 
可能 な 限り 最も 安全 な 手段 で 一時 ファイル を 生成 し ま す 。 
使用 する プラットフォーム で os . open ( )  の O _ EXCL フラグ が 正し く 実装 さ れ て い る 限り 、 ファイル の 生成 で 競合 条件 が 起こ る こと は あ り ま せ ん 。 
この ファイル は 、 ファイル を 生成 し た ユーザ の ユーザ ID  から のみ 読み書き 可能 で す 。 
使用 する プラットフォーム に お い て 、 ファイル を 実行 可能 か どう か を 示 す 許可 ビット が 使 わ れ て い る 場合 、 ファイル は 誰 から も 実行 不可 な よう に 設定 さ れ ま す 。 
mkstemp ( )  は 開 か れ た ファイル を 扱 う ため の  OS  レベル の 値 と ファイル の 絶対 パス 名 が 順番 に 並 ん だ タプル を 返 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
可能 な 限り 安全 な 方法 で 一時 ディレクトリ を 作成 し ま す 。  ディレクトリ の 生成 で 競合 条件 は 発生 し ま せ ん 。 
mkdtemp ( )  は 新た に 生成 さ れ た ディレクトリ の 絶対 パス 名 を 返 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。  mkdtemp 
リリース  2 . 3  で 撤廃 さ れ ま し た 。 Use  mkstemp ( )  instead . 
一時 ファイル の 絶対 パス 名 を 返 し ま す 。  この パス 名 は 少な く とも この 関数 が 呼び出 さ れ た 時点 で は ファイル システム 中 に 存在 し な かっ た パス 名 で す 。 
prefix 、 prefix 、  suffix 、 および  dir 引数 は  mkstemp ( )  の もの と 同じ で す 。 
警告 : この 関数 を 使 う と プログラム の セキュリティ ホール に な る 可能 性 が あ り ま す 。 
この 関数 が 返 し た ファイル 名 を 返 し た 後 、 あなた が その ファイル 名 を 使 っ て 次 に 何 か を し よう と する 段階 に 至 る 前 に 、 誰 か 他 の 人間 が あなた に パンチ を くらわせ て しま う か も しれ ま せ ん 。 
この モジュール で は 、 一時 的 な ファイル 名 の 作成 方法 を 指定 する  2  つの グローバル 変数 を 使 い ま す 。 
これ ら の 変数 は 上記 の いずれ か の 関数 を 最初 に 呼び出 し た 際 に 初期 化 さ れ ま す 。 
関数 呼び出し を おこな う ユーザ は これ ら の 値 を 変更 する こと が でき ま す が 、 これ は お 勧め でき ま せ ん ; その 代わり に 関数 に 適切 な 引数 を 指定 し て くださ い 。 
この 値 が  None  以外 に 設定 さ れ た 場合 、 この モジュール で 定義 さ れ て い る 関数 全て の dir  引数 に 対 する 標準 の 設定 値 と な り ま す 。 tempdir  が 設定 さ れ て い な い か  None  の 場合 、 上記 の いずれ か の 関数 を 呼び出 し た 際 は 常 に 、 Python  は 標準 的 な ディレクトリ 候補 の リスト を 検索 し 、 関数 を 呼び出 し て い る ユーザ の 権限 で ファイル を 作成 でき る 最初 の ディレクトリ 候補 を  tempdir  に 設定 し ま す 。 
リスト は 以下 の よう に な っ て い ま す : 
環境 変数  TMPDIR  で 与え られ て い る ディレクトリ 名 。 
環境 変数  TEMP  で 与え られ て い る ディレクトリ 名 。 
環境 変数  TMP  で 与え られ て い る ディレクトリ 名 。 
プラットフォーム 依存 の 場所 : 
Macintosh  で は  Temporary  Items  フォルダ 。 
RiscOS  で は 環境 変数  Wimp$ ScrapDir  で 与え られ て い る ディレクトリ 名 。 
その 他 の 全て の プラットフォーム で は 、 \/tmp、 \/var \/tmp 、 および  \/ usr\/tmp  の 順 。 
最後 の 手段 と し て 、 現在 の 作業 ディレクトリ 。 
現在 選択 さ れ て い る 、 テンポラリ ファイル を 作成 する ため の ディレクトリ を 返 し ま す 。 tempdir  が  None  で な い 場合 、 単に その 内容 を 返 し ま す ;  そう で な い 場合 に は 上 で 記述 さ れ て い る 検索 が 実行 さ れ 、 その 結果 が 返 さ れ ま す 。 
リリース  2 . 0  で 撤廃 さ れ ま し た 。  代わり に  gettempprefix ( )  を 使 っ て くださ い 。 
この 値 に  None  以外 の 値 を 設定 し た 場合 、 mktemp ( ) が 返 す ファイル 名 の ディレクトリ 部 を 含 ま な い 先頭 部分  ( プレフィクス )  を 定義 し ま す 。 
ファイル 名 を 一意 に する ため に 、  6  つ の ランダム な 文字 および 数字 が この プレフィクス の 後 に 追加 さ れ ま す 。 
Windows  で は 、 標準 の プレフィクス は ~ T  で す ;  他 の システム で は tmp で す 。 
この モジュール の 古 い バージョン で は 、 os . fork ( )  を 呼び出 し た 後 に  template  を  None  に 設定 する こと が 必要 で し た ;  この 仕様 は バージョン  1 . 5 . 2  から は 必要 な く な り ま し た 。 
一時 ファイル を 生成 する 際 に 使 わ れ る ファイル 名 の 先頭 部分 を 返 し ま す 。 
この 先頭 部分 に は ディレクトリ 部 は 含 ま れ ま せ ん 。 
変数  template  を 直接 読み出 す より も この 関数 を 使 う こと を 勧め ま す 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
この モジュール で は 端末  I \/ O  制御 の ため の  POSIX  準拠 の 関数 呼び出 し インタフェース を 提供 し ま す 。 
これ ら 呼び出し の ため の 完全 な 記述 に つ い て は 、 POSIX  また は  Unix  マニュアル ページ を 参照 し て くださ い 。 
POSIX  termios  形式 の 端末 制御 を サポート する  Unix  の バージョン で  ( かつ インストール 時 に 指定 し た 場合 に )  のみ 利用 可能 で す 。  この モジュール の 関数 は 全て 、 ファイル 記述 子  fd  を 最初 の 引数 と し て とり ま す 。 
ファイル 記述 子  fd  の 端末 属性 を 含 む リスト を 返 し ま す 。  その 形式 は : [ 
端末 設定 フラグ および 端末 速度 の 解釈 、 および 配列  cc  の インデクス 検索 は 、 termios  で 定義 さ れ て い る シンボル 定数 を 使 っ て 行 わ な けれ ば な り ま せ ん 。 
ファイル 記述 子  fd  の 端末 属性 を  attributes  から 取り出 し て 設定 し ま す 。  attributes  は tcgetattr ( )  が 返 す よう な リスト で す 。 
引数  when  は 属性 が いつ 変更 さ れ る か を 決定 し ま す : TCSA NOW  は 即時 変更 を 行 い 、 TCSAFLUSH  は 現在 キュー さ れ て い る 出力 を 全て 転送 し 、 全て の キュー さ れ て い る 入力 を 無視 し た 後 に 変更 を 行 い ま す 。 
ファイル 記述 子  fd  に ブレーク を 送信 し ま す 。 
duration  を ゼロ に する と 、  0 . 25 - 0 . 5  秒間 の ブレーク を 送信 し ま す ;  duration  の 値 が ゼロ で な い 場合 、 その 意味 は システム 依存 で す 。 
ファイル 記述 子  fd  に 書き込 ま れ た 全て の 出力 が 転送 さ れ る まで 待 ち ま す 。 
ファイル 記述 子  fd  に キュー さ れ た データ を 無視 し ま す 。 
どの キュー か は queue  セレクタ で 指定 し ま す :  TCIFLUSH  は 入力 キュー 、  TCOFLUSH  は 出力 キュー 、 TCIOFLUSH  は 両方 の キュー で す 。 
ファイル 記述 子  fd  の 入力 また は 出力 を サスペンド し たり レジューム し たり し ま す 。 
引数  action  は 出力 を サスペンド する  TCOOFF 、 出力 を レジューム する  TCOON  、 入力 を サスペンド する TCIOFF  、 入力 を レジューム する  TCION  を と る こと が でき ま す 。 
一般 的 な 端末 制御 操作 の ため の 便利 な 関数 。 
5 . 4 . 1  test パッケージ の ため の ユニット テスト を 書 く 
test  パッケージ に は 、 Python  用 の 全て の 回帰 テスト と 、 test . test _ support および test . regrtest  モジュール が 入 っ て い ま す 。 
test . test _ support  は テスト を 充実 さ せ る ため に 使 い 、 test . regtest  は テスト スイート を 駆動 する の に 使 い ま す 。 
test パッケージ 内 の 各 モジュール の うち 、 名前 が " test _ " で 始ま る もの は 、 特定 の モジュール や 機能 に 対 する テスト スイート で す 。 
新し い テスト は すべて unittest モジュール を 使 っ て 書 く よう に し て くださ い ;  必ず しも unittest  を 使 う 必要 は な い の で す が 、 unittest  は テスト を より 柔軟 に し 、 メンテナンス を より 簡単 に し ま す 。 
古 い テスト の いく つ か は doctest  を 利用 し て お り 、 ` ` 伝統 的 な ' ' テスト 形式 に な っ て い ま す 。 
これ ら の テスト 形式 を カバー する 予定 は あ り ま せ ん 。 
PyUnit  回帰 テスト を 書 く 。 
ドキュメンテーション 文字 列 に 埋め込 ま れ た テスト 。 
5 . 4 . 2  test . regrtest を 使 っ て テスト を 実行 する  5 . 4 . 3  test . test _ support- - テスト の ため の ユーティリティ 関数 
5 . 4 . 2  test . regrtest を 使 っ て テスト を 実行 する 
5 . 4 . 3  test . test _ support- - テスト の ため の ユーティリティ 関数  test . test _ support  モジュール で は 、  Python  の 回帰 テスト に 対 する サポート を 提供 し て い ま す 。 
この モジュール は 次 の 例外 を 定義 し て い ま す : 
テスト が 失敗 し た とき 送出 さ れ る 例外 で す 。 
test . test _ support  モジュール で は 、 以下 の 定数 を 定義 し て い ま す : 
冗長 な 出力 が 有効 な 場合 は True  で す 。  実行 中 の テスト に つ い て の より 詳細 な 情報 が 欲し い とき に チェック し ま す 。 
verbose  は  test . regrtest  に よ っ て 設定 さ れ ま す 。 
have _unicode  ユニコード サポート が 利用 可能 なら ば True  に な り ま す 。 
実行 中 の インタプリタ が  Jython  なら ば True  に な り ま す 。 
一時 ファイル を 作成 する パス に 設定 さ れ ま す 。  作成 し た 一時 ファイル は 全て 閉じ 、 unlink  ( 削除 )  せ ね ば な り ま せ ん 。 
test . test _ support  モジュール で は 、 以下 の 関数 を 定義 し て い ま す : 
モジュール 名 module_name を sys . modules から 取り除 き 、 モジュール の バイト コンパイル 済み ファイル を 全て 削除 し ま す 。 
resource  が 有効 で 利用 可能 なら ば True を 返 し ま す 。  利用 可能 な リソース の リスト は 、 test . regrtest が テスト を 実行 し て い る 間 のみ 設定 さ れ ま す 。 
resource  が 利用 でき な けれ ば 、 ResourceDenied を 送出 し ま す 。 
filename と い う 名前 の ファイル へ の パス を 返 し ま す 。 
渡 さ れ た  unittest . TestCase  サブ クラス を 実行 し ま す 。  この 関数 は 名前 が  " test _ " で 始ま る メソッド を 探 し て 、 テスト を 個別 に 実行 し ま す 。 
この 方法 を テスト の 実行 方法 と し て 推奨 し て い ま す 。  run_suite 
unittest . TestSuite  の インスタンス  suite を 実行 し ま す 。  オプション 引数 testclass  は テスト スイート 内 の テスト クラス の 一 つ を 受け取 り 、 指定 する と テスト スイート が 存在 する 場所 に つ い て さらに 詳細 な 情報 を 出力 し ま す 。 
text w rap モジュール で は 、 二 つ の 簡易 関数 wrap ( ) と fill ( ) 、 そして 作業 の すべて を 行 う クラス Text Wrapper と ユーティリティ 関数  dedent ( )  を 提供 し て い ま す 。 
単に 一 つ や 二 つ の テキスト 文字 列 の 折り返 し また は 詰め込み を 行 っ て い る なら ば 、 簡易 関数 で 十 分 間に合 い ま す 。  そう で な けれ ば 、 効率 の ため に Text Wrapper の インスタンス を 使 っ た 方 が 良 い で しょ う 。 
text ( 文字 列 ) 内 の 段落 を 一 つ だけ 折り返し を 行 い ま す 。  したが っ て 、 すべて の 行 が 高々 width 文字 の 長 さ に な り ま す 。 
text 内 の 段落 を 一 つ だけ 折り返し を 行 い 、 折り返し が 行 わ れ た 段落 を 含 む 一 つ の 文字 列 を 返 し ま す 。 fill ( ) は 
" \n " . join ( wrap ( text , . . .) )  の 省略 表現 で す 。 
特に 、 fill ( ) は wrap ( ) と まったく 同じ 名前 の キー ワード 引数 を 受け取 り ま す 。 
wrap ( ) と fill ( ) の 両方 とも が Text Wrapper インスタンス を 作成 し 、 その 一 つ の メソッド を 呼び出 す こと で 機能 し ま す 。 
クラス Text Wrapper
Text Wrapper コンストラクタ は たくさん の オプション の キー ワード 引数 を 受け取 り ま す 。 
それぞれ の 引数 は 一 つ の インスタンス 属性 に 対応 し ま す 。  したが っ て 、 例えば 、 
と 同じ で す 。 
あなた は 同じ Text Wrapper オブジェクト を 何 回 も 再 利用 でき ま す 。 
また 、 使用 中 に インスタンス 属性 へ 代入 する こと で その オプション の どれ で も 変更 でき ま す 。 
Text Wrapper インスタンス 属性 ( と コンストラクタ の キー ワード 引数 ) は 以下 の 通り で す : 
( デフォルト :  70 )  折り返し が 行 わ れ る 行 の 最大 の 長 さ 。 
入力 行 に width より 長 い 単一 の 語 が 無 い 限り 、 Text Wrapper は width 文字 より 長 い 出力 行 が 無 い こと を 保証 し ま す 。 
( デフォルト :  True )  もし 真 なら ば 、 その とき は text 内 の すべて の タブ 文字 は text の expand_tabs ( ) メソッド を 用い て 空白 に 展開 さ れ ま す 。 
( デフォルト :  True )  もし 真 なら ば 、 タブ 展開 の 後 に 残 る ( string . whitespace に 定義 さ れ た ) 空白 文字 の それぞれ が 一 つ の 空白 と 置き換え られ ま す 。 
( デフォルト : '')  折り返し が 行 わ れ る 出力 の 一行 目 の 先頭 に 付け られ る 文字 列 。 
一行 目 の 折り返し の 長 さ に な る まで 含め られ ま す 。 
( デフォルト : '')  一行 目 以外 の 折り返し が 行 わ れ る 出力 の すべて の 行 の 先頭 に 付け られ る 文字 列 。 
一行 目 以外 の 各行 が 折り返し の 長 さ まで 含め られ ま す 。 
( デフォルト :  False )  もし 真 なら ば 、 Text Wrapper は 文 の 終わり を 見つけ よ う と し 、 確実 に 文 が ちょうど 二 つ の 空白 で 常 に 区切 ら れ て い る よう に し ま す 。 
これ は 一般 的 に 固定 スペース フォント の テキスト に 対 し て 望まし い で す 。 
しかし 、 文 の 検出 アルゴリズム は 完全 で は あ り ま せ ん :  文 の 終わり に は 、 後ろ に 空白 が あ る " . " 、 " ! " また は " ? " の 中 の 一 つ 、 こと に よ る と " " " あるいは " ' " が 付随 する 小 文字 が あ る と 仮定 し て い ま す 。 
これ に 伴 う 一 つ の 問題 は 
の ` ` Dr . ' ' と 
の `` Spot . ' ' の 間 の 差異 を 検出 でき な い アルゴリズム で す 。 
fix_ sentence_endings は デフォルト で 偽 で す 。 
文 検出 アルゴリズム は ` ` 小 文字 ' ' の 定義 の ため に string . lowercase に 依存 し 、 同一行 の 文 を 区切 る ため に ピリオド の 後 に 二 つ の 空白 を 使 う 慣習 に 依存 し て い る ため 、 英文 テキスト に 限定 さ れ た もの で す 。 
( デフォルト :  True )  もし 真 なら ば 、 その とき width より 長 い 行 が 確実 に な い よう に する ため に 、 width より 長 い 語 は 切 ら れ ま す 。 
偽 なら ば 、 長 い 語 は 切 ら れ な い で しょ う 。  そして 、 width より 長 い 行 が あ る か も しれ ま せ ん 。 
( width を 超え る 分 を 最小 に する ため に 、 長 い 語 は 単独 で 一行 に 置 か れ る で しょ う 。  ) 
Text Wrapper は モジュール レベル の 簡易 関数 に 類似 し た 二 つ の 公開 メソッド も 提供 し ま す : 
text ( 文字 列 ) 内 の 段落 を 一 つ だけ 折り返し を 行 い ま す 。  したが っ て 、 すべて の 行 は 高々 width 文字 で す 。 
すべて の ラッピング オプション は Text Wrapper インスタンス の インスタンス 属性 から 取 ら れ て い ま す 。  最後 に 改行 の 無 い 出力 さ れ た 行 の リスト を 返 し ま す 。 
text 内 の 段落 を 一 つ だけ 折り返し を 行 い 、 折り返し が 行 わ れ た 段落 を 含 む 一 つ の 文字 列 を 返 し ま す 。 
この モジュール は マルチ スレッド ( 別名  軽量 プロセス ( light - weight processes ) また は タスク ( tasks) ) に 用い られ る 低 レベル プリミティブ を 提供 し ま す - - グローバル データ 空間 を 共有 する マルチ スレッド を 制御 し ま す 。 
同期 の ため の 単純 な ロック ( 別名  mutexes また は バイナリ セ マフォ ( binary semaphores ) ) が 提供 さ れ て い ま す 。 
この モジュール は オプション で す 。 
Windows ,  Linux ,  SGI  IRIX ,  Solaris  2 . x 、 そして 同じ よう な POSIX スレッド ( 別名 ` `pthread ' ') 実装 の システム 上 で サポート さ れ ま す 。 
thread を 使用 する こと の でき な い システム で は 、 
は この モジュール と 同じ インターフェース を 持 ち 、 置き換え て 使用 する こと が でき ま す 。 
定数 と 関数 は 以下 の よう に 定義 さ れ て い ま す : 
スレッド 特有 の エラー で 送出 さ れ ま す 。 
これ は ロック オブジェクト の タイプ で す 。 
新し い スレッド を 開始 し て 、 その ID を 返 し ま す 。 
スレッド は 引数 リスト args ( タプル で な けれ ば な り ま せ ん ) の 関数 function を 実行 し ま す 。 
オプション 引数 kwargs は キー ワード 引数 の 辞書 を 指定 し ま す 。  関数 が 戻 る とき 、 スレッド は 黙 っ て 終了 し ま す 。 
サブ スレッド は この 関数 を 使 っ て メイン スレッド に 割り込み を かけ る こと が でき ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
SystemExit 例外 を 送出 し ま す 。 
それ が 捕え られ な い とき は 、 黙 っ て スレッド を 終了 さ せ ま す 。 
新し い ロック オブジェクト を 返 し ま す 。 
ロック の メソッド は この 後 に 記述 さ れ ま す 。 
ロック は 初期 状態 と し て アン ロック 状態 で す 。 
現在 の スレッド の ` スレッド ID ' を 返 し ま す 。 
これ は 0 で な い 整数 で す 。 
この 値 は 直接 の 意味 を 持 っ て い ま せ ん ; 例えば スレッド 特有 の データ の 辞書 に 索引 を つけ る ため の よう な 、 マジック クッキー と し て 意図 さ れ て い ま す 。 
スレッド が 終了 し 、 他 の スレッド が 作 ら れ た とき 、 スレッド ID は 再 利用 さ れ る か も しれ ま せ ん 。 
ロック オブジェクト は 次 の よう な メソッド を 持 っ て い ま す : 
オプション の 引数 なし で 使用 する と 、 この メソッド は 他 の スレッド が ロック し て い る か どう か に かかわ ら ず ロック を 獲得 し 、 None  を 返 し ま す 。 
ただし 他 の スレッド が すでに ロック し て い る 場合 に は 解除 さ れ る まで 待 っ て から ロック を 獲得 し ま す  ( 同時 に ロック を 獲得 でき る スレッド は ひと つ だけ で あ り 、 これ こそ が ロック の 存在 理由 で す ) 。 
なお 、 引数 を 与え た 場合 、 ロック を 獲得 する と True 、 でき な かっ た とき に は  False  を 返 し ま す 。 
ロック を 解放 し ま す 。 
その ロック は 既に 獲得 さ れ た もの で な けれ ば な り ま せ ん が 、 しかし 同じ スレッド に よ っ て 獲得 さ れ た もの で あ る 必要 は あ り ま せ ん 。 
ロック の 状態 を 返 し ま す :  同じ スレッド に よ っ て 獲得 さ れ た もの なら True 、 違 う の なら False を 返 し ま す 。 
スレッド は 割り込み と 奇妙 な 相互 作用 を し ま す : KeyboardInterrupt 例外 は 任意 の スレッド に よ っ て 受け取 ら れ ま す 。 
モジュール が 利用 可能 な とき 、 割り込み は 常 に メイン スレッド へ 行 き ま す 。 
)  sys . exit ( ) を 呼び出 す 、 あるいは SystemExit 例外 を 送出 する こと は 、 exit ( ) を 呼び出 す こと と 同じ で す 。 
I \/ O 待ち を ブロック する か も しれ な い 全て の 組込み 関数 が 、 他 の スレッド の 走行 を 許 す わけ で は あ り ま せ ん 。 
( ほとんど の 一般 的 な もの  ( time. sleep ( ) , 
file . read ( ) , select . select ( ) ) は 期待 通り に 働 き ま す 。 ) 
ロック の acquire ( ) メソッド に 割り込 む こと は でき ま せ ん - - KeyboardInterrupt 例外 は 、 ロック が 獲得 さ れ た 後 に 発生 し ま す 。 
メイン スレッド が 終了 し た とき 、 他 の スレッド が 生き残 る か どう か は 、 システム が 定義 し ま す 。 
ネイティブ スレッド 実装 を 使 う SGI  IRIX で は 生き残り ま す 。 
その 他 の 多く の システム で は 、 try  . . .  finally 節 を 実行 せ ず に 殺 さ れ たり 、 デストラクタ を 実行 せ ず に 殺 さ れ たり し ま す 。 
メイン スレッド が 終了 し た とき 、 それ の 通常 の クリーン アップ は 行な わ れ ず ( try  . . .  finally 節 が 尊重 さ れ る こと は 除 き ま す ) 、 標準 I \/ O ファイル は フラッシュ さ れ ま せ ん 。 
この モジュール で は 、 高 水準 の スレッド インタフェース を より 低 水準 な 
モジュール の 上 に 構築 し て い ま す 。 
また 、 
現在 の アクティブ な Thread オブジェクト の 数 を 返 し ま す 。  この 数 は  enumerate ( )  の 返 す リスト の 長 さ と 同じ で す 。 
新し い 条件 変数  ( condition  variable )  オブジェクト を 返 す ファクトリ 関数 で す 。  条件 変数 を 使 う と 、 ある 複数 の スレッド を 別 の スレッド の 通知 が あ る まで 待機 さ せ られ ま す 。 
関数 を 呼び出 し て い る 処理 の スレッド に 対応 する  Thread  オブジェクト を 返 し ま す 。 
関数 を 呼び出 し て い る 処理 の スレッド が  threading  モジュール で 生成 し た もの で な い 場合 、 限定 的 な 機能 しかも た な い ダミー スレッド オブジェクト を 返 し ま す 。 
現在 アクティブ な  Thread  オブジェクト 全て の リスト を 返 し ま す 。  リスト に は 、 デーモン スレッド  ( daemonic  thread ) 、 currentThread ( )  の 生成 する ダミー スレッド オブジェクト 、 そして 主 スレッド が 入 り ま す 。 
終了 し た スレッド と まだ 開始 し て い な い スレッド は 入 り ま せ ん 。 
新た な イベント オブジェクト を 返 す ファクトリ 関数 で す 。 
イベント は  set ( )  メソッド を 使 う と  True  に 、 clear ( )  メソッド を 使 う と  False  に セット さ れ る よう な フラグ を 管理 し ま す 。 
wait( )  メソッド は 、 全て の フラグ が 真 に な る まで ブロック する よう に な っ て い ま す 。 
スレッド ローカル データ  ( thread - local  data )  を 表現 する ため の クラス で す 。 
スレッド ローカル データ と は 、 値 が 各 スレッド 固有 に な る よう な データ で す 。 
スレッド ローカル データ を 管理 する に は 、 local  ( また は local の サブ クラス )  の インスタンス を 作成 し て 、 その 属性 に 値 を 代入 し ま す : 
インスタンス の 値 は スレッド ごと に 違 っ た 値 に な り ま す 。  詳細 と 例題 に つ い て は 、 _threading _ local  モジュール の ドキュメンテーション 文字 列 を 参照 し て くださ い 。 
新し い プリミティブ ロック  ( primitive  lock )  オブジェクト を 返 す ファクトリ 関数 で す 。 
スレッド が 一 度 プリミティブ ロック を 獲得 する と 、 それ 以後 の ロック 獲得 の 試み は ロック が 解放 さ れ る まで ブロック し ま す 。  どの スレッド で も ロック を 解放 でき ま す 。 
新し い セマフォ ( semaphore )  オブジェクト を 返 す ファクトリ 関数 で す 。 
セマフォ は 、 release ( ) を 呼び出 し た 数 から acquire ( ) を 呼び出 し た 数 を 引 き 、 初期 値 を 足 し た 値 を 表 す カウンタ を 管理 し ま す 。  acquire ( ) メソッド は 、 カウンタ の 値 を 負 に せ ず に 処理 を 戻 せ る まで 必要 なら ば 処理 を ブロック し ま す 。 
value  を 指定 し な い 場合 、 デフォルト の 値 は  1  に な り ま す 。 
新し い 有限 セマフォ ( boundedsemaphore )  オブジェクト を 返 す ファクトリ 関数 で す 。 
有限 セマフォ は 、 現在 の 値 が 初期 値 を 超過 し な い よう チェック を 行 い ま す 。 
超過 を 起こ し た 場合 、 ValueError  を 送出 し ま す 。 
たいてい の 場合 、 セマフォ は 限 ら れ た 容量 の リソース を 保護 する ため に 使 わ れ る もの で す 。 
従 っ て 、 あまり に も 頻繁 な セマフォ の 解放 は バグ が 生 じ て い る しるし で す 。 
value  を 指定 し な い 場合 、 デフォルト の 値 は  1  に な り ま す 。 
処理 中 の スレッド を 表 す クラス で す 。 
この クラス は 制限 の あ る 範囲 内 で 安全 に サブ クラス 化 でき ま す 。 
指定 時間 経過 後 に 関数 を 実行 する スレッド で す 。 
func  は 各 スレッド の run ( )  を 呼び出 す 前 に スレッド の sys . settrace ( )  に 渡 さ れ ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
func  は 各 スレッド の run ( )  を 呼び出 す 前 に スレッド の sys . settrace ( )  に 渡 さ れ ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
オブジェクト の 詳細 な インターフェース を 以下 に 説明 し ま す 。 
この モジュール の おおまか な 設計 は  Java  の スレッド モデル に 基づ い て い ま す 。  と は い え 、 Java  が ロック と 条件 変数 を 全て の オブジェクト の 基本 的 な 挙動 に し て い る の に 対 し 、  Python  で は これ ら を 別個 の オブジェクト に 分け て い ま す 。 
Python  の  Thread  クラス が サポート し て い る の は  Java  の  Thread  クラス の 挙動 の サブ セット に すぎ ま せ ん ;  現状 で は 、 優先 度  ( priority ) や スレッド グループ が な く 、 スレッド の 破壊  ( destroy ) 、 中断  ( stop ) 、 一時 停止  ( suspend ) 、 復帰  ( resume ) 、 割り込み  ( interrupt )  は 行え ま せ ん 。 
この モジュール で は 、 時刻 に 関 する さまざま な 関数 を 提供 し ま す 。 
ほとんど の 関数 が 利用 可能 で す が 、 全て の 関数 が 全て の プラットフォーム で 利用 可能 な わけ で は あ り ま せ ん 。 
この モジュール で 定義 さ れ て い る ほとんど の 関数 は 、 プラットフォーム 上 の 同名 の  C  ライブラリ 関数 を 呼び出 し ま す 。 
これ ら の 関数 に 対 する 意味 付け は プラットフォーム 間 で 異な る ため 、 プラットフォーム 提供 の ドキュメント を 読 ん で お く と 便利 で しょ う 。  まず いく つ か の 用語 の 説明 と 慣習 に つ い て 整理 し ま す 。 
エポック ( epoch ) 
は 、 時刻 の 計測 が はじま っ た 時点 の こと で す 。 
その 年 の  1  月  1  日 の 午前  0  時 に ` ` エポック から の 経過 時間 ' ' が  0  に な る よう に 設定 さ れ ま す 。 
Unix で は エポック は  1970  年 で す 。 
エポック が どう な っ て い る か を 知 る に は 、 gmtime ( 0 )  の 値 を 見 る と よ い で しょ う 。 
この モジュール の 中 の 関数 は 、 エポック 以前 あるいは 遠 い 未来 の 日付 や 時刻 を 扱 う こと が でき ま せ ん 。 
将来 カットオフ ( 関数 が 正し く 日付 や 時刻 を 扱え な く な る ) が 起き る 時点 は 、 C  ライブラリ に よ っ て 決ま り ま す 。 Unix で は カットオフ は 通常  203 8 
2000 年 問題  ( Y 2 K ) : 
Python  は プラットフォーム の  C  ライブラリ に 依存 し て い ま す 。  C  ライブラリ は 日付 および 時刻 を エポック から の 経過 秒 で 表現 する の で 、 一般 的 に  2000  年 問題 を 持 ち ま せ ん 。 
時刻 を 表現 する struct_time ( 下記 を 参照 し て くださ い ) を 入力 と し て 受け取 る 関数 は 一般 的 に  4  桁 表記 の 西 暦年 を 要求 し ま す 。 
こう し て 、 PYTHONY 2 K  を 空 文字 列 で な い 文字 列 に 設定 する こと で 、 西 暦年 の 入力 が すべて  4  桁 の 西 暦年 で な けれ ば な ら な い よう に する こと が でき ま す 。 
2 桁 の 西 暦 年 が 入力 さ れ た 場合 に は 、 POSIX  また は  X \/ Open  標準 に 従 っ て 変換 さ れ ま す :  69 - 99  の 西 暦年 は  1969 - 1999  と な り 、 0 - 68  の 西 暦年 は  2000 - 206 8  に な り ま す 。  100 - 1899  は 常 に 不正 な 値 に な り ま す 。 
この 仕様 は  Python  1 . 5 . 2 ( a 2 )  から 新た に 追加 さ れ た 機能 で あ る こと に 注意 し て くださ い ; それ 以前 の バージョン 、 すなわち  Python  1 . 5 . 1  および  1 . 5 . 2 a 1  で は 、 1900 以下 の 年 に 対 し て  1900  を 足 し ま す 。 
は 協定 世界 時  ( CoordinatedUniversal  Time )  の こと で す 
( 以前 は グリニッジ 標準 時 
また は  GMT と し て 知 ら れ て い ま し た ) 。 
UTC  の 頭 文字 の 並び は 誤り で は な く 、 英 仏 の 妥協 に よ る もの で す 。 
DST  は 夏 時間  ( Daylight Saving  Time ) 
の こと で 、 一 年 の うち 部分 的 に  1  時間 タイム ゾーン を 修正 する こと で す 。 
DST  の ルール は 不可思議 で  ( 局所 的 な 法律 で 定め られ て い ま す ) 、 年 ごと に 変わ る こと も あ り ま す 。 
C  ライブラリ は ローカル ルール を 記 し た テーブル を 持 っ て お り  ( 柔軟 に 対応 する ため 、 たいてい は システム ファイル から 読み込 ま れ ま す ) 、 この 点 に 関 し て は 唯一 の 真実 の 知識 の 源 で す 。 
多く の 現 時刻 を 返 す 関数  ( real -timefunctions )  の 精度 は 、 値 や 引数 を 表現 する の に 使 う 単位 から 想像 さ れ る より も 低 い か も 知れ ま せ ん 。 
例えば 、 ほとんど の  Unix  システム で 、 クロック の 一 刹那  ( ticks )  の 精度 は  1  秒  の  50  から  100  分 の  1  に 過ぎ ま せ ん 。  また 、 Mac  で は 時刻 は 秒 きっかり の とき 以外 正確 で は あ り ま せ ん 。 
反対 に 、 time( )  および  sleep ( )  は Unix  の 同等 の 関数 より まし な 精度 を 持 っ て い ま す :  時刻 は 浮動 小数 点 で 表 さ れ 、 time( )  は 可能 な かぎり 最も 正確 な 時刻 を  ( Unix  の gettimeofday ( )  が あ れ ば それ を 使 っ て )  返 し ま す 。  また  sleep ( )  に は ゼロ で な い 端数 を 与え る こと が でき ま す ( Unix  の select ( )  が あ れ ば 、 それ を 使 っ て 実装 し て い ま す ) 。 
gmtime( ) 、 localtime( ) 、 strptime( ) が 返 す 時刻 値 、  および  asctime( ) 、 mktime( ) 、 strftime( )  に 与え る 時刻 値 は どちら も  9  つ の 整数 から な る シーケンス で す 。 
( 例えば  1993 ) 
[ 1 , 12 ]  の 間 の 数 
[ 1 , 31 ]  の 間 の 数 
[ 0 , 23 ]  の 間 の 数 
[ 0 , 59 ]  の 間 の 数 
[ 0 , 61 ]  の 間 の 数  strftime( )  の 説明 に あ る  ( 1 )  を 読 ん で 下さ い 
[ 0 , 6 ]  の 間 の 数 、 月曜 が  0  に な り ま す 
[ 1 , 366 ]  の 間 の 数 
0 ,  1  また は  - 1 ;  以下 を 参照 し て くださ い 
C  の 構造 体 と 違 っ て 、 月 の 値 が  0 - 11  で な く  1 - 1 2  で あ る こと に 注意 し て くださ い 。 
西 暦年 の 値 は 上 の  ' '2000 年 問題  ( Y 2 K ) ' ' で 述べ た よう に 扱 わ れ ま す 。 
夏 時間 フラグ を  - 1  に し て  mktime( )  に 渡 す と 、 たいてい は 正確 な 夏 時間 の 状態 を 実現 し ま す 。  struct_time を 引数 と する 関数 に 正し く な い 長 さ の struct_time や 要素 の 型 が 正し く な い struct_time を 与え た 場合 に は 、 TypeError が 送出 さ れ ま す 。 
バージョン  2 . 2  で  変更  さ れ た 仕様 : 時刻 値 の 配列 は タプル から struct_time に 変更 さ れ 、 それぞれ の フィールド に 属性 名 が つけ られ ま し た 。 
この モジュール で は 以下 の 関数 と データ 型 を 定義 し ま す : 
2  桁 の 西 暦年 を 使え る か を 指定 する ブール 型 の 値 で す 。 
標準 で は 真 で す が 、 環境 変数  PYTHONY 2 K  が 空 文字 列 で な い 値 に 設定 さ れ て い る 場合 に は 偽 に な り ま す 。 
実行 時 に 変更 する こと も でき ま す 。 
ローカル の 夏 時間 タイム ゾーン に おけ る  UTC  から の 時刻 オフセット で 、 西 に 行 く ほど 増加 する 秒 で 表 し た 値 で す  ( ほとんど の 西 ヨーロッパ で は 負 に な り 、 アメリカ で は 正 、 イギリス で は ゼロ に な り ま す )  。 
daylight  が ゼロ で な い とき のみ 使用 し て くださ い 。 
gmtime( )  や  localtime( )  が 返 す 時刻 を 表現 する タプル 又 は  struct_time を 、'Sun  Jun  20  23 : 21 : 0 5  1993 '  と い っ た 書式 の  24  文字 の 文字 列 に 変換 し ま す 。 
t  が 与え られ て い な い 場合 に は 、 localtime( )  が 返 す 現在 の 時刻 が 使 わ れ ま す 。  asctime( )  は ロケール 情報 を 使 い ま せ ん 。 
注意 : 同名 の  C  の 関数 と 違 っ て 、 末尾 に は 改行 文字 は あ り ま せ ん 。 
バージョン  2 . 1  で  変更  さ れ た 仕様 : tuple  を 省略 でき る よう に な り ま し た 。 
Unix で は 、 現在 の プロセッサ 時間 秒 を 浮動 小数 点数 で 返 し ま す 。 
時刻 の 精度 および  ` ` プロセッサ 時間  ( processortime) ' ' の 定義 その もの は 同じ 名前 の  C  関数 に 依存 し ま す 。 
いずれ に せよ 、 この 関数 は  Python  の ベンチ マーク  や 計時 アルゴリズム に 使 わ れ て い ま す 。 
Windows  で は 、 最初 に この 関数 が 呼び出 さ れ て から の 経過 時間 を  wall- clock 秒 で 返 し ま す 。  この 関数 は  Win 32  関数 Query Performance Counter ( )  に 基づ い て い て 、 その 精度 は 通常  1  マイクロ 秒 以下 で す 。 
エポック から の 経過 秒数 で 表現 さ れ た 時刻 を 、 ローカル の 時刻 を 表現 する 文字 列 に 変換 し ま す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : secs  が None  の 場合 に 現在 時刻 を 使 う よう に な り ま し た 
DST  タイム ゾーン が 定義 さ れ て い る 場合 ゼロ で な い 値 に な り ま す 。 
エポック から の 経過 時間 で 表現 さ れ た 時刻 を 、 UTC  に お け る struct_time に 変換 し ま す 。  この とき  dst  フラグ は 常 に ゼロ と し て 扱 わ れ ま す 。 
secs  を 指定 し な い 、 また は None  を 指定 し た 場合 、 time( )  が 返 す 値 を 現在 の 時刻 と し て 使 い ま す 。 
秒 の 端数 は 無視 さ れ ま す 。 
struct_time の レイアウト に つ い て は 上 を 参照 し て くださ い 。 
バージョン  2 . 1  で  変更  さ れ た 仕様 : secs  を 省略 でき る よう に な り ま し た 
gmtime( )  に 似 て い ま す が 、 ローカル タイム に 変換 し ま す 。 
secs  を 指定 し な い 、 また は None  を 指定 し た 場合 、 time( )  が 返 す 値 を 現在 の 時刻 と し て 使 い ま す 。 
現在 の 時刻 に  DST  が 適用 さ れ る 場合 、  dst  フラグ は  1  に 設定 さ れ ま す 。  バージョン  2 . 1  で  変更  さ れ た 仕様 : secs  を 省略 でき る よう に な り ま し た 。 
localtime( )  の 逆 を 行 う 関数 で す 。 
引数 は  struct_time か 完全 な  9  つ の 要素 全て に 値 の 入 っ た タプル  ( dst  フラグ も 必要 で す ;  現在 の 時刻 に  DST  が 適用 さ れ る か 不明 の 場合 に は  - 1  を 使 っ て くださ い )  で 、 UTC  で は な く  ローカル の  時刻 を 指定 し ま す 。 
time( )  と の 互換 性 の ため に 浮動 小数 点数 の 値 を 返 し ま す 。 
入力 の 値 が 正し い 時刻 で 表現 でき な い 場合 、 例外 OverflowError また は  ValueError  が 送出 さ れ ま す  ( どちら が 送出 さ れ る か は Python  および  その 下 に あ る  C  ライブラリ の どちら に と っ て 無効 な 値 が 入力 さ れ た か で 決ま り ま す )  。 
この 関数 で 生成 でき る 最も 昔 の 時刻 値 は プラットフォーム に 依存 し ま す 。 
与え られ た 秒数 の 間 実行 を 停止 し ま す 。 
また 、 システム が 他 の 処理 を スケジューリング する ため に 、 実行 停止 時間 が 要求 し た 時間 より も 多少 長 い 時間 に な る こと も あ り ま す 。 
gmtime( )  や  localtime( )  が 返 す 時刻 値 タプル 又 は struct_time を 、 format  で 指定 し た 文字 列 形式 に 変換 し ま す 。 
t  が 与え られ て い な い 場合 、 localtime( )  が 返 す 現在 の 時刻 が 使 わ れ ま す 。  format  は 文字 列 で な く て は な り ま せ ん 。 
t  の いずれ か の フィールド が 許容 範囲 外 の 数値 で あ っ た 場合 、 ValueError  を 送出 し ま す 。  バージョン  2 . 1  で  変更  さ れ た 仕様 : t  を 省略 でき る よう に な り ま し た 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : t  の フィールド 値 が 許容 範囲 外 の 値 の 場合 に ValueError  を 送出 する よう に な り ま し た 
format  文字 列 に は 以下 の 指示 語  ( directive )  を 埋め込 む こと が でき ま す 。  これ ら は フィールド 長 や 精度 の オプション を 付け ず に 表 さ れ 、 strftime( )  の 結果 の 対応 する 文字 列 と 入れ替え られ ま す : 
ロケール に おけ る 省略 形 の 曜 日 名 。 
ロケール に おけ る 省略 なし の 曜 日 名 。 
ロケール に おけ る 省略 形 の 月名 。 
ロケール に おけ る 省略 なし の 月名 。 
ロケール に おけ る 適切 な 日付 および 時刻 表現 。 
月 の 始め から 何 日 目 か を 表 す  10  進数  [ 01 , 31 ] 。 % H 
( 24  時間 計 で の )  時 を 表 す  10  進数  [ 00 , 23 ] 。 
( 12  時間 計 で の )  時 を 表 す  10  進数  [ 0 1 , 12 ] 。 
年 の 初め から 何 日 目 か を 表 す  10  進数  [ 001 , 366 ] 。 
月 を 表 す  10  進数  [ 0 1 , 12 ] 。 
分 を 表 す  10  進数  [ 00 , 59 ] 。 
ロケール に おけ る  AM  また は  PM  に 対応 する 文字 列 。 
秒 を 表 す  10  進数  [ 00 , 61 ] 。 
年 の 初め から 何 週 目 か  ( 日曜 を 週 の 始まり と し ま す ) を 表 す 10  進数  [ 00 , 53 ] 。 
年 が 明け て から 最初 の 日曜 日 まで の 全て の 曜日 は  0  週 目 に 属 する と 見な さ れ ま す 。 
曜日 を 表 す  10  進数  [ 0 ( 日曜 日 ) , 6 ] 。 
年 の 初め から 何 週 目 か  ( 日曜 を 週 の 始まり と し ま す ) を 表 す 10  進数  [ 00 , 53 ] 。 
年 が 明け て から 最初 の 月曜 日 まで の 全て の 曜日 は  0  週 目 に 属 する と 見な さ れ ま す 。 
ロケール に おけ る 適切 な 日付 の 表現 。 
ロケール に おけ る 適切 な 時刻 の 表現 。 
上  2  桁 なし の 西 暦年 を 表 す  10  進数  [ 00, 99 ] 。 
上  2  桁 付き の 西 暦年 を 表 す  10  進数 。 
タイム ゾーン の 名前  ( タイム ゾーン が な い 場合 に は 空 文字 列 ) 。 
文字  " % "  自体 の 表現 。 
注意 : 
strptime( )  関数 で 使 う 場合 、 % p  ディレクティブ が 出力 結果 の 時刻 フィールド に 影響 を 及ぼ す の は 、 時刻 を 解釈 する ため に % I  を 使 っ た とき のみ で す 。 
値 の 幅 は 間違い な く  0  to  61  で す ;  これ は うる う 秒 と 、 ( ごく 稀 で す が ) 2  重 の うる う 秒 の ため の もの で す 。 
strptime( )  関数 で 使 う 場合 、 % U  および  % W を 計算 に 使 う の は 曜日 と 年 を 指定 し た とき だけ で す 。 
以下 に  RFC  28 2 2  インターネット 電子 メール 標準 で 定義 さ れ て い る 日付 表現 と 互換 の 書式 の 例 を 示 し ま す 。 
時刻 を 表現 する 文字 列 を フォーマット に 従 っ て 解釈 し ま す 。 
返 さ れ る 値 は gmtime( )  や  localtime( )  が 返 す よう な struct_time で す 。 
format  パラメタ は  strftime( )  で 使 う もの と 同じ 指示 語 を 使 い ま す ;  この パラメタ の 値 は デフォルト で は " % a % b % d  % H : % M : % S % Y "  で 、 ctime( )  が 返 す フォーマット に 一致 し ま す 。 
string  が  format  に 従 っ て 解釈 でき な かっ た 場合 、 例外  ValueError  が 送出 さ れ ま す 。 
解析 し よう と する 文字 列 が 解析 後 に 余分 な データ を 持 っ て い た 場合 、 ValueError  が 送出 さ れ ま す 。 
欠落 し た データ は デフォルト の 値 で 埋め られ 、 その 値 は  ( 1900 ,  1 ,  1 ,  0 ,  0 ,  0 ,  0 ,  1 ,  - 1 )  で す 。  % Z  指示 語 へ の サポート は  tzname  に 収め られ て い る 値 と daylight  が 真 か どう か で 決め られ ま す 。 
この ため 、 常 に 既知 の ( かつ 夏 時間 で な い と 考え られ て い る )  UTC  や  GMT  を 認識 する 時 以外 は プラットフォーム 固有 の 動作 に な り ま す 。 
gmtime( ) 、 localtime( )  および  strptime( ) が 返 す 時刻 値 シーケンス の タイプ で す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
時刻 を 浮動 小数 点数 で 返 し ま す 。 
単位 は  UTC  に お け る エポック から の 秒数 で す 。 
時刻 は 常 に 浮動 小数 点 で 返 さ れ ま す が 、 全て の システム が  1  秒 より 高 い 精度 で 時刻 を 提供 する と は 限 ら な い の で 注意 し て くださ い 。 
この 関数 が 返 す 値 は 通常 減少 し て い く こと は あ り ま せ ん が 、 この 関数 を  2  回 呼び出 し 、 呼び出し の 間 に システム クロック の 時刻 を 巻き戻 し て 設定 し た 場合 に は 、 以前 の 呼び出し より も 低 い 値 が 返 る こと も あ り ま す 。 
( DST  で な い )  ローカル タイム ゾーン の  UTC  から の 時刻 オフセット で 、 西 に 行 く ほど 増加 する 秒 で 表 し た 値 で す  ( ほとんど の 西 ヨーロッパ で は 負 に な り 、 アメリカ で は 正 、 イギリス で は ゼロ に な り ま す )  。 
二 つ の 文字 列 から な る タプル で す 。  最初 の 要素 は  DST  で な い ローカル の タイム ゾーン 名 で す 。 
利用 でき る システム : Unix 。 
注意 : 多く の 場合 、 環境 変数  TZ  を 変更 する と 、 tzset  を 呼 ば な い 限り  localtime の よう な 関数 の 出力 に 影響 を 及ぼ す ため 、 値 が 信頼 でき な く な っ て しま い ま す 。  TZ  環境 変数 に は 空白 文字 を 含め て は な り ま せ ん 。 
環境 変数  TZ  の 標準 的 な 書式 は 以下 で す : ( 分か り やす い よう に 空白 を 入れ て い ま す ) 
各値 は 以下 の よう に な っ て い ま す : 
std  と  dst 
三 文字 また は それ 以上 の 英数字 で 、 タイム ゾーン の 略称 を 与え ま す 。 
この 値 は  time. tzname  に な り ま す 。 
オフセット は 形式 :  hh [ : mm [ : ss ] ]  を と り ま す 。  この 表現 は 、 UTC  時刻 に する ため に ローカル な 時間 に 加算 する 必要 の あ る 時間 値 を 示 し ま す 。 
' - ' が 先頭 に つ く 場合 、 その タイム ゾーン は 本子午 線  ( Prime Meridian )  より 東側 に あ り ま す ;  それ 以外 の 場合 は 本子午 線 の 西側 で す 。 
オフセット が  dst  の 後ろ に 続 か な い 場合 、 夏 時間 は 標準 時 より 一 時間 先行 し て い る もの と 仮定 し ま す 。 
いつ  DST  に 移動 し 、 DST  から 戻 っ て くる か を 示 し ま す 。 
開始 および 終了 日時 の 形式 は 以下 の いずれ か で す : 
ユリウス 日  ( Julian  day )  n  ( 1 = n  =  36 5 )  を 表 し ま す 。 
うる う 日 は 計算 に 含め られ な い ため 、 2  月  28  日 は 常 に  59  で 、 3  月  1  日 は  60  に な り ま す 。 
ゼロ から 始ま る ユリウス 日  ( 0  = n  =  36 5 )  で す 。 
うる う 日 は 計算 に 含め られ る ため 、 2  月  29  日 を 参照 する こと が でき ま す 。 
m  月 の 第  n  週 に お け る  d  番 目 の 日 ( 0  =  d  =  6 ,  1  = n  =  5 ,  1  = m =  12 ) を 表 し ま す 。  週  5  は 月 に お け る 最終 週 の  d  番 目 の 日 を 表 し 、 第  4  週 か 第  5  週 の どちら か に な り ま す 。 
週  1  は 日  d  が 最初 に 現れ る 日 を 指 し ま す 。 
日  0  は 日曜 日 で す 。 
時間 は オフセット と 同じ で 、 先頭 に 符号  ( '-' や ' +')  を 付け て は いけ な い ところ が 違 い ま す 。 
時刻 が 指定 さ れ て い な けれ ば 、 デフォルト の 値 02 : 0 0 : 0 0  に な り ま す 。 
多く の  Unix  システム  (* BSD ,  Linux ,  Solaris ,  および  Darwin  を 含 む ) で は 、 システム の  zoneinfo  ( 
tzfile ( 5 ) )  データベース を 使 っ た ほう が 、 タイム ゾーン ごと の 規則 を 指定 する 上 で 便利 で す 。 
これ を 行 う に は 、 必要 な タイム ゾーン データ ファイル へ の パス を システム の 'zoneinfo ' タイム ゾーン データベース から の 相対 で 表 し た 値 を 環境 変数  TZ  に 設定 し ま す 。  システム の 'zoneinfo ' は 通常 \/ usr\/share \/zoneinfo  に あ り ま す 。 
例えば 、 ' US \/ Eastern'、 ' Australia \/Melbourne '、 'Egypt' ない し  ' Europe \/ Amsterdam ' と 指定 し ま す 。 
日付 と 時刻 に 対 する 、 より オブジェクト 指向 の インタフェース で す 。 
ロケール の 設定 は  time モジュール の いく つ か の 関数 が 返 す 値 に 影響 を およぼ す こと が あ り ま す 。 
一般 的 な カレンダー 関連 の 関数 。 
しかし ここ で 実現 し た い 時間 及び 分 オフセット へ の 展開 を 行 っ て くれ る  % Z  エスケープ は 全て の  ANSI  C  ライブラリ で サポート さ れ て い る わけ で は あ り ま せ ん 。 
また 、 オリジナル の  1982  年 に 提出 さ れ た  RFC  82 2  標準 は 西 暦年 の 表現 を  2  桁 と 要求 し て い ま す ( % Y  で な く % y  ) 。  しかし 実際 に は  2000  年 に な る だいぶ 以前 から  4  桁 の 西 暦 年 表現 に 移行 し て い ま す 。 
4  桁 の 西 暦 年 表現 は  RFC  28 2 2  に お い て 義務 付け られ 、 伴 っ て  RFC  82 2  で の 取り決め は 撤廃 さ れ ま し た 。 
この モジュール は  Python  の 小さな コード 断片 の 時間 を 簡単 に 計測 する 手段 を 提供 し ま す 。  インターフェース は コマンドライン と メソッド と し て 呼び出し 可能 な もの の 両方 を 備え て い ま す 。 
また 、 この モジュール は 実行 時間 の 計測 に あた り 陥 り がち な 落し穴 に 対 する 様々 な 対策 が 取 ら れ て い ま す 。 
詳し く は 、 O 'Reilly  の  Python  Cookbook 、 `` Algorithms' ' の 章 に あ る  TimPeters  が 書 い た 解説 を 参照 し て くださ い 。  この モジュール に は 次 の パブリック ・ クラス が 定義 さ れ て い ま す 。 
クラス Timer
小さな コード 断片 の 実行 時間 計測 を おこな う ため の クラス で す 。  コンストラクタ は 引数 と し て 、 時間 計測 の 対象 と な る 文 、 セットアップ に 使用 する 追加 の 文 、 タイマ 関数 を 受け取 り ま す 。 
文 の デフォルト 値 は 両方 とも  ' pass ' で 、 タイマ 関数 は プラットフォーム 依存 ( モジュール の  docstring  を 参照 ) で す 。 
文 に は 複数 行 の 文字 列 リテラル を 含 ま な い 限り 、 改行 を 入れ る こと も 可能 で す 。  最初 の 文 の 実行 時間 を 計測 に は  timeit ( )  メソッド を 使用 し ま す 。 
また  timeit ( )  を 複数 回 呼び出 し 、 その 結果 の リスト を 返 す  repeat ( )  メソッド も 用意 さ れ て い ま す 。 
計測 対象 コード の トレース バック を 出力 する ため の ヘルパー 。  利用 例 : 
t  = Timer (... ) #try\/except  の 外側 で try :t . timeit (... ) # また は  t . repeat (... ) except:t . print _exc ( ) 
timeit ( )  を 複数 回 呼び出 し ま す 。 
この メソッド は  timeit ( )  を 複数 回 呼び出 し 、 その 結果 を リスト で 返 す ユーティリティ 関数 で す 。 
最初 の 引数 に は  timeit ( )  を 呼び出 す 回数 を 指定 し ま す 。 
2 番 目 の 引数 は  timeit ( )  へ 引数 と し て 渡 す 数値 で す 。 
注意 :  結果 の ベクトル から 平均 値 や 標準 偏差 を 計算 し て 出力 さ せ た い と 思 う か も しれ ま せ ん が 、 それ は あまり 意味 が あ り ま せ ん 。 
したが っ て 、 結果 の うち  min ( )  だけ が 見 る べ き 値 と な り ま す 。 
この 点 を 押さえ た 上 で 、 統計 的 な 分析 より も 常識 的 な 判断 で 結果 を 見 る よう に し て くださ い 。 
メイン 文 の 実行 時間 を  number  回 取得 し ま す 。 
この メソッド は セットアップ 文 を 1 回 だけ 実行 し 、 メイン 文 を 指定 回数 実行 する の に かか っ た 秒数 を 浮動 小数 で 返 し ま す 。 
引数 は ループ を 何 回 実行 する か の 指定 で 、 デフォルト 値 は 100 万 回 で す 。 
メイン 文 、 セットアップ 文 、 タイマ 関数 は コンストラクタ で 指定 さ れ た もの を 使用 し ま す 。 
注意 : デフォルト で は 、 timeit ( )  は 時間 計測 中 、 一時 的 に ガーベッジ コレクション を 切 り ま す 。 
この アプローチ の 利点 は 、 個別 の 測定 結果 を 比較 し やす く な る こと で す 。 
不利 な 点 は 、 GC  が 測定 し て い る 関数 の パフォーマンス の 重要 な 一部 か も しれ な い と い う こと で す 。 
そう し た 場合 、 setup  文字 列 の 最初 の 文 で  GC  を 再度 有効 に する こと が でき ま す 。 
例えば  : 
この モジュール は 解析 木の葉 ノード ( 終端 記号 ) の 数値 を 表 す 定数 を 提供 し ま す 。 
言語 の 文法 の コンテキスト に お け る 名前 の 定義 に つ い て は 、 Python ディストリビューション の ファイル Grammar \/ Grammar を 参照 し て くださ い 。 
名前 が マップ する 特定 の 数値 は 、 Python の バージョン 間 で 変わ り ま す 。  この モジュール は 一 つ の データ オブジェクト と いく つ か の 関数 も 提供 し ま す 。 
関数 は Python の C ヘッダ ファイル の 定義 を 反映 し ま す 。 
辞書 は この モジュール で 定義 さ れ て い る 定数 の 数値 を 名前 の 文字 列 へ マップ し 、 より 人 が 読 み やす い よう に 解析 木 を 表現 し ま す 。 
終端 トークン の 値 に 対 し て 真 を 返 し ま す 。 
非 終端 トークン の 値 に 対 し て 真 を 返 し ま す 。 
x が 入力 の 終わり を 示 す マーカー なら ば 、 真 を 返 し ま す 。 
tokenize モジュール で は 、 Python  で 実装 さ れ た  Python ソース コード の 字句 解析 器 を 提供 し ま す 。 
generate_tokens ( )  ジェネレータ は 一 つ の 引数 readline を 必要 と し ま す 。  この 引数 は 呼び出し 可能 オブジェクト で 、 組み込 み ファイル オブジェクト に お け る  readline ( )  メソッド と 同じ インタフェース を 提供 し て い な けれ ば な り ま せ ん  ( 2 . 3 . 9  節 を 参照 し て くださ い ) 。 
後方 互換 性 の ため に 古 い エントリ ポイント が 残 さ れ て い ま す : 
tokenize ( ) 関数 は 二 つ の パラメータ を 取 り ま す :  一 つ は 入力 ストリーム を 表 し 、 もう 一 つ は tokenize ( ) の ため の 出力 メカニズム を 与え ま す 。  最初 の パラメータ 、 readline  は 、 組み込 み ファイル オブジェクト の readline ( ) メソッド と 同じ インタ フェイス を 提供 する 呼び出し 可能 オブジェクト で な けれ ば な り ま せ ん  ( 2 . 3 . 9  節 を 参照 ) 。 
この 関数 は 呼び出し の たび に 入力 内 の 一行 を 文字 列 で 返 さ な けれ ば な り ま せ ん 。  二番 目 の パラメータ tokeneater も 呼び出し 可能 オブジェクト で な けれ ば な り ま せ ん 。 
この 関数 は 各 トークン に 対 し て 一 度 だけ 呼び出 さ れ 、 generate_tokens ( )  が 生成 する タプル に 対応 する  5  つ の 引数 を と り ま す 。 
モジュール の 全て の 定数 は tokenize  で も 公開 さ れ て お り 、 これ に 加え 、 以下 の 二 つ の トークン 値 が  tokenize ( ) の  tokeneater  関数 に 渡 さ れ る 可能 性 が あ り ま す : 
コメント で あ る こと を 表 す ため に 使 わ れ る トークン 値 で す 。 
終わり で は な い 改行 を 表 す ため に 使 わ れ る トークン 値 。 
NEW LINE トークン は Python コード の 論理 行 の 終わり を 表 し ま す 。  NL トークン は コード の 論理 行 が 複数 の 物理 行 に わた っ て 続 い て い る とき に 作 ら れ ま す 。 
この モジュール は Python プログラム の スタック トレース を 抽出 し 、 書式 を 整え 、 表示 する ため の 標準 インターフェース を 提供 し ま す 。 
モジュール が スタック トレース を 表示 する とき 、 Python インタープリタ の 動作 を 正確 に 模倣 し ま す 。 
インタープリタ の ` ` ラッパー ' ' の 場合 の よう に 、 プログラム の 制御 の 元 で スタック と レース を 表示 し た い と 思 っ た とき に 役 に 立 ち ま す 。  モジュール は traceback オブジェクト を 使 い ま す --  これ は 変数 sys . exc _traceback ( 非 推奨 ) と sys . last _traceback に 保存 さ れ 、 sys . exc _ info ( ) から 三 番 目 の 項目 と し て 返さ れ る オブジェクト 型 で す 。 
モジュール は 次 の 関数 を 定義 し ま す : 
traceback から limit まで スタック トレース 項目 を 出力 し ま す 。 
limit が 省略 さ れ る か None の 場合 は 、 すべて の 項目 が 表示 さ れ ま す 。 file が 省略 さ れ る か None の 場合 は 、 sys . stderr へ 出力 さ れ ま す 。 
それ 以外 の 場合 は 、 出力 を 受け る ため の オープン し た ファイル また は ファイル に 類似 し た オブジェクト で あ る べ き で す 。  print _exception 
例外 情報 と traceback から limit まで スタック トレース 項目 を file へ 出力 し ま す 。 
これ は print _exception ( sys . exc_type , sys . exc _ value , sys . exc _traceback ,  limit , file ) の ため の 省略 表現 で す 。 
( 非 推奨 の 変数 を 使 う 代わり に スレッド セーフ な 方法 で 同じ 情報 を 引き出 す ため に 、 実際 に は sys . exc _ info ( ) を 使 い ま す 。 
これ は 、 print _exc ( limit ) に 似 て い ま す が 、 ファイル に 出力 する かわり に 文字 列 を 返 し ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。  print_last 
これ は print _exception ( sys . last_type , sys . last_value , sys . last _traceback ,  limit , file ) の 省略 表現 で す 。 
この 関数 は 呼び出 さ れ た 時点 から の スタック トレース を 出力 し ま す 。 
オプション の f 引数 は 代わり の 最初 の スタック フレーム を 指定 する ため に 使え ま す 。 
print _exception ( ) に 付 い て 言 え ば 、 オプション の limit と file 引数 は 同じ 意味 を 持 ち ま す 。 
トレース バック オブジェクト traceback から limit まで 取り出 さ れ た ` ` 前 処理 済み ' ' スタック トレース 項目 の リスト を 返 し ま す 。 
スタック トレース の 代わり の 書式 設定 を 行 う ため に 役 に 立 ち ま す 。 
limit が 省略 さ れ る か None の 場合 は 、 すべて の 項目 が 取り出 さ れ ま す 。 
` ` 前 処理 済み ' ' スタック トレース 項目 と は 四 つ の 部分 から な る ( filename ,  line  number , function  name ,  text ) で 、 スタック トレース に 対 し て 通常 出力 さ れ る 情報 を 表 し て い ま す 。 
text は 前 と 後ろ に 付 い て い る 空白 を 取り除 い た 文字 列 で す 。  ソース が 使え な い 場合 は None で す 。 
現在 の スタック フレーム から 生 の トレース バック を 取り出 し ま す 。 
戻 り 値 は extract_tb ( ) と 同じ 形式 で す 。 
print_stack ( ) に つ い て 言 え ば 、 オプション の f と limit 引数 は 同じ 意味 を 持 ち ま す 。 
extract_tb ( ) また は extract_stack ( ) が 返 す タプル の リスト が 与え られ る と 、 出力 の 準備 を 整え た 文字 列 の リスト を 返 し ま す 。 
結果 と し て 生じ る リスト の 中 の 各 文字 列 は 、 引数 リスト の 中 の 同じ インデックス の 要素 に 対応 し ま す 。 
各 文字 列 は 末尾 に 改行 が 付 い て い ま す 。  その 上 、 ソース テキスト 行 が None で な い それ ら の 要素 に 対 し て は 、 文字 列 は 内部 に 改行 を 含 ん で い る か も しれ ま せ ん 。 
トレース バック の 例外 部分 の 書式 を 設定 し ま す 。 
引数 は sys . last_type と sys . last_value の よう な 例外 の 型 と 値 で す 。 
戻 り 値 は それぞれ が 改行 で 終わ っ て い る 文字 列 の リスト で す 。 
通常 、 リスト は 一 つ の 文字 列 を 含 ん で い ま す 。  しかし 、 SyntaxError 例外 に 対 し て は 、 ( 出力 さ れ る とき に ) 構文 エラー が 起き た 場所 に つ い て の 詳細 な 情報 を 示 す 行 を いく つ か 含 ん で い ま す 。 
どの 例外 が 起き た の か を 示 す メッセージ は 、 常 に リスト の 最後 の 文字 列 で す 。 
スタック トレース と 例外 情報 の 書式 を 設定 し ま す 。 
引数 は print _exception ( ) の 対応 する 引数 と 同じ 意味 を 持 ち ま す 。 
戻 り 値 は 文字 列 の リスト で 、 それぞれ の 文字 列 は 改行 で 終わ り 、 その いく つ か は 内部 に 改行 を 含 み ま す 。 
これ ら の 行 が 連結 さ れ て 出力 さ れ る 場合 は 、 厳密 に print _exception ( ) と 同じ テキスト が 出力 さ れ ま す 。 
format_ list ( extract_tb(tb ,  limit ) ) の 省略 表現 。 
format_ list ( extract_stack ( f ,  limit ) ) の 省略 表現 。 
この 関数 は トレース バック オブジェクト に 設定 さ れ た 現在 の 行 番号 を かえ し ま す 。 
この 関数 は 必要 で し た 。  なぜ なら 、 - O フラグ が Python へ 渡 さ れ た とき 、 Python の 2 . 3 より 前 の バージョン で は 
tb .tb_lineno が 正し く 更新 さ れ な かっ た から で す 。 
この 関数 は 2 . 3 以降 の バージョン で は 役 に 立 ち ま せ ん 。 
tty  モジュール は 端末 を  cbreak  および  raw  モード に する ため の 関数 を 定義 し て い ま す 。  この モジュール は 
モジュール を 必要 と する ため 、 Unix で しか 動作 し ま せ ん 。 tty  モジュール で は 、 以下 の 関数 を 定義 し て い ま す : 
ファイル 記述 子  fd  の モード を  raw  モード に 変え ま す 。 
when  を 省略 する と 標準 の 値 は  termios . TCSAFLUSH  に な り 、 termios. tcsetattr ( )  に 渡 さ れ ま す 。 
ファイル 記述 子  fd  の モード を  cbreak モード に 変え ま す 。 
参考 :  termios
端末 制御 操作 で 便利 な 定数 群 。  . 
turtle モジュール は オブジェクト 指向 と 手続き 指向 の 両方 の 方法 で タートル グラフィックス ・ プリミティブ を 提供 し ま す 。 
角度 を 計 る 単位 を 度 に し ま す 。 
角度 を 計 る 単位 を ラジアン に し ま す 。 
スクリーン を 消去 し 、 ペン を 中心 に 持 っ て 行 き 、 変数 を デフォルト 値 に 設定 し ま す 。 
スクリーン を 消去 し ま す 。 
トレース を on \/off に し ま す ( フラグ が 真 か どう か に 応じ て ) 。 
トレース と は 、 線 に 沿 っ て 矢印 の アニメーション が 付 き 、 線 が より ゆっくり と 引 か れ る こと を 意味 し ま す 。 
distance ステップ だけ 前 に 進 み ま す 。 
distance ステップ だけ 後ろ に 進 み ま す 。 
angle 単位 だけ 左 に 回 り ま す 。 
単位 の デフォルト は 度 で す が 、 degrees ( ) と radians ( ) 関数 を 使 っ て 設定 でき ま す 。 
angle 単位 だけ 右 に 回 り ま す 。 
ペン を 上げ ま す - - 線 を 引 く こと を 止め ま す 。 
ペン を 下げ ま す - -  移動 し た とき に 線 を 引 き ま す 。 
線幅 を width に 設定 し ま す 。 
ペン の 色 を 設定 し ま す 。 
最初 の 形式 で は 、 色 は 文字 列 と し て Tk の 色 の 仕様 の 通り に 指定 さ れ ま す 。 
二番 目 の 形式 は 色 を RGB 値 ( それぞれ は 範囲 [ 0 . . 1 ] ) の タプル と し て 指定 し ま す 。 
三 番 目 の 形式 で は 、 色 は 三 つ に 別れ た パラメータ と し て RGB 値 ( それぞれ は 範囲 [ 0 . . 1 ] ) を 与え て 指定 し て い ま す 。 
現在 の ペン の 位置 に text を 書き込 み ま す 。 
move が 真 なら ば 、 ペン は テキスト の 右下 の 角 へ 移動 し ま す 。 
デフォルト で は 、 move は 偽 で す 。 
完全 な 仕様 は かなり 複雑 で す が 、 推奨 する 使 い 方 は :  塗りつぶ し た い 経路 を 描 く 前 に fill ( 1 ) を 呼び出 し 、 経路 を 描 き 終え た とき に fill ( 0 ) を 呼び出 し ま す 。 
extent は 円 の どの 部分 を 描 く か を 決定 し ま す :  与え られ な けれ ば 、 デフォルト で 完全 な 円 に な り ま す 。 
extent が 完全 な 円 で あ る 場合 は 、 弧 の 一 つ の 端点 は 、 現在 の ペン の 位置 で す 。 
radius が 正 の 場合 、 弧 は 反 時計 回り に 描 か れ ま す 。 
そう で な けれ ば 、 時計 回り で す 。 
座標 x ,  y へ 移動 し ま す 。 
座標 は 二 つ の 別個 の 引数 か 、 2 - タプル の どちら か で 指定 する こと が でき ま す 。 
この モジュール は from math import * も 実行 し ま す 。  従 っ て 、 タートル グラフィックス の ため に 役 に 立 つ 追加 の 定数 と 関数 に つ い て は 、 
モジュール の ドキュメント を 参照 し て くださ い 。 
モジュール を ちょっと ばかり 試 し て い ま す 。 
この モジュール に よ っ て 捕捉 さ れ た あらゆる エラー 対 し て 発生 し た 例外 。 
例 と し て 、 demo ( ) 関数 の コード を 参照 し て くださ い 。  この モジュール は 次 の クラス を 定義 し ま す : 
クラス Pen 
ペン を 定義 し ま す 。 
上記 の すべて の 関数 は 与え られ た ペン の メソッド と し て 呼び出 さ れ ま す 。 
この コンストラクタ は 線 を 描 く キャンバス を 自動 的 に 作成 し ま す 。 
クラス RawPen 
キャンバス canvas に 描 く ペン を 定義 し ま す 。 
これ は ` ` 実際 の ' ' プログラム で グラフィックス を 作成 する ため に モジュール を 使 い た い 場合 に 役 に 立 ち ま す 。 
この モジュール は 標準 の Python インタプリタ で 使 わ れ て い る オブジェクト の 型 に つ い て 、 名前 を 定義 し て い ま す ( 拡張 モジュール で 定義 さ れ て い る 型 を 除 く ) 。 
この モジュール は 以下 に 列挙 し て い る 以外 の 名前 を エクスポート し な い の で 、 " fromtypesimport* " の よう に 使 っ て も 安全 で す 。 
この モジュール の 将来 の バージョン で 追加 さ れ る 名前 は 、 " Type " で 終わ る 予定 で す 。  関数 で の 典型 的 な 利用 方法 は 、 以下 の よう に 引数 の 型 に よ っ て 異な る 動作 を する 場合 で す : 
Python  2 . 2 以降 で は 、 int ( )  や  str ( ) の よう な ファクトリ 関数 は 、 型 の 名前 と な り ま し た の で 、 types を 使用 する 必要 は なくな り ま し た 。 
上記 の サンプル は 、 以下 の よう に 記述 する 事 が 推奨 さ れ て い ま す 。 
この モジュール は 以下 の 名前 を 定義 し て い ま す 。 
None の 型 で す 。 
bool の True と False の 型 で す 。  これ は 組み込 み 関数 の bool ( ) の エイリアス で す 。 
整数 の 型 で す ( e . g .  1 ) 。 
長 整数 の 型 で す ( e . g .  1 L ) 。 
浮動 小数 点数 の 型 で す ( e . g .  1 . 0 ) 。 
複素数 の 型 で す ( e . g .  1 . 0 j ) 。 
Python が 複素数 の サポート なし で コンパイル さ れ て い た 場合 に は 定義 さ れ ま せ ん 。 
文字 列 の 型 で す ( e . g . 'Spam ') 。 
Unicode 文字 列 の 型 で す ( e . g .  u'Spam ') 。 
Python が ユニコード の サポート なし で コンパイル さ れ て い た 場合 に は 定義 さ れ ま せ ん 。 
タプル の 型 で す ( e . g .  ( 1 ,  2 ,  3 , 'Spam ') ) 。 
リスト の 型 で す ( e . g .  [ 0 ,  1 ,  2 ,  3 ] ) 。 
辞書 の 型 で す ( e . g .  {' Bacon':  1 , 'Ham ':  0 } ) 。 
DictType の 別名 で す 。 
ユーザー 定義 の 関数 また は lambda の 型 で す 。 
FunctionType の 別名 で す 。 
ジェネレータ 関数 の 呼び出し に よ っ て 生成 さ れ た イテレータ オブジェクト の 型 で す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
ユーザー 定義 の クラス の 型 で す 。 
ユーザー 定義 の クラス の インスタンス の 型 で す 。 
ユーザー 定義 の クラス の インスタンス の メソッド の 型 で す 。 
MethodType の 別名 で す 。 
len ( )  や sys . exit ( ) の よう な 組み込 み 関数 の 型 で す 。 
BuiltinFunction の 別名 で す 。 
モジュール の 型 で す 。 
sys . st dout の よう な open さ れ た ファイル オブジェクト の 型 で す 。 
Ellipsis の 型 で す 。 
sys . exc _traceback に 含 ま れ る よう な トレース バック オブジェクト の 型 で す 。 
フレーム オブジェクト の 型 で す 。  トレース バック オブジェクト tb の tb.tb_frame など で す 。 
関数 に よ っ て 作 ら れ る バッファ オブジェクト の 型 で す 。 
文字 列 型 の チェック を 簡単 に する ため の StringType と UnicodeType を 含 む シーケンス で す 。 
UnicodeType は 実行 中 の 版 の Python に 含 ま れ て い る 場合 に だけ 含 ま れ る の で 、 2 つ の 文字 列 型 の シーケンス を 使 う より これ を 使 う 方 が 移植 性 が 高 く な り ま す 。 
例 : isinstance ( s ,types . StringTypes ) . バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
この モジュール は 、 全て の  Unicode  文字 の 属性 を 定義 し て い る  Unicode  文字 データベース へ の アクセス を 提供 し ま す 。 
この データベース 内 の データ は 、 ftp:\/\/ftp .unicode . org \/  で 公開 さ れ て い る  UnicodeData . txt  ファイル の バージョン  3 . 2 . 0  に 基づ い て い ま す 。  この モジュール は 、 UnicodeData  ファイル フォーマット  3 . 2 . 0  ( http:\/\/www .unicode . org \/ Public \/UNIDATA \/ UnicodeData . html  を 参照 ) で 定義 さ れ て い る もの と 、 同じ 名前 と 記号 を 使 い ま す 。 
この モジュール で 定義 さ れ て い る 関数 は 、 以下 の とおり で す 。 
名前 に 対応 する 文字 を 探 し ま す 。 
その 名前 の 文字 が 見つ  かっ た 場合 、  その  Unicode  文字 が 返 さ れ ま す 。 
見つか ら な かっ た 場合 に は 、 KeyError  を 発生 さ せ ま す 。 
Unicode  文字  unichr  に 付 い て い る 名前 を 、 文字 列 で 返 し ま す 。 
名前 が 定義 さ れ て い な い 場合 に は  default  が 返 さ れ ま す が 、 この 引数 が 与え られ て い な けれ ば  ValueError  を 発生 さ せ ま す 。 
Unicode  文字  unichr  に 割り当て られ て い る 十 進 数 を 、 整数 で 返 し ま す 。 
この 値 が 定義 さ れ て い な い 場合 に は  default  が 返 さ れ ま す が 、 この 引数 が 与え られ て い な けれ ば  ValueError  を 発生 さ せ ま す 。 
Unicode  文字  unichr  に 割り当て られ て い る 二進 数 を 、 整数 で 返 し ま す 。 
Unicode  文字  unichr  に 割り当て られ て い る 数値 を 、 float  型 で 返 し ま す 。 
この 値 が 定義 さ れ て い な い 場合 に は  default  が 返 さ れ ま す が 、 この 引  数 が 与え られ て い な けれ ば  ValueError  を 発生 さ せ ま す 。 
Unicode  文字  unichr  に 割り当て られ た 、 汎用 カテゴリ を 返 し ま す 。 
Unicode  文字  unichr  に 割り当て られ た 、 双 方向 カテゴリ を 返 し ま す 。 
その よう な 値 が 定義 さ れ て い な い 場合 、 空 の 文字 列 が 返 さ れ ま す 。 
Unicode  文字  unichr  に 割り当て られ た 正規 結合 クラス を 返 し ま す 。 
結合 クラス 定義 さ れ て い な い 場合 、 0  が 返 さ れ ま す 。 
unichr  as string . ユニ コード 文字 unichr に 割り当て られ た east  asianwidth を 文字 列 で 返 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
Unicode  文字  unichr  に 割り当て られ た 、 鏡像 化 の プロパティ を 返 し ま す 。 
その 文字 が 双 方向 テキスト 内 で 鏡像 化 さ れ た 文字 で あ る 場合 に は  1  を 、 それ 以外 の 場合 に は  0  を 返 し ま す 。 
Unicode  文字  unichr  に 割り当て られ た 、 文字 分解 マッピング を 、 文字 列 型 で 返 し ま す 。 
その よう な マッピング が 定義 さ れ て い な い 場合 、 空 の 文字 列 が 返 さ れ ま す 。 
Unicode  で は 、 複数 の 方法 で 表現 でき る 文字 が あ り ま す 。 
Unicode  で は 、 一般 に 他 の 文字 と の 統合 が サポート さ れ て い る 文字 が あ り ま す 。 
たとえば 、 U + 21 60  ( ROMAN  NUMERAL  ONE )  は 事実 上  U + 00 49  ( LATIN  CAPITAL  LETTER  I )  と 同じ もの で す 。 
正規 形  KC  ( NFKC )  は 、 互換 分解 を 適用 し て から 、 標準 分解 を 適用 し ま す 。 
更に 、 本 モジュール は 以下 の 定数 を 公開 し ま す 。 
この モジュール で 使 わ れ て い る  Unicode  データベース の バージョン 。 
5 . 2 . 12  進 ん だ 使 い 方 
この Python 単体 テスト フレームワーク  は `` PyUnit ' ' と も 呼 ば れ 、 Kent  Beck  と Erich  Gamma に よ る JUnit の Python 版 で す 。  JUnit は また Kent の Smalltalk 用 テスト フレームワーク の Java 版 で 、 どちら も それぞれ の 言語 で 業界 標準 の 単体 テスト フレームワーク と な っ て い ま す 。 
PyUnit で は 、 テスト の 自動 化 ・ 初期 設定 と 終了 処理 の 共有 ・ テスト の 分類 ・ テスト 実行 と 結果 レポート の 分離 など の 機能 を 提供 し て お り 、 unittest の クラス を 使 っ て 簡単 に たくさん の テスト を 開発 でき る よう に な っ て い ま す 。 
PyUnit で は 、 テスト を 以下 の よう な 構成 で 開発 し ま す 。 
test  fixture ( テスト 設備 ) と は 、 テスト 実行 の ため に 必要 な 準備 や 終了 処理 を 指 し ま す 。 
テスト ケース は テスト の 最小 単位 で 、 各 入力 に 対 する 結果 を チェック し ま す 。 
テスト ケース を 作成 する 場合 は 、 PyUnit が 提供 する TestCase クラス を 基底 クラス と し て 利用 する こと が でき ま す 。 
もちろん 、 TestCase の 派生 クラス で は な く 、 独自 の テスト ケース を 実装 し て も 構 い ま せ ん 。 
テスト スイート 
テスト スイート は テスト ケース と テスト スイート の 集まり で 、 同時 に 実行 し な けれ ば な ら な い テスト を まとめ る 場合 に 使用 し ま す 。 
テスト ランナー 
テスト ランナー は テスト の 実行 と 結果 表示 を 管理 する コンポーネント で す 。 
ランナー は グラフィカル インターフェース で も テキスト インターフェース で も 良 い で す し 、 何 も 表示 せ ず に テスト 結果 を 示 す 値 を 返 す だけ の 場合 も あ り ま す 。 
PyUnit で は 、 テスト ケース と fixture を 、 TestCase クラス と FunctionTestCase クラス で 提供 し て い ま す 。  TestCase クラス は 新規 に テスト を 作成 する 場合 に 使用 し 、 FunctionTestCase は 既存 の テスト を PyUnit に 組み込 む 場合 に 使用 し ま す 。 
fixture の 設定 処理 と 終了 処理 は 、 TestCase で は setUp ( ) メソッド と tearDown ( ) を オーバーライド し て 記述 し 、 FunctionTestCase で は 初期 設定 ・ 終了 処理 を 行 う 既存 の 関数 を コンストラクタ で 指定 し ま す 。 
テスト 実行 時 、 まず fixture の 初期 設定 が 最初 に 実行 さ れ ま す 。 
初期 設定 が 正常 終了 し た 場合 、 テスト 実行 後 に は テスト 結果 に 関わ ら ず 終了 処理 が 実行 さ れ ま す 。 
TestCase の 各 インスタンス が 実行 する テスト は 一 つ だけ で 、 fixture は 各 テスト ごと に 新し く 作成 さ れ ま す 。  テスト スイート は TestSuite クラス で 実装 さ れ て お り 、 複数 の テスト と テスト スイート を まとめ る 事 が でき ま す 。 
テスト スイート を 実行 する と 、 スイート と 子 スイート に 追加 さ れ て い る 全て の テスト が 実行 さ れ ま す 。  テスト ランナー は run ( ) メソッド を 持 つ オブジェクト で 、 run ( ) は 引数 と し て TestCase か TestSuite オブジェクト を 受け取 り 、 テスト 結果 を Test Result オブジェクト で 戻 し ま す 。 
PyUnit で は デフォルト で テスト 結果 を 標準 エラー に 出力 する Text TestRunner を サンプル と し て 実装 し て い ま す 。 
これ 以外 の ランナー ( グラフィック インターフェース 用 など ) を 実装 する 場合 で も 、 特定 の クラス から 派生 する 必要 は あ り ま せ ん 。 
5 . 3 . 1  基礎 的 な 例 
この モジュール は ワールド ワイド ウェブ  ( World  Wide  Web )  を 介 し て データ を 取り寄せ る ため の 高 レベル の インタフェース を 提供 する 。 
特に 、 関数 urlopen ( )  は 組み込 み 関数  open ( )  と 同様 に 動作 し 、 ファイル 名 の 代わり に ファイル ユニバーサル リソース ロケータ  ( URL )  を 指定 する こと が でき ま す 。  いく つ か の 制限 は あ り ま す -- URL  は 読み出し 専用 で しか 開け ま せ ん し 、 seek  操作 を 行 う こと は でき ま せ ん 。 
この モジュール で は 、 以下 の  public  な 関数 を 定義 し ま す 。 
URL  で 表 さ れ る ネットワーク 上 の オブジェクト を 読み込 み 用 に 開 き ま す 。 
URL  が スキーム 識別 子 を 持 た な い か 、 スキーム 識別 子 が  file :  で あ る 場合 、 ローカル システム の ファイル が  ( 広 範囲 の 改行 サポート なし で )  開 か れ ま す 。  それ 以外 の 場合 は ネットワーク 上 の どこ か に あ る サーバ へ の ソケット を 開 き ま す 。 
接続 を 作 る こと が でき な い か 、 サーバ が エラー コード を 返 し た 場合 、 例外  IOError  が 送出 さ れ ま す 。 
全て の 処理 が うま く い け ば 、 ファイル 類似 の オブジェクト が 返 さ れ ま す 。 
この オブジェクト は 以下 の メソッド :  read ( )  、  readline ( )  、 readlines ( )  、 fileno( )  、  close ( )  、 info ( )  そして  geturl( )  を サポート し ま す 。 
( で す が 、 この オブジェクト は 組み込み の ファイル オブジェクト で は な い の で 、 まれ に 真 の 組み込 み ファイル オブジェクト が 必要 な 場所 で は 使 う こと が でき ま せ ん )  info ( )  メソッド は 開 い た  URL  に 関連 付け られ た メタ 情報 を 含 む  mimetools . Message  クラス の インスタンス を 返 し ま す 。 
URL  へ の アクセス メソッド が  HTTP  で あ る 場合 、 メタ 情報 中 の ヘッダ 情報 は サーバ が  HTML  ページ を 返 す とき に 先頭 に 付加 する ヘッダ 情報 で す  ( Content -Length  および  Content- Type  を 含 み ま す )  。 
アクセス メソッド が  FTP  の 場合 、 ファイル 取得 リクエスト に 応答 し て サーバ が ファイル の 長 さ を 返 し た とき に は  ( これ は 現在 で は 普通 に な り ま し た が )  Content -Length  ヘッダ が メタ 情報 に 含め られ ま す 。 
Content-type  ヘッダ は  MIME  タイプ が 推測 可能 な とき に メタ 情報 に 含め られ ま す 。 
アクセス メソッド が ローカル ファイル の 場合 、 返 さ れ る ヘッダ 情報 に は ファイル の 最終 更新 日時 を 表 す  Date  エントリ 、 ファイル の サイズ を 示 す  Content -Length  エントリ 、 そして 推測 さ れ る ファイル 形式 の  Content- Type  エントリ が 含 ま れ ま す 。 
モジュール を 参照 し て くださ い 。  geturl( )  メソッド は ページ の 実際 の  URL  を 返 し ま す 。 
場合 に よ っ て は 、 HTTP  サーバ は クライアント の 要求 を 他 の  URL  に 振り向け ( redirect  、 リダイレクト 
)  し ま す 。  関数  urlopen ( )  は ユーザ に 対 し て リダイレクト を 透過 的 に 行 い ま す が 、 呼び出 し 側 に と っ て クライアント が どの  URL  に リダイレクト さ れ た か を 知 り た い とき が あ り ま す 。 
geturl( )  メソッド を 使 う と 、 この リダイレクト さ れ た  URL  を 取得 でき ま す 。 url に http:  スキーム 識別 子 を 使 う 場合 、 data  引数 を 与え て  POST  形式 の リクエスト を 行 う こと が でき ま す  ( 通常 リクエスト の 形式 は  GET  で す ) 。 
引数  data  は 標準 の application\/x- w w w - form -urlencoded  形式 で な けれ ば な り ま せ ん ; 以下 の  urlencode ( )  関数 を 参照 し て くださ い 。 urlopen ( )  関数 は 認証 を 必要 と し な い プロキシ  ( proxy )  に 対 し て 透過 的 に 動作 し ま す 。 
Unix  また は  Windows  環境 で は 、  Python  を 起動 する 前 に 、 環境 変数  http_proxy 、  ftp_proxy  、 および  gopher_proxy  に それぞれ の プロキシ サーバ を 指定 する  URL  を 設定 し て くださ い 。 
例えば  ( "% "  は コマンド プロンプト で す ) : 
Windows  環境 で は 、 プロキシ を 指定 する 環境 変数 が 設定 さ れ て い な い 場合 、 プロキシ の 設定 値 は レジストリ の  Internet  Settings  セクション から 取得 さ れ ま す 。 
Macintosh  環境 で は 、 urlopen ( )  は 「 インターネット の 設定 」  ( Internet  Config ) から プロキシ 情報 を 取得 し ま す 。 
別 の 方法 と し て 、 オプション 引数  proxies  を 使 っ て 明示 的 に プロキシ を 設定 する こと が でき ま す 。 
おそらく 旧 バージョン の ドキュメント で す ) 関数  urlopen ( )  は 明示 的 な プロキシ 指定 を サポート し て い ま せ ん 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : proxies  の サポート を 追加 し ま し た 。 
URL  で 表 さ れ る ネットワーク 上 の オブジェクト を 、 必要 に 応 じ て ローカル な ファイル に コピー し ま す 。 
フック 関数 に は  3  つ の 引数 が 渡 さ れ ま す ;  これ まで 転送 さ れ た ブロック 数 の カウント 、 バイト 単位 で 表 さ れ た ブロック サイズ 、 ファイル の 総 サイズ で す 。 
3  つ 目 の ファイル の 総 サイズ は 、 ファイル 取得 の 際 の 応答 時 に ファイル サイズ を 返 さ な い 古 い  FTP  サーバ で は  - 1  に な り ま す 。 url が http:  スキーム 識別 子 を 使 っ て い た 場合 、 オプション 引数  data  を 与え る こと で  POST  リクエスト を 行 う よう 指定 する こと が でき ま す  ( 通常 リクエスト の 形式 は  GET  で す ) 。 
data  引数 は 標準 の  application\/x- w w w - form -urlencoded 形式 で な く て は な り ま せ ん ;  以下 の  urlencode ( )  関数 を 参照 し て くださ い 。 
パブリック 関数  urlopen ( )  および  urlretrieve ( )  は  FancyURLopener  クラス の インスタンス を 生成 し ま す 。  インスタンス は 要求 さ れ た 動作 に 応 じ て 使用 さ れ ま す 。 
この 機能 を オーバライド する ため に 、 プログラマ は  URLopener  また は  FancyURLopener  の サブ クラス を 作 り 、 その クラス から 生成 し た インスタンス を 変数  urllib . _urlopener  に 代入 し た 後 、 呼び出 し た い 関数 を 呼 ぶ こと が でき ま す 。  例えば 、 アプリケーション が  URLopener  が 定義 し て い る の と は 異な っ た  User - Agent :  ヘッダ を 指定 し た い 場合 が あ る か も しれ ま せ ん 。 
この 機能 は 以下 の コード で 実現 でき ま す : 
以前 の  urlretrieve ( )  で 生成 さ れ た 可能 性 の あ る キャッシュ を 消去 し ま す 。 
例 :  quote ('\/~connolly\/')  は '\/ % 7econnolly\/' に な り ま す 。  quote_plus 
quote ( )  と 似 て い ま す が 、 加え て 空白 文字 を プラス 記号  ( `` +' ')  に 置き換え ま す 。  これ は  HTML  フォーム の 値 を  quote  処理 する 際 に 必要 な 機能 で す 。 
もと の 文字 列 に お け る プラス 記号 は  safe  に 含 ま れ て い な い 限り エスケープ 置換 さ れ ま す 。 
上 と 同様 に 、 safe  の デフォルト の 値 は '\/' で す 。 
" % xx "  エスケープ を エスケープ が 表 す  1  文字 に 置き換え ま す 。 
例 : unquote ('\/ % 7Econnolly\/')  は '\/~connolly\/' に な り ま す 。 unquote_plus 
unquote ( )  と 似 て い ま す が 、 加え て プラス 記号 を 空白 文字 に 置き換え ま す 。  これ は  quote  処理 さ れ た  HTML  フォーム の 値 を 元 に 戻 す の に 必要 な 機能 で す 。 
マップ 型 オブジェクト 、 また は  2  つ の 要素 を も っ た タプル から な る シーケンス を 、 `` URL  に エンコード さ れ た  ( url- encoded ) ' ' に 変換 し て 、 上述 の  urlopen ( )  の オプション 引数  data  に 適 し た 形式 に し ま す 。 
この 関数 は フォーム の フィールド 値 で でき た 辞書 を POST  型 の リクエスト に 渡 す とき に 便利 で す 。 
返 さ れ る 文字 列 は 
の ペア を  " " で 区切 っ た シーケンス で 、 key と  value  の 双方 は 上 の quote_plus ( )  で  quote  処理 さ れ ま す 。 
オプション の パラメタ  doseq  が 与え られ て い て 、 その 評価 結果 が 真 で あ っ た 場合 、 シーケンス  doseq  の 個々 の 要素 に つ い て 
の ペア が 生成 さ れ ま す 。  2  つ の 要素 を も っ た タプル から な る シーケンス が 引数  query  と し て 使 わ れ た 場合 、 各 タプル の 最初 の 値 が  key で 、 2  番目 の 値 が  value  に な り ま す 。 
この とき エンコード さ れ た 文字 列 中 の パラメタ の 順番 は シーケンス 中 の タプル の 順番 と 同じ に な り ま す 。 
モジュール で は 、 関数  parse_qs( )  および parse_qsl( )  を 提供 し て お り 、 クエリ 文字 列 を 解析 し て Python  の データ 構造 に する の に 利用 でき ま す 。 
ローカル システム に お け る 記法 で 表 さ れ た パス 名  path  を 、 URL  に お け る パス 部分 の 形式 に 変換 し ま す 。 
この 関数 は 完全 な  URL  を 生成 する わけ で は あ り ま せ ん 。 
返 さ れ る 値 は 常 に  quote ( )  を 使 っ て  quote  処理 さ れ た もの に な り ま す 。 
URL  の パス の 部分  path  を エンコード さ れ た  URL  の 形式 から ローカル システム に お け る パス 記法 に 変換 し ま す 。 
この 関数 は  path  を デコード する ため に  unquote ( )  を 使 い ま す 。 
クラス URLopener 
URL  を オープン し 、 読み出 す ため の クラス の 基礎 クラス  ( base class ) で す 。 
ここ で  VVV は  urllib  の バージョン 番号 で す 。 
実際 に https :  形式 の  URL  から リソース を 取得 する に は 両方 の 引数 が 必要 で す 。 
クラス FancyURLopener 
FancyURLopener  は  URLopener  の サブ クラス で 、 以下 の  HTTP  レスポンス コード :  30 1 、 30 2、3 0 3 、 30 7 、 および  401  を 取り扱 う 機能 を 提供 し ま す 。 
レスポンス コード  30 x  に 対 し て は 、 Location :  ヘッダ を 使 っ て 実際 の  URL  を 取得 し ま す 。 
レスポンス コード  401  ( 認証 が 要求 さ れ て い る こと を 示 す )  に 対 し て は 、 ベーシック 認証  ( basic  HTTP  authintication )  が 行 わ れ ま す 。 
レスポンス コード  30 x  に 対 し て は 、 最大 で maxtries  属性 に 指定 さ れ た 数 だけ 再帰 呼び出し を 行 う よう に な っ て い ま す 。  この 値 は デフォルト で  10  で す 。 
注意 :  RFC  26 16  に よ る と 、  POST  要求 に 対 する  30 1  および  30 2  応答 は ユーザ の 承認 無し に 自動 的 に リダイレクト し て は な り ま せ ん 。 
実際 は 、 これ ら の 応答 に 対 し て 自動 リダイレクト を 許 す ブラウザ で は POST  を  GET  に 変更 し て お り 、 urllib  で も この 動作 を 再現 し ま す 。 
コンストラクタ に 与え る パラメタ は  URLopener  と 同じ で す 。 
注意 : 基本 的 な  HTTP  認証 を 行 う 際 、  FancyURLopener  インスタンス は prompt _user_ passwd( )  メソッド を 呼び出 し ま す 。 
この メソッド は デフォルト で は 実行 を 制御 し て い る 端末 上 で 認証 に 必要 な 情報 を 要求 する よう に 実装 さ れ て い ま す 。 
必要 なら ば 、 この クラス の サブ クラス に お い て より 適切 な 動作 を サポート する ため に  prompt _user_ passwd( )  メソッド を オーバライド し て も かま い ま せ ん 。 
制限 : 
現在 の ところ 、 以下 の プロトコル だけ が サポート さ れ て い ま す :  HTTP 、 ( バージョン  0 . 9  および  1 . 0 ) 、  Gopher  ( Gopher - +  を 除 く ) 、  FTP 、 および ローカル ファイル 。 
urlretrieve ( )  の キャッシュ 機能 は 、 有効 期限 ヘッダ ( Expirationtimeheader )  を 正し く 処理 でき る よう に ハック する ため の 時間 を 取れ る まで 、 無効 に し て あ り ま す 。 
ある  URL  が キャッシュ に あ る か どう か 調べ る よう な 関数 が あ れ ば と 思 っ て い ま す 。 
。  後方 互換 性 の ため 、  URL  が ローカル システム 上 の ファイル を 指 し て い る よう に 見え る に も 関わ ら ず ファイル を 開 く こと が でき な けれ ば 、  URL  は FTP  プロトコル を 使 っ て 再 解釈 さ れ ま す 。 
この 機能 は 時 と し て 混乱 を 招 く エラー メッセージ を 引き起こ し ま す 。 
関数  urlopen ( )  および  urlretrieve ( )  は 、 ネットワーク 接続 が 確立 さ れ る まで の 間 、 一定 で な い 長 さ の 遅延 を 引き起こ す こと が あ り ま す 。 
この こと は 、 これ ら の 関数 を 使 っ て インタラクティブ な Web  クライアント を 構築 する の は スレッド なし に は 難し い こと を 意味 し ま す 。 
urlopen ( )  また は  urlretrieve ( )  が 返 す データ は サーバ が 返 す 生 の データ で す 。 
この データ は バイナリ データ  ( 例えば 画像 データ )  、 生 テキスト  ( plain text ) 、 また は  ( 例えば )  HTML 
で も かま い ま せ ん 。 
プロトコル は リプライ ヘッダ  ( reply header )  に データ の タイプ に 関 する 情報 を 返 し ま す 。 
タイプ は  Content- Type :  ヘッダ を 見 る こと で 推測 でき ま す 。  Gopher 
プロトコル で は 、 データ の タイプ に 関 する 情報 は  URL  に エンコード さ れ ま す ;  これ を 展開 する こと は 簡単 で は あ り ま せ ん 。 
返 さ れ た データ が  HTML  で あ れ ば 、 
プロトコル を 扱 う コード で は 、 ファイル と ディレクトリ を 区別 でき ま せ ん 。 
この こと から 、 アクセス でき な い ファイル を 指 し て い る URL  から データ を 読み出 そ う と する と 、 予期 し な い 動作 を 引き起こ す 場合 が あ り ま す 。 
URL  が \/ で 終わ っ て い れ ば 、 ディレクトリ を 指 し て い る もの と みな し て 、 それ に 適 し た 処理 を 行 い ま す 。 
しかし 、 ファイル の 読み出し 操作 が  550  エラー  ( URL  が 存在 し な い か 、 主に パー ミッション の 理由 で アクセス でき な い )  に な っ た 場合 、 URL  が ディレクトリ を 指 し て い て 、 末尾 の  \/  を 忘れ た ケース を 処理 する ため 、 パス を ディレクトリ と し て 扱 い ま す 。 
この ため に 、 パー ミッション の ため に アクセス でき な い ファイル を fetch  し よう と する と 、 FTP  コード は その ファイル を 開 こ う と し て  550  エラー に 陥 り 、 次 に ディレクトリ 一覧 を 表示 し よ う と する ため 、 誤解 を 生 む よう な 結果 を 引き起こ す 可能 性 が あ る の で す 。 
よく 調整 さ れ た 制御 が 必要 なら 、 ftplib  モジュール を 使 う か 、 FancyURL Opener  を サブ クラス 化 する か 、 _urlopener  を 変更 し て 目的 に 合わせ る よう 検討 し て くださ い 。 
この モジュール は 認証 を 必要 と する プロキシ を サポート し ま せ ん 。 
将来 実装 さ れ る か も しれ ま せ ん 。 
urllib  モジュール は  URL  文字 列 を 解釈 し たり 構築 し たり する ( ドキュメント 化 さ れ て い な い )  ルーチン を 含 ん で い ま す が 、 URL  を 操作 する ため の インタフェース と し て は 、 
モジュール を お 勧め し ま す 。 
urllib 2  モジュール は 基本 的 な 認証 、 暗号 化 認証 、 リダイ レクション 、 クッキー 、 その 他 の 介在 する 複雑 な アクセス 環境 に お い て  ( 大抵 は  HTTP  で )  URL  を 開 く ため の 関数 と クラス を 定義 し ま す 。 urllib 2  モジュール で は 以下 の 関数 を 定義 し て い ま す : 
URL url  を 開 き ま す 。 
url  は 文字 列 で も  Request オブジェクト で も かま い ま せ ん  。  data  は 文字 列 で 、 サーバ に 送信 する 追加 の データ を 指定 し ま す 。 
HTTP  リクエスト は  data  を サポート する 唯一 の リクエスト 形式 で す が 、 ここ で は  data  は 例えば  urllib . urlencode ( ) が 返 す よう な  application\/x- w w w - form -urlencoded  形式 で エンコード さ れ た バッファ で な く て は な り ま せ ん 。  この 関数 は 以下 の  2  つ の メソッド を 持 つ ファイル 類似 の オブジェクト を 返 し ま す : 
geturl( ) -- 取得 さ れ た リソース の  URL  を 返 し ま す 。 
info ( ) -- 取得 さ れ た ページ の メタ 情報 を 辞書 形式 の オブジェクト で 返 し ま す 。 
エラー が 発生 し た 場合  URLError  を 送出 し ま す 。  どの ハンドラ も リクエスト を 処理 し な かっ た 場合 に は  None  を 返 す こと が あ る の で 注意 し て くださ い  ( デフォルト で イン ストール さ れ る グローバル ハンドラ の  OpenerDirector  は 、 UnknownHandler を 使 っ て 上記 の 問題 が 起き な い よう に し て い ま す ) 。 
標準 で  URL  を 開 く オブジェクト と し て  OpenerDirector  の インスタンス を インストール し ま す 。 
与え られ た 順番 に  URL  ハンドラ を 連鎖 さ せ る  OpenerDirector  の インスタンス を 返 し ま す 。  handler  は  BaseHandler また は  BaseHandler  の サブ クラス の インスタンス の どちら か で す  ( どちら の 場合 も 、 コンスト ラクト は 引数 無し で 呼び出せ る よう に な っ て い な けれ ば な り ま せ ん )  。 
現在 全て の ハンドラ の  handler_oder  は  500  で す が 、 例外 と し て  ProxyHandler  で は  100  に な っ て い ま す 。 
状況 に 応 じ て 、 以下 の 例外 が 送出 さ れ ま す : 
ハンドラ が 何 ら か の 問題 に 遭遇 し た 場合 、 この 例外  ( また は この 例外 から 導出 さ れ た 例外 ) を 送出 し ま す 。 
この 例外 は  IOError の サブ クラス で す 。 
URLError  の サブ クラス で す 。  この オブジェクト は 例外 で な い ファイル 類似 の オブジェクト と し て 返り 値 に 使 う こと が でき ま す ( urlopen ( )  が 返 す の と 同じ もの で す ) 。 
この 機能 は 、 例えば サーバ から の 認証 リクエスト の よう に 、 変わ っ た  HTTP  エラー を 処理 する の に 役立 ち ま す 。 
URLError  の サブ クラス で す 。  この 例外 は  Gopher  ハンドラ に よ っ て 送出 さ れ ま す 。 
クラス Request 
この クラス は  URL  リクエスト を 抽象 化 し た もの で す 。 
url  は 有効 な  URL  を 指 す 文字 列 で な く て は な り ま せ ん 。 
origin _req _host  は 、 RFC  296 5  で 定義 さ れ て い る 元 の トランザクション に お け る リクエスト ホスト  ( request - host  of theorigin transaction )  で す 。 
デフォルト の 値 は cookielib . request _host ( self )  で す 。 
この 値 は 、 ユーザ に よ っ て 開始 さ れ た 元々 の リクエスト に お け る ホスト 名 や  IP  アドレス で す 。 
例えば 、 もし リクエスト が あ る  HTML  ドキュメント 内 の 画像 を 指 し て い れ ば 、 この 値 は 画像 を 含 ん で い る ページ へ の リクエスト に お け る リクエスト ホスト に な る はず で す 。 
unverifiable  は 、 RFC  296 5  の 定義 に お い て 、 該当 する リクエスト が 証明 不能  ( unverifiable )  で あ る か どう か を 示 し ま す 。 
デフォルト の 値 は False  で す 。 
証明 不能 な リクエスト と は 、 ユーザ が 受け入れ の 可否 を 選択 でき な い よう な  URL  を 持 つ リクエスト の こと で す 。 
例えば 、 リクエスト が HTML  ドキュメント 中 の 画像 で あ り 、 ユーザ が この 画像 を 自動 的 に 取得 する か どう か を 選択 でき な い 場合 に は 、 証明 不能 フラグ は  True  に な り ま す 。 
クラス OpenerDirector 
OpenerDirector  クラス は 、 BaseHandler  の 連鎖 的 に 呼び出 し て  URL  を 開 き ま す 。 
この クラス は ハンドラ を どの よう に 連鎖 さ せ る か 、 また どの よう に エラー を リカバリ する か を 管理 し ま す 。 
クラス BaseHandler 
この クラス は ハンドラ 連鎖 に 登録 さ れ る 全て の ハンドラ が ベース と し て い る クラス で す  -  この クラス で は 登録 の ため の 単純 な メカニズム だけ を 扱 い ま す 。 
クラス HTTPDefaultErrorHandler 
HTTP  エラー 応答 の ため の 標準 の ハンドラ を 定義 し ま す ;  全て の レスポンス に 対 し て 、 例外  HTTPError  を 送出 し ま す 。  クラス HTTPRedirectHandler 
リ ダイ レクション を 扱 う クラス で す 。 
クラス HTTPCookieProcessor 
HTTP  Cookie  を 扱 う ため の クラス で す 。 
クラス ProxyHandler 
クラス HTTPPasswordMgr 
( realm , uri)  - (user ,  password ) の 対応 付け データベース を 保持 し ま す 。 
クラス HTTPPasswordMgrWithDefaultRealm 
( realm , uri)  - (user ,  password )  の 対応 付け データベース を 保持 し ま す 。 
レルム  None  は その 他 諸々 の レルム を 表 し 、 他 の レルム が 該当 し な い 場合 に 検索 さ れ ま す 。  クラス AbstractBasicAuthHandler 
クラス HTTPBasicAuthHandler 
遠隔 ホスト と の 間 で の 認証 を 扱 い ま す 。  password _mgr  を 与え る 場合 、 HTTPPasswordMgr  と 互換 性 が な けれ ば な り ま せ ん ;  互換 性 の ため に サポート し な けれ ば な ら な い インタフェース に つ い て の 情報 は セクション 11 . 5 . 7  を 参照 し て くださ い 。 
クラス ProxyBasicAuthHandler 
プロキシ と の 間 で の 認証 を 扱 い ま す 。  password _mgr  を 与え る 場合 、 HTTPPasswordMgr  と 互換 性 が な けれ ば な り ま せ ん ;  互換 性 の ため に サポート し な けれ ば な ら な い インタフェース に つ い て の 情報 は セクション 11 . 5 . 7  を 参照 し て くださ い 。 
クラス AbstractDigestAuthHandler 
クラス HTTPDigestAuthHandler 
クラス ProxyDigestAuthHandler 
クラス HTTPHandler 
HTTP  の  URL  を 開 き ま す 。  クラス HTTPSHandler 
HTTPS  の  URL  を 開 き ま す 。  クラス FileHandler 
ローカル ファイル を 開 き ま す 。 
クラス FTPHandler 
FTP  の  URL  を 開 き ま す 。 
クラス CacheFTPHandler ( 
FTP  の  URL  を 開 き ま す 。 
遅延 を 最小 限 に する ため に 、 開 か れ て い る  FTP  接続 に 対 する キャッシュ を 保持 し ま す 。 
クラス GopherHandler 
gopher  の  URL  を 開 き ま す 。 
クラス UnknownHandler 
その 他 諸々 の ため の クラス で 、 未知 の プロトコル の  URL  を 開 き ま す 。 
URL  を 解釈 し て  6  つ の 構成 要素 に し 、 6  要素 の タプル : ( アドレス スキーム 、 ネットワーク 上 の 位置 、 パス 、 パラメタ 、 クエリ 、 フラグメント 指定 子 )  を 返 し ま す 。 
この タプル は  URL  の 一般 的 な 構造 : 
以下 の 例 : urlparse ( 'http:\/\/www .cwi. nl : 80 \/ % 7Eguido \/ Python . html') 
で は 、 タプル 
( 'http' , ' w w w .cwi. nl : 80 ' , '\/ % 7Eguido \/ Python . html' , ' ', ' ', '')  に な り ま す 。 
default _scheme  引数 が 最低 さ れ て い る 場合 、 標準 の アドレス スキーム を 表 し 、 アドレス スキーム を 指定 し て い な い  URL  文字 列 に 対 し て のみ 使 わ れ ま す 。 
この 引数 の 標準 の 値 は 空 文字 列 で す 。  allow _ fragments  引数 が ゼロ の 場合 、 URL  の アドレス スキーム が フラグメント 指定 を サポート し て い て も 指定 でき な く な り ま す 。 
この 引数 の 標準 の 値 は  1  で す 。 
urlparse ( )  に 似 て い ま す が 、 URL  から  params  を 切り離 し ま せ ん 。 
この メソッド は 通常 、 URL  の  path  部分 に お い て 、 各 セグメント に パラメタ 指定 を でき る よう に し た 最近 の  URL  構文  ( RFC  239 6  参照 )  の 場合 に 、 urlparse ( )  の 代わり に 使 わ れ ま す 。 
パス セグメント と パラメタ を 分割 する ため に は 分割 用 の 関数 が 必要 で す 。 
この 関数 は  5  要素 の タプル : ( アドレス スキーム 、 ネットワーク 上 の 位置 、 パス 、 クエリ 、 フラグメント 指定 子 )  を 返 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
urlsplit ( )  が 返 す よう な 形式 の タプル 中 の エレメント を 組み合わせ て 、 文字 列 の 完全 な  URL  に し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
` ` 基底  URL ' ' ( base )  と ` ` 相対  URL ' ' (url)  を 組み合わせ て 、 完全 な  URL  ( `` 絶対  URL ' ')  を 構成 し ま す 。 
ぶっちゃけ 、 この 関数 は  基底  URL  の 要素 、 特に アドレス スキーム 、 ネットワーク 上 の 位置 、 および パス  ( の 一部 )  を 使 っ て 、 相対  URL  に な い 要素 を 提供 し ま す 。 
以下 の 例 : urljoin ( 'http:\/\/www .cwi.nl \/ % 7Eguido \/ Python . html' , ' FAQ . html') 
で は 、 文字 列 
'http:\/\/www .cwi.nl \/ % 7Eguido \/ FAQ . html' に な り ま す 。 
allow _ fragments  引数 は  urlparse ( )  に お け る 引数 と 同じ 意味 を 持 ち ま す 。 
url  が フラグメント 指定 子 を 含 む 場合 、 フラグメント 指定 子 を 持 た な い バージョン に 修正 さ れ た  url と 、 別 の 文字 列 に 分割 さ れ た フラグメント 指定 子 を 返 し ま す 。 
url 中 に フラグメント 指定 子 が な い 場合 、 その まま の  url  と 空 文字 列 を 返 し ま す 。 
この  RFC  で は 絶対  URL  の 形式 的 な 文法 と 意味 付け を 仕様 化 し て い ま す 。 
この  RFC  に は 絶対  URL  と 相対  URL  を 結合 する ため の 規則 が ボーダ ケース の 取扱い 方 を 決定 する  ` ` 異常 な 例 ' '  つき で 収め られ て い ま す 。 
この  RFC  で は  Uniform  Resource  Name ( URN )  と Uniform  Resource  Locator ( URL )  の 両方 に 対 する 一般 的 な 文法 的 要求 事項 を 記述 し て い ま す 。 
ポリシー と し て 、 Python は 起動 時 に ユーザー 毎 の 設定 を 行 う コード を 実行 する こと は し ま せ ん ( ただし 対話 型 セッション で 環境 変数 PYTHON START UP が 設定 さ れ て い た 場合 に は その スクリプト を 実行 し ま す 。  ) 。 
しかし ながら 、 プログラム や サイト に よ っ て は 、 プログラム が 要求 し た 時 に ユーザー ごと の 設定 ファイル を 実行 でき る と 便利 な こと も あ り ま す 。 
この モジュール は その よう な 機構 を 実装 し て い ま す 。 
この 機構 を 利用 し た い プログラム で は 、 以下 の 文 を 実行 し て くださ い 。 
user モジュール は ユーザー の ホーム ディレクトリ の . pythonrc. py ファイル を 探 し 、 オープン でき る なら グローバル 名前 空間 で 実行 し ま す ( execfile ( ) 
を 利用 し ま す ) 。 
この 段階 で 発生 し た エラー は catch さ れ ま せ ん 。 user モジュール を import し た プログラム に 影響 し ま す 。 
どの プログラム が 利用 し て い る か わか ら な い 状況 で 、 標準 の モジュール や 関数 の ふるまい を 替え る こと は お すすめ でき ま せ ん 。  この 機構 を 使 お う と する プログラマ へ の 提案 :  あなた の パッケージ 向け の オプション を ユーザー が 設定 でき る よう に する シンプル な 方法 は 、 . pythonrc. py ファイル で 変数 を 定義 し て 、 あなた の プログラム で テスト する 方法 で す 。 
たとえば 、 spam モジュール で メッセージ 出力 の レベル を 替え る  user . spam_verbose 変数 を 参照 する に は 以下 の よう に し ま す : 
( ユーザ が spam_verbose を ファイル . pythonrc. py 内 で 定義 し て い な い 時 に getattr ( ) の 3 引数 形式 は 使 わ れ ま す 。  ) 大 規模 な 設定 の 必要 が あ る プログラム で は プログラム ごと の 設定 ファイル を 作 る と い い で す 。 
セキュリティ や プライバシー に 配慮 する プログラム で は この モジュール を import し な い で くださ い 。 
サイト 毎 の カスタマイズ を 行 う 機構 . 
この モジュール で は ファイル を uuencode 形式 ( 任意 の バイナリ データ を ASCII 文字 列 に 変換 し た もの ) に エンコード 、 デコード する 機能 を 提供 し ま す 。  引数 と し て ファイル が 仮定 さ れ て い る 所 で は 、 ファイル の よう な オブジェクト が 利用 でき ま す 。 
後方 互換 性 の ため に 、 パス 名 を 含 む 文字 列 も 利用 でき る よう に し て い て 、 対応 する ファイル を 開 い て 読み書き し ま す 。 
uu モジュール で は 以下 の 関数 を 定義 し て い ま す 。 
in_file を out_file に エンコード し ま す 。 
エンコード さ れ た ファイル に は 、 デフォルト で デコード 時 に 利用 さ れ る name と mode を 含 ん だ ヘッダ が つ き ま す 。 
省略 さ れ た 場合 に は 、 in_file から 取得 さ れ た 名前 か ' - ' と い う 文字 と 、 0666 が それぞれ デフォルト 値 と し て 与え られ ま す 。 
uuencode 形式 で エンコード さ れ た in_file を デコード し て varout_file に 書き出 し ま す 。 
もし out_file が パス 名 で かつ ファイル を 作 る 必要 が あ る とき に は 、  mode が パー ミッション の 設定 に 使 わ れ ま す 。 
out_file と mode の デフォルト 値 は in_file の ヘッダ から 取得 さ れ ま す 。 
しかし 、 ヘッダ で 指定 さ れ た ファイル が 既に 存在 し て い た 場合 は 、 uu . Error が 起き ま す 。 
例外 Error  ( 
Exception の サブ クラス で 、 uu . decode ( ) に よ っ て 、 さまざま な 状況 で 起き る 可能 性 が あ り ま す 。 
上 で 紹介 さ れ た 場合 以外 に も 、 ヘッダ の フォーマット が 間違 っ て い る 場合 や 、 入力 ファイル が 途中 で 区切れ た 場合 に も 起き ま す 。 
ASCII  から バイナリ へ 、 バイナリ から ASCII へ の 変換 を サポート する モジュール 。  . 
videoreader  は  Quick Time  ムービー を 読み込 み 、 デコード し 、 プログラム へ 渡せ ま す 。 
この モジュール は さらに オーディオ トラック を サポート し て い ま す 。 
警告 メッセージ は 一般 に 、 ユーザ に 警告 し て お い た 方 が よ い よう な 状況 下 に プログラム が 置 か れ て い る が 、 その 状況 は  ( 通常 は )  例外 を 送出 し たり その プログラム を 終了 さ せ る ほど の 正当 な 理由 が な い と い っ た 状況 で 発 さ れ ま す 。 
例えば 、 プログラム が 古 い モジュール を 使 っ て い る 場合 に は 警告 を 発 し た く な る か も しれ ま せ ん 。  Python  プログラマ は 、 この モジュール の  warn ( )  関数 を 使 う こと で 警告 を 発 する こと が でき ま す 。 
( C  言語 の プログラマ は PyErr_Warn ( )  を 使 い ま す ;  詳細 は 
を 参照 し て くださ い ) 。  警告 メッセージ は 通常  sys . stderr  に 出力 さ れ ま す が 、 その 処理 方法 は 、 全て の 警告 に 対 する 無視 する 処理 から 警告 を 例外 に 変更 する 処理 まで 、 柔軟 に 変更 する こと が でき ま す 。 
警告 の 処理 方法 は 警告 カテゴリ  ( 以下 参照 ) 、 警告 メッセージ テキスト 、 そして 警告 を 発 し た ソース コード 上 の 場所 に 基づ い て 変更 する こと が でき ま す 。 
filterwarnings ( )  を 呼び出 し て 一致 規則 を フィルタ に 追加 する こと が でき 、 resetwarnings ( )  を 呼び出 し て フィルタ を 標準 設定 の 状態 に リセット する こと が でき ま す 。  警告 メッセージ の 印字 は  show warning ( )  を 呼び出 し て 行 う こと が でき 、 この 関数 は 上書き する こと が でき ま す ;  この 関数 の 標準 の 実装 で は 、 formatwarning ( )  を 呼び出 し て 警告 メッセージ を 書式 化 し ま す が 、 この 関数 に つ い て も 自作 の 実装 を 使 う こと が でき ま す 。 
5 . 17  waste-- Apple 製 で は な い  TextEdit  の 置き換え 
Up :  5 .  文書 化 さ れ て い な い モジュール 
WASTE ウィ ジェット と ライブラリ に 関 する 情報 サイト 。  ドキュメント と ダウンロード も ここ から 行なえ ま す 。 
wave モジュール は 、 WAV サウンド フォーマット へ の 便利 な インターフェイス を 提供 する モジュール で す 。 
この モジュール は 圧縮 \/ 展開 を サポート し て い ま せ ん が 、 モノラル \/ ステレオ に は 対応 し て い ま す 。  wave モジュール は 、 以下 の 関数 と 例外 を 定義 し て い ま す 。 
file が 文字 列 なら その 名前 の ファイル を 開 き 、 そう で な い なら ファイル の よう に シーク 可能 な オブジェクト と し て 扱 い ま す 。  mode は 以下 の うち の いずれ か で す 。 
WAV ファイル に 対 し て 読み込 み \/ 書き込み 両方 の モード で 開 く こと は でき な い こと に 注意 し て 下さ い 。 ' r ' と 'rb ' の mode は Wave _ read オブジェクト を 返 し 、 ' w ' と 'w b' の mode は Wave _write オブジェクト を 返 し ま す 。 
mode が 省略 さ れ て い て 、 ファイル の よう な オブジェクト が file と し て 渡 さ れ る と 、 
file . mode が mode の デフォルト 値 と し て 使 わ れ ま す ( 必要 で あ れ ば 、 さらに フラグ " b " が 付け加え られ ま す ) 。 
open ( ) と 同義 。  後方 互換 性 の ため に 残 さ れ て い ま す 。 
WAV の 仕様 を 犯 し たり 、 実装 の 欠陥 に 遭遇 し て 何 か 実行 不 可能 と な っ た 時 に 発生 する エラー 。 
1 4 . 5 . 1  Wave _ read  オブジェクト 
弱 参照 の 主な 用途 は 、 巨大 な オブジェクト を 保持 する キャッシュ や マップ 型 の 実装 に お い て 、 キャッシュ や マップ 型 に あ る と い う 理由 だけ オブジェクト を 存続 さ せ た く な い 場合 で す 。 
例えば 、 巨大 な バイナリ 画像 の オブジェクト が たくさん あ り 、 それぞれ に 名前 を 関連 付け た い と し ま す 。 
Python  の 辞書 型 を 使 っ て 名前 を 画像 に 対応 付け たり 画像 を 名前 に 対応 付け たり する と 、 画像 オブジェクト は 辞書 内 の キー や 値 に 使 わ れ て い る ため 存続 し つづけ る こと に な り ま す 。 
weakref  モジュール が 提供 し て い る WeakKeyDictionary  や  WeakValueDictionary  クラス は その 代用 で 、 対応 付け を 構築 する の に 弱 参照 を 使 い 、 キャッシュ や マップ 型 に 存在 する と い う 理由 だけ で オブジェクト を 存続 さ せ な い よう に し ま す 。 
例えば 、 もし あ る 画像 オブジェクト が  WeakValueDictionary  の 値 に な っ て い た 場合 、 最後 に 残 っ た 画像 オブジェクト へ の 参照 を 弱 参照 マップ 型 が 保持 し て い れ ば 、 ガーベジ コレクション は この オブジェクト を 再 利用 でき 、 画像 オブジェクト に 対 する 弱 参照 内 の 対応 付け は その まま 削除 さ れ ま す 。 
WeakKeyDictionary  や  WeakValueDictionary  は 弱 参照 を 使 っ て 実装 さ れ て い て 、 キー や 値 が ガーベジ コレクション に よ っ て 回収 さ れ た こと を 弱 参照 辞書 に 知 ら せ る よう な 弱 参照 オブジェクト の コール バック 関数 を 設定 し て い ま す 。 
ほとんど の プログラム が 、 いずれ か の 弱 参照 辞書 型 を 使 う だけ で 必要 を 満た せ る はず で す  - - 自作 の 弱 参照 辞書 を 直接 作成 する 必要 は 普通 は あ り ま せ ん 。 
list  や dict  など 、 いく つ か の 組み込 み 型 は 弱 参照 を 直接 サポート し ま せ ん が 、 以下 の よう に サブ クラス 化 を 行 え ば サポート を 追加 でき ま す : 
弱 参照 を サポート する ため に 拡張 型 を 簡単 に 作れ ま す 。 
詳細 に つ い て は 、 3 . 3 . 3 節  ` ` 拡張 型 に お け る 弱 参照 ' ' を 読 ん で くださ い 。  クラス ref 
object へ の 弱 参照 を 返 し ま す 。 
リファレント が まだ 生き て い る なら ば 、 元 の オブジェクト は 参照 オブジェクト の 呼び出し で 取り出せ す 。  リファレント が もはや 生き て い な い なら ば 、 参照 オブジェクト を 呼び出 し た とき に None  を 返 し ま す 。 
それ ら は object が 削除 さ れ た 後 で も それ ら の ハッシュ 値 を 保持 し ま す 。 
object が 削除 さ れ て から 初めて hash ( ) が 呼び出 さ れ た 場合 に 、 その 呼び出し は TypeError を 発生 さ せ ま す 。  弱 参照 は 等価 性 の テスト を サポート し て い ま す が 、 順序 を サポート し て い ま せ ん 。 
参照 が まだ 生き て い る なら ば 、 callback に 関係 な く 二 つ の 参照 は それ ら の リファレント と 同じ 等価 関係 を 持 ち ま す 。 
リファレント の どちら か 一方 が 削除 さ れ た 場合 、 参照 オブジェクト が 同じ オブジェクト で あ る 場合 に 限 り 、 その 参照 は 等価 で す 。 
バージョン  2 . 4  で  変更  さ れ た 仕様 : 以前 は ファクトリ で し た が 、 サブ クラス 化 可能 な 型 に な り ま し た 。  object  型 から 導出 さ れ て い ま す 
弱 参照 を 使 う object へ の プロキシ を 返 し ま す 。 
弱 参照 オブジェクト と とも に 用い られ る 明示 的 な 参照 外し を 要求 する 代わり に 、 これ は ほとんど の コンテキスト に お け る プロキシ の 利用 を サポート し ま す 。 
object が 呼び出し 可能 か どう か に 依存 し て 、 返 さ れ る オブジェクト は ProxyType また は CallableProxyType の どちら か 一方 の 型 を 持 ち ま す 。 
object を 参照 する 弱 参照 と プロキシ の 数 を 返 し ま す 。 
object を 参照 する すべて の 弱 参照 と プロキシ オブジェクト の リスト を 返 し ま す 。 
クラス WeakKeyDictionary 
キー を 弱 く 参照 する マッピング クラス 。 
もはや キー へ の 強 い 参照 が なくな っ た とき に 、 辞書 の エントリ は 捨て られ ま す 。 
アプリケーション の 他 の 部分 が 所有 する オブジェクト へ 属性 を 追加 する こと も な く 、 それ ら の オブジェクト に 追加 データ を 関連 づけ る ため に これ を 使 う こと が でき ま す 。 
これ は 属性 へ の アクセス を オーバーライド する オブジェクト に 特 に 便利 で す 。 
注意 : 注意 :  WeakKeyDictionary  は  Python  辞書 型 の 上 に 作 ら れ て い る の で 、 反復 処理 を 行 う とき に は サイズ 変更 し て は な り ま せ ん 。 
WeakKeyDictionary の 場合 、 反復 処理 の 最中 に プログラム が 行 っ た 操作 が 、 ( ガベージ コレクション の 副 作用 と し て ) 「 魔法 の よう に 」 辞書 内 の 要素 を 消し去 っ て しま う ため 、 確実 な サイズ 変更 は 困難 な の で す 。 
クラス WeakValueDictionary 
値 を 弱 く 参照 する マッピング クラス 。 
弱 参照 オブジェクト の ため の 型 オブジェクト 。 
呼び出し 可能 で な い オブジェクト の プロキシ の ため の 型 オブジェクト 。 
呼び出し 可能 な オブジェクト の プロキシ の ため の 型 オブジェクト 。 
プロキシ の ため の すべて の 型 オブジェクト を 含 む シーケンス 。 
これ は 両方 の プロキシ 型 の 名前付け に 依存 し な い で 、 オブジェクト が プロキシ か どう か の テスト を より 簡単 に でき ま す 。 
プロキシ オブジェクト が 使 わ れ て も 、 元 の オブジェクト が ガーベジ コレクション さ れ て しま っ て い る とき に 発生 する 例外 。 
これ は 標準 の ReferenceError 例外 と 同じ で す 。 
webbrowser モジュール に は ウェブ ベース の ドキュメント を 表示 する ため の 、 とても ハイ レベル な インターフェース が 定義 さ れ て い ま す 。 
この コントローラー オブジェクト は 使 い 易 く 、 プラットフォーム 非 依存 で す 。 
たいてい の 環境 で は 、 この モジュール の open ( ) を 呼び出 す だけ で 正し く 動作 し ま す 。 Unix で は 、 X 11 上 で グラフィカル な ブラウザ が 選択 さ れ ま す が 、 グラフィカル な ブラウザ が 利用 でき な かっ たり 、 X 11 が 利用 でき な い 場合 は テキスト モード の ブラウザ が 使 わ れ ま す 。 
もし テキスト モード の ブラウザ が 使 わ れ た ら 、 ユーザ が ブラウザ から 抜け出 す まで プロセス の 呼び出し は ブロック さ れ ま す 。 Unix で は 、 環境 変数 BROWSER が 存在 する なら プラットフォーム の デフォルト で あ る ブラウザ の リスト を オーバーライド し 、 コロン で 区切 ら れ た リスト の 順 に ブラウザ の 起動 を 試み ま す 。 
ブラウザ の コントロール エラー が 起こ る と 発生 する 例外 。 
以下 の 関数 が 定義 さ れ て い ま す : 
デフォルト の ブラウザ で url を 表示 し ま す 。 
new が true なら 、 可能 で あ れ ば ブラウザ の 新し い ウィンドウ が 開 き ま す 。 
autoraise が true なら 、 可能 で あ れ ば ウィンドウ が 前面 に 表示 さ れ ま す ( 多く の ウィンドウ マネージャ で は この 変数 の 設定 に 関わ ら ず 、 前面 に 表示 さ れ ま す ) 。 
可能 で あ れ ば 、 デフォルト ブラウザ の 新し い ウィンドウ で url を 開 き ま す が 、 そう で な い 場合 は ブラウザ の ただ 1 つ の ウィンドウ で url を 開 き ま す 。 
ブラウザ の 種類 name の コントローラー オブジェクト を 返 し ま す 。 
もし name が 空 文字 列 なら 、 呼び出 し た 環境 に 適 し た デフォルト ブラウザ の コントローラー を 返 し ま す 。 
ブラウザ の 種類 name を 登録 し ま す 。 
ブラウザ の 種類 が 登録 さ れ た ら 、 get ( ) で その ブラウザ の コントローラー を 呼び出 す こと が でき ま す 。 
instance が 指定 さ れ な かっ たり 、 None なら 、 インスタンス が 必要 な 時 に は constructor が パラメータ なし に 呼び出 さ れ て 作 ら れ ま す 。 
instance が 指定 さ れ た ら 、 constructor は 呼び出 さ れ な い の で 、 None で かま い ま せ ん 。  この 登録 は 、 変数 BROWSER を 設定 する か 、 get を 空 文字 列 で な く 、 宣言 し た ハンドラ の 名前 と 一致 する 引数 と とも に 呼び出 す とき だけ 、 役 に 立 ち ま す 。 
いく つ か の 種類 の ブラウザ が あらかじめ 定義 さ れ て い ま す 。 
この モジュール で 定義 さ れ て い る 、 関数 get ( ) に 与え る ブラウザ の 名前 と 、 それぞれ の コントローラー クラス の インスタンス を 以下 の 表 に 示 し ま す 。 
` ` Konqueror ' ' は Unix の KDE デスクトップ 環境 の ファイル マネージャ で 、 KDE が 動作 し て い る 時 に だけ 意味 を 持 ち ま す 。 
何 か 信頼 でき る 方法 で KDE を 検出 する の が い い で しょ う ; 変数 KDEDIR で は 十分 で は あ り ま せ ん 。 
また 、 KDE  2 で konqueror コマンド を 使 う とき に も 、 ``kfm ' ' が 使 わ れ ま す -- Konqueror を 動作 さ せ る の に 最も 良 い 方法 が 実装 に よ っ て 選択 さ れ ま す 。 
Windows プラットフォーム のみ ; 標準 拡張 モジュール win32api と win32 con を 必要 と し ま す 。 
MacOS プラットフォーム のみ ; 
マニュアル に 解説 さ れ て い る 標準 MacPython モジュール ic を 必要 と し ま す 。 
1 1 . 1 . 1  ブラウザ コントローラー オブジェクト 
この モジュール に 含 ま れ る 唯一 の 関数 は あ る こと を 推測 し ま す 。  つまり 、 与え られ た ファイル を 開 く ため に は 、 利用 可能 な データベース モジュール ( 
、 
) の どれ を 用い る べ き か と い う こと で す 。 
ファイル が 読め な い か 存在 し な い ため に 開 く こと が 出来 な い 場合 は None 、 ファイル の 形式 を 推測 でき な い 場合 は 空 の 文字 列 ( ' ' ) 、 推測 でき る 場合 は 必要 な モジュール 名 ( ' dbm' 、 'gdbm ' など ) を 含 む 文字 列 を 返 し ま す 。 
リリース  2 . 1  で 撤廃 さ れ ま し た 。 
を 代り に 使 っ て くださ い 。 
注意 : Python  2 . 1  以前 の リリース で は 、 この モジュール は 
モジュール の 実装 に お け る 一部 で し た 。 
現在 は もう 使 わ れ て い ま せ ん 。 
この モジュール を 直接 使 わ な い で くださ い ;  代わり に 
を 使 っ て くださ い 。  This  module  wasan implementation  detail  of the この モジュール は  Wichmann- Hill  に よ る 擬似 乱数 生成 器 クラス を 実装 し ま す 。 
この クラス は また 、  whrandom と 名づけ られ て い ま す 。 
この モジュール で は また 、 Wichmann- Hill  アルゴリズム に 特有 の 以下 の メソッド を 提供 し て い ま す : 
整数  x 、 y 、 z  から 乱数 生成 器 を 初期 化 し ま す 。 
この モジュール が 最初 に 取り込 ま れ た とき に 、 乱数 は 現在 の 時刻 から 取り出 さ れ た 値 で 初期 化 さ れ ま す 。  x 、 y 、 および  z  が 省略 さ れ る か  0  の 場合 、 乱数 の シード は 現在 の システム 時刻 から 計算 さ れ ま す 。 
引数 の うち 3  つ 全て で は な く 、 1  また は  2  個 だけ が  0  の 場合 、 ゼロ に 鳴 っ て い る 値 は  1  に 置き換え られ ま す 。 
この こと に よ り 、 一見 し て 異な る シード 値 が 同じ 値 に な っ て しま い 、 乱数 生成 器 から 生成 さ れ る 擬似 乱 数 列 も これ に 対応 し ま す 。 
空 で な い シーケンス  seq  から ランダム に 要素 を 選 ん で 返 し ま す 。 
範囲  [ 0 . 0  . . .  1 . 0 )  から 次 の 浮動 小数 点数 の 乱数  N  を 返 し ま す 。 
この モジュール が 最初 に インポート さ れ た 際 、 乱数 は 現在 の 時刻 から 取り出 さ れ た 値 で 初期 化 さ れ ま す 。 
で あ る よう な ランダム な 実数  N を 返 し ま す 。 
従 っ て 、 N =  whrandom. random( )  を 以下 の コード : 
の よう に 書 く こと も でき ま す 。  乱数 生成 器 の 別々 の インスタンス を 使 っ た 場合 、 擬似 乱数 の 列 は 独立 に な る の で 注意 し て くださ い 。 
22 . 3  winsound -- Windows  用 の 音声 再生 インタフェース 
A .  ドキュメント 化 さ れ て い な い モジュール 
22 . 3  winsound  -- Windows  用 の 音声 再生 インタフェース 
winsound  モジュール は  Windows  プラットフォーム 上 で 提供 さ れ て い る 基本 的 な 音声 再生 機構 へ の アクセス 手段 を 提供 し ま す 。 
この モジュール で は いく つ か の 関数 と 定数 が 定義 さ れ て い ま す 。 
システム が スピーカ を 鳴ら す こと が でき な い 場合 、 例外  RuntimeError  が 送出 さ れ ま す 。 
注意 : Windows  95  および  98  で は 、 Windows  の 関数  Beep ( ) は 存在 し ま す が 役 に 立 ち ま せ ん  ( この 関数 は 引数 を 無視 し ま す ) 。 
これ ら の ケース で は 、 Python  は ポート を 直接 操作 し て  Beep ( )  を シミュレート し ま す  ( バージョン  2 . 1  で 追加 さ れ ま し た )  。 
この 機能 が 全て の システム で 動作 する か どう か は わか り ま せ ん 。 
プラットフォーム の  API  から 関数  PlaySound ( )  を 呼び出 し ま す 。 
引数  sound  は ファイル 名 、 音声 データ の 文字 列 、 また は  None を と り 得 ま す 。 
sound  の 解釈 は  flags  の 値 に 依存 し ま す 。  この 値 は 以下 に 述べ る 定数 を ビット 単位 で  OR  し て 組み合わせ た もの に な り ま す 。 
システム の エラー が 発生 し た 場合 、 例外  RuntimeError  が 送出 さ れ ま す 。 
根底 に あ る  MessageBeep ( )  関数 を プラットフォーム の  API  から 呼び出 し ま す 。 
この 関数 は 音声 を レジストリ の 指定 に 従 っ て 再生 し ま す 。 
type  引数 は どの 音声 を 再生 する か を 指定 し ま す ;  と り 得 る 値 は - 1  、  MB _ ICONAST ERISK  、  MB _ ICONEXCLAMATION  、 MB _ ICONHAND  、  MB _ ICONQUESTION  、 および  MB _ OK  で 、 全て 以下 に 記述 さ れ て い ま す 。 
値  - 1  は ` ` 単純 な ビープ 音 ' ' を 再生 し ま す ;  この 値 は 他 の 場合 で 音声 を 再生 する こと が でき な かっ た 際 の 最終 的 な 代替 音 で す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
sound  パラメタ が  WAV  ファイル 名 で あ る こと を 示 し ま す 。 
SND _ ALIAS  と 同時 に 使 っ て は いけ ま せ ん 。  SND _ ALIAS 
引数  sound  は レジストリ に あ る 音声 データ に 関連 付け られ た 名前 で あ る こと を 示 し ま す 。 
対応 する コントロール パネル で の 音声 名 
例えば 以下 の よう に 使 い ま す : 
音声 データ を 繰り返 し 再生 し ま す 。 
システム が ブロック し な い よう に する ため 、 SND _ ASYNC  フラグ を 同時 に 使 わ な く て は な り ま せ ん 。 
SND _ MEMORY  と 同時 に 使 う こと は でき ま せ ん 。 
PlaySound ( )  の 引数  sound  が 文字 列 の 形式 を と っ た  WAV  ファイル の メモリ 上 の イメージ で あ る こと を 示 し ま す 。 
注意 : この モジュール は メモリ 上 の イメージ を 非 同期 に 再生 する 機能 を サポート し て い ま せ ん 。 
従 っ て 、 この フラグ と  SND _ ASYNC  を 組み合わせ る と 例外  RuntimeError  が 送出 さ れ ま す 。  SND _ PURGE 
指定 し た 音声 の 全て の インスタンス に つ い て 再生 処理 を 停止 し ま す 。 
音声 を 非 同期 に 再生 する よう に し て 、 関数 呼び出し を 即座 に 返 し ま す 。 
指定 し た 音声 が 見つか ら な かっ た 場合 に システム 標準 の 音声 を 鳴ら さ な い よう に し ま す 。 
現在 鳴 っ て い る 音声 を 中断 さ せ な い よう に し ま す 。 
サウンド ドライバ が ビジー 状態 に あ る 場合 、 関数 が すぐ 返 る よう に し ま す 。 
音声  SystemDefault  を 再生 し ま す 。 
音声  SystemExclamation  を 再生 し ま す 。 
音声  SystemHand  を 再生 し ま す 。 
音声  SystemQuestion  を 再生 し ま す 。 
2  つ の 例外 クラス が 同様 に し て 定義 さ れ て い ま す 。 
クラス Packer
Packer  は データ を  XDR  表現 に パック する ため の クラス で す 。 
Packer  クラス の インスタンス 生成 は 引数 なし で 行 わ れ ま す 。  クラス Unpacker
Unpacker  は  Packer  と 対 を な し て い て 、 文字 列 バッファ から XDR  を アン パック する ため の クラス で す 。 
入力 バッファ  data を 引数 に 与え て インスタンス を 生成 し ま す 。 
この RFC  が 、 かつて この モジュール が 最初 に 書 か れ た 当時 に XDR  標準 で で あ っ た データ の エンコード 方法 を 定義 し て い ま し た 。 
現在 は  RFC  18 32  に 更新 さ れ て い る よう で す 。 
こちら が 新し い 方 の RFC で 、 XDR  の 改訂 版 が 定義 さ れ て い ま す 。 
12 . 17 . 1  Packer  オブジェクト 
文書 オブジェクト モデル 、 また は `` DOM' ' は 、 ワールド ワイド ウェブ コンソーシアム  ( World  Wide  Web  Consortium ,  W 3 C )  に よ る 、 XML  ドキュメント に アクセス し たり 変更 を 加え たり する ため の 、 プログラミング 言語 間 共通 の  API  で す 。 
DOM  実装 に よ っ て 、 XML  ドキュメント は ツリー 構造 と し て 表現 さ れ ま す 。  また 、 クライアント コード 側 で ツリー 構造 を ゼロ から 構築 でき る よう に な り ま す 。 
さらに 、 前述 の 構造 に 対 し て 、 よく 知 ら れ た インタフェース を も つ 一連 の オブジェクト を 通 し た アクセス 手段 も 提供 し ま す 。  DOM  は ランダム アクセス を 行 う アプリケーション で 非常 に 有用 で す 。 
SAX  で は 、 一 度 に 閲覧 する こと が でき る の は ドキュメント の ほんの 一 部分 で す 。 
ある  SAX  要素 に 注目 し て い る 際 に は 、 別 の 要素 を アクセス する こと は でき ま せ ん 。 
また テキスト ノード に 注目 し て い る とき に は 、 その 中 に 入 っ て い る 要素 を アクセス する こと が でき ま せ ん 。  SAX  に よ る アプリケーション を 書 く とき に は 、 プログラム が ドキュメント 内 の どこ を 処理 し て い る の か を 追跡 する よう 、 コード の どこ か に 記述 する 必要 が あ り ま す 。 
SAX  自体 が その 作業 を 行 っ て くれ る こと は あ り ま せ ん 。 
さらに 、 XML  ドキュメント に 対 する 先読 み  ( look  ahead )  が 必要 だ と する と 不運 な こと に な り ま す 。  アプリケーション に よ っ て は 、 ツリー に アクセス でき な けれ ば イベント 駆動 モデル を 実現 でき ま せ ん 。 
もちろん 、 何 ら か の ツリー を SAX  イベント に 応 じ て 自分 で 構築 する こと も でき る で しょ う が 、 DOM  で は その よう な コード を 書 か な く て も よ く な り ま す 。 
DOM は  XML  データ に 対 する 標準 的 な ツリー 表現 な の で す 。  文書 オブジェクト モデル は 、 W 3 C  に よ っ て いく つ か の 段階 、 W 3 C  の 用語 で 言 え ば  ` ` レベル  ( level ) ' ' で 定義 さ れ て い ま す 。 
Python  に お い て は 、 DOM API  へ の 対応 付け  は 実質 的 に は  DOM  レベル 2  勧告 に 基づ い て い ま す 。 
現在 は ドラフト 形式 で のみ 入手 でき る  レベル 3  仕様 へ の 対応 付け は 、 Python  XML  分科 会  ( Special  Interest  Group )  に よ り 、 PyXML  パッケージ  の 一部 と し て 開発 中 で す 。 
DOM  レベル 3  サポート の 現在 の 状態 に つ い て の 情報 は 、 PyXML  パッケージ に 同梱 さ れ て い る ドキュメント を 参照 し て くださ い 。 
DOM  アプリケーション は 、 普通 は  XML  を  DOM  に 解析 する ところ から 始ま り ま す 。 
どの よう に し て 解析 を 行 う か に つ い て は  DOM  レベル 1  で は 全く カバー し て お ら ず 、 レベル 2  で は 限定 的 な 改良 だけ が 行 わ れ ま し た : レベル 2  で は Document  を 生成 する メソッド を 提供 する DOMImplementation  オブジェクト クラス が あ り ま す が 、 実装 に 依存 し な い 方法 で  XML  リーダ ( reader ) \/ パーザ ( parser ) \/ 文書 ビルダ ( Document builder )  に アクセス する 方法 は あ り ま せ ん 。  また 、 既存 の  Document  オブジェクト なし に これ ら の メソッド に アクセス する よう な 、 よく 定義 さ れ た 方法 も あ り ま せ ん 。 
Python  で は 、 各々 の  DOM  実装 で  get DOMImplementation ( )  が 定義 さ れ て い る はず で す 。 
DOM  レベル 3  で は ロード ( Load ) \/ ストア ( Store )  仕様 が 追加 さ れ 、 リーダ の インタフェース に を 定義 し て い ま す が 、 Python  標準 ライブラリ で は まだ 利用 する こと が でき ま せ ん 。  DOM  文書 オブジェクト を 生成 し た ら 、 その プロパティ と メソッド を 使 っ て XML  文書 の 一部 に アクセス でき ま す 。 
これ ら の プロパティ は DOM  仕様 で 定義 さ れ て い ま す ;  本 リファレンス マニュアル で は 、 Python  に お い て  DOM  仕様 が どの よう に 解釈 さ れ て い る か を 記述 し て い ま す 。  W 3 C  から 提供 さ れ て い る 仕様 は 、  DOM API  を  Java 、 ECMAScript 、 および OMG  IDL  で 定義 し て い ま す 。 
ここ で 定義 さ れ て い る  Python  で の 対応 づけ は 、 大 部分 が この 仕様 の  IDL  版 に 基づ い て い ま す が 、 厳密 な 準拠 は 必要 と さ れ て い ま せ ん  ( 実装 で  IDL  の 厳密 な 対応 付け を サポート する の は 自由 で す が ) 。 
API  へ の 対応 付け に 関 する 詳細 な 議論 は  13 . 6 . 3  、 `` 適合 性 ' '  を 参照 し て くださ い 。 
Python  DOM API  が 準拠 し て い る  W 3 C  勧告 。 
xml . dom. minidom で サポート さ れ て い る  W 3 C  の  DOM に 関 する 勧告 。 
完全 な 機能 を も っ た DOM  実装 を 必要 と する ユーザ は  PyXML  パッケージ を 利用 す べ き で す 。 
この ドキュメント で は  OMG  IDL  から  Python  へ の 対応 付け を 記述 し て い ま す 。 
13 . 6 . 1  モジュール の 内容 
xml . dom. minidom は 、 軽量 な 文書 オブジェクト モデル インタフェース の 実装 で す 。 
この 実装 で は 、 完全 な  DOM  より も 単純 で 、 かつ 十分 に 小さ く な る よう 意図 し て い ま す 。  DOM  アプリケーション は 典型 的 に 、 XML  を  DOM  に 解析  ( parse )  する こと で 開始 し ま す 。 
xml . dom. minidom で は 、 以下 の よう な 解析 用 の 関数 を 介 し て 行 い ま す : 
parse ( )  関数 は ファイル 名 か 、 開 か れ た ファイル オブジェクト を 引数 に と る こと が でき ま す 。 
この 関数 は パーザ の 文書 ハンドラ を 変更 し 、 名前 空間 サポート を 有効 に し ま す ;  ( エンティティ リゾルバ  ( entity  resolver )  の よう な )  他 の パーザ 設定 は 前 も っ て おこな わ な けれ ば な り ま せ ん 。 
XML  データ を 文字 列 で 持 っ て い る 場合 、 parseString ( )  を 代わり に 使 う こと が でき ま す : 
string  を 表現 する  Document  を 返 し ま す 。 
この メソッド は 文字 列 に 対 する  StringIO  オブジェクト を 生成 し て 、 その オブジェクト を  parse  に 渡 し ま す 。 
これ ら の 関数 は 両方 とも 、 文書 の 内容 を 表現 する  Document  オブジェクト を 返 し ま す 。  parse ( )  や  parseString ( )  と い っ た 関数 が 行 う の は 、 XML  パーザ を 、 何 ら か の  SAX  パーザ から くる 解析 イベント  ( parse event )  を 受け取 っ て  DOM  ツリー に 変換 でき る よう な  `` DOM  ビルダ  ( DOMbuilder ) ' ' に 結合 する こと で す 。 
関数 は 誤解 を 招 く よう な 名前 に な っ て い る か も しれ ま せ ん が 、 インタフェース に つ い て 学 ん で い る とき に は 理解 し やす い で しょ う 。 
文書 の 解析 は これ ら の 関数 が 戻 る より 前 に 完結 し ま す ;  要 する に 、 これ ら の 関数 自体 は パーザ 実装 を 提供 し な い と い う こと で す 。 `` DOM  実装 ' '  オブジェクト の メソッド を 呼び出 し て  Document  を 生成 する こと も でき ま す 。 
この オブジェクト は 、 
xml . dom パッケージ 、 また は xml . dom. minidom モジュール の  get DOMImplementation ( )  関数 を 呼び出 し て 取得 でき ま す 。 
xml . dom. minidom モジュール の 実装 を 使 う と 、 常 に minidom 実装 の  Document  インスタンス を 返 し ま す 。 
一方 、  xml . dom
版 の 関数 で は 、 別 の 実装 に よ る インスタンス を 返 す か もれ ま せ ん  ( PyXML  package  が インストール さ れ て い る と そう な る で しょ う ) 。 
Document を 取得 し たら 、 DOM  を 構成 する ため に 子 ノード を 追加 し て い く こと が でき ま す : 
DOM  文書 オブジェクト を 手 に し た ら 、 XML  文書 の プロパティ や メソッド を 使 っ て 、 文書 の 一部 に アクセス する こと が でき ま す 。 
これ ら の プロパティ は DOM  仕様 で 定義 さ れ て い ま す 。 
文書 オブジェクト の 主要 な プロパティ は documentElement  プロパティ で す 。 
この プロパティ は XML  文書 の 主要 な 要素 :  他 の 全て の 要素 を 保持 する 要素 、 を 与え ま す 。 
以下 に プログラム 例 を 示 し ま す : 
DOM  を 使 い 終え た ら 、 後 片付け を 行 わ な けれ ば な り ま せ ん 。 
Python  の バージョン に よ っ て は 、 循環 的 に 互い を 参照 する オブジェクト に 対 する ガベージ コレクション を サポート し て い な い ため 、 この 操作 が 必要 と な り ま す 。 
この 制限 が 全て の バージョン の  Python  から 除去 さ れ る まで は 、 循環 参照 オブジェクト が 消去 さ れ な い もの と し て コード を 書 く の が 無難 で す 。  DOM  を 片付け る に は 、 unlink ( )  メソッド を 呼び出 し ま す : 
unlink ( )  は 、  DOM API  に 対 する  xml . dom. minidom 特有 の 拡張 で す 。 
ノード に 対 し て  unlink ( )  を 呼び出 し た 後 は 、 ノード と その 下位 ノード は 本質 的 に は 無 意味 な もの と な り ま す 。 
xml . dom. minidom で サポート さ れ て い る  DOM の  W 3 C  勧告 。 
xml . dom. pulldom で は 、 SAX  イベント から 、 文書 の 文書 オブジェクト モデル 表現 の 選択 さ れ た 一 部分 だけ を 構築 でき る よう に し ま す 。 
クラス PullDOM
xml . sax . handler . ContentHandler  実装 で す  . . . 
クラス DOMEventStream 
クラス SAX 2 DOM
parse ( )  の bufsize  パラメタ の デフォルト 値 で す 。 
バージョン  2 . 1  で  変更  さ れ た 仕様 : この 変数 の 値 は  parse ( )  を 呼び出 す 前 に 変更 する こと が でき 、 その 場合 新た な 値 が 効果 を 持 つ よう に な り ま す 
バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。  xml . parsers . expat  モジュール は 、 検証  ( validation )  を 行 わ な い  XML  パーザ  ( parser ,  解析 器 ) 、 Expat
へ の Python  インタフェース で す 。 
モジュール は 一 つ の 拡張 型  xmlparser  を 提供 し ま す 。  これ は XML パーザ の 現在 の 状況 を 表 し ま す 。 
一旦  xmlparser  オブジェクト を 生成 する と 、 オブジェクト の 様々 な 属性 を ハンドラ 関数  ( handler function ) に 設定 でき ま す 。 
その 後 、 XML  文書 を パーザ に 入力 する と 、  XML 文書 の 文字 列 と マーク アップ に 応 じ て ハンドラ 関数 が 呼び出 さ れ ま す 。 
この モジュール で は 、 Expat パーザ へ の アクセス を 提供 する ため に pyexpat
Expat  が エラー を 報告 し た とき に 例外 を 送出 し ま す 。 
Expat の エラー を 解釈 する 上 で の 詳細 な 情報 は 、  13 . 5 . 2  の `` ExpatError  Exceptions , ' ' を 参照 し て くださ い 。 
ExpatError へ の 別名 で す 。 
ParserCreate ( )  関数 から 返 さ れ た 戻 り 値 の 型 を 示 し ま す 。 
xml . parsers . expat  モジュール に は 以下 の  2  つ の 関数 が 収め られ て い ま す : 
与え られ た エラー 番号  errno  を 解説 する 文字 列 を 返 し ま す 。 
新し い  xmlparser  オブジェクト を 作成 し 、 返 し ま す 。 encoding  が 指定 さ れ て い た 場合 、 XML データ で 使 わ れ て い る 文字 列 の エンコード 名 で な けれ ば な り ま せ ん 。 
Expat は 、 Python の よう に 多く の エンコード を サポート し て お ら ず 、 また エンコーディング の レ パートリ を 拡張 する こと は でき ま せ ん ;  サポート する エンコード は 、 UTF - 8 ,  UTF - 16 ,  ISO - 885 9 - 1  ( Latin 1 ) ,  ASCII  で す 。 
この 値 は 、 1 文字 の 文字 列 で な けれ ば な り ま せ ん ;  文字 列 が 誤 っ た 長 さ を 持 つ 場合 に は  ValueError  が 送出 さ れ ま す  ( None  は 値 の 省略 と 見な さ れ ま す )  名前 空間 の 処理 が 可能 な とき 、 名前 空間 に 属 する 要素 と 属性 が 展開 さ れ ま す 。 
要素 の ハンドラ で あ る  StartElementHandler  と  EndElementHandler  に 渡 さ れ た 要素 名 は 、 名前 空間 の URI 、 名前 空間 の 区切り 文字 、 要素 名 の ローカル 部 を 連結 し た もの に な り ま す 。 
名前 空間 の 区切り 文字 が  0  バイト  ( chr ( 0 ) )  の 場合 、 名前 空間 の  URI  と ローカル 部 は 区切り 文字 なし で 連結 さ れ ま す 。 
たとえば 、  namespace _ separator  に 空白 文字 ( "  " ) が セット さ れ 、 次 の よう な 文書 が 解析 さ れ る と し ま す 。 
StartElementHandler  は 各 要素 ごと に 次 の よう な 文字 列 を 受け取 り ま す 。 
Expat プロジェクト の ホーム ページ 
SAX  API  は コンテント ・ ハンドラ 、 DTD  ハンドラ 、 エラー ・ ハンドラ 、 エンティティ ・ リゾルバ と い う 4 つ の ハンドラ を 規定 し て い ま す 。 
通常 アプリケーション 側 で 実装 する 必要 が あ る の は 、 これ ら の ハンドラ が 発生 さ せ る イベント の うち 、 処理 し た い もの へ の インターフェース だけ で す 。  インターフェース は 1 つ の オブジェクト に まとめ る こと も 、 複数 の オブジェクト に 分け る こと も 可能 で す 。 
ハンドラ は すべて の メソッド が デフォルト で 実装 さ れ る よう に 、 xml . sax  で 提供 さ れ る 基底 クラス を 継承 し な く て は な り ま せ ん 。 
アプリケーション に と っ て 最も 重要 な メイン の  SAX  コール バック ・ インターフェース で す 。 
この インターフェース で 発生 する イベント の 順序 は ドキュメント 内 の 情報 の 順序 を 反映 し て い ま す 。 
DTD  イベント の ハンドラ で す 。  未 構文 解析 エンティティ や 属性 など 、 パース に 必要 な  DTD  イベント の 抽出 だけ を おこな う インターフェース で す 。 
エンティティ 解決 用 の 基本 インターフェース で す 。 
この インターフェース を 実装 し た オブジェクト を 作成 し パーサ に 登録 する こと で 、 パーサ は すべて の 外部 エンティティ を 解決 する メソッド を 呼び出 す よう に な り ま す 。 
エラー や 警告 メッセージ を アプリケーション に 通知 する ため に パーサ が 使用 する インターフェース で す 。 
この オブジェクト の メソッド が 、 エラー を ただちに 例外 に 変換 する か 、 あるいは 別 の 方法 で 処理 する か の 制御 を し て い ま す 。 
これ ら の クラス に 加え 、 xml . sax . handler  は 機能 や プロパティ 名 の シンボル 定数 を 提供 し て い ま す 。 
値 :  " http:\/\/xml . org \/ sax \/ features\/namespaces " 
true :  名前 空間 の 処理 を 有効 に する 。 
false :  オプション で 名前 空間 の 処理 を 無効 に する ( 暗黙 に  namespace - prefixes  も 無効 に する  -  デフォルト  ) 。 
アクセス :  ( パース 時 )  リード オンリー ;  ( パース 時 以外 )  読み書き 可  feature_ namespace _ prefixes 
値 :  " http:\/\/xml . org \/ sax \/ features\/namespace - prefixes " 
true :  名前 空間 宣言 で 用い られ て い る オリジナル の プリ フィックス 名 と 属性 を 通知 する 。 
false :  名前 空間 宣言 で 用い られ て い る 属性 を 通知 し な い 。 
値 :  " http:\/\/xml . org \/ sax \/ features\/string - interning " 
true :  すべて の 要素 名 、 プリ フィックス 、 属性 、 名前 、 名前 空間 、 URI 、 ローカル 名 を 組込み の  intern  関数 を 使 っ て シンボル に 登録 する 。 
false :  名前 の すべて を 必ず しも シンボル に 登録 し な い ( デフォルト ) 。 
アクセス :  ( パース 時 )  リード オンリー ;  ( パース 時 以外 )  読み書き 可  feature_ validation 
値 :  " http:\/\/xml . org \/ sax \/ features\/validation " 
true :  すべて の 妥当 性 検査 エラー を 通知 する ( external - general - entities  と external - parameter - entities  が 暗黙 の 前提 に な っ て い る ) 。 
値 :  " http:\/\/xml . org \/ sax \/ features\/external - general - entities " 
true :  外部 一般 ( テキスト ) エンティティ の 取り込み を おこな う 。 
false :  外部 一般 エンティティ を 取り込 ま な い 。 
アクセス :  ( パース 時 )  リード オンリー ;  ( パース 時 以外 )  読み書き 可 
値 :  " http:\/\/xml . org \/ sax \/ features\/external - parameter - entities " 
true :  外部  DTD  サブセット を 含 む すべて の 外部 パラメータ ・ エンティティ の 取り込み を おこな う 。 
false :  外部 パラー メタ ・ エンティティ および 外部  DTD  サブセット を 取り込 ま な い 。  アクセス :  ( パース 時 )  リード オンリー ;  ( パース 時 以外 )  読み書き 可 
すべて の 機能 の 一覧 。  property _ lexical _handler 
値 :  " http:\/\/xml . org \/ sax\/properties\/lexical - handler " 
datatype : xml . sax . sax2 lib . LexicalHandler  ( Python  2  で は 未 サポート ) description :  コメント など 字句 解析 イベント 用 の オプション 拡張 ハンドラ 。 
アクセス :  読み書き 可 
datatype : xml . sax . sax2 lib . DeclHandler  ( Python  2  で は 未 サポート ) description :  ノーテーション や 未 解析 エンティティ を のぞ く  DTD  関連 イベント 用 の オプション 拡張 ハンドラ 。 
datatype :org . w 3c . dom. Node  ( Python  2  で は 未 サポート )  description :  パース 時 は  DOM  イテレータ に お け る カレント  DOM ノード 、 非 パース 時 は ルート  DOM ノード を 指 す 。 
アクセス :  ( パース 時 )  リード オンリー ;  ( パース 時 以外 )  読み書き 可  property _ xml_string 
値 :  " http:\/\/xml . org \/ sax\/properties\/xml - string " 
データ 型 :  文字 列  説明 :  カレント ・ イベント の 元 に な っ た リテラル 文字 列  アクセス :  リード オンリー 
既知 の プロパティ 名 の 全 リスト 。 
13 . 10 . 1  ContentHandler  オブジェクト 
xml . sax  パッケージ は Python  用 の  Simple API  for  XML  ( SAX )  インターフェース を 実装 し た 数多く の モジュール を 提供 し て い ま す 。 
また パッケージ に は  SAX  例外 と  SAX  API  利用 者 が 頻繁 に 利用 する で あ ろ う 有用 な 関数 群 も 含 ま れ て い ま す 。 
その 関数 群 は 以下 の 通り で す :  make_parser 
SAX  XMLReader  オブジェクト を 作成 し て 返 し ま す 。 
パーサ に は 最初 に 見つか っ た もの が 使 わ れ ま す 。 
parser_ list  を 指定 する 場合 は 、 create_parser ( )  関数 を 含 ん で い る モジュール 名 の シーケンス を 与え る 必要 が あ り ま す 。 
parser_ list  の モジュール は デフォルト の パーサ の リスト に 優先 し て 使用 さ れ ま す 。 
SAX  パーサ を 作成 し て ドキュメント を パース し ま す 。 
filename_or_stream  と し て 指定 する ドキュメント は ファイル 名 、 ファイル ・ オブジェクト の いずれ で も かま い ま せ ん 。 
handler  パラメータ に は  SAX  ContentHandler  の インスタンス を 指定 し ま す 。 
error _ handler  に は  SAX  ErrorHandler  の インスタンス を 指定 し ま す 。  これ が 指定 さ れ て い な い とき は 、 すべて の エラー で  SAXParseException  例外 が 発生 し ま す 。 
関数 の 戻 り 値 は な く 、 すべて の 処理 は  handler  に 渡 さ れ ま す 。 
parse ( )  に 似 て い ま す が 、 こちら は パラメータ  string  で 指定 さ れ た バッファ を パース し ま す 。 
典型 的 な  SAX  アプリケーション で は 3 種類 の オブジェクト ( リーダ 、 ハンドラ 、 入力 元 ) が 用い られ ま す ( ここ で 言 う リーダ と は パーサ を 指 し て い ま す ) 。 
つまり  SAX  アプリケーション に は 、 リーダ ・ オブジェクト 、 ( 作成 また は オープン さ れ る ) 入力 元 の オブジェクト 、 ハンドラ ・ オブジェクト 、 そして これ ら 3 つ の オブジェクト を 連携 さ せ る こと が 必須 な の で す 。 
Python  は インターフェース と い う 明確 な 概念 を 提供 し て い な い ため 、 形 と し て は クラス が 用い られ て い ま す 。  しかし 提供 さ れ る クラス を 継承 せ ず に 、 アプリケーション 側 で 独自 に 実装 する こと も 可能 で す 。 
InputSource 、 Locator 、 Attributes 、 AttributesNS 、 XMLReader  の 各 インターフェース は 
モジュール で 定義 さ れ て い ま す 。  ハンドラ ・ インターフェース は 
しばしば アプリケーション 側 で 直接 インスタンス が 作成 さ れ る InputSource  と ハンドラ ・ クラス は 利便 性 の ため  xml . sax  に も 含 ま れ て い ま す 。 
これ ら の インターフェース に 関 し て は 後 に 解説 し ま す 。  この ほか に  xml . sax  は 次 の 例外 クラス も 提供 し て い ま す 。 
例外 SAXException 
XML  エラー と 警告 を カプセル 化 し ま す 。 
この クラス に は  XML  パーサ と アプリケーション で 発生 する エラー および 警告 の 基本 的 な 情報 を 持 た せ る こと が でき ま す 。  また 機能 追加 や 地域 化 の ため に サブ クラス 化 する こと も 可能 で す 。 
オプション の  exception  パラメータ は  None  もしくは パース 用 コード で 補足 、 渡 っ て 来る 情報 で な けれ ば な り ま せ ん 。  この クラス は SAX  例外 の 基底 クラス に な り ま す 。 
例外 SAXParseException 
パース エラー 時 に 発生 する  SAXException  の サブ クラス で す 。  パース エラー に 関 する 情報 と し て 、 この クラス の インスタンス が  SAXErrorHandler  インターフェース の メソッド に 渡 さ れ ま す 。 
この クラス は  SAXException  同様  SAX  Locator  インターフェース も サポート し て い ま す 。 
例外 SAXNotRecognizedException 
SAX  XMLReader  が 認識 でき な い 機能 や プロパティ に 遭遇 し た とき 発生 さ せ る  SAXException  の サブ クラス で す 。 
SAX  アプリケーション や 拡張 モジュール に お い て 同様 の 目的 に この クラス を 利用 する こと も でき ま す 。 
例外 SAXNotSupportedException 
SAX  XMLReader  が 要求 さ れ た 機能 を サポート し て い な い とき 発生 さ せ る  SAXException  の サブ クラス で す 。 
SAX  アプリケーション や 拡張 モジュール に お い て 同様 の 目的 に この クラス を 利用 する こと も でき ま す 。 
SAX  API  定義 に 関 し 中心 と な っ て い る サイト で す 。 
Java  に よ る 実装 と オン ライン ・ ドキュメント が 提供 さ れ て い ま す 。 
実装 と  SAX  API  の 歴史 に 関 する 情報 の リンク も 掲載 さ れ て い ま す 。  xml . sax . handler 
: モジュール 
SAX  アプリケーション 向け の 有用 な 関数 群 . 
13 . 9 . 1  SAXException  オブジェクト 
モジュール  xml . sax . saxutils  に は  SAX  アプリケーション の 作成 に 役立 つ 多く の 関数 や クラス も 含 ま れ て お り 、 直接 利用 し たり 、 基底 クラス と し て 使 う こと が でき ま す 。 
文字 列 データ 内 の  " " 、 " " 、 " "  を エスケープ し ま す 。 
オプション の  entities  パラメータ に 辞書 を 渡 す こと で 、 その ほか の 文字 を エスケープ さ せ る こと も 可能 で す 。 
辞書 の キー と 値 は すべて 文字 列 で 、 キー に 指定 さ れ た 文字 は 対応 する 値 に 置換 さ れ ま す 。 
エスケープ さ れ た 文字 列  " amp; " 、 " lt ; " 、 " gt ; "  を 元 の 文字 に 戻 し ま す 。  オプション の  entities  パラメータ に 辞書 を 渡 す こと で 、 その ほか の 文字 を エスケープ さ せ る こと も 可能 で す 。 
escape ( )  に 似 て い ま す が 、 data  は 属性 値 の 作成 に 使 わ れ ま す 。 
戻 り 値 は クォート 済み の  data  で 、 置換 する 文字 の 追加 も 可能 で す 。 
quoteattr ( )  は クォート す べ き 文字 を  data  の 文脈 から 判断 し 、 クォート す べ き 文字 を 残 さ な い よう に 文字 列 を エンコード し ま す 。 
data  の 中 に シングル ・ クォート 、 ダブル ・ クォート が あ れ ば 、 両方 とも エンコード し 、 全体 を ダブル クォート で 囲 み ま す 。 
戻 り 値 の 文字 列 は その まま で 属性 値 と し て 利用 でき ま す 。 
この 関数 は 参照 具象 構文 を 使 っ て 、  HTML  や  SGML  の 属性 値 を 生成 する の に 便利 で す 。 
バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。  クラス XMLGenerator 
この クラス は  ContentHandler  インターフェース の 実装 で 、 SAX  イベント を  XML  ドキュメント に 書 き 戻 し ま す 。 
つまり 、 XMLGenerator  を コンテント ・ ハンドラ と し て 用い る と 、 パース し た オリジナル ・ ドキュメント の 複製 が 作れ る の で す 。  out  に 指定 する の は ファイル 風 の オブジェクト で 、 デフォルト は  sys . st dout  で す 。 
encoding  は 出力 ストリーム の エンコーディング で 、 デフォルト は ' iso - 885 9 - 1 '  で す 。  クラス XMLFilterBase 
この クラス は  XMLReader  と クライアント ・ アプリケーション の イベント ・ ハンドラ と の 間 に 位置 する もの と し て 設計 さ れ て い ま す 。 
デフォルト で は 何 も せ ず 、 ただ リクエスト を リーダ に 、 イベント を ハンドラ に 、 それぞれ 加工 せ ず 渡 す だけ で す 。  しかし 、 サブ クラス で メソッド を オーバーライド する と 、 イベント ・ ストリーム や リクエスト を 加工 し て から 渡 す よう に 変更 可能 で す 。 
この 関数 は 引き 数 に 入力 ソース 、 オプション と し て  URL  を 取 り 、 読み取り 可能 な 解決 済み  InputSource  オブジェクト を 返 し ま す 。 
入力 ソース は 文字 列 、 ファイル 風 オブジェクト 、 InputSource  の いずれ で も 良 く 、 この 関数 を 使 う こと で 、 パーサ は 様々 な  source  パラメータ を parse ( )  に 渡 す こと が 可能 に な り ま す 。 
各  SAX  パーサ は  Python  モジュール と し て  XMLReader  インターフェース を 実装 し て お り 、 関数  create_parser ( )  を 提供 し て い ま す 。 
この 関数 は 新た な パーサ ・ オブジェクト を 生成 する 際 、 xml . sax . make_parser ( )  から 引き 数 なし で 呼び出 さ れ ま す 。 
クラス XMLReader
SAX  パーサ が 継承 可能 な 基底 クラス で す 。 
クラス IncrementalParser 
入力 ソース を パース する 際 、 すべて を 一気 に 処理 し な い で 、 途中 で ドキュメント の チャンク を 取得 し た い こと が あ り ま す 。 
SAX  リーダ は 通常 、 ファイル 全体 を 一気 に 読み込 ま ず チャンク 単位 で 処理 する の で す が 、 全体 の 処理 が 終わ る まで  parse ( )  は  return し ま せ ん 。 
つまり 、 IncrementalParser  インターフェース は  parse ( )  に この よう な 排他 的 挙動 を 望 ま な い とき に 使 わ れ ま す 。  パーサ の インスタンス が 作成 さ れ る と 、 feed  メソッド を 通 じ て すぐ に 、 データ を 受け入れ られ る よう に な り ま す 。 
SAX  イベント と ドキュメント の 位置 を 関連 付け る インターフェース で す 。 
locator  オブジェクト は  DocumentHandler  メソッド を 呼び出 し て い る 間 だけ 正し い 情報 を 返 し 、 それ 以外 と の とき に 呼び出 す と 、 予測 でき な い 結果 が 返 り ま す 。 
情報 を 取得 でき な い 場合 、 メソッド は  None  を 返 す こと も あ り ま す 。 
クラス InputSource 
クラス AttributesImpl 
Attributesinterface ( 13 . 12 . 5  参照 ) の 実装 で す 。 
辞書 風 の オブジェクト で 、 startElement ( )  内 で 要素 の 属性 表示 を おこな い ま す 。 
多く の 辞書 風 オブジェクト 操作 に 加え 、 ほか に も インターフェース に 記述 さ れ て い る メソッド を 、 多数 サポート し て い ま す 。 
この クラス の オブジェクト は リーダ に よ っ て インスタンス を 作成 し な けれ ば な り ま せ ん 。  また 、 attrs は  属性 名 と 属性 値 を 含 む 辞書 風 オブジェクト で な けれ ば な り ま せ ん 。 
クラス AttributesNSImpl 
AttributesImpl  を 名前 空間 認識 型 に 改良 し た クラス で 、 startElementNS ( )  に 渡 さ れ ま す 。 
AttributesImpl  の 派生 クラス で す が 、 namespace URI  と  localname 、 この 2 つ の タプル を 解釈 し ま す 。 
さらに 、 元 の ドキュメント に 出 て くる 修飾 名 を 返 す 多く の メソッド を 提供 し ま す 。 
この クラス は 
AttributesNSinterface  ( section 13 . 1 2 . 6  参照 )  の 実装 で す 。 
リリース  2 . 0  で 撤廃 さ れ ま し た 。 
代わり に 
バージョン  1 . 5 . 2  で  変更  さ れ た 仕様 : 名前 空間 の サポート を 追加 
クラス XMLParser 
この クラス は 次 の インターフェース ・ メソッド と インスタンス 変数 を 提供 し て い ま す 。 
要素 名 の マッピング へ の マッピング ・ オブジェクト で 、 デフォルト は 空 の 辞書 で す 。 
この デフォルト 変数 は すべて の  XMLParser  インスタンス で 共有 さ れ る ため 、 継承 せ ず に オーバーライド する 必要 が あ り ま す 。 
なお 、 要素 名 の マッピング の 方 は 、 その 要素 に 妥当 な 属性 名 と その デフォルト の 属性 値 を マッピング し て お り 、 デフォルト 値 が な い 場合 は  None  に な り ま す 。 
要素 名 から タプル へ の マッピング で す 。 
タプル に は 要素 の 開始 タグ と 終了 タグ を それぞれ 処理 する 関数 、 また は  unknown_starttag ( )  や unknown_endtag ( )  呼出 さ れ た 場合 に 使用 する  None  が 含 ま れ ま す 。 
デフォルト は 空 の 辞書 に な っ て い ま す 。 
この デフォルト 変数 は すべて の  XMLParser  インスタンス で 共有 さ れ る ため 、 継承 せ ず に オーバーライド する 必要 が あ り ま す 。 
エンティティ 名 から その 値 へ の マッピング で す 。 
デフォルト で 'lt ' 、 'gt' 、 'amp'、 'quot ' 、  and 'apos'  の 定義 が さ れ て い ま す 。 
同時 に 未 処理 の データ は すべて 失 わ れ ま す 。 
この メソッド は インスタンス 生成 時 、 暗黙 裡 に 呼び出 さ れ ま す 。 
タグ の 処理 を 中止 し ま す 。 
この メソッド の 呼び出 し 以降 、 すべて の 入力 は リテラル ( CDATA ) と し て 扱 わ れ ま す 。 
リテラル モード ( CDATA  mode ) に 入 り ま す 。 
この モード は 最後 に 処理 し た 開始 タグ に 対応 する 終了 タグ が 見つか っ た 時点 で 自動 的 に 終了 し ま す 。 
テキスト を パーサ に 送 り ま す 。 
完全 な タグ で 構成 さ れ た 部分 まで を 処理 し 、 不 完全 な タグ は 次 の データ が 来る か  close ( )  が 呼び出 さ れ る まで バッファ リング さ れ ま す 。 
現在 バッファ リング 中 の データ の 前 に  end - of - file  ファイル が 来 た もの と 強制 的 に みな し ま す 。 
この メソッド は 派生 クラス に お い て 、 入力 終了 時 に おこな う 追加 処理 の ため に 再 定義 さ れ る こと も あ り ま す が 、 再 定義 し た メソッド の 中 で 必ず この  close ( )  を 呼び出 さ な けれ ば な り ま せ ん 。 
data  の 中 に あ る 実体 参照 と 文字 参照 を すべて 変換 し 、 変換 後 の 文字 列 を 返 し ま す 。 
現在 有効 な 名前 空間 の 短縮 名 から 名前 空間  URI  へ の マッピング を 返 し ま す 。 
この メソッド は  " ? xml  . . . ? "  タグ を 処理 し ま す 。  引数 は タグ 中 の エンコーディング の 値 と スタンド アロン 宣言 で す 。 
エンコーディング と スタンド アロン 属性 は とも に オプション で す 。 
デフォルト は それぞれ  None  と 文字 列  ' no' に な り ま す 。 
引数 に は ルート 要素 の タグ 名 、 公式 公開 識別 子 
( 指定 さ れ て い な い 場合 は  None ) 、 システム 識別 子 、 および 内部  DTD  サブセット を 処理 せ ず その まま 文字 列 で 指定 し ま す ( 指定 さ れ て い な い 場合 は  None ) 。 
この メソッド は インスタンス 変数  elements  に ハンドラ が 定義 さ れ て い る 開始 タグ を 処理 し ま す 。 
tag  は タグ 名 で 、 method  は 開始 タグ の 意味 解析 サポート に 使 わ れ る 関数 ( メソッド ) で す 。 
attributes  は  タグ 内 に 記述 さ れ て い る 属性 名 が キー 、 属性 値 を 値 と し て 持 つ 辞書 に な り ま す 。 
文字 および エンティティ の 参照 は 解釈 さ れ ま す 。 
たとえば 、 開始 タグ  A  HREF = " http:\/\/www .cwi.nl \/ "  に 対 する この メドッド の 呼出し は  handle_starttag ( ' A ' , self . elements [ ' A' ] [ 0 ] , {' HREF' :'http:\/\/www .cwi.nl \/'})  と な り ま す 。 
基本 的 な 実装 は 単純 で 、 引数 に  attributes  を 使 い 、 method  を 呼び出 す だけ の もの で す 。 
この メソッド は インスタンス 変数  elements  に ハンドラ が 定義 さ れ て い る 終了 タグ を 処理 し ま す 。 
tag  は タグ 名 で 、 method  は 終了 タグ の 意味 解析 サポート に 使 わ れ る 関数 ( メソッド ) で す 。 
たとえば 、 終了 タグ  \/ A  に 対 する この メドッド の 呼出し は  handle_endtag ( ' A ', self . elements [ ' A' ] [ 1 ] )  と な り ま す 。 
基本 的 な 実装 は 単純 で 、 method  を 呼び出 す だけ の もの で す 。 
これ は 任意 の データ を 処理 する メソッド で す 。 
派生 クラス で オーバライド し て 使 い ま す 。  基底 クラス の 実装 で は 何 も おこな い ま せ ん 。 
この 値 が  ASCII  に 変換 さ れ た 後 、 その 文字 列 を 引数 に し て メソッド  handle_data ( )  が 呼び出 さ れ ま す 。 
ref  の 値 が 許容 範囲 外 の とき は 、 エラー ハンドリング の ため に unknown_charref ( ref )  が 呼び出 さ れ ま す 。 
ASCII  範囲 外 の 文字 を サポート する に は 、 サブ クラス で この メソッド を オーバーライド する 必要 が あ り ま す 。 
コメント を 検出 する と 、 この メソッド が 呼び出 さ れ ま す 。 
引数  comment  は 、 デリミタ  " ! - " から  " - "  の 間 に あ る 文字 列 で あ り 、 デリミタ 自体 は 含 ま れ ま せ ん 。 
たとえば コメント  " ! - text - "  を 処理 する 場合 、 引数 は ' text '  で この メソッド が 呼び出 さ れ ま す 。 
この メソッド は デフォルト で は 何 も し ま せ ん 。 
C DATA  要素 を 検出 する と 、 この メソッド が 呼び出 さ れ ま す 。 
引数  data  は 、 デリミタ  " ! [ CDATA [ "  と " ] ] "  の 間 に あ る 文字 列 で あ り 、 デリミタ 自体 は 含 ま れ ま せ ん 。 
たとえば エンティティ  " ! [ CDATA [ text ] ] "  を 処理 する 場合 、 引数 は ' text '  で この メソッド が 呼び出 さ れ ま す 。 
この メソッド は デフォルト で は 何 も し な い ため 、 オーバーライド し て 使用 し ま す 。 
処理 命令  ( PI )  を 検出 する と 、 この メソッド が 呼び出 さ れ ま す 。 
引数  name  は 処理 命令 の ターゲット 、 data  は 、 処理 命令 ターゲット と 終了 デリミタ の 間 に あ る 文字 列 で あ り 、 デリミタ 自体 は 含 ま れ ま せ ん 。 
たとえば 命令  " ? XML  text ? "  を 処理 する 場合 、 引数 は  ' XML ' と ' text '  の 2 つ で この メソッド が 呼び出 さ れ ま す 。 
この メソッド は デフォルト で は 何 も し ま せ ん 。 
なお ドキュメント の 冒頭 に 現れ る  " ? xml  . . ? "  は  handle_xml ( )  で 処理 さ れ ま す 。 
宣言 を 検出 する と 、 この メソッド が 呼び出 さ れ ま す 。 
引数  data  は 、 デリミタ  " ! "  と " "  の 間 に あ る 文字 列 で あ り 、 デリミタ 自体 は 含 ま れ ま せ ん 。 
たとえば 
エンティティ 宣言  " ! ENTITY text "  を 処理 する 場合 、 引数 は  ' ENTITY text '  で この メソッド が 呼び出 さ れ ま す 。 
この メソッド は デフォルト で は 何 も し な い ため 、 オーバーライド し て 使用 し ま す 。 
なお ドキュメント の 冒頭 に 現れ る " ! DOCTYPE  . . . "  は 別途 処理 し な けれ ば な り ま せ ん 。 
シンタックス エラー が 発生 する と 、 この メソッド が 呼び出 さ れ ま す 。 
引数  message  は エラー 内容 を 知 ら せ る テキスト で す 。 
この メソッド は デフォルト で  RuntimeError  例外 を 発生 さ せ ま す 。 
メソッド を オーバライド し て 、 return する よう に 変え る こと も 可能 で す 。 
なお 、 この メソッド が 呼び出 さ れ る の は 回復 可能 な エラー の 場合 だけ で す 。 
回復 不能 な エラー 発生 し た とき は 、 syntax _error ( )  を 呼び出 す こと な く RuntimeError  が 発生 し ま す 。 
未知 の 開始 タグ を 検出 する と 、 この メドッド が 呼び出 さ れ ま す 。 
派生 クラス で オーバライド し て 使 い ま す 。  基底 クラス の 実装 で は 何 も おこな い ま せ ん 。 
未知 の 終了 タグ を 検出 する と 、 この メドッド が 呼び出 さ れ ま す 。 
解決 でき な い 文字 参照 を 検出 する と 、 この メドッド が 呼び出 さ れ ま す 。  派生 クラス で オーバライド し て 使 い ま す 。 
基底 クラス の 実装 で は 何 も おこな い ま せ ん 。 
解決 でき な い 実体 参照 を 検出 する と 、 この メドッド が 呼び出 さ れ ま す 。 
派生 クラス で オーバライド し て 使 い ま す 。  基底 クラス の 実装 で は syntax _error ( )  で エラー を 通知 する よう に な っ て い ま す 。 
World  Wide  Web  Consortium  ( W 3 C )  が 送出 し た  XML  の 仕様 書 で 、 XML  の シンタックス と 処理 に 必要 な 内容 が 定義 さ れ て い ま す 。 
仕様 書 の 翻訳 など 、 その ほか の 文献 は  http:\/\/www . w 3 . org \/ XML \/  で 参照 でき ま す 。 
Python  XML  トピック ガイド は  Python  で  XML  を 扱 う ため の 情報 と  XML  関連 情報 源 へ の リンク を 数多く 提供 し て い ま す 。 
Python  XML  Special  Interest  Group  は  Python  で  XML  を 扱 う ため の 開発 に 多大 な 貢献 を し て い ま す 。 
. . . な い ま す 。 
実際 に は 、 パーサ に 非 標準 的 な 形式 の ドキュメント を 許容 する ため の 、 いく つ か の キー ワード 引数 を 指定 でき る よう に な っ て お り 、 その 内容 は 次 の 通り で す 。 
これ ら の デフォルト 値 は すべて  0  ( false )  で す が 、 最後 の キー ワード 引数 だけ は  1  ( true ) に な っ て い ま す 。 
accept_unquoted_attributes  ( 特定 の 属性 が クォート さ れ て い な く て も 受け入れ る よう に する ) 、  accept_mis sing _endtag_ name  ( \/ の よう な タグ 名なし の 終了 タグ を 許容 する ) 、 map_ case  ( タグ や 属性 名 が 大 文字 で 書 か れ て い て も 、 小 文字 で 解釈 する ) 、  accept_utf 8  ( UTF - 8 文字 列 の 入力 を 許容 する 。  これ は  XML  標準 規格 で 必須 と さ れ て い る 内容 で す が 、 Python  は 今 の ところ  UTF - 8  を 適切 に 処理 でき な い ため 、 デフォルト で は 無効 に な っ て い ま す 。 
) 、 translate_attribute_references  ( 属性 値 と し て 使 わ れ て い る 文字 列 や 実体 参照 は それ 以上 解釈 し な い 。  ) 
XML - RPC は XML を 利用 し た 遠隔 手続き 呼び出し ( Remote  Procedure Call ) の 一種 で 、 HTTP を トランスポート と し て 使用 し ま す 。 
XML - RPC で は 、 クライアント は リモート サーバ ( URI で 指定 さ れ た サーバ ) 上 の メソッド を パラメータ を 指定 し て 呼び出 し 、 構造 化 さ れ た データ を 取得 し ま す 。 
この モジュール は 、 XML - RPC クライアント の 開発 を サポート し て お り 、 Python オブジェクト に 適合 する 転送 用 XML の 変換 の 全て を 行 い ま す 。 
クラス Server Proxy 
Server Proxy は 、 リモート の XML - RPC サーバ と の 通信 を 管理 する オブジェクト で す 。 
最初 の パラメータ は URI ( Uniform  Resource  Indicator ) で 、 通常 は サーバ の URL を 指定 し ま す 。 
2 番 目 の パラメータ に は トランスポート ・ ファクトリ を 指定 する 事 が でき ま す 。  トランスポート ・ ファクトリ を 省略 し た 場合 、 URL が https: なら モジュール 内部 の SafeTransport インスタンス を 使用 し 、 それ 以外 の 場合 に は モジュール 内部 の Transport インスタンス を 使用 し ま す 。 
オプション の  3  番 目 の 引数 は エンコード 方法 で 、 デフォルト で は  UTF - 8 で す 。 
オプション の  4  番 目 の 引数 は デバッグ フラグ で す 。 
allow_ none  が 真 の 場合 、 Python  の 定数  None  は  XML に 翻訳 さ れ ま す ;  デフォルト の 動作 は  None  に 対 し て TypeError  を 送出 し ま す 。 
この 仕様 は  XML - RPC  仕様 で よく 用い られ て い る 拡張 で す が 、 全て の クライアント や サーバ で サポート さ れ て い る わけ で は あ り ま せ ん ; 詳細 記述 に つ い て は  http:\/\/ontosys . com\/xml -rpc\/extensions . html  を 参照 し て くださ い 。 
HTTP 及び HTTPS 通信 の 両方 で 、 http:\/\/user : pass@host : port\/path の よう な HTTP 基本 認証 の ため の 拡張 URL 構文 を サポート し て い ま す 。 
user : pass は base 64 で エンコード し て HTTP の ` Authorization' ヘッダ と な り 、 XML - RPC メソッド 呼び出 し 時 に 接続 処理 の 一部 と し て リモート サーバ に 送信 さ れ ま す 。 
リモート サーバ が 基本 認証 を 要求 する 場合 のみ 、 この 機能 を 利用 する 必要 が あ り ま す 。  生成 さ れ る インスタンス は リモート サーバ へ の プロクシ オブジェクト で 、 RPC 呼び出し を 行 う 為 の メソッド を 持 ち ま す 。 
リモート サーバ が イントロスペクション API を サポート し て い る 場合 は 、 リモート サーバ の サポート する メソッド を 検索 ( サービス 検索 ) や サーバ の メタデータ の 取得 など も 行え ま す 。 
Server Proxy インスタンス の メソッド は 引数 と し て Python の 基礎 型 と オブジェクト を 受け取 り 、 戻 り 値 と し て Python の 基礎 型 か オブジェクト を 返 し ま す 。 
以下 の 型 を XML に 変換 ( XML を 通 じ て マーシャル する ) する 事 が でき ま す ( 特別 な 指定 が な い 限り 、 逆 変換 で も 同じ 型 と し て 変換 さ れ ま す ) : 
名前 
定数 True と False 
整数 
その まま 
浮動 小数 点 
文字 列 
配列 
変換 可能 な 要素 を 含 む Python シーケンス 。 
戻 り 値 は リスト 。 
構造 体 
Python の 辞書 。 
キー は 文字 列 のみ 。  全て の 値 は 変換 可能 で な く て は な ら な い 。 
日付 
エポック から の 経過 秒数 。  引数 と し て 指定 する 時 は DataTime ラッパクラス の インスタンス を 使用 する 。 
バイナリ 
Binary ラッパクラス の インスタンス 
上記 の XML - RPC で サポート する 全 データ 型 を 使用 する こと が でき ま す 。 
メソッド 呼び出 し 時 、 XML - RPC サーバ エラー が 発生 する と Fault インスタンス を 送出 し 、 HTTP \/ HTTPS トランスポート 層 で エラー が 発生 し た 場合 に は ProtocolError を 送出 し ま す 。 
Python  2 . 2 以降 で は 組み込 み 型 の サブ クラス を 作成 する 事 が でき ま す が 、 現在 の ところ xmlrpclib で は その よう な サブ クラス の インスタンス を マーシャル する こと は でき ま せ ん 。  文字 列 を 渡 す 場合 、 " " ・ " " ・ " " など の XML で 特殊 な 意味 を 持 つ 文字 は 自動 的 に エスケープ さ れ ま す 。 
しかし 、 ASCII 値 0 〜 31 の 制御 文字 など の XML で 使用 する こと の でき な い 文字 を 使用 する こと は でき ず 、 使用 する と その XML - RPC リクエスト は well - formed な XML と は な り ま せ ん 。 
その よう な 文字 列 を 渡 す 必要 が あ る 場合 は 、 後述 の Binary ラッパクラス を 使用 し て くださ い 。 
Server は 、 上位 互換 性 の 為 に Server Proxy の 別名 と し て 残 さ れ て い ま す 。 
新し い コード で は Server Proxy を 使用 し て くださ い 。 
ZIP  は 一般 に よく 知 ら れ て い る アーカイブ ( 書庫 化 ) および 圧縮 の 標準 ファイル フォーマット で す 。  この モジュール で は  ZIP  形式 の ファイル の 作成 、 読み書き 、 追記 、 書庫 内 の ファイル 一覧 の 作成 を 行 う ため の ツール を 提供 し ま す 。 
より 高度 な 使 い 方 で この モジュール を 利用 し た い なら 、 
不備 の あ る  ZIP  ファイル 操作 の 際 に 送出 さ れ る エラー 
ZIP  ファイル の 読み書き の ため の クラス で す 。 
コンストラクタ の 詳細 に つ い て は 、 ` `ZipFile  オブジェクト ' '  ( 7 . 18 . 1  節 )  を 参照 し て くださ い 。 
Python  ライブラリ を 含 む  ZIP  アーカイブ を 生成 する ため の クラス で す 。 
クラス Zip Info 
アーカイブ 中 の メンバ に 関 する 情報 を 提供 する ため に 用い られ る クラス で す 。 
この クラス の インスタンス は  ZipFile  オブジェクト の getinfo ( )  および  infolist ( )  メソッド に よ っ て 返さ れ ま す 。 
zipfile  モジュール を 利用 する ほとんど の ユーザ は この オブジェクト を 自ら 生成 する 必要 は な く 、 モジュール が 生成 し て 返 す オブジェクト を 利用 する だけ で しょ う 。  filename  は アーカイブ メンバ の 完全 な 名前 で 、 date_time は  ファイル の 最終 更新 時刻 を 記述 する 、  6  つ の フィールド から な る タプル で な く て は な り ま せ ん 。 
各 フィールド に つ い て は 7 . 18 . 3 , ``Zip Info  オブジェクト ' '  節 を 参照 し て くださ い 。  is _zipfile 
filename  が 正し い マジック ナンバ を も つ  ZIP  ファイル の とき に True  を 返 し 、 そう で な い 場合  False  を 返 し ま す 。 
この モジュール は 現在 の ところ 、 コメント を 追記 し た  ZIP  ファイル を 扱 う こと が でき ま せ ん 。 
アーカイブ メンバ が 圧縮 さ れ て い な い こと を 表 す 数値 定数 で す 。 
通常 の  ZIP  圧縮 手法 を 表 す 数値 定数 。 
ZIP  圧縮 は  zlib  モジュール を 必要 と し ま す 。 
現在 の ところ 他 の 圧縮 手法 は サポート さ れ て い ま せ ん 。 
ZIP  ファイル 形式 および アルゴリズム を 作成 し た  Phil  Katz  に よ る ドキュメント 。 
Info - ZIP  プロジェクト に よ る  ZIP  アーカイブ プログラム 及び プログラム 開発 ライブラリ に 関 する 情報 。 
この モジュール で は 、 データ 圧縮 を 必要 と する アプリケーション が  zlib  ライブラリ を 使 っ て 圧縮 および 解凍 を 行え る よう に し ま す 。 
圧縮 および 解凍 時 の エラー に よ っ て 送出 さ れ る 例外 。 
string  の Adler - 32  チェック サム を 計算 し ま す 。 
( Adler - 32  チェック サム は 、 おおむね  CRC 32  と 同等 の 信頼 性 を 持 ち ながら はるか に 高速 に 計算 する こと が でき ま す 。 
) value  が 与え られ て い れ ば 、 value  は チェック サム 計算 の 初期 値 と し て 使 わ れ ま す 。  それ 以外 の 場合 に は 固定 の デフォルト 値 が 使 わ れ ま す 。 
この 機能 に よ っ て 、 複数 の 入力 文字 列 を 結合 し た データ 全体 に わた り 、 通し の チェック サム を 計算 する こと が でき ま す 。 
この アルゴリズム は 暗号 法論 的 に は 強力 と は いえ な い の で 、 認証 や デジタル 署名 など に 用い る べ き で は あ り ま せ ん 。 
この アルゴリズム は チェック サム アルゴリズム と し て 用い る ため に 設計 さ れ た もの な の で 、 汎用 的 な ハッシュ アルゴリズム に は 向 き ま せ ん 。 
デフォルト の 値 は  6  で す 。 
圧縮 時 に 何 ら か の エラー が 発生 し た 場合 、 error  例外 を 送出 し ま す 。 
string  の  CRC  ( Cyclic  Redundancy  Check ,  巡回 符号 方式 ) 
チェック サム を 計算 し ま す 。 
value  が 与え られ て い れ ば 、 チェック サム 計算 の 初期 値 と し て 使 わ れ ま す 。 
与え られ て い な けれ ば デフォルト の 初期 値 が 使 わ れ ま す 。 
value  を 与え る こと で 、 複数 の 入力 文字 列 を 結合 し た データ 全体 に わた り 、 通し の チェック サム を 計算 する こと が でき ま す 。 
この アルゴリズム は 暗号 法論 的 に は 強力 で は な く 、 認証 や デジタル 署名 に 用い る べ き で は あ り ま せ ん 。 
アルゴリズム は チェック サム アルゴリズム と し て 設計 さ れ て え い る の で 、 汎用 の ハッシュ アルゴリズム に は 向 き ま せ ん 。 
string  内 の データ を 解凍 し て 、 解凍 さ れ た データ を 含 む 文字 列 を 返 し ま す 。 
w bits  パラメタ は ウィンドウ バッファ の 大き さ を 制御 し ま す 。 
bufsize  が 与え られ て い れ ば 、 出力 バッファ の 書記 サイズ と し て 使 わ れ ま す 。 
解凍 処理 に 何 ら か の エラー が 生 じ た 場合 、 error  例外 を 送出 し ま す 。 w bits  の 絶対 値 は 、 データ を 圧縮 する 際 に 用い られ る ヒストリ バッファ の サイズ  ( ウィンドウ サイズ )  に 対 し 、  2  を 底 と する 対数 を と っ た もの で す 。 
最近 の ほとんど の バージョン の  zlib  ライブラリ を 使 っ て い る なら 、 w bits  の 絶対 値 は  8  から  15  と する べ き で す 。  より 大きな 値 は より 良好 な 圧縮 に つなが り ま す が 、 より 多く の メモリ を 必要 と し ま す 。 
デフォルト の 値 は  15  で す 。 
w bits  の 値 が 負 の 場合 、 標準 的 な  gzip  ヘッダ を 出力 し ま せ ん 。  これ は  zlib  ライブラリ の 非 公開 仕様 で あ り 、 unzip  の 圧縮 ファイル 形式 に 対 する 互換 性 の ため の もの で す 。 
bufsize  は 解凍 さ れ た データ を 保持 する ため の バッファ サイズ の 初期 値 で す 。 
バッファ の 空き は 必要 に 応 じ て 必要 な だけ 増加 する の で 、 な れ ば 、 必ず しも 正確 な 値 を 指定 する 必要 は あ り ま せ ん 。  この 値 の チューニング で でき る こと は 、 malloc ( )  が 呼 ば れ る 回数 を 数 回 減ら す こと ぐらい で す 。 
デフォルト の サイズ は  16 3 84  で す 。 
メモリ 上 に 一 度 に 展開 でき な い よう な データ ストリーム を 解凍 する ため に 用い られ る 解凍 オブジェクト を 返 し ま す 。 
w bits  パラメタ は ウィンドウ バッファ の サイズ を 制御 し ま す 。 
圧縮 オブジェクト は 以下 の メソッド を サポート し ま す : 
string  を 圧縮 し 、 圧縮 さ れ た データ を 含 む 文字 列 を 返 し ま す 。  この 文字 列 は 少な く とも  string  に 相当 し ま す 。 
この データ は 以前 に 呼 ん だ compress ( )  が 返 し た 出力 と 結合 する こと が でき ま す 。 
入力 の 一部 は 以後 の 処理 の ため に 内部 バッファ に 保存 さ れ る こと も あ り ま す 。 
未 処理 の 入力 データ が 処理 さ れ 、 この 未 処理 部分 を 圧縮 し た データ を 含 む 文字 列 が 返 さ れ ま す 。  mode  は 定数  Z _ SYNC _ FLUSH  、 Z_ FULL _ FLUSH  、 また は  Z _ FINISH  の いずれ か を と り 、 デフォルト 値 は  Z _ FINISH  で す 。 
Z_ SYNC _ FLUSH  および Z _ FULL _ FLUSH  で は これ 以後 に も データ 文字 列 を 圧縮 でき る モード で 、 解凍 時 の 部分 的 な エラー リカバリ を 可能 に し ま す 。  一方 、 Z _ FINISH  は 圧縮 ストリーム を 閉じ 、 これ 以後 の データ の 圧縮 を 禁止 し ま す 。 
mode  に Z _ FINISH  を 設定 し て flush ( )  メソッド を 呼び出 し た 後 は 、 compress ( )  メソッド を 再び 呼 ぶ べ き で は あ り ま せ ん 。  唯一 の 現実 的 な 操作 は この オブジェクト を 削除 する こと だけ で す 。 
解凍 オブジェクト は 以下 の メソッド と  2  つ の 属性 を サポート し ま す : 
圧縮 データ の 末尾 まで の バイト 列 が 入 っ た 文字 列 で す 。 
すなわち 、 この 値 は 圧縮 データ の 入 っ て い る バイト 列 の 最後 の 文字 まで が 読み 出せ る かぎり  " "  と な り ま す 。 
解凍 さ れ た データ を 収め る バッファ の 長 さ 制限 を 超え た ため に 、 最も 最近 の decompress  呼び出し で 処理 し きれ な かっ た データ を 含 む 文字 列 で す 。 
この データ は まだ  zlib  側 から は 見え て い な い の で 、 正し い 解凍 出力 を 得 る に は 以降 の  decompress  メソッド 呼び出し に  ( 場合 に よ っ て は 後続 の データ が 追加 さ れ た )  データ を 差し戻 さ な けれ ば な り ま せ ん 。 
[ max _ length ] string  を 解凍 し 、 少な く とも  string  の 一 部分 に 対応 する 解凍 さ れ た データ を 含 む 文字 列 を 返 し ま す 。 
この データ は 以前 に decompress ( )  メソッド を 呼 ん だ 時 に 返 さ れ た 出力 と 結合 する こと が でき ま す 。 
入力 データ の 一 部分 が 以後 の 処理 の ため に 内部 バッファ に 保存 さ れ る こと も あ り ま す 。  オプション パラメタ  max _ length  が 与え られ る と 、 返 さ れ る 解凍 データ の 長 さ が  max _ length  以下 に 制限 さ れ ま す 。 
この こと は 入力 し た 圧縮 データ の 全て が 処理 さ れ る と は 限 ら な い こと を 意味 し 、 処理 さ れ な かっ た データ は  unconsumed_tail  属性 に 保存 さ れ ま す 。 
解凍 処理 を 継続 し た い なら ば 、 この 保存 さ れ た データ を 以降 の decompress ( )  呼び出し に 渡 さ な く て は な り ま せ ん 。 
max _ length  が 与え られ な かっ た 場合 、 全て の 入力 が 解凍 さ れ 、 unconsumed_tail  属性 は 空 文字 列 に な り ま す 。 
未 処理 の 入力 データ を 全て 処理 し 、 最終 的 に 圧縮 さ れ な かっ た 残り の 出力 文字 列 を 返 し ま す 。 
flush ( )  を 呼 ん だ 後 、  decompress ( )  を 再度 呼 ぶ べ き で は あ り ま せ ん 。  この とき でき る 唯一 現実 的 な 操作 は オブジェクト の 削除 だけ で す 。 
モジュール オブジェクト 固有 の 関数 は 数 個 しか あ り ま せ ん 。 
この  PyTypeObject  の インスタンス は  Python  の モジュール オブジェクト 型 を 表現 し ま す 。 
この オブジェクト は 、 Python  プログラム に は types . ModuleType  と し て 公開 さ れ て い ま す 。 
o  が モジュール オブジェクト か モジュール オブジェクト の サブ タイプ で あ る とき に 真 を 返 し ま す 。  バージョン  2 . 2  で  変更  さ れ た 仕様 : サブ タイプ を 引数 に とれ る よう に な り ま し た 
o  が モジュール オブジェクト で 、 かつ モジュール オブジェクト の サブ タイプ で な い とき に 真 を 返 し ま す 。 
PyModule_Type . バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。  PyObject * 
_ _ name__ 属性 が  name  に 設定 さ れ た 新た な モジュール オブジェクト を 返 し ま す 。 
モジュール の __doc_ _ および _ _ name__ 属性 だけ に 値 が 入 っ て い ま す ; __file_ _属性 に 値 を 入れ る の は 呼び出 し 側 の 責任 で す 。 
module  の 名前 空間 を 実現 する 辞書 オブジェクト を 返 し ま す ; この オブジェクト は モジュール オブジェクト の __dict_ _ と 同じ で す 。 
この 関数 が 失敗 する こと は あ り ま せ ん 。 
拡張 モジュール で は 、 この 関数 で 得 た モジュール の __dict_ _ を 直接 いじ る より 、 他 の PyModule_*()  および PyObject_*( )  関数 を 使 う よう 勧め ま す 。 
module  の __name__ の 値 を 返 し ま す 。 
モジュール が この 属性 を 提供 し て い な い 場合 や 文字 列 型 で な い 場合 、 SystemError  を 送出 し て  NULL  を 返 し ま す 。 
module  を ロード する ため に 使 っ た ファイル の 名前 を 、 module の _ _file_ _ 属性 から 調べ て 返 し ま す 。 
_ _file_ _ が 定義 さ れ て い な い 場合 や 文字 列 型 で な い 場合 、 SystemError  を 送出 し て  NULL  を 返 し ま す 。 
module  に オブジェクト を name  と し て 追加 し ま す 。 
この 関数 は モジュール の 初期 化 関数 から 利用 さ れ る 便宜 関数 で す 。 
エラー の とき に は  - 1  を 、 成功 し た とき に は  0  を 返 し ま す 。 
バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
module  に 整数 定数 を name  と し て 追加 し ま す 。 
この 便宜 関数 は モジュール の 初期 化 関数 から 利用 さ れ て い ま す 。 
エラー の とき に は  - 1  を 、 成功 し た とき に は  0  を 返 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
module  に 文字 列 定数 を name  と し て 追加 し ま す 。 
文字 列  value  は null  終端 さ れ て い な けれ ば な り ま せ ん 。 
エラー の とき に は  - 1  を 、 成功 し た とき に は  0  を 返 し ま す 。  バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
クラス Morsel
RFC  2109 の 属性 を キー と 値 で 保持 する abstract クラス で す 。  Morsel は 辞書 風 の オブジェクト で 、 キー は 次 の よう な RFC  2109 準 拠 の 定数 と な っ て い ま す 。 
キー の 大小 文字 は 区別 さ れ ま す 。 
クッキー の 値 。 
実際 に 送信 する 形式 に エンコード さ れ た cookie の 値 。 
cookie の 名前 。 
メンバ key 、 value 、 coded_value に 値 を セット し ま す 。 
K が Morsel の キー で あ る か どう か を 判定 し ま す 。 
Mosel を HTTP ヘッダ 形式 の 文字 列 表現 に し て 返 し ま す 。 
attrs  を 指定 し な い 場合 、 デフォルト で すべて の 属性 を 含め ま す 。 
ブラウザ が Java Script を サポート し て い る 場合 、 HTTP ヘッダ を 送信 し た 場合 と 同様 に 動作 する 埋め込 み 可能 な Java Script snippet を 返 し ま す 。  attrs の 意味 は output ( ) と 同じ で す 。 
Mosel の 文字 列 表現 を HTTP や Java Script で 囲 ま ず に 出力 し ま す 。  attrs の 意味 は output ( ) と 同じ で す 。 
読み出し 待ち の 打鍵 イベント が 存在 する 場合 に 真 を 返 し ま す 。 
打鍵 を 読み取 り 、 読み出 さ れ た 文字 を 返 し ま す 。 
コンソール に は 何 も エコーバック さ れ ま せ ん 。 
この 関数 呼び出し は 読み出し 可能 な 打鍵 が な い 場合 に は ブロック し ま す が 、 文字 を 読み 出せ る よう に する ため に  Enter  の 打鍵 を 待 つ 必要 は あ り ま せ ん 。  打鍵 さ れ た キー が 特殊 機能 キー  ( function key)  で あ る 場合 、 この 関数 は  ' 0 00 '  また は  ' xe 0 '  を 返 し ま す ;  キー コード は 次 に 関数 を 呼び出 し た 際 に 返 さ れ ま す 。 
この 関数 で Control - C  の 打鍵 を 読み出 す こと は でき ま せ ん 。 
getch ( )  に 似 て い ま す が 、 打鍵 し た 字 が 印字 可能 な 文字 の 場合 エコーバック さ れ ま す 。 
キャラクタ  char  を バッファ リング を 行 わ な い で コンソール に 出力 し ま す 。 
キャラクタ  char  を コンソール バッファ に  ` ` 押し戻 し  ( push back ) ' '  ま す ;  これ に よ り 、 押し戻 さ れ た 文字 は  getch ( )  や  getche ( )  で 次 に 読み出 さ れ る 文字 に な り ま す 。 
C  言語 に よ る 実行 時 システム に おけ る ファイル 記述 子  fd  に 基づ い て 、 ファイル の 一部 に ロック を かけ ま す 。 
一 つ の ファイル の 複数 の 領域 を 同時 に ロック する こと は 可能 で す が 、 領域 が 重複 し て は な り ま せ ん 。 
連接 する 領域 を まとめ て 指定 する こと は でき ま せ ん ;  それ ら の 領域 は 個別 に ロック 解除 し な けれ ば な り ま せ ん 。 
指定 さ れ た バイト 列 に ロック を かけ ま す 。 
指定 領域 が ロック でき な かっ た 場合 、 プログラム は  1  秒 後 に 再度 ロック を 試み ま す 。 
10  回 再 試行 し た 後 で も ロック を かけ られ な い 場合 、 IOError が 送出 さ れ ま す 。 
指定 領域 は あらかじめ ロック さ れ て い な けれ ば な り ま せ ん 。 
ファイル 記述 子  fd  に 対 し て 、 行末 文字 の 変換 モード を 設定 し ま す 。 
テキスト モード に 設定 する に は 、 flags を os . O_ TEXT に し ま す ;  バイナリ モード に する に は  os . O_ BINARY  に し ま す 。 
C  言語 に よ る 実行 時 システム に おけ る ファイル 記述 子 を ファイル ハンドル handle  から 生成 し ま す 。 
返 さ れ る ファイル 記述 子 は  os . fdopen ( )  で ファイル オブジェクト を 生成 する ため に 使 う こと が でき ま す 。 
ファイル 記述 子  fd  の ファイル ハンドル を 返 し ま す 。 
fd が 認識 でき な い 場合 、  IOError  を 送出 し ま す 。 
malloc ( )  さ れ た ヒープ 領域 を 強制 的 に 消去 さ せ て 、 未 使用 の メモリ ブロック を オペレーティング システム に 返 し ま す 。 
この 関数 は Windows  NT  上 で のみ 動作 し ま す 。 
失敗 し た 場合 、  IOError を 送出 し ま す 。 
6 . 2 9 . 4  ログ イベント を ネットワーク 越し に 送受信 する 
コンソール と ファイル に 、 別々 の メッセージ 書式 で 、 別々 の 状況 に 応 じ た ログ 出力 を 行 わ せ た い と し ま しょ う 。 
例えば  DEBUG  より も 高 い レベル の メッセージ は ファイル に 記録 し 、 INFO  以上 の レベル の メッセージ は コンソール に 出力 し た い と い う 場合 で す 。 
また 、 ファイル に は タイム スタンプ を 記録 し 、 コンソール に は 出力 し な い と し ま す 。 
この スクリプト を 実行 する と 、 コンソール に は 以下 の よう に 表示 さ れ る で しょ う : 
そして 、 ファイル は 以下 の よう に な る はず で す : 
ご覧 の よう に 、  DEBUG  メッセージ は ファイル だけ に 出力 さ れ 、 その 他 の メッセージ は 両方 に 出力 さ れ ま す 。 
この 例題 で は 、 コンソール と ファイル の ハンドラ だけ を 使 っ て い ま す が 、 実際 に は 任意 の 数 の ハンドラ や 組み合わせ を 使え ま す 。 
mutex  に は 以下 の メソッド が あ り ま す : 
mutex  が ロック さ れ て い る か どう か 調べ ま す 。 
「 原子 的  ( Atomic ) 」 な  Test - and - Set  操作 で す 。 
ロック が セット さ れ て い な けれ ば 獲得 し て  True  を 返 し ま す 。  それ 以外 の 場合 に は False を 返 し ま す 。 
mutex  が ロック さ れ て い な けれ ば  function ( argument )  を 実行 し ま す 。 
mutex  が ロック さ れ て い る 場合 、 関数 と その 引数 を キュー に 置 き ま す 。  キュー に 置 か れ た 
function ( argument )  が いつ 実行 さ れ る か に つ い て は unlock を 参照 し て くださ い 。 
キュー が 空 なら ば  mutex  を ロック 解除 し ま す 。  そう で な けれ ば 、 キュー の 最初 の 要素 を 実行 し ま す 。 
名前  ( name ) 
と は 、 オブジェクト を 参照 する もの を 指 し ま す 。 
名前 へ の 束縛  ( name binding )  操作 を 行 う と 、 名前 を 導入 でき ま す 。 
プログラム テキスト 中 に 名前 が 出現 する たび に 、 その 名前 が 使 わ れ て い る 最も 内側 の 関数 ブロック 中 で 作成 さ れ た 束縛  ( binding )  を 使 っ て 名前 の 参照 が 行 わ れ ま す 。 
ブロック  ( block ) 
は 、 Python  の プログラム テキスト から な る 断片 で 、 一 つ の 実行 単位 と な る もの で す 。 
モジュール 、 関数 本体 、 そして クラス 定義 は ブロック で す 。 
また 、 対話 的 に 入力 さ れ た 個々 の コマンド も ブロック で す 。 
スクリプト ファイル  ( インタプリタ に 標準 入力 と し て 与え たり 、 コマンドライン の 第 一 引数 と し て 指定 し た ファイル )  は 、 コード ブロック で す 。 
スクリプト コマンド  ( インタプリタ の コマンドライン 上 で ` - c' オプション を 使 っ て 指定 し た コマンド )  も コード ブロック で す 。 
組み込 み 関数  eval ( )  や  exec  文 に 渡 し た 文字 列 も コード ブロック に な り ま す 。 
組み込 み 関数  input ( )  から 読み取 ら れ 、 評価 さ れ る 式 も また 、 コード ブロック で す 。 
また 、 現在 の コード ブロック の 実行 が 完了 し た 際 に 、 どの よう に プログラム の 実行 を 継続 する か を 決定 し て い ま す 。  スコープ  ( scope ) 
は 、 ある 名前 が あ る ブロック 内 で 参照 でき る か どう か を 決め ま す 。 
ローカル 変数 が あ る ブロック 内 で 定義 さ れ て い る 場合 、 変数 の スコープ は その ブロック を 含 み ま す 。 
関数 ブロック 内 で 名前 の 定義 を 行 っ た 場合 、 その 名前 に 対 し て 別 の 束縛 を 行 っ て い る ブロック を 除 い た 、 関数 内 の 全て の ブロック を 含 む よう に スコープ が 拡張 さ れ ま す 。 
クラス 内 で 定義 さ れ た 名前 の スコープ は 、 クラス の ブロック 内 に 制限 さ れ ま す ;  スコープ が メソッド の コード ブロック を 含 む よう 拡張 さ れ る こと は あ り ま せ ん 。  ある 名前 が コード ブロック 内 で 使 わ れ る と 、 その 名前 を 最も 近傍 から 囲 う よう な スコープ  ( 最内 スコープ :  nearest enclosing  scope )  を 使 っ て 束縛 の 解決 を 行 い ま す 。 
こう し た スコープ から な る 、 ある コード ブロック 内 で 参照 でき る スコープ 全て の 集合 は 、 ブロック の  環境  ( environment )  と 呼 ば れ ま す 。 
ある 名前 が ブロック 内 で 束縛 さ れ て い る 場合 、 名前 は その ブロック に お け る ローカル 変数  ( local  variable )  で す 。 
ある 名前 が モジュール レベル で 束縛 さ れ て い る 場合 、 名前 は グローバル 変数  ( global  variable )  で す 。 
( モジュール コード ブロック の 変数 は 、 ローカル 変数 で も あ る し 、 グローバル 変数 で も あ り ま す 。 
) ある 変数 が コード ブロック 内 で 使 わ れ て い る が 、 その ブロック で は 定義 さ れ て い な い 場合 、 変数 は 自由 変数  ( free  variable ) 
で す 。  ある 名前 の 定義 が どこ に も な い 場合 、 NameError 
例外 が 送出 さ れ ま す 。 
名前 が まだ 束縛 さ れ て い な い ローカル な 変数 を 参照 し た 場合 、 UnboundLocal Error 
例外 が 送出 さ れ ま す 。 
UnboundLocal Error  は 、 NameError  の サブ クラス で す 。  名前 へ の 束縛 は 、 以下 の 文 構成  ( construct ) :  関数 の 仮 引数  ( formal  parameter ) 指定 、 import  文 、 クラス や 関数 の 定義  ( 定義 を 行 っ た ブロック 中 で 、 クラス や 関数 名 の 束縛 が 行 わ れ ま す ) 、 代入 時 に 、 代入 対象 が 識別 子 で あ る 場合 、 for  ループ の ヘッダ 、 また は 第 二 形式 の except  文 ヘッダ 、 で 行 わ れ ま す 。 
形式 の import  文 は 、 import  し よう と する モジュール 内 で 定義 さ れ て い る 名前 に つ い て 、 アンダース コア から 始ま っ て い る 名前 以外 の 全て を 束縛 し ま す 。 
この 形式 は 、 モジュール レベル で しか 使 う こと が でき ま せ ん 。  del  文 で 指定 さ れ た 対象 は 、 ( del  の 意味 付け は 、 実際 は 名前 の 解放  ( unbind )  で す が )  文 の 目的 上 、 束縛 済み の もの と みな さ れ ま す 。 
この ため 、 ある 名前 が 束縛 さ れ る 前 に ブロック 内 で 使 わ れ る と エラー を 引き起こ す 可能 性 が あ り ま す 。  この 規則 は やや 微妙 で す 。 
Python  に は 宣言 文 が な く 、 コード ブロック の どこ で 名前 束縛 操作 を 行 っ て も かま い ま せ ん 。 
ある コード ブロック に お け る ローカル 変数 は 、 ブロック 全体 から 名前 束縛 操作 が 行 わ れ て い る 部分 を 走査 し て 決定 し ま す 。  global  文 で 指定 さ れ た 名前 が ブロック 内 に あ る 場合 、 その 名前 は 常 に トップ レベル の 名前 空間 で 束縛 さ れ た 名前 を 参照 し ま す 。 
それ ら の 名前 は グローバル 名前 空間 、 すなわち コード ブロック が 収め られ て い る モジュール の 名前 空間 と モジュール 名 __builtin__ で 表 さ れ る 組み込 み 名前 空間 、 を 検索 する こと に よ っ て 、 トップ レベル の 名前 空間 で 解決 さ れ ま す 。  グローバル 名前 空間 は 、 常 に 最初 に 検索 さ れ ま す 。 
名前 が グローバル 名前 空間 中 に 見つか ら な い 場合 、 組み込 み 名前 空間 が 検索 さ れ ま す 。 
global  文 は 、 その 名前 が 使 わ れ て い る 全て の 文 に 先立 っ て 記述 さ れ て い な けれ ば な り ま せ ん 。 
ある コード ブロック の 実行 時 に 関連 付け られ る 組み込 み 名前 空間 は 、 実際 に は コード ブロック の グローバル 名前 空間 内 に 入 っ て い る 名前 _ _builtins_ _ を 参照 する 形 に な っ て い ま す ; __builtins_ _ は 辞書 か モジュール  ( 後者 の 場合 に は モジュール の 辞書 が 使 わ れ ま す ) で な けれ ば な り ま せ ん 。 
通常 、 __builtins_ _ 名前 空間 は 、 組み込 み モジュール __builtin__ ( 注意 : ` s ' なし ) の モジュール 辞書 で す 。 
そう で な い 場合 、 制限 実行  ( restricted  execution ) 
モード が 有効 に な っ て い ま す 。  ある モジュール の 名前 空間 は 、 その モジュール が 最初 に import  さ れ た 時 に 自動 的 に 作成 さ れ ま す 。 
スクリプト の 主 モジュール  (main module ) は 常 に _ _main__ と 呼 ば れ ま す 。 
グローバル 文 は 、 同じ ブロック の 束縛 操作 と 同じ スコープ を 持 ち ま す 。 
ある 自由 変数 の 最内 スコープ に  global  文 が あ る 場合 、 その 自由 変数 は グローバル 変数 と みな さ れ ま す 。  クラス 定義 は 一 つ の 実行 文 で 、 名前 の 使用 や 定義 を 行 い ま す 。 
クラス 定義 へ の 参照 は 、 通常 の 名前 解決 規則 に 従 い ま す 。  クラス 定義 の 名前 空間 は 、 その クラス の 属性 辞書 に な り ま す 。 
クラス の スコープ で 定義 さ れ た 名前 は 、 メソッド から は 見え ま せ ん 。 
4 . 1 . 1  動的 な 機能 と の やりとり 
12 .  インターネット 上 の データ の 操作  この 章 で は インターネット 上 で 一般 的 に 利用 さ れ て い る データ 形式 の 操作 を サポート する モジュール 群 に つ い て 記述 し ま す . 
汎用 の 出力 書式 化 機構 および デバイス インタフェース 。 
電子 メール の メッセージ を 解析 、 操作 および 生成 を 支援 する パッケージ 。  これ に は  MIME  文書 も ふく ま れ る 。 
電子 メール の メッセージ を 表現 する 基底 クラス 
電子 メール メッセージ の フラット な テキスト を 解析 し 、 メッセージ オブジェクト 構造 体 を 生成 する 。 
メッセージ 構造 から フラット な 電子 メール テキスト を 生成 する 。 
非 ASCII 形式 の ヘッダ を 表現 する 
文字 セット 
電子 メール メッセージ の ペイロード の ため の エンコーダ 。 email . Errors
email  パッケージ で 使 わ れ る 例外 クラス 
電子 メール パッケージ の 雑多 な ユーティリティ 。 
メッセージ オブジェクト ツリー を たど る 。 
mailcap  ファイル の 操作 。 
様々 な メール ボックス 形式 の 読み出し 。 
Python  から  MH  の メイル ボックス を 操作 し ま す 。 
MIME - スタイル の メッセージ 本体 を 解析 する ため の ツール 。 
ファイル 名 拡張 子 の  MIME  型 へ の マッピング 。 
汎用  MIME  ファイル ライター 。 
電子 メイル メッセージ の  MIME  化 および 非  MIME  化 。 
MIME  データ の よう な 、 個別 の 部分 を 含 ん だ ファイル 群 に 対 する 読み出し の サポート 。 
RFC  28 2 2  形式 の メイル メッセージ を 解釈 し ま す 。 
RFC  35 4 8 :  Base 16 ,  Base 32 ,  Base 64  テータ の 符号 化 
バイナリ と 各種  ASCII コード 化 バイナリ 表現 と の 間 の 変換 を 行 う ツール 群 。 
binhex 4  形式 ファイル の エンコード および デコード 。 
MIME  quoted - printable  形式 ファイル の エンコード および デコード 。 
uuencode 形式 の エンコード と デコード を 行 う 。 
外部 データ 表現  ( XDR ,  External  Data Representation )  データ の エンコード および デコード 。 
. netrc  ファイル 群 の 読み出し 。 
robots . txt  ファイル を 読み出し 、 他 の  URL  に 対 する 取得 可能 性 の 質問 に 答え る クラス 。 
デリミタ で 区切 ら れ た 形式 の ファイル に 対 する テーブル 状 データ 読み書き 。 
netrc  インスタンス は 以下 の メソッド を 持 っ て い ま す : 
host  の 認証 情報 と し て 、 三 要素 の タプル  ( login ,  account ,  password )  を 返 し ま す 。 
与え られ た  host  に 対 する エントリ が  netrc  ファイル に な い 場合 、 ` default '  エントリ に 関連 付け られ た タプル が 返 さ れ ま す 。 
host  に 対応 する エントリ が な く 、 default  エントリ も な い 場合 、 None  を 返 し ま す 。 
netrc  の インスタンス は 以下 の 公開 さ れ た インスタンス 変数 を 持 っ て い ま す : 
ホスト 名 を  ( login ,  account ,  password )  から な る タプル に 対応 づけ て い る 辞書 で す 。 
` default '  エントリ が あ る 場合 、 その 名前 の 擬似 ホスト 名 と し て 表現 さ れ ま す 。 
マクロ 名 を 文字 列 の リスト に 対応 付け て い る 辞書 で す 。 
+  注意 : Passwords are  limitedto  a  subset of the ASCII  character set . +  Versions  ofthis  module  prior  to  2 . 3  were  extremely limited .  Starting  with +  2 . 3 ,  all ASCII punctuation  is  allowedin  passwords .  However ,  note  that +  whitespace  and  non - printable characters are  not  allowedin  passwords .  This +  is a  limitation  of the  way the . netrc file  is  parsed and  may  be removed  in +  the future . 
注意 : 利用 可能 な パスワード の 文字 セット は 、 ASCII の サブ セット のみ で す 。 
2 . 3 より 前 の バージョン で は 厳し く 制限 さ れ て い ま し た が 、 2 . 3 以降 で は ASCII の 記号 を 使用 する こと が でき ま す 。  しかし 、 空白 文字 と 印刷 不可 文字 を 使用 する こと は でき ま せ ん 。 
この 制限 は . netrc ファイル の 解析 方法 に よ る もの で あ り 、 将来 解除 さ れ ま す 。 
以下 の メソッド は 新し い 形式 の クラス  ( new-style class )  のみ に 適用 さ れ ま す 。 
クラス の インスタンス に 対 する 属性 アクセス を 実装 する ため に 、 無 条件 に 呼び出 さ れ ま す 。 
10 . 1  オブジェクト を ヒープ 上 に メモリ 確保 する 
10 .  オブジェクト 実装 サポート  (object implementation  support) 
この 章 で は 、 新し い オブジェクト 型  ( newobjecttype )  を 定義 する 際 に 使 わ れ る 関数 、 型 、 および マクロ に つ い て 説明 し ま す 。 
10 . 9  循環 参照 ガベージ コレクション を サポート する 
NNTP  インスタンス は 以下 の メソッド を 持 っ て い ま す 。 
全て の メソッド に おけ る 戻 り 値 の タプル で 最初 の 要素 と な る  response  は 、 サーバ の 応答 で す :  この 文字 列 は  3  桁 の 数字 から な る コード で 始ま り ま す 。  サーバ の 応答 が エラー を 示 す 場合 、 上記 の いずれ か の 例外 が 送出 さ れ ま す 。 
サーバ に 最初 に 接続 し た 際 に 送信 さ れ る 応答 中 の ウェルカム メッセージ を 返 し ま す 。 
( この メッセージ に は 時 に 、 ユーザ に と っ て 重要 な 免責 事項 や ヘルプ 情報 が 入 っ て い ま す 。 
この メソッド は 印字 さ れ る デバッグ 出力 の 量 を 制御 し ま す 。 
標準 で は  0  に 設定 さ れ て い て 、 これ は デバッグ 出力 を 全く 印字 し ま せ ん 。 
1  は そこそこ の 量 、 一般 に  NNTP  要求 や 応答 あたり  1  行 の デバッグ 出力 を 生成 し ま す 。 
値 が  2  や それ 以上 の 場合 、 ( メッセージ テキスト を 含め て )  NNTP 接続 上 で 送受信 さ れ た 全て の 内容 を 一行 ごと に ログ 出力 する 、 最大 限 の デバッグ 出力 を 生成 し ま す 。 
" NEWSGRO UPS "  命令 を 送信 し ま す 。 
date  引数 は 'yy
dd ' の 形式 を 取 り 、 日付 を 表 し ま す 。 time 引数 は  'hh
ss ' の 形式 を と り 、 時刻 を 表 し ま す 。 
与え られ た 日付 および 時刻 以後 新た に 出現 し た ニュース グループ 名 の リスト を  groups  と し て 、 ( response ,groups)  を 返 し ま す 。 file 引数 が 指定 さ れ て い る 場合 、 " NEWGRO UPS " コマンド の 出力 結果 は ファイル に 格納 さ れ ま す 。 
file が 文字 列 の 場合 、 この 文字 列 を ファイル 名 と し て ファイル を オープン し 、 書き込み 後 に クローズ し ま す 。 file が ファイル オブジェクト の 場合 、 オブジェクト の write ( ) メソッド を 呼び出 し て 出力 結果 を 格納 し ま す 。 
file が 指定 さ れ て い る 場合 は 戻 り 値 と し て 空 の リスト を 返 し ま す 。 
" NEW NEWS "  命令 を 送信 し ま す 。 
ここ で 、 group  は グループ 名 また は '*' で 、  date  および  time は newsgrups( )  に お け る 引数 と 同じ 意味 を 持 ち ま す 。 
( response ,  articles )  から な る ペア を 返 し 、 articles  は 記事  ID  の リスト で す 。 file 引数 が 指定 さ れ て い る 場合 、 " NEW NEWS " コマンド の 出力 結果 は ファイル に 格納 さ れ ま す 。 
" LIST "  命令 を 送信 し ま す 。 
( response ,  list )  から な る ペア を 返 し ま す 。 
list  は タプル から な る リスト で す 。  各 タプル は ( group ,  last ,  first ,  flag ) の 形式 を と り 、 group  が グループ 名 、 last  および  first  は それぞれ 最新 および 最初 の 記事 の 記事 番号  ( を 表 す 文字 列 ) 、 そして flag  は 投稿 が 可能 な 場合 に は ' y ' 、 そう で な い 場合 に は ' n' 、 グループ が モデレート  ( moderated )  さ れ て い る 場合 に は ' m ' と な り ま す 。 
( 順番 に 注意 し て くださ い :  last 、 first  の 順 で す 。  ) file 引数 が 指定 さ れ て い る 場合 、 " LIST " コマンド の 出力 結果 は ファイル に 格納 さ れ ま す 。 
" LIST  NEWSGRO UPS "  命令 を 送信 し ま す 。 grouppattern  は RFC 2980  の 定義 に 従 う  wildmat  文字 列 で す  ( 実際 に は 、  DOS  や  UNIX  の シェル ワイルド カード 文字 列 と 同じ で す ) 。 
( response , list ) から な る ペア を 返 し 、 list  は タプル ( name ,title ) リスト に な り ま す 。 
単一 の グループ group  から 説明 文字 列 を 取り出 し ま す 。 
('group ' が 実際 に は  wildmat  文字 列 で )  複数 の グループ が マッチ し た 場合 、 最初 に マッチ し た もの を 返 し ま す 。 
何 も マッチ し な けれ ば 空 文字 列 を 返 し ま す 。  この メソッド は サーバ から の 応答 コード を 省略 し ま す 。 
応答 コード が 必要 なら 、 descriptions ( )  を 使 っ て くださ い 。 
記事 番号 は 文字 列 で 返 さ れ ま す 。 
" HELP "  命令 を 送信 し ま す 。 
" NEXT "  命令 を 送信 し ま す 。 
stat ( )  の よう な 応答 を 返 し ま す 。 
" LAST "  命令 を 送信 し ま す 。 
" HEAD "  命令 を 送信 し ま す 。  id  は stat ( )  に お け る の と 同じ 意味 を 持 ち ま す 。 
( response ,  number ,  id ,  list ) から な る タプル を 返 し ま す 。  最初 の  3  要素 は  stat ( )  と 同じ もの で 、 list  は 記事 の ヘッダ から な る リスト ( まだ 解析 さ れ て お ら ず 、 末尾 の 改行 が 取り去 ら れ た ヘッダ 行 の リスト ) で す 。 
" BODY "  命令 を 送信 し ま す 。  id  は stat ( )  に お け る の と 同じ 意味 を 持 ち ま す 。 
file  引数 が 与え られ て い る 場合 、 記事 本体  ( body )  は ファイル に 保存 さ れ ま す 。 
file  が 与え られ て い た 場合 、  返 さ れ る  list  は 空 の リスト に な り ま す 。 
" ARTICLE "  命令 を 送信 し ま す 。  id  は stat ( )  に お け る の と 同じ 意味 を 持 ち ま す 。 
head ( )  の よう な 戻 り 値 を 返 し ま す 。 
" SLAVE "  命令 を 送信 し ま す 。 
サーバ の  response  を 返 し ま す 。 
" X HDR "  命令 を 送信 し ま す 、 この 命令 は  RFC  に は 定義 さ れ て い ま せ ん が 、 一般 に 広ま っ て い る 拡張 で す 。 
header  引数 は 、 例えば ' subject ' と い っ た ヘッダ キー ワード で す 。 
string  引数 は  ' first - last '  の 形式 で な けれ ば な ら ず 、 ここ で first  および  last  は 検索 の 対象 と する 記事 範囲 の 最初 と 最後 の 記事 番号 で す 。 
" POST "  命令 を 使 っ て 記事 を ポスト し ま す 。 
file 引数 は 開 か れ て い る ファイル オブジェクト で 、 その 内容 は readline ( )  メソッド を 使 っ て  EOF  まで 読み出 さ れ ま す 。 
内容 は 必要 な ヘッダ を 含め 、 正し い 形式 の ニュース 記事 で な けれ ば な り ま せ ん 。 
post ( )  メソッド は  " . " で 始ま る 行 を 自動 的 に エスケープ し ま す 。 
" IHAVE "  命令 を 送信 し ま す 。 
応答 が エラー で な い 場合 、 file  を  post ( )  と 全く 同じ よう に 扱 い ま す 。 
descriptions ( )  また は  description ( )  を 使 う よう に し て くださ い 。 
( resp ,  list )  から な る ペア を 返 し ま す 。  list  は タプル から な る リスト で 、 各 タプル は 記事 番号  start  および  end  の 間 に 区切 ら れ た 記事 で す 。 
各 タプル は ( article  number ,  subject ,  poster ,  date , id ,  references ,  size ,  lines )  の 形式 を と り ま す 。 file 引数 が 指定 さ れ て い る 場合 、 " X HDR " コマンド の 出力 結果 は ファイル に 格納 さ れ ま す 。 
file が 指定 さ れ て い る 場合 は 戻 り 値 と し て 空 の リスト を 返 し ま す 。  これ は オプション の  NNTP  拡張 な の で 、 全て の サーバ で サポート さ れ て い る と は 限 り ま せ ん 。 
( resp ,  path )  から な る ペア を 返 し ま す 。  path  は  メッセージ  ID  が  id  で あ る 記事 の ディレクトリ パス で す 。 
これ は オプション の  NNTP  拡張 な の で 、 全て の サーバ で サポート さ れ て い る と は 限 り ま せ ん 。 
" QUIT "  命令 を 送信 し 、 接続 を 閉じ ま す 。 
この メソッド を 呼び出 し た 後 は 、 NTTP  オブジェクト の 他 の いかなる メソッド も 呼び出 し て は いけ ま せ ん 。 
いく つ か の 組み込 み 関数 は 、 現代 的 な  Python  プログラミング を 行 う 場合 に は 、 必ず しも 学習 し たり 、 知 っ て い たり 、 使 っ たり する 必要 が なくな り ま し た 。 
こう し た 関数 は 古 い バージョン の  Python  向け 書 か れ た プログラム と の 互換 性 を 維持 する だけ の 目的 で 残 さ れ て い ま す 。  Python  の プログラマ 、 教官 、 学生 、 そして 本 の 著者 は 、 こう し た 関数 を 飛ば し て も かま わ ず 、 その 際 に 何 か 重要 な こと を 忘れ て い る と 思 う 必要 も あ り ま せ ん 。 
引数  function  は 呼び出し が でき る オブジェクト  ( ユーザ 定義 および 組み込み の 関数 また は メソッド 、 また は クラス オブジェクト ) で な けれ ば な り ま せ ん 。  args  は シーケンス 型 で な く て は な り ま せ ん 。 
function  は 引数 リスト  args  を 使 っ て 呼び出 さ れ ま す ; 引数 の 数 は タプル の 長 さ に な り ま す 。  オプション の 引数  keywords  を 与え る 場合 、  keywords  は 文字 列 の キー を 持 つ 辞書 で な けれ ば な り ま せ ん 。 
これ は 引数 リスト の 最後 に 追加 さ れ る キー ワード 引数 で す 。  apply( )  の 呼び出し は 、 単なる 
function ( args)  の 呼び出し と は 異な り ま す 。  と い う の は 、 apply( )  の 場合 、 引数 は 常 に 一 つ だ から で す 。 
apply( )  は 
function (*args,* *keywords )  を 使 う の と 等価 で す 。  上 の よう な  ` ` 拡張 さ れ た 関数 呼び出 し 構文 ' ' は  apply( )  と 全く 等価 な の で 、 必ず しも  apply( )  を 使 う 必要 は あ り ま せ ん 。 
リリース  2 . 3  で 撤廃 さ れ ま し た 。  上 で 述べ られ た よう な 拡張 呼び出 し 構文 を 使 っ て くださ い 。 
引数  object  を 参照 する 新た な バッファ オブジェクト が 生成 さ れ ま す 。 
引数  object  は  ( 文字 列 、 アレイ 、 バッファ と い っ た )  バッファ 呼び出 し インタフェース を サポート する オブジェクト で な けれ ば な り ま せ ん 。 
返 さ れ る バッファ オブジェクト は  object  の 先頭  ( また は  offset ) から の スライス に な り ま す 。 
スライス の 末端 は  object  の 末端 まで ( また は 引数  size  で 与え られ た 長 さ に な る まで )  で す 。 
二 つ の 数値 型 の 引数 を 共通 の 型 に 変換 し て 、 変換 後 の 値 から な る タプル を 返 し ま す 。  変換 に 使 わ れ る 規則 は 算術 演算 に お け る 規則 と 同じ で す 。 
型 変換 が 不 可能 で あ る 場合 、 TypeError  を 送出 し ま す 。 
string  を ` ` 隔離 ' ' さ れ た 文字 列 の テーブル に 入力 し 、 隔離 さ れ た 文字 列 を 返 し ま す  -  この 文字 列 は  string  自体 か コピー で す 。  隔離 さ れ た 文字 列 は 辞書 検索 の パフォーマンス を 少し だけ 向上 さ せ る の に 有効 で す  -  辞書 中 の キー が 隔離 さ れ て お り 、 検索 する キー が 隔離 さ れ て い る 場合 、 ( ハッシュ 化 後 の )  キー の 比較 は 文字 列 の 比較 で は な く ポインタ の 比較 で 行 う こと が でき る から で す 。 
通常 、 Python  プログラム 内 で 利用 さ れ て い る 名前 は 自動 的 に 隔離 さ れ 、 モジュール 、 クラス 、 また は インスタンス 属性 を 保持 する ため の 辞書 は 隔離 さ れ た キー を 持 っ て い ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : 隔離 さ れ た 文字 列 の 有効 期限 は  ( Python  2 . 2  また は それ 以前 は 永続 的 で し た が )  永続 的 で は な くな り ま し た ; intern ( )  の 恩恵 を 受け る ため に は 、 intern ( ) の 返 す 値 に 対 する 参照 を 保持 し な けれ ば な り ま せ ん 
リリース  2 . 4  ， 平成 18 年 6 月 27 日  更新 
None  に 対 する  PyTypeObject  は 、  Python\/C API  で は 直接 公開 さ れ て い な い の で 注意 し て くださ い 。 
None  は 単量子 ( singleton )  な の で 、 オブジェクト の アイデンティティ テスト ( C  で は  " = = " )  を 使 う だけ で 十分 だ から で す 。  同じ 理由 から 、 Py None _ Check ( )  関数 は あ り ま せ ん 。 
Python  に お け る  None  オブジェクト で 、 値 が な い こと を 表 し ま す 。 
この オブジェクト に は メソッド が あ り ま せ ん 。 
リファレンス カウント に つ い て は 、 この オブジェクト も 他 の オブジェクト と 同様 に 扱 う 必要 が あ り ま す 。 
C  関数 から  Py _ None  を 戻 す 操作 を 適切 に 行 う ため の マクロ で す 。 
字句 解析 と 構文 に 関 する 記述 で は 、 BNF  文法 記法 に 手 を 加え た もの を 使 っ て い ま す 。 
この 記法 で は 、 以下 の よう な 記述 形式 を と り ま す : 
最初 の 行 は 、 name  が  lc _letter  の 後ろ に  ゼロ 個 また は それ 以上 の  lc _letter  と アンダース コア が 続 い た もの で あ る こと を 示 し て い ま す 。 
そして 、 lc _letter  は  " a "  から  " z "  まで の 何 ら か の 文字 一 字 で あ る こと を 示 し ま す  ( この 規則 は 、 この ドキュメント に 記述 さ れ て い る 字句 規則 と 構文 規則 に お い て 定義 さ れ て い る 名前  ( name )  で 一貫 し て 使 わ れ て い ま す ) 。 
各 規則 は  name  ( 規則 に よ っ て 定義 さ れ て い る もの の 名前 )  と コロン 一つ から 始ま り ま す 。 
垂直線  ( |)  は 、 複数 の 選択 項目 を 分かち書き する とき に 使 い ま す ;  この 記号 は 、 この 記法 に お い て 最も 結合 優先 度 の 低 い 演算 子 で す 。 
アスタ リスク  (*) は 、 直前 に くる 要素 の ゼロ 個 以上 の 繰り返し を 表 し ま す ;  同様 に 、 プラス  ( + )  は 一 個 以上 の 繰り返し で 、 角括弧 ( [ ] )  に 囲 わ れ た 字句 は 、 字句 が ゼロ 個 か 一 個 出現 する ( 別 の 言 い 方 を すれ ば 、 囲い の 中 の 字句 は オプション で あ る )  こと を 示 し ま す 。 
*  および  +  演算 子 の 結合 範囲 は 可能 な 限り 狭 く な っ て い ま す ;  字句 の グループ 化 に は 丸括弧 を 使 い ま す 。 
リテラル 文字 列 は クオート で 囲 わ れ ま す 。 
各 カッコ 中 の 字句  (... )  は 、 定義 済み の シンボル を 記述 する 非 形式 的 な や り かた で す ;  例えば 、 ` 制御 文字 '  を 書き表 す 必要 が あ る とき など に 使 わ れ る こと が あ り ま す 。  字句 と 構文 規則 の 定義 の 間 で 使 わ れ て い る 表記 は ほとんど 同じ で す が 、 その 意味 に は 大きな 違い が あ り ま す :  字句 定義 は 入力 ソース 中 の 個々 の 文字 を 取り扱 い ま す が 、 構文 定義 は 字句 解析 で 生成 さ れ た 一連 の トークン を 取り扱 い ま す 。 
次節  ( ` ` 字句 解析 ' ')  に お け る  BNF  は すべて 字句 定義 の ため の もの で す ;  それ 以降 の 章 で は 、 構文 定義 の ため に 使 っ て い ま す 。 
1 . 11  C + + で の 拡張 モジュール 作成 
一般 論 と し て 、 オブジェクト へ の 参照 を 引数 に と る 関数 は ユーザ が NULL  ポインタ を 渡 す と は 予想 し て お ら ず 、 渡 そ う と する と コア ダンプ に な る  ( か 、 あと で コア ダンプ を 引き起こ す )  こと で しょ う 。 
一方 、 オブジェクト へ の 参照 を 返 す よう な 関数 は 一般 に 、 例外 の 発生 を 示 す 場合 に のみ  NULL  を 返 し ま す 。 
型 を 調べ る マクロ に は 、 NULL  チェック を 行 う 変化 形 は あ り ま せ ん 。  Python  から  C  関数 を 呼び出 す 機構 は 、  C  関数 に 渡 さ れ る 引数 リスト ( 例 で い う ところ の  args)  が 決して  NULL  に な ら な い よう 保証 し て い ま す --  実際 に は 、 常 に タプル 型 に な る よう 保証 し て い ま す 。 
NULL  ポインタ を  Python  ユーザ レベル に  ` ` 逃が し ' '  て しま う と 、 深刻 な エラー を 引き起こ し ま す 。 
. . .  実際 に は 、 常 に タプル 型 に な る よう 保証 し て い ま す 。 
` ` 旧式 の ' '  呼び出 し 規約 を 使 っ て い る 場合 に は 、 この 保証 は 適用 さ れ ま せ ん - -  既存 の コード に は いまだ に 旧式 の 呼び出 し 規約 が 多々 あ り ま す 
10 . 4  マップ 型 オブジェクト 構造 体  ( mapping  object 
拡張 型 で 数値 型 プロトコル を 実装 する ため に 使 わ れ る 関数 群 へ の ポインタ を 保持 する ため に 使 わ れ る 構造 体 で す 。 
オブジェクト  o  が 数値 型 プロトコル を 提供 し て い る 場合 に 1  を 返 し 、 そう で な い とき に は 偽 を 返 し ま す 。 
成功 する と o 1  と o 2  を 加算 し た 結果 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
成功 する と o 1  から  o 2  を 減算 し た 結果 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
成功 する と o 1  と o 2  を 乗算 し た 結果 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
成功 する と  o 1  を o 2  で 除算 し た 結果 を 返 し , 失敗 する と  NULL  を 返 し ま す 。 
成功 する と o 1  を o 2  で 除算 し た 切捨て 値 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
` ` 旧 仕様 の ' '  整数 間 で の 除算 と 同じ で す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
成功 する と 、 数学 的 な  o 1  の o 2  に よ る 除算 値 に 対 する 妥当 な 近似  ( reasonable approximation )  を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
全て の 実数 を  2  を 基数 と し て 表現 する の は 不 可能 な ため 、 二進 の 浮動 小数 点数 は ` ` 近似 値 ' ' しか 表現 でき ま せ ん 。  この ため 、 戻 り 値 も 近似 に な り ま す 。 
この 関数 に 二 つ の 整数 を 渡 し た 際 、 浮動 小数 点 の 値 を 返 す こと が あ り ま す 。 
成功 する と  o 1  を o 2  で 除算 し た 剰余 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
組み込 み 関数  divmod ( )  を 参照 し て くださ い 。 
失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " divmod (o 1 , o 2 ) "  と 同じ で す 。 
組み込 み 関数 pow ( )  を 参照 し て くださ い 。 
Python  の 式  " pow (o 1 , o 2 , o 3 ) " と 同じ で す 。 o 3  は オプション で す 。 
o 3  を 無視 さ せ た い なら 、  Py _ None  を 入れ て くださ い (o 3  に NULL  を 渡 す と 、 不正 な メモリ アクセス を 引き起こ す こと が あ り ま す ) 。 
成功 する と o  の 符号 反転 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。  Python  の 式  " - o 
成功 する と  o  を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " + o 
成功 する と  o  の 絶対 値 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " abs(o) "  と 同じ で す 。 
成功 する と  o  の ビット 単位 反転  ( bitwise  negation )  を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " ~o  "  と 同じ で す 。 
"  と 同じ で す 。 
成功 する と  o 1  を o 2  だけ 右 シフト し た 結果 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
成功 する と  o 1  と o 2  の ` ` ビット 単位 論理 積  ( bitwise  and ) ' ' を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
成功 する と  o 1  と o 2  の ` ` ビット 単位 排他 的 論理 和  ( bitwise  exclusive or ) ' ' を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " 
成功 する と  o 1  と o 2  の ` ` ビット 単位 論理 和  ( bitwise or ) ' ' を 返 し 失敗 する と  NULL  を 返 し ま す 。 
o 1  が  in - place  演算 を サポート する 場合 、 in - place  演算 を 行 い ま す 。 
Python  の 文 " 
成功 する と o 1  を o 2  で 除算 し た 切捨て 値 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
"  と 同じ で す 。 
バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
この 関数 に 二 つ の 整数 を 渡 し た 際 、 浮動 小数 点 の 値 を 返 す こと が あ り ま す 。 
o 1  が  in - place  演算 を サポート する 場合 、 in - place  演算 を 行 い ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
成功 する と  o 1  を o 2  で 除算 し た 剰余 を 返 し 、 ,  失敗 する と  NULL  を 返 し ま す 。 
組み込 み 関数 pow ( )  を 参照 し て くださ い 。 
失敗 する と  NULL  を 返 し ま す 。 
o 1  が  in - place  演算 を サポート する 場合 、 in - place  演算 を 行 い ま す 。 
この 関数 は  o 3  が  Py _ None  の 場合 は  Python  文 " 
"  と 同じ で 、 それ 以外 の 場合 は " pow (o 1 , o 2 , o 3 ) "  の  in - place  版 で す 。 
o 3  を 無視 さ せ た い なら 、  Py _ None  を 入れ て くださ い (o 3  に NULL  を 渡 す と 、 不正 な メモリ アクセス を 引き起こ す こと が あ り ま す ) 。 
成功 する と  o 1  を o 2  だけ 左 シフト し た 結果 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
o 1  が  in - place  演算 を サポート する 場合 、 in - place  演算 を 行 い ま す 。 
Python  の 文 " 
この 関数 は PyObject *  型 の 二 つ の 変数 の アドレス を 引数 に と り ま す 。 
と * p 2
が 指 す オブジェクト が 同じ 型 の 場合 、 それぞれ の 参照 カウント を インクリメント し て  0  ( 成功 )  を 返 し ま す 。 
オブジェクト を 変換 し て 共通 の 数値 型 に でき る 場合 、 * p 1  と * p 2  を 変換 後 の 値 に 置き換え て  ( 参照 カウント を ' 新し く ' し て )  、 0  を 返 し ま す 。 
変換 が 不 可能 な 場合 や 、 その 他 何 ら か の エラー が 生 じ た 場合 、 - 1 ( 失敗 )  を 返 し 、 参照 カウント を インクリメント し ま せ ん 。 
PyNumber_ Coerce (o 1 , o 2 )  の 呼び出し は  Python  文 " 
o 1 , o 2  =  coerce (o 1 , o 2 ) "  と 同じ で す 。  PyObject * 
成功 する と o  を 整数 に 変換 し た もの を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
引数 の 値 が 整数 の 範囲 外 の 場合 、 長 整数 を 代わり に 返 し ま す 。 
Python  の 式  " int(o) " 
と 同じ で す 。  PyObject * 
成功 する と o  を 長 整数 に 変換 し た もの を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " long (o) "  と 同じ で す 。 
成功 する と o  を 浮動 小数 点数 に 変換 し た もの を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " float(o) "  と 同じ で す 。 
数値 リテラル は  4  種類 あ り ま す :  整数  ( plaininteger ) 、 長 整数  ( longinteger ) 、 浮動 小数 点数  ( floating  point  number ) 、 そして 虚数  ( imaginarynumber )  で す 。 
複素数 の ため の リテラル は あ り ま せ ん  ( 複素数 は 実数 と 虚数 の 和 で 作 る こと が でき ま す ) 。  数値 リテラル に は 符号 が 含 ま れ て い な い こと に 注意 し て くださ い ;  - 1 の よう な 句 は 、 実際 に は 単項 演算 子  ( unary  operator ) `-' と リテラル 1  を 組み合わせ た もの で す 。 
3 . 3 . 6  シーケンス 型 エミュレーション で 使 わ れ る その 他 の メソッド 
3 . 3 . 8  型 強制 規則  ( coercion  rule )  3 . 3 . 7  数値 型 を エミュレーション する 
以下 の メソッド を 定義 し て 、 数値 型 オブジェクト を エミュレート する こと が でき ま す 。 
特定 の 種類 の 数値 型 で は サポート さ れ て い な い よう な 演算 に 対応 する メソッド  ( 非 整数 の 数値 に 対 する ビット 単位 演算 など )  は 、 未 定義 の まま に し て お か な けれ ば な り ま せ ん 。 
これ ら の メソッド は 、 二 項 算術 演算  ( + , -,*,\/\/,% , divmod ( ) 
, ,^,| ) を 実現 する ため に 呼び出 さ れ ま す 。 
例えば 、 式  x 
y の 場合 、 x  が __add__( )  メソッド を も つ クラス の インスタンス で あ れ ば 、 
x .__add__( y )  が 呼び出 さ れ ま す 。 
__divmod_ _( )  メソッド は 、 _ _floordiv__( )  と__mod_ _( )  を 使 っ た 場合 と 等価 に な ら な けれ ば な り ま せ ん ; __truediv__( )  ( 下記 参照 )  と 関連 づけ る 必要 は あ り ま せ ん 。 
組み込み の 三 項 演算 子 バージョン の 関数 pow ( ) 
を サポート する 場合 に は 、 __pow_ _( )  は 、 オプション と な る 第 三 の 引数 を 受け取れ な く て は な り ま せ ん 。 
除算 演算  (\/ ) は 、 これ ら の メソッド で 実現 さ れ て い ま す 。 
_ _truediv__( )  は 、 __future_ _. division  が 有効 で あ る とき に 使 わ れ ま す 。  それ 以外 の 場合 に は __div__( )  が 使 わ れ ま す s 。 
二 つ の メソッド の うち 一方 しか 定義 さ れ て い な けれ ば 、 オブジェクト は 他方 の 演算 コンテキスト を サポート し な く な り ま す ;  この とき 、 TypeError  が 送出 さ れ ま す 。 
これ ら の メソッド は 二 項 算術 演算 ( + , - ,*,\/,% , divmod ( ) 
, ,^,|)  を 実現 し ま す が 、 メソッド 呼び出し が 行 わ れ る 被 演算 子 が 逆転 し て  ( reflected , swapped :  入れ替え られ て )  い ま す 。 
これ ら の 関数 は 、 左側 の 被 演算 子 が 対応 する 演算 を サポート し て い な い 場合 に のみ 呼び出 さ れ ま す 。 
例えば 、 x 
y  に お い て 、 y  が __rsub__( )  メソッド を 持 つ クラス の インスタンス で あ る 場合 、 
y .__rsub_ _( x )  が 呼び出 さ れ ま す 。 
これ ら の メソッド は 、 累算 算術 演算  ( augmentedarithmetic  operations , + = , -=,*=,\/=,%=, **=,
= , = ,^= ,|=)  を 実現 する ため に 呼び出 さ れ ま す 。 
これ ら の メソッド は 、 演算 を その 場 で ( self  を 変更 する 形 で ) 行 う よう 試み 、 その 結果 ( 変更 さ れ た  self  また は その 代わり の もの ) を 返 さ な けれ ば な り ま せ ん 。 
特定 の メソッド が 定義 さ れ て い な い 場合 、 その 累算 算術 演算 は 通常 の メソッド で 代用 さ れ ま す 。 
例えば 、 x 
y  を 評価 する 際 、 x  が _ _i add__( )  メソッド を 持 つ クラス の インスタンス で あ れ ば 、 
x . _ _i add__( y )  が 呼び出 さ れ ま す 。 
反対 に 、 x  が _ _i add ( )  メソッド を 持 た な い クラス の インスタンス で あ れ ば 、 x 
y .__radd_ _( x )  を 考慮 し ま す 。 
単項 算術 演算  ( -, + , abs ( ) 
および  ~ ) を 実現 する ため に 呼び出 さ れ ま す 。 
組み込 み 関数 complex ( ) 
, および  float ( ) 
を 実現 する ため に 呼び出 さ れ ま す 。 
適切 な 型 の 値 を 返 さ な けれ ば な り ま せ ん 。 
` ` 型 混合 モード  ( mixed - mode ) ' ' で の 数値 間 の 算術 演算 を 実現 する ため に 呼び出 さ れ ま す 。 
self  と other  を 共通 の 数値 型 に 変換 し て 、 2  要素 の タプル に し て 返 す か 、 不 可能 な 場合 に は  None  を 返 さ な けれ ば な り ま せ ん 。 
共通 の 型 が other  の 型 に な る 場合 、  None  を 返 す だけ で 十分 で す 。  この 場合 、 インタプリタ は もう 一方 の オブジェクト を 調べ て 型 強制 を 行 お う と する から で す  ( と は い え 、 もう 一方 の 値 の 型 が 実装 上 変更 でき な い 場合 に は 、 ここ で  self  を other  の 型 に 変換 し て お い た 方 が 便利 で す ) 。 
戻 り 値 に  NotImplemented  を 使 う の は 、  None  を 返 す の と 同じ で す 。 
7 . 2 . 1  ( 通常 ) 整数 型 オブジェクト  ( plaininteger object ) 
オブジェクト  o  を ファイル  fp  に 出力 し ま す 。 
失敗 する と - 1  を 返 し ま す 。 
flags  引数 は 何 ら か の 出力 オプション を 有効 に する 際 に 使 い ま す 。 
現在 サポート さ れ て い る 唯一 の オプション は Py _ PRINT_ RAW  で す ; この オプション を 指定 する と 、 repr ( )  の 代わり に str ( )  を 使 っ て オブジェクト を 書き込 み ま す 。 
o  が 属性  attr_ name  を 持 つ とき に  1  を 、 それ 以外 の とき に  0  を 返 し ま す 。 
この 関数 は  Python  の 式 " hasattr (o,  attr_ name ) "  と 同じ で す 。 
この 関数 は 常 に 成功 し ま す 。 
" と 同じ で す 。 
オブジェクト  o  から 、 名前  attr_ name  の 属性 を 取得 し ま す 。  成功 する と 属性 値 を 返 し 失敗 する と  NULL  を 返 し ま す 。 
この 関数 は  Python  の 式  " 
オブジェクト  o  の attr_ name  と い う 名 の 属性 に 、 値 v  を 設定 し ま す 。 
失敗 する と  - 1  を 返 し ま す 。 
この 関数 は  Python  の 式  " 
オブジェクト  o  の attr_ name  と い う 名 の 属性 を 削除 し ま す 。 
失敗 する と  - 1  を 返 し ま す 。 
この 関数 は  Python  の 文 " del o . attr_ name  " と 同じ で す 。 
o 1  と o 2  を opid  に 指定 し た 演算 に よ っ て 比較 し ま す 。 opid  は Py _ LT , Py _ LE , Py _ EQ , Py _ NE , Py _ GT ,  また は Py _ GE ,  の いずれ か で な けれ ば な ら ず 、 それぞれ , = , == , != , ,  および =  に 対応 し ま す 。 
この 関数 は  Python  の 式  " 
"  と 同じ で 、 op  が opid  に 対応 する 演算 子 で す 。 
成功 する と 比較 結果 の 値 を 返 し 失敗 する と  NULL  を 返 し ま す 。 
比較 結果 が 真 なら ば  1  を 、 偽 なら ば  0  を 、 エラー が 発生 する と  - 1  を 返 し ま す 。 
この 関数 は  Python  の 式  " 
"  と 同じ で 、 op  が opid  に 対応 する 演算 子 で す 。 
o 1  と o 2  の 値 を 比較 し ま す 。  この とき o 1  が 比較 ルーチン を 持 っ て い れ ば それ を 使 い 、 な けれ ば  o 2  の ルーチン を 使 い ま す 。 
比較 結果 は  result  に 返 さ れ ま す 。 
Python  文 
result  = cmp (o 1 , o 2 ) " と 同じ で す 。 
成功 する と 比較 結果 を 返 し ま す 。 
エラー が 生 じ た 場合 の 戻 り 値 は 未 定義 で す ;  PyErr_Occurred ( )  を 使 っ て エラー 検出 を 行 っ て 下さ い 。 
Python  式 
" cmp (o 1 , o 2 ) " と 同じ で す 。 
o  の 文字 列 表現 を 計算 し ま す 。 
成功 する と 文字 列 表現 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  式 " repr(o) " と 同じ で す 。 
Python  式 " str(o) " と 同じ で す 。 
この 関数 は 組み込 み 関数 str ( ) 
や print  文 の 処理 で 呼び出 さ れ ま す 。 
o  の  Unicode  文字 列 表現 を 計算 し ま す 。 
成功 する と Unicode  文字 列 表現 を 返 し 失敗 する と  NULL  を 返 し ま す 。  Python  式 " unicode (o) "  と 同じ で す 。 
inst  が  cls  の インスタンス か 、  cls  の サブ クラス の インスタンス の 場合 に  - 1  を 返 し 、 そう で な けれ ば  0  を 返 し ま す 。 
エラー の 時 に は  - 1  を 返 し 、 例外 を セット し ま す 。 
cls  が クラス オブジェクト で は な く 型 オブジェクト の 場合 、 PyObject _IsInstance ( )  は  inst  が cls  で あ る とき に  1  を 返 し ま す 。 
cls  を タプル で 指定 し た 場合 、 cls  に 指定 し た 全て の エントリ に つ い て チェック を 行 い ま す 。  少な く とも 一 つ の エントリ に 対 する チェック が  1  を 返 せ ば 結果 は 1  に な り 、 そう で な けれ ば  0  に な り ま す 。 
inst  が クラス インスタンス で な く 、 かつ  cls  が 型 オブジェクト で も クラス オブジェクト で も タプル で も な い 場合 、 inst  に は __class_ _ 属性 が な く て は な り ま せ ん  - - この 場合 、 __class_ _ 属性 の 値 と 、 cls  の 値 の 間 の クラス 関係 を 、 関数 の 戻 り 値 を 決定 する の に 使 い ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
バージョン  2 . 2  で  変更  さ れ た 仕様 : 二 つ 目 の 引数 に タプル の サポート を 追加 し ま し た 。 
サブ クラス の 決定 は かなり 正攻 法 で 行 い ま す が 、 クラス システム の 拡張 を 実装 する 人 たち に 知 っ て お い て 欲し い ちょっと し た 問題 点 が あ り ま す 。 
A  と  B  が クラス オブジェクト の 場合 、  B  が A  の サブ クラス と な る の は 、 B  が  A  を 直接 的 あるいは 間接 的 に 継承  ( inherit )  し て い る 場合 で す 。 
両方 が クラス オブジェクト で な い 場合 、 二 つ の オブジェクト 間 の クラス 関係 を 決め る に は 、 より 汎用 の 機構 を 使 い ま す 。 
B  が  A  の サブ クラス で あ る か 調べ た とき 、 A  が B  と 等し けれ ば 、 PyObject _IsSubclass ( )  は 真 を 返 し ま す 。 
A  および  B  が 異な る オブジェクト なら 、 B  の __ bases_ _ 属性 から 深 さ 優先 探索  ( depth - first search ) で A  を 探索 し ま す --  オブジェクト に _ _ bases__ が あ る だけ で 、 この 決定 法 を 適用 する 条件 を 満た し て い る と みな さ れ ま す 。 
クラス  derived  が  cls  と 同じ クラス か 、 cls  の 導出 クラス の 場合 に  1  を 返 し 、 それ 以外 の 場合 に は  0  を 返 し ま す 。 
エラー が 生じ る と  - 1  を 返 し ま す 。 
derived  また は  cls  の いずれ か が 実際 の クラス オブジェクト ( あるいは タプル )  で な い 場合 、 上 で 述べ た 汎用 アルゴリズム を 使 い ま す 。  バージョン  2 . 1  で  新た に 追加  さ れ た 仕様 で す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : 以前 の  Python  の バージョン は 、 二 つ 目 の 引数 に タプル を サポート し て い ま せ ん で し た 
オブジェクト  o  が 呼び出し 可能 オブジェクト か どう か 調べ ま す 。 
オブジェクト が 呼び出し 可能 で あ る とき に  1  を 返 し 、 そう で な い とき に は  0  を 返 し ま す 。 
呼び出し 可能 な  Python  オブジェクト  callable_object  を タプル で 指定 さ れ た 引数  args  および 辞書 で 指定 さ れ た 名前 つき 引数  ( namedargument )  kw  と とも に 呼び出 し ま す 。 
成功 する と 呼び出 し 結果 と し て 得 られ た オブジェクト を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " apply( callable_object , args ,  kw ) " あるいは  " 
callable_object (*args,** kw ) "  と 同じ で す 。 
呼び出し 可能 な  Python  オブジェクト  callable_object  を タプル で 指定 さ れ た 引数  args  と とも に 呼び出 し ま す 。 
引数 を 必要 と し な い 場合 、  args を  NULL  に し て も かま い ま せ ん 。 
成功 する と 呼び出 し 結果 と し て 得 られ た オブジェクト を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " apply( callable_object , args) "  あるいは  " 
callable_object (*args) "  と 同じ で す 。 
呼び出し 可能 な  Python  オブジェクト  callable_object  を 可変数 個 の  C  引数 と とも に 呼び出 し ま す 。 
C  引数 は Py _ BuildValue ( )  形式 の フォーマット 文字 列 を 使 っ て 記述 し ま す 。 
format  は NULL に し て も よ く 、 与え る 引数 が な い こと を 表 し ま す 。 
成功 する と 呼び出 し 結果 と し て 得 られ た オブジェクト を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " apply( callable , args) "  あるいは  " 
callable (*args) "  と 同じ で す 。 
オブジェクト  o  の  method  と い う 名前 の メソッド を 、 可変数 個 の  C  引数 と とも に 呼び出 し ま す 。 
C  引数 は タプル を 生成 する よう な Py _ BuildValue ( )  形式 の フォーマット 文字 列 を 使 っ て 記述 し ま す 。 
format  は NULL に し て も よ く 、 与え る 引数 が な い こと を 表 し ま す 。 
成功 する と 呼び出 し 結果 と し て 得 られ た オブジェクト を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
Python  の 式  " 
o . method ( args) "  と 同じ で す 。 
呼び出し 可能 な  Python  オブジェクト  callable_object  を 可変数 個 の  PyObject *  引数 と とも に 呼び出 し ま す 。 
引数 列 は 末尾 に  NULL が つ い た 可変数 個 の パラメタ と し て 与え ま す 。  成功 する と 呼び出 し 結果 と し て 得 られ た オブジェクト を 返 し 失敗 する と  NULL  を 返 し ま す 。 
オブジェクト  o  の メソッド を 呼び出 し ま す 、 メソッド 名 は Python  文字 列 オブジェクト name  で 与え ま す 。 
可変数 個 の PyObject *  引数 と 共 に 呼び出 さ れ ま す . 引数 列 は 末尾 に  NULL が つ い た 可変数 個 の パラメタ と し て 与え ま す 。 
成功 する と 呼び出 し 結果 と し て 得 られ た オブジェクト を 返 し 失敗 する と  NULL  を 返 し ま す 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
オブジェクト  o  の ハッシュ 値 を 計算 し て 返 し ま す 。 
失敗 する と  - 1  を 返 し ま す 。 
Python  の 式  " hash(o) "  と 同じ で す 。 
o  が 真 を 表 す と みな せ る 場合 に は  1  を 、 そう で な い とき に は  0  を 返 し ま す 。 
失敗 する と  - 1  を 返 し ま す 。 
o  が 真 を 表 す と みな せ る 場合 に は  0  を 、 そう で な い とき に は  1  を 返 し ま す 。 
o  が  NULL で な い 場合 、 オブジェクト o  の オブジェクト 型 に 相当 する 型 オブジェクト を 返 し ま す 。 
失敗 する と  SystemError  を 送出 し て  NULL を 返 し ま す 。 
Python  の 式type(o ) と 同じ で す 。 
この 関数 は 戻 り 値 の 参照 カウント を インクリメント し ま す 。 
参照 カウント の インクリメント が 必要 で な い 限り 、 広 く 使 わ れ て い て PyTypeObject *  型 の ポインタ を 返 す 表記 法  o -ob_type  の 代わり に 使 う 理由 は 全く あ り ま せ ん 。 
オブジェクト  o  が 、 type  かtype  の サブ タイプ で あ る とき に 真 を 返 し ま す 。 
どちら の パラメタ も  NULL で あ っ て は な り ま せ ん 。  バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
o  の 長 さ を 返 し ま す 。 
オブジェクト o  が シーケンス 型 プロトコル と マップ 型 プロトコル の 両方 を 提供 し て い る 場合 、 シーケンス と し て の 長 さ を 返 し ま す 。 
エラー が 生じ る と  - 1  を 返 し ま す 。 
Python  の 式  " len (o) " と 同じ で す 。 
成功 する と オブジェクト  key  に 対応 する  o  の 要素 を 返 し 、 失敗 する と  NULL  を 返 し ま す 。 
オブジェクト  key  を 値  v  に 対応 付け ま す 。 
失敗 する と  - 1  を 返 し ま す 。 
オブジェクト  o  から  key  に 対 する 対応 付け を 削除 し ま す 。 
Python  の 文 " del o [ key] "  と 同じ で す 。 
Python  オブジェクト から ファイル 記述 子 を 取り出 し ま す 。 
オブジェクト が 整数 か 長 整数 なら 、 その 値 を 返 し ま す 。 
( 長 ) 整数 で な い 場合 、 オブジェクト に  fileno( )  メソッド が あ れ ば 呼び出 し ま す ;  この 場合 、  fileno( )  メソッド は 整数 また は 長 整数 を ファイル 記述 子 の 値 と し て 返さな けれ ば な り ま せ ん 。 
この 関数 は  Python  の 式  " dir(o) "  と 同じ で 、 オブジェクト の 変数 名 に 割り当て て い る 文字 列 から な る リスト ( 空 の 場合 も あ り ま す )  を 返 し ま す 。  エラー の 場合 に は  NULL を 返 し ま す 。 
引数 を  NULL に する と 、 Python  に お け る " dir ( ) "  と 同様 に 、 現在 の ローカル な 名前 を 返 し ま す ;  この 場合 、 アクティブ な 実行 フレーム が な けれ ば  NULL  を 返 し ま す が 、 PyErr_Occurred ( )  は 偽 を 返 し ま す 。 
Python  の 式  " iter (o) "  と 同じ で す 。  引数 に と っ た オブジェクト に 対 する 新た な イテレータ か 、 オブジェクト が すでに イテレータ の 場合 に は オブジェクト 自身 を 返 し ま す 。 
オブジェクト が 反復 処理 不 可能 で あ っ た 場合 に は TypeError  を 送出 し て  NULL  を 返 し ま す 。 
Python\/C API  関数 は 、  PyObject *  型 の 一 つ 以上 の 引数 と 戻 り 値 を 持 ち ま す 。 
この 型 は 、 任意 の  Python  オブジェクト を 表現 する 不 透明  (opaque )  な データ 型 へ の ポインタ で す 。 
Python  言語 は 、 全て の  Python  オブジェクト 型 を ほとんど の 状況  ( 例えば 代入 、 スコープ 規則  ( scope rule ) 、 引数 渡し )  で 同様 に 扱 い ま す 。 
ほとんど 全て の  Python  オブジェクト は ヒープ  ( heap )  上 に 置 か れ ま す :  この ため 、 PyObject  型 の オブジェクト は 、 自動 記憶  ( automatic )  と し て も 静的 記憶  ( static )  と し て も 宣言 でき ま せ ん 。  PyObject *  型 の ポインタ 変数 のみ 宣言 でき ま す 。 
唯一 の 例外 は 、 型 オブジェクト 
で す ; 型 オブジェクト は メモリ 解放  ( deallocate )  し て は な ら な い の で 、 通常 は 静的 記憶 の  PyTypeObject  オブジェクト に し ま す 。  全て の  Python  オブジェクト に は  ( Python  整数 型 で すら )  型 ( type )  と 参照 カウント  ( reference count )  が あ り ま す 。 
ある オブジェクト の 型 は 、 その オブジェクト が どの 種類 の オブジェクト か  ( 例えば 整数 、 リスト 、 ユーザ 定義 関数 、 など ;  その 他 多数 に つ い て は 、 
Python  リファレンス マニュアル 
で 説明 し て い ま す )  を 決定 し ま す 。 
よく 知 ら れ て い る 型 に つ い て は 、 各々 マクロ が 存在 し て 、 ある オブジェクト が その 型 か どう か 調べ られ ま す ;  例えば 、 " PyList _ Check ( a ) "  は 、 a  で 示 さ れ た オブジェクト が Python  リスト 型 の とき  ( かつ その とき に 限り )  真値 を 返 し ま す 。 
これ ら の モジュール は 通常  import  し て 利用 でき ま せ ん ;  利用 でき る よう に する に は 作業 を 行 わ な けれ ば な り ま せ ん 。  Python  で 書 か れ た もの は 、 標準 ライブラリ の 一部 と し て インストール さ れ て い る  lib -old\/ ディレクトリ の 中 に インストール さ れ ま す 。 
利用 する に は 、 PYTHONPATH  を 使 う など し て 、 lib -old\/ ディレクトリ を  sys . path  に 追加 し な けれ ば な り ま せ ん 。 
撤廃 さ れ た 拡張 モジュール の うち  C  で 書 か れ た もの は 、 標準 の 設定 で は ビルド さ れ ま せ ん 。 Unix で これ ら の モジュール を 有効 に する に は 、 ビルド ツリー 内 の  Modules \/ Setup  の 適切 な 行 の コメント アウト を 外 し て 、 モジュール を 静的 リンク する なら  Python  を ビルド し なお し 、 動的 に ロード さ れ る 拡張 を 使 う なら 共有 オブジェクト を ビルド し て インストール する 必要 が あ り ま す 。 
- -  パッケージ へ の 別 の アプローチ で す 。 
組み込み の パッケージ サポート を 使 っ て くださ い 。 
- -  ファイル 比較 関数 で す 。 
新し い 
を 使 っ て くださ い 。 
- -  古 い  cmp  モジュール の キャッシュ 化 版 で す 。 
- -  関数 コード オブジェクト から か 数 名 や 行 番号 を 抽出 し ま す ( 現在 で は これ ら は 属性 :  co. co_ name , func . func_ name , co . co_firstlineno  と し て アクセス でき ま す ) 。 
- -  ディレクトリ 間 の 差分  ( diff )  ツール を 構築 する ため の クラス で す ( デモ か ツール に な る か も しれ ま せ ん ) 。 
リリース  2 . 0  で 撤廃 さ れ ま し た 。 
モジュール が  dircmp に 置き換わ り ま す 。 
- -  変数 を 再 構築 する  Python  コード を 出力 し ま す 。 
- -  テキスト 書式 化 処理 の 抽象 化 モジュール で す  ( 低速 すぎ ま す ) 。 
- -  FCNTL  ファイル ロック 機構 へ の ラッパ で す  ( fcntl . lockf( )\/flock ( )  を 使 っ て くださ い 。 ;
- -  新た な  dir ( )  関数 で す 。  ( 現在 で は 標準 の  dir ( )  が 同じ くらい 改良 さ れ ま し た ) 。 
- -  fmt  の 補助 モジュール で す 。 
- -  多項 式 で す 。 
- -  Emacs  形式 の 正規 表現 サポート で す ;  古 い コード 内 で 未だ に 使 わ れ て い る か も しれ ま せ ん  ( 拡張 モジュール で す )  。 
ドキュメント は 
Python 1 . 6  Documentation  を 参照 し て くださ い 。 
- -  regex  で 利用 する ため の 、 正規 表現 に 基づ い た 文字 列 置換 ユーティリティ で す  ( 拡張 モジュール で す ) 。 
- -  局所 変数 の ダンプ を 伴 う トレース バック 印字 の ため の モジュール で す ( pdb . pm ( )  また は 
を 使 っ て くださ い ) 。 
- -  高 い 精度 で 経過 時間 を 計測 し ま す  ( time. clock ( )  を 使 っ て くださ い ) 。 
( 拡張 モジュール で す 。 ) 
- -  タイム ゾーン 指定 を 解釈 し ま す  ( 完成 し て い ま せ ん ;  将来 は 消滅 する モジュール で 、 TZ  環境 変数 が 設定 さ れ て い な い と 動作 し ま せ ん ) 。 
- -  他 の どこ に も 分類 し よう が な い 有用 な 関数 群 で す 。 
- -  音声 ファイル を 識別 し ま す ; 
- -  数学 的 な  ` ` 体 ' '  の 性質 を 計算 し ま す 。 
以下 の モジュール は 撤廃 さ れ ま し た が 、 ツール や スクリプト と し て 復活 し て い る よう で す : 
- -  ディレクトリ ツリー 内 から パターン に 合致 する ファイル を 探 し ま す 。 
- -  Python  に よ る  grep  実装 で す 。 
- -  自己 展開 形式 の  Unix  シェルアーカイブ を 生成 し ま す 。 
以下 の モジュール は この マニュアル の 以前 の バージョン で ドキュメント さ れ て い ま し た が 、 現在 で は 撤廃 さ れ た もの と 考え られ て い ま す 。 
これ ら の ドキュメント の ソース は 、 まだ ドキュメント ソース アーカイブ から 取得 可能 で す 。 
--`` パッケージ 内 の ' ' モジュール を import  し ま す 。  今 で は 基本 的 な パッケージ の サポート は 組み込み に な っ て い ま す 。 
組み込み の サポート は この モジュール で 提供 さ れ て い た 内容 に 非常 に 近 い もの と な っ て い ま す 。 
- -  乱数 生成 器 へ の 古 い インタフェース で す 。 
- -  共有 キー と 同じ よう な 名前 縮約 アルゴリズム で す 。 
特定 の アルゴリズム は 公開 さ れ て い る どの アルゴリズム と も 一致 し な い よう で す 。 
OpenerDirector  インスタンス は 以下 の メソッド を 持 っ て い ま す : 
handler  は  BaseHandler  の インスタンス で な けれ ば な り ま せ ん 。 
以下 の メソッド を 使 っ た 検索 が 行 わ れ 、 URL  を 取り扱 う こと が 可能 な ハンドラ の 連鎖 が 追加 さ れ ま す  ( HTTP  エラー は 特別 扱い さ れ て い る の で 注意 し て くださ い ) 。 
protocol _ open ( ) -- ハンドラ が  protocol  の  URL  を 開 く 方法 を 知 っ て い る か どう か を 調べ ま す 。 
protocol _error ( ) -- ハンドラ が  (http  で な い )  protocol  の エラー を 処理 する 方法 を 知 っ て い る こと を 示 す シグナル で す 。 
protocol _ response ( ) -- ハンドラ が  protocol  リクエスト の ポスト プロセス 方法 を 知 っ て い る こと を 示 す シグナル で す 。 
与え られ た プロトコル に おけ る エラー を 処理 し ま す 。 
この メソッド は 与え られ た プロトコル に おけ る 登録 済み の エラー ハンドラ を ( プロトコル 固有 の )  引数 で 呼び出 し ま す 。 
HTTP  プロトコル は 特殊 な ケース で 、 特定 の エラー ハンドラ を 選び出 す の に  HTTP  レスポンス コード を 使 い ま す ;  ハンドラ クラス の http_error_*( )  メソッド を 参照 し て くださ い 。  返り 値 および 送出 さ れ る 例外 は  urlopen ( )  と 同じ もの で す 。 
OpenerDirector  オブジェクト は 、 以下 の  3  つ の ステージ に 分け て URL  を 開 き ま す : 各 ステージ で  OpenerDirector  オブジェクト の メソッド が どの よう な 順 で 呼び出 さ れ る か は 、 ハンドラ インスタンス の 並 び 方 で 決ま り ま す 。 
protocol _request ( )  形式 の メソッド を 持 つ 全て の ハンドラ に 対 し て その メソッド を 呼び出 し 、 リクエスト の プリ プロセス を 行 い ま す 。 
protocol _ open ( )  形式 の メソッド を 持 つ ハンドラ を 呼び出 し 、 リクエスト を 処理 し ま す 。 
この ステージ は 、 ハンドラ が None  で な い 値  ( すなわち レスポンス )  を 返 す か 、 例外  ( 通常 は  URLError )  を 送出 し た 時点 で 終了 し ま す 。 
例外 は 伝播  ( propagate )  でき ま す 。  実際 に は 、 上 の アルゴリズム で は まず  default _ open  と い う 名前 の メソッド を 呼び出 し ま す 。 
この メソッド が 全て  None  を 返 す 場合 、 同じ アルゴリズム を 繰り返 し て 、 今度 は 
protocol _ open ( ) 形式 の メソッド を 試 し ま す 。 
メソッド が 全て  None  を 返 す と 、 さらに 同じ アルゴリズム を 繰り返 し て  unknown_open ( )  を 呼び出 し ま す 。  これ ら の メソッド の 実装 に は 、 親 と な る  OpenerDirector  インスタンス の  . open ( )  や . error ( )  と い っ た メソッド 呼び出し が 入 る 場合 が あ る の で 注意 し て くださ い 。 
protocol _ response ( )  形式 の メソッド を 持 つ 全て の ハンドラ に 対 し て その メソッド を 呼び出 し 、 リクエスト の ポスト プロセス を 行 い ま す 。 
下 の テーブル で は 、 個々 の 抽象 的 な 操作 が 、 どの よう に  Python  構文 上 の 各 演算 子 や 
モジュール の 関数 に 対応 し て い る か を 示 し て い ま す 。 
操作 
構文 
関数 
加算 
結合 
包含 テスト 
除算 
_ _future_ _. division  が 無効 な 場合 の  div ( a ,  b ) #
_ _future_ _. division  が 有効 な 場合 の  truediv ( a ,  b ) #
論理 積 
ビット 反転 
論理 和 
べ き 乗 
インデクス 指定 の 削除 
インデクス 指定 
左 シフト 
剰余 
乗算 
( 算術 ) 否 
( 論理 ) 否 
右 シフト 
シーケンス の 反復 
スライス 指定 の 代入 
スライス 指定 の 削除 
スライス 指定 
文字 列 書式 化 
減算 
真値 テスト 
順序 付け 
等価 性 
不等 性 
以下 の トークン は 演算 子 で す : 
比較 演算 子  と ! = は 、 同じ 演算 子 に つ い て 別 の 書 き 方 を し た もの で す 。 
書 き 方 と し て は  ! =  を 推奨 し ま す ;  は 時代 遅れ の 書 き 方 で す 。 
optparse  は 、 素直 で 慣習 に 則 っ た コマンドライン インタフェース を 備え た プログラム の 作成 を 援助 する 目的 で 設計 さ れ ま し た 。 
その 結果 、 Unix  で 慣習 的 に 使 わ れ て い る コマンドライン の 構文 や 機能 だけ を サポート する に 留ま っ て い ま す 。 
こう し た 慣習 に 詳し く な けれ ば 、 よく 知 っ て お く ため に も この 節 を 読 ん で お き ま しょ う 。 
6 . 21 . 4 . 3  コール バック 中 で 例外 を 送出 する 
6 . 21 . 4 . 5  コール バック の 例  2 :  オプション の 順番 を チェック する 
引数 を と ら ず 、 発見 し た オプション を 単に 記録 する だけ の コール バック オプション の 例 を 以下 に 示 し ま す : 
もちろん 、 store _true  アクション を 使 っ て も 実現 でき ま す 。 
6 . 21 . 4 . 4  コール バック の 例  1 :  ありふれ た コール バック 
6 . 21 . 4 . 6  コール バック の 例  3 :  オプション の 順番 を チェック する 
もう 少し 面白み の あ る 例 を 示 し ま す :  この 例 で は 、 " - a "  を 発見 し て 、 その 後 で " - b "  が コマンドライン 中 に 現れ た 場合 に は エラー に な り ま す 。 
6 . 21 . 4 . 7  コール バック の 例  4 :  任意 の 条件 を チェック する 
この コール バック  ( フラグ を 立て る が 、 " - b "  が 既に 指定 さ れ て い れ ば エラー に な る )  を 同様 の 複数 の オプション に 対 し て 再 利用 し た けれ ば 、 もう 少し 作業 する 必要 が あ り ま す : エラー メッセージ と セット さ れ る フラグ を 一般 化 し な けれ ば な り ま せ ん 。 
6 . 21 . 4 . 8  コール バック の 例 5 :  固定 引数 
もちろん 、 単に 定義 済み の オプション の 値 を 調べ る だけ に とどま ら ず 、 コール バック に は 任意 の 条件 を 入れ られ ま す 。 
例えば 、 満月 で な けれ ば 呼び出 し て は な ら な い オプション が あ る と し ま しょ う 。 
や ら な けれ ば な ら な い こと は これ だけ で す :  def check _moon (option , opt_str ,  value ,  parser ) : if  is _moon_full ( ) : raise  OptionValueError ( " % s option  invalid  when moon  is  full " % opt_str) setattr ( parser . values , option . dest ,  1 ) [ . . . ] parser . add _option ( " - - foo " , action = " callback " ,  callback = check _moon ,  dest = " foo " ) 
( is _moon_full ( )  の 定義 は 読者 へ の 課題 と し ま しょ う 。 
決ま っ た 数 の 引数 を と る よう な コール パック オプション を 定義 する なら 、 問題 は やや 興味 深 く な っ て き ま す 。 
引数 を と る よう コール バック に 指定 する の は 、 store  や append  オプション の 定義 に 似 て い ま す :type  を 定義 し て い れ ば 、 その オプション は 引数 を 受け取 っ た とき に 該当 する 型 に 変換 で き ね ば な り ま せ ん ; さらに  nargs  を 指定 すれ ば 、 オプション は  nargs  個 の 引数 を 受け取 り ま す 。 
標準 の  store  アクション を エミュレート する 例 を 以下 に 示 し ま す : 
optparse  は  3  個 の 引数 を 受け取 り 、 それ ら を 整数 に 変換 する ところ まで 面倒 を み て くれ ま す ;  ユーザ は 単に それ を 保存 する だけ で す 。 
( 他 の 処理 も でき ま す ; い う まで も な く 、 この 例 に は コール バック は 必要 あ り ま せ ん ) 
ある オプション に 可変 個 の 引数 を 持 た せ た い と 考え て い る なら 、 問題 は いささか 手強 く な っ て き ま す 。 
この 場合 、 optparse  で は 該当 する 組み込み の オプション 解析 機能 を 提供 し て い な い の で 、 自分 で コール バック を 書 か ね ば な り ま せ ん 。 
さらに 、 optparse  が 普段 処理 し て い る 、 伝統 的 な  Unix  コマンドライン 解析 に お け る 難題 を 自分 で 解決 せ ね ば な り ま せ ん 。 
とりわけ 、 コール バック 関数 で は 引数 が 裸 の " - " や " - "  の 場合 に お け る 慣習 的 な 処理 規則 : 
裸 の  " - "  ( 何 ら か の オプション の 引数 で な い 場合 ) :  コマンドライン 処理 を 停止 し 、 " - " を 無視 し ま す 。 
裸 の " - "  ( 何 ら か の オプション の 引数 で な い 場合 ) :  コマンドライン 処理 を 停止 し ま す が 、 " - "  は 残 し ま す  ( parser . largs  に 追加 し ま す ) 。  を 実装 せ ね ば な り ま せ ん 。 
オプション が 可変 個 の 引数 を と る よう に さ せ た い なら 、 いく つ か の 巧妙 で 厄介 な 問題 に 配慮 し な けれ ば な り ま せ ん 。 
どう い う 実装 を と る か は 、 アプリケーション で どの よう な トレード オフ を 考慮 する か に よ り ま す  ( この ため 、 optparse  で は 可変 個 の 引数 に 関 する 問題 を 直接 的 に 取り扱 わ な い の で す ) 。  と は い え 、 可変 個 の 引数 を も つ オプション に 対 する スタブ  ( stub 、 仲介 インタフェース )  を 以下 に 示 し て お き ま す : 
def vararg_ callback (option , opt_str ,  value ,  parser ) : assert value  is  Nonedone  =  0 value  = [ ] rargs=  parser . rargswhile rargs: arg = rargs [ 0 ] #"- - foo " ,  " - a " ,  " - fx " ,  " - - file =f "  と い っ た 引数 で 停止 。 
# " - 3 "  や  " - 3 . 0 "  で も 止ま る の で 、 オプション に 数値 が 入 る 場合 に は #  それ を 処理 せ ね ば な ら な い 。 
この 実装 固有 の 弱点 は 、 - c  以後 に 続 い て 負 の 数 を 表 す 引数 が あ っ た 場合 、 その 引数 は - c  の 引数 で は な く 次 の オプション と し て 解釈 さ れ る ( そして おそらく エラー を 引き起こ す ) と い う こと で す 。 
この 問題 の 修正 は 読者 の 練習 課題 と し て お き ま す 。 
6 . 21 . 3 . 5  オプション 解析 器 へ の 問い合わせ と 操作 
注意 が 足り な い と 、 衝突 する オプション を 定義 し やす く な り ま す : 
( とりわけ 、 OptionParser  から 標準 的 な オプション を 備え た 自前 の サブ クラス を 定義 し て しま っ た 場合 に は よく 起き ま す 。  ) ユーザ が オプション を 追加 する たび に 、 optparse  は 既存 の オプション と の 衝突 が な い か チェック し ま す 。 
何 ら か の 衝突 が 見付か る と 、 現在 設定 さ れ て い る 衝突 処理 メカニズム を 呼び出 し ま す 。 
衝突 処理 メカニズム は コンストラクタ 中 で 呼び出せ ま す : 
個別 に も 呼び出せ ま す : 
衝突 時 の 処理 と し て 、 以下 の メカニズム を 利用 でき ま す : 
error  ( デフォルト の 設定 ) 
オプション 間 の 衝突 を プログラム 上 の エラー と みな し 、 Option ConflictError  を 送出 し ま す 。 
オプション 間 の 衝突 を インテリジェント に 解決 し ま す  ( 下記 参照 ) 。 
一 例 と し て 、 衝突 を インテリジェント に 解決 する OptionParser を 定義 し 、 衝突 を 起こ す よう な オプション を 追加 し て み ま しょ う : 
この 時点 で 、 optparse  は すでに 追加 済 の オプション が オプション 文字 列  " - n "  を 使 っ て い る こと を 検出 し ま す 。 
conflict_handler  が  " resolve "  な の で 、 optparse は 既に 追加 済 の オプション リスト の 方 から " - n "  を 除去 し て 問題 を 解決 し ま す 。 
従 っ て 、 " - n "  の 除去 さ れ た オプション は " - dry - run "  だけ で しか 有効 に でき な く な り ま す 。 
ユーザ が ヘルプ 文字 列 を 要求 し た 場合 、 問題 解決 の 結果 を 反映 し た メッセージ が 出力 さ れ ま す : 
これ まで に 追加 し た オプション 文字 列 を 跡形 も な く 削り去 り 、 ユーザ が その オプション を コマンドライン から 起動 する 手段 を な く せ ま す 。 
この 場合 、 optparse  は オプション を 完全 に 除去 し て しま う の で 、 こう し た オプション は ヘルプ テキスト や その 他 の どこ に も 表示 さ れ な く な り ま す 。  例えば 、 現在 の  OptionParser  の 場合 、 以下 の 操作 : 
parser . add _option ( " --dry - run " ,  . . . , help= " newdry - runoption " )  を 行 っ た 時点 で 、 最初 の  - n\/-dry - run オプション は もはや アクセス でき な く な り ま す 。 
この ため 、 optparse  は オプション を 消去 し て しま い 、 ヘルプ テキスト : 
options : [ . . . ] - n ,-- noisy be noisy- -dry - run newdry - runoption  だけ が 残 り ま す 。 
上記 の 例 は 全て 、 何 ら か の コマンドライン オプション が 見つか っ た 時 に 何 ら か の 変数  ( 保存 先 :  destination )  に 値 を 設定 し て い ま し た 。 
で は 、 該当 する オプション が 見つか ら な かっ た 場合 に は 何 が 起き る の で しょ う か ？ 
デフォルト は 全く 与え て い な い ため 、 これ ら の 値 は 全て  None  に な り ま す 。 
optparse  に 対 し て 、 - q  が な い 限り  verbose  を  True  に 設定 さ せ た い なら 、 以下 の よう に し ま す : 
デフォルト の 値 は 特定 の オプション で は な く  保存 先  に 対 し て 適用 さ れ ま す 。  また 、 これ ら 二 つ の オプション は たまたま 同じ 保存 先 を 持 っ て い る に すぎ な い ため 、 上 の コード は 下 の コード と 全く 等価 に な り ま す : 
下 の よう な 場合 を 考え て み ま しょ う : 
前 の 例 と 同様 、 ある オプション の 値 の 保存 先 に 対 する デフォルト の 値 は 最後 に 指定 し た 値 に な り ま す 。 
コード を 読 み やす く する ため 、 デフォルト 値 を 設定 する とき に は 両方 の や り 方 を 混ぜ る の で は な く 、 片方 だけ を 使 う よう に し ま しょ う 。 
6 . 21 . 4 . 2  コール バック 関数 は どの よう に 呼び出 さ れ る か 
callback オプション を 最も 簡単 に 定義 する に は 、 parser . add _option ( )  メソッド を 使 い ま す 。 
action  の 他 に 指定 し な けれ ば な ら な い 属性 は  callback 、 すなわち コール バック する 関数 自体 で す : 
callback  は 関数  ( また は 呼び出し 可能 オブジェクト ) な の で 、 callback オプション を 定義 する 時 に は あらかじめ  my _ callback ( )  を 定義 し て お か ね ば な り ま せ ん 。  この 単純 な ケース で は 、 optparse  は - c  が 何 ら か の 引数 を と る か どう か 判別 でき ず 、 通常 は - c  が 引数 を 伴 わ な い こと を 意味 し ま す --  知 り た い こと は ただ 単に  - c  が コマンドライン 上 に 現れ た どう か だけ で す 。 
と は い え 、 場合 に よ っ て は 、 自分 の コール バック 関数 に 任意 の 個数 の コマンドライン 引数 を 消費 さ せ た い こと も あ る で しょ う 。 
これ が コール バック 関数 を トリッキー な もの に し て い ま す ;  これ に つ い て は この 節 の 後 の 方 で 説明 し ま す 。 
optparse  は 常 に 四 つ の 引数 を コール バック に 渡 し 、 その 他 に は callback_args  および  callback _ kwargs  で 指定 し た 追加 引数 しか 渡 し ま せ ん 。 
従 っ て 、 最小 の コール バック 関数 シグネチャ は : 
他 で 使 わ れ て い る の と 同じ 意味 で す :  store  や  append  アクション の 時 と 同じく 、 この 属性 は optparse に 引数 を 一 つ 消費 し て 、 type  に 指定 し た 型 に 変換 さ せ ま す 。 
optparse  は 変換 後 の 値 を どこ か に 保存 する 代わり に コール バック 関数 に 渡 し ま す 。 
これ も 他 で 使 わ れ て い る の と 同じ 意味 で す :  この オプション が 指定 さ れ て い て 、 かつ  nargs  1  で あ る 場合 、  optparse は nargs  個 の 引数 を 消費 し ま す 。  この とき 各 引数 は type  型 に 変換 で き ね ば な り ま せ ん 。 
変換 後 の 値 は タプル と し て コール バック に 渡 さ れ ま す 。 
各々 の Option  インスタンス 、 は - f  や -- file と い っ た 同義 の コマンドライン オプション から な る 集合 を 表現 し て い ま す 。 
一 つ の Option  に は 任意 の 数 の オプション を 短 い 形式 で も 長 い 形式 で も 指定 でき ま す 。  ただし 、 少な く とも 一 つ は 指定 せ ね ば な り ま せ ん 。 
正し い 方法 で Option  インスタンス を 生成 する に は 、 以降 の 例 で も 示 す よう に make_option ( )  を 使 い ま す 。 
と は い え 、 make_option や parser . add _option ( )  も 同じ 呼び出 し シグネチャ を 備え て い ま す : 
短 い 形式 の オプション 文字 列 を 一 つ だけ 持 つ よう な オプション を 生成 する に は : 
make_option ( " - f " ,  attr = value ,  . . . )  の よう に し ま す 。 
また 、 長 い 形式 の オプション 文字 列 を 一 つ だけ 持 つ よう な オプション の 定義 は : 
make_option ( " - - foo " ,  attr = value ,  . . . )  の よう に な り ま す 。 
attr = value  キー ワード 引数 で は 、 オプション の 属性 、 すなわち  Option  オブジェクト の 属性 を 定義 し て い ま す 。 
オプション の 属性 の うち で もっとも 重要 な の は action  で す 。  action  は 他 の どの 属性 と 関連 が あ る か 、 そして どの 属性 が 必要 か に 大き く 作用 し ま す 。 
関係 の な い オプション 属性 を 指定 し たり 、 必要 な 属性 を 指定 し 忘れ たり する と 、 optparse  は 誤り を 解説 し た OptionError 例外 を 送出 し ま す 。  コマンドライン 上 に あ る オプション が 見つか っ た とき の optparse  の 振舞い を 決定 し て い る の は  アクション ( action )  で す 。 
optparse  で ハード コード さ れ て い る アクション に は 以下 の よう な もの が あ り ま す : 
オプション の 引数 を 保存 し ま す  [ デフォルト の 動作 で す ] 
定数 を 保存 し ま す 
真  ( True )  を 保存 し ま す  store _false 
偽  ( False )  を 保存 し ま す 
オプション の 引数 を リスト に 追加 し ま す 
カウンタ を 一 つ 増や し ま す 
指定 さ れ た 関数 を 呼び出 し ま す 
全て の オプション と その ドキュメント の 入 っ た 使用 法 メッセージ を 出力 し ま す 。 
( アクション を 指定 し な い 場合 、 デフォルト は  store  に な り ま す 。 
を 呼び出 し た 場合 、 optparse  は まず  options  オブジェクト を 生成 し ま す : 
パーザ 中 で 以下 の よう な オプション 
が 定義 さ れ て い て 、 パーズ し た コマンドライン に 以下 の いずれ か が 入 っ て い た 場合 : 
optparse  は - f  か - -file  オプション を 見つけ て 、 
と 同等 の 処理 を 行 い ま す 。 type  および  dest  オプション 属性 は  action  と 同じ くらい 重要 で す が 、 全て の  オプション で 意味 を な す の は action  だけ な の で す 。 
6 . 21 . 2 . 7  バージョン 番号 の 出力 
optparse  に は ヘルプ と 使 い 方 の 説明  ( u sage text )  を 生成 する 機能 が あ り 、 ユーザ に 優し い コマンドライン インタフェース を 作成 する 上 で 役立 ち ま す 。 
や ら な けれ ば な ら な い の は 、 各 オプション に 対 する help  の 値 と 、 必要 なら プログラム 全体 の 使用 法 を 説明 する 短 い メッセージ を 与え る こと だけ で す 。 
ユーザ フレンドリ な  ( ドキュメント 付き の )  オプション を 追加 し た OptionParser  を 以下 に 示 し ま す : 
optparse  が コマンドライン 上 で " - h "  や " - help "  を 見つけ た 場合 や ユーザ が parser . print _help ( )  を 呼び出 し た 場合 、 この OptionParser  は 以下 の よう な メッセージ を 標準 出力 に 出力 し ま す : 
スクリプト 自体 の 利用 法 を 表 す メッセージ を 定義 し ま す : 
optparse  は " % prog "  を 現在 の プログラム 名 、 すなわち os . path . basename ( sys . argv [ 0 ] )  と 置き換え ま す 。 
全て の オプション に ヘルプ 文字 列 を 定義 し ま す 。  行 の 折り返し は 気 に し な く て かま い ま せ ん --optparse  は 行 の 折り返し に 気 を 配 り 、 見栄え の よ い ヘルプ 出力 を 生成 し ま す 。 
オプション が 値 を と る と い う こと は 自動 的 に 生成 さ れ る ヘルプ メッセージ の 中 で 分か り ま す 。  例えば 、 `` mode ' 'option  の 場合 に は : 
の よう に な り ま す 。  ここ で  `` MODE ' ' は メタ 変数  ( meta- variable )  と 呼 ば れ ま す :  メタ 変数 は 、 ユーザ が  - m\/-- mode  に 対 し て 指定 する はず の 引数 を 表 し ま す 。 
デフォルト で は 、 optparse  は 保存 先 の 変数 名 を 大 文字 だけ に し た もの を メタ 変数 に 使 い ま す 。 
これ は 時 と し て 期待 通り の 結果 に な り ま せ ん - -  例えば 、 上 の 例 の - - filename  オプション で は 明示 的 に  metavar = " FILE "  を 設定 し て お り 、 その 結果 自動 生成 さ れ た オプション 説明 テキスト は : 
デフォルト 値 を 持 つ オプション の ヘルプ 文字 列 に は % default  を 入れ られ ま す --optparse  は % default  を デフォルト 値 の str ( )  で 置き換え ま す 。 
該当 する オプション に デフォルト 値 が な い 場合 ( あるいは デフォルト 値 が  None  で あ る 場合 )  % default  の 展開 結果 は  none  に な り ま す 。 
フラグ オプション - - 特定 の オプション に 対 し て 真 また は 偽 の 値 の 値 を 設定 する オプション - - は よく 使 わ れ ま す 。 optparse  で は 、 二 つ の アクション 、 store _true および  store _false  を サポート し て い ま す 。 
例えば 、 verbose  と い う フラグ を " - v "  で 有効 に し て 、 " - q "  で 無効 に し た い と し ま す : 
ここ で は 二 つ の オプション に 同じ 保存 先 を 指定 し て い ま す が 、 全く 問題 あ り ま せ ん ( 下記 の よう に 、 デフォルト 値 の 設定 を 少し 注意 深 く 行 わ ね ば な ら な い だけ で す ) 
" - v "  を コマンドライン 上 に 見つけ る と 、 optparse  は options . verbose  を  True  に 設定 し ま す 。 
" - q " を 見つけ れ ば 、 options . verbose  は  False  に セット さ れ ま す 。 
6 . 21 . 4 . 1  callback オプション の 定義 
コール バック は 全て 以下 の 形式 で 呼び出 さ れ ま す : 
ここ で 、 
コール バック を 呼び出 し て い る  Option  の インスタンス で す 。 
は 、 コール バック 呼び出し の きっかけ と な っ た コマンドライン 上 の オプション 文字 列 で す 。 
( 長 い 形式 の オプション に 対 する 省略 形 が 使 わ れ て い る 場合 、 opt  は 完全 な 、 正式 な 形 の オプション 文字 列 と な り ま す - -  例えば 、 ユーザ が - - foobar  の 短縮 形 と し て " - foo "  を コマンドライン に 入力 し た 時 に は 、 opt_str  は  " - foobar "  と な り ま す 。 ) 
オプション の 引数 で 、 コマンドライン 上 に 見つか っ た もの で す 。 optparse  は 、 type  が 設定 さ れ て い る 場合 、 単一 の 引数 しか と り ま せ ん ; value  の 型 は オプション の 型 と し て 指定 さ れ た 型 に な り ま す 。 
この オプション に 対 する type  が None  で あ る ( 引数 なし の )  場合 、 value  は  None  に な り ま す 。 
" nargs "  1  で あ れ ば 、 value  は は 適切 な 型 を も つ 値 の タプル に な り ま す 。 
現在 の オプション 解析 の 全て を 駆動 し て い る  OptionParser  インスタンス で す 。  この 変数 が 有用 な の は 、 この 値 を 介 し て インスタンス 属性 と し て いく つ か の 興味 深 い データ に アクセス でき る から で す : 
現在 放置 さ れ て い る 引数 、 すなわち 、 すでに 消費 さ れ た もの の 、 オプション で も オプション 引数 で も な い 引数 から な る リスト で す 。 
parser . largs  は 自由 に 変更 でき 、 たとえば 引数 を 追加 し たり でき ま す  ( この リスト は  args 、 すなわち parse_args ( )  の 二 つ 目 の 戻 り 値 に な り ま す ) 
現在 残 っ て い る 引数 、 すなわち 、  opt_str  および value )  が あ れ ば 除 き 、 それ 以外 の 引数 が 残 っ て い る リスト で す 。 
parser . rargs  は 自由 に 変更 でき 、 例えば さらに 引数 を 消費 し たり でき ま す 。 
[ parser . values ] オプション の 値 が デフォルト で 保存 さ れ る オブジェクト  (optparse . OptionValues の インスタンス  で す 。 
この 値 を 使 う と 、 コール バック 関数 が オプション の 値 を 記憶 する ため に 、 他 の optparse  と 同じ 機構 を 使え る よう に する ため 、 グローバル 変数 や 閉包 ( closure )  を 台無し に し な い の で 便利 で す 。 
コマンドライン 上 に すでに 現れ て い る オプション の 値 に も アクセス でき ま す 。 
callback_args  オプション 属性 で 与え られ た 任意 の 固定 引数 から な る タプル で す 。 
callback_args  オプション 属性 で 与え られ た 任意 の キー ワード 引数 から な る タプル で す 。 
6 . 21 . 2 . 9  全て を つなぎ合わせ る 
optparse  を 使 う 場合 に 気 を 付け ね ば な ら な い エラー に は 、 大き く 分け て プログラマ 側 の エラー と ユーザ 側 の エラー と い う 二 つ の 種類 が あ り ま す 。 
プログラマ 側 の エラー の 多く は 、 例えば 不正 な オプション 文字 列 や 定義 さ れ て い な い オプション 属性 の 指定 、 あるいは オプション 属性 を 指定 し 忘れ る と い っ た 、 誤 っ た parse . add _option ( )  呼び出し に よ る もの で す 。 
と い う の も 、 ユーザ の 操作 エラー と い う もの は コード の 安定 性 に 関係 な く 起こ る から で す 。 
optparse  は 、 誤 っ た オプション 引数 の 指定  ( 整数 を 引数 に と る オプション - n  に 対 し て  " - n 4 x "  と 指定 し て しま う など )  や 、 引数 を 指定 し 忘れ た 場合  (-n  が 何 ら か の 引数 を と る オプション で あ る の に 、 " - n "  が 引数 の 末尾 に 来 て い る 場合 )  と い っ た 、 ユーザ に よ る エラー を 自動 的 に 検出 し ま す 。 
また 、 アプリケーション 側 で 定義 さ れ た エラー 条件 が 起き た 場合 、 parser . error ( )  を 呼び出 し て エラー を 通知 でき ま す : 
値 を 全く 指定 し な い 場合 に は 、 以下 の よう に な り ま す : 
optparse  は 、 常 に エラー を 引き起こ し た オプション に つ い て 説明 の 入 っ た エラー メッセージ を 生成 する よう 気 を 配 り ま す ;  従 っ て 、 parser . error ( )  を アプリケーション コード から 呼び出 す 場合 に も 、 同じ よう な メッセージ に な る よう に し て くださ い 。  optparse  の デフォルト の エラー 処理 動作 が 気 に 入 ら な い の なら 、 OptionParser  を サブ クラス 化 し て 、 exit ( )  かつ \/ また は error ( )  を オーバライド する 必要 が あ り ま す 。 
callback  オプション の 定義 は 二 つ の ステップ から な り ま す : 
callback  アクション を 使 っ て オプション 自体 を 定義 する 。 
6 . 21 . 2 . 3  ブール 値  ( フラグ )  オプション の 処理 
この 他 に も 、 optparse  は 以下 の よう な アクション を サポート し て い ま す : 
定数値 を 保存 し ま す 。 
オプション の 引数 を 指定 の リスト に 追加 し ま す 。 
指定 の カウンタ を  1  増や し ま す 。 
指定 の 関数 を 呼び出 し ま す 。 
これ ら の アクション に つ い て は 、 6 . 21 . 3  節 の 「 リファレンス ガイド 」 および 6 . 21 . 4  節 の 「 オプション ・ コール バック 」 で 触れ ま す 。 
パーザ に オプション を 加え て い く に は いく つ か 方法 が あ り ま す 。 
推奨 する の は 6 . 21 . 2  節 の チュートリアル で 示 し た よう な OptionParser . add _option ( )  を 使 う 方法 で す 。 
add _option ( )  は 以下 の 二 つ の うち いずれ か の 方法 で 呼び出せ ま す : 
make_option ( ) に  ( すなわち Option  の コンストラクタ に ) 固定 引数 と キー ワード 引数 の 組み合わせ を 渡 し て 、 Option  インスタンス を 生成 さ せ ま す 。 
( make_option ( )  など が 返 す ) Option インスタンス を 渡 し ま す 。  もう 一 つ の 方法 は 、 あらかじめ 作成 し て お い た Option  インスタンス から な る リスト を 、 以下 の よう に し て  OptionParser  の コンストラクタ に 渡 す と い う もの で す : 
( make_option ( )  は  Option  インスタンス を 生成 する ファクトリ 関数 で す ;  現在 の ところ 、 個 の 関数 は Option  の コンストラクタ の 別名 に すぎ ま せ ん 。 
optparse の 将来 の バージョン で は 、 Option  を 複数 の クラス に 分割 し 、 make_option ( )  は 適切 な クラス を 選 ん で イン スタンス を 生成 する よう に な る 予定 で す 。 
従 っ て 、 Option  を 直接 インスタンス 化 し な い で くださ い 。  ) 
6 . 21 . 2 . 8  optparse  の エラー 処理 法 
optparse  で は 、 使用 法 メッセージ と 同様 に プログラム の バージョン 文字 列 を 出力 でき ま す 。 
OptionParser  の version  引数 に 文字 列 を 渡 し ま す : 
" % prog "  は u sage  と 同じ よう な 展開 を 受け る の で 注意 し て くださ い 。 
その 他 に も version  に は 何 で も 好き な 内容 を 入れ られ ま す 。 
$\/ usr\/ bin\/foo -- versionfoo  1 . 0  の よう に な り ま す 。 
optparse  を 使 っ た スクリプト は 、 通常 以下 の よう に な り ま す : 
自前 の オプション パーザ を つつきまわ し て 、 何 が 起こ る か を 調べ る と 便利 な こと が あ り ま す 。 
OptionParser  で は 便利 な 二 つ の メソッド を 提供 し て い ま す : 
OptionParser  に ( " - q "  や  " - verbose "  の よう な ) オプション  opt_str  が あ る 場合 、 真 を 返 し ま す 。 
オプション 文字 列 opt_str に 対 する Option  インスタンス を 返 し ま す 。 
該当 する オプション が な けれ ば  None  を 返 し ま す 。  remove_option (opt_str ) 
OptionParser  に opt_str  に 対応 する オプション が あ る 場合 、 その オプション を 削除 し ま す 。 
該当 する オプション に 他 の オプション 文字 列 が 指定 さ れ て い た 場合 、 それ ら の オプション 文字 列 は 全て 無効 に な り ま す 。 opt_str  が この  OptionParser  オブジェクト の どの オプション に も 属 さ な い 場合 、 ValueError  を 送出 し ま す 。 
オプション 自体 か 、 あるいは その 引数 に 問題 が あ る ばあい 、 コール バック 関数 は OptionValueError  を 送出 せ ね ば な り ま せ ん 。  optparse  は この 例外 を とらえ て プログラム を 終了 さ せ 、 ユーザ が 指定 し て お い た エラー メッセージ を 標準 エラー 出力 に 出力 し ま す 。 
エラー メッセージ は 明確 、 簡潔 かつ 正確 で 、 どの オプション に 誤り が あ る か を 示 さ ね ば な り ま せ ん 。 
さも な けれ ば 、 ユーザ は 自分 の 操作 の どこ に 問題 が あ る か を 解決 する の に 苦労 する こと に な り ま す 。 
6 . 21 . 3 . 1  パーザ へ の オプション 追加 
様々 な オプション ・ アクション に は どれ も 互い に 少し づつ 異な っ た 条件 と 作用 が あ り ま す 。 
ほとんど の アクション に 関連 する オプション 属性 が いく つ か あ り 、 値 を 指定 し て optparse の 挙動 を 操作 でき ま す ;  いく つ か の アクション に は 必須 の 属性 が あ り 、 必ず 値 を 指定 せ ね ば な り ま せ ん 。 
store  [ re levant :type ,  dest , nargs ,  choices ] オプション の 後 に は 必ず 引数 が 続 き ま す 。  引数 は type  に 従 っ た 値 に 変換 さ れ て dest  に 保存 さ れ ま す 。 
nargs  1  の 場合 、 複数 の 引数 を コマンドライン から 取り出 し ま す ;  引数 は 全て type  に 従 っ て 変換 さ れ 、 dest  に タプル と し て 保存 さ れ ま す 。 
と する と 、 以下 の よう な コマンドライン : 
を 解析 し た 場合 、 optparse  は 
の よう に 設定 を 行 い ま す 。 
store_ const  [ required : const ; re levant :  dest ] 値 cost  を dest  に 保存 し ま す 。 
" - noisy "  が 見つか る と 、  optparse  は 
append  [ re levant :type ,  dest , nargs ,  choices ] この オプション の 後ろ に は 必ず 引数 が 続 き ま す 。  引数 は dest  の リスト に 追加 さ れ ま す 。 
dest  の デフォルト 値 を 指定 し な かっ た 場合 、 optparse  が この オプション を 最初 に みつけ た 時点 で 空 の リスト を 自動 的 に 生成 し ま す 。 
nargs  1  の 場合 、 複数 の 引数 を コマンドライン から 取り出 し 、 長 さ  nargs  の タプル を 生成 し て  dest に 追加 し ま す 。 type  および  dest  の デフォルト 値 は  store  アクション と 同じ で す 。 
例 :  parser . add _option ( " - t " ,  " - - tracks " ,  action = " append " ,type =" int " ) 
" - t 3 "  が コマンドライン 上 で 見つか る と 、 optparse  は :
と 同等 の 処理 を 行 い ま す 。 
その 後 、 " - tracks = 4 "  が 見つか る と : 
options . tracks . append ( int ( " 4 " ) )  を 実行 し ま す 。 
count  [ re levant :  dest ]  dest  に 保存 さ れ て い る 整数 値 を インクリメント し ま す 。 
dest  は  ( デフォルト の 値 を 指定 し な い 限り )  最初 に インクリメント を 行 う 前 に ゼロ に 設定 さ れ ま す 。 
例 :  parser . add _option ( " - v " ,  action = " count " ,  dest = " verbosity " ) 
コマンドライン 上 で 最初 に  " - v "  が 見つか る と 、 optparse  は :
と 同等 の 処理 を 行 い ま す 。  以後 、 " - v "  が 見つか る たび に 、 
この 関数 の シグネチャ は 
func (option: Option , opt :string , value  :any , parser: OptionParser , * args,** kwargs)  の よう に な っ て い ま す 。 
詳細 は 、  節 の 「 オプション ・ コール バック 」 を 参照 し て くださ い 。 
現在 の オプション パーザ 内 の 全て の オプション に 対 する 完全 な ヘルプ メッセージ を 出力 し ま す 。 
ヘルプ メッセージ は  OptionParser  の コンストラクタ に 渡 し た u sage  文字 列 と 、 各 オプション に 渡 し た  help  文字 列 から 生成 し ま す 。  オプション に  help  文字 列 が 指定 さ れ て い な く て も 、 オプション は ヘルプ メッセージ 中 に 列挙 さ れ ま す 。 
オプション を 完全 に 表示 さ せ な い よう に する に は 、 特殊 な 値  optparse . SUPPRESS _ HELP  を 使 っ て くださ い 。 
optparse  は 全て の OptionParser  に 自動 的 に help  オプション を 追加 する の で 、 通常 自分 で 生成 する 必要 は あ り ま せ ん 。 
例 :  from optparse import OptionParser ,  SUPPRESS _ HELP parser =  OptionParser ( ) parser . add _option ( " - h " ,  " - -help " ,  action = " help " ) , parser . add _option ( " - v " ,  action = " store _true " ,  dest = " verbose " , help = " Be  moderately verbose " ) parser . add _option ( " - - file " ,  dest = " filename " , help= " Inputfile to  read  data from " ) , parser . add _option ( " -- secret " , help= SUPPRESS _ HELP ) 
optparse  が コマンドライン 上 に  " - h "  また は  " - help "  を 見つけ る と 、 以下 の よう な ヘルプ メッセージ を 標準 出力 に 出力 し ま す  ( sys . argv [ 0 ]  は " foo. py " だ と し ま す ) : 
ヘルプ メッセージ の 出力 後 、 optparse  は sys . exit ( 0 ) で プロセス を 終了 し ま す 。 
OptionParser  に 指定 さ れ て い る バージョン 番号 を 標準 出力 に 出力 し て 終了 し ま す 。 
バージョン 番号 は 、 実際 に は  OptionParser の print_ version ( )  メソッド で 書式 化 さ れ て から 出力 さ れ ま す 。 
通常 、  OptionParser  の コンストラクタ に  version が 指定 さ れ た とき のみ 関係 の あ る アクション で す 。 
help  オプション と 同様 、 optparse  は この オプション を 必要 に 応 じ て 自動 的 に 追加 する の で 、 version  オプション を 作成 する こと は ほとんど な い で しょ う 。 
optparse  に は 、 string  ( 文字 列 ) 、 int  ( 整数 ) 、  long  ( 長 整数 ) 、  choice  ( 選択 肢 ) 、 float  ( 浮動 小数 点数 )  および  complex  ( 複素数 )  の  6  種類 の オプション 型 が あ り ま す 。 
新た な オプション の 型 を 追加 し た けれ ば 、  節 、 「 optparse  の 拡張 」 を 参照 し て くださ い 。 
文字 列 オプション の 引数 は チェック や 変換 を 一切 受け ま せ ん :  コマンドライン 上 の テキスト は 保存 先 に その まま 保存 さ れ ま す  ( また は コール バック に 渡 さ れ ま す ) 。  整数 引数 は  int ( )  に 渡 さ れ 、 Python  の 整数 型 に 変換 さ れ ま す 。 
int ( )  が 失敗 し た 場合  optparse  の 処理 も 失敗 に 終わ り ま す が 、 より 役 に 立 つ エラー メッセージ を 出力 し ま す 。 
( 内部 的 に は 、 optparse  は OptionValueError  を 送出 し ま す ;  OptionParser  は この 例外 を より 上 の レベル で 捕捉 し 、 メッセージ と とも に プログラム を 停止 さ せ ま す 。  ) 同様 に 、 浮動 小数 点数 引数 は  float ( )  、 長 整数 引数 は  long ( )  、 複素 数 引数 は  complex ( ) に 渡 さ れ 変換 さ れ ま す 。 
それ 以外 の 点 で は 整数 引数 の 場合 と 同様 の 扱い で す 。 
choice  オプション は  string  オプション の サブ タイプ で す 。 
choice  オプション の 属性  ( 文字 列 から な る シーケンス )  に は 、 利用 でき る オプション 引数 の セット を 指定 し ま す 。 
optparse . option . check _ choice ( ) は ユーザ の 指定 し た オプション 引数 と マスタ リスト を 比較 し て 、 無効 な 文字 列 が 指定 さ れ た 場合 に は OptionValueError  を 送出 し ま す 。 
6 . 21 . 2 . 3  ブール 値  ( フラグ )  オプション の 処理  6 . 21 . 2 . 2  store  アクション 
もっとも 良く 使 わ れ る アクション は  store  で す 。 
この アクション は 次 の 引数  ( あるいは 現在 の 引数 の 残り の 部分 )  を 取り出 し 、 正し い 型 の 値 か 確かめ 、 指定 し た 保存 先 に 保存 する よう optparse  に 指示 し ま す 。 
例えば :  parser . add _option ( " - f " ,  " - - file " , action = " store " ,type =" string " ,  dest = " filename " ) 
の よう に 指定 し て お き 、 偽 の コマンドライン を 作成 し て  optparse  に 解析 さ せ て み ま しょ う : 
オプション 文字 列  " - f "  を 見つけ る と 、 optparse  は 次 の 引数 で あ る  " foo . txt "  を 消費 し 、 その 値 を  options . filename  に 保存 し ま す 。 
従 っ て 、 この parse_args ( ) 呼び出 し 後 に は options . filename  は " foo . txt " に な っ て い ま す 。 
オプション の 型 と し て 、 optparse  は 他 に も int  や float を サポート し て い ま す 。  整数 の 引数 を 想定 し た オプション の 例 を 示 し ま す : 
この オプション に は 長 い 形式 の オプション 文字 列 が な い ため 、 設定 に 問題 が な い と い う こと に 注意 し て くださ い 。 
また 、 デフォルト の アクション は  store  な の で 、 ここ で は  action  を 明示 的 に 指定 し て い ま せ ん 。  架空 の コマンドライン を もう 一 つ 解析 し て み ま しょ う 。 
今度 は 、 オプション 引数 を オプション の 右側 に ぴったり くっつけ て 一緒 くた に し ま す : -n 42  ( 一 つ の 引数 のみ )  は - n  42  ( 二 つ の 引数 から な る )  と 等価 に な る の で 、 
は  " 42 "  を 出力 し ま す 。  型 を 指定 し な い 場合 、  optparse  は 引数 を string  で あ る と 仮定 し ま す 。 
デフォルト の アクション が  store  で あ る こと も 併せ て 考え る と 、 最初 の 例 は もっと 短 く な り ま す : 
保存 先  ( destination )  を 指定 し な い 場合 、  optparse  は デフォルト 値 と し て オプション 文字 列 から 気 の き い た 名前 を 設定 し ま す :  最初 に 指定 し た 長 い 形式 の オプション 文字 列 が " - foo- bar "  で あ れ ば 、 デフォルト の 保存 先 は  foo_bar に な り ま す 。 
長 い 形式 の オプション 文字 列 が な けれ ば 、 optparse  は 最初 に 指定 し た 短 い 形式 の オプション 文字 列 を 探 し ま す :  例えば 、 " - f "  に 対 する 保存 先 は f  に な り ま す 。 
optparse  で は 、 long  や complex  と い っ た 組み込 み 型 も 取り入れ て い ま す 。 
型 の 追加 は 
節 の 「 optparse  の 拡張 」 で 触れ て い ま す 。 
6 . 21 . 1 . 2  オプション と は 何 か 
引数  ( argument ) 
コマンドライン で ユーザ が 入力 する テキスト の 塊 で 、 シェル が execl ( )  や  execv ( )  に 引き渡 す もの で す 。 
Python で は 、 引数 は  sys . argv [ 1 : ]  の 要素 と な り ま す 。 ( sys . argv [ 0 ] は 実行 し よう と し て い る プログラム の 名前 で す 。 
引数 解析 に 関 し て は 、 この 要素 は あまり 重要 で は あ り ま せ ん 。 ) Unix  シェル で は 、  「 語  ( word ) 」  と い う 用語 も 使 い ま す 。 
場合 に よ っ て は  sys . argv [ 1 : ]  以外 の 引数 リスト を 代入 する 方 が 望まし い こと が あ る の で 、 「 引数 」  は 「 sys . argv [ 1 : ]  また は sys . argv [ 1 : ]  の 代替 と し て 提供 さ れ る 別 の リスト の 要素 」 と 読 む べ き で しょ う 。 
オプション  (option ) 
追加 的 な 情報 を 与え る ため の 引数 で 、 プログラム の 実行 に 対 する 教示 や カスタマイズ を 行 い ま す 。 
また 、 伝統 的 な  Unix  に お け る 書法 で は 、 複数 の オプション を 一 つ の 引数 に まとめ られ ま す 。 
例えば " - x  - F "  は " - xF "  と 等価 で す 。 
GNU  プロジェクト で は  " - "  の 後ろ に ハイフン で 区切り の 語 を 指定 する 方法 、 例えば  " - file "  や  " -dry - run "  も 提供 し て い ま す 。 
optparse  は 、 これ ら 二 種類 の オプション 書法 だけ を サポート し て い ま す 。 
他 に 見 られ る 他 の オプション 書法 に は 以下 の よう な もの が あ り ま す : 
ハイフン の 後ろ に 数 個 の 文字 が 続 く もの で 、 例えば  " - pf"  ( この オプション は 複数 の オプション を 一 つ に まとめ た もの と は 違 い ま す ) 
ハイフン の 後ろ に 語 が 続 く もの で 、 例えば  " - file "  ( これ は 技術 的 に は 上 の 書式 と 同じ で す が 、 通常 同じ プログラム 上 で 一緒 に 使 う こと は あ り ま せ ん ) 
プラス 記号 の 後ろ に 一 文字 、 数 個 の 文字 、 また は 語 を 続け た もの で 、 例えば  " + f "  、  " + rgb " 
スラッシュ 記号 の 後ろ に 一 文字 、 数 個 の 文字 、 また は 語 を 続け た もの で 、 例えば  " \/ f "  、 " \/file " 
上記 の オプション 書法 は  optparse  で は サポート し て お ら ず 、 今後 も サポート する 予定 は あ り ま せ ん 。 
これ は 故意 に よ る もの で す : 最初 の 三 つ は どの 環境 の 標準 で も な く 、 最後 の 一 つ は  VMS  や  MS - DOS , そして  Windows  を 対象 に し て い る とき に しか 意味 を な さ な い から で す 。 
オプション 引数  (optionargument ) 
ある オプション の 後ろ に 続 く 引数 で 、 その オプション に 密接 な 関連 を も ち 、 オプション と 同時 に 引数 リスト から 取り出 さ れ ま す 。 optparse  で は 、 オプション 引数 は 以下 の よう に 別々 の 引数 に でき ま す : 
また 、 一 つ の 引数 中 に も 入れ られ ま す : 
多く の 人々 が  「 オプション の オプション 引数 」 機能 を 欲 し て い ま す 。 
これ は 、 ある オプション が 引数 が 指定 さ れ て い る 場合 に は 引数 を と り 、 そう で な い 場合 に は 引数 を も た な い よう に する と い う 機能 で す 。  この 機能 は 引数 解析 を あいまい に する ため 、 議論 の 的 と な っ て い ま す : 例えば 、 もし  - a  が オプション 引数 を と り 、 - b  がまったく 別 の オプション だ と し た ら 、 - ab  を どう や っ て 解析 すれ ば い い の で しょ う か ？ 
こう し た 曖昧 さ が 存在 する ため 、 optparse  は 今 の ところ この 機能 を サポート し て い ま せ ん 。 
固定 引数  ( positional argument ) 
他 の オプション が 解析 さ れ る 、 すなわち 他 の オプション と その 引数 が 解析 さ れ て 引数 リスト から 除去 さ れ た 後 に 引数 リスト に 置 か れ て い る もの で す 。 
必須 の オプション  ( required option ) 
コマンドライン で 与え な けれ ば な ら な い オプション で す ;  「 必須 な オプション ( required option ) 」 と い う 語 は 、 英語 で は 矛盾 し た 言葉 で す 。 optparse で は 必須 オプション の 実装 を 妨げ て は い ま せ ん が 、 とり たて て 実装 上 役立 つ こと も し て い ま せ ん 。 
optparse  で 必須 オプション を 実装 する 方法 は 、 optparse ソース コード 配布 物 中 の examples\/required _ 1 . py  や examples\/required _ 2 . py  を 参照 し て くださ い 。 
例えば 、 下記 の よう な 架空 の コマンドライン を 考え て み ま しょ う : 
" - v "  と " - report "  は どちら も オプション で す 。 
- - report  オプション が 引数 を と る と すれ ば 、 " \/tmp\/report . txt "  は オプション の 引数 で す 。 
" foo " と " bar "  は 固定 引数 に な り ま す 。 
6 . 21 . 1 . 3  固定 引数 と は 何 か 
optparse  は とても 柔軟 で 強力 で あ り ながら 、 ほとんど の 場合 に は 簡単 に 利用 でき ま す 。 
これ で オプション を 定義 でき る よう に な り ま し た 。 
基本 的 な 構文 は 以下 の 通り で す : 
オプション を 全て 定義 し た ら 、 optparse  に コマンドライン を 解析 する よう に 指示 し ま す : 
)  parse_args ( )  は 二 つ の 値 を 返 し ま す : 
全て の オプション に 対 する 値 の 入 っ た オブジェクト options --  例えば 、 " - file "  が 単一 の 文字 列 引数 を と る 場合 、 options . file  は ユーザ が 指定 し た ファイル 名 に な り ま す 。 
オプション を 指定 し な かっ た 場合 に は None  に な り ま す 。 
オプション の 解析 後 に 残 っ た 固定 引数 から な る リスト args 。 
この チュートリアル の 節 で は 、 最も 重要 な 四 つ の オプション 属性 : action ,type ,  dest  ( destination ) ,  および help  に つ い て しか 触れ ま せ ん 。 
この うち 最も 重要 な の は action で す 。 
アクション ( action ) は optparse  が  コマンドライン 上 に あ る オプション を 見つけ た とき に 何 を す べ き か を 指示 し ま す 。 
optparse  に は 押し着せ の アクション の セット が ハード コード さ れ て い ま す 。  新た な アクション の 追加 は 上級 者 向け の 話題 で あ り 、 
オプション は プログラム の 実行 を 調整 し たり 、 カスタマイズ し たり する ため の 補助 的 な 情報 を 与え る ため に 使 い ま す 。 
もっと はっきり い う と 、 オプション は あくまで も オプション ( 省略 可能 ) で あ る と い う こと で す 。 
本来 、 プログラム は ともかく も オプション なし で うま く 実行 でき て しか る べ き で す 。 
( Unix  や GNU  ツール セット の プログラム を ランダム に ピックアップ し て み て くださ い 。 
オプション を 全く 指定 し な く て も ちゃんと 動 く で しょ う ？ 
例外 は find , tar , dd  くらい で す - - これ ら の 例外 は 、 オプション 文法 が 標準 的 で な く 、 インタフェース が 混乱 を 招 く と 酷評 さ れ て き た 変種 の はみ出し もの な の で す ) 多く の 人 が 自分 の プログラム に 「 必須 の オプション 」 を 持 た せ た い と 考え ま す 。 
しかし よ く 考え て くださ い 。 
必須 なら 、 それ は オプション ( 省略 可能 )  で は な い の で す ！ プログラム を 正し く 動作 さ せ る の に 絶対 的 に 必要 な 情報 が あ る と すれ ば 、 そこ に は 固定 引数 を 割り当て る べ き な の で す 。 
良 く でき た コマンドライン インタフェース 設計 と し て 、 ファイル の コピー に 使 わ れ る cp  ユーティリティ の こと を 考え て み ま しょ う 。 
ファイル の コピー で は 、 コピー 先 を 指定 せ ず に ファイル を コピー する の は 無 意味 な 操作 で す し 、 少な く とも 一 つ の コピー 元 が 必要 で す 。  従 っ て 、 cp  は 引数 無し で 実行 する と 失敗 し ま す 。 
と は い え 、 cp  は オプション を 全く 必要 と し な い 柔軟 で 便利 な コマンドライン 文法 を 備え て い ま す : 
まだ あ り ま す 。 
ほとんど の  cp  の 実装 で は 、 ファイル モード や 変更 時刻 を 変え ず に コピー する 、 シンボリック リンク の 追跡 を 行 わ な い 、 すでに あ る ファイル を 上書き する 前 に ユーザ に 尋ね る 、 など 、 ファイル を コピー する 方法 を いじ る ため の 一連 の オプション を 実装 し て い ま す 。 
しかし 、 こう し た オプション は 、 一 つ の ファイル を 別 の 場所 に コピー する 、 また は 複数 の ファイル を 別 の ディレクトリ に コピー する と い う 、 cp  の 中心 的 な 処理 を 乱 す こと は な い の で す 。 
固定 引数 と は 、 プログラム を 動作 さ せ る 上 で 絶対 的 に 必要 な 情報 と な る 引数 で す 。  よ い ユーザ インタフェース と は 、 可能 な 限り 少な い 固定 引数 を も つ もの で す 。 
プログラム を 正し く 動作 さ せ る ため に  17  個 も の 別個 の 情報 が 必要 だ と し た ら 、 その 方法  は さ し て 問題 に は な り ま せ ん  - - ユーザ は プログラム を 正し く 動作 さ せ られ な い うち に 諦め 、 立ち去 っ て しま う から で す 。 
ユーザ インタフェース が コマンドライン で も 、 設定 ファイル で も 、 GUI  や その 他 の 何 で あ っ て も 同じ で す :  多く の 要求 を ユーザ に 押し付け れ ば 、 ほとんど の ユーザ は ただ 音 を あげ て しま う だけ な の で す 。  要 する に 、 ユーザ が 絶対 に 提供 し な けれ ば な ら な い 情報 だけ に 制限 する - -  そして 可能 な 限り よく 練 ら れ た デフォルト 設定 を 使 う よう 試み て くださ い 。 
もちろん 、 プログラム に は 適度 な 柔軟 性 を 持 た せ た い と も 望 む はず で す が 、 それ こそ が オプション の 果た す 役割 で す 。 
繰り返 し ま す が 、 設定 ファイル の エントリ で あ ろ う が 、  GUI  で でき た 「 環境 設定 」 ダイアログ 上 の ウィ ジェット で あ ろ う が 、 コマンドライン オプション で あ ろ う が 関係 あ り ま せ ん -- より 多く の オプション を 実装 すれ ば プログラム は より 柔軟 性 を 持 ち ま す が 、 実装 は より 難解 に な る の で す 。 
高 すぎ る 柔軟 性 は ユーザ を 閉口 さ せ 、 コード の 維持 を より 難し く する の で す 。 
5 . 3 . 3  既存 テスト コード の 再 利用 
単体 テスト の 基礎 と な る 構築 要素 は 、 テスト ケース - -  セットアップ と 正し さ の チェック を 行 う 、 独立 し た シナリオ -- で す 。 
PyUnit で は 、 テスト ケース は 
モジュール の TestCase クラス の インスタンス で 示 し ま す 。 
何 ら か の テスト を 行 う 場合 、 ベース クラス TestCase の assert* ( ) か  fail* ( ) メソッド を 使用 し て くださ い 。 
テスト ケース 実行 時 、 テスト が 失敗 する と 例外 が 送出 さ れ 、 テスト フレームワーク は テスト 結果 を failure と し ま す 。 
assert* ( )  と fail* ( ) 以外 から の 例外 が 発生 し た 場合 、 テスト 結果 は errors と な り ま す 。  テスト の 実行 方法 に つ い て は 後述 と し 、 まず は テスト ケース インスタンス の 作成 方法 を 示 し ま す 。 
テスト ケース インスタンス は 、 以下 の よう に 引数 なし で コンストラクタ を 呼び出 し て 作成 し ま す 。 
似 た よう な テスト を 数多く 行 う 場合 、 同じ 環境 設定 処理 を 何 度 も 必要 と な り ま す 。 
例えば 上記 の よう な Widget の テスト が 100 種類 も 必要 な 場合 、 それぞれ の サブ クラス で ` ` Widget ' ' オブジェクト を 生成 する 処理 を 記述 する の は 好まし く あ り ま せ ん 。 
テスト 中 に setUp ( ) メソッド で 例外 が 発生 し た 場合 、 テスト フレームワーク は テスト を 実行 する こと が でき な い と みな し 、 runTest ( ) を 実行 し ま せ ん 。  同様 に 、 終了 処理 を tearDown ( ) メソッド に 記述 する と 、 runTest ( ) メソッド 終了 後 に 実行 さ れ ま す : 
setUp ( ) が 正常 終了 し た 場合 、 runTest ( ) の 結果 に 関わり 無 く tearDown ( ) が 実行 さ れ ま す 。  この よう な 、 テスト を 実行 する 環境 を fixture と 呼 び ま す 。 
この 例 で は runTest ( ) が あ り ま せ ん が 、 二 つ の テスト メソッド を 定義 し て い ま す 。 
この クラス の インスタンス は test * ( ) メソッド の どちら か 一方 の 実行 と 、 self . widget の 生成 ・ 解放 を 行 い ま す 。 
PyUnit で は テスト スイート に よ っ て テスト ケース インスタンス を テスト 対象 の 機能 に よ っ て グループ 化 する こと が でき ま す 。 
テスト スイート は 、 
の TestSuite クラス で 作成 し ま す 。 
各 テスト モジュール で 、 テスト ケース を 組み込 ん だ テスト スイート オブジェクト を 作成 する 呼び出し 可能 オブジェクト を 用意 し て お く と 、 テスト の 実行 や 参照 が 容易 に な り ま す : 
また は : 
( 小心 者 は 前者 を 使 う べ し ) 一般 的 に は 、 TestCase の サブ クラス に は 良 く 似 た 名前 の テスト 関数 が 複数 定義 さ れ ま す の で 、 テスト ケース クラス の 全 テスト ケース を 使 っ て テスト スイート を 作成 する makeSuite ( ) 関数 を 用意 し て い ま す : 
makeSuite ( ) で テスト スイート を 作成 し た 場合 、 テスト ケース の 実行 順序 は テスト ケース 関数 名 を cmp ( ) 組み込 み 関数 で ソート し た 順番 と な り ま す 。 
システム 全体 の テスト を 行 う 場合 など 、 テスト スイート を さらに グループ 化 し た い 場合 が あ り ま す が 、 この よう な 場合 、 TestSuite インスタンス に は TestSuite と 同じ よう に TestSuite を 追加 する 事 が でき ま す 。 
テスト ケース や テスト スイート は  ( widget . py  の よう な )  テスト 対象 の モジュール 内 に も 記述 でき ま す が 、 テスト は ( widgettests . py  の よう な )  独立 し た モジュール に 置 い た 方 が 以下 の よう な 点 で 有利 で す : 
テスト モジュール だけ を コマンドライン から 実行 する こと が でき る 。 
テスト コード と 出荷 する コード を 分離 する 事 が でき る 。 
テスト コード を 、 テスト 対象 の コード に 合わせ て 修正 する 誘惑 に 駆 ら れ にく い 。 
テスト コード は 、 テスト 対象 コード ほど 頻繁 に 更新 さ れ な い 。 
テスト コード を より 簡単 に リファクタリング する こと が でき る 。 
C で 書 い た モジュール の テスト は 、 どっち に しろ 独立 し た モジュール と な る 。 
テスト 戦略 を 変更 し た 場合 で も 、 ソース コード を 変更 する 必要 が な い 。 
これ ら の 関数 は 、 ファイル 記述 子 を 使 っ て 参照 さ れ て い る I \/ O ストリーム を 操作 し ま す 。 
ファイル ディスク リプタ  fd  を 閉じ ま す 。  利用 でき る 環境 :  Macintosh 、 Unix 、  Windows 
注意 : 注 : この 関数 は 低 レベル の  I \/ O  の ため の もの で 、 open ( )  や  pipe ( )  が 返 す ファイル 記述 子 に 対 し て 適用 し な けれ ば な り ま せ ん 。 
組み込 み 関数  open ( )  や  popen ( )  、 fdopen ( )  の 返 す  `` ファイル オブジェクト ' ' を 閉じ る に は 、 オブジェクト の  close ( )  メソッド を 使 っ て くださ い 。 
ファイル 記述 子  fd  の 複製 を 返 し ま す 。  利用 でき る 環境 :  Macintosh 、 Unix 、  Windows . 
ファイル 記述 子 を  fd  から  fd 2  に 複製 し 、 必要 なら 後者 の 記述 子 を 前 も っ て 閉じ て お き ま す 。  利用 でき る 環境 : Unix 、 Windows 
開 い て い る ファイル に 関連 し た システム 設定 情報  ( system configurationinformation )  を 返 し ま す 。  name  に は 取得 し た い 設定 名 を 指定 し ま す ;  これ は 定義 済み の システム 固有 値 名 の 文字 列 で 、 多く の 標準 ( POSIX . 1 、 Unix  95 、 Unix  98  その 他 )  で 定義 さ れ て い ま す 。 
プラットフォーム に よ っ て は 別 の 名前 も 定義 し て い ま す 。 
ホスト オペレーティング システム の 関知 する 名前 は  pathconf_ names 辞書 で 与え られ て い ま す 。 
name  の 指定 値 が ホスト システム で サポート さ れ て お ら ず 、 pathconf_ names  に も 入 っ て い な い 場合 、 errno . EINVAL  を エラー 番号 と し て  OSError  を 送出 し ま す 。 
stat ( )  の よう に ファイル 記述 子  fd  の 状態 を 返 し ま す 。  利用 でき る 環境 : Unix 、 Windows 
statvfs ( )  の よう に 、 ファイル 記述 子  fd  に 関連 づけ られ た ファイル が 入 っ て い る ファイル システム に 関 する 情報 を 返 し ま す 。  利用 でき る 環境 : Unix 
ファイル 記述 子  fd  を 持 つ ファイル の ディスク へ の 書き込み を 強制 し ま す 。 
Unix で は 、 ネイティブ の fsync ( )  関数 を 、 Windows  で は  MS _ commit ( )  関数 を 呼び出 し ま す 。  Python  の ファイル オブジェクト  f  を 使 う 場合 、 f  の 内部 バッファ を 確実 に ディスク に 書き込 む ため に 、 まず 
f . flush ( )  を 実行 し 、 それ から  os . fsync ( f . fileno( ) )  し て くださ い 。 
利用 でき る 環境 : Unix 、 2 . 2 . 3  以降 で は  Windows  も 。 
ファイル 記述 子  fd  に 対応 する ファイル を 、 サイズ が 最大 で  length  バイト に な る よう に 切り詰め ま す 。  利用 でき る 環境 : Unix 。 
ファイル  file  を 開 き 、 flag  に 従 っ て 様々 な フラグ を 設定 し 、 可能 なら  mode  に 従 っ て ファイル モード を 設定 し ま す 。  mode  の 標準 の 設定 値 は  0 7 7 7  ( 8進 表現 )  で 、 先 に 現在 の  umask  を 使 っ て マスク を 掛け ま す 。 
注意 : この 関数 は 低 レベル の  I \/ O  の ため の もの で す 。  通常 の 利用 で は 、 read ( )  や  write ( )  ( や その 他 多く の )  メソッド を 持 つ 「 ファイル オブジェクト 」  を 返 す 、 組み込 み 関数  open ( )  を 使 っ て くださ い 。 
新し い 擬似 端末 の ペア を 開 き ま す 。 
ファイル 記述 子 の ペア ( master , slave )  を 返 し 、 それぞれ pty  および tty を 表 し ま す 。 
( 少し だけ )  より 可搬 性 の あ る アプローチ と し て は 、 
モジュール を 使 っ て くださ い 。  利用 でき る 環境 :  いく つ か の Unix 風 システム 。 
パイプ を 作成 し ま す 。 
ファイル 記述 子 の ペア  ( r ,  w )  を 返 し 、 それぞれ 読み出し 、 書き込み 用 に 使 う こと が でき ま す 。  利用 でき る 環境 : Unix 、 Windows 。 
ファイル 記述 子  fd  から 最大 で  n  バイト 読み出 し ま す 。  読み出 さ れ た バイト 列 の 入 っ た 文字 列 を 返 し ま す 。 
fd  が 参照 し て い る ファイル の 終端 に 達 し た 場合 、 空 の 文字 列 が 返 さ れ ま す 。  利用 でき る 環境 : Macintosh 、 Unix 、 Windows 。 
注意 : この 関数 は 低 レベル の  I \/ O  の ため の もの で 、 open ( )  や  pipe ( )  が 返 す ファイル 記述 子 に 対 し て 適用 し な けれ ば な り ま せ ん 。 
組み込 み 関数  open ( )  や  popen ( )  、 fdopen ( )  の 返 す  `` ファイル オブジェクト ' ' 、 あるいは sys . stdin  から 読み出 す に は 、 オブジェクト の  read ( )  メソッド を 使 っ て くださ い 。 
fd  (open ( )  が 返 す 開 か れ た ファイル 記述 子 )  で 与え られ る 端末 に 関連 付け られ た プロセス グループ を 返 し ま す 。  利用 でき る 環境 : Unix 。 
fd  (open ( )  が 返 す 開 か れ た ファイル 記述 子 )  で 与え られ る 端末 に 関連 付け られ た プロセス グループ を  pg に 設定 し ま す 。  利用 でき る 環境 : Unix 。 
ファイル 記述 子  fd  に 関連 付け られ て い る 端末 デバイス を 特定 する 文字 列 を 返 し ま す 。 
fd  が 端末 に 関連 付け られ て い な い 場合 、 例外 が 送出 さ れ ま す 。  利用 でき る 環境 : Unix 。 
組み込 み 関数  open ( )  や  popen ( )  、 fdopen ( )  の 返 す  `` ファイル オブジェクト ' ' 、 あるいは sys . st dout 、 sys . stderr  に 書き込 む に は 、 オブジェクト の write ( )  メソッド を 使 っ て くださ い 。 
以下 の データ 要素 は  open ( )  関数 の  flags  引数 を 構築 する ため に 利用 する こと が でき ま す 。 
上 の フラグ と 同様 、 open ( )  関数 の  flag  引数 の ため の オプション フラグ で す 。 
open ( )  関数 の  flag  引数 の ため の オプション フラグ で す 。 
利用 でき る 環境 : Macintosh 、 Windows 。 
実  uid \/ gid  を 使 っ て  path  に 対 する アクセス が 可能 か 調べ ま す 。 
アクセス が 許可 さ れ て い る 場合  True  を 、 そう で な い 場合  False  を 返 し ま す 。 
access ( )  の  mode  に 渡 す ため の 値 で 、 path  が 存在 する か どう か を 調べ ま す 。 
access ( )  の  mode  に 渡 す ため の 値 で 、 path  が 読み出し 可能 か どう か を 調べ ま す 。 
access ( )  の  mode  に 渡 す ため の 値 で 、 path  が 書き込み 可能 か どう か を 調べ ま す 。 
access ( )  の  mode  に 渡 す ため の 値 で 、 path  が 実行 可能 か どう か を 調べ ま す 。 
現在 の 作業 ディレクトリ  ( current  working  directory )  を  path  に 設定 し ま す 。 
現在 の 作業 ディレクトリ を 表現 する 文字 列 を 返 し ま す 。 
path  の モード を 数値  mode  に 変更 し ま す 。  mode  は 、 ( stat  モジュール で 定義 さ れ て い る ) 以下 の 値 の いずれ か を 取り得 ま す : 
利用 でき る 環境 : Unix 、 Windows 。 
path  の 所有 者  (owner )  id  と グループ  id  を 、 数値  uid および  gid  に 変更 し ま す 。 
利用 でき る 環境 : Unix 。 
src  を 指 し て い る ハードリンク  dst  を 作成 し ま す 。  利用 でき る 環境 : Unix 。 
ディレクトリ 内 の エントリ 名 が 入 っ た リスト を 返 し ま す 。  リスト 内 の 順番 は 不定 で す 。 
特殊 エントリ ' . ' および '. . ' は 、 それ ら が ディレクトリ に 入 っ て い て も リスト に は 含め られ ま せ ん 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : Windows NT \/ 2k \/ XP  と Unix  で は 、 path  が  Unicode  オブジェクト の 場合 、 Unicode  オブジェクト の リスト が 返 さ れ ま す 。  利用 でき る 環境 :  Macintosh 、 Unix 、 Windows 。 
stat ( )  に 似 て い ま す が 、 シンボリック リンク を たど り ま せ ん 。  利用 でき る 環境 : Unix 。 
数値 で 指定 さ れ た モード  mode  を 持 つ  FIFO  ( 名前 付き パイプ )  を path  に 作成 し ま す 。 
mode  の 標準 の 値 は  0666  ( 8 進 ) で す 。 
FIFO は  ( 例えば  os . unlink ( )  を 使 っ て )  削除 さ れ る まで 存在 し つづけ ま す 。 
一般 的 に 、 FIFO  は ` ` クライアント ' ' と ` ` サーバ ' ' 形式 の プロセス 間 で ランデブー を 行 う ため に 使 わ れ ま す :  この とき 、 サーバ は  FIFO  を 読み出し 用 に 開 き 、 クライアント は 書き込み 用 に 開 き ま す 。 
mkfifo ( )  は  FIFO  を 開 か な い - -  単に ランデブー ポイント を 作成 する だけ  -- な の で 注意 し て くださ い 。 
filename  と い う 名前 で 、 ファイル システム ・ ノード  ( ファイル 、 デバイス 特殊 ファイル 、 また は 、 名前 つき パイプ )  を 作 り ま す  。  mode  は 、 作 ろ う と する ノード の 使用 権限 と タイプ を 、 S _ IFREG 、 S _ IFCHR 、 S _ IF BLK 、 S _ IFIFO  ( これ ら の 定数 は  stat  で 使用 可能 )  の いずれ か と （ ビット  OR  で ） 組み合わせ て 指定 し ま す 。 
S _ IFCHR  と S _ IF BLK  を 指定 する と 、 device  は 新し く 作 ら れ た デバイス 特殊 ファイル を  ( おそらく  os . makedev( )  を 使 っ て )  定義 し 、 指定 し な かっ た 場合 に は 無視 し ま す 。 
バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
生 の デバイス 番号 から 、 デバイス の メジャー 番号 を 取り出 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
生 の デバイス 番号 から 、 デバイス の マイナー 番号 を 取り出 し ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
major  と minor  から 、 新し く 生 の デバイス 番号 を 作 り ま す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
数値 で 指定 さ れ た モード  mode  を も つ ディレクトリ  path  を 作成 し ま す 。  mode  の 標準 の 値 は  0 7 7 7  ( 8 進 ) で す 。 
システム に よ っ て は 、  mode  は 無視 さ れ ま す 。 
利用 の 際 に は 、 現在 の  umask  値 が 前 も っ て マスク さ れ ま す 。  利用 でき る 環境 : Macintosh 、 Unix 、 Windows 。 
再帰 的 な ディレクトリ 作成 関数 で す 。 
mkdir ( )  に 似 て い ま す が 、 末端  ( leaf )  と な る ディレクトリ を 作成 する ため に 必要 な 中間 の 全て の ディレクトリ を 作成 し ま す 。 
末端 ディレクトリ が すでに 存在 する 場合 や 、 作成 が でき な かっ た 場合 に は  error 例外 を 送出 し ま す 。 
mode  の 標準 の 値 は  0 7 7 7  ( 8 進 ) で す 。 
( Windows  システム に のみ 関係 する こと で す が 、 Universal  Naming  Convention  パス は 、 ` hostpath ' と い う 書式 の パス で す ） バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
指定 さ れ た ファイル に 関係 する システム 設定 情報 を 返 し ま す 。  varname  に は 取得 し た い 設定 名 を 指定 し ま す ;  これ は 定義 済み の システム 固有 値 名 の 文字 列 で 、 多く の 標準 ( POSIX . 1 、 Unix  95 、 Unix  98  その 他 )  で 定義 さ れ て い ま す 。 
pathconf ( )  および  fpathconf ( )  が 受理 する システム 設定 名 を 、 ホスト オペレーティング システム で 定義 さ れ て い る 整数 値 に 対応 付け て い る 辞書 で す 。 
この 辞書 は システム で どの 設定 名 が 定義 さ れ て い る か を 決定 する ため に 利用 でき ま す 。  利用 でき る 環境 : Unix 。 
シンボリック リンク が 指 し て い る パス を 表 す 文字 列 を 返 し ま す 。 
返 さ れ る 値 は 絶対 パス に も 、 相対 パス に も な り 得 ま す ;  相対 パス の 場合 、 os . path . join (os . path . dirname ( path ) ,  result ) を 使 っ て 絶対 パス に 変換 する こと が でき ま す 。 
利用 でき る 環境 : Unix 。 
ファイル  path  を 削除 し ま す 。 
path  が ディレクトリ の 場合 、 OSError  が 送出 さ れ ま す ;  ディレクトリ の 削除 に つ い て は rmdir ( )  を 参照 し て くださ い 。 
この 関数 は 下 で 述べ られ て い る unlink ( )  関数 と 同一 で す 。 
Windows  で は 、 使用 中 の ファイル を 削除 し よ う と 試み る と 例外 を 送出 し ま す ; Unix で は 、 ディレクトリエントリ は 削除 さ れ ま す が 、 記憶 装置 上 に アロケーション さ れ た ファイル 領域 は 元 の ファイル が 使 わ れ な く な る まで 残 さ れ ま す 。  利用 でき る 環境 :  Macintosh 、 Unix 、 Windows 。 
再帰 的 な ディレクトリ 削除 関数 で す 。 
rmdir ( )  と 同じ よう に 動作 し ま す が 、 末端 ディレクトリ が うま く 削除 でき る かぎり 、 パス を 構成 する 要素 の 右端 と な る ディレクトリ を 刈り込 ん で ゆき 、 指定 し た パス 全体 が 削除 さ れ る か エラー が 送出 さ れ る まで 続け ま す  ( この エラー は 通常 、 指定 し た ディレクトリ の 親 ディレクトリ が 空 で な い こと を 意味 する だけ な の で 無視 さ れ ま す ) 。 
末端 の ディレクトリ が うま く 削除 でき な い 場合 に は  error  を 送出 し ま す 。  バージョン  1 . 5 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
ファイル また は ディレクトリ  src を  dst  に 名前 変更 し ま す 。 
dst  が ディレクトリ の 場合 、 OSError  が 送出 さ れ ま す 。 
Unix で は 、  dst  が 存在 し 、 かつ ファイル の 場合 、 ユーザ の 権限 が あ る かぎり 暗黙 の うち に 元 の ファイル が 削除 さ れ ま す 。 
この 操作 は いく つ か の Unix  系 に お い て 、 src と  dst が 異な る ファイル システム 上 に あ る と 失敗 する こと が あ り ま す 。 
ファイル 名 の 変更 が 成功 する 場合 、 この 操作 は 原子 的  ( atomic )  操作 と な り ま す  ( これ は  POSIX  要求 仕様 で す )  Windows  で は 、 dst  が 既に 存在 する 場合 に は 、 たとえ ファイル の 場合 で も OSError  が 送出 さ れ ま す ;  これ は  dst  が 既に 存在 する ファイル 名 の 場合 、 名前 変更 の 原子 的 操作 を 実装 する 手段 が な い から で す 。 
利用 でき る 環境 : Macintosh 、 Unix 、 Windows 。 
注意 : この 関数 は コピー 元 の 末端 の ディレクトリ また は ファイル を 削除 する 権限 が な い 場合 に は 失敗 し ま す 。 
ディレクトリ  path  を 削除 し ま す 。  利用 でき る 環境 : Macintosh 、 Unix 、 Windows 。 
与え られ た  path  に 対 し て  stat ( )  システム コール を 実行 し ま す 。 
戻 り 値 は オブジェクト で 、 その 属性 が  stat  構造 体 の 以下 に 挙げ る 各 メンバ : st _mode  ( 保護 モード ビット ) 、 st _ ino ( i  ノード 番号 ) 、 st_dev ( デバイス ) 、 st_nlink ( ハードリンク 数 ) 、 st _uid  ( 所有 者 の ユーザ  ID ) 、 st _ gid  ( 所有 者 の グループ ID ) 、 st _ size ( ファイル の バイト サイズ ) 、 st _atime ( 最終 アクセス 時刻 ) 、 st _mtime ( 最終 更新 時刻 ) 、 st _ctime ( プラットフォーム 依存 ： Unix で は 最終 メタデータ 変更 時刻 、 Windows で は 作成 時刻 ) と な っ て い ま す 。 
バージョン  2 . 3  で  変更  さ れ た 仕様 : もし  stat_float_times  が 真 を 返 す 場合 、 時間 値 は 浮動 小数 点 で 秒 を 計 り ま す 。 
ファイル システム が サポート し て い れ ば 、 秒 の 小数 点 以下 の 桁 も 含め て 返さ れ ま す 。 
Mac  OS  で は 、 時間 は 常 に 浮動 小数 点 で す 。 
詳細 な 説明 は  stat_float_times  を 参照 し て くださ い 
で は 、 stat  構造 体 から 情報 を 引き出 す 上 で 便利 な 関数 や 定数 を 定義 し て い ま す 。  ( Windows  で は 、 いく つ か の データ 要素 は ダミー の 値 が 埋め られ て い ま す 。 
例えば 、 FAT  や  FAT 32  ファイル システム を 使 っ て い る Windows  システム で は 、 st _atime の 精度 は  1  日 に 過ぎ ま せ ん 。 
詳し く は お 使い の オペレーティング システム の ドキュメント を 参照 し て くださ い 。 
利用 でき る 環境 :  Macintosh 、 Unix 、 Windows 。 
バージョン  2 . 2  で  変更  さ れ た 仕様 : 返 さ れ た オブジェクト の 属性 と し て の アクセス 機能 を 追加 し ま し た 
stat _result  が タイム スタンプ に 浮動 小数 点 オブジェクト を 使 う か どう か を 決定 し ま す 。 
newvalue  が 真 の 場合 、 以後 の  stat ( )  呼び出し は 浮動 小数 点 を 返 し 、 偽 の 場合 に は 整数 を 返 し ま す 。 
newvalue  が 省略 さ れ た 場合 、 現在 の 設定 どおり の 戻 り 値 に な り ま す 。  古 い バージョン の  Python  と 互換 性 を 保 つ ため 、 stat _result  に タプル と し て アクセス する と 、 常 に 整数 が 返 さ れ ま す 。 
また 、 Python  2 . 2  と の 互換 性 の ため 、 タイム スタンプ に フィールド 名 を 指定 し て アクセス する と 、 整数 で 返 さ れ す 。 
タイム スタンプ の 秒 を 小数 点 以下 の 精度 で 求め た い アプリケーション は 、 タイム スタンプ を 浮動 小数 点 型 に する ため に 、 この 関数 を 使 う こと が でき ま す 。 
浮動 小数 点 型 の タイム スタンプ を 処理 する と 、 不 正確 な 動作 を する よう な ライブラリ を 使 う 場合 、 ライブラリ が 修正 さ れ る まで 、 浮動 小数 点 型 を 返 す 機能 を 停止 さ せ て お く べ き で す 。 
与え られ た  path  に 対 し て  statvfs ( )  システム コール を 実行 し ま す 。 
で は 、 シーケンス と し て アクセス する 場合 に 、 statvfs  構造 体 から 情報 を 引き出 す 上 便利 な 関数 や 定数 を 定義 し て い ま す ;  これ は 属性 と し て 各 フィールド に アクセス でき な い バージョン の  Python  で 動作 する 必要 の あ る コード を 書 く 際 に 便利 で す 。 
src  を 指 し て い る シンボリック リンク を  dst  に 作成 し ま す 。  利用 でき る 環境 : Unix 。 
一時 ファイル  ( temporary file )  を 生成 する 上 で ファイル 名 と し て 相応し い 一意 な パス 名 を 返 し ま す 。 
この 値 は 一時 的 な ディレクトリエントリ を 表 す 絶対 パス で 、 dir  ディレクトリ の 下 か 、 dir  が 省略 さ れ たり  None  の 場合 に は 一時 ファイル を 置 く ため の 共通 の ディレクトリ の 下 に な り ま す 。 
prefix  が 与え られ て お り 、 かつ None  で な い 場合 、 ファイル 名 の 先頭 に つけ られ る 短 い 接頭 辞 に な り ま す 。 
アプリケーション は  tempnam ( ) が 返 し た パス 名 を 使 っ て 正し く ファイル を 生成 し 、 生成 し た ファイル を 管理 する 責任 が あ り ま す ;  一時 ファイル の 自動 消去 機能 は 提供 さ れ て い ま せ ん 。 
この 値 は 一時 ファイル を 置 く ため の 共通 の ディレクトリ 下 の 一時 的 な ディレクトリエントリ を 表 す 絶対 パス で す 。 
アプリケーション は  tmpnam ( ) が 返 し た パス 名 を 使 っ て 正し く ファイル を 生成 し 、 生成 し た ファイル を 管理 する 責任 が あ り ま す ;  一時 ファイル の 自動 消去 機能 は 提供 さ れ て い ま せ ん 。 
この 関数 は おそらく  Windows  で は 使 う べ き で は な い で しょ う ; Micorosoft  の tmpnam ( )  実装 で は 、 常 に 現在 の ドライブ の ルート ディレクトリ 下 の ファイル 名 を 生成 し ま す が 、 これ は 一般 的 に は テンポラリ ファイル を 置 く 場所 と し て は ひど い 場所 で す  ( アクセス 権限 に よ っ て は 、 この 名前 を つか っ て ファイル を 開 く こと すら でき な い か も しれ ま せ ん ) 。 
tmpnam ( )  が テンポラリ 名 を 再 利用 し 始め る まで に 生成 でき る 一意 な 名前 の 最大 数 で す 。 
remove ( )  と 同じ で す ; unlink ( )  の 名前 は 伝統 的 な  Unix  の 関数 名 で す 。  利用 でき る 環境 :  Macintosh 、 Unix 、 Windows 。 
path  で 指定 さ れ た ファイル に 最終 アクセス 時刻 および 最終 修正 時刻 を 設定 し ま す 。 times が  None  の 場合 、 ファイル の 最終 アクセス 時刻 および 最終 更新 時刻 は 現在 の 時刻 に な り ま す 。 
walk ( )  は 、 ディレクトリ ツリー 以下 の ファイル 名 を 、 ツリー を トップ ダウン と ボトム アップ の 両 方向 に 歩行 する こと で 生成 し ま す 。 
ディレクトリ  top  を 根 に 持 つ ディレクトリ ツリー に 含 ま れ る 、 各 ディレクトリ ( top  自身 を 含 む )  から 、 タプル  ( dirpath ,  dirnames , filenames)  を 生成 し ま す 。 
この リスト 内 の 名前 に は 、 ファイル 名 まで の パス が 含 ま れ な い こと に 、 注意 し て くださ い 。 
dirpath  内 の ファイル や ディレクトリ へ の  ( top  から たど っ た )  フル パス を 得 る に は 、 os . path . join ( dirpath ,  name )  し て くださ い 。 
オプション 引数  topdown  が 真 で あ る か 、 指定 さ れ な かっ た 場合 、 各 ディレクトリ から タプル を 生成 し た 後 で 、 サブ ディレクトリ から タプル を 生成 し ま す 。 
topdown  が 偽 の とき に  dirnames  を 変更 し て も 効果 は あ り ま せ ん 。  ボトム アップ モード で は  dirnames  自身 が 生成 さ れ る 前 に dirnames 内 の ディレクトリ の 情報 が 生成 さ れ る から で す 。 
デフォルト で は 、 os . listdir ( )  呼び出 し から 送出 さ れ た エラー は 無視 さ れ ま す 。 
オプション の 引数  onerror  を 指定 する なら 、 この 値 は 関数 で な けれ ば な り ま せ ん ;  この 関数 は 単一 の 引数 と し て 、 os . error  インスタンス を 伴 っ て 呼び出 さ れ ま す 。 
この 関数 で は エラー を 報告 し て 歩行 を 続け たり 、 例外 を 送出 し て 歩行 を 中断 し たり でき ま す 。 
ファイル 名 は 例外 オブジェクト の  filename  属性 と し て 取得 でき る こと に 注意 し て くださ い 。 
注意 : 相対 パス を 渡 し た 場合 、 walk ( )  の 回復 の 間 で カレント 作業 ディレクトリ を 変更 し な い で くださ い 。  walk ( )  は カレント ディレクトリ を 変更 し ま せ ん し 、 呼び出 し 側 も カレント ディレクトリ を 変更 し な い と 仮定 し て い ま す 。 
注意 : シンボリック リンク を サポート する システム で は 、 サブ ディレクトリ へ の リンク が  dirnames  リスト に 含 ま れ ま す が 、 walk ( )  は その リンク を たど り ま せ ん  ( シンボリック リンク を たど る と 、 無限 ループ に 陥 り やす く な り ま す ) 。 
リンク さ れ た ディレクトリ を たど る に は 、 os . path . islink ( path )  で リンク 先 ディレクトリ を 確認 し 、 各 ディレクトリ に 対 し て  walk ( path )  を 実行 する と よ い で しょ う 。 
以下 の 例 で は 、 最初 の ディレクトリ 以下 に あ る 各 ディレクトリ に 含 ま れ る 、 非 ディレクトリ ファイル の バイト 数 を 表示 し ま す 。 
ただし 、 CVS  サブ ディレクトリ より 下 を 見 に 行 き ま せ ん 。 
次 の 例 で は 、 ツリー を ボトム アップ で 歩行 する こと が 不可欠 に な り ま す ; rmdir ( )  は ディレクトリ が 空 に な る 前 に 削除 さ せ な い から で す : 
暗号 に 関 する 用途 に 適 し た n  バイト から な る ランダム な 文字 列 を 返 し ま す 。 
この 関数 は  OS  固有 の 乱数 発生 源 から ランダム な バイト 列 を 生成 し て 返 し ま す 。 
この 関数 の 返 す データ は 暗号 を 用い た アプリケーション で 十分 利用 でき る 程度 に 予測 不能 で す が 、 実際 の クオリティ は  OS  の 実装 に よ っ て 異な り ま す 。 
Unix 系 の システム で は  \/ dev\/urandom へ の 問い合わせ を 行 い 、 Windows  で は  CryptGenRandom  を 使 い ま す 。 
乱数 発生 源 が 見つか ら な い 場合 、 NotImplementedError  を 送出 し ま す 。  バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
以下 の 関数 は 新し い ファイル オブジェクト を 作成 し ま す 。 
ファイル 記述 子  fd  に 接続 し て い る 、 開 か れ た ファイル オブジェクト を 返 し ま す 。 
引数  mode  および  bufsize  は 、 組み込 み 関数  open ( )  に お け る 対応 する 引数 と 同じ 意味 を 持 ち ま す 。 
利用 でき る 環境 :  Macintosh 、 Unix 、 Windows 
command  へ の 、 また は  command  から の パイプ 入出力 を 開 き ま す 。 
戻 り 値 は パイプ に 接続 さ れ て い る 開 か れ た ファイル オブジェクト で 、 mode  が ' r' ( 標準 の 設定 で す )  また は  ' w ' か に よ っ て 読み出し また は 書き込み を 行 う こと が でき ま す 。  引数  bufsize  は 、 組み込 み 関数  open ( )  に お け る 対応 する 引数 と 同じ 意味 を 持 ち ま す 。 
バージョン  2 . 0  で  変更  さ れ た 仕様 : この 関数 は 、 Python の 初期 の バージョン で は 、 Windows 環境 下 で 信頼 でき な い 動作 を し て い ま し た 。 
これ は Windows に 付属 し て 提供 さ れ る ライブラリ の _ popen ( )  関数 を 利用 し た こと に よ る もの で す 。 
新し い バージョン の  Python  で は 、 Windows  付属 の ライブラリ に あ る 壊れ た 実装 を 利用 し ま せ ん 
更新 モード ( " w + b " ) で 開 か れ た 新し い ファイル オブジェクト を 返 し ま す 。 
この ファイル は ディレクトリエントリ 登録 に 関連 付け られ て お ら ず 、 この ファイル に 対 する ファイル 記述 子 が なくな る と 自動 的 に 削除 さ れ ま す 。  利用 でき る 環境 : Unix 、 Windows 
以下 の  popen ( )  の 変種 は どれ も 、 bufsize が 指定 さ れ て い る 場合 に は  I \/ O  パイプ の バッファ サイズ を 表 し ま す 。  mode  を 指定 する 場合 に は 、 文字 列  ' b ' また は ' t ' で な けれ ば な り ま せ ん ;  これ は 、 Windows  で ファイル を バイナリ モード で 開 く か テキスト モード で 開 く か を 決め る ため に 必要 で す 。 
mode  の 標準 の 設定 値 は ' t ' で す 。  また Unix で は これ ら の 変種 は いずれ も  cmd  を シーケンス に でき ま す 。 
その 場合 、 引数 は シェル の 介在 なし に 直接  (os . spawnv ( )  の よう に )  渡 さ れ ま す 。 
cmd  が 文字 列 の 場合 、 引数 は ( os . system ( )  の よう に ) シェル に 渡 さ れ ま す 。 
以下 の メソッド は 子 プロセス から リターン コード を 取得 でき る よう に は し て い ま せ ん 。 
cmd  を 子 プロセス と し て 実行 し ま す 。 
ファイル ・ オブジェクト ( child _stdin ,  child _stdout )  を 返 し ま す 。  利用 でき る 環境 : Unix 、 Windows バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
ファイル オブジェクト  ( child _stdin ,  child _stdout ,  child _stderr )  を 返 し ま す 。  利用 でき る 環境 : Unix 、 Windows バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
は 子 プロセス の 視点 で 名付け られ て い る の で 注意 し て くださ い 。 
モジュール 内 の 同じ 名前 の 関数 を 使 っ て も 実現 でき ま す が 、 これ ら の 関数 の 戻 り 値 は 異な る 順序 を 持 っ て い ま す 。 
文字 列 形式 に よ る システム 設定 値  ( system configuration  value ) を 返 し ま す 。 
name  に は 取得 し た い 設定 名 を 指定 し ま す ;  この 値 は 定義 済み の システム 値名 を 表 す 文字 列 に する こと が でき ま す ;  名前 は 多く の 標準  ( POSIX . 1 、 Unix  95 、 Unix  98  その 他 )  で 定義 さ れ て い ま す 。 
ホスト オペレーティング システム の 関知 する 名前 は  confstr_ names 辞書 で 与え られ て い ま す 。 
name  の 指定 値 が ホスト システム で サポート さ れ て お ら ず 、 confstr_ names  に も 入 っ て い な い 場合 、 errno . EINVAL  を エラー 番号 と し て  OSError  を 送出 し ま す 。 
過去  1  分 、 5  分 、 15 分 間 で 、 システム で 走 っ て い る キュー の 平均 プロセス 数 を 返 し ま す 。  平均 負荷 が 得 られ な い 場合 に は  OSError  を 送出 し ま す 。 
整数 値 の システム 設定 値 を 返 し ま す 。  name  で 指定 さ れ た 設定 値 が 定義 さ れ て い な い 場合 、 - 1  が 返 さ れ ま す 。 
name  に 関 する コメント と し て は 、 confstr ( ) で 述べ た 内容 が 同様 に 当てはま り ま す ;  既知 の 設定 名 に つ い て の 情報 を 与え る 辞書 は  sysconf_ names  で 与え られ て い ま す 。  利用 でき る 環境 : Unix 。 
以下 の データ 値 は パス 名 編集 操作 を サポート する ため に 利用 さ れ ま す 。 
これ ら の 値 は 全て の プラットフォーム で 定義 さ れ て い ま す 。  パス 名 に 対 する 高 レベル の 操作 は 
モジュール で 定義 さ れ て い ま す 。 
現在 の ディレクトリ 参照 する ため に オペレーティング システム で 使 わ れ る 文字 列 定数 で す 。  例 :  POSIX  で は '. ' 、 Machintosh  で は ':' 。 
os . path  から も 利用 でき ま す 。 
親 ディレクトリ を 参照 する ため に オペレーティング システム で 使 わ れ る 文字 列 定数 で す 。  例 :  POSIX  で は '. .' 、 Machintosh  で は ': :' 。 
パス 名 を 要素 に 分割 する ため に オペレーティング システム で 利用 さ れ て い る 文字 で 、 例えば  POSIX  で は  " \/ " で 、 Machintosh  で は  " : "  で す 。 
os . path  から も 利用 でき ま す 。 
文字 パス 名 を 要素 に 分割 する 際 に オペレーティング システム で 利用 さ れ る もう 一 つ の 文字 で 、 分割 文字 が 一 つ しか な い 場合 に は  None  に な り ま す 。 
この 値 は  sep  が バックス ラッシュ と な っ て い る  DOS  や  Windows  システム で は  " \/ "  に 設定 さ れ て い ま す 。 
ベース の ファイル 名 と 拡張 子 を 分け る 文字 。  たとえば 、 os . py  で は  " . "  で す 。 
os . path  から も 利用 でき ま す 。 
バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
( PATH  の よう な )  サーチ パス 内 の 要素 を 分割 する ため に オペレーティング システム が 慣習 的 に 用い る 文字 で 、 POSIX  に お け る " : "  や  DOS  および  Windows  に お け る  " ; "  に 相当 し ま す 。 
exec * p*( ) や spawn*p*( )  に お い て 、 環境 変数 辞書 内 に ' PATH '  キー が な い 場合 に 使 わ れ る 標準 設定 の サーチ パス で す 。 
現在 の プラットフォーム 上 で 行 を 分割  ( あるいは 終端 )  する ため に 用い られ て い る 文字 列 で す 。 
この 値 は 例えば  POSIX  で の ' n' や  MacOS  で の ' r ' の よう に 、 単一 の 文字 に も な り ま す し 、 例えば  DOS  や  Windows  で の 'rn' の よう に 複数 の 文字 列 に も な り ま す 。 
バージョン  2 . 4  で  新た に 追加  さ れ た 仕様 で す 。 
プロセス を 生成 し たり 管理 する ため に 、 以下 の 関数 を 利用 する こと が でき ま す 。  様々 な  exec * ( )  関数 が 、 プロセス 内 に ロード さ れ た 新た な プログラム に 与え る ため の 引数 から な る リスト を と り ま す 。 
どの 場合 で も 、 新た な プログラム に 渡 さ れ る リスト の 最初 の 引数 は 、 ユーザ が コマンドライン で 入力 する 引数 で は な く 、 プログラム 自身 の 名前 に な り ま す 。 
C  プログラマ に と っ て は 、 これ は プログラム の main ( )  に 渡 さ れ る  argv [ 0 ]  に な り ま す 。 
例えば 、 " os . execv ('\/ bin\/echo' ,  [ ' foo' , 'bar'] ) "  は 、 標準 出力 に " bar "  を 出力 し ま す ;  " foo "  は 無視 さ れ た か の よう に 見え る こと で しょ う 。 
SIGABRT  シグナル を 現在 の プロセス に 対 し て 生成 し ま す 。 
Unix で は 、 標準 設定 の 動作 は コア ダンプ の 生成 で す ;  Windows  で は 、 プロセス は 即座 に 終了 コード  3  を 返 し ま す 。 
signal . signal ( )  を 使 っ て  SIGABRT  に 対 する シグナル ハンドラ を 設定 し て い る プログラム は 異な る 挙動 を 示 す の で 注意 し て くださ い 。  利用 でき る 環境 : Unix 、 Windows 。 
これ ら の 関数 は すべて 、 現在 の プロセス を 置き換え る 形 で 新た な プログラム を 実行 し ま す ;  現在 の プロセス は 戻 り 値 を 返 し ま せ ん 。 
Unix で は 、 新た に 実行 さ れ る 実行 コード は 現在 の プロセス 内 に ロード さ れ 、 呼び出 し 側 と 同じ プロセス  ID  を 持 つ こと に な り ま す 。 
エラー は  OSError  例外 と し て 報告 さ れ ま す 。  " l "  および  " v "  の つ い た  exec * ( )  関数 は 、 コマンドライン 引数 を どの よう に 渡 す か が 異な り ま す 。 
" l "  型 は 、 コード を 書 く とき に パラメタ 数 が 決ま っ て い る 場合 に 、 おそらく もっとも 簡単 に 利用 でき ま す 。  個々 の パラメタ は 単に execl * ( )  関数 の 追加 パラメタ と な り ま す 。 
" v "  型 は 、 パラメタ の 数 が 可変 の 時 に 便利 で 、 リスト か タプル の 引数 が  args  パラメタ と し て 渡 さ れ ま す 。 
どちら の 場合 も 、 子 プロセス に 渡 す 引数 は 動作 さ せ よう と し て い る コマンド の 名前 から 始め る べ き で す が 、 これ は 強制 で は あ り ま せ ん 。  末尾 近く に  " p "  を も つ 型 ( execlp( ) 、  execlpe ( ) 、  execvp( ) 、 および  execvpe () )  は 、 プログラム  file  を 探 す ため に 環境 変数  PATH  を 利用 し ま す 。 
_exit ( )  は 通常 、  fork ( )  さ れ た 後 の 子 プロセス で のみ 使 わ れ ま す 。 
以下 の 終了 コード は 必須 で は あ り ま せ ん が  _exit ( )  と 共 に 使 う こと が でき ま す 。 
一般 に 、  メール サーバ の 外部 コマンド 配送 プログラム の よう な 、 Python  で 書 か れ た システム プログラム に 使 い ま す 。 
誤 っ た 個数 の 引数 が 渡 さ れ た とき など 、 コマンド が 間違 っ て 使 わ れ た こと を 表 す 終了 コード 。 
利用 でき る 環境 : Unix 。 
利用 でき る 環境 : Unix 。 
指定 さ れ た ユーザ が 存在 し な かっ た こと を 表 す 終了 コード 。 
指定 さ れ た ホスト が 存在 し な かっ た こと を 表 す 終了 コード 。 
要求 さ れ た サービス が 利用 でき な い こと を 表 す 終了 コード 。 
利用 でき る 環境 : Unix 。 
fork  でき な い 、 pipe  の 作成 が でき な い など 、 オペレーティング ・ システム ・ エラー が 検出 さ れ た こと を 表 す 終了 コード 。 
利用 でき る 環境 : Unix 。 
ユーザ に は 作成 でき な い 出力 ファイル を 指定 し た こと を 表 す 終了 コード 。 
利用 でき る 環境 : Unix 。 
一時 的 な 失敗 が 発生 し た こと を 表 す 終了 コード 。 
操作 を 行 う ため に 十分 な 許可 が な かっ た （ ファイル システム の 問題 を 除 く ） こと を 表 す 終了 コード 。 
利用 でき る 環境 : Unix 。 
子 プロセス を  fork  し ま す 。 
子 プロセス で は  0  が 返 り 、 親 プロセス で は 子 プロセス の  id  が 返 り ま す 。  利用 でき る 環境 : Unix 。 
子 プロセス を  fork  し ま す 。 
この とき 新し い 擬似 端末  ( psheudo -terminal )  を 子 プロセス の 制御 端末 と し て 使 い ま す 。  親 プロセス で は  ( pid ,  fd )  から な る ペア が 返 り 、 fd  は 擬似 端末 の マスタ 側  ( master end )  の ファイル 記述 子 と な り ま す 。 
可搬 性 の あ る アプローチ を 取 る ため に は 、 
モジュール を 利用 し て くださ い 。  利用 でき る 環境 :  いく つ か の Unix 系 。 
プロセス  pid  を シグナル  sig  で  kill  し ま す 。 
ホスト プラットフォーム で 利用 可能 な シグナル を 特定 する 定数 は 
モジュール で 定義 さ れ て い ま す 。  利用 でき る 環境 : Unix 。 
プロセス の ``nice  値 ' ' に increment  を 加え ま す 。 
新た な nice  値 を 返 し ま す 。  利用 でき る 環境 : Unix 。 
プログラム の セグメント  ( program segment )  を メモリ 内 で ロック し ま す 。 
op  ( sys\/lock . h  で 定義 さ れ て い ま す )  に は どの セグメント を ロック する か を 指定 し ま す 。  利用 でき る 環境 : Unix 。 
子 プロセス を 起動 し 、 子 プロセス と の 通信 の ため に 開 か れ た パイプ を 返 し ま す 。 
これ ら の 関数 は  6 . 1 . 2  節 で 記述 さ れ て い ま す 。 
新た な プロセス 内 で プログラム  path  を 実行 し ま す 。 
mode  が P _ NOWAIT  の 場合 、 この 関数 は 新た な プロセス の プロセス  ID  と な り ま す 。 ; mode  が P _ WAIT の 場合 、 子 プロセス が 正常 に 終了 する と その 終了 コード が 返 り ま す 。 
そう で な い 場合 に は プロセス を  kill  し た シグナル  signal  に 対 し て - signal 
" l "  型 は 、 コード を 書 く とき に パラメタ 数 が 決ま っ て い る 場合 に 、 おそらく もっとも 簡単 に 利用 でき ま す 。  個々 の パラメタ は 単に spawnl* ( )  関数 の 追加 パラメタ と な り ま す 。 
どちら の 場合 も 、 子 プロセス に 渡 す 引数 は 動作 さ せ よう と し て い る コマンド の 名前 から 始ま ら な く て は な り ま せ ん 。  末尾 近く に  " p "  を も つ 型 ( spawnlp ( ) 、 spawnlpe ( ) 、 spawnvp ( ) 、 および  spawnvpe () )  は 、 プログラム  file  を 探 す ため に 環境 変数  PATH  を 利用 し ま す 。 
環境 変数 が  ( 次 の 段 で 述べ る spawn*e ( )  型 関数 で )  置き換え られ る 場合 、 環境 変数 は PATH  を 決定 する 上 の 情報 源 と し て 使 わ れ ま す 。 
利用 でき る 環境 : Unix 、 Windows 。 spawnlp ( ) 、 spawnlpe ( ) 、 spawnvp( )  および  spawnvpe ( )  は  Windows  で は 利用 でき ま せ ん 。 
バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 P_ NOWAIT 
spawn* ( )  関数 ファミリ に 対 する  mode  パラメタ と し て 取れ る 値 で す 。 
この 値 の いずれ か を  mode  と し て 与え た 場合 、 spawn* ( )  関数 は 新た な プロセス が 生成 さ れ る と すぐ に 、 プロセス の  ID  を 戻 り 値 と し て 返 り ま す 。 
spawn* ( )  関数 ファミリ に 対 する  mode  パラメタ と し て 取れ る 値 で す 。 
この 値 を  mode  と し て 与え た 場合 、 spawn* ( )  関数 は 新た な プロセス を 起動 し て 完了 する まで 返 ら ず 、 プロセス が うま く 終了 し た 場合 に は 終了 コード を 、 シグナル に よ っ て プロセス が  kill  さ れ た 場合 に は  - signal  を 返 し ま す 。 
利用 でき る 環境 : Unix 、 Windows 。  バージョン  1 . 6  で  新た に 追加  さ れ た 仕様 で す 。 
spawn* ( )  関数 ファミリ に 対 する  mode  パラメタ と し て 取れ る 値 で す 。 
ファイル を 関連 付け られ た アプリケーション を 使 っ て 「 スタート 」 し ま す 。 
この 動作 は 、  Windows  の  Explorer  上 で の ファイル を ダブル クリック や 、 コマンド プロンプト  ( interactive command  shell )  上 で の ファイル 名 を  start  命令 の 引数 と し て の 実行 と 同様 で す : ファイル は 拡張 子 が 関連 付け さ れ て い る アプリケーション  ( が 存在 する 場合 ) を 使 っ て 開 か れ ま す 。 
startfile ( )  は 関連 付け さ れ た アプリケーション が 起動 する と 同時 に 返 り ま す 。 
アプリケーション が 閉じ る まで 待機 さ せ る ため の オプション は な く 、 アプリケーション の 終了 状態 を 取得 する 方法 も あ り ま せ ん 。 
path  引数 は 現在 の ディレクトリ から の 相対 で 表 し ま す 。 
絶対 パス を 利用 し た い なら 、 最初 の 文字 は スラッシュ  ( "\/ " )  で は な い の で 注意 し て くださ い ;  もし 最初 の 文字 が スラッシュ なら 、 システム の 背後 に あ る  Win 32  ShellExecute ( )  関数 は 動作 し ま せ ん 。  os . path . normpath ( )  関数 を 使 っ て 、 Win 32  用 に 正し く コード 化 さ れ た パス に な る よう に し て くださ い 。 
利用 でき る 環境 : Windows 。 
バージョン  2 . 0  で  新た に 追加  さ れ た 仕様 で す 。 
サブ シェル 内 で コマンド  ( 文字 列 )  を 実行 し ま す 。 
この 関数 は 標準  C  関数  system ( )  を 使 っ て 実装 さ れ て お り 、 system ( )  と 同じ 制限 が あ り ま す 。 
posix . environ 、 sys . stdin  等 に 対 する 変更 を 行 っ て も 、 実行 さ れ る コマンド の 環境 に は 反映 さ れ ま せ ん 。 Unix で は 、 戻 り 値 は プロセス の 終了 ステータス で 、 wait( )  で 定義 さ れ て い る 書式 に コード 化 さ れ て い ま す 。 
( プロセス また は その 他 の )  積算 時間 を 秒 で 表 す 浮動 小数 点数 から な る 、 5  要素 の タプル を 返 し ま す 。 
タプル の 要素 は 、 ユーザ 時間  ( usertime) 、 システム 時間  ( systemtime ) 、 子 プロセス の ユーザ 時間 、 子 プロセス の システム 時間 、 そして 過去 の あ る 固定 時点 から の 経過 時間 で 、 この 順 に 並 ん で い ま す 。 
Unix  マニュアル ページ 
times ( 2 )  また は 対応 する  Windows  プラットフォーム  API  ドキュメント を 参照 し て くださ い 。  利用 でき る 環境 : Unix 、 Windows 。 
子 プロセス の 実行 完了 を 待機 し 、 子 プロセス の  pid  と 終了 コード インジケータ - -  16  ビット の 数 で 、 下位 バイト が プロセス を  kill  し た シグナル 番号 、 上位 バイト が 終了 ステータス  ( シグナル 番号 が ゼロ の 場合 ) --  の 入 っ た タプル を 返 し ま す ;  コア ダンプ ファイル が 生成 さ れ た 場合 、 下位 バイト の 最上 桁 ビット が 立て られ ま す 。  利用 でき る 環境 : Unix 。 
プロセス  id  pid  で 与え られ た 子 プロセス の 完了 を 待機 し 、 子 プロセス の プロセス  id  と ( wait( )  と 同様 に コード 化 さ れ た ) 終了 ステータス インジケータ から な る タプル を 返 し ま す 。 
pid  が 0  の 場合 、 現在 の プロセス グループ 内 の 任意 の 子 プロセス の 状態 に 対 する 要求 で す 。 
pid  が  - 1  の 場合 、 現在 の プロセス の 任意 の 子 プロセス に 対 する 要求 で す 。 
pid  が  - 1  より も 小さ い 場合 、 プロセス グループ  - pid 
( すなわち  pid  の 絶対 値 )  内 の 任意 の プロセス に 対 する 要求 で す 。 
子 プロセス 状態 が すぐ に 取得 でき な かっ た 場合 に ハング アップ し て しま わ な い よう に する ため の  waitpid ( )  の オプション で す 。 
プロセス が 停止 さ れ た  ( stop )  場合 に 真 を 返 し ま す 。  利用 でき る 環境 : Unix 。 
プロセス が シグナル に よ っ て 終了 し た  ( exit )  場合 に 真 を 返 し ま す 。  利用 でき る 環境 : Unix 。 
プロセス が 
exit ( 2 )  システム コール で 終了 し た 場合 に 真 を 返 し ま す 。  利用 でき る 環境 : Unix 。 
WIFEXITED ( status )  が 真 の 場合 、 
exit ( 2 )  システム コール に 渡 さ れ た 整数 パラメタ を 返 し ま す 。 
そう で な い 場合 、 返 さ れ る 値 に は 意味 が あ り ま せ ん 。  利用 でき る 環境 : Unix 。 
プロセス を 停止 さ せ た シグナル 番号 を 返 し ま す 。  利用 でき る 環境 : Unix 。 
プロセス を 終了 さ せ た シグナル 番号 を 返 し ま す 。  利用 でき る 環境 : Unix 
これ ら の 関数 と データ 要素 は 、 現在 の プロセス および ユーザ に 対 する 情報 提供 および 操作 の ため の 機能 を 提供 し て い ま す 。 
環境 変数 の 値 を 表 す マップ 型 オブジェクト で す 。 
それ 以後 に 変更 さ れ た 環境 変数 は  os . environ  を 直接 変更 し な い 限り 反映 さ れ ま せ ん 。 
プラットフォーム 上 で  putenv ( )  が サポート さ れ て い る 場合 、 この マップ 型 オブジェクト は 環境 変数 に 対 する クエリ と 同様 に 変更 する ため に 使 う こと も でき ま す 。 
putenv ( )  は マップ 型 オブジェクト が 修正 さ れ る 時 に 、 自動 的 に 呼 ば れ る こと に な り ま す 。 
注意 : 
putenv ( )  を 直接 呼び出 し て も os . environ  の 内容 は 変わ ら な い の で 、 os . environ を 直接 変更 する 方 が ベター で す 。 
注意 : Free BSD  と  Mac  OS  X  を 含 む いつ く か の プラットフォーム で は 、 environ  の 値 を 変更 する と メモリ リーク の 原因 に な る 場合 が あ り ま す 。 
システム の  putenv  に 関 する ドキュメント を 参照 し て くださ い 。 
putenv ( )  が 提供 さ れ て い な い 場合 、 この マッピング オブジェクト を 適切 な プロセス 生成 機能 に 渡 し て 、 子 プロセス が 修正 さ れ た 環境 変数 を 利用 する よう に でき ま す 。 
これ ら の 関数 は 、 `` ファイル と ディレクトリ ' '  ( 6 . 1 . 4  節 )  で 説明 さ れ て い ま す 。 
プロセス の 制御 端末 に 対応 する ファイル 名 を 返 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス の 実行 グループ  id  を 返 し ま す 。 
この  id  は 現在 の プロセス で 実行 さ れ て い る ファイル の ` set  id '  ビット に 対応 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス の 実行 ユーザ  id  を 返 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス の 実際 の グループ  id  を 返 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス に 関連 づけ られ た 従属 グループ  id  の リスト を 返 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス の 制御 端末 に ログ イン し て い る ユーザ 名 を 返 し ま す 。 
利用 でき る 環境 : Unix 。 
現在 の プロセス ・ グループ の  id  を 返 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス  id  を 返 し ま す 。  利用 でき る 環境 : Unix ,  Windows . 。 
親 プロセス の  id  を 返 し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス の ユーザ  id  を 返 し ま す 。  利用 でき る 環境 : Unix 。 
varname  と 名づけ られ た 環境 変数 の 値 を 文字 列  value  に 設定 し ま す 。 
この よう な 環境 変数 へ の 変更 は 、 os . system ( )  、 popen ( )  、  fork ( )  および  execv ( )  に よ り 起動 さ れ た 子 プロセス に 影響 し ま す 。 
利用 でき る 環境 :  主な  Unix 互換 環境 、 Windows 。 
注意 : Free BSD  と  Mac  OS  X  を 含 む いつ く か の プラットフォーム で は 、 environ  の 値 を 変更 する と メモリ リーク の 原因 に な る 場合 が あ り ま す 。 
システム の  putenv  に 関 する ドキュメント を 参照 し て くださ い 。 
現在 の プロセス に 有効 な グループ ID を セット し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス に 有効 な ユーザ ID を セット し ま す 。  利用 でき る 環境 : Unix 。 
現在 の プロセス に グループ  id  を セット し ま す 。  利用 でき る 環境 : Unix 。 
現在 の グループ に 関連 付け られ た 従属 グループ  id  の リスト を  groups に 設定 し ま す 。 groups  は シーケンス 型 で な く て は な ら ず 、 各 要素 は グループ を 特定 する 整数 で な く て は な り ま せ ん 。 
この 操作 は 通常 、 スーパユーザ しか 利用 でき ま せ ん 。  Availability : Unix . バージョン  2 . 2  で  新た に 追加  さ れ た 仕様 で す 。 
システム コール  setpgrp ( )  また は setpgrp ( 0 ,  0 )  の どちら か の バージョン の うち 、 ( 実装 さ れ て い れ ば )  実装 さ れ て い る 方 を 呼び出 し ま す 。 
機能 に つ い て は  Unix  マニュアル を 参照 し て くださ い 。  利用 でき る 環境 : Unix 
システム コール  setpgid ( )  を 呼び出 し て 、 pid  の  id  を も つ プロセス の プロセス グループ  id  を pgrp に 設定 し ま す 。 
利用 でき る 環境 : Unix 
現在 の プロセス に 対 し て 実際 の ユーザ  id  および 実行 ユーザ  id  を 設定 し ま す 。  利用 でき る 環境 : Unix 
現在 の プロセス に 対 し て 実際 の グループ  id  および 実行 ユーザ  id  を 設定 し ま す 。  利用 でき る 環境 : Unix 
システム コール  getsid ( )  を 呼び出 し ま す 。 
機能 に つ い て は Unix  マニュアル を 参照 し て くださ い 。  利用 でき る 環境 : Unix 
システム コール  setsid ( )  を 呼び出 し ま す 。 
現在 の プロセス の ユーザ  id  を 設定 し ま す 。  利用 でき る 環境 : Unix 
エラー コード  code  に 対応 する エラー メッセージ を 返 し ま す 。  利用 でき る 環境 : Unix 、 Windows 
現在 の 数値  umask  を 設定 し 、 以前 の  umask  値 を 返 し ま す 。  利用 でき る 環境 : Unix 、 Windows 
現在 の オペレーティング システム を 特定 する 情報 の 入 っ た  5  要素 の タプル を 返 し ま す 。 
この タプル に は  5  つ の 文字 列 : ( sysname ,  nodename , release ,  version , machine )  が 入 っ て い ま す 。 
システム に よ っ て は 、 ノード 名 を  8  文字 、 また は 先頭 の 要素 だけ に 切り詰め ま す ;  ホスト 名 を 取得 する 方法 と し て は 、 socket . gethostname ( ) 
を 使 う 方 が よ い で しょ う 、 あるいは  socket . gethostbyaddr ( socket . gethostname ( ) ) で も かま い ま せ ん 。 
利用 でき る 環境 : Unix 互換 環境 
filename  と い う 名前 の 標準  I \/ O  ファイル  fp  が 対話 的 ( interactive )  で あ る と 考え られ る 場合 に 真  ( 非 ゼロ )  を 返 し ま す 。 
これ は " isatty ( fileno ( fp) ) "  が 真 に な る ファイル の 場合 で す 。 
グローバル な フラグ  Py _ InteractiveFlag  が 真 の 場合 に は 、 filename  ポインタ が  NULL  か 、 名前 が 'stdin ' また は '? ? ? ' の いずれ か に 等し い 場合 に も 真 を 返 し ま す 。 
ファイル  filename  の 最終 更新 時刻 を 返 し ま す 。  結果 は 標準  C  ライブラリ 関数  time( )  が 返 す タイム スタンプ と 同じ 様式 で 符号 化 さ れ て い ま す 。 
プロセス が  fork  し た 後 の 内部 状態 を 更新 する ため の 関数 で す ; fork  後  Python  インタプリタ を 使 い 続け る 場合 、 新た な プロセス 内 で この 関数 を 呼び出 さ ね ば な り ま せ ん 。 
新た な プロセス に 新た な 実行 可能 物 を ロード する 場合 、 この 関数 を 呼び出 す 必要 は あ り ま せ ん 。 
インタプリタ が スタック 空間 を 使 い 尽く し た とき に 真 を 返 し ま す 。 
この チェック 関数 に は 信頼 性 が あ り ま す が 、 USE_ STACKCHECK が 定義 さ れ て い る 場合  ( 現状 で は  Microsoft  Visual  C + +  コンパイラ で ビルド し た  Windows  版 と  Macintosh  版 )  に しか 利用 でき ま せ ん  .  USE _ CHECKSTACK  は 自動 的 に 定義 さ れ ま す ;  自前 の コード で この 定義 を 変更 し て は な り ま せ ん 。 
シグナル  i  に 対 する 現在 の シグナル ハンドラ を 返 し ま す 。 
この 関数 は  sigaction ( )  また は  signal ( ) の いずれ か に 対 する 薄 い ラッパ で す 。 
sigaction ( )  や  signal ( )  を 直接 呼び出 し て は な り ま せ ん !  PyOS _ sighandler_t は  void  (*) ( int )  の typedef に よ る 別名 で す 。 
シグナル  i  に 対 する 現在 の シグナル ハンドラ を  h  に 設定 し ま す ;  以前 の シグナル ハンドラ を 返 し ま す 。 
この 関数 は  sigaction ( )  また は  signal ( ) の いずれ か に 対 する 薄 い ラッパ で す 。 
sigaction ( )  や  signal ( )  を 直接 呼び出 し て は な り ま せ ん !  PyOS _ sighandler_t は  void  (*) ( int )  の typedef に よ る 別名 で す 。 
オーディオ デバイス に 読み書き でき る よう に な る に は 、 まず 3  つ の メソッド を 正し い 順序 で 呼び出 さ ね ば な り ま せ ん : 
setfmt ( )  で 出力 形式 を 設定 し 、 
channels ( )  で チャンネル 数 を 設定 し 、 
speed ( )  で サンプリングレート を 設定 し ま す 。 
この 代わり に setparameters ( )  メソッド を 呼び出 せ ば 、 三 つ の オーディオ パラメタ を 一 度 で 設定 でき ま す 。 
setparameters ( )  は 便利 で す が 、 多く の 状況 で 柔軟 性 に 欠け る で しょ う 。  open ( )  の 返 す オーディオ デバイス オブジェクト に は 以下 の メソッド が あ り ま す : 
オーディオ デバイス を 明示 的 に 閉じ ま す 。 
オーディオ デバイス は 、 読み出し や 書き込み が 終了 し たら 必ず 閉じ ね ば な り ま せ ん 。 
閉じ た オブジェクト を 再度 開 く こと は でき ま せ ん 。 
デバイス に 関連 付け られ て い る ファイル 記述 子 を 返 し ま す 。 
オーディオ 入力 から  size  バイト を 読み だ し 、  Python  文字 列 型 に し て 返 し ま す 。 
多く の  Unix  デバイス ドライバ と 違 い 、  ブロック デバイス モード  ( デフォルト )  の  OSS  オーディオ デバイス で は 、 要求 し た 量 の データ 全体 を 取り込 む まで read ( )  が ブロック し ま す 。 
Python  文字 列  data  の 内容 を オーディオ デバイス に 書き込 み 、 書き込 ま れ た バイト 数 を 返 し ま す 。 
オーディオ デバイス が ブロック モード ( デフォルト )  の 場合 、 常 に 文字 列 データ 全体 を 書き込 み ま す  ( 前述 の よう に 、 これ は 通常 の Unix  デバイス の 振舞い と は 異な り ま す ) 。 
デバイス が 非 ブロック モード の 場合 、 データ の 一部 が 書き込 ま れ な い こと が あ り ま す -- writeall ( )  を 参照 し て くださ い 。 
実際 に 書き込 ま れ た データ の 量 と 渡 し た データ の 量 は 必ず 同じ に な る の で 、 戻 り 値 は あ り ま せ ん 。 
以下 の メソッド の 各々 は  ioctl ( )  システム コール 一 つ 一 つ に 対応 し て い ま す 。 
対応 関係 は はっきり し て い ま す : 例えば 、 setfmt ( )  は  SNDCTL _ DSP _ SETFMT  ioctl に 対応 し て い ま す し 、 sync ( )  は SNDCTL _ DSP _ SYNC に 対応 し て い ま す  ( この シンボル 名 は  OSS  の ドキュメント を 参照 する 時 に 助け に な る で しょ う ) 。 
根底 に あ る  ioctl ( )  が 失敗 し た 場合 、 これ ら の 関数 は 全て  IOError  を 送出 し ま す 。 
デバイス を 非 ブロック モード に し ま す 。 
いったん 非 ブロック モード に し た ら 、 ブロック モード は 戻せ ま せ ん 。 
サウンド カード が サポート し て い る オーディオ 出力 形式 を ビット マスク で 返 し ま す 。 
典型 的 な Linux システム で は 以下 の フォーマット が あ り ま す : 
対数 符号 化  ( Sun  の  . au  形式 や \/ dev\/audio  で 使 わ れ て い る 形式 ) 
対数 符号 化 
Interactive  Multimedia  Association  で 定義 さ れ て い る  4 : 1  圧縮 形式 
符号 なし  8  ビット オーディオ 
符号 つき  16  ビット オーディオ 、 リトル エンディアン バイト オーダ  ( Intel プロセッサ で 使 わ れ て い る 形式 ) 
符号 つき 16 ビット オーディオ 、 ビッグ エンディアン バイト オーダ  ( 68 k 、 Power PC 、 Sparc で 使 わ れ て い る 形式 ) 
符号 つき  8  ビット オーディオ 
符号 なし  16  ビット リトル エンディアン オーディオ 
符号 なし  16  ビット ビッグ エンディアン オーディオ 
ほとんど の システム は 、 上記 の 形式 の サブ セット しか サポート し て い ま せ ん 。 
また 、 多く の デバイス が  AFMT _U 8  だけ しか サポート し て い ま せ ん 。  現在 使 わ れ て い る 最も 一般 的 な 形式 は AFMT _ S 16 _ LE で す 。 
現在 の オーディオ 形式 を format に 設定 し よう と 試み ま す  - - format に つ い て は getfmts ( ) の リスト を 参照 し て くださ い 。 
実際 に デバイス に 設定 さ れ た オーディオ 形式 を 返 し ま す 。 
要求 通り の 形式 で な い こと も あ り ま す 。  AFMT _QUERY  を 渡 す と 現在 デバイス に 設定 さ れ て い る オーディオ 形式 を 返 し ま す 。 
出力 チャネル 数 を num_ channels に 設定 し ま す 。 
1  は モノラル 、 2  は ステレオ で す 。 
いく つ か の デバイス で は 2 つ より 多 い チャンネル を 持 つ もの も あ り ま す し 、 ハイ エンド な デバイス で は モノラル を サポート し な い もの も あ り ま す 。  デバイス に 設定 さ れ た チャンネル 数 を 返 し ま す 。 
サンプリングレート を 1 秒 あたり samplerate  に 設定 し よう と 試み 、 実際 に 設定 さ れ た レート を 返 し ま す 。 
たいてい の サウンド デバイス で は 任意 の サンプリングレート を サポート し て い ま せ ん 。 
一般 的 な レート は 以下 の 通り で す : 
レート 
\/ dev\/audio  の デフォルト 
会話 音声 の 録音 に 使 わ れ る レート 
( サンプル あたり  16  ビット で  2  チャネル の 場合 )  CD  品質 の オーディオ 
( サンプル 当たり  24  ビット の 場合 )  DVD  品質 の オーディオ 
サウンド デバイス が バッファ 内 の 全て の データ を 再生 し 終え る まで 待機 し ま す 。 
( デバイス を 閉じ る と 暗黙 の うち に  sync ( )  が 起こ り ま す )  OSS  の ドキュメント 上 で は 、 sync ( )  を 使 う より デバイス を 一 度 閉じ て 開き直 す よう 勧め て い ま す 。 
再生 あるいは 録音 を 即座 に 中止 し て 、 デバイス を コマンド を 受け取れ る 状態 に 戻 し ま す 。 
OSS の ドキュメント で は 、 reset ( )  を 呼び出 し た 後 に 一 度 デバイス を 閉じ 、 開き直 す よう 勧め て い ま す 。 
ドライバ に 出力 の 一時 停止  ( pause )  が 起き そう で あ る こと を 伝え 、 ドライバ が 一時 停止 を より 賢 く 扱え る よう に し ま す 。 
短 い サウンド エフェクト を 再生 し た 直後 や ユーザ 入力 待ち の 前 、 また ディスク  I \/ O  前 など に 使 う こと に な る で しょ う 。 
以下 の メソッド は 、 複数 の  ioctl  を 組み合わせ たり 、 ioctl  と 単純 な 計算 を 組み合わせ たり し た 便宜 用 メソッド で す 。 
主要 な オーディオ パラメタ 、 サンプル 形式 、 チャネル 数 、 サンプル レート を 一 つ の メソッド 呼び出し で 設定 し ま す 。  format 、 nchannels  および  samplerate  に は 、 それぞれ setfmt ( ) 、 channels ( )  および  speed ( ) と 同じ や り 方 で 値 を 設定 し ま す 。 
strict  の 値 が 真 の 場合 、 setparameters ( )  は 値 が 実際 に 要求 通り に デバイス に 設定 さ れ た か どう か 調べ 、 違 っ て い れ ば  OSSAudioError  を 送出 し ま す 。 
実際 に デバイス ドライバ が 設定 し た パラメタ 値 を 表 す  ( format , nchannels ,  samplerate )  から な る タプル を 返 し ま す  ( setfmt ( ) 、 channels ( )  および  speed ( ) の 返 す 値 と 同じ で す ) 。 
以下 に 例 を 示 し ま す :  ( fmt ,  channels ,  rate)  = dsp . setparameters ( fmt ,  channels ,  rate ) 
ハードウェア の バッファ サイズ を サンプル 数 で 返 し ま す 。 
ハードウェア バッファ 上 に 残 っ て い て まだ 再生 さ れ て い な い サンプル 数 を 返 し ま す 。 
ブロック を 起こ さ ず に ハードウェア の 再生 キュー に 書き込め る サンプル 数 を 返 し ま す 。 
1 . 1  MacPython - OSX の 取得 と インストール 
1 . 1 . 3  設定 
1 . 1 . 2  GUI  つき の スクリプト の 実行  Mac  OS  X  に は 、 一 つ だけ 知 っ て お か ね ば な ら な い クセ が あ り ま す :  Aqua  ウィンドウ マネージャ と やり取り する よう な  ( すなわち 、 何 ら か の  GUI を 持 つ よう な )  プログラム は 、 特殊 な 方法 で 起動 せ ね ば な ら な い の で す 。 
GUI を 持 っ た スクリプト を 実行 する に は  python  の 代わり に pythonw  を 使 っ て くださ い 。 
16 . 6  他 の グラフィカル ユーザ インタフェース パッケージ 
へ 付け加え られ る たくさん の 拡張 ウィ ジェット が あ り ま す 。 
Python  メガ ウィ ジェット 
モジュール を 使 い  Python  で 高 レベル の 複合 ウィ ジェット を 構築 する ため の ツール キット で す 。 
基本 クラス と この 基礎 の 上 に 構築 さ れ た 柔軟 で 拡張 可能 な メガ ウィ ジェット から 構成 さ れ て い ま す 。 
これ ら の メガ ウィ ジェット は ノート ブック 、 コンボ ボックス 、 選択 ウィ ジェット 、 ペイン ウィ ジェット 、 スクロール する ウィ ジェット 、 ダイアログ ウィンドウ など を 含 み ま す 。 
BLT に 対 する Pmw . Blt インタフェース を 持 ち 、 busy、graph 、 stripchart 、 tabset および vector コマンド が 利用 でき ま す 。  Pmw の 最初 の アイディア は 、 Michael  McLennan に よ る Tk itcl 拡張 [ incr Tk ] と Mark Ulferts に よ る [ incr  Widgets ] から 得 ま し た 。 
メガ ウィ ジェット の いく つ か は itcl から  Python  へ 直接 変換 し た もの で す 。 
は 、 新し い  Tkinter  ウィ ジェット を 、  Python  で 書け る よう に する ライブラリ で す 。 
WCK  フレームワーク は 、 ウィジェット の 生成 、 設定 、 スクリーン の 外観 、 イベント 操作 に お け る 、 完全 な 制御 を 提供 し ま す 。 
Tk \/ Tcl  レイヤー を 通 し て データ 転送 する 必要 が な く 、 直接  Python  の データ 構造 を 操作 する こと が でき る の で 、 WCK  ウィ ジェット は 非常 に 高速 で 軽量 に な り 得 ま す 。 
Tk  は  Python  に と っ て 唯一 の  GUI  と い う わけ で は あ り ま せ ん が 、 もっとも よく 使 わ れ て い ま す 。 
Qt 、 Tk 、 Motif および GTK + の もっとも 魅力 の あ る 性質 を 一 つ の パッケージ に 結合 し た GUI ツール キット で す 。 
Tkinter に 依存 し な い  Python  クラス ブラウザ が あ り ま す 。  wxWindows は 
より さらに ウィ ジェット が 豊富 で 、 その へ ヘルプ システム 、 洗練 さ れ た HTML と 画像 ビューア および 他 の 専門 分野 別 の ウィ ジェット 、 多数 の ドキュメント と 印刷 機能 を 持 っ て い ま す 。 
PyQt は sip で ラップ さ れ た Qt ツール キット へ の バインディング で す 。 
PyKDE は sip で ラップ さ れ た KDE デスクトップ ライブラリ に 対 する インタフェース で す 。 
KDE は Unix コンピュータ 用 の デスクトップ 環境 で す 。  グラフィカル ・ コンポーネント は Qt に 基づ い て い ま す 。 
FOX は 、 グラフィカル ユーザ インタフェース を 簡単 かつ 効率 良 く 開発 する ため の C + + ベース の ツール キット で す 。 
それ は 幅広 く 、 成長 し て い る コントロール ・ コレクション で 、 3 D グラフィックス の 操作 の ため の OpenGL ウィ ジェット と 同様 に 、 ドラッグ アンド ドロップ 、 選択 の よう な 最新 の 機能 を 提供 し ま す 。 
FOX は アイコン 、 画像 および ステータス ライン ・ ヘルプ や ツール チップ の よう な ユーザ に と っ て 便利 な 機能 も 実装 し て い ま す 。 
FOX は すでに 大 規模 な コントロール ・ コレクション を 提供 し て い ま す が 、 単に 既存 の コントロール を 使 っ て 望み の 振る舞い を 追加 また は 再 定義 する 派生 クラス を 作成 する こと に よ っ て プログラマ が 簡単 に 追加 コントロール と GUI 要素 を 構築 でき る よう に する ため に 、 FOX は C + + を 利用 し て い ま す 。 
GTK ウィ ジェット セット の ため の 一連 の バインディング で す 。  C の もの より 少し だけ 高 レベル な オブジェクト 指向 インタフェース を 提供 し ま す 。 
普通 は C  API を 使 っ て や ら な けれ ば な ら な い 型 キャスト と リファレンス ・ カウント を すべて 自動 的 に 行 い ま す 。 
GNOME に 対 し て も 、 バインディング が あ り ま す 。  チュートリアル が 手 に 入 り ま す 。 
トークン の 解析 に あいまい さ が 生 じ た 場合 、 トークン は 左 から 右 に 読 ん で 不正 で な い トークン を 構築 でき る 最長 の 文字 列 を 含 む よう に 構築 さ れ ま す 。 
7 . 5 . 1  ファイル オブジェクト  ( file object ) 
オブジェクト へ の 参照 を 関数 の 内外 に 渡 す 場合 に は 、 オブジェクト の 所有 権 が 参照 と 共 に 渡 さ れ る か 否 か が 常 に 関数 インタフェース 仕様 の 一部 と な り ま す 。  オブジェクト へ の 参照 を 返 す ほとんど の 関数 は 、 参照 と とも に 所有 権 も 渡 し ま す 。 
特に 、 PyInt_ FromLong ( )  や Py _ BuildValue ( )  の よう に 、 新し い オブジェクト を 生成 する 関数 は 全て 所有 権 を 相手 に 渡 し ま す 。 
オブジェクト が 実際 に は 新た な オブジェクト で な く て も 、 その オブジェクト に 対 する 新た な 参照 の 所有 権 を 得 ま す 。 
例えば 、 PyInt_ FromLong ( ) は よく 使 う 値 を キャッシュ し て お り 、 キャッシュ さ れ た 値 へ の 参照 を 返 す こと が あ り ま す 。  PyObject _ GetAttrString ( )  の よう に 、 ある オブジェクト から 別 の オブジェクト を 抽出 する よう な 関数 も また 、 参照 と とも に 所有 権 を 委譲 し ま す 。 
と は い え 、 この 規則 に は 二 つ の 重要 な 例外 : PyTuple_ SetItem ( )  と PyList _ SetItem ( ) が あ り ま す 。 
これ ら の 関数 は 、 渡 さ れ た 引数 要素 に 対 し て 所有 権 を 乗っ取 り  ( take over )  ま す --  たとえ 失敗 し て も で す ! ( PyDict _ SetItem ( )  と その 仲間 は 所有 権 を 乗っ取 り ま せ ん  - - これ ら は いわば  ` ` 普通 の ' '  関数 で す 。 
) Python  から  C  関数 が 呼び出 さ れ る 際 に は 、 C  関数 は 呼び出 し 側 から 引数 へ の 参照 を 借用 し ま す 。 
C  関数 の 呼び出 し 側 は オブジェクト へ の 参照 を 所有 し て い る の で 、 借用 参照 の 生存 期間 が 保証 さ れ る の は 関数 が 処理 を 返 す まで で す 。 
この よう に し て 借用 参照 を 保存 し たり 他 に 渡 し たり し た い 場合 に のみ 、 Py _ INCREF ( )  を 使 っ て 所有 参照 に する 必要 が あ り ま す 。  Python  から 呼び出 さ れ た  C  関数 が 返 す 参照 は 所有 参照 で な けれ ば な り ま せ ん - -  所有 権 は 関数 から 呼び出 し 側 へ と 委譲 さ れ ま す 。 
Python  パッケージ イン デクス  ( Python  Package In dex,  PyPI )  は 、 distutils  で パッケージ 化 さ れ た 配布 物 に 関 する メタデータ を 保持 し て い ま す 。 
配布 物 の メタデータ を インデクス に 提出 する に は 、  Distutils  の コマンド  register  を 使 い ま す 。 
register  は 以下 の よう に 起動 し ま す : 
Distutils  は 以下 の よう な プロンプト を 出 し ま す : 
注意 :  ユーザ 名 と パスワード を ローカル の 計算 機 に 保存 し て お く と 、 この メニュー は 表示 さ れ ま せ ん 。  まだ  PyPI  に 登録 し た こと が な けれ ば 、 まず 登録 する 必要 が あ り ま す 。 
この 場合 選択 肢  2  番 を 選 び 、 リクエスト さ れ た 詳細 情報 を 入力 し て ゆ き ま す 。 
詳細 情報 を 提出 し 終え る と 、 登録 情報 の 承認 を 行 う ため の メール を 受け取 る はず で す 。  すでに 登録 を 行 っ た こと が あ れ ば 、 選択 肢  1  を 選べ ま す 。 
PyPI  は 提出 さ れ た 配布 物 の  ( 名前 、 バージョン )  の 各 組み合わせ に つ い て 記録 を 保持 し て い ま す 。 
ある 配布 物 名 に つ い て 最初 に 情報 を 提出 し た ユーザ が 、 その 配布 物 名 の オーナ  (owner )  に な り ま す 。 
オーナ は  register コマンド か 、 web  インタフェース を 介 し て 変更 を 提出 でき ま す 。 
オーナ は 他 の ユーザ を オーナ や メンテナ と し て 指名 でき ま す 。 
メンテナ は パッケージ 情報 を 編集 でき ま す が 、 他 の 人 を オーナ や メンテナ に 指名 する こと は でき ま せ ん 。  デフォルト で は 、  PyPI  は ある パッケージ に つ い て 全て の バージョン を 表示 し ま す 。 
特定 の バージョン を 非 表示 に し た けれ ば 、 パッケージ の Hidden  プロパティ を  yes  に 設定 し ま す 。 
この 値 は  web  インタフェース で 編集 し な けれ ば な り ま せ ん 。 
丸括弧 形式 と は 、 式 リスト の 一 形態 で 、 丸括弧 で 囲 っ た もの で す : 
丸 括弧 で 囲 わ れ た 式 の リスト は 、 個々 の 式 が 表現 する もの に な り ま す : リスト 内 に 少な く とも 一 つ の カンマ が 入 っ て い た 場合 、 タプル に な り ま す ; そう で な い 場合 、 式 の リスト を 構成 し て い る 単一 の 式 自体 の 値 に な り ま す 。  中身 が 空 の 丸括弧 の ペア は 、 空 の タプル オブジェクト を 表 し ま す 。 
タプル は 変更 不能 な の で 、 リテラル と 同じ 規則 が 適用 さ れ ま す  ( すなわち 、 空 の タプル が 二 箇所 で 使 わ れ る と 、 それ ら は 同じ オブジェクト に な る こと も あ る し 、 な ら な い こと も あ り ま す ) 。 
タプル は 丸括弧 で 作成 さ れ る の で は な く 、 カンマ に よ っ て 作成 さ れ る こと に 注意 し て くださ い 。 
例外 は 空 の タプル で 、 この 場合 に は 丸括弧 が 必要 で す  - -  丸括弧 の つ か な い 、 ` ` 何 も 記述 し な い 式  ( nothing ) ' ' を 使え る よう に し て しま う と 、 文法 が あいまい な もの に な っ て しま い 、 よく あ る タイプ ミス が 検出 さ れ な く な っ て しま い ま す 。 
PyArg _ ParseTuple ( )  は 、 以下 の よう に 宣言 さ れ て い ま す : 
引数 arg  は  C  関数 から  Python  に 渡 さ れ る 引数 リスト が 入 っ た タプル オブジェクト で な けれ ば な り ま せ ん 。 
format  引数 は 書式 化 文字 列 で 、 
の  ` ` 引数 の 解釈 と 値 の 構築 ' '  で 解説 さ れ て い る 書法 に 従 わ ね ば な り ま せ ん 。  残り の 引数 は 、 それぞれ の 変数 の アドレス で 、 書式 化 文字 列 から 決ま る 型 に な っ て い な けれ ば な り ま せ ん 。 
PyArg _ ParseTuple ( )  は  Python  側 から 与え られ た 引数 が 必要 な 型 に な っ て い る か 調べ る の に 対 し 、 PyArg _ ParseTuple ( )  は 呼び出し の 際 に 渡 さ れ た  C  変数 の アドレス が 有効 な 値 を 持 つ か 調べ られ な い こと に 注意 し て くださ い :  ここ で 間違い を 犯 す と 、 コード が クラッシュ する か も しれ ま せ ん し 、 少な く とも でたらめ な ビット を メモリ に 上書き し て しま い ま す 。 
慎重 に !  呼び出 し 側 に 提供 さ れ る オブジェクト へ の 参照 は すべて  借用 参照  ( borrowed  reference )  に な り ま す ;  これ ら の オブジェクト の 参照 カウント を デクリメント し て は な り ま せ ん ! 以下 に いく つ か の 呼び出 し 例 を 示 し ま す : 
int ok ; int  i ,  j ; long  k , l; const  char * s;int  size ;ok = PyArg _ ParseTuple ( args, " " ) ;\/* 引数 なし *\/\/* Python  で の 呼び出 し :  f ( )*\/
ok  = PyArg _ ParseTuple ( args,  " s " ,  s ) ;\/* 文字 列 *\/\/* Python  で の 呼び出 し 例 :  f ( 'whoops ! ')*\/
ok  = PyArg _ ParseTuple ( args, " lls " ,  k , l ,  s ) ;\/* 二 つ の  long  と 文字 列 *\/\/* Python  で の 呼び出 し 例 :  f ( 1 ,  2 , 'three ') *\/
ok  = PyArg _ ParseTuple ( args, " ( ii ) s # " ,  i ,  j , s ,  size) ;\/* 二 つ の  int  と 文字 列 、 文字 列 の サイズ も 返 す *\/\/* Python  で の 呼び出 し 例 :  f ( ( 1 ,  2 ) , 'three ') *\/
{ int  left , top ,  right ,  bottom ,  h , v ;ok = PyArg _ ParseTuple ( args,  " ( ( ii ) ( ii) ) ( ii ) " , left , top ,  right ,  bottom ,  h ,  v ) ;\/* 矩形 と 点 を 表現 する データ *\/\/* Python  で の 呼び出 し 例 : f ( ( ( 0 ,  0 ) ,  ( 400 ,  300 ) ) ,  ( 10 ,  10 ) ) *\/}
{ Py _ complex c ;ok = PyArg _ ParseTuple ( args,  " D : myfunction " ,  c) ;\/*  複素数 。 
エラー 発生 時 用 に 関数 名 も 指定 *\/\/* Python  で の 呼び出 し 例 :myfunction ( 1 + 2 j ) *\/}
PyArg _ ParseTupleAndKeywords ( )  は 、 以下 の よう に 宣言 さ れ て い ま す : 
arg  と  format  パラメタ は PyArg _ ParseTuple ( )  の もの と 同じ で す 。 
kwdict  パラメタ は キー ワード 引数 の 入 っ た 辞書 で 、  Python  ラン タイム システム から 第 三 パラメタ と し て 受け取 り ま す 。 
kw list  パラメタ は 各 パラメタ を 識別 する ため の 文字 列 から な る 、 NULL 終端 さ れ た リスト で す ;  各 パラメタ 名 は  format  中 の 型 情報 に 対 し て 左 から 右 の 順 に 照合 さ れ ま す 。 
成功 する と PyArg _ ParseTupleAndKeywords ( )  は 真 を 返 し 、 それ 以外 の 場合 に は 適切 な 例外 を 送出 し て 偽 を 返 し ま す 。 
注意 : キー ワード 引数 を 使 っ て い る 場合 、 タプル は 入れ子 に し て 使え ま せ ん ! kwlist  内 に 存在 し な い キー ワード パラメタ が 渡 さ れ た 場合 、 TypeError  の 送出 を 引き起こ し ま す 。 
以下 に キー ワード を 使 っ た モジュール 例 を 示 し ま す 。 
voidinitkeywdarg ( void ) {\/* モジュール を 作成 し て 関数 を 追加 する *\/ Py _ InitModule ( " keywdarg " , keywdarg _ methods ) ;}
pass  は ヌル 操作  ( null  operation )  で す  -- pass が 実行 さ れ て も 、 何 も 起き ま せ ん 。 
pass  は 、 例えば : 
def f ( arg ) :  pass#a function that  does nothing  ( yet) class  C :  pass#a class with  no methods  ( yet )  の よう に 、 構文 法 的 に は 文 が 必要 だ が 、 コード と し て は 何 も 実行 し た く な い 場合 の プレース ホルダ と し て 有用 で す 。 
Pen と RawPen オブジェクト は 、 demo ( ) が メソッド とし は 除 か れ ま す が 、 与え られ た ペン を 操作 する 上記 の すべて の グローバル 関数 を 持 っ て い ま す 。  メソッド に な っ て 強力 に な っ て い る メソッド は degrees ( ) だけ で す 。 
fullcircle は デフォルト で 360 で す 。 
物理 行 と は 、 利用 し て い る プラットフォーム で 行 終端 と し て 取り決め て い る 文字 列 で 終端 さ れ た もの で す 。 
Unix で は 、 行 終端 は  ASCII  LF  ( 行送り :  linefeed ) 文字 で す 。 
Windows  で は 、  ASCII  配列 の  CR  LF  ( 復帰 :  return  に 続 い て 行送り )  で す 。 
Macintosh  で は 、  ASCII  CR  ( 復帰 )  文字 で す 。 
以下 に あ る クラス に つ い て どう や っ て  picklle  化 の 振る舞い を 変更 する か の れい を 示 し ま す 。 
Text Reader  クラス は ファイル を 開 き 、 readline ( )  メソッド が 呼 ば れ る たび に 行 番号 と 行 の 内容 を 返 し ま す 。 
Text Reader  インスタンス が  pickle  化 さ れ た 場合 、 ファイル オブジェクト  以外 の  全て の 属性 が 保存 さ れ ま す 。 
インスタンス が unpickle  化 さ れ た 際 、 ファイル は 再度 開 か れ 、 以前 の ファイル 位置 から 読み出し を 再開 し ま す 。 
使用 例 は 以下 の よう に な る で しょ う : 
が  Python  プロセス 間 で うま く 働 く こと を 見 た い なら 、 先 に 進 む 前 に 他 の  Python  セッション を 開始 し て くださ い 。 
以下 の 振る舞い は 同じ プロセス で も 新た な プロセス で も 起こ り ま す 。 
参考 :  copy _ reg 
オブジェクト の インデクス 付き データベース ; pickle  を 使 い ま す 。 
オブジェクト の 浅 い コピー および 深 い コピー 。 
高 い パフォーマンス を 持 つ 組み込 み 型 整列 化 機構 。  . 
3 . 1 4 . 5 . 1  通常 の クラス インスタンス の  pickle  化 および  unpickle  化 
3 . 1 4 . 5 . 2  拡張 型 の  pickle  化 および 
pickle  化 さ れ た クラス インスタンス が unpickle  化 さ れ た とき 、 __init_ _( )  メソッド は 通常 呼び出 さ れ ま せ ん  。 
unpickle  化 の 際 に  __init_ _( )  が 呼び出 さ れ る 方 が 望まし い 場合 、 旧 スタイル クラス で は メソッド _ _ getinitargs_ _( )  を 定義 する こと が でき ま す 。 
この メソッド は クラス コンストラクタ  ( すなわち  __init_ _())  に 渡 さ れ る べ き  タプル を  返 さ な けれ ば な り ま せ ん 。 
_ _ getinitargs_ _( )  メソッド は  pickle  時 に 呼び出 さ れ ま す ; この 関数 が 返 す タプル は インスタンス の  pickle  化 データ に 組み込 ま れ ま す 。 
新 スタイル クラス で は 、 プロトコル  2  で 呼び出 さ れ る _ _ getnewargs_ _( )  を 定義 する 事 が でき ま す 。 
インスタンス 生成 時 に 内部 的 な 不変 条件 が 成立 する 必要 が あ っ たり 、 （ タプル や 文字 列 の よう に ） 型 の _ _new_ _( ) メソッド に 指定 する 引数 に よ っ て メモリ の 割り当て を 変更 する 必要 が あ る 場合 に は _ _ getnewargs_ _( ) を 定義 し て くださ い 。 
新 スタイル クラス C の インスタンス は 、 次 の よう に 生成 さ れ ま す 。 
ここ で args は 元 の オブジェクト の _ _ getnewargs_ _( ) メソッド を 呼び出 し た 時 の 戻 り 値 と な り ま す 。 _ _ getnewargs_ _( ) を 定義 し て い な い 場合 、 args は 空 の タプル と な り ま す 。 
クラス は 、 インスタンス の  pickle  化 方法 に さらに 影響 を 与え る こと が でき ま す ;  クラス が _ _ getstate__( )  メソッド を 定義 し て い る 場合 、 この メソッド が 呼び出 さ れ 、 返 さ れ た 状態 値 は インスタンス の 内容 と し て 、 インスタンス の 辞書 の 代わり に  pickle  化 さ れ ま す 。 
_ _ getstate__( )  メソッド が 定義 さ れ て い な い 場合 、 インスタンス の __dict_ _ の 内容 が  pickle  化 さ れ ま す 。 unpickle  化 で は 、 クラス が __setstate__( )  も 定義 し て い た 場合 、 unpickle  化 さ れ た 状態 値 と とも に 呼び出 さ れ ま す 
3 . 6  。 
__setstate__( )  メソッド が 定義 さ れ て い な い 場合 、 pickle  化 さ れ た 状態 は 辞書 型 で な けれ ば な ら ず 、 その 要素 は 新た な インスタンス の 辞書 に 代入 さ れ ま す 。 
クラス が _ _ getstate__( )  と __setstate__( )  の 両方 を 定義 し て い る 場合 、 状態 値 オブジェクト は 辞書 で あ る 必要 は な く 、 これ ら の メソッド は 期待 通り の 動作 を 行 い ま す 。 
警告 : 新し い スタイル の クラス に お い て _ _ getstate__( )  が 負値 を 返 す 場合 、 __setstate__( )  メソッド は 呼 ば れ ま せ ん 。 
. . .  化 さ れ た 状態 値 と とも に 呼び出 さ れ ま す 
これ ら の メソッド は クラス インスタンス の コピー を 実装 する 際 に も ｔ 用い られ ま す 
. . . は 期待 通り の 動作 を 行 い ま す 。 
この プロトコル は また 、 
で 定義 さ れ て い る 浅 い コピー や 深 い コピー 操作 で も 用い られ ま す 。 
3 . 1 4 . 4  何 を  pickle  化 し たり 
3 . 1 4 . 5 . 1  通常 の クラス インスタンス の  pickle  化 および 
この 節 で は  pickler\/unpickler  と 直列 化 対象 の オブジェクト と の 間 の インタフェース を 定義 する `` pickle  化 プロトコル ' ' に つ い て 記述 し ま す 。 
この プロトコル は 自分 の オブジェクト が どの よう に 直列 化 さ れ たり 非 直列 化 さ れ たり する か を 定義 し 、 カスタマイズ し 、 制御 する ため の 標準 的 な 方法 を 提供 し ま す 。 
この 節 で の 記述 は 、 unpickle  化 環境 を 不信 な  pickle  化 データ に 対 し て 安全 に する ため に 使 う 特殊 な カスタマイズ 化 に つ い て は カバー し て い ま せ ん ;  詳細 は 3 . 1 4 . 6  を 参照 し て くださ い 。 
3 . 1 4 . 5 . 3  外部 オブジェクト の  pickle  化 および 
デフォルト で は 、 逆  pickle  化 は  pickle  化 さ れ た データ 中 に 見つか っ た クラス を import  する こと に な り ま す 。 
自前 の unpickler  を カスタマイズ する こと で 、 何 が unpickle  化 さ れ て 、 どの メソッド が 呼び出 さ れ る か を 厳密 に 制御 する こと は でき ま す 。 
しかし 不運 な こと に 、 厳密 に なに を 行 う べ き か は pickle  と  cPickle  の どちら を 使 う か で 異な り ま す 
3 . 10  。 
pickle  モジュール で は 、 Unpickler  から サブ クラス を 導出 し 、 load _ global ( )  メソッド を 上書き する 必要 が あ り ま す 。 load _ global ( )  は  pickle  データ 列 から 最初 の  2  行 を 読 ま な けれ ば な ら ず 、 ここ で 最初 の 行 は その クラス を 含 む モジュール の 名前 、 2  行目 は その インスタンス の クラス 名 に な る はず で す 。 
次 に この メソッド は 、 例えば モジュール を インポート し て 属性 を 掘り起こ す など し て クラス を 探 し 、 発見 さ れ た もの を  unpickler  の スタック に 置 き ま す 。 
あるいは 全て の インスタンス に 対 し て  unpickling  を 許可 し た く な い なら エラー を 送出 し て くださ い 。 
この からくり が ハック の よう に 思え る なら 、 あなた は 間違 っ て い ま せ ん 。 
属性 が  None  の 場合 、 インスタンス を  unpickle  し よう と する 試み は 全て  UnpicklingError  を 送出 し ま す 。 
属性 が 関数 の 場合 、 この 関数 は モジュール 名 また は クラス 名 を 受理 し 、 対応 する クラス オブジェクト を 返 さ な く て は な り ま せ ん 。 
. . .  の どちら を 使 う か で 異な り ま す 
注意 し て くださ い :  ここ で 記述 さ れ て い る 機構 は 内部 の 属性 と メソッド を 使 っ て お り 、 これ ら は Python  の 将来 の バージョン で 変更 さ れ る 対象 に な っ て い ま す 。 
われわれ は 将来 、 この 挙動 を 制御 する ため の 、 pickle  および  cPickle  の 両方 で 動作 する 、 共通 の インタフェース を 提供 する つもり で す 。 
プレーヤー オブジェクト （ open ( ) で 返 さ れ ま す ） に は 以下 の メソッド が あ り ま す ： 
CD - ROM ドライブ の イジェクト ボタン の ロック を 解除 し て 、 ユーザ が CD キャディ を 排出 する の を 許可 し ま す 。 
メソッド readda ( ) の パラメータ num _frames と し て 最適 の 値 を 返 し ま す 。 
最適 値 は CD - ROM ドライブ から の 連続 し た データ フロー が 許可 さ れ る 値 が 定義 さ れ ま す 。 
プレーヤー オブジェクト と 関連 付け られ た リソース を 解放 し ま す 。 
close ( ) を 呼び出 し た あと で は 、 その オブジェクト に 対 する メソッド は 使用 でき ま せ ん 。 
CD - ROM ドライブ から キャディ を 排出 し ま す 。 
CD - ROM ドライブ の 現在 の 状態 に 関 する 情報 を 返 し ま す 。 
返 さ れ る 情報 は 以下 の 値 から な る タプル で す ： state 、 track 、 rtime、 atime、 ttime、 first 、 last 、 scsi_ audio 、 cur_block 。 rtime は 現在 の トラック の 初め から の 相対 的 な 時間 ； atime は ディスク の 初め から の 相対 的 な 時間 ； ttime は ディスク の 全 時間 で す 。 
それぞれ の 値 の 詳細 に つ い て は 、 マニュアル ページ  CD getstatus ( 3 dm ) を 参照 し て くださ い 。 
state の 値 は 以下 の うち の どれ か 一 つ で す ： ERROR 、 NO DISC 、 READ Y 、 PLAYING 、 PAUSED 、 STILL 、 CDROM 。 
特定 の トラック に つ い て の 情報 を 返 し ま す 。 
返 さ れ る 情報 は 、 トラック の 開始 時刻 と トラック の 時間 の 長 さ の 二 つ の 要素 から な る タプル で す 。 
分 、 秒 、 フレーム の 3 つから な る 絶対 的 な タイム コード を 、 与え られ た CD - ROM ドライブ の 相当 する 論理 ブロック 番号 に 変換 し ま す 。 
時刻 を 比較 する に は msftoblock ( ) より も msftoframe ( ) を 使 う べ き で す 。 
論理 ブロック 番号 は 、 CD - ROM ドライブ に よ っ て 必要 と さ れ る オフセット 値 が 違 う ため 、 フレーム ナンバー と 異な り ま す 。 
CD - ROM ドライブ の オーディオ CD の 特定 の トラック から 再生 を 開始 し ま す 。 
CD - ROM ドライブ の ヘッドフォン 端子 と （ 備え て い る なら ） オーディオ 端子 から 出力 さ れ ま す 。 
ディスク の 最後 で 再生 は 停止 し ま す 。  start は 再生 を 開始 する CD の トラック ナンバー で す ； play が 0 なら 、 CD は 最初 の 一時 停止 状態 に な り ま す 。 
その 状態 から メソッド togglepause ( ) で 再生 を 開始 でき ま す 。 
play ( ) と 似 て い ま す が 、 開始 位置 を トラック ナンバー の 代わり に 分 、 秒 、 フレーム で 与え ま す 。 
play ( ) と 似 て い ま す が 、 トラック の 終わり で 再生 を 停止 し ま す 。 
play ( ) と 似 て い ま す が 、 指定 し た 絶対 的 な 時刻 から 再生 を 開始 し て 、 指定 し た トラック で 終了 し ま す 。 
CD - ROM ドライブ の イジェクト ボタン を ロック し て 、 ユーザ が CD キャディ を 排出 でき な い よう に し ま す 。 
CD - ROM ドライブ に マウント さ れ た オーディオ CD から 、 指定 し た フレーム 数 を 読み込 み ま す 。 
オーディオ フレーム の データ を 示 す 文字 列 を 返 し ま す 。 
この 文字 列 は その まま パーザ オブジェクト の メソッド parseframe ( ) へ 渡 す こと が でき ま す 。 
CD - ROM から 次 に デジタル オーディオ データ を 読み込 む 開始 位置 の ポインタ を 設定 し ま す 。 
ポインタ は minutes、 seconds 、 frames で 指定 し た 絶対 的 な タイム コード の 位置 に 設定 さ れ ま す 。 
返 さ れ る 値 は ポインタ が 設定 さ れ た 論理 ブロック 番号 で す 。 
ポインタ は 指定 し た 論理 ブロック 番号 に 設定 さ れ ま す 。 
返 さ れ る 値 は ポインタ が 設定 さ れ た 論理 ブロック 番号 で す 。 
ポインタ は 指定 し た トラック に 設定 さ れ ま す 。 
返 さ れ る 値 は ポインタ が 設定 さ れ た 論理 ブロック 番号 で す 。 
現在 実行 中 の 再生 を 停止 し ま す 。 
再生 中 なら CD を 一時 停止 し 、 一時 停止 中 なら 再生 し ま す 。 
poll ( )  システム コール は ほとんど の  Unix  システム で サポート さ れ て お り 、 非常 に 多数 の クライアント に 同時 に サービス を 提供 する よう な ネットワーク サーバ が 高 い 拡張 性 を 持て る よう に し て い ま す 。 
poll ( )  に 高 い 拡張 性 が あ る の は 、 select ( )  が ビット 対応 表 を 構築 し 、 対象 ファイル の 記述 子 に 対応 する ビット を 立て 、 その 後 全て の 対応 表 の 全て の ビット を 線形 探索 する の に 対 し 、 poll ( )  は 対象 の ファイル 記述 子 を 列挙 する だけ で よ い から で す 。 select ( )  は  O ( 最大 の ファイル 記述 子 番号 )  な の に 対 し 、 poll ( )  は  O ( 対象 と する ファイル 記述 子 の 数 )  で 済 み ま す 。 
ファイル 記述 子 を ポーリング オブジェクト に 登録 し ま す 。 
これ 以降 の poll ( )  メソッド 呼び出し で は 、 その ファイル 記述 子 に 処理 待ち 中 の I \/ O  イベント が あ る か どう か を 監視 し ま す 。  fd  は 整数 か 、 整数 値 を 返 す  fileno( )  メソッド を 持 つ オブジェクト を 取 り ま す 。 
ファイル オブジェクト も 通常  fileno( )  を 実装 し て い る の で 、 引数 と し て 使 う こと が でき ま す 。 
eventmask  は オプション の ビット マスク で 、 どの タイプ の  I \/ O  イベント を 監視 し た い か を 記述 し ま す 。  この 値 は 以下 の 表 で 述べ る 定数  POLLIN 、 POLLPRI 、 および  POLLOUT  の 組み合わせ に する こと が でき ま す 。 
ビット マスク を 指定 し な い 場合 、 標準 の 値 が 使 わ れ 、 3  種 の イベント 全て に 対 し て 監視 が 行 わ れ ま す 。 
読み 出せ る データ の 存在 
緊急 の 読み出し データ の 存在 
書き 出せ る か どう か :  書き出 し 処理 が ブロック し な い か どう か 
何 ら か の エラー 状態 
ハング アップ 
無効 な 要求 :  記述 子 が 開 か れ て い な い 
すでに 登録 済み の ファイル 記述 子 を 登録 し て も エラー に は な ら ず 、 一 度 だけ 登録 し た 場合 と 同じ 効果 に な り ま す 。 
ポーリング オブジェクト に よ っ て 追跡 中 の ファイル 記述 子 を 登録 解除 し ま す 。 
register ( )  メソッド と 同様 に 、 fd  は 整数 か 、 整数 値 を 返 す  fileno( )  メソッド を 持 つ オブジェクト を 取 り ま す 。  登録 さ れ て い な い ファイル 記述 子 を 登録 解除 し よ う と する と KeyError  例外 が 送出 さ れ ま す 。 
fd  は ファイル 記述 子 で 、 event  は 該当 する ファイル 記述 子 に つ い て 報告 さ れ た イベント を 表 す ビット マスク で す  - -  例えば POLLIN  は 入力 待ち を 示 し 、 POLLOUT  は ファイル 記述 子 に 対 する 書き込み が 可能 を 示 す 、 など で す 。 
空 の リスト は 呼び出し が タイム アウト し た か 、 報告 す べ き イベント が どの ファイル 記述 子 で も 発生 し な かっ た こと を 示 し ま す 。 
timeout  が 与え られ た 場合 、 処理 を 戻 す まで 待機 する 時間 の 長 さ を ミリ 秒 単位 で 指定 し ま す 。 timeout  が 省略 さ れ たり 、 負 の 値 で あ っ たり 、 あるいは  None  の 場合 、 その ポーリング オブジェクト が 監視 し て い る 何 ら か の イベント が 発生 する まで ブロック し ま す 。 
これ は （ エラー チェック も な い ） 最も 小さな サンプル で 、 メール ボックス を 開 い て 、 すべて の メッセージ を 取り出 し 、 プリント し ま す 。 
モジュール の 末尾 に 、 より 広 い 範囲 の 使用 例 と な る test セクション が あ り ま す 。 
インスタンス の デバッグ レベル を 指定 し ま す 。 
これ は デバッギング アウトプット の 表示 量 を コントロール し ま す 。 
デフォルト 値 の  0  は 、 デバッギング アウトプット を 表示 し ま せ ん 。 
値 を  1  と する と 、 デバッギング アウトプット の 表示 量 を 適当 な 量 に し ま す 。  これ は 大体 、 リクエスト ごと 1 行 に な り ま す 。 
値 を  2  以上 に する と 、 デバッギング アウトプット の 表示 量 を 最大 に し ま す 。  コントロール 中 の 接続 で 送受信 さ れ る 各行 を ログ に 出力 し ま す 。 
POP 3 サーバー から 送 ら れ る グリーティング メッセージ を 返 し ま す 。 
user コマンド を 送出 し ま す 。  応答 は パスワード 要求 を 表示 し ま す 。 
POP 3 サーバー に ログ オン する の に 、 より セキュア な APOP 認証 を 使用 し ま す 。 
POP 3 サーバー に ログ オン する の に 、 （ UNIX の r - コマンド と 同様 の ） RPOP 認証 を 使用 し ま す 。 
メール ボックス の 状態 を 得 ま す 。 
結果 は 2 つ の integer から な る タプル と な り ま す 。  ( message count , mailbox  size ) . 
which  が 与え られ る と 、 それ に よ り メッセージ を 指定 し ま す 。 
which  番 の メッセージ 全体 を 取り出 し 、 その メッセージ に 既読 フラグ を 立て ま す 。  結果 は  ( response ,  ['line ' , . . . ] , octets ) と い う 形式 で 表 さ れ ま す 。 
which  番 の メッセージ に 削除 の ため の フラグ を 立て ま す 。 
ほとんど の サーバ で 、 QUIT コマンド が 実行 さ れ る まで は 実際 の 削除 は 行 わ れ ま せ ん （ もっとも 良 く 知 ら れ た 例外 は  Eudora  QPOP で 、 その 配送 メカニズム は RFC に 違反 し て お り 、 どんな 切断 状況 で も 削除 操作 を 未 解決 に し て い ま す ） 。 
メール ボックス の 削除 マーク すべて を 取り消 し ま す 。 
何 も し ま せ ん 。 
接続 保持 の ため に 使 わ れ ま す 。 
Signoff : commit  changes , unlock mailbox , drop  connection . サイン オフ ： 変更 を コミット し 、 メール ボックス を アン ロック し て 、 接続 を 破棄 し ま す 。 
メッセージ ヘッダ と  howmuch  で 指定 し た 行数 の メッセージ を 、 which で 指定 し た メッセージ 分 取り出 し ま す 。 
と い う 形式 の メッセージ 、 また は ( response ,  [ 'mesgnum uid ' , . . . ] ,o ctets ) と い う 形式 の リスト と な り ま す 。 
POP 3 _ SSL  クラス の インスタンス は 追加 の メソッド を 持 ち ま せ ん 。 
この サブ クラス の インターフェイス は 親 クラス と 同じ で す 。 
何 ら か の 形式 で プロセス 間 通信 を 利用 し て い る 際 に は 常 に 、 制御 フロー に つ い て 注意 深 く 考え る 必要 が あ り ま す 。 
これ は この モジュール  ( あるいは 
モジュール に おけ る 等価 な 機能 )  で 生成 さ れ る ファイル オブジェクト の 場合 に も あてはま り ま す 。  親 プロセス が 子 プロセス の 標準 出力 を 読み出 し て い る 一方 で 、 子 プロセス が 大量 の データ を 標準 エラー 出力 に 書き込 ん で い る 場合 、 この 子 プロセス から 出力 を 読み出 そ う と する と デッド ロック が 発生 し ま す 。 
同様 の 状況 は 読み書き の 他 の 組み合わせ で も 生 じ ま す 。 
に 従 う よう に し 、 子 プロセス で 以下 : 
import osimportsys# note  that each  of these  print statements#  writesa  single  long  stringprint sys . stderr ,  400  * 'this  is a test \n'os . close ( sys . stderr . fileno( ) ) print sys . st dout ,  400  * 'this  is another  test \n' の よう な コード に する こと で しょ う 。 
とりわけ 、 sys . stderr  は 全て の データ を 書き込 ん た 後 に 閉じ られ な けれ ば な ら な い と い う こと に 注意 し て くださ い 。  さも な けれ ば 、 readlines ( )  は 返 っ て き ま せ ん 。 
また 、 sys . stderr . close ( )  が stderr  を 閉じ な い よう に os . close ( )  を 使 わ な けれ ば な ら な い こと に も 注意 し て くださ い 。 
( そう で な く 、 sys . stderr  に 関連 付け る と 、 暗黙 の うち に 閉じ られ て しま う の で 、 それ 以降 の エラー が 出力 さ れ ま せ ん ) 。  より 一般 的 な アプローチ を を サポート する 必要 が あ る アプリケーション で は 、 パイプ 経由 の  I \/ O  を select ( )  ループ で まとめ る か 、 個々 の  popen * ( )  関数 や  Popen * クラス が 提供 する 各々 の ファイル に 対 し て 、 個別 の スレッド を 使 っ て 読み出し を 行 い ま す 。 
Popen 3  および  Popen 4  クラス の インスタンス は 以下 の メソッド を 持 ち ま す : 
子 プロセス が まだ 終了 し て い な い 際 に は  - 1  を 、 そう で な い 場合 に は リターン コード を 返 し ま す 。 
子 プロセス の 状態 コード 出力 を 待機 し て 返 し ま す 。 
状態 コード で は 子 プロセス の リターン コード と 、 プロセス が  exit ( )  に よ っ て 終了 し た か 、 あるいは シグナル に よ っ て 死 ん だ か に つ い て の 情報 を 符号 化 し て い ま す 。 
状態 コード の 解釈 を 助け る ため の 関数 は 
モジュール で 定義 さ れ て い ま す ;  6 . 1 . 5  節 の  W * ( )  関数 ファミリ を 参照 し て くださ い 。 
以下 の 属性 も 利用 可能 で す : 
子 プロセス から の 出力 を 提供 する ファイル オブジェクト で す 。 
Poepn 4  インスタンス の 場合 、 この 値 は 標準 出力 と 標準 エラー 出力 の 両方 を 提供 する オブジェクト に な り ま す 。 
子 プロセス へ の 入力 を 提供 する ファイル オブジェクト で す 。 
コンストラクタ に  capturestderr  を 渡 し た 際 に は 子 プロセス から の 標準 エラー 出力 を 提供 する ファイル オブジェクト で 、 そう で な い 場合 None  に な り ま す 。 
Popen 4  インスタンス で は 、 この 値 は 常 に  None  に な り ま す 。 
子 プロセス の プロセス 番号 で す 。 
posix  で は 以下 の データ 項目 を 定義 し て い ま す : 
インタプリタ が 起動 し た 時点 の 環境 変数 文字 列 を 表現 する 辞書 で す 。 
例えば 、 environ [ ' HOME ' ]  は ホーム ディレクトリ の パス 名 で 、 C  言語 の  getenv ( " HOME " )  と 等価 で す 。  この 辞書 を 変更 し て も 、 execv ( ) 、 popen ( )  また は system ( )  など に 渡 さ れ る 環境 変数 文字 列 に は 影響 し ま せ ん ; そう し た 環境 を 変更 する する 必要 が あ る 場合 、 environ  を  execve ( )  に 渡 す か 、 system ( )  また は popen ( )  の 命令 文字 列 に 変数 の 代入 や  export  文 を 追加 し て くださ い 。 
注意 : 
モジュール で は 、 もう 一 つ の  environ  実装 を 提供 し て お り 、 環境 変数 が 変更 さ れ た 場合 、 その 内容 を 更新 する よう に な っ て い ま す 。 
os . environ  を 更新 し た 場合 、 この 辞書 は 古 い 内容 を 表 し て い る こと に な っ て しま う の で 、 この こと に も 注意 し て くださ い 。 
posix  モジュール 版 を 直接 アクセス する より も 、 
モジュール 版 を 使 う 方 が 推奨 さ れ て い ま す 。 
モジュール の ドキュメント を 参照 し て くださ い 。 
いく つ か の オペレーティング システム  ( AIX ,  HPIX ,  Irix  および  Solaris が 含 ま れ ま す )  は 、 int  および  long  を  32  ビット 値 と する  C  プログラム モデル で  2 Gb  を 超え る サイズ の ファイル の サポート を 提供 し て い ま す 。 
この サポート は 典型 的 に は  64  ビット 値 の オフセット 値 と 、 そこ から の 相対 サイズ を 定義 する こと で 実現 し て い ま す 。 
この よう な ファイル は 時 に ラージ ファイル  ( largefiles )  と 呼 ば れ ま す 。  Python  で は 、 off_t  の サイズ が  long  より 大き く 、 かつ  long  long  型 を 利用 する こと が でき て 、 少な く とも  off_t 型 と 同じ くらい 大きな サイズ で あ る 場合 、 ラージ ファイル の サポート が 有効 に な り ま す 。 
この 場合 、 ファイル の サイズ 、 オフセット および Python  の 通常 整数 型 の 範囲 を 超え る よう な 値 の 表現 に は  Python  の 長 整数 型 が 使 わ れ ま す 。 
例えば 、 ラージ ファイル の サポート は  Irix  の 最近 の バージョン で は 標準 で 有効 で す が 、 Solaris  2 . 6  および  2 . 7  で は 、 以下 の よう に する 必要 が あ り ま す : 
3 . 1  インストール 後 実行 スクリプト  ( postinstallation  script ) 
実行 可能 な インストーラ は 、 Windows  環境 で は ごく 自然 な バイナリ 配布 形式 で す 。 
インストーラ は 結構 な グラフィカル ユーザ インタフェース を 表示 し て 、 モジュール 配布 物 に 関 する いく つ か の 情報 を  setup  スクリプト 内 の メタデータ から 取り出 し て 示 し 、 ユーザ が いく つ か の オプション を 選 ん だり 、 インストール を 決行 する か 取りやめ る か 選 ん だり でき る よう に し ま す 。  メタデータ は  setup  スクリプト から 取り出 さ れ る の で 、 Windows  インストーラ の 作成 は 至 って 簡単 で 、 以下 を 実行 する だけ で す : 
あるいは 、 bdist  コマンド を - - formats  オプション 付き で 実行 し ま す : 
( pure Python  モジュール と パッケージ だけ の 入 っ た )  pure  モジュール 配布 物 の 場合 、 作成 さ れ る インストーラ は 実行 バージョン に 依存 し な い 形式 に な り 、  foo - 1 . 0 . win 32 . exe  の よう な 名前 に な り ま す 。 
従 っ て 、 サポート し た い 全て の バージョン の  Python  に 対 し て 、 別々 の インストーラ を 作成 し な けれ ば な り ま せ ん 。  インストーラ は 、 ターゲット と な る システム に インストール を 実行 し た 後 、  pure  モジュール を 通常  ( normal )  モード と 最適 化  (optimizing ) モード で コンパイル し よう と 試み ま す 。 
--title  オプション を 使 え ば 、 タイトル を 別 の テキスト に 変更 でき ま す 。  インストーラ ファイル は  ` ` 配布 物 ディレクトリ  ( distribution directory ) ' '--  通常 は  dist\/ に 作成 さ れ ま す が 、 -- dist - dir  オプション で 指定 する こと も でき ま す 。 
Python  2 . 3  から は 、 インストール 実行 後 スクリプト を - - install - script  オプション で 指定 でき る よう に な り ま し た 。 
これ ら の 関数 は 、 インストール 後 実行 スクリプト が ディレクトリ や ファイル を 作成 し た 際 に 呼び出 さ な けれ ば な り ま せ ん 。 
この 関数 は アン インストーラ に 作成 さ れ た path を 登録 し 、 配布 物 を アン インストール する 際 に ファイル が 消 さ れ る よう に し ま す 。 
安全 を 期 す ため に 、 ディレクトリ は 空 の 時 に のみ 削除 さ れ ま す 。 
この 関数 は 、 「 スタート メニュー 」 や 「 デスクトップ 」 と い っ た 、 Windows  に お け る 特殊 な フォルダ 位置 を 取得 する 際 に 使え ま す 。 
この 関数 は フォルダ の フル パス を 返 し ま す 。 
csidl_string  は 以下 の 文字 列 の いずれ か で な けれ ば な り ま せ ん :  " CSIDL _ APPDATA " " CSIDL _ COMMON _ STARTMENU " " CSIDL _ STARTMENU " " CSIDL _ COMMON _ DESKTOPDIRECTORY " " CSIDL _ DESKTOPDIRECTORY " " CSIDL _ COMMON _ STARTUP " " CSIDL _ STARTUP " " CSIDL _ COMMON _ PROG RAMS " " CSIDL _ PROG RAMS " " CSIDL _ FONTS " 
詳細 に つ い て は 、  SHGetSpecialFolderPath ( )  関数 に 関 する Microsoft  の  ドキュメント を 参照 し て くださ い 。 
この 関数 は ショート カット を 作成 し ま す 。 
target  は ショート カット に よ っ て 起動 さ れ る プログラム へ の パス で す 。 
これ に つ い て も 、 詳し く は IShellLink  インタフェース に 関 する  Microsoft  の  ドキュメント を 参照 し て くださ い 。 
従 っ て 、 べ き 乗 演算 子 と 単項 演算 子 から な る 演算 列 が 丸括弧 で 囲 わ れ て い な い 場合 、 演算 子 は 右 から 左 へ と 評価 さ れ ま す  ( この 演算 規則 は 、 被 演算 子 の 評価 順序 を 縛 る 規則 で は あ り ま せ ん ) 。  べ き 乗 演算 子 は 、 二 つ の 引数 で 呼び出 さ れ る 組み込 み 関数  pow ( )  と 同じ 意味 付け を 持 っ て い ま す 。 
引数 は まず 共通 の 型 に 変換 さ れ ま す 。 
結果 の 型 は 、 型 強制 後 の 引数 の 型 に な り ま す 。  引数 型 を 混合 する と 、 二 項 算術 演算 に お け る 型 強制 規則 が 適用 さ れ ま す 。 
整数 や 長 整数 の 被 演算 子 の 場合 、 第 二 引数 が 負 で な い 限り 、 結果 は  ( 型 強制 後 の )  被 演算 子 と 同じ に な り ま す ;  第 二 引数 が 負 の 場合 、 全て の 引数 は 浮動 小数 点 型 に 変換 さ れ 、 浮動 小数 点 型 が 返 さ れ ま す 。 
例えば 、 10 * * 2  は  100  を 返 し ま す が 、 10 * * - 2  は  0 . 0 1  を 返 し ま す 。  ( 上述 の 仕様 の うち 、 最後 の もの は Python  2 . 2  で 追加 さ れ ま し た 。 
負 の 数 を 小数 で べ き 乗 する と  ValueError に な り ま す 。 
この マーク アップ は 、 ドキュメント 中 で 述べ て い る ソフトウェア の バージョン 番号 を 設定 し ま す 。 
この マーク アップ は 、 ドキュメント が 扱 っ て い る ソフトウェア の  ` ` 短 い 形式 の ' ' バージョン 番号 を sver  に し ま す 。 
6 . 2  メタ 情報 マーク アップ  ご 意見 や ご 指摘 を お 寄せ に な り た い 方 は 、 
一 次 語 は 、 言語 に お い て 最も 結合 の 強 い 操作 を 表 し ま す 。  文法 は 以下 の よう に な り ま す : 
5 . 3 . 1  属性 参照 
print  は 、 式 を 逐次 的 に 評価 し 、 得 られ た オブジェクト を 標準 出力 に 書き出 し ま す 。 
オブジェクト が 文字 列 で な けれ ば 、 まず 文字 列 変換 規則 を 使 っ て 文字 列 に 変換 さ れ 、 次いで  ( 得 られ た 文字 列 か 、 オリジナル の 文字 列 が )  書き出 さ れ ま す 。 
出力 系 の 現在 の 書き出 し 位置 が 行頭 に あ る と 考え られ る 場合 を 除 き 、 各 オブジェクト の 出力 前 に スペース が 一 つ 出力 さ れ ま す 。 
行頭 に あ る 場合 と は 、 ( 1 )  標準 出力 に まだ 何 も 書き出 さ れ て い な い 場合 、 ( 2 )  標準 出力 に 最後 に 書き出 さ れ た 文字 が  " n " で あ る 、 また は  ( 3 )  標準 出力 に 対 する 最後 の 書き出 し 操作 が  print  文 に よ る もの で は な い 場合 、 で す 。 
( こう し た 理由 から 、 場合 に よ っ て は 空 文字 を 標準 出力 に 書き出 す と 便利 な こと が あ り ま す 。 
)  注意 : 組み込み の ファイル オブジェクト で な い 、 ファイル オブジェクト に 似 た 動作 を する オブジェクト で は 、 組み込み の ファイル オブジェクト が 持 つ 上記 の 性質 を 適切 に エミュレート し て い な い こと が あ る ため 、 当て に し な い ほう が よ い で しょ う 。 
print  文 が カンマ で 終了 し て い な い 限り 、 末尾 に は 文字 " n "  が 書き出 さ れ ま す 。 
この 仕様 は 、 文 に 予約 語 print  が あ る 場合 のみ の 動作 で す 。 
標準 出力 は 、 組み込 み モジュール  sys  内 で  st dout  と い う 名前 の ファイル オブジェクト と し て 定義 さ れ て い ま す 。 
該当 する オブジェクト が 存在 し な い か 、 オブジェクト に  write ( ) メソッド が な い 場合 、 RuntimeError 例外 が 送出 さ れ ま す 。  . 
print  に は 、 上 で 説明 し た 構文 の 第 二 形式 で 定義 さ れ て い る 拡張 形式 
の 直後 に くる 最初 の 式 の 値 評価 結果 は  `` ファイル 類似  ( file - like ) ' ' な オブジェクト 、 とりわけ 上 で 述べ た よう に  write ( )  メソッド を 持 つ オブジェクト で な けれ ば な り ま せ ん 。 
この 拡張 形式 で は 、 ファイル オブジェクト を 指定 する 式 より も 後ろ の 式 が 、 指定 さ れ た ファイル オブジェクト に 出力 さ れ ま す 。 
最初 の 式 の 値 評価 結果 が  None  に な っ た 場合 、  sys . st dout  が 出力 ファイル と し て 使 わ れ ま す 。 
致命 的 エラー メッセージ  ( fatal error  message )  を 出力 し て プロセス を 強制 終了  ( kill )  し ま す 。 
後 始末 処理 は 行 わ れ ま せ ん 。 
この 関数 は 、 Python  インタプリタ を 使 い 続け る の が 危険 で あ る よう な 状況 が 検出 さ れ た とき ;  例えば 、 オブジェクト 管理 が 崩壊 し て い る と 思 わ れ る とき に のみ 、 呼び出 さ れ る よう に し な けれ ば な り ま せ ん 。 
Unix で は 、 標準  C  ライブラリ 関数 abort ( ) 
を 呼び出 し て  core を 生成 し よ う と 試み ま す 。 
現在 の プロセス を 終了  ( exit )  し ま す 。 
この 関数 は Py _ Finalize ( ) 
を 呼び出 し 、 次いで 標準  C  ライブラリ 関数 exit ( status ) 
を 呼び出 し ま す 。 
から 呼び出 さ れ る 後 始末 処理 を 行 う 関数  ( cleanup function )  を 登録 し ま す 。 
後 始末 関数 は 引数 無し で 呼び出 さ れ 、 値 を 返 し ま せ ん 。 
最大 で  32  の 
後 始末 処理 関数 を 登録 でき ま す 。 
登録 に 成功 する と 、 Py _ AtExit ( )  は  0  を 返 し ま す ;  失敗 する と  - 1  を 返 し ま す 。 
最後 に 登録 し た 後 始末 処理 関数 から 先 に 呼び出 さ れ ま す 。  各 関数 は 高々 一 度 しか 呼び出 さ れ ま せ ん 。 
Python  の 内部 的 な 終了 処理 は 後 始末 処理 関数 より 以前 に 完了 し て い る の で 、 func  から は いかなる  Python  API  も 呼び出 し て は な り ま せ ん 。 
プロファイラ は  イベント を ハンドリング の 際 の  time 関数 呼出 し および その 値 を 保存 する ため の オーバーヘッド を 補正 する ため の 、 定数 を 持 っ て い ま す 。 
デフォルト の 値 は  0  で す 。  以下 の 手順 で 、 プラットフォーム に 合 っ た 、 より 適切 な 定数 が 得 られ ま す ( 前節 「 制限 事項 」 の 説明 を 参照 ) 。 
import profile #  1 .  算出 し た 補正 値  ( your_ computed_bias )  を これ 以降 生成 する #  Profile  インスタンス に 適用 する 。 
profile . Profile . bias = your_ computed_bias #  2 .  特定 の  Profile  インスタンス に 補正 値 を 適用 する 。 
pr =  profile . Profile ( ) pr . bias = your_ computed_bias #  3 .  インスタンス の コンストラクタ に 補正 値 を 指定 する 。 
方法 を 選択 し た ら 、 補正 値 は 小さめ に 設定 し た 方 が 良 い で しょ う 。  プロファイル の 結果 に 負 の 値 が 表われ る ` ` 確率 が 少な く ' ' な る はず で す 。 
. . . 一定 の 結果 が 得 られ た ら 、 それ を 使 う 方法 に は 3 通り あ り ま す 。 
Python  2 . 2  より 前 の バージョン で は プロファイラ の ソース コード に 補正 値 と し て 埋め込 ま れ た 定数 を 直接 編集 する 必要 が あ り ま し た 。 
今 で も 同じ こと は 可能 で す が 、 その 方法 は 説明 し ま せ ん 。  なぜ なら 、 もう ソース を 編集 する 必要 が な い から で す 。 
10 . 2  旧 バージョン の プロファイラ と の 違い 
この 節 は  `` マニュアル なんか 読 み た く な い 人 ' ' の ため に 書 か れ て い ま す 。 
ここ で は きわめて 簡単 な 概要 説明 と アプリケーション の プロファイリング を 手っとり 早 く おこな う 方法 だけ を 解説 し ま す 。 main  エントリ に あ る 関数  foo( )  を プロファイル し た い とき 、 モジュール に 次 の 内容 を 追加 し ま す 。 
この よう に 書 く こと で  foo( )  を 実行 する と 同時 に 一連 の 情報 ( プロファイル ) が 表示 さ れ ま す 。 
この 方法 は インタプリタ 上 で 作業 を し て い る 場合 、 最も 便利 な や り 方 で す 。 
プロファイル の 結果 を ファイル に 残 し 、 後 で 検証 し た い とき は 、 run ( )  の 2 番 目 の 引数 に ファイル 名 を 指定 し ま す 。 
スクリプト ファイル  profile . py  を 使 っ て 、 別 の スクリプト を プロファイル する こと も 可能 で す 。 
次 の よう に 実行 し ま す 。 
profile . py  は オプション と し て コマンドライン 引数 を 2 つ 受け取 り ま す 。 
- s  は 標準 出力 ( つまり 、  - o  が 与え られ な かっ た 場合 ) に のみ 有効 で す 。 
利用 可能 な ソート の 値 は 、  Stats  の ドキュメント を ご覧 くださ い 。  プロファイル 内容 を 確認 する とき は 、 pstats  モジュール の メソッド を 使用 し ま す 。 
統計 データ の 読み込み は 次 の よう に し ま す 。 
Stats  クラス ( 上記 コード は この クラス の インスタンス を 生成 する だけ の 内容 で す ) は  p  に 読み込 ま れ た データ を 操作 し たり 、 表示 する ため の 各種 メソッド を 備え て い ま す 。 
先 に  profile . run ( )  を 実行 し た とき 表示 さ れ た 内容 と 同じ もの は 、 3 つ の メソッド ・ コール に よ り 実現 でき ま す 。 
最初 の メソッド は モジュール 名 から ファイル 名 の 前 に 付 い て い る パス 部分 を 取り除 き ま す 。 
2 番 目 の メソッド は エントリ を モジュール 名 \/ 行 番号 \/ 名前 に もとづ い て ソート し ま す ( 旧 プロファイラ と の 構文 上 の 互換 性 機能 ) 。 
3 番 目 の メソッド で 全て の 統計 情報 を 出力 し ま す 。 
次 の よう な ソート ・ メソッド も 使え ま す 。 
最初 の 行 で は リスト を 関数 名 で ソート し て い ま す 。  2 号 目 で 情報 を 出力 し て い ま す 。 
さらに 次 の 内容 も 試 し て くださ い 。 
この よう に する と 、 関数 が 消費 し た 累計 時間 で ソート さ れ 、 さらに その 上位 10  件 だけ を 表示 し ま す 。 
どの アルゴリズム が 時間 を 多 く 消費 し て い る の か 知 り た い とき は 、 この 方法 が 役 に 立 つ はず で す 。  ループ で 多く の 時間 を 消費 し て い る 関数 は どれ か 調べ た い とき は 、 次 の よう に し ま す 。 
上記 は 関数 の 実行 で 消費 し た 時間 で ソート さ れ 、 上位 10 個 の 関数 の 情報 が 表示 さ れ ま す 。  次 の 内容 も 試 し て くださ い 。 
この よう に する と ファイル 名 で ソート さ れ 、 その うち クラス の 初期 化 メソッド ( メソッド 名  _ _init_ _ ) に 関 する 統計 情報 だけ が 表示 さ れ ま す 。 
" . 5 "  は 上位  50 %  だけ の 選択 を 意味 し 、 さらに その 中 から 文字 列  init  を 含 む もの だけ が 表示 さ れ ま す 。  どの 関数 が どの 関数 を 呼び出 し て い る の か を 知 り た けれ ば 、 次 の よう に し ま す ( p  は 最後 に 実行 し た とき の 状態 で ソート さ れ て い ま す ) 。 
この よう に する と 、 各 関数 ごと の 呼出 し 側 関数 の 一覧 が 得 られ ま す 。  さらに 詳し い 機能 を 知 り た けれ ば マニュアル を 読 む か 、 次 の 関数 の 実行 結果 から 内容 を 推察 し て くださ い 。 
スクリプト と し て 起動 し た 場合 、 pstats  モジュール は プロファイル の ダンプ を 読み込 み 、 分析 する ため の 統計 ブラウザ と し て 動 き ま す 。 
シンプル な 行 指向 の インターフェース ( 
を 使 っ て 実装 ) と ヘルプ 機能 を 備え て い ま す 。 
この プロファイラ に は 2 つ の 基本 的 な 制限 事項 が あ り ま す 。 
ひと つ は 、 Python  インタプリタ に よ る  呼び出 し 、 リターン 、 例外 発生  と い う イベント の 連携 を 前提 に し て い る こと で す 。 
コンパイル 済み の  C  コード は インタプリタ の 管理 外 で 、 プロファイラ から は ` ` 見え ま せ ん ' ' 。 
( 組込 み 関数 を 含 む )  C  の コード に 費や さ れ た 時間 は 、 その  C  コード を 呼出 し た  Python  関数 の もの と し て 計上 さ れ る こと に な り ま す 。 
最も 明白 な 制限 は 、 ( 一般 に ) ` ` クロック ' ' は  . 00 1  秒 の 精度 しか な い と い う こと で す 。 
これ 以上 の 精度 で 計測 する こと は でき ま せ ん 。 
仮 に 充分 な 精度 が 得 られ た と し て も 、 ` ` エラー ' ' が 計測 の 平均 値 に 影響 を 及ぼ す こと が あ り ま す 。 
最初 の エラー を 取り除 い た と し て も 、 それ が また 別 の エラー を 引き起こ す 原因 と な り ま す 。  もう ひと つ の 問題 と し て 、 イベント を 検知 し て から プロファイラ が その 時刻 を 実際 に 取得 する まで に  ` ` いくら か の 時間 が かか る ' '  こと で す 。 
プロファイラ が 時刻 を 取得 する ( そして その 値 を 保存 する ) まで の 間 に 、 ユーザ コード が もう 一 度 処理 を 実行 し た とき に も 、 同様 の 遅延 が 発生 し ま す 。 
結果 的 に 多 く 呼び出 さ れ る 関数 また は 多数 の 関数 から 呼び出 さ れ る 関数 の 情報 に は この 種 の エラー が 蓄積 する 傾向 に あ り ま す 。 
この 種 の エラー に よ る 遅延 の 蓄積 は 一般 に クロック の 精度 を 越え る ( 1 クロック 以下 の タイミング ) ところ で 起き て い ま す が 、 一方 で この 時間 を 累計 可能 と い う こと が 大きな 意味 を 持 っ て い ま す 。 
この プロファイラ は プラットフォーム ごと に ( 平均 値 から ) 予想 さ れ る エラー に よ る 遅延 を 補正 する 機能 を 備え て い ま す 。  プロファイラ に 補正 を 施 す と ( 少 く とも 形式 的 に は ) 正確 さ が 増 し ま す が 、 とき に は 数値 が 負 の 値 に な っ て しま う こと も あ り ま す ( 呼出 し 回数 が 少 く 、 確率 の 神 が あなた に 意地 悪 を し た とき  : -)  ) 。 
プロファイル の 結果 に 負 の 値 が 出力 さ れ て も 驚 か な い で くださ い 。 
これ は 補正 を おこな っ た 場合 に のみ 現れ る こと で 、 実際 の 計測 結果 は 補正 を おこな わ な い 場合 より 、 より 正確 な はず だ から で す 。 
Stats  に は 次 の メソッド が あ り ま す 。 
この メソッド は  Stats  に ファイル 名 の 前 に 付 い て い る すべて の パス 情報 を 取り除 か せ る ため の もの で す 。 
出力 の 幅 を 80 文字 以内 に 収め た い とき に 重宝 し ま す 。 
この メソッド は オブジェクト を 変更 する ため 、 取り除 い た パス 情報 は 失 わ れ ま す 。 
パス 情報 除去 の 操作 後 、 オブジェクト が 保持 する データ エントリ は 、 オブジェクト の 初期 化 、 ロード 直後 と 同じ よう に ` ` ランダム に ' ' 並 ん で い ま す 。 
strip_dirs ( )  を 実行 し た 結果 、 2 つ の 関数 名 が 区別 でき な い ( 両者 が 同じ ファイル の 同じ 行 番号 で 同じ 関数 名 と な っ た ) 場合 、 一 つ の エントリ に 合算 さ れ さ れ ま す 。 
Stats  クラス の この メソッド は 、 既存 の プロファイリング ・ オブジェクト に 情報 を 追加 し ま す 。 
引数 は 対応 する バージョン の  profile . run ( )  に よ っ て 生成 さ れ た ファイル の 名前 で な く て は な り ま せ ん 。 
関数 の 名前 が 区別 でき な い ( ファイル 名 、 行 番号 、 関数 名 が 同じ ) 場合 、 一 つ の 関数 の 統計 情報 と し て 合算 さ れ ま す 。 
Stats  オブジェクト に 読み込 ま れ た データ を 、 ファイル 名 filename  の ファイル に 保存 し ま す 。 
ファイル が 存在 し な い 場合 新た に 作成 さ れ 、 すでに 存在 する 場合 に は 上書き さ れ ま す 。 
この メソッド は  profile . Profile  クラス の 同名 の メソッド と 等価 で す 。  バージョン  2 . 3  で  新た に 追加  さ れ た 仕様 で す 。 
この メソッド は  Stats  オブジェクト を 指定 し た 基準 に 従 っ て ソート し ま す 。 
引数 に は 通常 ソート の キー に し た い 項目 を 示 す 文字 列 を 指定 し ま す ( 例 : 'time' や ' name ' など ) 。  2 つ 以上 の キー が 指定 さ れ た 場合 、 2 つ 目 以降 の キー は 、 それ 以前 の キー で 同等 と な っ た データ エントリ の 再 ソート に 使 わ れ ま す 。 
たとえば  sort_stats ( ' name ', 'file')  と し た 場合 、 まず すべて の エントリ が 関数 名 で ソート さ れ た 後 、 同じ 関数 名 で 複数 の エントリ が あ れ ば ファイル 名 で ソート さ れ る の で す 。  キー 名 に は 他 の キー と 判別 可能 で あ る 限り 綴り を 省略 し て 名前 を 指定 でき ま す 。 
現 バージョン で 定義 さ れ て い る キー 名 は 以下 の 通り で す 。 
正式 名 
内容 
呼び出 し 回数 
合計 時間 
ファイル 名 
モジュール 名 
プリミティブ な 呼び出し の 回数 
行 番号 
関数 名 
関数 名 \/ ファイル 名 \/ 行 番号 
標準 名 
内部 時間 
すべて の 統計 情報 の ソート 結果 は 降順 ( 最も 多 く 時間 を 消費 し た もの が 一番 上 に 来る ) と な る こと に 注意 し て くださ い 。  ただし 、 関数 名 、 ファイル 名 、 行数 に 関 し て は 昇順 ( アルファベット 順 ) に な り ま す 。 
'nfl ' と 'stdname ' は やや 異な る 点 が あ り ま す 。  標準 名 ( standard  name ) と は 表示 欄 の 名前 な の で す が 、 埋め込 ま れ た 行 番号 の 文字 コード 順 で ソート さ れ ま す 。 
たとえば 、 ( ファイル 名 が 同じ で ) 3 、 20 、 40 と い う 行 番号 の エントリ が あ っ た 場合 、 20 、 30 、 40  の 順 に 表示 さ れ ま す 。 
一方  'nfl ' は 行 番号 を 数値 と し て 比較 し ま す 。 
結果 的 に 、 sort_stats ( 'nfl')  は sort_stats ( ' name ', 'file ' , 'line ')  と 指定 し た 場合 と 同じ に な り ま す 。  旧 バージョン の プロファイラ と の 互換 性 の ため 、 数値 を 引数 に 使 っ た  - 1 、  0 、  1 、  2  の 形式 も サポート し て い ま す 。 
それぞれ 'stdname ' 、 ' calls ' 、 'time' 、 'cumulative '  と し て 処理 さ れ ま す 。 
引数 を この 旧 形式 で 指定 し た 場合 、 最初 の キー ( 数値 キー ) だけ が 使 わ れ 、 複数 の キー を 指定 し て も 2 番 目 以降 は 無視 さ れ ま す 。 
Stats  クラス の この メソッド は 、 オブジェクト 内 の 情報 の リスト を 逆順 に ソート し ま す 。 
これ は 旧 プロファイラ と の 互換 性 の ため に 用意 さ れ て い ま す 。 
現在 は 選択 し た キー に 応 じ て 昇順 、 降順 が 適切 に 選 ば れ る ため 、 この メソッド の 必要 性 は ほとんど な い はず で す 。 
Stats  クラス の この メソッド は 、 profile . run ( )  の 項 で 述べ た  プロファイル の レポート を 出力 し ま す 。 
出力 する データ の 順序 は オブジェクト に 対 し 最後 に おこな っ た  sort_stats ( )  に よ る 操作 に もとづ い た もの に な り ま す ( add ( )  と  strip_dirs ( )  に よ る 制限 に も 支配 さ れ ま す ) 。  引数 は 一覧 に 大きな 制限 を 加え る こと に な り ま す 。 
初期 段階 で リスト は プロファイル し た 関数 の 完全 な 情報 を 持 っ て い ま す 。 
制限 の 指定 は ( 行数 を 指定 する ) 整数 、 ( 行 の パーセンテージ を 指定 する )  0 . 0  から  1 . 0  まで の 割合 を 指定 する 小数 、 ( 出力 する  standard  name  に マッチ する ) 正規 表現 の いずれ か を 使 っ て おこな い ま す 。  正規 表現 は  Python  1 . 5 b 1  で 導入 さ れ た 
モジュール で 使え る  Perl  スタイル の もの で す 。 
複数 の 制限 は 指定 さ れ た 場合 、 それ は 指定 の 順 に 適用 さ れ ま す 。  たとえば 次 の よう に な り ま す 。 
上記 の 場合 まず 出力 する リスト は 全体 の 10 % に 制限 さ れ 、 さらに ファイル 名 の 一部 に 文字 列  . * foo:  を 持 つ 関数 だけ が 出力 さ れ ま す 。 
こちら の 例 の 場合 、 リスト は まず ファイル 名 に  . * foo:  を 持 つ 関数 だけ に 制限 さ れ 、 その 中 の 最初 の  10 %  だけ が 出力 さ れ ま す 。  print_ callers
Stats  クラス の この メソッド は 、 プロファイル の データベース の 中 から 何 ら か の 関数 呼び出し を おこな っ た 関数 すべて を 出力 し ま す 。 
出力 の 順序 は  print_stats ( )  に よ っ て 与え られ る もの と 同じ で す 。  出力 を 制限 する 引数 も 同じ で す 。 
呼出 し 側 関数 の 後 に パーレン で 囲 ま れ て 表示 さ れ る 数値 は 呼出し が 何 回 おこな わ れ た か を 示 す もの で す 。 
続 い て パーレン なし で 表示 さ れ る 数値 は 、 関数 が 消費 し た 時間 の 合計 で す 。 
Stats  クラス の この メソッド は 指定 し た 関数 から 呼出 さ れ た 関数 の リスト を 出力 し ま す 。 
呼出し 側 、 呼出 さ れ る 側 の 方向 は 逆 で す が 、 引数 と 出力 の 順序 に 関 し て は  print_ callers ( )  と 同じ で す 。 
現 バージョン の  Python  の Python  で は 不要 で す 。 
Python  が  None  以外 の 使 わ れ な かっ た 結果 を 表示 する とき に 使 わ れ た もの で 、 旧 バージョン と の 互換 性 の ため だけ に 定義 さ れ て い ま す 。 
10 . 1  プロファイラ と は 
10 .  Python  プロファイラ 
